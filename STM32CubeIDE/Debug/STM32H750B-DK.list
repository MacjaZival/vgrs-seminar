
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002d064  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000038ac  9002d308  9002d308  00031308  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000007e4  90030bb4  90030bb4  00034bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  90031398  90031398  000de4d8  2**0
                  CONTENTS
  6 .ARM          00000008  90031398  90031398  00035398  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  900313a0  900313a0  000de4d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000020  900313a0  900313a0  000353a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  900313c0  900313c0  000353c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         0000038c  24000000  900313c8  00036000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_ScratchbufferA 00000100  240003a0  90031754  000363a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferB 00000100  240004a0  90031854  000364a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00024d40  240005a0  90031954  000365a0  2**3
                  ALLOC
 14 ._user_heap_stack 00002000  240252e0  90031954  000372e0  2**0
                  ALLOC
 15 .ARM.attributes 0000002e  00000000  00000000  000de4d8  2**0
                  CONTENTS, READONLY
 16 FontFlashSection 000056cc  90200000  90200000  00037000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TextFlashSection 0000002c  902056cc  902056cc  0003c6cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 ExtFlashSection 000a1de0  902056f8  902056f8  0003c6f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000df000  2**2
                  ALLOC
 20 .debug_line   0008a9a9  00000000  00000000  000de506  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  00168eaf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   0011ecc2  00000000  00000000  00168f12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 0001d565  00000000  00000000  00287bd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 00003fa8  00000000  00000000  002a5140  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001a5b94  00000000  00000000  002a90e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 00007102  00000000  00000000  0044ec7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  00050639  00000000  00000000  00455d7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  004a63b7  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000baf0  00000000  00000000  004a647c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 0003aaff  00000000  00000000  004b1f6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	240005a0 	.word	0x240005a0
900002bc:	00000000 	.word	0x00000000
900002c0:	9002d2ec 	.word	0x9002d2ec

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	240005a4 	.word	0x240005a4
900002dc:	9002d2ec 	.word	0x9002d2ec

900002e0 <strlen>:
900002e0:	4603      	mov	r3, r0
900002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
900002e6:	2a00      	cmp	r2, #0
900002e8:	d1fb      	bne.n	900002e2 <strlen+0x2>
900002ea:	1a18      	subs	r0, r3, r0
900002ec:	3801      	subs	r0, #1
900002ee:	4770      	bx	lr

900002f0 <memchr>:
900002f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002f4:	2a10      	cmp	r2, #16
900002f6:	db2b      	blt.n	90000350 <memchr+0x60>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	d008      	beq.n	90000310 <memchr+0x20>
900002fe:	f810 3b01 	ldrb.w	r3, [r0], #1
90000302:	3a01      	subs	r2, #1
90000304:	428b      	cmp	r3, r1
90000306:	d02d      	beq.n	90000364 <memchr+0x74>
90000308:	f010 0f07 	tst.w	r0, #7
9000030c:	b342      	cbz	r2, 90000360 <memchr+0x70>
9000030e:	d1f6      	bne.n	900002fe <memchr+0xe>
90000310:	b4f0      	push	{r4, r5, r6, r7}
90000312:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000316:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000031a:	f022 0407 	bic.w	r4, r2, #7
9000031e:	f07f 0700 	mvns.w	r7, #0
90000322:	2300      	movs	r3, #0
90000324:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000328:	3c08      	subs	r4, #8
9000032a:	ea85 0501 	eor.w	r5, r5, r1
9000032e:	ea86 0601 	eor.w	r6, r6, r1
90000332:	fa85 f547 	uadd8	r5, r5, r7
90000336:	faa3 f587 	sel	r5, r3, r7
9000033a:	fa86 f647 	uadd8	r6, r6, r7
9000033e:	faa5 f687 	sel	r6, r5, r7
90000342:	b98e      	cbnz	r6, 90000368 <memchr+0x78>
90000344:	d1ee      	bne.n	90000324 <memchr+0x34>
90000346:	bcf0      	pop	{r4, r5, r6, r7}
90000348:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000034c:	f002 0207 	and.w	r2, r2, #7
90000350:	b132      	cbz	r2, 90000360 <memchr+0x70>
90000352:	f810 3b01 	ldrb.w	r3, [r0], #1
90000356:	3a01      	subs	r2, #1
90000358:	ea83 0301 	eor.w	r3, r3, r1
9000035c:	b113      	cbz	r3, 90000364 <memchr+0x74>
9000035e:	d1f8      	bne.n	90000352 <memchr+0x62>
90000360:	2000      	movs	r0, #0
90000362:	4770      	bx	lr
90000364:	3801      	subs	r0, #1
90000366:	4770      	bx	lr
90000368:	2d00      	cmp	r5, #0
9000036a:	bf06      	itte	eq
9000036c:	4635      	moveq	r5, r6
9000036e:	3803      	subeq	r0, #3
90000370:	3807      	subne	r0, #7
90000372:	f015 0f01 	tst.w	r5, #1
90000376:	d107      	bne.n	90000388 <memchr+0x98>
90000378:	3001      	adds	r0, #1
9000037a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000037e:	bf02      	ittt	eq
90000380:	3001      	addeq	r0, #1
90000382:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000386:	3001      	addeq	r0, #1
90000388:	bcf0      	pop	{r4, r5, r6, r7}
9000038a:	3801      	subs	r0, #1
9000038c:	4770      	bx	lr
9000038e:	bf00      	nop

90000390 <__aeabi_drsub>:
90000390:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000394:	e002      	b.n	9000039c <__adddf3>
90000396:	bf00      	nop

90000398 <__aeabi_dsub>:
90000398:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000039c <__adddf3>:
9000039c:	b530      	push	{r4, r5, lr}
9000039e:	ea4f 0441 	mov.w	r4, r1, lsl #1
900003a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
900003a6:	ea94 0f05 	teq	r4, r5
900003aa:	bf08      	it	eq
900003ac:	ea90 0f02 	teqeq	r0, r2
900003b0:	bf1f      	itttt	ne
900003b2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003b6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003c2:	f000 80e2 	beq.w	9000058a <__adddf3+0x1ee>
900003c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003ce:	bfb8      	it	lt
900003d0:	426d      	neglt	r5, r5
900003d2:	dd0c      	ble.n	900003ee <__adddf3+0x52>
900003d4:	442c      	add	r4, r5
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	ea82 0000 	eor.w	r0, r2, r0
900003e2:	ea83 0101 	eor.w	r1, r3, r1
900003e6:	ea80 0202 	eor.w	r2, r0, r2
900003ea:	ea81 0303 	eor.w	r3, r1, r3
900003ee:	2d36      	cmp	r5, #54	@ 0x36
900003f0:	bf88      	it	hi
900003f2:	bd30      	pophi	{r4, r5, pc}
900003f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
90000400:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
90000404:	d002      	beq.n	9000040c <__adddf3+0x70>
90000406:	4240      	negs	r0, r0
90000408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000040c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000410:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000414:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000418:	d002      	beq.n	90000420 <__adddf3+0x84>
9000041a:	4252      	negs	r2, r2
9000041c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000420:	ea94 0f05 	teq	r4, r5
90000424:	f000 80a7 	beq.w	90000576 <__adddf3+0x1da>
90000428:	f1a4 0401 	sub.w	r4, r4, #1
9000042c:	f1d5 0e20 	rsbs	lr, r5, #32
90000430:	db0d      	blt.n	9000044e <__adddf3+0xb2>
90000432:	fa02 fc0e 	lsl.w	ip, r2, lr
90000436:	fa22 f205 	lsr.w	r2, r2, r5
9000043a:	1880      	adds	r0, r0, r2
9000043c:	f141 0100 	adc.w	r1, r1, #0
90000440:	fa03 f20e 	lsl.w	r2, r3, lr
90000444:	1880      	adds	r0, r0, r2
90000446:	fa43 f305 	asr.w	r3, r3, r5
9000044a:	4159      	adcs	r1, r3
9000044c:	e00e      	b.n	9000046c <__adddf3+0xd0>
9000044e:	f1a5 0520 	sub.w	r5, r5, #32
90000452:	f10e 0e20 	add.w	lr, lr, #32
90000456:	2a01      	cmp	r2, #1
90000458:	fa03 fc0e 	lsl.w	ip, r3, lr
9000045c:	bf28      	it	cs
9000045e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000462:	fa43 f305 	asr.w	r3, r3, r5
90000466:	18c0      	adds	r0, r0, r3
90000468:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000046c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000470:	d507      	bpl.n	90000482 <__adddf3+0xe6>
90000472:	f04f 0e00 	mov.w	lr, #0
90000476:	f1dc 0c00 	rsbs	ip, ip, #0
9000047a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000047e:	eb6e 0101 	sbc.w	r1, lr, r1
90000482:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000486:	d31b      	bcc.n	900004c0 <__adddf3+0x124>
90000488:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000048c:	d30c      	bcc.n	900004a8 <__adddf3+0x10c>
9000048e:	0849      	lsrs	r1, r1, #1
90000490:	ea5f 0030 	movs.w	r0, r0, rrx
90000494:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000498:	f104 0401 	add.w	r4, r4, #1
9000049c:	ea4f 5244 	mov.w	r2, r4, lsl #21
900004a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
900004a4:	f080 809a 	bcs.w	900005dc <__adddf3+0x240>
900004a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
900004ac:	bf08      	it	eq
900004ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004b2:	f150 0000 	adcs.w	r0, r0, #0
900004b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004ba:	ea41 0105 	orr.w	r1, r1, r5
900004be:	bd30      	pop	{r4, r5, pc}
900004c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004c4:	4140      	adcs	r0, r0
900004c6:	eb41 0101 	adc.w	r1, r1, r1
900004ca:	3c01      	subs	r4, #1
900004cc:	bf28      	it	cs
900004ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004d2:	d2e9      	bcs.n	900004a8 <__adddf3+0x10c>
900004d4:	f091 0f00 	teq	r1, #0
900004d8:	bf04      	itt	eq
900004da:	4601      	moveq	r1, r0
900004dc:	2000      	moveq	r0, #0
900004de:	fab1 f381 	clz	r3, r1
900004e2:	bf08      	it	eq
900004e4:	3320      	addeq	r3, #32
900004e6:	f1a3 030b 	sub.w	r3, r3, #11
900004ea:	f1b3 0220 	subs.w	r2, r3, #32
900004ee:	da0c      	bge.n	9000050a <__adddf3+0x16e>
900004f0:	320c      	adds	r2, #12
900004f2:	dd08      	ble.n	90000506 <__adddf3+0x16a>
900004f4:	f102 0c14 	add.w	ip, r2, #20
900004f8:	f1c2 020c 	rsb	r2, r2, #12
900004fc:	fa01 f00c 	lsl.w	r0, r1, ip
90000500:	fa21 f102 	lsr.w	r1, r1, r2
90000504:	e00c      	b.n	90000520 <__adddf3+0x184>
90000506:	f102 0214 	add.w	r2, r2, #20
9000050a:	bfd8      	it	le
9000050c:	f1c2 0c20 	rsble	ip, r2, #32
90000510:	fa01 f102 	lsl.w	r1, r1, r2
90000514:	fa20 fc0c 	lsr.w	ip, r0, ip
90000518:	bfdc      	itt	le
9000051a:	ea41 010c 	orrle.w	r1, r1, ip
9000051e:	4090      	lslle	r0, r2
90000520:	1ae4      	subs	r4, r4, r3
90000522:	bfa2      	ittt	ge
90000524:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000528:	4329      	orrge	r1, r5
9000052a:	bd30      	popge	{r4, r5, pc}
9000052c:	ea6f 0404 	mvn.w	r4, r4
90000530:	3c1f      	subs	r4, #31
90000532:	da1c      	bge.n	9000056e <__adddf3+0x1d2>
90000534:	340c      	adds	r4, #12
90000536:	dc0e      	bgt.n	90000556 <__adddf3+0x1ba>
90000538:	f104 0414 	add.w	r4, r4, #20
9000053c:	f1c4 0220 	rsb	r2, r4, #32
90000540:	fa20 f004 	lsr.w	r0, r0, r4
90000544:	fa01 f302 	lsl.w	r3, r1, r2
90000548:	ea40 0003 	orr.w	r0, r0, r3
9000054c:	fa21 f304 	lsr.w	r3, r1, r4
90000550:	ea45 0103 	orr.w	r1, r5, r3
90000554:	bd30      	pop	{r4, r5, pc}
90000556:	f1c4 040c 	rsb	r4, r4, #12
9000055a:	f1c4 0220 	rsb	r2, r4, #32
9000055e:	fa20 f002 	lsr.w	r0, r0, r2
90000562:	fa01 f304 	lsl.w	r3, r1, r4
90000566:	ea40 0003 	orr.w	r0, r0, r3
9000056a:	4629      	mov	r1, r5
9000056c:	bd30      	pop	{r4, r5, pc}
9000056e:	fa21 f004 	lsr.w	r0, r1, r4
90000572:	4629      	mov	r1, r5
90000574:	bd30      	pop	{r4, r5, pc}
90000576:	f094 0f00 	teq	r4, #0
9000057a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000057e:	bf06      	itte	eq
90000580:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000584:	3401      	addeq	r4, #1
90000586:	3d01      	subne	r5, #1
90000588:	e74e      	b.n	90000428 <__adddf3+0x8c>
9000058a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000058e:	bf18      	it	ne
90000590:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000594:	d029      	beq.n	900005ea <__adddf3+0x24e>
90000596:	ea94 0f05 	teq	r4, r5
9000059a:	bf08      	it	eq
9000059c:	ea90 0f02 	teqeq	r0, r2
900005a0:	d005      	beq.n	900005ae <__adddf3+0x212>
900005a2:	ea54 0c00 	orrs.w	ip, r4, r0
900005a6:	bf04      	itt	eq
900005a8:	4619      	moveq	r1, r3
900005aa:	4610      	moveq	r0, r2
900005ac:	bd30      	pop	{r4, r5, pc}
900005ae:	ea91 0f03 	teq	r1, r3
900005b2:	bf1e      	ittt	ne
900005b4:	2100      	movne	r1, #0
900005b6:	2000      	movne	r0, #0
900005b8:	bd30      	popne	{r4, r5, pc}
900005ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005be:	d105      	bne.n	900005cc <__adddf3+0x230>
900005c0:	0040      	lsls	r0, r0, #1
900005c2:	4149      	adcs	r1, r1
900005c4:	bf28      	it	cs
900005c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ca:	bd30      	pop	{r4, r5, pc}
900005cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005d0:	bf3c      	itt	cc
900005d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005d6:	bd30      	popcc	{r4, r5, pc}
900005d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005e4:	f04f 0000 	mov.w	r0, #0
900005e8:	bd30      	pop	{r4, r5, pc}
900005ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005ee:	bf1a      	itte	ne
900005f0:	4619      	movne	r1, r3
900005f2:	4610      	movne	r0, r2
900005f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005f8:	bf1c      	itt	ne
900005fa:	460b      	movne	r3, r1
900005fc:	4602      	movne	r2, r0
900005fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
90000602:	bf06      	itte	eq
90000604:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
90000608:	ea91 0f03 	teqeq	r1, r3
9000060c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000610:	bd30      	pop	{r4, r5, pc}
90000612:	bf00      	nop

90000614 <__aeabi_ui2d>:
90000614:	f090 0f00 	teq	r0, #0
90000618:	bf04      	itt	eq
9000061a:	2100      	moveq	r1, #0
9000061c:	4770      	bxeq	lr
9000061e:	b530      	push	{r4, r5, lr}
90000620:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000624:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000628:	f04f 0500 	mov.w	r5, #0
9000062c:	f04f 0100 	mov.w	r1, #0
90000630:	e750      	b.n	900004d4 <__adddf3+0x138>
90000632:	bf00      	nop

90000634 <__aeabi_i2d>:
90000634:	f090 0f00 	teq	r0, #0
90000638:	bf04      	itt	eq
9000063a:	2100      	moveq	r1, #0
9000063c:	4770      	bxeq	lr
9000063e:	b530      	push	{r4, r5, lr}
90000640:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000644:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000648:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000064c:	bf48      	it	mi
9000064e:	4240      	negmi	r0, r0
90000650:	f04f 0100 	mov.w	r1, #0
90000654:	e73e      	b.n	900004d4 <__adddf3+0x138>
90000656:	bf00      	nop

90000658 <__aeabi_f2d>:
90000658:	0042      	lsls	r2, r0, #1
9000065a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000065e:	ea4f 0131 	mov.w	r1, r1, rrx
90000662:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000666:	bf1f      	itttt	ne
90000668:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000066c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000670:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000674:	4770      	bxne	lr
90000676:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000067a:	bf08      	it	eq
9000067c:	4770      	bxeq	lr
9000067e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000682:	bf04      	itt	eq
90000684:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000688:	4770      	bxeq	lr
9000068a:	b530      	push	{r4, r5, lr}
9000068c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000690:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000694:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000698:	e71c      	b.n	900004d4 <__adddf3+0x138>
9000069a:	bf00      	nop

9000069c <__aeabi_ul2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f04f 0500 	mov.w	r5, #0
900006aa:	e00a      	b.n	900006c2 <__aeabi_l2d+0x16>

900006ac <__aeabi_l2d>:
900006ac:	ea50 0201 	orrs.w	r2, r0, r1
900006b0:	bf08      	it	eq
900006b2:	4770      	bxeq	lr
900006b4:	b530      	push	{r4, r5, lr}
900006b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006ba:	d502      	bpl.n	900006c2 <__aeabi_l2d+0x16>
900006bc:	4240      	negs	r0, r0
900006be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006ce:	f43f aed8 	beq.w	90000482 <__adddf3+0xe6>
900006d2:	f04f 0203 	mov.w	r2, #3
900006d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006da:	bf18      	it	ne
900006dc:	3203      	addne	r2, #3
900006de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006e2:	bf18      	it	ne
900006e4:	3203      	addne	r2, #3
900006e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006ea:	f1c2 0320 	rsb	r3, r2, #32
900006ee:	fa00 fc03 	lsl.w	ip, r0, r3
900006f2:	fa20 f002 	lsr.w	r0, r0, r2
900006f6:	fa01 fe03 	lsl.w	lr, r1, r3
900006fa:	ea40 000e 	orr.w	r0, r0, lr
900006fe:	fa21 f102 	lsr.w	r1, r1, r2
90000702:	4414      	add	r4, r2
90000704:	e6bd      	b.n	90000482 <__adddf3+0xe6>
90000706:	bf00      	nop

90000708 <__aeabi_ldivmod>:
90000708:	b97b      	cbnz	r3, 9000072a <__aeabi_ldivmod+0x22>
9000070a:	b972      	cbnz	r2, 9000072a <__aeabi_ldivmod+0x22>
9000070c:	2900      	cmp	r1, #0
9000070e:	bfbe      	ittt	lt
90000710:	2000      	movlt	r0, #0
90000712:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000716:	e006      	blt.n	90000726 <__aeabi_ldivmod+0x1e>
90000718:	bf08      	it	eq
9000071a:	2800      	cmpeq	r0, #0
9000071c:	bf1c      	itt	ne
9000071e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000722:	f04f 30ff 	movne.w	r0, #4294967295
90000726:	f000 b99d 	b.w	90000a64 <__aeabi_idiv0>
9000072a:	f1ad 0c08 	sub.w	ip, sp, #8
9000072e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000732:	2900      	cmp	r1, #0
90000734:	db09      	blt.n	9000074a <__aeabi_ldivmod+0x42>
90000736:	2b00      	cmp	r3, #0
90000738:	db1a      	blt.n	90000770 <__aeabi_ldivmod+0x68>
9000073a:	f000 f835 	bl	900007a8 <__udivmoddi4>
9000073e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000742:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000746:	b004      	add	sp, #16
90000748:	4770      	bx	lr
9000074a:	4240      	negs	r0, r0
9000074c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000750:	2b00      	cmp	r3, #0
90000752:	db1b      	blt.n	9000078c <__aeabi_ldivmod+0x84>
90000754:	f000 f828 	bl	900007a8 <__udivmoddi4>
90000758:	f8dd e004 	ldr.w	lr, [sp, #4]
9000075c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000760:	b004      	add	sp, #16
90000762:	4240      	negs	r0, r0
90000764:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000768:	4252      	negs	r2, r2
9000076a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000076e:	4770      	bx	lr
90000770:	4252      	negs	r2, r2
90000772:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000776:	f000 f817 	bl	900007a8 <__udivmoddi4>
9000077a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000077e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000782:	b004      	add	sp, #16
90000784:	4240      	negs	r0, r0
90000786:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000078a:	4770      	bx	lr
9000078c:	4252      	negs	r2, r2
9000078e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000792:	f000 f809 	bl	900007a8 <__udivmoddi4>
90000796:	f8dd e004 	ldr.w	lr, [sp, #4]
9000079a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000079e:	b004      	add	sp, #16
900007a0:	4252      	negs	r2, r2
900007a2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
900007a6:	4770      	bx	lr

900007a8 <__udivmoddi4>:
900007a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007ac:	9d08      	ldr	r5, [sp, #32]
900007ae:	460c      	mov	r4, r1
900007b0:	2b00      	cmp	r3, #0
900007b2:	d14e      	bne.n	90000852 <__udivmoddi4+0xaa>
900007b4:	4694      	mov	ip, r2
900007b6:	458c      	cmp	ip, r1
900007b8:	4686      	mov	lr, r0
900007ba:	fab2 f282 	clz	r2, r2
900007be:	d962      	bls.n	90000886 <__udivmoddi4+0xde>
900007c0:	b14a      	cbz	r2, 900007d6 <__udivmoddi4+0x2e>
900007c2:	f1c2 0320 	rsb	r3, r2, #32
900007c6:	4091      	lsls	r1, r2
900007c8:	fa20 f303 	lsr.w	r3, r0, r3
900007cc:	fa0c fc02 	lsl.w	ip, ip, r2
900007d0:	4319      	orrs	r1, r3
900007d2:	fa00 fe02 	lsl.w	lr, r0, r2
900007d6:	ea4f 471c 	mov.w	r7, ip, lsr #16
900007da:	fa1f f68c 	uxth.w	r6, ip
900007de:	fbb1 f4f7 	udiv	r4, r1, r7
900007e2:	ea4f 431e 	mov.w	r3, lr, lsr #16
900007e6:	fb07 1114 	mls	r1, r7, r4, r1
900007ea:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900007ee:	fb04 f106 	mul.w	r1, r4, r6
900007f2:	4299      	cmp	r1, r3
900007f4:	d90a      	bls.n	9000080c <__udivmoddi4+0x64>
900007f6:	eb1c 0303 	adds.w	r3, ip, r3
900007fa:	f104 30ff 	add.w	r0, r4, #4294967295
900007fe:	f080 8112 	bcs.w	90000a26 <__udivmoddi4+0x27e>
90000802:	4299      	cmp	r1, r3
90000804:	f240 810f 	bls.w	90000a26 <__udivmoddi4+0x27e>
90000808:	3c02      	subs	r4, #2
9000080a:	4463      	add	r3, ip
9000080c:	1a59      	subs	r1, r3, r1
9000080e:	fa1f f38e 	uxth.w	r3, lr
90000812:	fbb1 f0f7 	udiv	r0, r1, r7
90000816:	fb07 1110 	mls	r1, r7, r0, r1
9000081a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000081e:	fb00 f606 	mul.w	r6, r0, r6
90000822:	429e      	cmp	r6, r3
90000824:	d90a      	bls.n	9000083c <__udivmoddi4+0x94>
90000826:	eb1c 0303 	adds.w	r3, ip, r3
9000082a:	f100 31ff 	add.w	r1, r0, #4294967295
9000082e:	f080 80fc 	bcs.w	90000a2a <__udivmoddi4+0x282>
90000832:	429e      	cmp	r6, r3
90000834:	f240 80f9 	bls.w	90000a2a <__udivmoddi4+0x282>
90000838:	4463      	add	r3, ip
9000083a:	3802      	subs	r0, #2
9000083c:	1b9b      	subs	r3, r3, r6
9000083e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
90000842:	2100      	movs	r1, #0
90000844:	b11d      	cbz	r5, 9000084e <__udivmoddi4+0xa6>
90000846:	40d3      	lsrs	r3, r2
90000848:	2200      	movs	r2, #0
9000084a:	e9c5 3200 	strd	r3, r2, [r5]
9000084e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000852:	428b      	cmp	r3, r1
90000854:	d905      	bls.n	90000862 <__udivmoddi4+0xba>
90000856:	b10d      	cbz	r5, 9000085c <__udivmoddi4+0xb4>
90000858:	e9c5 0100 	strd	r0, r1, [r5]
9000085c:	2100      	movs	r1, #0
9000085e:	4608      	mov	r0, r1
90000860:	e7f5      	b.n	9000084e <__udivmoddi4+0xa6>
90000862:	fab3 f183 	clz	r1, r3
90000866:	2900      	cmp	r1, #0
90000868:	d146      	bne.n	900008f8 <__udivmoddi4+0x150>
9000086a:	42a3      	cmp	r3, r4
9000086c:	d302      	bcc.n	90000874 <__udivmoddi4+0xcc>
9000086e:	4290      	cmp	r0, r2
90000870:	f0c0 80f0 	bcc.w	90000a54 <__udivmoddi4+0x2ac>
90000874:	1a86      	subs	r6, r0, r2
90000876:	eb64 0303 	sbc.w	r3, r4, r3
9000087a:	2001      	movs	r0, #1
9000087c:	2d00      	cmp	r5, #0
9000087e:	d0e6      	beq.n	9000084e <__udivmoddi4+0xa6>
90000880:	e9c5 6300 	strd	r6, r3, [r5]
90000884:	e7e3      	b.n	9000084e <__udivmoddi4+0xa6>
90000886:	2a00      	cmp	r2, #0
90000888:	f040 8090 	bne.w	900009ac <__udivmoddi4+0x204>
9000088c:	eba1 040c 	sub.w	r4, r1, ip
90000890:	ea4f 481c 	mov.w	r8, ip, lsr #16
90000894:	fa1f f78c 	uxth.w	r7, ip
90000898:	2101      	movs	r1, #1
9000089a:	fbb4 f6f8 	udiv	r6, r4, r8
9000089e:	ea4f 431e 	mov.w	r3, lr, lsr #16
900008a2:	fb08 4416 	mls	r4, r8, r6, r4
900008a6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008aa:	fb07 f006 	mul.w	r0, r7, r6
900008ae:	4298      	cmp	r0, r3
900008b0:	d908      	bls.n	900008c4 <__udivmoddi4+0x11c>
900008b2:	eb1c 0303 	adds.w	r3, ip, r3
900008b6:	f106 34ff 	add.w	r4, r6, #4294967295
900008ba:	d202      	bcs.n	900008c2 <__udivmoddi4+0x11a>
900008bc:	4298      	cmp	r0, r3
900008be:	f200 80cd 	bhi.w	90000a5c <__udivmoddi4+0x2b4>
900008c2:	4626      	mov	r6, r4
900008c4:	1a1c      	subs	r4, r3, r0
900008c6:	fa1f f38e 	uxth.w	r3, lr
900008ca:	fbb4 f0f8 	udiv	r0, r4, r8
900008ce:	fb08 4410 	mls	r4, r8, r0, r4
900008d2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008d6:	fb00 f707 	mul.w	r7, r0, r7
900008da:	429f      	cmp	r7, r3
900008dc:	d908      	bls.n	900008f0 <__udivmoddi4+0x148>
900008de:	eb1c 0303 	adds.w	r3, ip, r3
900008e2:	f100 34ff 	add.w	r4, r0, #4294967295
900008e6:	d202      	bcs.n	900008ee <__udivmoddi4+0x146>
900008e8:	429f      	cmp	r7, r3
900008ea:	f200 80b0 	bhi.w	90000a4e <__udivmoddi4+0x2a6>
900008ee:	4620      	mov	r0, r4
900008f0:	1bdb      	subs	r3, r3, r7
900008f2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
900008f6:	e7a5      	b.n	90000844 <__udivmoddi4+0x9c>
900008f8:	f1c1 0620 	rsb	r6, r1, #32
900008fc:	408b      	lsls	r3, r1
900008fe:	fa22 f706 	lsr.w	r7, r2, r6
90000902:	431f      	orrs	r7, r3
90000904:	fa20 fc06 	lsr.w	ip, r0, r6
90000908:	fa04 f301 	lsl.w	r3, r4, r1
9000090c:	ea43 030c 	orr.w	r3, r3, ip
90000910:	40f4      	lsrs	r4, r6
90000912:	fa00 f801 	lsl.w	r8, r0, r1
90000916:	0c38      	lsrs	r0, r7, #16
90000918:	ea4f 4913 	mov.w	r9, r3, lsr #16
9000091c:	fbb4 fef0 	udiv	lr, r4, r0
90000920:	fa1f fc87 	uxth.w	ip, r7
90000924:	fb00 441e 	mls	r4, r0, lr, r4
90000928:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
9000092c:	fb0e f90c 	mul.w	r9, lr, ip
90000930:	45a1      	cmp	r9, r4
90000932:	fa02 f201 	lsl.w	r2, r2, r1
90000936:	d90a      	bls.n	9000094e <__udivmoddi4+0x1a6>
90000938:	193c      	adds	r4, r7, r4
9000093a:	f10e 3aff 	add.w	sl, lr, #4294967295
9000093e:	f080 8084 	bcs.w	90000a4a <__udivmoddi4+0x2a2>
90000942:	45a1      	cmp	r9, r4
90000944:	f240 8081 	bls.w	90000a4a <__udivmoddi4+0x2a2>
90000948:	f1ae 0e02 	sub.w	lr, lr, #2
9000094c:	443c      	add	r4, r7
9000094e:	eba4 0409 	sub.w	r4, r4, r9
90000952:	fa1f f983 	uxth.w	r9, r3
90000956:	fbb4 f3f0 	udiv	r3, r4, r0
9000095a:	fb00 4413 	mls	r4, r0, r3, r4
9000095e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
90000962:	fb03 fc0c 	mul.w	ip, r3, ip
90000966:	45a4      	cmp	ip, r4
90000968:	d907      	bls.n	9000097a <__udivmoddi4+0x1d2>
9000096a:	193c      	adds	r4, r7, r4
9000096c:	f103 30ff 	add.w	r0, r3, #4294967295
90000970:	d267      	bcs.n	90000a42 <__udivmoddi4+0x29a>
90000972:	45a4      	cmp	ip, r4
90000974:	d965      	bls.n	90000a42 <__udivmoddi4+0x29a>
90000976:	3b02      	subs	r3, #2
90000978:	443c      	add	r4, r7
9000097a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
9000097e:	fba0 9302 	umull	r9, r3, r0, r2
90000982:	eba4 040c 	sub.w	r4, r4, ip
90000986:	429c      	cmp	r4, r3
90000988:	46ce      	mov	lr, r9
9000098a:	469c      	mov	ip, r3
9000098c:	d351      	bcc.n	90000a32 <__udivmoddi4+0x28a>
9000098e:	d04e      	beq.n	90000a2e <__udivmoddi4+0x286>
90000990:	b155      	cbz	r5, 900009a8 <__udivmoddi4+0x200>
90000992:	ebb8 030e 	subs.w	r3, r8, lr
90000996:	eb64 040c 	sbc.w	r4, r4, ip
9000099a:	fa04 f606 	lsl.w	r6, r4, r6
9000099e:	40cb      	lsrs	r3, r1
900009a0:	431e      	orrs	r6, r3
900009a2:	40cc      	lsrs	r4, r1
900009a4:	e9c5 6400 	strd	r6, r4, [r5]
900009a8:	2100      	movs	r1, #0
900009aa:	e750      	b.n	9000084e <__udivmoddi4+0xa6>
900009ac:	f1c2 0320 	rsb	r3, r2, #32
900009b0:	fa20 f103 	lsr.w	r1, r0, r3
900009b4:	fa0c fc02 	lsl.w	ip, ip, r2
900009b8:	fa24 f303 	lsr.w	r3, r4, r3
900009bc:	4094      	lsls	r4, r2
900009be:	430c      	orrs	r4, r1
900009c0:	ea4f 481c 	mov.w	r8, ip, lsr #16
900009c4:	fa00 fe02 	lsl.w	lr, r0, r2
900009c8:	fa1f f78c 	uxth.w	r7, ip
900009cc:	fbb3 f0f8 	udiv	r0, r3, r8
900009d0:	fb08 3110 	mls	r1, r8, r0, r3
900009d4:	0c23      	lsrs	r3, r4, #16
900009d6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900009da:	fb00 f107 	mul.w	r1, r0, r7
900009de:	4299      	cmp	r1, r3
900009e0:	d908      	bls.n	900009f4 <__udivmoddi4+0x24c>
900009e2:	eb1c 0303 	adds.w	r3, ip, r3
900009e6:	f100 36ff 	add.w	r6, r0, #4294967295
900009ea:	d22c      	bcs.n	90000a46 <__udivmoddi4+0x29e>
900009ec:	4299      	cmp	r1, r3
900009ee:	d92a      	bls.n	90000a46 <__udivmoddi4+0x29e>
900009f0:	3802      	subs	r0, #2
900009f2:	4463      	add	r3, ip
900009f4:	1a5b      	subs	r3, r3, r1
900009f6:	b2a4      	uxth	r4, r4
900009f8:	fbb3 f1f8 	udiv	r1, r3, r8
900009fc:	fb08 3311 	mls	r3, r8, r1, r3
90000a00:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
90000a04:	fb01 f307 	mul.w	r3, r1, r7
90000a08:	42a3      	cmp	r3, r4
90000a0a:	d908      	bls.n	90000a1e <__udivmoddi4+0x276>
90000a0c:	eb1c 0404 	adds.w	r4, ip, r4
90000a10:	f101 36ff 	add.w	r6, r1, #4294967295
90000a14:	d213      	bcs.n	90000a3e <__udivmoddi4+0x296>
90000a16:	42a3      	cmp	r3, r4
90000a18:	d911      	bls.n	90000a3e <__udivmoddi4+0x296>
90000a1a:	3902      	subs	r1, #2
90000a1c:	4464      	add	r4, ip
90000a1e:	1ae4      	subs	r4, r4, r3
90000a20:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
90000a24:	e739      	b.n	9000089a <__udivmoddi4+0xf2>
90000a26:	4604      	mov	r4, r0
90000a28:	e6f0      	b.n	9000080c <__udivmoddi4+0x64>
90000a2a:	4608      	mov	r0, r1
90000a2c:	e706      	b.n	9000083c <__udivmoddi4+0x94>
90000a2e:	45c8      	cmp	r8, r9
90000a30:	d2ae      	bcs.n	90000990 <__udivmoddi4+0x1e8>
90000a32:	ebb9 0e02 	subs.w	lr, r9, r2
90000a36:	eb63 0c07 	sbc.w	ip, r3, r7
90000a3a:	3801      	subs	r0, #1
90000a3c:	e7a8      	b.n	90000990 <__udivmoddi4+0x1e8>
90000a3e:	4631      	mov	r1, r6
90000a40:	e7ed      	b.n	90000a1e <__udivmoddi4+0x276>
90000a42:	4603      	mov	r3, r0
90000a44:	e799      	b.n	9000097a <__udivmoddi4+0x1d2>
90000a46:	4630      	mov	r0, r6
90000a48:	e7d4      	b.n	900009f4 <__udivmoddi4+0x24c>
90000a4a:	46d6      	mov	lr, sl
90000a4c:	e77f      	b.n	9000094e <__udivmoddi4+0x1a6>
90000a4e:	4463      	add	r3, ip
90000a50:	3802      	subs	r0, #2
90000a52:	e74d      	b.n	900008f0 <__udivmoddi4+0x148>
90000a54:	4606      	mov	r6, r0
90000a56:	4623      	mov	r3, r4
90000a58:	4608      	mov	r0, r1
90000a5a:	e70f      	b.n	9000087c <__udivmoddi4+0xd4>
90000a5c:	3e02      	subs	r6, #2
90000a5e:	4463      	add	r3, ip
90000a60:	e730      	b.n	900008c4 <__udivmoddi4+0x11c>
90000a62:	bf00      	nop

90000a64 <__aeabi_idiv0>:
90000a64:	4770      	bx	lr
90000a66:	bf00      	nop

90000a68 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000a68:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000aa0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000a6c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000a6e:	e003      	b.n	90000a78 <LoopCopyDataInit>

90000a70 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000a70:	4b0c      	ldr	r3, [pc, #48]	@ (90000aa4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000a72:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000a74:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000a76:	3104      	adds	r1, #4

90000a78 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000a78:	480b      	ldr	r0, [pc, #44]	@ (90000aa8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000a7a:	4b0c      	ldr	r3, [pc, #48]	@ (90000aac <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000a7c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000a7e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000a80:	d3f6      	bcc.n	90000a70 <CopyDataInit>
  ldr  r2, =_sbss
90000a82:	4a0b      	ldr	r2, [pc, #44]	@ (90000ab0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000a84:	e002      	b.n	90000a8c <LoopFillZerobss>

90000a86 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000a86:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000a88:	f842 3b04 	str.w	r3, [r2], #4

90000a8c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000a8c:	4b09      	ldr	r3, [pc, #36]	@ (90000ab4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000a8e:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000a90:	d3f9      	bcc.n	90000a86 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000a92:	f007 f9cf 	bl	90007e34 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000a96:	f02b ff4d 	bl	9002c934 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000a9a:	f003 fa89 	bl	90003fb0 <main>
  bx  lr    
90000a9e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000aa0:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000aa4:	900313c8 	.word	0x900313c8
  ldr  r0, =_sdata
90000aa8:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000aac:	2400038c 	.word	0x2400038c
  ldr  r2, =_sbss
90000ab0:	240005a0 	.word	0x240005a0
  ldr  r3, = _ebss
90000ab4:	240252e0 	.word	0x240252e0

90000ab8 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000ab8:	e7fe      	b.n	90000ab8 <ADC3_IRQHandler>
	...

90000abc <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000abc:	4770      	bx	lr
90000abe:	bf00      	nop

90000ac0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000ac0:	4770      	bx	lr
90000ac2:	bf00      	nop

90000ac4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000ac4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000ac6:	f002 f933 	bl	90002d30 <touchgfx_components_init>
    touchgfx_init();
}
90000aca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000ace:	f002 b8ad 	b.w	90002c2c <touchgfx_init>
90000ad2:	bf00      	nop

90000ad4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000ad4:	f002 b92e 	b.w	90002d34 <touchgfx_taskEntry>

90000ad8 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000ad8:	6840      	ldr	r0, [r0, #4]
    }
90000ada:	4770      	bx	lr

90000adc <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000adc:	6041      	str	r1, [r0, #4]
    }
90000ade:	4770      	bx	lr

90000ae0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ae0:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ae4:	4b08      	ldr	r3, [pc, #32]	@ (90000b08 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000ae6:	4a09      	ldr	r2, [pc, #36]	@ (90000b0c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ae8:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000aec:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000af0:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000af4:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000af8:	430a      	orrs	r2, r1
90000afa:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000afe:	681a      	ldr	r2, [r3, #0]
90000b00:	f042 0201 	orr.w	r2, r2, #1
90000b04:	601a      	str	r2, [r3, #0]
}
90000b06:	4770      	bx	lr
90000b08:	e0001000 	.word	0xe0001000
90000b0c:	c5acce55 	.word	0xc5acce55

90000b10 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b10:	1a52      	subs	r2, r2, r1
90000b12:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b16:	fbb2 f0f3 	udiv	r0, r2, r3
90000b1a:	4770      	bx	lr

90000b1c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b1c:	4b01      	ldr	r3, [pc, #4]	@ (90000b24 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b1e:	6858      	ldr	r0, [r3, #4]
}
90000b20:	4770      	bx	lr
90000b22:	bf00      	nop
90000b24:	e0001000 	.word	0xe0001000

90000b28 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b28:	4770      	bx	lr
90000b2a:	bf00      	nop

90000b2c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b2c:	b510      	push	{r4, lr}
90000b2e:	4604      	mov	r4, r0
90000b30:	210c      	movs	r1, #12
90000b32:	f02b f832 	bl	9002bb9a <_ZdlPvj>
90000b36:	4620      	mov	r0, r4
90000b38:	bd10      	pop	{r4, pc}
90000b3a:	bf00      	nop

90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b3c:	6803      	ldr	r3, [r0, #0]
90000b3e:	4a0c      	ldr	r2, [pc, #48]	@ (90000b70 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b40:	691b      	ldr	r3, [r3, #16]
{
90000b42:	b510      	push	{r4, lr}
90000b44:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000b46:	b149      	cbz	r1, 90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b48:	4293      	cmp	r3, r2
90000b4a:	d10d      	bne.n	90000b68 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000b4c:	4b09      	ldr	r3, [pc, #36]	@ (90000b74 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b4e:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b50:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000b52:	6863      	ldr	r3, [r4, #4]
90000b54:	1a9b      	subs	r3, r3, r2
90000b56:	4403      	add	r3, r0
90000b58:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000b5a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000b5c:	4293      	cmp	r3, r2
90000b5e:	d105      	bne.n	90000b6c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000b60:	4b04      	ldr	r3, [pc, #16]	@ (90000b74 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b62:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000b64:	60a0      	str	r0, [r4, #8]
}
90000b66:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b68:	4798      	blx	r3
90000b6a:	e7f1      	b.n	90000b50 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000b6c:	4798      	blx	r3
90000b6e:	e7f9      	b.n	90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000b70:	90000b1d 	.word	0x90000b1d
90000b74:	e0001000 	.word	0xe0001000

90000b78 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000b78:	4770      	bx	lr
90000b7a:	bf00      	nop
90000b7c:	0000      	movs	r0, r0
	...

90000b80 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000b80:	b500      	push	{lr}
90000b82:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000b84:	2208      	movs	r2, #8
90000b86:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000b88:	2000      	movs	r0, #0
90000b8a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000b8c:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000ba8 <_ZN20STM32TouchController4initEv+0x28>
90000b90:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000b94:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000b98:	f007 f85e 	bl	90007c58 <BSP_TS_Init>
}
90000b9c:	b005      	add	sp, #20
90000b9e:	f85d fb04 	ldr.w	pc, [sp], #4
90000ba2:	bf00      	nop
90000ba4:	f3af 8000 	nop.w
90000ba8:	000001e0 	.word	0x000001e0
90000bac:	00000110 	.word	0x00000110

90000bb0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000bb0:	b530      	push	{r4, r5, lr}
90000bb2:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000bb4:	2000      	movs	r0, #0
{
90000bb6:	460d      	mov	r5, r1
90000bb8:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000bba:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000bbc:	9001      	str	r0, [sp, #4]
90000bbe:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000bc2:	f007 f8d7 	bl	90007d74 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000bc6:	9801      	ldr	r0, [sp, #4]
90000bc8:	b120      	cbz	r0, 90000bd4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000bca:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000bcc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000bd0:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000bd2:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000bd4:	b005      	add	sp, #20
90000bd6:	bd30      	pop	{r4, r5, pc}

90000bd8 <_ZN20STM32TouchControllerD0Ev>:
90000bd8:	b510      	push	{r4, lr}
90000bda:	4604      	mov	r4, r0
90000bdc:	2104      	movs	r1, #4
90000bde:	f02a ffdc 	bl	9002bb9a <_ZdlPvj>
90000be2:	4620      	mov	r0, r4
90000be4:	bd10      	pop	{r4, pc}
90000be6:	bf00      	nop

90000be8 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
90000be8:	b508      	push	{r3, lr}
    for (int id = 0; id <= 4; id++)
90000bea:	2300      	movs	r3, #0
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
90000bec:	2b03      	cmp	r3, #3
90000bee:	d82b      	bhi.n	90000c48 <_ZN8touchgfx4GPIO4initEv+0x60>
90000bf0:	e8df f003 	tbb	[pc, r3]
90000bf4:	020c1620 	.word	0x020c1620
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000bf8:	2140      	movs	r1, #64	@ 0x40
90000bfa:	4814      	ldr	r0, [pc, #80]	@ (90000c4c <_ZN8touchgfx4GPIO4initEv+0x64>)
90000bfc:	f007 fe36 	bl	9000886c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c00:	2801      	cmp	r0, #1
90000c02:	d101      	bne.n	90000c08 <_ZN8touchgfx4GPIO4initEv+0x20>
            GPIO_InvertedLevels[id] = 1;
90000c04:	4b12      	ldr	r3, [pc, #72]	@ (90000c50 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c06:	60d8      	str	r0, [r3, #12]
    for (int id = 0; id <= 4; id++)
90000c08:	2304      	movs	r3, #4
90000c0a:	e7ef      	b.n	90000bec <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000c0c:	2140      	movs	r1, #64	@ 0x40
90000c0e:	4811      	ldr	r0, [pc, #68]	@ (90000c54 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c10:	f007 fe2c 	bl	9000886c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c14:	2801      	cmp	r0, #1
90000c16:	d101      	bne.n	90000c1c <_ZN8touchgfx4GPIO4initEv+0x34>
            GPIO_InvertedLevels[id] = 1;
90000c18:	4b0d      	ldr	r3, [pc, #52]	@ (90000c50 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c1a:	6098      	str	r0, [r3, #8]
    for (int id = 0; id <= 4; id++)
90000c1c:	2303      	movs	r3, #3
90000c1e:	e7e5      	b.n	90000bec <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c20:	2180      	movs	r1, #128	@ 0x80
90000c22:	480c      	ldr	r0, [pc, #48]	@ (90000c54 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c24:	f007 fe22 	bl	9000886c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c28:	2801      	cmp	r0, #1
90000c2a:	d101      	bne.n	90000c30 <_ZN8touchgfx4GPIO4initEv+0x48>
            GPIO_InvertedLevels[id] = 1;
90000c2c:	4b08      	ldr	r3, [pc, #32]	@ (90000c50 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c2e:	6058      	str	r0, [r3, #4]
    for (int id = 0; id <= 4; id++)
90000c30:	2302      	movs	r3, #2
90000c32:	e7db      	b.n	90000bec <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c34:	2108      	movs	r1, #8
90000c36:	4808      	ldr	r0, [pc, #32]	@ (90000c58 <_ZN8touchgfx4GPIO4initEv+0x70>)
90000c38:	f007 fe18 	bl	9000886c <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c3c:	2801      	cmp	r0, #1
90000c3e:	d101      	bne.n	90000c44 <_ZN8touchgfx4GPIO4initEv+0x5c>
            GPIO_InvertedLevels[id] = 1;
90000c40:	4b03      	ldr	r3, [pc, #12]	@ (90000c50 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c42:	6018      	str	r0, [r3, #0]
    for (int id = 0; id <= 4; id++)
90000c44:	2301      	movs	r3, #1
90000c46:	e7d1      	b.n	90000bec <_ZN8touchgfx4GPIO4initEv+0x4>
}
90000c48:	bd08      	pop	{r3, pc}
90000c4a:	bf00      	nop
90000c4c:	58020000 	.word	0x58020000
90000c50:	240005bc 	.word	0x240005bc
90000c54:	58020400 	.word	0x58020400
90000c58:	58021800 	.word	0x58021800

90000c5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c5c:	2803      	cmp	r0, #3
90000c5e:	d827      	bhi.n	90000cb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c60:	e8df f000 	tbb	[pc, r0]
90000c64:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000c68:	4b12      	ldr	r3, [pc, #72]	@ (90000cb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c6a:	2140      	movs	r1, #64	@ 0x40
90000c6c:	4812      	ldr	r0, [pc, #72]	@ (90000cb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000c6e:	68da      	ldr	r2, [r3, #12]
90000c70:	fab2 f282 	clz	r2, r2
90000c74:	0952      	lsrs	r2, r2, #5
90000c76:	f007 bdff 	b.w	90008878 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000c7a:	4b0e      	ldr	r3, [pc, #56]	@ (90000cb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c7c:	2140      	movs	r1, #64	@ 0x40
90000c7e:	480f      	ldr	r0, [pc, #60]	@ (90000cbc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c80:	689a      	ldr	r2, [r3, #8]
90000c82:	fab2 f282 	clz	r2, r2
90000c86:	0952      	lsrs	r2, r2, #5
90000c88:	f007 bdf6 	b.w	90008878 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000c8c:	4b09      	ldr	r3, [pc, #36]	@ (90000cb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c8e:	2180      	movs	r1, #128	@ 0x80
90000c90:	480a      	ldr	r0, [pc, #40]	@ (90000cbc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c92:	685a      	ldr	r2, [r3, #4]
90000c94:	fab2 f282 	clz	r2, r2
90000c98:	0952      	lsrs	r2, r2, #5
90000c9a:	f007 bded 	b.w	90008878 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000c9e:	4b05      	ldr	r3, [pc, #20]	@ (90000cb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000ca0:	2108      	movs	r1, #8
90000ca2:	4807      	ldr	r0, [pc, #28]	@ (90000cc0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000ca4:	681a      	ldr	r2, [r3, #0]
90000ca6:	fab2 f282 	clz	r2, r2
90000caa:	0952      	lsrs	r2, r2, #5
90000cac:	f007 bde4 	b.w	90008878 <HAL_GPIO_WritePin>
}
90000cb0:	4770      	bx	lr
90000cb2:	bf00      	nop
90000cb4:	240005bc 	.word	0x240005bc
90000cb8:	58020000 	.word	0x58020000
90000cbc:	58020400 	.word	0x58020400
90000cc0:	58021800 	.word	0x58021800

90000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cc4:	2803      	cmp	r0, #3
90000cc6:	d827      	bhi.n	90000d18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000cc8:	e8df f000 	tbb	[pc, r0]
90000ccc:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cd0:	4b12      	ldr	r3, [pc, #72]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cd2:	2140      	movs	r1, #64	@ 0x40
90000cd4:	4812      	ldr	r0, [pc, #72]	@ (90000d20 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000cd6:	68da      	ldr	r2, [r3, #12]
90000cd8:	3a00      	subs	r2, #0
90000cda:	bf18      	it	ne
90000cdc:	2201      	movne	r2, #1
90000cde:	f007 bdcb 	b.w	90008878 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000ce2:	4b0e      	ldr	r3, [pc, #56]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000ce4:	2140      	movs	r1, #64	@ 0x40
90000ce6:	480f      	ldr	r0, [pc, #60]	@ (90000d24 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000ce8:	689a      	ldr	r2, [r3, #8]
90000cea:	3a00      	subs	r2, #0
90000cec:	bf18      	it	ne
90000cee:	2201      	movne	r2, #1
90000cf0:	f007 bdc2 	b.w	90008878 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000cf4:	4b09      	ldr	r3, [pc, #36]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cf6:	2180      	movs	r1, #128	@ 0x80
90000cf8:	480a      	ldr	r0, [pc, #40]	@ (90000d24 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cfa:	685a      	ldr	r2, [r3, #4]
90000cfc:	3a00      	subs	r2, #0
90000cfe:	bf18      	it	ne
90000d00:	2201      	movne	r2, #1
90000d02:	f007 bdb9 	b.w	90008878 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000d06:	4b05      	ldr	r3, [pc, #20]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d08:	2108      	movs	r1, #8
90000d0a:	4807      	ldr	r0, [pc, #28]	@ (90000d28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000d0c:	681a      	ldr	r2, [r3, #0]
90000d0e:	3a00      	subs	r2, #0
90000d10:	bf18      	it	ne
90000d12:	2201      	movne	r2, #1
90000d14:	f007 bdb0 	b.w	90008878 <HAL_GPIO_WritePin>
}
90000d18:	4770      	bx	lr
90000d1a:	bf00      	nop
90000d1c:	240005bc 	.word	0x240005bc
90000d20:	58020000 	.word	0x58020000
90000d24:	58020400 	.word	0x58020400
90000d28:	58021800 	.word	0x58021800

90000d2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d2c:	2803      	cmp	r0, #3
90000d2e:	d813      	bhi.n	90000d58 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d30:	e8df f000 	tbb	[pc, r0]
90000d34:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d38:	2140      	movs	r1, #64	@ 0x40
90000d3a:	4808      	ldr	r0, [pc, #32]	@ (90000d5c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d3c:	f007 bda0 	b.w	90008880 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d40:	2140      	movs	r1, #64	@ 0x40
90000d42:	4807      	ldr	r0, [pc, #28]	@ (90000d60 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d44:	f007 bd9c 	b.w	90008880 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d48:	2180      	movs	r1, #128	@ 0x80
90000d4a:	4805      	ldr	r0, [pc, #20]	@ (90000d60 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d4c:	f007 bd98 	b.w	90008880 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d50:	2108      	movs	r1, #8
90000d52:	4804      	ldr	r0, [pc, #16]	@ (90000d64 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d54:	f007 bd94 	b.w	90008880 <HAL_GPIO_TogglePin>
}
90000d58:	4770      	bx	lr
90000d5a:	bf00      	nop
90000d5c:	58020000 	.word	0x58020000
90000d60:	58020400 	.word	0x58020400
90000d64:	58021800 	.word	0x58021800

90000d68 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d68:	2000      	movs	r0, #0
90000d6a:	4770      	bx	lr

90000d6c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d6c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d6e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d72:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d76:	4770      	bx	lr

90000d78 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d78:	2000      	movs	r0, #0
90000d7a:	4770      	bx	lr

90000d7c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d7c:	1e0a      	subs	r2, r1, #0
90000d7e:	4b03      	ldr	r3, [pc, #12]	@ (90000d8c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d80:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d82:	bf18      	it	ne
90000d84:	2201      	movne	r2, #1
90000d86:	701a      	strb	r2, [r3, #0]
    }
90000d88:	4770      	bx	lr
90000d8a:	bf00      	nop
90000d8c:	2402459d 	.word	0x2402459d

90000d90 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d90:	2000      	movs	r0, #0
90000d92:	4770      	bx	lr

90000d94 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d94:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d96:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d98:	b103      	cbz	r3, 90000d9c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d9a:	4718      	bx	r3
        }
    }
90000d9c:	4770      	bx	lr
90000d9e:	bf00      	nop

90000da0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000da0:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000da4:	4770      	bx	lr
90000da6:	bf00      	nop

90000da8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000da8:	4770      	bx	lr
90000daa:	bf00      	nop

90000dac <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000dac:	b510      	push	{r4, lr}
90000dae:	4604      	mov	r4, r0
        swapFrameBuffers();
90000db0:	f013 fa76 	bl	900142a0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000db4:	6823      	ldr	r3, [r4, #0]
90000db6:	4620      	mov	r0, r4
90000db8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
90000dbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000dc0:	4718      	bx	r3
90000dc2:	bf00      	nop

90000dc4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000dc4:	f002 b8cc 	b.w	90002f60 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000dc8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000dc8:	f002 b8d0 	b.w	90002f6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dcc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dcc:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dce:	f002 f96b 	bl	900030a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000dd2:	4812      	ldr	r0, [pc, #72]	@ (90000e1c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000dd4:	2300      	movs	r3, #0
90000dd6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dda:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dde:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000de6:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dea:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000dee:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000df2:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000df6:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000df8:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000dfc:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dfe:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000e02:	1c5a      	adds	r2, r3, #1
90000e04:	d1f8      	bne.n	90000df8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000e06:	f1ac 0c20 	sub.w	ip, ip, #32
90000e0a:	f11c 0f20 	cmn.w	ip, #32
90000e0e:	d1f0      	bne.n	90000df2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e10:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e14:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e18:	bd10      	pop	{r4, pc}
90000e1a:	bf00      	nop
90000e1c:	e000ed00 	.word	0xe000ed00

90000e20 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e20:	f002 b87a 	b.w	90002f18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e24 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e24:	f002 b9c2 	b.w	900031ac <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e28 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e28:	f002 b9ac 	b.w	90003184 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e2c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e2c:	f002 b87e 	b.w	90002f2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e30:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e32:	4b09      	ldr	r3, [pc, #36]	@ (90000e58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e34:	881b      	ldrh	r3, [r3, #0]
90000e36:	428b      	cmp	r3, r1
90000e38:	d808      	bhi.n	90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e3a:	4b08      	ldr	r3, [pc, #32]	@ (90000e5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e3c:	881b      	ldrh	r3, [r3, #0]
90000e3e:	4293      	cmp	r3, r2
90000e40:	d804      	bhi.n	90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e42:	4807      	ldr	r0, [pc, #28]	@ (90000e60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e44:	4b07      	ldr	r3, [pc, #28]	@ (90000e64 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e46:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e48:	801a      	strh	r2, [r3, #0]
    }
90000e4a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e4c:	4b06      	ldr	r3, [pc, #24]	@ (90000e68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e4e:	219e      	movs	r1, #158	@ 0x9e
90000e50:	4a06      	ldr	r2, [pc, #24]	@ (90000e6c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e52:	4807      	ldr	r0, [pc, #28]	@ (90000e70 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e54:	f02b fa18 	bl	9002c288 <__assert_func>
90000e58:	24024592 	.word	0x24024592
90000e5c:	24024594 	.word	0x24024594
90000e60:	24024598 	.word	0x24024598
90000e64:	2402459a 	.word	0x2402459a
90000e68:	9002d388 	.word	0x9002d388
90000e6c:	9002d3ec 	.word	0x9002d3ec
90000e70:	9002d430 	.word	0x9002d430

90000e74 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e74:	f012 bd90 	b.w	90013998 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e78 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e78:	f012 bc64 	b.w	90013744 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e7c <_ZN11TouchGFXHALD0Ev>:
90000e7c:	b510      	push	{r4, lr}
90000e7e:	4604      	mov	r4, r0
90000e80:	2188      	movs	r1, #136	@ 0x88
90000e82:	f02a fe8a 	bl	9002bb9a <_ZdlPvj>
90000e86:	4620      	mov	r0, r4
90000e88:	bd10      	pop	{r4, pc}
90000e8a:	bf00      	nop

90000e8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000e8c:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e90:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
90000e94:	4b0b      	ldr	r3, [pc, #44]	@ (90000ec4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e96:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e98:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e9a:	d00b      	beq.n	90000eb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e9c:	b94a      	cbnz	r2, 90000eb2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e9e:	4a0a      	ldr	r2, [pc, #40]	@ (90000ec8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90000ea0:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ea4:	4909      	ldr	r1, [pc, #36]	@ (90000ecc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ea6:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90000ea8:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eac:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000eae:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eb0:	8013      	strh	r3, [r2, #0]
        }
    }
90000eb2:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000eb4:	2a00      	cmp	r2, #0
90000eb6:	d0fc      	beq.n	90000eb2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000eb8:	4a03      	ldr	r2, [pc, #12]	@ (90000ec8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000eba:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ebe:	4903      	ldr	r1, [pc, #12]	@ (90000ecc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000ec0:	e7f1      	b.n	90000ea6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000ec2:	bf00      	nop
90000ec4:	24024596 	.word	0x24024596
90000ec8:	24024594 	.word	0x24024594
90000ecc:	24024592 	.word	0x24024592

90000ed0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ed0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ed2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000ed6:	b118      	cbz	r0, 90000ee0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000ed8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000eda:	6803      	ldr	r3, [r0, #0]
90000edc:	681b      	ldr	r3, [r3, #0]
90000ede:	4718      	bx	r3
    }
90000ee0:	4770      	bx	lr
90000ee2:	bf00      	nop

90000ee4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000ee4:	6840      	ldr	r0, [r0, #4]
90000ee6:	4a04      	ldr	r2, [pc, #16]	@ (90000ef8 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000ee8:	6803      	ldr	r3, [r0, #0]
90000eea:	699b      	ldr	r3, [r3, #24]
90000eec:	4293      	cmp	r3, r2
90000eee:	d101      	bne.n	90000ef4 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ef0:	2000      	movs	r0, #0
90000ef2:	4770      	bx	lr
        return dma.getDMAType();
90000ef4:	4718      	bx	r3
90000ef6:	bf00      	nop
90000ef8:	90000d69 	.word	0x90000d69

90000efc <_ZN11TouchGFXHAL10initializeEv>:
{
90000efc:	b538      	push	{r3, r4, r5, lr}
90000efe:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000f00:	f002 fad6 	bl	900034b0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f04:	4a0b      	ldr	r2, [pc, #44]	@ (90000f34 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000f06:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f08:	490b      	ldr	r1, [pc, #44]	@ (90000f38 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000f0a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90000f0e:	4293      	cmp	r3, r2
90000f10:	d10d      	bne.n	90000f2e <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f12:	4b0a      	ldr	r3, [pc, #40]	@ (90000f3c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f14:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f16:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f18:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f1a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
90000f1e:	4628      	mov	r0, r5
90000f20:	f7ff fdde 	bl	90000ae0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f24:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f26:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f28:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f2c:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f2e:	4620      	mov	r0, r4
90000f30:	4798      	blx	r3
90000f32:	e7f2      	b.n	90000f1a <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f34:	90000d7d 	.word	0x90000d7d
90000f38:	d0000000 	.word	0xd0000000
90000f3c:	2402459d 	.word	0x2402459d

90000f40 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f40:	b1a9      	cbz	r1, 90000f6e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f42:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f44:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f46:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f48:	bf18      	it	ne
90000f4a:	2201      	movne	r2, #1
90000f4c:	490c      	ldr	r1, [pc, #48]	@ (90000f80 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f4e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f50:	6802      	ldr	r2, [r0, #0]
90000f52:	490c      	ldr	r1, [pc, #48]	@ (90000f84 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f54:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
90000f58:	428a      	cmp	r2, r1
90000f5a:	d106      	bne.n	90000f6a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f5c:	1e19      	subs	r1, r3, #0
90000f5e:	4a0a      	ldr	r2, [pc, #40]	@ (90000f88 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f60:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f62:	bf18      	it	ne
90000f64:	2101      	movne	r1, #1
90000f66:	7011      	strb	r1, [r2, #0]
90000f68:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f6a:	4619      	mov	r1, r3
90000f6c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f6e:	4b07      	ldr	r3, [pc, #28]	@ (90000f8c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f70:	f240 21d2 	movw	r1, #722	@ 0x2d2
90000f74:	4a06      	ldr	r2, [pc, #24]	@ (90000f90 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f76:	4807      	ldr	r0, [pc, #28]	@ (90000f94 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f78:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f7a:	f02b f985 	bl	9002c288 <__assert_func>
90000f7e:	bf00      	nop
90000f80:	2402459c 	.word	0x2402459c
90000f84:	90000d7d 	.word	0x90000d7d
90000f88:	2402459d 	.word	0x2402459d
90000f8c:	9002d478 	.word	0x9002d478
90000f90:	9002d4b0 	.word	0x9002d4b0
90000f94:	9002d430 	.word	0x9002d430

90000f98 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f98:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f9a:	6803      	ldr	r3, [r0, #0]
{
90000f9c:	4604      	mov	r4, r0
90000f9e:	4d14      	ldr	r5, [pc, #80]	@ (90000ff0 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000fa0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90000fa4:	4798      	blx	r3
    enableInterrupts();
90000fa6:	6823      	ldr	r3, [r4, #0]
90000fa8:	4620      	mov	r0, r4
90000faa:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90000fac:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000fae:	f001 f9ed 	bl	9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fb2:	6823      	ldr	r3, [r4, #0]
90000fb4:	4620      	mov	r0, r4
90000fb6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fb8:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000fba:	2201      	movs	r2, #1
90000fbc:	2180      	movs	r1, #128	@ 0x80
90000fbe:	480d      	ldr	r0, [pc, #52]	@ (90000ff4 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000fc0:	f007 fc5a 	bl	90008878 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fc4:	2201      	movs	r2, #1
90000fc6:	480c      	ldr	r0, [pc, #48]	@ (90000ff8 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000fc8:	4611      	mov	r1, r2
90000fca:	f007 fc55 	bl	90008878 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fce:	f001 f9dd 	bl	9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fd2:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fd4:	4620      	mov	r0, r4
90000fd6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fd8:	42ab      	cmp	r3, r5
90000fda:	d107      	bne.n	90000fec <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90000fdc:	f013 f960 	bl	900142a0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fe0:	6823      	ldr	r3, [r4, #0]
90000fe2:	4620      	mov	r0, r4
90000fe4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90000fe8:	4798      	blx	r3
    }
90000fea:	e7f0      	b.n	90000fce <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fec:	4798      	blx	r3
90000fee:	e7ee      	b.n	90000fce <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000ff0:	90000dad 	.word	0x90000dad
90000ff4:	58020c00 	.word	0x58020c00
90000ff8:	58022800 	.word	0x58022800

90000ffc <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90000ffc:	4601      	mov	r1, r0
    {
90000ffe:	b508      	push	{r3, lr}
        return instance;
90001000:	4b05      	ldr	r3, [pc, #20]	@ (90001018 <IdleTaskHook+0x1c>)
90001002:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90001004:	b121      	cbz	r1, 90001010 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90001006:	2101      	movs	r1, #1
90001008:	f013 f964 	bl	900142d4 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
9000100c:	2001      	movs	r0, #1
9000100e:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001010:	f013 f960 	bl	900142d4 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001014:	2001      	movs	r0, #1
90001016:	bd08      	pop	{r3, pc}
90001018:	240245a0 	.word	0x240245a0

9000101c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000101c:	6940      	ldr	r0, [r0, #20]
9000101e:	4770      	bx	lr

90001020 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001020:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001024:	4770      	bx	lr
90001026:	bf00      	nop

90001028 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001028:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000102a:	b10b      	cbz	r3, 90001030 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000102c:	2001      	movs	r0, #1
}
9000102e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001030:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001032:	3800      	subs	r0, #0
90001034:	bf18      	it	ne
90001036:	2001      	movne	r0, #1
90001038:	4770      	bx	lr
9000103a:	bf00      	nop

9000103c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000103c:	6880      	ldr	r0, [r0, #8]
9000103e:	4770      	bx	lr

90001040 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001040:	4770      	bx	lr
90001042:	bf00      	nop

90001044 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001044:	3004      	adds	r0, #4
{
90001046:	468c      	mov	ip, r1
    *data = videoInfo;
90001048:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000104a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000104e:	4770      	bx	lr

90001050 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001050:	4770      	bx	lr
90001052:	bf00      	nop

90001054 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001054:	b508      	push	{r3, lr}
    assert(0);
90001056:	4a03      	ldr	r2, [pc, #12]	@ (90001064 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001058:	f240 11f3 	movw	r1, #499	@ 0x1f3
9000105c:	4b02      	ldr	r3, [pc, #8]	@ (90001068 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000105e:	4803      	ldr	r0, [pc, #12]	@ (9000106c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001060:	f02b f912 	bl	9002c288 <__assert_func>
90001064:	9002d5dc 	.word	0x9002d5dc
90001068:	9002d5d8 	.word	0x9002d5d8
9000106c:	9002d638 	.word	0x9002d638

90001070 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001070:	b510      	push	{r4, lr}
90001072:	4604      	mov	r4, r0
90001074:	2148      	movs	r1, #72	@ 0x48
90001076:	f02a fd90 	bl	9002bb9a <_ZdlPvj>
9000107a:	4620      	mov	r0, r4
9000107c:	bd10      	pop	{r4, pc}
9000107e:	bf00      	nop

90001080 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001082:	6803      	ldr	r3, [r0, #0]
90001084:	2901      	cmp	r1, #1
90001086:	4d30      	ldr	r5, [pc, #192]	@ (90001148 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
90001088:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000108a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000108c:	bf38      	it	cc
9000108e:	2101      	movcc	r1, #1
90001090:	42ab      	cmp	r3, r5
90001092:	460e      	mov	r6, r1
90001094:	d13f      	bne.n	90001116 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
90001096:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001098:	42a9      	cmp	r1, r5
9000109a:	d947      	bls.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
9000109c:	1e6b      	subs	r3, r5, #1
9000109e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010a0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010a2:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010a6:	b338      	cbz	r0, 900010f8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010a8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010aa:	2b0f      	cmp	r3, #15
900010ac:	d940      	bls.n	90001130 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010ae:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010b0:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010b4:	68db      	ldr	r3, [r3, #12]
900010b6:	4631      	mov	r1, r6
900010b8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010ba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010bc:	2210      	movs	r2, #16
900010be:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010c0:	6803      	ldr	r3, [r0, #0]
900010c2:	691b      	ldr	r3, [r3, #16]
900010c4:	4798      	blx	r3
900010c6:	b198      	cbz	r0, 900010f0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010c8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ca:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010cc:	b1a3      	cbz	r3, 900010f8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010ce:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010d0:	7a93      	ldrb	r3, [r2, #10]
900010d2:	7a51      	ldrb	r1, [r2, #9]
900010d4:	041b      	lsls	r3, r3, #16
900010d6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010da:	7a11      	ldrb	r1, [r2, #8]
900010dc:	7ad2      	ldrb	r2, [r2, #11]
900010de:	430b      	orrs	r3, r1
900010e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010e6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e8:	3a04      	subs	r2, #4
900010ea:	441a      	add	r2, r3
900010ec:	61a2      	str	r2, [r4, #24]
}
900010ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010f0:	230d      	movs	r3, #13
900010f2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010f6:	e7e7      	b.n	900010c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010f8:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900010fc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900010fe:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001100:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
90001102:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001104:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001106:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001108:	041b      	lsls	r3, r3, #16
9000110a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000110e:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001110:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001114:	e7e6      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90001116:	4798      	blx	r3
90001118:	4286      	cmp	r6, r0
9000111a:	d907      	bls.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
9000111c:	6823      	ldr	r3, [r4, #0]
9000111e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001120:	42ab      	cmp	r3, r5
90001122:	d00e      	beq.n	90001142 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001124:	4620      	mov	r0, r4
90001126:	4798      	blx	r3
90001128:	4605      	mov	r5, r0
9000112a:	e7b7      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
9000112c:	4635      	mov	r5, r6
9000112e:	e7b5      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001130:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001132:	4b06      	ldr	r3, [pc, #24]	@ (9000114c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001134:	4a06      	ldr	r2, [pc, #24]	@ (90001150 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001136:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001138:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000113c:	4805      	ldr	r0, [pc, #20]	@ (90001154 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000113e:	f02b f8a3 	bl	9002c288 <__assert_func>
    return videoInfo.number_of_frames;
90001142:	68a5      	ldr	r5, [r4, #8]
90001144:	e7aa      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001146:	bf00      	nop
90001148:	9000103d 	.word	0x9000103d
9000114c:	9002d68c 	.word	0x9002d68c
90001150:	9002d6a0 	.word	0x9002d6a0
90001154:	9002d638 	.word	0x9002d638

90001158 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001158:	6943      	ldr	r3, [r0, #20]
{
9000115a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000115e:	2b00      	cmp	r3, #0
90001160:	f000 80c1 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001164:	4605      	mov	r5, r0
    if (reader != 0)
90001166:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001168:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000116a:	2800      	cmp	r0, #0
9000116c:	f000 80a1 	beq.w	900012b2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001170:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001172:	2b07      	cmp	r3, #7
90001174:	f240 80ac 	bls.w	900012d0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001178:	6803      	ldr	r3, [r0, #0]
9000117a:	4621      	mov	r1, r4
9000117c:	68db      	ldr	r3, [r3, #12]
9000117e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001180:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001182:	2208      	movs	r2, #8
90001184:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001186:	6803      	ldr	r3, [r0, #0]
90001188:	691b      	ldr	r3, [r3, #16]
9000118a:	4798      	blx	r3
9000118c:	2800      	cmp	r0, #0
9000118e:	f000 808c 	beq.w	900012aa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001192:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001194:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001196:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90001198:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000119a:	2800      	cmp	r0, #0
9000119c:	f000 808b 	beq.w	900012b6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011a0:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a2:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011a4:	18a1      	adds	r1, r4, r2
900011a6:	5ca2      	ldrb	r2, [r4, r2]
900011a8:	788c      	ldrb	r4, [r1, #2]
900011aa:	784e      	ldrb	r6, [r1, #1]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011b2:	4314      	orrs	r4, r2
900011b4:	78ca      	ldrb	r2, [r1, #3]
900011b6:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011ba:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011bc:	f243 0630 	movw	r6, #12336	@ 0x3030
900011c0:	e03a      	b.n	90001238 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011c2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011c4:	2b07      	cmp	r3, #7
900011c6:	f240 8083 	bls.w	900012d0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ca:	6803      	ldr	r3, [r0, #0]
900011cc:	4621      	mov	r1, r4
900011ce:	68db      	ldr	r3, [r3, #12]
900011d0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011d2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011d4:	2208      	movs	r2, #8
900011d6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011d8:	6803      	ldr	r3, [r0, #0]
900011da:	691b      	ldr	r3, [r3, #16]
900011dc:	4798      	blx	r3
900011de:	b908      	cbnz	r0, 900011e4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011e0:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011e4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011e6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011e8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011ea:	2800      	cmp	r0, #0
900011ec:	d079      	beq.n	900012e2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011ee:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011f0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011f2:	18ca      	adds	r2, r1, r3
900011f4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011f6:	7994      	ldrb	r4, [r2, #6]
900011f8:	f892 a005 	ldrb.w	sl, [r2, #5]
900011fc:	0424      	lsls	r4, r4, #16
900011fe:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001202:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001206:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
9000120a:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000120c:	f892 8003 	ldrb.w	r8, [r2, #3]
90001210:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001214:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001218:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000121c:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001220:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001224:	f246 3164 	movw	r1, #25444	@ 0x6364
90001228:	42b3      	cmp	r3, r6
9000122a:	bf08      	it	eq
9000122c:	428a      	cmpeq	r2, r1
9000122e:	bf0c      	ite	eq
90001230:	2301      	moveq	r3, #1
90001232:	2300      	movne	r3, #0
90001234:	d036      	beq.n	900012a4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001236:	69ab      	ldr	r3, [r5, #24]
90001238:	441c      	add	r4, r3
9000123a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000123c:	f104 0208 	add.w	r2, r4, #8
90001240:	429a      	cmp	r2, r3
90001242:	d22a      	bcs.n	9000129a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001244:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001246:	3409      	adds	r4, #9
        frameNumber++;
90001248:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000124a:	f024 0401 	bic.w	r4, r4, #1
9000124e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001252:	2800      	cmp	r0, #0
90001254:	d1b5      	bne.n	900011c2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001256:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001258:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000125a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000125e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001262:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001264:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001268:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000126c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001270:	188c      	adds	r4, r1, r2
        val |= d[0];
90001272:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001274:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001276:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000127a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000127e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001282:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90001286:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000128a:	0424      	lsls	r4, r4, #16
9000128c:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001290:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001294:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
90001298:	e7c4      	b.n	90001224 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000129a:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000129c:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000129e:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012a0:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012a4:	4618      	mov	r0, r3
900012a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012aa:	230d      	movs	r3, #13
900012ac:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012b0:	e76f      	b.n	90001192 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012b2:	1d22      	adds	r2, r4, #4
900012b4:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012b6:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012b8:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012ba:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012bc:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012be:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012c0:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012c2:	0424      	lsls	r4, r4, #16
900012c4:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012c8:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ca:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012ce:	e774      	b.n	900011ba <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012d0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012d2:	4b08      	ldr	r3, [pc, #32]	@ (900012f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012d4:	4a08      	ldr	r2, [pc, #32]	@ (900012f8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012d6:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012d8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012dc:	4807      	ldr	r0, [pc, #28]	@ (900012fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012de:	f02a ffd3 	bl	9002c288 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
900012e2:	461c      	mov	r4, r3
900012e4:	e7b7      	b.n	90001256 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012e6:	4b06      	ldr	r3, [pc, #24]	@ (90001300 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012e8:	21f5      	movs	r1, #245	@ 0xf5
900012ea:	4a06      	ldr	r2, [pc, #24]	@ (90001304 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012ec:	4803      	ldr	r0, [pc, #12]	@ (900012fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012ee:	f02a ffcb 	bl	9002c288 <__assert_func>
900012f2:	bf00      	nop
900012f4:	9002d68c 	.word	0x9002d68c
900012f8:	9002d6a0 	.word	0x9002d6a0
900012fc:	9002d638 	.word	0x9002d638
90001300:	9002d6e4 	.word	0x9002d6e4
90001304:	9002d730 	.word	0x9002d730

90001308 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001308:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000130a:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
9000130c:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000130e:	4b0e      	ldr	r3, [pc, #56]	@ (90001348 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001310:	2001      	movs	r0, #1
90001312:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001314:	63e2      	str	r2, [r4, #60]	@ 0x3c
90001316:	6023      	str	r3, [r4, #0]
90001318:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000131c:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001320:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001324:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001328:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000132c:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001330:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001334:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001338:	f00e fa8a 	bl	9000f850 <osSemaphoreNew>
9000133c:	4b03      	ldr	r3, [pc, #12]	@ (9000134c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000133e:	4602      	mov	r2, r0
}
90001340:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001342:	601a      	str	r2, [r3, #0]
}
90001344:	bd10      	pop	{r4, pc}
90001346:	bf00      	nop
90001348:	9002d888 	.word	0x9002d888
9000134c:	24000614 	.word	0x24000614

90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001350:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001354:	2100      	movs	r1, #0
    if (reader != 0)
90001356:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001358:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000135a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000135c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001360:	2e00      	cmp	r6, #0
90001362:	f000 81b3 	beq.w	900016cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001366:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001368:	2b47      	cmp	r3, #71	@ 0x47
9000136a:	f240 8270 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000136e:	6833      	ldr	r3, [r6, #0]
90001370:	4630      	mov	r0, r6
90001372:	68db      	ldr	r3, [r3, #12]
90001374:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001376:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001378:	2248      	movs	r2, #72	@ 0x48
9000137a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000137c:	6803      	ldr	r3, [r0, #0]
9000137e:	691b      	ldr	r3, [r3, #16]
90001380:	4798      	blx	r3
90001382:	2800      	cmp	r0, #0
90001384:	f000 80b7 	beq.w	900014f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90001388:	2300      	movs	r3, #0
    if (reader != 0)
9000138a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000138c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000138e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001390:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001392:	2e00      	cmp	r6, #0
90001394:	f000 819b 	beq.w	900016ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001398:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000139c:	2204      	movs	r2, #4
9000139e:	49c3      	ldr	r1, [pc, #780]	@ (900016ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013a0:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013a4:	4620      	mov	r0, r4
900013a6:	f02b fa13 	bl	9002c7d0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013aa:	2800      	cmp	r0, #0
900013ac:	f040 825f 	bne.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013b0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013b4:	2204      	movs	r2, #4
900013b6:	49be      	ldr	r1, [pc, #760]	@ (900016b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013b8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013ba:	4448      	add	r0, r9
900013bc:	f02b fa08 	bl	9002c7d0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013c0:	2800      	cmp	r0, #0
900013c2:	f040 8268 	bne.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013c6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ca:	2204      	movs	r2, #4
900013cc:	49b9      	ldr	r1, [pc, #740]	@ (900016b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013ce:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013d2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013d6:	f02b f9fb 	bl	9002c7d0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013da:	4680      	mov	r8, r0
900013dc:	2800      	cmp	r0, #0
900013de:	f040 8250 	bne.w	90001882 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013e2:	7ca3      	ldrb	r3, [r4, #18]
900013e4:	7c62      	ldrb	r2, [r4, #17]
900013e6:	041b      	lsls	r3, r3, #16
900013e8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013ec:	7c22      	ldrb	r2, [r4, #16]
900013ee:	4313      	orrs	r3, r2
900013f0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013f2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013f6:	f000 8233 	beq.w	90001860 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013fa:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900013fe:	2204      	movs	r2, #4
90001400:	49ad      	ldr	r1, [pc, #692]	@ (900016b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
90001402:	4448      	add	r0, r9
90001404:	f02b f9e4 	bl	9002c7d0 <strncmp>
    if (compare(offset, "hdrl", 4))
90001408:	2800      	cmp	r0, #0
9000140a:	d078      	beq.n	900014fe <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000140c:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000140e:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001412:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001416:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001418:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000141a:	2204      	movs	r2, #4
9000141c:	49a7      	ldr	r1, [pc, #668]	@ (900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000141e:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001420:	f02b f9d6 	bl	9002c7d0 <strncmp>
    if (compare(offset, "avih", 4))
90001424:	2800      	cmp	r0, #0
90001426:	f000 80e6 	beq.w	900015f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000142a:	2307      	movs	r3, #7
9000142c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001430:	f1ba 0f00 	cmp.w	sl, #0
90001434:	f000 8190 	beq.w	90001758 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001438:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000143a:	2b0b      	cmp	r3, #11
9000143c:	f240 8207 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001440:	f8da 3000 	ldr.w	r3, [sl]
90001444:	4621      	mov	r1, r4
90001446:	4650      	mov	r0, sl
90001448:	68db      	ldr	r3, [r3, #12]
9000144a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000144c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000144e:	220c      	movs	r2, #12
90001450:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001452:	6803      	ldr	r3, [r0, #0]
90001454:	691b      	ldr	r3, [r3, #16]
90001456:	4798      	blx	r3
90001458:	2800      	cmp	r0, #0
9000145a:	f000 8121 	beq.w	900016a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000145e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001462:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001464:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001466:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000146a:	f04f 090d 	mov.w	r9, #13
9000146e:	e003      	b.n	90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001470:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001474:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001476:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001478:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000147c:	2e00      	cmp	r6, #0
9000147e:	d052      	beq.n	90001526 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001480:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001484:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001486:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001488:	1afb      	subs	r3, r7, r3
9000148a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000148c:	f02b f9a0 	bl	9002c7d0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001490:	2800      	cmp	r0, #0
90001492:	d051      	beq.n	90001538 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001494:	f1ba 0f00 	cmp.w	sl, #0
90001498:	f040 80a8 	bne.w	900015ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
9000149c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000149e:	42a3      	cmp	r3, r4
900014a0:	d94d      	bls.n	9000153e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014a2:	3404      	adds	r4, #4
    if (reader != 0)
900014a4:	b386      	cbz	r6, 90001508 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014a6:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014a8:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014ac:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014ae:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014b0:	eb01 0204 	add.w	r2, r1, r4
900014b4:	5d09      	ldrb	r1, [r1, r4]
900014b6:	7894      	ldrb	r4, [r2, #2]
900014b8:	7850      	ldrb	r0, [r2, #1]
900014ba:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014be:	78d2      	ldrb	r2, [r2, #3]
900014c0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014c4:	ea44 0401 	orr.w	r4, r4, r1
900014c8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014cc:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014ce:	f240 81be 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014d2:	6833      	ldr	r3, [r6, #0]
900014d4:	4621      	mov	r1, r4
900014d6:	4630      	mov	r0, r6
900014d8:	68db      	ldr	r3, [r3, #12]
900014da:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014de:	220c      	movs	r2, #12
900014e0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014e2:	6803      	ldr	r3, [r0, #0]
900014e4:	691b      	ldr	r3, [r3, #16]
900014e6:	4798      	blx	r3
900014e8:	2800      	cmp	r0, #0
900014ea:	d1c1      	bne.n	90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014ec:	f04f 0a0d 	mov.w	sl, #13
900014f0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014f4:	e7be      	b.n	90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014f6:	230d      	movs	r3, #13
900014f8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900014fc:	e744      	b.n	90001388 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900014fe:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001502:	f04f 0801 	mov.w	r8, #1
90001506:	e786      	b.n	90001416 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
90001508:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
9000150a:	1913      	adds	r3, r2, r4
        val |= d[0];
9000150c:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
9000150e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001510:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001512:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001514:	0424      	lsls	r4, r4, #16
90001516:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000151a:	4314      	orrs	r4, r2
        val |= d[3] << 24;
9000151c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001520:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001522:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001526:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001528:	2204      	movs	r2, #4
9000152a:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
9000152c:	2600      	movs	r6, #0
9000152e:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001530:	f02b f94e 	bl	9002c7d0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001534:	2800      	cmp	r0, #0
90001536:	d1ad      	bne.n	90001494 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001538:	f1ba 0f00 	cmp.w	sl, #0
9000153c:	d156      	bne.n	900015ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000153e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001542:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001544:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001546:	2e00      	cmp	r6, #0
90001548:	f000 8118 	beq.w	9000177c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000154c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000154e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001550:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001554:	f104 0e02 	add.w	lr, r4, #2
90001558:	f104 0c01 	add.w	ip, r4, #1
9000155c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001560:	1ce0      	adds	r0, r4, #3
90001562:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001566:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001568:	f811 900c 	ldrb.w	r9, [r1, ip]
9000156c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001570:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001574:	ea43 0308 	orr.w	r3, r3, r8
90001578:	f811 8000 	ldrb.w	r8, [r1, r0]
9000157c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001580:	443b      	add	r3, r7
90001582:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001584:	f811 300e 	ldrb.w	r3, [r1, lr]
90001588:	f811 e00c 	ldrb.w	lr, [r1, ip]
9000158c:	f811 c004 	ldrb.w	ip, [r1, r4]
90001590:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001594:	5c09      	ldrb	r1, [r1, r0]
90001596:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000159a:	ea44 040c 	orr.w	r4, r4, ip
9000159e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015a2:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015a4:	f240 8153 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015a8:	6833      	ldr	r3, [r6, #0]
900015aa:	4621      	mov	r1, r4
900015ac:	4630      	mov	r0, r6
900015ae:	68db      	ldr	r3, [r3, #12]
900015b0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015b2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015b4:	2204      	movs	r2, #4
900015b6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015b8:	6803      	ldr	r3, [r0, #0]
900015ba:	691b      	ldr	r3, [r3, #16]
900015bc:	4798      	blx	r3
900015be:	2800      	cmp	r0, #0
900015c0:	f000 80cd 	beq.w	9000175e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015c4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015c6:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015c8:	2b00      	cmp	r3, #0
900015ca:	f000 816e 	beq.w	900018aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015ce:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015d0:	2204      	movs	r2, #4
900015d2:	493b      	ldr	r1, [pc, #236]	@ (900016c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015d4:	f02b f8fc 	bl	9002c7d0 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015d8:	2800      	cmp	r0, #0
900015da:	f040 80ca 	bne.w	90001772 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015de:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015e0:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015e2:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015e4:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015e6:	622b      	str	r3, [r5, #32]
}
900015e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015ec:	230a      	movs	r3, #10
900015ee:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015f6:	f1b8 0f00 	cmp.w	r8, #0
900015fa:	f43f af19 	beq.w	90001430 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900015fe:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
90001602:	f1ba 0f00 	cmp.w	sl, #0
90001606:	f000 80d4 	beq.w	900017b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
9000160a:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000160c:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001610:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001612:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001614:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001618:	f812 8001 	ldrb.w	r8, [r2, r1]
9000161c:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001620:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001624:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001628:	4438      	add	r0, r7
9000162a:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000162c:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001630:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001632:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001636:	041b      	lsls	r3, r3, #16
90001638:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000163c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001640:	ea43 0308 	orr.w	r3, r3, r8
90001644:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001648:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000164a:	fbac c303 	umull	ip, r3, ip, r3
9000164e:	099b      	lsrs	r3, r3, #6
90001650:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001652:	78bb      	ldrb	r3, [r7, #2]
90001654:	f897 e001 	ldrb.w	lr, [r7, #1]
90001658:	041b      	lsls	r3, r3, #16
9000165a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000165e:	78ff      	ldrb	r7, [r7, #3]
90001660:	1850      	adds	r0, r2, r1
90001662:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001666:	ea43 030c 	orr.w	r3, r3, ip
9000166a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000166e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001670:	7883      	ldrb	r3, [r0, #2]
90001672:	7847      	ldrb	r7, [r0, #1]
90001674:	041b      	lsls	r3, r3, #16
90001676:	5c51      	ldrb	r1, [r2, r1]
90001678:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000167c:	430b      	orrs	r3, r1
9000167e:	78c1      	ldrb	r1, [r0, #3]
90001680:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001684:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90001686:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001688:	788b      	ldrb	r3, [r1, #2]
9000168a:	7848      	ldrb	r0, [r1, #1]
9000168c:	041b      	lsls	r3, r3, #16
9000168e:	5d92      	ldrb	r2, [r2, r6]
90001690:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001694:	4313      	orrs	r3, r2
90001696:	78ca      	ldrb	r2, [r1, #3]
90001698:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000169c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000169e:	e6cb      	b.n	90001438 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016a0:	230d      	movs	r3, #13
900016a2:	469a      	mov	sl, r3
900016a4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016a8:	e6db      	b.n	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016aa:	bf00      	nop
900016ac:	9002d764 	.word	0x9002d764
900016b0:	9002d81c 	.word	0x9002d81c
900016b4:	9002d814 	.word	0x9002d814
900016b8:	9002d7e8 	.word	0x9002d7e8
900016bc:	9002d7fc 	.word	0x9002d7fc
900016c0:	9002d80c 	.word	0x9002d80c
900016c4:	9002d804 	.word	0x9002d804
900016c8:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016cc:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016ce:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016d2:	2204      	movs	r2, #4
900016d4:	4976      	ldr	r1, [pc, #472]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016d6:	eb09 0007 	add.w	r0, r9, r7
900016da:	f02b f879 	bl	9002c7d0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016de:	2800      	cmp	r0, #0
900016e0:	f040 80c5 	bne.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016e4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016e8:	2204      	movs	r2, #4
900016ea:	4972      	ldr	r1, [pc, #456]	@ (900018b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016ec:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016ee:	4448      	add	r0, r9
900016f0:	f02b f86e 	bl	9002c7d0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016f4:	2800      	cmp	r0, #0
900016f6:	f040 80ce 	bne.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016fa:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900016fe:	2204      	movs	r2, #4
90001700:	496d      	ldr	r1, [pc, #436]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
90001702:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
90001706:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000170a:	f02b f861 	bl	9002c7d0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000170e:	4680      	mov	r8, r0
90001710:	2800      	cmp	r0, #0
90001712:	f040 80b6 	bne.w	90001882 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001716:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000171a:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
9000171e:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001722:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001724:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001726:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001728:	0424      	lsls	r4, r4, #16
9000172a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000172e:	4314      	orrs	r4, r2
    assert(aviListSize);
90001730:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001734:	f000 8094 	beq.w	90001860 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001738:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000173c:	2204      	movs	r2, #4
9000173e:	495f      	ldr	r1, [pc, #380]	@ (900018bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001740:	4448      	add	r0, r9
90001742:	f02b f845 	bl	9002c7d0 <strncmp>
    if (compare(offset, "hdrl", 4))
90001746:	b970      	cbnz	r0, 90001766 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001748:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000174c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001750:	4448      	add	r0, r9
90001752:	f04f 0a00 	mov.w	sl, #0
90001756:	e65f      	b.n	90001418 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001758:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000175c:	e683      	b.n	90001466 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000175e:	230d      	movs	r3, #13
90001760:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001764:	e72e      	b.n	900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001766:	2306      	movs	r3, #6
    offset += 4;
90001768:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000176c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001770:	e7ee      	b.n	90001750 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001772:	230b      	movs	r3, #11
90001774:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001778:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000177c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000177e:	1902      	adds	r2, r0, r4
        val |= d[0];
90001780:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001782:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001784:	7893      	ldrb	r3, [r2, #2]
90001786:	041b      	lsls	r3, r3, #16
90001788:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000178c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000178e:	78d1      	ldrb	r1, [r2, #3]
90001790:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001794:	443b      	add	r3, r7
90001796:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
90001798:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000179a:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
9000179c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000179e:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017a0:	0424      	lsls	r4, r4, #16
900017a2:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017a6:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017a8:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017ac:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017ae:	4420      	add	r0, r4
900017b0:	e70e      	b.n	900015d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017b2:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017b4:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017b8:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017bc:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017c0:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017c4:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017c8:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017cc:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017ce:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017d2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017d6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017da:	041b      	lsls	r3, r3, #16
900017dc:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017e0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017e4:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017e8:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017ec:	fbae e303 	umull	lr, r3, lr, r3
900017f0:	099b      	lsrs	r3, r3, #6
900017f2:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017f4:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017f8:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
900017fc:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900017fe:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001800:	041b      	lsls	r3, r3, #16
90001802:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001806:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
9000180a:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
9000180e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001812:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001814:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001816:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000181a:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
9000181e:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001822:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
90001826:	041b      	lsls	r3, r3, #16
90001828:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
9000182c:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001830:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001834:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001836:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001838:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000183a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000183c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000183e:	041b      	lsls	r3, r3, #16
90001840:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001844:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001846:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000184a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000184c:	e60b      	b.n	90001466 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000184e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001850:	4b1b      	ldr	r3, [pc, #108]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001852:	4a1c      	ldr	r2, [pc, #112]	@ (900018c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001854:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001856:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000185a:	481b      	ldr	r0, [pc, #108]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000185c:	f02a fd14 	bl	9002c288 <__assert_func>
    assert(aviListSize);
90001860:	4b1a      	ldr	r3, [pc, #104]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001862:	f44f 71a9 	mov.w	r1, #338	@ 0x152
90001866:	4a1a      	ldr	r2, [pc, #104]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001868:	4817      	ldr	r0, [pc, #92]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000186a:	f02a fd0d 	bl	9002c288 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000186e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001870:	4b18      	ldr	r3, [pc, #96]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001872:	4a17      	ldr	r2, [pc, #92]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001874:	f240 113d 	movw	r1, #317	@ 0x13d
        lastError = AVI_ERROR_NOT_RIFF;
90001878:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000187c:	4812      	ldr	r0, [pc, #72]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000187e:	f02a fd03 	bl	9002c288 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001882:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001884:	4b14      	ldr	r3, [pc, #80]	@ (900018d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
90001886:	4a12      	ldr	r2, [pc, #72]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001888:	f44f 71a6 	mov.w	r1, #332	@ 0x14c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000188c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001890:	480d      	ldr	r0, [pc, #52]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001892:	f02a fcf9 	bl	9002c288 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001896:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001898:	4b10      	ldr	r3, [pc, #64]	@ (900018dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000189a:	4a0d      	ldr	r2, [pc, #52]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000189c:	f240 1145 	movw	r1, #325	@ 0x145
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018a0:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018a4:	4808      	ldr	r0, [pc, #32]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018a6:	f02a fcef 	bl	9002c288 <__assert_func>
        src = (const char*)movieData + offset;
900018aa:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018ac:	4420      	add	r0, r4
900018ae:	e68f      	b.n	900015d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018b0:	9002d764 	.word	0x9002d764
900018b4:	9002d81c 	.word	0x9002d81c
900018b8:	9002d814 	.word	0x9002d814
900018bc:	9002d7e8 	.word	0x9002d7e8
900018c0:	9002d68c 	.word	0x9002d68c
900018c4:	9002d6a0 	.word	0x9002d6a0
900018c8:	9002d638 	.word	0x9002d638
900018cc:	9002d7f0 	.word	0x9002d7f0
900018d0:	9002d788 	.word	0x9002d788
900018d4:	9002d76c 	.word	0x9002d76c
900018d8:	9002d7d0 	.word	0x9002d7d0
900018dc:	9002d7b8 	.word	0x9002d7b8
900018e0:	10624dd3 	.word	0x10624dd3

900018e4 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018e4:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018e6:	2400      	movs	r4, #0
    movieLength = length;
900018e8:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018ec:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018ee:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018f2:	f7ff bd2d 	b.w	90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018f6:	bf00      	nop

900018f8 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018f8:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018fa:	680b      	ldr	r3, [r1, #0]
{
900018fc:	4604      	mov	r4, r0
    movieData = 0;
900018fe:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001900:	4608      	mov	r0, r1
90001902:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90001904:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
90001908:	4798      	blx	r3
9000190a:	4603      	mov	r3, r0
    readVideoHeader();
9000190c:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
9000190e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001914:	f7ff bd1c 	b.w	90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001918 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001918:	b5f0      	push	{r4, r5, r6, r7, lr}
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
9000191a:	2400      	movs	r4, #0
9000191c:	4d20      	ldr	r5, [pc, #128]	@ (900019a0 <JPEG_Decode_DMA+0x88>)
    {
9000191e:	461e      	mov	r6, r3
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
90001920:	4b20      	ldr	r3, [pc, #128]	@ (900019a4 <JPEG_Decode_DMA+0x8c>)
        JPEG_output_is_paused = 0;
90001922:	602c      	str	r4, [r5, #0]
    {
90001924:	b083      	sub	sp, #12
        JPEG_OUT_Read_BufferIndex = 0;
90001926:	4d20      	ldr	r5, [pc, #128]	@ (900019a8 <JPEG_Decode_DMA+0x90>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001928:	4f20      	ldr	r7, [pc, #128]	@ (900019ac <JPEG_Decode_DMA+0x94>)
        JPEG_OUT_Read_BufferIndex = 0;
9000192a:	602c      	str	r4, [r5, #0]
        MCU_BlockIndex = 0;
9000192c:	4d20      	ldr	r5, [pc, #128]	@ (900019b0 <JPEG_Decode_DMA+0x98>)
        JPEG_OUT_Write_BufferIndex = 0;
9000192e:	601c      	str	r4, [r3, #0]
        MCU_BlockIndex = 0;
90001930:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001932:	4d20      	ldr	r5, [pc, #128]	@ (900019b4 <JPEG_Decode_DMA+0x9c>)
90001934:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001936:	68fd      	ldr	r5, [r7, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001938:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000193a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000193e:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001940:	ebb7 0c04 	subs.w	ip, r7, r4
        FrameBufferAddress = output;
90001944:	4f1c      	ldr	r7, [pc, #112]	@ (900019b8 <JPEG_Decode_DMA+0xa0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001946:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000194a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000194e:	bf18      	it	ne
90001950:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001954:	9500      	str	r5, [sp, #0]
        FrameBufferAddress = output;
90001956:	603e      	str	r6, [r7, #0]
        JPEG_InputImageIndex = 0;
90001958:	4e18      	ldr	r6, [pc, #96]	@ (900019bc <JPEG_Decode_DMA+0xa4>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000195a:	4d19      	ldr	r5, [pc, #100]	@ (900019c0 <JPEG_Decode_DMA+0xa8>)
        JPEG_InputImageIndex = 0;
9000195c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000195e:	4e19      	ldr	r6, [pc, #100]	@ (900019c4 <JPEG_Decode_DMA+0xac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001960:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001964:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageAddress = (uint32_t)input;
90001968:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000196a:	4e17      	ldr	r6, [pc, #92]	@ (900019c8 <JPEG_Decode_DMA+0xb0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000196c:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000196e:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001970:	2201      	movs	r2, #1
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001972:	702c      	strb	r4, [r5, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001974:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001976:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
9000197a:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000197c:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000197e:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001980:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
90001982:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001984:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001988:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
9000198c:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
90001990:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001994:	f008 f956 	bl	90009c44 <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001998:	4620      	mov	r0, r4
9000199a:	b003      	add	sp, #12
9000199c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000199e:	bf00      	nop
900019a0:	24006230 	.word	0x24006230
900019a4:	24006224 	.word	0x24006224
900019a8:	24000610 	.word	0x24000610
900019ac:	240005cc 	.word	0x240005cc
900019b0:	24000618 	.word	0x24000618
900019b4:	24006220 	.word	0x24006220
900019b8:	24006244 	.word	0x24006244
900019bc:	24006240 	.word	0x24006240
900019c0:	24000004 	.word	0x24000004
900019c4:	24006238 	.word	0x24006238
900019c8:	2400623c 	.word	0x2400623c

900019cc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019d0:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019d2:	2402      	movs	r4, #2
900019d4:	483d      	ldr	r0, [pc, #244]	@ (90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x100>)
900019d6:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019d8:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019da:	0725      	lsls	r5, r4, #28
900019dc:	d002      	beq.n	900019e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019de:	f024 040f 	bic.w	r4, r4, #15
900019e2:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019e4:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019e6:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019e8:	4d39      	ldr	r5, [pc, #228]	@ (90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019ea:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019ec:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019f0:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90001aec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>
900019f4:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019f6:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019f8:	4f36      	ldr	r7, [pc, #216]	@ (90001ad4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019fa:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019fe:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 90001af0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>
90001a02:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a06:	bf18      	it	ne
90001a08:	f1c4 0410 	rsbne	r4, r4, #16
90001a0c:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a0e:	4832      	ldr	r0, [pc, #200]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a10:	f7ff ff82 	bl	90001918 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a14:	4c31      	ldr	r4, [pc, #196]	@ (90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a16:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a18:	4e31      	ldr	r6, [pc, #196]	@ (90001ae0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a1a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a1c:	f8da 3000 	ldr.w	r3, [sl]
90001a20:	b10b      	cbz	r3, 90001a26 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5a>
90001a22:	6833      	ldr	r3, [r6, #0]
90001a24:	bb6b      	cbnz	r3, 90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a26:	6828      	ldr	r0, [r5, #0]
90001a28:	7a03      	ldrb	r3, [r0, #8]
90001a2a:	b93b      	cbnz	r3, 90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
90001a2c:	4b2d      	ldr	r3, [pc, #180]	@ (90001ae4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a2e:	681b      	ldr	r3, [r3, #0]
90001a30:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a34:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a38:	2b01      	cmp	r3, #1
90001a3a:	d03b      	beq.n	90001ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe8>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a3c:	683b      	ldr	r3, [r7, #0]
90001a3e:	2b01      	cmp	r3, #1
90001a40:	d00d      	beq.n	90001a5e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x92>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a42:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a44:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a46:	6823      	ldr	r3, [r4, #0]
90001a48:	2b02      	cmp	r3, #2
90001a4a:	d024      	beq.n	90001a96 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xca>
        } while (JpegProcessing_End != 1);
90001a4c:	6823      	ldr	r3, [r4, #0]
90001a4e:	2b01      	cmp	r3, #1
90001a50:	d1e4      	bne.n	90001a1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a52:	2300      	movs	r3, #0
90001a54:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a58:	6033      	str	r3, [r6, #0]
}
90001a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a5e:	f8d9 3000 	ldr.w	r3, [r9]
90001a62:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a66:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a6a:	2b00      	cmp	r3, #0
90001a6c:	d1e9      	bne.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
90001a6e:	f8da 3000 	ldr.w	r3, [sl]
90001a72:	2b00      	cmp	r3, #0
90001a74:	d1e5      	bne.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a76:	2102      	movs	r1, #2
90001a78:	4817      	ldr	r0, [pc, #92]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_output_is_paused = 0;
90001a7a:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a7c:	f008 fa92 	bl	90009fa4 <HAL_JPEG_Resume>
90001a80:	e7df      	b.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a82:	4815      	ldr	r0, [pc, #84]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a84:	f009 f84c 	bl	9000ab20 <HAL_JPEG_GetState>
90001a88:	2804      	cmp	r0, #4
90001a8a:	d01a      	beq.n	90001ac2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf6>
        return 1;
90001a8c:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a8e:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a90:	6823      	ldr	r3, [r4, #0]
90001a92:	2b02      	cmp	r3, #2
90001a94:	d1da      	bne.n	90001a4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x80>
                SEM_WAIT(semDecodingDone);
90001a96:	4b14      	ldr	r3, [pc, #80]	@ (90001ae8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a98:	f04f 31ff 	mov.w	r1, #4294967295
90001a9c:	6818      	ldr	r0, [r3, #0]
90001a9e:	f00d ff23 	bl	9000f8e8 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001aa2:	6823      	ldr	r3, [r4, #0]
90001aa4:	2b01      	cmp	r3, #1
90001aa6:	d1b9      	bne.n	90001a1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001aa8:	2300      	movs	r3, #0
90001aaa:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001aae:	6033      	str	r3, [r6, #0]
}
90001ab0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ab4:	6833      	ldr	r3, [r6, #0]
90001ab6:	2b00      	cmp	r3, #0
90001ab8:	d1c0      	bne.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
        DMA2D_reference->start();
90001aba:	6803      	ldr	r3, [r0, #0]
90001abc:	691b      	ldr	r3, [r3, #16]
90001abe:	4798      	blx	r3
90001ac0:	e7bc      	b.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
            HAL_JPEG_Abort(hjpeg);
90001ac2:	4805      	ldr	r0, [pc, #20]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001ac4:	f008 f93c 	bl	90009d40 <HAL_JPEG_Abort>
90001ac8:	e7e0      	b.n	90001a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90001aca:	bf00      	nop
90001acc:	240005cc 	.word	0x240005cc
90001ad0:	24006228 	.word	0x24006228
90001ad4:	24006230 	.word	0x24006230
90001ad8:	24009d0c 	.word	0x24009d0c
90001adc:	2400622c 	.word	0x2400622c
90001ae0:	2400060c 	.word	0x2400060c
90001ae4:	24000610 	.word	0x24000610
90001ae8:	24000614 	.word	0x24000614
90001aec:	24006234 	.word	0x24006234
90001af0:	24006224 	.word	0x24006224
90001af4:	24000004 	.word	0x24000004

90001af8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001af8:	6943      	ldr	r3, [r0, #20]
{
90001afa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001afe:	2b00      	cmp	r3, #0
90001b00:	f000 80ad 	beq.w	90001c5e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b04:	4604      	mov	r4, r0
    if (reader != 0)
90001b06:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b08:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b0a:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b0c:	2800      	cmp	r0, #0
90001b0e:	d05f      	beq.n	90001bd0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b10:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b12:	2b07      	cmp	r3, #7
90001b14:	f240 80a9 	bls.w	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b18:	6803      	ldr	r3, [r0, #0]
90001b1a:	4629      	mov	r1, r5
90001b1c:	68db      	ldr	r3, [r3, #12]
90001b1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b20:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b22:	2208      	movs	r2, #8
90001b24:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b26:	6803      	ldr	r3, [r0, #0]
90001b28:	691b      	ldr	r3, [r3, #16]
90001b2a:	4798      	blx	r3
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d04a      	beq.n	90001bc6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b30:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b34:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b38:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b3a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b3c:	2800      	cmp	r0, #0
90001b3e:	d046      	beq.n	90001bce <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b40:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b42:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b46:	1b52      	subs	r2, r2, r5
90001b48:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b4a:	eb03 070c 	add.w	r7, r3, ip
90001b4e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b52:	eb03 0805 	add.w	r8, r3, r5
90001b56:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b5a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b5e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b62:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b66:	78bd      	ldrb	r5, [r7, #2]
90001b68:	78ff      	ldrb	r7, [r7, #3]
90001b6a:	042d      	lsls	r5, r5, #16
90001b6c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b70:	ea45 050e 	orr.w	r5, r5, lr
90001b74:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b78:	189f      	adds	r7, r3, r2
90001b7a:	5c9b      	ldrb	r3, [r3, r2]
90001b7c:	787a      	ldrb	r2, [r7, #1]
90001b7e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b82:	eb01 0e05 	add.w	lr, r1, r5
90001b86:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b88:	f10e 0208 	add.w	r2, lr, #8
90001b8c:	429a      	cmp	r2, r3
90001b8e:	d213      	bcs.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b90:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b94:	459c      	cmp	ip, r3
90001b96:	d138      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b98:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b9c:	429f      	cmp	r7, r3
90001b9e:	d134      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001ba0:	2d00      	cmp	r5, #0
90001ba2:	d136      	bne.n	90001c12 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba4:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001ba6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba8:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bac:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bae:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bb0:	d002      	beq.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bb2:	2001      	movs	r0, #1
}
90001bb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bb8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bba:	6a23      	ldr	r3, [r4, #32]
90001bbc:	2000      	movs	r0, #0
        frameNumber = 1;
90001bbe:	6162      	str	r2, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
90001bc0:	61a3      	str	r3, [r4, #24]
}
90001bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001bc6:	230d      	movs	r3, #13
90001bc8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bcc:	e7b0      	b.n	90001b30 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001bce:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bd0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bd2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bd4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bd6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bd8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bda:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bde:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001be0:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001be2:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001be4:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001be8:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bea:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bec:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bee:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001bf2:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001bf6:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001bf8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bfa:	042d      	lsls	r5, r5, #16
90001bfc:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c00:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c02:	2000      	movs	r0, #0
90001c04:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c08:	e7bb      	b.n	90001b82 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c0a:	2d00      	cmp	r5, #0
90001c0c:	bf18      	it	ne
90001c0e:	4672      	movne	r2, lr
90001c10:	e7c8      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c12:	f101 0708 	add.w	r7, r1, #8
90001c16:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c18:	b1f0      	cbz	r0, 90001c58 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c1a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c1c:	429d      	cmp	r5, r3
90001c1e:	d824      	bhi.n	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c20:	6803      	ldr	r3, [r0, #0]
90001c22:	4639      	mov	r1, r7
90001c24:	68db      	ldr	r3, [r3, #12]
90001c26:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c28:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c2a:	462a      	mov	r2, r5
90001c2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c2e:	6803      	ldr	r3, [r0, #0]
90001c30:	691b      	ldr	r3, [r3, #16]
90001c32:	4798      	blx	r3
90001c34:	b910      	cbnz	r0, 90001c3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c36:	230d      	movs	r3, #13
90001c38:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c3c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c3e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c40:	b126      	cbz	r6, 90001c4c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c42:	4633      	mov	r3, r6
90001c44:	462a      	mov	r2, r5
90001c46:	4620      	mov	r0, r4
90001c48:	f7ff fec0 	bl	900019cc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c4c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c50:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c52:	442a      	add	r2, r5
            frameNumber++;
90001c54:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c56:	e7a5      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c58:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c5a:	4439      	add	r1, r7
90001c5c:	e7f0      	b.n	90001c40 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c5e:	4b07      	ldr	r3, [pc, #28]	@ (90001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c60:	21c1      	movs	r1, #193	@ 0xc1
90001c62:	4a07      	ldr	r2, [pc, #28]	@ (90001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c64:	4807      	ldr	r0, [pc, #28]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c66:	f02a fb0f 	bl	9002c288 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c6a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c6c:	4b06      	ldr	r3, [pc, #24]	@ (90001c88 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c6e:	4a07      	ldr	r2, [pc, #28]	@ (90001c8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c70:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c72:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c76:	4803      	ldr	r0, [pc, #12]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c78:	f02a fb06 	bl	9002c288 <__assert_func>
90001c7c:	9002d6e4 	.word	0x9002d6e4
90001c80:	9002d824 	.word	0x9002d824
90001c84:	9002d638 	.word	0x9002d638
90001c88:	9002d68c 	.word	0x9002d68c
90001c8c:	9002d6a0 	.word	0x9002d6a0

90001c90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c94:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c96:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c9a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c9c:	460e      	mov	r6, r1
90001c9e:	4690      	mov	r8, r2
90001ca0:	461f      	mov	r7, r3
    if (reader != 0)
90001ca2:	2800      	cmp	r0, #0
90001ca4:	f000 80f5 	beq.w	90001e92 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        if (length > aviBufferLength)
90001ca8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001caa:	2b07      	cmp	r3, #7
90001cac:	f240 8106 	bls.w	90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001cb0:	6803      	ldr	r3, [r0, #0]
90001cb2:	4649      	mov	r1, r9
90001cb4:	68db      	ldr	r3, [r3, #12]
90001cb6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cb8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cba:	2208      	movs	r2, #8
90001cbc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cbe:	6803      	ldr	r3, [r0, #0]
90001cc0:	691b      	ldr	r3, [r3, #16]
90001cc2:	4798      	blx	r3
90001cc4:	2800      	cmp	r0, #0
90001cc6:	f000 80af 	beq.w	90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cca:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001ccc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cce:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cd0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cd4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cd8:	2800      	cmp	r0, #0
90001cda:	f000 80f8 	beq.w	90001ece <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23e>
        const uint32_t index = offset - aviBufferStartOffset;
90001cde:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001ce2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001ce4:	1899      	adds	r1, r3, r2
90001ce6:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001ce8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cea:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cee:	f891 c001 	ldrb.w	ip, [r1, #1]
90001cf2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001cf6:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cfa:	ea49 0902 	orr.w	r9, r9, r2
90001cfe:	78ca      	ldrb	r2, [r1, #3]
90001d00:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d04:	454b      	cmp	r3, r9
90001d06:	f0c0 80d9 	bcc.w	90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001d0a:	6803      	ldr	r3, [r0, #0]
90001d0c:	4629      	mov	r1, r5
90001d0e:	68db      	ldr	r3, [r3, #12]
90001d10:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d12:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d14:	464a      	mov	r2, r9
90001d16:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d18:	6803      	ldr	r3, [r0, #0]
90001d1a:	691b      	ldr	r3, [r3, #16]
90001d1c:	4798      	blx	r3
90001d1e:	2800      	cmp	r0, #0
90001d20:	d07e      	beq.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x190>
        return aviBuffer;
90001d22:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d24:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d26:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d2a:	2302      	movs	r3, #2
90001d2c:	4869      	ldr	r0, [pc, #420]	@ (90001ed4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d2e:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d32:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d34:	d16f      	bne.n	90001e16 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x186>
90001d36:	4662      	mov	r2, ip
90001d38:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d3a:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d3c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d3e:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d40:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d44:	60c3      	str	r3, [r0, #12]
90001d46:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d48:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d4c:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d4e:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d50:	6143      	str	r3, [r0, #20]
90001d52:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d54:	f003 030f 	and.w	r3, r3, #15
90001d58:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d5a:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d5c:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d5e:	b236      	sxth	r6, r6
90001d60:	bf28      	it	cs
90001d62:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d64:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d68:	f002 020f 	and.w	r2, r2, #15
90001d6c:	f8df a194 	ldr.w	sl, [pc, #404]	@ 90001f04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d70:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d74:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d76:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d78:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d7a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d7c:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d80:	f8df 9184 	ldr.w	r9, [pc, #388]	@ 90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d84:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d86:	eba3 030c 	sub.w	r3, r3, ip
90001d8a:	62c3      	str	r3, [r0, #44]	@ 0x2c
90001d8c:	6923      	ldr	r3, [r4, #16]
90001d8e:	429e      	cmp	r6, r3
90001d90:	bf28      	it	cs
90001d92:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d94:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d98:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d9c:	bf18      	it	ne
90001d9e:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001da2:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001da4:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001da8:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001daa:	6385      	str	r5, [r0, #56]	@ 0x38
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dac:	4643      	mov	r3, r8
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dae:	bf18      	it	ne
90001db0:	f1c6 0610 	rsbne	r6, r6, #16
    DMA2D_reference = dma;
90001db4:	4d48      	ldr	r5, [pc, #288]	@ (90001ed8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x248>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001db6:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 90001f0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dba:	63c6      	str	r6, [r0, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dbc:	4847      	ldr	r0, [pc, #284]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001dbe:	f7ff fdab 	bl	90001918 <JPEG_Decode_DMA>
    FrameBufferWidth = framebuffer_width;
90001dc2:	4b47      	ldr	r3, [pc, #284]	@ (90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    DMA2D_reference = dma;
90001dc4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
    FrameBufferWidth = framebuffer_width;
90001dc6:	601f      	str	r7, [r3, #0]
90001dc8:	4e46      	ldr	r6, [pc, #280]	@ (90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
90001dca:	4c47      	ldr	r4, [pc, #284]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dcc:	4f47      	ldr	r7, [pc, #284]	@ (90001eec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
    DMA2D_reference = dma;
90001dce:	602a      	str	r2, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001dd0:	f8da 3000 	ldr.w	r3, [sl]
90001dd4:	b113      	cbz	r3, 90001ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x14c>
90001dd6:	6833      	ldr	r3, [r6, #0]
90001dd8:	2b00      	cmp	r3, #0
90001dda:	d13b      	bne.n	90001e54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ddc:	6828      	ldr	r0, [r5, #0]
90001dde:	7a03      	ldrb	r3, [r0, #8]
90001de0:	b93b      	cbnz	r3, 90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
90001de2:	4b43      	ldr	r3, [pc, #268]	@ (90001ef0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001de4:	681b      	ldr	r3, [r3, #0]
90001de6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001dea:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001dee:	2b01      	cmp	r3, #1
90001df0:	d044      	beq.n	90001e7c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001df2:	683b      	ldr	r3, [r7, #0]
90001df4:	2b01      	cmp	r3, #1
90001df6:	d01b      	beq.n	90001e30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    return 2;
90001df8:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001dfa:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001dfc:	6823      	ldr	r3, [r4, #0]
90001dfe:	2b02      	cmp	r3, #2
90001e00:	d032      	beq.n	90001e68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
    } while (JpegProcessing_End != 1);
90001e02:	6823      	ldr	r3, [r4, #0]
90001e04:	2b01      	cmp	r3, #1
90001e06:	d1e3      	bne.n	90001dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    Jpeg_HWDecodingEnd = 0;
90001e08:	2300      	movs	r3, #0
}
90001e0a:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e0c:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e10:	6033      	str	r3, [r6, #0]
}
90001e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e16:	f02c 030f 	bic.w	r3, ip, #15
90001e1a:	3310      	adds	r3, #16
90001e1c:	461a      	mov	r2, r3
90001e1e:	e78c      	b.n	90001d3a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xaa>
            lastError = AVI_ERROR_EOF_REACHED;
90001e20:	230d      	movs	r3, #13
90001e22:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e26:	e77c      	b.n	90001d22 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x92>
90001e28:	230d      	movs	r3, #13
90001e2a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e2e:	e74c      	b.n	90001cca <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e30:	f8d9 3000 	ldr.w	r3, [r9]
90001e34:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e38:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e3c:	2b00      	cmp	r3, #0
90001e3e:	d1db      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
90001e40:	f8da 3000 	ldr.w	r3, [sl]
90001e44:	2b00      	cmp	r3, #0
90001e46:	d1d7      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e48:	2102      	movs	r1, #2
90001e4a:	4824      	ldr	r0, [pc, #144]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
        JPEG_output_is_paused = 0;
90001e4c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e4e:	f008 f8a9 	bl	90009fa4 <HAL_JPEG_Resume>
90001e52:	e7d1      	b.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e54:	4821      	ldr	r0, [pc, #132]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e56:	f008 fe63 	bl	9000ab20 <HAL_JPEG_GetState>
90001e5a:	2804      	cmp	r0, #4
90001e5c:	d015      	beq.n	90001e8a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fa>
        return 1;
90001e5e:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e60:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e62:	6823      	ldr	r3, [r4, #0]
90001e64:	2b02      	cmp	r3, #2
90001e66:	d1cc      	bne.n	90001e02 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x172>
            SEM_WAIT(semDecodingDone);
90001e68:	4b22      	ldr	r3, [pc, #136]	@ (90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
90001e6a:	f04f 31ff 	mov.w	r1, #4294967295
90001e6e:	6818      	ldr	r0, [r3, #0]
90001e70:	f00d fd3a 	bl	9000f8e8 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e74:	6823      	ldr	r3, [r4, #0]
90001e76:	2b01      	cmp	r3, #1
90001e78:	d1aa      	bne.n	90001dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
90001e7a:	e7c5      	b.n	90001e08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x178>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e7c:	6833      	ldr	r3, [r6, #0]
90001e7e:	2b00      	cmp	r3, #0
90001e80:	d1b7      	bne.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
        DMA2D_reference->start();
90001e82:	6803      	ldr	r3, [r0, #0]
90001e84:	691b      	ldr	r3, [r3, #16]
90001e86:	4798      	blx	r3
90001e88:	e7b3      	b.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
            HAL_JPEG_Abort(hjpeg);
90001e8a:	4814      	ldr	r0, [pc, #80]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e8c:	f007 ff58 	bl	90009d40 <HAL_JPEG_Abort>
90001e90:	e7e5      	b.n	90001e5e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ce>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e92:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e96:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001e98:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001e9c:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001e9e:	4401      	add	r1, r0
        val |= d[0];
90001ea0:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001ea2:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001ea4:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001ea8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001eaa:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001eae:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001eb2:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001eb6:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001eba:	e734      	b.n	90001d26 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x96>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ebc:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001ebe:	4b0e      	ldr	r3, [pc, #56]	@ (90001ef8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001ec0:	4a0e      	ldr	r2, [pc, #56]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001ec2:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ec4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001ec8:	480d      	ldr	r0, [pc, #52]	@ (90001f00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eca:	f02a f9dd 	bl	9002c288 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ece:	4691      	mov	r9, r2
90001ed0:	e7e1      	b.n	90001e96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x206>
90001ed2:	bf00      	nop
90001ed4:	240005cc 	.word	0x240005cc
90001ed8:	24006228 	.word	0x24006228
90001edc:	24009d0c 	.word	0x24009d0c
90001ee0:	2400621c 	.word	0x2400621c
90001ee4:	2400060c 	.word	0x2400060c
90001ee8:	2400622c 	.word	0x2400622c
90001eec:	24006230 	.word	0x24006230
90001ef0:	24000610 	.word	0x24000610
90001ef4:	24000614 	.word	0x24000614
90001ef8:	9002d68c 	.word	0x9002d68c
90001efc:	9002d6a0 	.word	0x9002d6a0
90001f00:	9002d638 	.word	0x9002d638
90001f04:	24006234 	.word	0x24006234
90001f08:	24006224 	.word	0x24006224
90001f0c:	24000004 	.word	0x24000004

90001f10 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f10:	684b      	ldr	r3, [r1, #4]
90001f12:	2b01      	cmp	r3, #1
90001f14:	d015      	beq.n	90001f42 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f16:	2b02      	cmp	r3, #2
90001f18:	d00b      	beq.n	90001f32 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f1a:	b94b      	cbnz	r3, 90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f1c:	68cb      	ldr	r3, [r1, #12]
90001f1e:	0758      	lsls	r0, r3, #29
90001f20:	d11e      	bne.n	90001f60 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f22:	688b      	ldr	r3, [r1, #8]
90001f24:	075a      	lsls	r2, r3, #29
90001f26:	d003      	beq.n	90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f28:	f023 0307 	bic.w	r3, r3, #7
90001f2c:	3308      	adds	r3, #8
90001f2e:	608b      	str	r3, [r1, #8]
    }
90001f30:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f32:	68cb      	ldr	r3, [r1, #12]
90001f34:	071a      	lsls	r2, r3, #28
90001f36:	d0f4      	beq.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f38:	f023 030f 	bic.w	r3, r3, #15
90001f3c:	3310      	adds	r3, #16
90001f3e:	60cb      	str	r3, [r1, #12]
90001f40:	e7ef      	b.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f42:	68cb      	ldr	r3, [r1, #12]
90001f44:	071a      	lsls	r2, r3, #28
90001f46:	d003      	beq.n	90001f50 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f48:	f023 030f 	bic.w	r3, r3, #15
90001f4c:	3310      	adds	r3, #16
90001f4e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f50:	688b      	ldr	r3, [r1, #8]
90001f52:	0718      	lsls	r0, r3, #28
90001f54:	d0ec      	beq.n	90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f56:	f023 030f 	bic.w	r3, r3, #15
90001f5a:	3310      	adds	r3, #16
90001f5c:	608b      	str	r3, [r1, #8]
90001f5e:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f60:	f023 0307 	bic.w	r3, r3, #7
90001f64:	3308      	adds	r3, #8
90001f66:	60cb      	str	r3, [r1, #12]
90001f68:	e7db      	b.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
90001f6a:	bf00      	nop

90001f6c <HAL_JPEG_GetDataCallback>:
    {
90001f6c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f6e:	4c0c      	ldr	r4, [pc, #48]	@ (90001fa0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f70:	4a0c      	ldr	r2, [pc, #48]	@ (90001fa4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f72:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f74:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f76:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f78:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f7a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f7c:	d302      	bcc.n	90001f84 <HAL_JPEG_GetDataCallback+0x18>
    }
90001f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f82:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f84:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f86:	4b08      	ldr	r3, [pc, #32]	@ (90001fa8 <HAL_JPEG_GetDataCallback+0x3c>)
90001f88:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f8a:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f8e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f90:	bf28      	it	cs
90001f92:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001f96:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f9a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f9c:	f007 bec8 	b.w	90009d30 <HAL_JPEG_ConfigInputBuffer>
90001fa0:	24006240 	.word	0x24006240
90001fa4:	2400623c 	.word	0x2400623c
90001fa8:	24006238 	.word	0x24006238

90001fac <HAL_JPEG_DataReadyCallback>:
    {
90001fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fb0:	4e4a      	ldr	r6, [pc, #296]	@ (900020dc <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fb2:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb4:	4f4a      	ldr	r7, [pc, #296]	@ (900020e0 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fb6:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb8:	4d4a      	ldr	r5, [pc, #296]	@ (900020e4 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001fba:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fbc:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fbe:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fc2:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc4:	4b48      	ldr	r3, [pc, #288]	@ (900020e8 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc6:	4c49      	ldr	r4, [pc, #292]	@ (900020ec <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc8:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fca:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fcc:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fd0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fd4:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fd8:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fda:	4d45      	ldr	r5, [pc, #276]	@ (900020f0 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fdc:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fde:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fe2:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001fe6:	697b      	ldr	r3, [r7, #20]
90001fe8:	428b      	cmp	r3, r1
90001fea:	d260      	bcs.n	900020ae <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fec:	6821      	ldr	r1, [r4, #0]
90001fee:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff0:	6823      	ldr	r3, [r4, #0]
90001ff2:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001ff4:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001ffc:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002000:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002002:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002006:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000200a:	6823      	ldr	r3, [r4, #0]
9000200c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002010:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002014:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002016:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002018:	b12b      	cbz	r3, 90002026 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000201a:	6823      	ldr	r3, [r4, #0]
9000201c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002020:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002024:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002026:	6832      	ldr	r2, [r6, #0]
90002028:	69bb      	ldr	r3, [r7, #24]
9000202a:	4293      	cmp	r3, r2
9000202c:	d922      	bls.n	90002074 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000202e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002030:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002032:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002036:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002038:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000203c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000203e:	2200      	movs	r2, #0
90002040:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002042:	6823      	ldr	r3, [r4, #0]
90002044:	2b01      	cmp	r3, #1
90002046:	d900      	bls.n	9000204a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002048:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000204a:	6823      	ldr	r3, [r4, #0]
9000204c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002050:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002054:	2b00      	cmp	r3, #0
90002056:	d138      	bne.n	900020ca <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002058:	6823      	ldr	r3, [r4, #0]
9000205a:	4640      	mov	r0, r8
9000205c:	68fa      	ldr	r2, [r7, #12]
9000205e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002062:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002066:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000206a:	01d2      	lsls	r2, r2, #7
9000206c:	6859      	ldr	r1, [r3, #4]
9000206e:	f007 fe63 	bl	90009d38 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
90002072:	69bb      	ldr	r3, [r7, #24]
90002074:	6832      	ldr	r2, [r6, #0]
90002076:	429a      	cmp	r2, r3
90002078:	d20b      	bcs.n	90002092 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
9000207a:	4b1e      	ldr	r3, [pc, #120]	@ (900020f4 <HAL_JPEG_DataReadyCallback+0x148>)
9000207c:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
9000207e:	7a1b      	ldrb	r3, [r3, #8]
90002080:	b10b      	cbz	r3, 90002086 <HAL_JPEG_DataReadyCallback+0xda>
    }
90002082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
90002086:	4b1c      	ldr	r3, [pc, #112]	@ (900020f8 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002088:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
9000208c:	6818      	ldr	r0, [r3, #0]
9000208e:	f00d bc5d 	b.w	9000f94c <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002092:	6823      	ldr	r3, [r4, #0]
90002094:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
90002096:	4919      	ldr	r1, [pc, #100]	@ (900020fc <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002098:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000209a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
9000209e:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a0:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020a2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020a6:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a8:	f007 fe0a 	bl	90009cc0 <HAL_JPEG_Pause>
900020ac:	e7e5      	b.n	9000207a <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020ae:	6823      	ldr	r3, [r4, #0]
900020b0:	68fa      	ldr	r2, [r7, #12]
900020b2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020ba:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020be:	01d2      	lsls	r2, r2, #7
900020c0:	6859      	ldr	r1, [r3, #4]
    }
900020c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020c6:	f007 be37 	b.w	90009d38 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020ca:	2102      	movs	r1, #2
900020cc:	4640      	mov	r0, r8
900020ce:	f007 fdf7 	bl	90009cc0 <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020d2:	4b0b      	ldr	r3, [pc, #44]	@ (90002100 <HAL_JPEG_DataReadyCallback+0x154>)
900020d4:	2201      	movs	r2, #1
900020d6:	601a      	str	r2, [r3, #0]
900020d8:	e7be      	b.n	90002058 <HAL_JPEG_DataReadyCallback+0xac>
900020da:	bf00      	nop
900020dc:	24006220 	.word	0x24006220
900020e0:	240005cc 	.word	0x240005cc
900020e4:	24006244 	.word	0x24006244
900020e8:	2400621c 	.word	0x2400621c
900020ec:	24006224 	.word	0x24006224
900020f0:	24000004 	.word	0x24000004
900020f4:	24006228 	.word	0x24006228
900020f8:	24000614 	.word	0x24000614
900020fc:	24006234 	.word	0x24006234
90002100:	24006230 	.word	0x24006230

90002104 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002104:	b672      	cpsid	i
        while (1)
90002106:	e7fe      	b.n	90002106 <HAL_JPEG_ErrorCallback+0x2>

90002108 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002108:	4b01      	ldr	r3, [pc, #4]	@ (90002110 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000210a:	2201      	movs	r2, #1
9000210c:	601a      	str	r2, [r3, #0]
    }
9000210e:	4770      	bx	lr
90002110:	24006234 	.word	0x24006234

90002114 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002114:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002116:	4f1e      	ldr	r7, [pc, #120]	@ (90002190 <DMA2D_CopyBuffer+0x7c>)
90002118:	6903      	ldr	r3, [r0, #16]
9000211a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000211c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000211e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002122:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002124:	4e1b      	ldr	r6, [pc, #108]	@ (90002194 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002126:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000212a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000212e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002132:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002136:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002138:	bf18      	it	ne
9000213a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000213e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002140:	6939      	ldr	r1, [r7, #16]
90002142:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002146:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000214a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000214e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002150:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002152:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002154:	7e81      	ldrb	r1, [r0, #26]
90002156:	b1b9      	cbz	r1, 90002188 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002158:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
9000215a:	f1c1 0110 	rsb	r1, r1, #16
9000215e:	4321      	orrs	r1, r4
90002160:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002162:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002164:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002168:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000216c:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000216e:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002172:	4809      	ldr	r0, [pc, #36]	@ (90002198 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002174:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002176:	4b07      	ldr	r3, [pc, #28]	@ (90002194 <DMA2D_CopyBuffer+0x80>)
90002178:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
9000217a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000217c:	4a07      	ldr	r2, [pc, #28]	@ (9000219c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
9000217e:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002180:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002182:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002184:	6018      	str	r0, [r3, #0]
}
90002186:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002188:	f044 0410 	orr.w	r4, r4, #16
9000218c:	6474      	str	r4, [r6, #68]	@ 0x44
9000218e:	e7e8      	b.n	90002162 <DMA2D_CopyBuffer+0x4e>
90002190:	240005cc 	.word	0x240005cc
90002194:	52001000 	.word	0x52001000
90002198:	00012301 	.word	0x00012301
9000219c:	ff09000b 	.word	0xff09000b

900021a0 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021a0:	6902      	ldr	r2, [r0, #16]
{
900021a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021a6:	4605      	mov	r5, r0
900021a8:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021aa:	2a00      	cmp	r2, #0
900021ac:	d165      	bne.n	9000227a <DMA2D_CropBuffer+0xda>
900021ae:	4b35      	ldr	r3, [pc, #212]	@ (90002284 <DMA2D_CropBuffer+0xe4>)
900021b0:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021b4:	f1cc 0010 	rsb	r0, ip, #16
900021b8:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021ba:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021bc:	3901      	subs	r1, #1
900021be:	428a      	cmp	r2, r1
900021c0:	d102      	bne.n	900021c8 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021c2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021c4:	1a41      	subs	r1, r0, r1
900021c6:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021c8:	7e6e      	ldrb	r6, [r5, #25]
900021ca:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021cc:	2e00      	cmp	r6, #0
900021ce:	d051      	beq.n	90002274 <DMA2D_CropBuffer+0xd4>
900021d0:	f1c7 0110 	rsb	r1, r7, #16
900021d4:	46b8      	mov	r8, r7
900021d6:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021d8:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021dc:	f1be 0f00 	cmp.w	lr, #0
900021e0:	d002      	beq.n	900021e8 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021e2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021e4:	1b09      	subs	r1, r1, r4
900021e6:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021e8:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021ee:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021f2:	4413      	add	r3, r2
    job.MCU_drawn++;
900021f4:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
900021f6:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
900021fa:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021fc:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
90002200:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002204:	0052      	lsls	r2, r2, #1
90002206:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000220a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000220e:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002212:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002214:	b107      	cbz	r7, 90002218 <DMA2D_CropBuffer+0x78>
90002216:	b90e      	cbnz	r6, 9000221c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002218:	2300      	movs	r3, #0
9000221a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000221c:	4b1a      	ldr	r3, [pc, #104]	@ (90002288 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000221e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002220:	4f1a      	ldr	r7, [pc, #104]	@ (9000228c <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002222:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002224:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002226:	4a1a      	ldr	r2, [pc, #104]	@ (90002290 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002228:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000222a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000222e:	6810      	ldr	r0, [r2, #0]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002230:	2201      	movs	r2, #1
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002232:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002234:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002238:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000223c:	9302      	str	r3, [sp, #8]
    DMA2D_reference->addToQueue(blitOp);
9000223e:	6803      	ldr	r3, [r0, #0]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002240:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002244:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002246:	9201      	str	r2, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002248:	685b      	ldr	r3, [r3, #4]
9000224a:	9604      	str	r6, [sp, #16]
9000224c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000224e:	4b11      	ldr	r3, [pc, #68]	@ (90002294 <DMA2D_CropBuffer+0xf4>)
90002250:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002252:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002254:	4810      	ldr	r0, [pc, #64]	@ (90002298 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002256:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002258:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000225c:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000225e:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002260:	490e      	ldr	r1, [pc, #56]	@ (9000229c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
90002262:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002264:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002266:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002268:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000226a:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000226c:	6019      	str	r1, [r3, #0]
}
9000226e:	b00a      	add	sp, #40	@ 0x28
90002270:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90002274:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002276:	46b0      	mov	r8, r6
90002278:	e7ae      	b.n	900021d8 <DMA2D_CropBuffer+0x38>
9000227a:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000227c:	f04f 0c00 	mov.w	ip, #0
90002280:	4b00      	ldr	r3, [pc, #0]	@ (90002284 <DMA2D_CropBuffer+0xe4>)
90002282:	e79a      	b.n	900021ba <DMA2D_CropBuffer+0x1a>
90002284:	240005cc 	.word	0x240005cc
90002288:	01e00010 	.word	0x01e00010
9000228c:	2400061c 	.word	0x2400061c
90002290:	24006228 	.word	0x24006228
90002294:	52001000 	.word	0x52001000
90002298:	ff09000b 	.word	0xff09000b
9000229c:	00012301 	.word	0x00012301

900022a0 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022a0:	4b0d      	ldr	r3, [pc, #52]	@ (900022d8 <DMA2D_ExternalJobCompleted+0x38>)
900022a2:	6902      	ldr	r2, [r0, #16]
900022a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022a6:	429a      	cmp	r2, r3
900022a8:	d000      	beq.n	900022ac <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022aa:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022ac:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022ae:	4b0b      	ldr	r3, [pc, #44]	@ (900022dc <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022b0:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022b2:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022b4:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022b6:	3101      	adds	r1, #1
        job.DoCropping = false;
900022b8:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022ba:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022bc:	6819      	ldr	r1, [r3, #0]
900022be:	2901      	cmp	r1, #1
900022c0:	d900      	bls.n	900022c4 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022c2:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022c4:	7e83      	ldrb	r3, [r0, #26]
900022c6:	b113      	cbz	r3, 900022ce <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022c8:	4b05      	ldr	r3, [pc, #20]	@ (900022e0 <DMA2D_ExternalJobCompleted+0x40>)
900022ca:	2201      	movs	r2, #1
900022cc:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022ce:	4b05      	ldr	r3, [pc, #20]	@ (900022e4 <DMA2D_ExternalJobCompleted+0x44>)
900022d0:	6818      	ldr	r0, [r3, #0]
900022d2:	f00d bb3b 	b.w	9000f94c <osSemaphoreRelease>
900022d6:	bf00      	nop
900022d8:	240005cc 	.word	0x240005cc
900022dc:	24000610 	.word	0x24000610
900022e0:	2400060c 	.word	0x2400060c
900022e4:	24000614 	.word	0x24000614

900022e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022e8:	2101      	movs	r1, #1
900022ea:	2200      	movs	r2, #0
{
900022ec:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022ee:	4608      	mov	r0, r1
900022f0:	f00d faae 	bl	9000f850 <osSemaphoreNew>
900022f4:	4b0b      	ldr	r3, [pc, #44]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900022f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022f8:	b140      	cbz	r0, 9000230c <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900022fa:	2200      	movs	r2, #0
900022fc:	2104      	movs	r1, #4
900022fe:	2001      	movs	r0, #1
90002300:	f00d fb4e 	bl	9000f9a0 <osMessageQueueNew>
90002304:	4b08      	ldr	r3, [pc, #32]	@ (90002328 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002306:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002308:	b130      	cbz	r0, 90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
9000230a:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
9000230c:	4b07      	ldr	r3, [pc, #28]	@ (9000232c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000230e:	2128      	movs	r1, #40	@ 0x28
90002310:	4a07      	ldr	r2, [pc, #28]	@ (90002330 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002312:	4808      	ldr	r0, [pc, #32]	@ (90002334 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002314:	f029 ffb8 	bl	9002c288 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002318:	4b07      	ldr	r3, [pc, #28]	@ (90002338 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000231a:	212c      	movs	r1, #44	@ 0x2c
9000231c:	4a04      	ldr	r2, [pc, #16]	@ (90002330 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000231e:	4805      	ldr	r0, [pc, #20]	@ (90002334 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002320:	f029 ffb2 	bl	9002c288 <__assert_func>
90002324:	2400624c 	.word	0x2400624c
90002328:	24006248 	.word	0x24006248
9000232c:	9002d8c4 	.word	0x9002d8c4
90002330:	9002d910 	.word	0x9002d910
90002334:	9002d940 	.word	0x9002d940
90002338:	9002d98c 	.word	0x9002d98c

9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000233c:	4b02      	ldr	r3, [pc, #8]	@ (90002348 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000233e:	f04f 31ff 	mov.w	r1, #4294967295
90002342:	6818      	ldr	r0, [r3, #0]
90002344:	f00d bad0 	b.w	9000f8e8 <osSemaphoreAcquire>
90002348:	2400624c 	.word	0x2400624c

9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000234c:	4b01      	ldr	r3, [pc, #4]	@ (90002354 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000234e:	6818      	ldr	r0, [r3, #0]
90002350:	f00d bafc 	b.w	9000f94c <osSemaphoreRelease>
90002354:	2400624c 	.word	0x2400624c

90002358 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002358:	4b02      	ldr	r3, [pc, #8]	@ (90002364 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
9000235a:	2100      	movs	r1, #0
9000235c:	6818      	ldr	r0, [r3, #0]
9000235e:	f00d bac3 	b.w	9000f8e8 <osSemaphoreAcquire>
90002362:	bf00      	nop
90002364:	2400624c 	.word	0x2400624c

90002368 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002368:	4b01      	ldr	r3, [pc, #4]	@ (90002370 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
9000236a:	6818      	ldr	r0, [r3, #0]
9000236c:	f00d baee 	b.w	9000f94c <osSemaphoreRelease>
90002370:	2400624c 	.word	0x2400624c

90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002374:	4803      	ldr	r0, [pc, #12]	@ (90002384 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002376:	2300      	movs	r3, #0
90002378:	4903      	ldr	r1, [pc, #12]	@ (90002388 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
9000237a:	461a      	mov	r2, r3
9000237c:	6800      	ldr	r0, [r0, #0]
9000237e:	f00d bb4b 	b.w	9000fa18 <osMessageQueuePut>
90002382:	bf00      	nop
90002384:	24006248 	.word	0x24006248
90002388:	2400003c 	.word	0x2400003c

9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
9000238c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000238e:	2300      	movs	r3, #0
{
90002390:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002392:	4c07      	ldr	r4, [pc, #28]	@ (900023b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90002394:	461a      	mov	r2, r3
90002396:	a901      	add	r1, sp, #4
90002398:	6820      	ldr	r0, [r4, #0]
9000239a:	f00d fb79 	bl	9000fa90 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
9000239e:	f04f 33ff 	mov.w	r3, #4294967295
900023a2:	2200      	movs	r2, #0
900023a4:	a901      	add	r1, sp, #4
900023a6:	6820      	ldr	r0, [r4, #0]
900023a8:	f00d fb72 	bl	9000fa90 <osMessageQueueGet>
}
900023ac:	b002      	add	sp, #8
900023ae:	bd10      	pop	{r4, pc}
900023b0:	24006248 	.word	0x24006248

900023b4 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023b4:	6803      	ldr	r3, [r0, #0]
900023b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023b8:	4718      	bx	r3
900023ba:	bf00      	nop

900023bc <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023bc:	2001      	movs	r0, #1
900023be:	4770      	bx	lr

900023c0 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
900023c0:	e7fe      	b.n	900023c0 <DMA2D_XferErrorCallback>
900023c2:	bf00      	nop

900023c4 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023c4:	4905      	ldr	r1, [pc, #20]	@ (900023dc <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023c6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023ca:	4b05      	ldr	r3, [pc, #20]	@ (900023e0 <_ZN8STM32DMAD1Ev+0x1c>)
900023cc:	6001      	str	r1, [r0, #0]
900023ce:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023d2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023d6:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023da:	4770      	bx	lr
900023dc:	9002db30 	.word	0x9002db30
900023e0:	e000e100 	.word	0xe000e100

900023e4 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023e4:	4b11      	ldr	r3, [pc, #68]	@ (9000242c <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023e6:	4912      	ldr	r1, [pc, #72]	@ (90002430 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023e8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023ec:	4811      	ldr	r0, [pc, #68]	@ (90002434 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023ee:	f042 0210 	orr.w	r2, r2, #16
{
900023f2:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023f4:	4c10      	ldr	r4, [pc, #64]	@ (90002438 <_ZN8STM32DMA10initializeEv+0x54>)
{
900023f6:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023f8:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023fc:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90002400:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90002404:	f002 0210 	and.w	r2, r2, #16
90002408:	9201      	str	r2, [sp, #4]
9000240a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000240c:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000240e:	f042 0210 	orr.w	r2, r2, #16
90002412:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002414:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002416:	f022 0210 	bic.w	r2, r2, #16
9000241a:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000241c:	4b07      	ldr	r3, [pc, #28]	@ (9000243c <_ZN8STM32DMA10initializeEv+0x58>)
9000241e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002422:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002424:	b003      	add	sp, #12
90002426:	f85d 4b04 	ldr.w	r4, [sp], #4
9000242a:	4770      	bx	lr
9000242c:	58024400 	.word	0x58024400
90002430:	24009d64 	.word	0x24009d64
90002434:	900023c1 	.word	0x900023c1
90002438:	9000280d 	.word	0x9000280d
9000243c:	e000e100 	.word	0xe000e100

90002440 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002440:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002444:	4770      	bx	lr
90002446:	bf00      	nop

90002448 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002448:	4909      	ldr	r1, [pc, #36]	@ (90002470 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000244a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000244e:	4b09      	ldr	r3, [pc, #36]	@ (90002474 <_ZN8STM32DMAD0Ev+0x2c>)
90002450:	b510      	push	{r4, lr}
90002452:	6001      	str	r1, [r0, #0]
90002454:	4604      	mov	r4, r0
90002456:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000245a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000245e:	f3bf 8f6f 	isb	sy
}
90002462:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002466:	f029 fb98 	bl	9002bb9a <_ZdlPvj>
9000246a:	4620      	mov	r0, r4
9000246c:	bd10      	pop	{r4, pc}
9000246e:	bf00      	nop
90002470:	9002db30 	.word	0x9002db30
90002474:	e000e100 	.word	0xe000e100

90002478 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002478:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
9000247c:	b510      	push	{r4, lr}
9000247e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90002480:	b963      	cbnz	r3, 9000249c <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
90002482:	6803      	ldr	r3, [r0, #0]
90002484:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002486:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002488:	4924      	ldr	r1, [pc, #144]	@ (9000251c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
9000248a:	4a25      	ldr	r2, [pc, #148]	@ (90002520 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
9000248c:	680b      	ldr	r3, [r1, #0]
9000248e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002492:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002496:	2b01      	cmp	r3, #1
90002498:	d015      	beq.n	900024c6 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
9000249a:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
9000249c:	7a03      	ldrb	r3, [r0, #8]
9000249e:	2b00      	cmp	r3, #0
900024a0:	d12b      	bne.n	900024fa <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
900024a2:	6860      	ldr	r0, [r4, #4]
900024a4:	6803      	ldr	r3, [r0, #0]
900024a6:	681b      	ldr	r3, [r3, #0]
900024a8:	4798      	blx	r3
900024aa:	4603      	mov	r3, r0
900024ac:	2800      	cmp	r0, #0
900024ae:	d1f4      	bne.n	9000249a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024b0:	7a62      	ldrb	r2, [r4, #9]
900024b2:	2a00      	cmp	r2, #0
900024b4:	d0f1      	beq.n	9000249a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024b6:	6822      	ldr	r2, [r4, #0]
900024b8:	4620      	mov	r0, r4
                started_by_external_job = false;
900024ba:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024be:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024c4:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024c6:	4817      	ldr	r0, [pc, #92]	@ (90002524 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024c8:	6800      	ldr	r0, [r0, #0]
900024ca:	2800      	cmp	r0, #0
900024cc:	d1e5      	bne.n	9000249a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024ce:	7a20      	ldrb	r0, [r4, #8]
900024d0:	2800      	cmp	r0, #0
900024d2:	d1e2      	bne.n	9000249a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024d4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024d6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024da:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024de:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024e0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024e4:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024e6:	6808      	ldr	r0, [r1, #0]
900024e8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024ec:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024f0:	b17b      	cbz	r3, 90002512 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024f6:	f7ff be53 	b.w	900021a0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024fa:	4b08      	ldr	r3, [pc, #32]	@ (9000251c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
900024fc:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024fe:	4808      	ldr	r0, [pc, #32]	@ (90002520 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
90002500:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002502:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002504:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002508:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000250c:	f7ff fec8 	bl	900022a0 <DMA2D_ExternalJobCompleted>
90002510:	e7c7      	b.n	900024a2 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002512:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002516:	f7ff bdfd 	b.w	90002114 <DMA2D_CopyBuffer>
9000251a:	bf00      	nop
9000251c:	24000610 	.word	0x24000610
90002520:	24000004 	.word	0x24000004
90002524:	2400060c 	.word	0x2400060c

90002528 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002528:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000252a:	7f8b      	ldrb	r3, [r1, #30]
9000252c:	2b0a      	cmp	r3, #10
9000252e:	d83d      	bhi.n	900025ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002530:	e8df f003 	tbb	[pc, r3]
90002534:	3c2a063a 	.word	0x3c2a063a
90002538:	063c3c3c 	.word	0x063c3c3c
9000253c:	0606      	.short	0x0606
9000253e:	06          	.byte	0x06
9000253f:	00          	.byte	0x00
90002540:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002542:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002546:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002548:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000254a:	4b1b      	ldr	r3, [pc, #108]	@ (900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000254c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002550:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002552:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002556:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002558:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000255a:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000255c:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000255e:	680e      	ldr	r6, [r1, #0]
        return color;
90002560:	68c8      	ldr	r0, [r1, #12]
90002562:	2e08      	cmp	r6, #8
90002564:	d012      	beq.n	9000258c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002566:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002568:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000256a:	0941      	lsrs	r1, r0, #5
9000256c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002570:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002574:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002576:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
9000257a:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000257c:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
9000257e:	490f      	ldr	r1, [pc, #60]	@ (900025bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002580:	4302      	orrs	r2, r0
90002582:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90002584:	6019      	str	r1, [r3, #0]
    }
}
90002586:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002588:	2400      	movs	r4, #0
9000258a:	e7da      	b.n	90002542 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000258c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000258e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002590:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002592:	4a0b      	ldr	r2, [pc, #44]	@ (900025c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
90002594:	7f09      	ldrb	r1, [r1, #28]
90002596:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
9000259a:	490a      	ldr	r1, [pc, #40]	@ (900025c4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000259c:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000259e:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025a0:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025a2:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025a4:	6019      	str	r1, [r3, #0]
}
900025a6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900025a8:	2402      	movs	r4, #2
900025aa:	e7ca      	b.n	90002542 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
900025ac:	4b06      	ldr	r3, [pc, #24]	@ (900025c8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
900025ae:	2191      	movs	r1, #145	@ 0x91
900025b0:	4a06      	ldr	r2, [pc, #24]	@ (900025cc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025b2:	4807      	ldr	r0, [pc, #28]	@ (900025d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025b4:	f029 fe68 	bl	9002c288 <__assert_func>
900025b8:	52001000 	.word	0x52001000
900025bc:	00032301 	.word	0x00032301
900025c0:	00010009 	.word	0x00010009
900025c4:	00022301 	.word	0x00022301
900025c8:	9002d9d0 	.word	0x9002d9d0
900025cc:	9002d9ec 	.word	0x9002d9ec
900025d0:	9002da38 	.word	0x9002da38

900025d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025d6:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025da:	f1be 0f0b 	cmp.w	lr, #11
900025de:	f200 80ac 	bhi.w	9000273a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025e2:	e8df f00e 	tbb	[pc, lr]
900025e6:	605b      	.short	0x605b
900025e8:	aaaaaa46 	.word	0xaaaaaa46
900025ec:	060606aa 	.word	0x060606aa
900025f0:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025f2:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900025f4:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900025f8:	f1bc 0f0b 	cmp.w	ip, #11
900025fc:	f200 809d 	bhi.w	9000273a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
90002600:	e8df f00c 	tbb	[pc, ip]
90002604:	9b0d494e 	.word	0x9b0d494e
90002608:	069b9b9b 	.word	0x069b9b9b
9000260c:	06060606 	.word	0x06060606
    switch (format)
90002610:	f1bc 0f0b 	cmp.w	ip, #11
90002614:	f000 8097 	beq.w	90002746 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        dma2dColorMode = DMA2D_INPUT_L8;
90002618:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000261a:	2701      	movs	r7, #1
9000261c:	e001      	b.n	90002622 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000261e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002620:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002622:	8a8b      	ldrh	r3, [r1, #20]
90002624:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002626:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002628:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000262a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000262c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000262e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002632:	4b4b      	ldr	r3, [pc, #300]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002634:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002636:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002638:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000263a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000263c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000263e:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002640:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002642:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002644:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002646:	680a      	ldr	r2, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002648:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000264a:	2a80      	cmp	r2, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000264c:	ea4f 6007 	mov.w	r0, r7, lsl #24
    switch (blitOp.operation)
90002650:	d02e      	beq.n	900026b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xdc>
90002652:	d810      	bhi.n	90002676 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002654:	2a20      	cmp	r2, #32
90002656:	d028      	beq.n	900026aa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
90002658:	2a40      	cmp	r2, #64	@ 0x40
9000265a:	d026      	beq.n	900026aa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
9000265c:	2a04      	cmp	r2, #4
9000265e:	d15a      	bne.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002660:	4330      	orrs	r0, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002662:	4a40      	ldr	r2, [pc, #256]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002664:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
90002668:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000266a:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000266c:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000266e:	601a      	str	r2, [r3, #0]
}
90002670:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002672:	2600      	movs	r6, #0
90002674:	e7be      	b.n	900025f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
90002676:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000267a:	d059      	beq.n	90002730 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
9000267c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90002680:	d149      	bne.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002682:	4a39      	ldr	r2, [pc, #228]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002684:	4302      	orrs	r2, r0
90002686:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002688:	4a36      	ldr	r2, [pc, #216]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000268a:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000268c:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000268e:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002690:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002692:	601a      	str	r2, [r3, #0]
}
90002694:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90002696:	2401      	movs	r4, #1
90002698:	4627      	mov	r7, r4
9000269a:	e7c2      	b.n	90002622 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
9000269c:	2602      	movs	r6, #2
9000269e:	e7a9      	b.n	900025f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
900026a0:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900026a2:	4627      	mov	r7, r4
900026a4:	e7bd      	b.n	90002622 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB888;
900026a6:	2601      	movs	r6, #1
900026a8:	e7a4      	b.n	900025f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026aa:	4330      	orrs	r0, r6
900026ac:	4b2c      	ldr	r3, [pc, #176]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026ae:	e7d8      	b.n	90002662 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026b0:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b2:	4330      	orrs	r0, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026b4:	1d11      	adds	r1, r2, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026ba:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
900026bc:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026be:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026c0:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026c2:	615d      	str	r5, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026c4:	b9b1      	cbnz	r1, 900026f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026c6:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900026c8:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ca:	69d8      	ldr	r0, [r3, #28]
900026cc:	4a27      	ldr	r2, [pc, #156]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026ce:	3901      	subs	r1, #1
900026d0:	4002      	ands	r2, r0
900026d2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026d6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026d8:	4a21      	ldr	r2, [pc, #132]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026da:	69d3      	ldr	r3, [r2, #28]
900026dc:	f043 0320 	orr.w	r3, r3, #32
900026e0:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900026e2:	69d3      	ldr	r3, [r2, #28]
900026e4:	069b      	lsls	r3, r3, #26
900026e6:	d4fc      	bmi.n	900026e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900026e8:	2310      	movs	r3, #16
900026ea:	6093      	str	r3, [r2, #8]
            if (blend)
900026ec:	b317      	cbz	r7, 90002734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026ee:	4b1d      	ldr	r3, [pc, #116]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026f0:	6013      	str	r3, [r2, #0]
}
900026f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900026f4:	2901      	cmp	r1, #1
900026f6:	d12c      	bne.n	90002752 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17e>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f8:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
900026fa:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026fc:	69d8      	ldr	r0, [r3, #28]
900026fe:	4a1b      	ldr	r2, [pc, #108]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
90002700:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90002704:	bf18      	it	ne
90002706:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002708:	4002      	ands	r2, r0
9000270a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000270e:	f042 0210 	orr.w	r2, r2, #16
90002712:	61da      	str	r2, [r3, #28]
                break;
90002714:	e7e0      	b.n	900026d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
        if (blitOp.srcFormat != blitOp.dstFormat)
90002716:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002718:	ea46 0600 	orr.w	r6, r6, r0
9000271c:	4b10      	ldr	r3, [pc, #64]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000271e:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002722:	bf14      	ite	ne
90002724:	4a12      	ldrne	r2, [pc, #72]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002726:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000272a:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000272c:	601a      	str	r2, [r3, #0]
}
9000272e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002730:	4a10      	ldr	r2, [pc, #64]	@ (90002774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002732:	e7a7      	b.n	90002684 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002734:	4b0e      	ldr	r3, [pc, #56]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002736:	6013      	str	r3, [r2, #0]
}
90002738:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000273a:	4b0f      	ldr	r3, [pc, #60]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000273c:	2170      	movs	r1, #112	@ 0x70
9000273e:	4a0f      	ldr	r2, [pc, #60]	@ (9000277c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002740:	480f      	ldr	r0, [pc, #60]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002742:	f029 fda1 	bl	9002c288 <__assert_func>
        assert(0 && "Unsupported Format!");
90002746:	4b0c      	ldr	r3, [pc, #48]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002748:	2191      	movs	r1, #145	@ 0x91
9000274a:	4a0e      	ldr	r2, [pc, #56]	@ (90002784 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000274c:	480c      	ldr	r0, [pc, #48]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000274e:	f029 fd9b 	bl	9002c288 <__assert_func>
                assert(0 && "Unsupported format");
90002752:	4b0d      	ldr	r3, [pc, #52]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002754:	f240 111b 	movw	r1, #283	@ 0x11b
90002758:	4a0c      	ldr	r2, [pc, #48]	@ (9000278c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000275a:	4809      	ldr	r0, [pc, #36]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000275c:	f029 fd94 	bl	9002c288 <__assert_func>
90002760:	52001000 	.word	0x52001000
90002764:	00022301 	.word	0x00022301
90002768:	00020009 	.word	0x00020009
9000276c:	ffff00ef 	.word	0xffff00ef
90002770:	00012301 	.word	0x00012301
90002774:	0002000a 	.word	0x0002000a
90002778:	9002d9d0 	.word	0x9002d9d0
9000277c:	9002da80 	.word	0x9002da80
90002780:	9002da38 	.word	0x9002da38
90002784:	9002d9ec 	.word	0x9002d9ec
90002788:	9002dacc 	.word	0x9002dacc
9000278c:	9002dae8 	.word	0x9002dae8

90002790 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002790:	b510      	push	{r4, lr}
90002792:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002794:	6840      	ldr	r0, [r0, #4]
90002796:	6803      	ldr	r3, [r0, #0]
90002798:	681b      	ldr	r3, [r3, #0]
9000279a:	4798      	blx	r3
9000279c:	b958      	cbnz	r0, 900027b6 <_ZN8STM32DMA5startEv+0x26>
9000279e:	7a63      	ldrb	r3, [r4, #9]
900027a0:	b14b      	cbz	r3, 900027b6 <_ZN8STM32DMA5startEv+0x26>
900027a2:	7a23      	ldrb	r3, [r4, #8]
900027a4:	bb3b      	cbnz	r3, 900027f6 <_ZN8STM32DMA5startEv+0x66>
            execute();
900027a6:	6822      	ldr	r2, [r4, #0]
900027a8:	4620      	mov	r0, r4
            started_by_external_job = false;
900027aa:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
900027ae:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027b4:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027b6:	4913      	ldr	r1, [pc, #76]	@ (90002804 <_ZN8STM32DMA5startEv+0x74>)
900027b8:	4a13      	ldr	r2, [pc, #76]	@ (90002808 <_ZN8STM32DMA5startEv+0x78>)
900027ba:	680b      	ldr	r3, [r1, #0]
900027bc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027c0:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027c4:	2b01      	cmp	r3, #1
900027c6:	d000      	beq.n	900027ca <_ZN8STM32DMA5startEv+0x3a>
    }
900027c8:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ca:	7a20      	ldrb	r0, [r4, #8]
900027cc:	2800      	cmp	r0, #0
900027ce:	d1fb      	bne.n	900027c8 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027d0:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027d2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027d6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027da:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027dc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027e0:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027e2:	6808      	ldr	r0, [r1, #0]
900027e4:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027e8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027ec:	b133      	cbz	r3, 900027fc <_ZN8STM32DMA5startEv+0x6c>
    }
900027ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027f2:	f7ff bcd5 	b.w	900021a0 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027f6:	4b03      	ldr	r3, [pc, #12]	@ (90002804 <_ZN8STM32DMA5startEv+0x74>)
900027f8:	681b      	ldr	r3, [r3, #0]
    }
900027fa:	bd10      	pop	{r4, pc}
900027fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002800:	f7ff bc88 	b.w	90002114 <DMA2D_CopyBuffer>
90002804:	24000610 	.word	0x24000610
90002808:	24000004 	.word	0x24000004

9000280c <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
9000280c:	4b2c      	ldr	r3, [pc, #176]	@ (900028c0 <DMA2D_XferCpltCallback+0xb4>)
9000280e:	492d      	ldr	r1, [pc, #180]	@ (900028c4 <DMA2D_XferCpltCallback+0xb8>)
90002810:	681b      	ldr	r3, [r3, #0]
    {
90002812:	b510      	push	{r4, lr}
90002814:	685c      	ldr	r4, [r3, #4]
90002816:	6823      	ldr	r3, [r4, #0]
90002818:	695a      	ldr	r2, [r3, #20]
9000281a:	428a      	cmp	r2, r1
9000281c:	d122      	bne.n	90002864 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000281e:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
90002822:	b192      	cbz	r2, 9000284a <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002824:	7a23      	ldrb	r3, [r4, #8]
90002826:	2b00      	cmp	r3, #0
90002828:	d13a      	bne.n	900028a0 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
9000282a:	6860      	ldr	r0, [r4, #4]
9000282c:	6803      	ldr	r3, [r0, #0]
9000282e:	681b      	ldr	r3, [r3, #0]
90002830:	4798      	blx	r3
90002832:	4603      	mov	r3, r0
90002834:	b9a8      	cbnz	r0, 90002862 <DMA2D_XferCpltCallback+0x56>
90002836:	7a62      	ldrb	r2, [r4, #9]
90002838:	b19a      	cbz	r2, 90002862 <DMA2D_XferCpltCallback+0x56>
                execute();
9000283a:	6822      	ldr	r2, [r4, #0]
9000283c:	4620      	mov	r0, r4
                started_by_external_job = false;
9000283e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002842:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002844:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002848:	4718      	bx	r3
            executeCompleted();
9000284a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000284c:	4620      	mov	r0, r4
9000284e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002850:	491d      	ldr	r1, [pc, #116]	@ (900028c8 <DMA2D_XferCpltCallback+0xbc>)
90002852:	4a1e      	ldr	r2, [pc, #120]	@ (900028cc <DMA2D_XferCpltCallback+0xc0>)
90002854:	680b      	ldr	r3, [r1, #0]
90002856:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000285a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000285e:	2b01      	cmp	r3, #1
90002860:	d004      	beq.n	9000286c <DMA2D_XferCpltCallback+0x60>
90002862:	bd10      	pop	{r4, pc}
90002864:	4620      	mov	r0, r4
90002866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000286a:	4710      	bx	r2
9000286c:	4818      	ldr	r0, [pc, #96]	@ (900028d0 <DMA2D_XferCpltCallback+0xc4>)
9000286e:	6800      	ldr	r0, [r0, #0]
90002870:	2800      	cmp	r0, #0
90002872:	d1f6      	bne.n	90002862 <DMA2D_XferCpltCallback+0x56>
90002874:	7a20      	ldrb	r0, [r4, #8]
90002876:	2800      	cmp	r0, #0
90002878:	d1f3      	bne.n	90002862 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000287a:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
9000287c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002880:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002884:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002886:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000288a:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000288c:	6808      	ldr	r0, [r1, #0]
9000288e:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002892:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002896:	b17b      	cbz	r3, 900028b8 <DMA2D_XferCpltCallback+0xac>
90002898:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000289c:	f7ff bc80 	b.w	900021a0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028a0:	4b09      	ldr	r3, [pc, #36]	@ (900028c8 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
900028a2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028a4:	4809      	ldr	r0, [pc, #36]	@ (900028cc <DMA2D_XferCpltCallback+0xc0>)
900028a6:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900028a8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028aa:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028ae:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028b2:	f7ff fcf5 	bl	900022a0 <DMA2D_ExternalJobCompleted>
900028b6:	e7b8      	b.n	9000282a <DMA2D_XferCpltCallback+0x1e>
900028b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028bc:	f7ff bc2a 	b.w	90002114 <DMA2D_CopyBuffer>
900028c0:	240245a0 	.word	0x240245a0
900028c4:	90002479 	.word	0x90002479
900028c8:	24000610 	.word	0x24000610
900028cc:	24000004 	.word	0x24000004
900028d0:	2400060c 	.word	0x2400060c

900028d4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028d4:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028d6:	4b0c      	ldr	r3, [pc, #48]	@ (90002908 <_ZN8STM32DMAC1Ev+0x34>)
STM32DMA::STM32DMA()
900028d8:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028da:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028dc:	2500      	movs	r5, #0
900028de:	300c      	adds	r0, #12
900028e0:	2260      	movs	r2, #96	@ 0x60
900028e2:	7235      	strb	r5, [r6, #8]
900028e4:	7275      	strb	r5, [r6, #9]
900028e6:	6070      	str	r0, [r6, #4]
900028e8:	f844 3b20 	str.w	r3, [r4], #32
900028ec:	4621      	mov	r1, r4
900028ee:	f011 fe35 	bl	9001455c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028f2:	4621      	mov	r1, r4
900028f4:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
900028f8:	60cd      	str	r5, [r1, #12]
900028fa:	3124      	adds	r1, #36	@ 0x24
900028fc:	4299      	cmp	r1, r3
900028fe:	d1fb      	bne.n	900028f8 <_ZN8STM32DMAC1Ev+0x24>
}
90002900:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
90002902:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
90002906:	bd70      	pop	{r4, r5, r6, pc}
90002908:	9002db30 	.word	0x9002db30

9000290c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000290c:	4a03      	ldr	r2, [pc, #12]	@ (9000291c <_ZN8touchgfx5paint8tearDownEv+0x10>)
9000290e:	6813      	ldr	r3, [r2, #0]
90002910:	07db      	lsls	r3, r3, #31
90002912:	d4fc      	bmi.n	9000290e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002914:	2323      	movs	r3, #35	@ 0x23
90002916:	6093      	str	r3, [r2, #8]
}
90002918:	4770      	bx	lr
9000291a:	bf00      	nop
9000291c:	52001000 	.word	0x52001000

90002920 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This funciton is used when decompressing RGB images to flush
    // the currently decoded pixels in the cache to allow the DMA2D
    // to blend the pixels correcly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002920:	4a0b      	ldr	r2, [pc, #44]	@ (90002950 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
90002922:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002924:	03db      	lsls	r3, r3, #15
90002926:	d501      	bpl.n	9000292c <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002928:	2900      	cmp	r1, #0
9000292a:	dc00      	bgt.n	9000292e <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
9000292c:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
9000292e:	f000 031f 	and.w	r3, r0, #31
90002932:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002934:	f3bf 8f4f 	dsb	sy
90002938:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9000293a:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
9000293e:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002940:	1a0b      	subs	r3, r1, r0
90002942:	2b00      	cmp	r3, #0
90002944:	dcf9      	bgt.n	9000293a <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
90002946:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000294a:	f3bf 8f6f 	isb	sy
9000294e:	4770      	bx	lr
90002950:	e000ed00 	.word	0xe000ed00

90002954 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002954:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002956:	4c11      	ldr	r4, [pc, #68]	@ (9000299c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002958:	6825      	ldr	r5, [r4, #0]
9000295a:	07ed      	lsls	r5, r5, #31
9000295c:	d4fc      	bmi.n	90002958 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000295e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002960:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90002962:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002964:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002966:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000296a:	f04f 0502 	mov.w	r5, #2
9000296e:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002970:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002972:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002974:	d00b      	beq.n	9000298e <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002976:	490a      	ldr	r1, [pc, #40]	@ (900029a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002978:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000297a:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000297e:	4909      	ldr	r1, [pc, #36]	@ (900029a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002980:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90002982:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90002984:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90002986:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002988:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
9000298a:	bc30      	pop	{r4, r5}
9000298c:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000298e:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002990:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002992:	4b05      	ldr	r3, [pc, #20]	@ (900029a8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002994:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002996:	6023      	str	r3, [r4, #0]
}
90002998:	bc30      	pop	{r4, r5}
9000299a:	4770      	bx	lr
9000299c:	52001000 	.word	0x52001000
900029a0:	00010009 	.word	0x00010009
900029a4:	00020001 	.word	0x00020001
900029a8:	00030001 	.word	0x00030001

900029ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
900029ac:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029ae:	4c10      	ldr	r4, [pc, #64]	@ (900029f0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029b0:	6825      	ldr	r5, [r4, #0]
900029b2:	07ed      	lsls	r5, r5, #31
900029b4:	d4fc      	bmi.n	900029b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029b6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029b8:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900029ba:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029bc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029be:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029c2:	f04f 0502 	mov.w	r5, #2
900029c6:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029c8:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029ca:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029cc:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029ce:	d009      	beq.n	900029e4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d0:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029d2:	4a08      	ldr	r2, [pc, #32]	@ (900029f4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d4:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900029d8:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029da:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029dc:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029de:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
900029e0:	bc30      	pop	{r4, r5}
900029e2:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029e4:	4a04      	ldr	r2, [pc, #16]	@ (900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029e6:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029e8:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029ea:	6023      	str	r3, [r4, #0]
}
900029ec:	bc30      	pop	{r4, r5}
900029ee:	4770      	bx	lr
900029f0:	52001000 	.word	0x52001000
900029f4:	00020001 	.word	0x00020001
900029f8:	ff020002 	.word	0xff020002

900029fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
900029fc:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029fe:	4c0c      	ldr	r4, [pc, #48]	@ (90002a30 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
90002a00:	6825      	ldr	r5, [r4, #0]
90002a02:	07ed      	lsls	r5, r5, #31
90002a04:	d4fc      	bmi.n	90002a00 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a06:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a08:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a0a:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a0c:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a0e:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a12:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a16:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a18:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a1a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a1c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a1e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a20:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a22:	4b04      	ldr	r3, [pc, #16]	@ (90002a34 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a24:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a26:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a28:	6023      	str	r3, [r4, #0]
}
90002a2a:	bc70      	pop	{r4, r5, r6}
90002a2c:	4770      	bx	lr
90002a2e:	bf00      	nop
90002a30:	52001000 	.word	0x52001000
90002a34:	00020001 	.word	0x00020001

90002a38 <_ZN8touchgfx9TypedTextD1Ev>:
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
    {
    }
90002a38:	4770      	bx	lr
90002a3a:	bf00      	nop

90002a3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a3c:	2001      	movs	r0, #1
90002a3e:	4770      	bx	lr

90002a40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a40:	200c      	movs	r0, #12
90002a42:	4770      	bx	lr

90002a44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a44:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a48:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a4c:	3008      	adds	r0, #8
90002a4e:	4770      	bx	lr

90002a50 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a50:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a54:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a58:	3008      	adds	r0, #8
90002a5a:	4770      	bx	lr

90002a5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a5c:	2001      	movs	r0, #1
90002a5e:	4770      	bx	lr

90002a60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a60:	f641 5044 	movw	r0, #7492	@ 0x1d44
90002a64:	4770      	bx	lr
90002a66:	bf00      	nop

90002a68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a68:	f641 5344 	movw	r3, #7492	@ 0x1d44
90002a6c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a70:	3008      	adds	r0, #8
90002a72:	4770      	bx	lr

90002a74 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a74:	f641 5344 	movw	r3, #7492	@ 0x1d44
90002a78:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a7c:	3008      	adds	r0, #8
90002a7e:	4770      	bx	lr

90002a80 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a80:	2001      	movs	r0, #1
90002a82:	4770      	bx	lr

90002a84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a84:	2010      	movs	r0, #16
90002a86:	4770      	bx	lr

90002a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a88:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a8c:	3008      	adds	r0, #8
90002a8e:	4770      	bx	lr

90002a90 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a90:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a94:	3008      	adds	r0, #8
90002a96:	4770      	bx	lr

90002a98 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90002a98:	b510      	push	{r4, lr}
90002a9a:	4604      	mov	r4, r0
    }
90002a9c:	2108      	movs	r1, #8
90002a9e:	f029 f87c 	bl	9002bb9a <_ZdlPvj>
90002aa2:	4620      	mov	r0, r4
90002aa4:	bd10      	pop	{r4, pc}
90002aa6:	bf00      	nop

90002aa8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoKeyboardScreenScreenNoTransition();
90002aa8:	4608      	mov	r0, r1
90002aaa:	f002 bb49 	b.w	90005140 <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv>
90002aae:	bf00      	nop

90002ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002ab0:	4b03      	ldr	r3, [pc, #12]	@ (90002ac0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ab2:	b510      	push	{r4, lr}
90002ab4:	4604      	mov	r4, r0
90002ab6:	6003      	str	r3, [r0, #0]
90002ab8:	f010 fb9d 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002abc:	4620      	mov	r0, r4
90002abe:	bd10      	pop	{r4, pc}
90002ac0:	9002dbe8 	.word	0x9002dbe8

90002ac4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ac4:	4b05      	ldr	r3, [pc, #20]	@ (90002adc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002ac6:	b510      	push	{r4, lr}
90002ac8:	4604      	mov	r4, r0
90002aca:	6003      	str	r3, [r0, #0]
90002acc:	f010 fb93 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ad0:	2114      	movs	r1, #20
90002ad2:	4620      	mov	r0, r4
90002ad4:	f029 f861 	bl	9002bb9a <_ZdlPvj>
90002ad8:	4620      	mov	r0, r4
90002ada:	bd10      	pop	{r4, pc}
90002adc:	9002dbe8 	.word	0x9002dbe8

90002ae0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ae0:	4b03      	ldr	r3, [pc, #12]	@ (90002af0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ae2:	b510      	push	{r4, lr}
90002ae4:	4604      	mov	r4, r0
90002ae6:	6003      	str	r3, [r0, #0]
90002ae8:	f010 fb85 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002aec:	4620      	mov	r0, r4
90002aee:	bd10      	pop	{r4, pc}
90002af0:	9002dbb4 	.word	0x9002dbb4

90002af4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002af4:	4b06      	ldr	r3, [pc, #24]	@ (90002b10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002af6:	b510      	push	{r4, lr}
90002af8:	4604      	mov	r4, r0
90002afa:	6003      	str	r3, [r0, #0]
90002afc:	f010 fb7b 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b00:	f641 514c 	movw	r1, #7500	@ 0x1d4c
90002b04:	4620      	mov	r0, r4
90002b06:	f029 f848 	bl	9002bb9a <_ZdlPvj>
90002b0a:	4620      	mov	r0, r4
90002b0c:	bd10      	pop	{r4, pc}
90002b0e:	bf00      	nop
90002b10:	9002dbb4 	.word	0x9002dbb4

90002b14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b14:	4b03      	ldr	r3, [pc, #12]	@ (90002b24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b16:	b510      	push	{r4, lr}
90002b18:	4604      	mov	r4, r0
90002b1a:	6003      	str	r3, [r0, #0]
90002b1c:	f010 fb6b 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b20:	4620      	mov	r0, r4
90002b22:	bd10      	pop	{r4, pc}
90002b24:	9002db80 	.word	0x9002db80

90002b28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b28:	4b05      	ldr	r3, [pc, #20]	@ (90002b40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002b2a:	b510      	push	{r4, lr}
90002b2c:	4604      	mov	r4, r0
90002b2e:	6003      	str	r3, [r0, #0]
90002b30:	f010 fb61 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b34:	2118      	movs	r1, #24
90002b36:	4620      	mov	r0, r4
90002b38:	f029 f82f 	bl	9002bb9a <_ZdlPvj>
90002b3c:	4620      	mov	r0, r4
90002b3e:	bd10      	pop	{r4, pc}
90002b40:	9002db80 	.word	0x9002db80

90002b44 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b44:	b510      	push	{r4, lr}
90002b46:	4604      	mov	r4, r0
90002b48:	490c      	ldr	r1, [pc, #48]	@ (90002b7c <_ZN12FrontendHeapD1Ev+0x38>)
90002b4a:	4a0d      	ldr	r2, [pc, #52]	@ (90002b80 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b4c:	f641 5078 	movw	r0, #7544	@ 0x1d78
90002b50:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002b54:	6021      	str	r1, [r4, #0]
90002b56:	4420      	add	r0, r4
90002b58:	f8c3 2d78 	str.w	r2, [r3, #3448]	@ 0xd78
90002b5c:	f010 fb4b 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b60:	4620      	mov	r0, r4
90002b62:	4b08      	ldr	r3, [pc, #32]	@ (90002b84 <_ZN12FrontendHeapD1Ev+0x40>)
90002b64:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b68:	f010 fb45 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b6c:	4620      	mov	r0, r4
90002b6e:	4b06      	ldr	r3, [pc, #24]	@ (90002b88 <_ZN12FrontendHeapD1Ev+0x44>)
90002b70:	f840 3f14 	str.w	r3, [r0, #20]!
90002b74:	f010 fb3f 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b78:	4620      	mov	r0, r4
90002b7a:	bd10      	pop	{r4, pc}
90002b7c:	9002dc1c 	.word	0x9002dc1c
90002b80:	9002dbe8 	.word	0x9002dbe8
90002b84:	9002dbb4 	.word	0x9002dbb4
90002b88:	9002db80 	.word	0x9002db80

90002b8c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b8c:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b8e:	4c0c      	ldr	r4, [pc, #48]	@ (90002bc0 <__tcf_0+0x34>)
90002b90:	490c      	ldr	r1, [pc, #48]	@ (90002bc4 <__tcf_0+0x38>)
90002b92:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002b96:	4a0c      	ldr	r2, [pc, #48]	@ (90002bc8 <__tcf_0+0x3c>)
90002b98:	480c      	ldr	r0, [pc, #48]	@ (90002bcc <__tcf_0+0x40>)
90002b9a:	6021      	str	r1, [r4, #0]
90002b9c:	f8c3 2d78 	str.w	r2, [r3, #3448]	@ 0xd78
90002ba0:	f010 fb29 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ba4:	4620      	mov	r0, r4
90002ba6:	4b0a      	ldr	r3, [pc, #40]	@ (90002bd0 <__tcf_0+0x44>)
90002ba8:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bac:	f010 fb23 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bb0:	4620      	mov	r0, r4
90002bb2:	4b08      	ldr	r3, [pc, #32]	@ (90002bd4 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002bb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002bb8:	f840 3f14 	str.w	r3, [r0, #20]!
90002bbc:	f010 bb1b 	b.w	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bc0:	24007130 	.word	0x24007130
90002bc4:	9002dc1c 	.word	0x9002dc1c
90002bc8:	9002dbe8 	.word	0x9002dbe8
90002bcc:	24008ea8 	.word	0x24008ea8
90002bd0:	9002dbb4 	.word	0x9002dbb4
90002bd4:	9002db80 	.word	0x9002db80

90002bd8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002bd8:	b510      	push	{r4, lr}
90002bda:	4604      	mov	r4, r0
90002bdc:	4a0f      	ldr	r2, [pc, #60]	@ (90002c1c <_ZN12FrontendHeapD0Ev+0x44>)
90002bde:	4910      	ldr	r1, [pc, #64]	@ (90002c20 <_ZN12FrontendHeapD0Ev+0x48>)
90002be0:	f641 5078 	movw	r0, #7544	@ 0x1d78
90002be4:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002be8:	6021      	str	r1, [r4, #0]
90002bea:	4420      	add	r0, r4
90002bec:	f8c3 2d78 	str.w	r2, [r3, #3448]	@ 0xd78
90002bf0:	f010 fb01 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bf4:	4620      	mov	r0, r4
90002bf6:	4b0b      	ldr	r3, [pc, #44]	@ (90002c24 <_ZN12FrontendHeapD0Ev+0x4c>)
90002bf8:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bfc:	f010 fafb 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c00:	4b09      	ldr	r3, [pc, #36]	@ (90002c28 <_ZN12FrontendHeapD0Ev+0x50>)
90002c02:	4620      	mov	r0, r4
90002c04:	f840 3f14 	str.w	r3, [r0, #20]!
90002c08:	f010 faf5 	bl	900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c0c:	4620      	mov	r0, r4
90002c0e:	f44f 51f8 	mov.w	r1, #7936	@ 0x1f00
90002c12:	f028 ffc2 	bl	9002bb9a <_ZdlPvj>
90002c16:	4620      	mov	r0, r4
90002c18:	bd10      	pop	{r4, pc}
90002c1a:	bf00      	nop
90002c1c:	9002dbe8 	.word	0x9002dbe8
90002c20:	9002dc1c 	.word	0x9002dc1c
90002c24:	9002dbb4 	.word	0x9002dbb4
90002c28:	9002db80 	.word	0x9002db80

90002c2c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c30:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c32:	2400      	movs	r4, #0
90002c34:	f001 ffe8 	bl	90004c08 <_ZN14BitmapDatabase11getInstanceEv>
90002c38:	4605      	mov	r5, r0
90002c3a:	f001 ffe9 	bl	90004c10 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c3e:	4623      	mov	r3, r4
90002c40:	4601      	mov	r1, r0
90002c42:	4622      	mov	r2, r4
90002c44:	4628      	mov	r0, r5
90002c46:	9400      	str	r4, [sp, #0]
90002c48:	f019 fdd6 	bl	9001c7f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c4c:	4b2a      	ldr	r3, [pc, #168]	@ (90002cf8 <touchgfx_init+0xcc>)
90002c4e:	4a2b      	ldr	r2, [pc, #172]	@ (90002cfc <touchgfx_init+0xd0>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c50:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c52:	4c2b      	ldr	r4, [pc, #172]	@ (90002d00 <touchgfx_init+0xd4>)
90002c54:	601a      	str	r2, [r3, #0]
90002c56:	f002 fd51 	bl	900056fc <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c5a:	4b2a      	ldr	r3, [pc, #168]	@ (90002d04 <touchgfx_init+0xd8>)
90002c5c:	4a2a      	ldr	r2, [pc, #168]	@ (90002d08 <touchgfx_init+0xdc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c5e:	482b      	ldr	r0, [pc, #172]	@ (90002d0c <touchgfx_init+0xe0>)
90002c60:	609a      	str	r2, [r3, #8]
90002c62:	f019 fd27 	bl	9001c6b4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c66:	6823      	ldr	r3, [r4, #0]
90002c68:	f3bf 8f5b 	dmb	ish
90002c6c:	07db      	lsls	r3, r3, #31
90002c6e:	d505      	bpl.n	90002c7c <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c70:	4827      	ldr	r0, [pc, #156]	@ (90002d10 <touchgfx_init+0xe4>)
}
90002c72:	b002      	add	sp, #8
90002c74:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c78:	f7fe b940 	b.w	90000efc <_ZN11TouchGFXHAL10initializeEv>
90002c7c:	4620      	mov	r0, r4
90002c7e:	f028 ff8e 	bl	9002bb9e <__cxa_guard_acquire>
90002c82:	2800      	cmp	r0, #0
90002c84:	d0f4      	beq.n	90002c70 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c86:	4d23      	ldr	r5, [pc, #140]	@ (90002d14 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
90002c88:	4f23      	ldr	r7, [pc, #140]	@ (90002d18 <touchgfx_init+0xec>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002c8a:	4b24      	ldr	r3, [pc, #144]	@ (90002d1c <touchgfx_init+0xf0>)
        : presenterStorage(pres),
90002c8c:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
90002c90:	f107 062c 	add.w	r6, r7, #44	@ 0x2c
          screenStorage(scr),
90002c94:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
90002c98:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002c9a:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
90002c9c:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
90002c9e:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002ca0:	f8c5 8008 	str.w	r8, [r5, #8]
90002ca4:	f010 faa8 	bl	900131f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002ca8:	4b1d      	ldr	r3, [pc, #116]	@ (90002d20 <touchgfx_init+0xf4>)
90002caa:	4640      	mov	r0, r8
90002cac:	616b      	str	r3, [r5, #20]
90002cae:	f010 faa3 	bl	900131f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cb2:	4b1c      	ldr	r3, [pc, #112]	@ (90002d24 <touchgfx_init+0xf8>)
90002cb4:	4638      	mov	r0, r7
90002cb6:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002cb8:	f010 fa9e 	bl	900131f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cbc:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
90002cc0:	4a19      	ldr	r2, [pc, #100]	@ (90002d28 <touchgfx_init+0xfc>)
90002cc2:	f603 508c 	addw	r0, r3, #3468	@ 0xd8c
90002cc6:	f8c3 2d78 	str.w	r2, [r3, #3448]	@ 0xd78
90002cca:	f003 fdc7 	bl	9000685c <_ZN5ModelC1Ev>
90002cce:	462a      	mov	r2, r5
90002cd0:	f107 0114 	add.w	r1, r7, #20
90002cd4:	4630      	mov	r0, r6
90002cd6:	f002 fe07 	bl	900058e8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cda:	4630      	mov	r0, r6
90002cdc:	f002 fa30 	bl	90005140 <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv>
        static FrontendHeap instance;
90002ce0:	4812      	ldr	r0, [pc, #72]	@ (90002d2c <touchgfx_init+0x100>)
90002ce2:	f029 faef 	bl	9002c2c4 <atexit>
90002ce6:	4620      	mov	r0, r4
90002ce8:	f028 ff65 	bl	9002bbb6 <__cxa_guard_release>
90002cec:	4808      	ldr	r0, [pc, #32]	@ (90002d10 <touchgfx_init+0xe4>)
}
90002cee:	b002      	add	sp, #8
90002cf0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002cf4:	f7fe b902 	b.w	90000efc <_ZN11TouchGFXHAL10initializeEv>
90002cf8:	24024604 	.word	0x24024604
90002cfc:	240062d8 	.word	0x240062d8
90002d00:	2400712c 	.word	0x2400712c
90002d04:	240062f8 	.word	0x240062f8
90002d08:	240062dc 	.word	0x240062dc
90002d0c:	24000040 	.word	0x24000040
90002d10:	24006250 	.word	0x24006250
90002d14:	24007130 	.word	0x24007130
90002d18:	24008ea8 	.word	0x24008ea8
90002d1c:	9002dc1c 	.word	0x9002dc1c
90002d20:	9002db80 	.word	0x9002db80
90002d24:	9002dbb4 	.word	0x9002dbb4
90002d28:	9002dbe8 	.word	0x9002dbe8
90002d2c:	90002b8d 	.word	0x90002b8d

90002d30 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d30:	4770      	bx	lr
90002d32:	bf00      	nop

90002d34 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d34:	4801      	ldr	r0, [pc, #4]	@ (90002d3c <touchgfx_taskEntry+0x8>)
90002d36:	f7fe b92f 	b.w	90000f98 <_ZN11TouchGFXHAL9taskEntryEv>
90002d3a:	bf00      	nop
90002d3c:	24006250 	.word	0x24006250

90002d40 <_GLOBAL__sub_I_touchgfx_init>:
}
90002d40:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d42:	4e27      	ldr	r6, [pc, #156]	@ (90002de0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
{
public:

    STM32TouchController() {}
90002d44:	4b27      	ldr	r3, [pc, #156]	@ (90002de4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002d46:	4c28      	ldr	r4, [pc, #160]	@ (90002de8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90002d48:	4630      	mov	r0, r6
static LCD16bpp display;
90002d4a:	4d28      	ldr	r5, [pc, #160]	@ (90002dec <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002d4c:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d4e:	f7ff fdc1 	bl	900028d4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d52:	4628      	mov	r0, r5
90002d54:	f01e fe60 	bl	90021a18 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d58:	4825      	ldr	r0, [pc, #148]	@ (90002df0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d5a:	f017 fe05 	bl	9001a968 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d5e:	4b25      	ldr	r3, [pc, #148]	@ (90002df4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          mcuInstrumentation(0),
90002d60:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d62:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d66:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d6a:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d6c:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d6e:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d70:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d74:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d76:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d78:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d7c:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d80:	4c1d      	ldr	r4, [pc, #116]	@ (90002df8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d82:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d84:	4c1d      	ldr	r4, [pc, #116]	@ (90002dfc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d86:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d88:	4c1d      	ldr	r4, [pc, #116]	@ (90002e00 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002d8a:	8020      	strh	r0, [r4, #0]
90002d8c:	4c1d      	ldr	r4, [pc, #116]	@ (90002e04 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d8e:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d90:	4c1d      	ldr	r4, [pc, #116]	@ (90002e08 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d92:	481e      	ldr	r0, [pc, #120]	@ (90002e0c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d94:	8021      	strh	r1, [r4, #0]
90002d96:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d98:	4c1d      	ldr	r4, [pc, #116]	@ (90002e10 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d9a:	491e      	ldr	r1, [pc, #120]	@ (90002e14 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d9c:	481e      	ldr	r0, [pc, #120]	@ (90002e18 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
          lcdRef(display),
90002d9e:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002da2:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002da6:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002daa:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002dac:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002db0:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002db4:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002db8:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002dbc:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002dc0:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002dc4:	7022      	strb	r2, [r4, #0]
90002dc6:	6019      	str	r1, [r3, #0]
90002dc8:	4914      	ldr	r1, [pc, #80]	@ (90002e1c <_GLOBAL__sub_I_touchgfx_init+0xdc>)
        : cc_consumed(0),
90002dca:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002dce:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          cc_in(0)
90002dd2:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
90002dd6:	67d9      	str	r1, [r3, #124]	@ 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002dd8:	e9c3 201d 	strd	r2, r0, [r3, #116]	@ 0x74
}
90002ddc:	bd70      	pop	{r4, r5, r6, pc}
90002dde:	bf00      	nop
90002de0:	24006384 	.word	0x24006384
90002de4:	9002d378 	.word	0x9002d378
90002de8:	24007128 	.word	0x24007128
90002dec:	240062f8 	.word	0x240062f8
90002df0:	240062dc 	.word	0x240062dc
90002df4:	24006250 	.word	0x24006250
90002df8:	01000001 	.word	0x01000001
90002dfc:	240245a0 	.word	0x240245a0
90002e00:	24024592 	.word	0x24024592
90002e04:	24024598 	.word	0x24024598
90002e08:	24024594 	.word	0x24024594
90002e0c:	2402459a 	.word	0x2402459a
90002e10:	24024596 	.word	0x24024596
90002e14:	9002d508 	.word	0x9002d508
90002e18:	01010000 	.word	0x01010000
90002e1c:	9002d350 	.word	0x9002d350

90002e20 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002e20:	4801      	ldr	r0, [pc, #4]	@ (90002e28 <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002e22:	f7ff bacf 	b.w	900023c4 <_ZN8STM32DMAD1Ev>
90002e26:	bf00      	nop
90002e28:	24006384 	.word	0x24006384

90002e2c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e2c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e30:	b112      	cbz	r2, 90002e38 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e32:	6803      	ldr	r3, [r0, #0]
90002e34:	695b      	ldr	r3, [r3, #20]
90002e36:	4718      	bx	r3
        }
    }
90002e38:	4770      	bx	lr
90002e3a:	bf00      	nop

90002e3c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e3c:	2000      	movs	r0, #0
90002e3e:	4770      	bx	lr

90002e40 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e40:	8081      	strh	r1, [r0, #4]
    }
90002e42:	4770      	bx	lr

90002e44 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e44:	80c1      	strh	r1, [r0, #6]
    }
90002e46:	4770      	bx	lr

90002e48 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e48:	8101      	strh	r1, [r0, #8]
    }
90002e4a:	4770      	bx	lr

90002e4c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e4c:	8141      	strh	r1, [r0, #10]
    }
90002e4e:	4770      	bx	lr

90002e50 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e50:	4770      	bx	lr
90002e52:	bf00      	nop

90002e54 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e54:	4770      	bx	lr
90002e56:	bf00      	nop

90002e58 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e58:	4770      	bx	lr
90002e5a:	bf00      	nop

90002e5c <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e5c:	4770      	bx	lr
90002e5e:	bf00      	nop

90002e60 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e60:	4770      	bx	lr
90002e62:	bf00      	nop

90002e64 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e64:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e68:	6803      	ldr	r3, [r0, #0]
90002e6a:	eba2 020c 	sub.w	r2, r2, ip
90002e6e:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e74:	eba1 010c 	sub.w	r1, r1, ip
90002e78:	b212      	sxth	r2, r2
90002e7a:	b209      	sxth	r1, r1
90002e7c:	4718      	bx	r3
90002e7e:	bf00      	nop

90002e80 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e80:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e82:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e86:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e8a:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e8e:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002e92:	6010      	str	r0, [r2, #0]
    }
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002e98:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e9c:	b11a      	cbz	r2, 90002ea6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002e9e:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002ea2:	b102      	cbz	r2, 90002ea6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002ea4:	6018      	str	r0, [r3, #0]
        }
    }
90002ea6:	4770      	bx	lr

90002ea8 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002ea8:	2000      	movs	r0, #0
90002eaa:	4770      	bx	lr

90002eac <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002eac:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002eae:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002eb0:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002eb2:	809a      	strh	r2, [r3, #4]
    }
90002eb4:	4770      	bx	lr
90002eb6:	bf00      	nop

90002eb8 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002eb8:	4770      	bx	lr
90002eba:	bf00      	nop

90002ebc <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002ebc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002ec0:	4770      	bx	lr
90002ec2:	bf00      	nop

90002ec4 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002ec4:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002ec8:	4770      	bx	lr
90002eca:	bf00      	nop

90002ecc <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002ecc:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002ed0:	688a      	ldr	r2, [r1, #8]
90002ed2:	f8c0 c000 	str.w	ip, [r0]
90002ed6:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002ed8:	4770      	bx	lr
90002eda:	bf00      	nop

90002edc <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002edc:	2200      	movs	r2, #0
90002ede:	6002      	str	r2, [r0, #0]
90002ee0:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002ee2:	4770      	bx	lr

90002ee4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002ee4:	2000      	movs	r0, #0
90002ee6:	4770      	bx	lr

90002ee8 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002ee8:	7701      	strb	r1, [r0, #28]
    }
90002eea:	4770      	bx	lr

90002eec <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002eec:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002ef0:	4770      	bx	lr
90002ef2:	bf00      	nop

90002ef4 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002ef4:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002ef8:	4770      	bx	lr
90002efa:	bf00      	nop

90002efc <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002efc:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002f00:	4770      	bx	lr
90002f02:	bf00      	nop

90002f04 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002f04:	2001      	movs	r0, #1
90002f06:	4770      	bx	lr

90002f08 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002f08:	3098      	adds	r0, #152	@ 0x98
90002f0a:	4770      	bx	lr

90002f0c <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002f0c:	308c      	adds	r0, #140	@ 0x8c
90002f0e:	4770      	bx	lr

90002f10 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002f10:	3084      	adds	r0, #132	@ 0x84
90002f12:	4770      	bx	lr

90002f14 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002f14:	4770      	bx	lr
90002f16:	bf00      	nop

90002f18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002f18:	4b03      	ldr	r3, [pc, #12]	@ (90002f28 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002f1a:	2290      	movs	r2, #144	@ 0x90
90002f1c:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002f20:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002f24:	4770      	bx	lr
90002f26:	bf00      	nop
90002f28:	e000e100 	.word	0xe000e100

90002f2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f2c:	4a09      	ldr	r2, [pc, #36]	@ (90002f54 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f2e:	490a      	ldr	r1, [pc, #40]	@ (90002f58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f30:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f32:	480a      	ldr	r0, [pc, #40]	@ (90002f5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f34:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f38:	3b01      	subs	r3, #1
90002f3a:	b29b      	uxth	r3, r3
90002f3c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f3e:	6911      	ldr	r1, [r2, #16]
90002f40:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f44:	3901      	subs	r1, #1
90002f46:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f48:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f4a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f4c:	f043 0301 	orr.w	r3, r3, #1
90002f50:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f52:	4770      	bx	lr
90002f54:	50001000 	.word	0x50001000
90002f58:	24009032 	.word	0x24009032
90002f5c:	24009030 	.word	0x24009030

90002f60 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f60:	4b01      	ldr	r3, [pc, #4]	@ (90002f68 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f62:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f66:	4770      	bx	lr
90002f68:	50001000 	.word	0x50001000

90002f6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f6c:	4b02      	ldr	r3, [pc, #8]	@ (90002f78 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f6e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f70:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f74:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f76:	4770      	bx	lr
90002f78:	50001000 	.word	0x50001000

90002f7c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f7c:	4770      	bx	lr
90002f7e:	bf00      	nop

90002f80 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f80:	4770      	bx	lr
90002f82:	bf00      	nop

90002f84 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f84:	4770      	bx	lr
90002f86:	bf00      	nop

90002f88 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f88:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f8c:	2300      	movs	r3, #0
90002f8e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002f92:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002f96:	4770      	bx	lr

90002f98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002f98:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002f9c:	4770      	bx	lr
90002f9e:	bf00      	nop

90002fa0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002fa0:	b510      	push	{r4, lr}
90002fa2:	4604      	mov	r4, r0
90002fa4:	2130      	movs	r1, #48	@ 0x30
90002fa6:	f028 fdf8 	bl	9002bb9a <_ZdlPvj>
90002faa:	4620      	mov	r0, r4
90002fac:	bd10      	pop	{r4, pc}
90002fae:	bf00      	nop

90002fb0 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
90002fb0:	b510      	push	{r4, lr}
90002fb2:	4604      	mov	r4, r0
90002fb4:	212c      	movs	r1, #44	@ 0x2c
90002fb6:	f028 fdf0 	bl	9002bb9a <_ZdlPvj>
90002fba:	4620      	mov	r0, r4
90002fbc:	bd10      	pop	{r4, pc}
90002fbe:	bf00      	nop

90002fc0 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002fc0:	b510      	push	{r4, lr}
90002fc2:	4604      	mov	r4, r0
90002fc4:	21bc      	movs	r1, #188	@ 0xbc
90002fc6:	f028 fde8 	bl	9002bb9a <_ZdlPvj>
90002fca:	4620      	mov	r0, r4
90002fcc:	bd10      	pop	{r4, pc}
90002fce:	bf00      	nop

90002fd0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002fd0:	b911      	cbnz	r1, 90002fd8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002fd2:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002fd6:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002fd8:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fda:	4a03      	ldr	r2, [pc, #12]	@ (90002fe8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002fdc:	f44f 7191 	mov.w	r1, #290	@ 0x122
90002fe0:	4b02      	ldr	r3, [pc, #8]	@ (90002fec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002fe2:	4803      	ldr	r0, [pc, #12]	@ (90002ff0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002fe4:	f029 f950 	bl	9002c288 <__assert_func>
90002fe8:	9002dc3c 	.word	0x9002dc3c
90002fec:	9002dc28 	.word	0x9002dc28
90002ff0:	9002dd58 	.word	0x9002dd58

90002ff4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002ff4:	b921      	cbnz	r1, 90003000 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002ff6:	6840      	ldr	r0, [r0, #4]
90002ff8:	4611      	mov	r1, r2
90002ffa:	6803      	ldr	r3, [r0, #0]
90002ffc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002ffe:	4718      	bx	r3
        assert(handle < no_streams);
90003000:	4b03      	ldr	r3, [pc, #12]	@ (90003010 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90003002:	f44f 718e 	mov.w	r1, #284	@ 0x11c
90003006:	4a03      	ldr	r2, [pc, #12]	@ (90003014 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90003008:	4803      	ldr	r0, [pc, #12]	@ (90003018 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
9000300a:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000300c:	f029 f93c 	bl	9002c288 <__assert_func>
90003010:	9002dc28 	.word	0x9002dc28
90003014:	9002dda0 	.word	0x9002dda0
90003018:	9002dd58 	.word	0x9002dd58

9000301c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
9000301c:	b909      	cbnz	r1, 90003022 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000301e:	68c0      	ldr	r0, [r0, #12]
90003020:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90003022:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003024:	4a03      	ldr	r2, [pc, #12]	@ (90003034 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90003026:	f44f 718a 	mov.w	r1, #276	@ 0x114
9000302a:	4b03      	ldr	r3, [pc, #12]	@ (90003038 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
9000302c:	4803      	ldr	r0, [pc, #12]	@ (9000303c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
9000302e:	f029 f92b 	bl	9002c288 <__assert_func>
90003032:	bf00      	nop
90003034:	9002dee0 	.word	0x9002dee0
90003038:	9002dc28 	.word	0x9002dc28
9000303c:	9002dd58 	.word	0x9002dd58

90003040 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003040:	b921      	cbnz	r1, 9000304c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003042:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003044:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90003046:	e9c0 3205 	strd	r3, r2, [r0, #20]
9000304a:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
9000304c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000304e:	4a03      	ldr	r2, [pc, #12]	@ (9000305c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003050:	2140      	movs	r1, #64	@ 0x40
90003052:	4b03      	ldr	r3, [pc, #12]	@ (90003060 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003054:	4803      	ldr	r0, [pc, #12]	@ (90003064 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90003056:	f029 f917 	bl	9002c288 <__assert_func>
9000305a:	bf00      	nop
9000305c:	9002e028 	.word	0x9002e028
90003060:	9002dc28 	.word	0x9002dc28
90003064:	9002dd58 	.word	0x9002dd58

90003068 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90003068:	b508      	push	{r3, lr}
9000306a:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
9000306c:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
90003070:	b940      	cbnz	r0, 90003084 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
90003072:	2201      	movs	r2, #1
90003074:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90003078:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
9000307c:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
90003080:	6308      	str	r0, [r1, #48]	@ 0x30
    }
90003082:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003084:	4b03      	ldr	r3, [pc, #12]	@ (90003094 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90003086:	f240 116b 	movw	r1, #363	@ 0x16b
9000308a:	4a03      	ldr	r2, [pc, #12]	@ (90003098 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
9000308c:	4803      	ldr	r0, [pc, #12]	@ (9000309c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
9000308e:	f029 f8fb 	bl	9002c288 <__assert_func>
90003092:	bf00      	nop
90003094:	9002e174 	.word	0x9002e174
90003098:	9002e1a4 	.word	0x9002e1a4
9000309c:	9002dd58 	.word	0x9002dd58

900030a0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
900030a0:	f010 bb8c 	b.w	900137bc <_ZN8touchgfx3HAL10beginFrameEv>

900030a4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
900030a4:	f010 bb96 	b.w	900137d4 <_ZN8touchgfx3HAL8endFrameEv>

900030a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900030a8:	f010 bb52 	b.w	90013750 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900030ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900030ac:	f010 bcb3 	b.w	90013a16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900030b0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900030b0:	4814      	ldr	r0, [pc, #80]	@ (90003104 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900030b2:	6943      	ldr	r3, [r0, #20]
900030b4:	03d9      	lsls	r1, r3, #15
900030b6:	d523      	bpl.n	90003100 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900030b8:	2300      	movs	r3, #0
{
900030ba:	b510      	push	{r4, lr}
900030bc:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900030c0:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900030c4:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030c8:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900030cc:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030d0:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900030d4:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030d8:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030dc:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030de:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900030e2:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030e4:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030e8:	1c5a      	adds	r2, r3, #1
900030ea:	d1f8      	bne.n	900030de <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030ec:	f1ac 0c20 	sub.w	ip, ip, #32
900030f0:	f11c 0f20 	cmn.w	ip, #32
900030f4:	d1f0      	bne.n	900030d8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900030f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030fa:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900030fe:	bd10      	pop	{r4, pc}
90003100:	4770      	bx	lr
90003102:	bf00      	nop
90003104:	e000ed00 	.word	0xe000ed00

90003108 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90003108:	b5f0      	push	{r4, r5, r6, r7, lr}
9000310a:	b083      	sub	sp, #12
        assert(handle < no_streams);
9000310c:	bb49      	cbnz	r1, 90003162 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5a>
9000310e:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003110:	6840      	ldr	r0, [r0, #4]
90003112:	461d      	mov	r5, r3
90003114:	4616      	mov	r6, r2
90003116:	6803      	ldr	r3, [r0, #0]
90003118:	691b      	ldr	r3, [r3, #16]
9000311a:	4798      	blx	r3
9000311c:	b908      	cbnz	r0, 90003122 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
9000311e:	b003      	add	sp, #12
90003120:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003122:	4f13      	ldr	r7, [pc, #76]	@ (90003170 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003124:	2101      	movs	r1, #1
90003126:	6838      	ldr	r0, [r7, #0]
90003128:	f011 f91c 	bl	90014364 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
9000312c:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
9000312e:	4605      	mov	r5, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003130:	4668      	mov	r0, sp
90003132:	f017 fbff 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003136:	4b0f      	ldr	r3, [pc, #60]	@ (90003174 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003138:	6860      	ldr	r0, [r4, #4]
9000313a:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
9000313c:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003140:	881b      	ldrh	r3, [r3, #0]
90003142:	f9bd 2000 	ldrsh.w	r2, [sp]
90003146:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000314a:	6804      	ldr	r4, [r0, #0]
9000314c:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003150:	69e4      	ldr	r4, [r4, #28]
90003152:	47a0      	blx	r4
90003154:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003156:	6803      	ldr	r3, [r0, #0]
90003158:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
9000315a:	b003      	add	sp, #12
9000315c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003160:	4718      	bx	r3
        assert(handle < no_streams);
90003162:	4b05      	ldr	r3, [pc, #20]	@ (90003178 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
90003164:	21e9      	movs	r1, #233	@ 0xe9
90003166:	4a05      	ldr	r2, [pc, #20]	@ (9000317c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
90003168:	4805      	ldr	r0, [pc, #20]	@ (90003180 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
9000316a:	f029 f88d 	bl	9002c288 <__assert_func>
9000316e:	bf00      	nop
90003170:	240245a0 	.word	0x240245a0
90003174:	24024598 	.word	0x24024598
90003178:	9002dc28 	.word	0x9002dc28
9000317c:	9002e2bc 	.word	0x9002e2bc
90003180:	9002dd58 	.word	0x9002dd58

90003184 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003184:	4b08      	ldr	r3, [pc, #32]	@ (900031a8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90003186:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000318a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000318e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003192:	f3bf 8f6f 	isb	sy
90003196:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000319a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000319e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031a2:	f3bf 8f6f 	isb	sy
}
900031a6:	4770      	bx	lr
900031a8:	e000e100 	.word	0xe000e100

900031ac <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031ac:	4b03      	ldr	r3, [pc, #12]	@ (900031bc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900031ae:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031b2:	609a      	str	r2, [r3, #8]
900031b4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031b8:	609a      	str	r2, [r3, #8]
}
900031ba:	4770      	bx	lr
900031bc:	e000e100 	.word	0xe000e100

900031c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900031c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900031c4:	2900      	cmp	r1, #0
900031c6:	f040 8096 	bne.w	900032f6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
900031ca:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900031ce:	4604      	mov	r4, r0
900031d0:	b933      	cbnz	r3, 900031e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900031d2:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900031d6:	b91b      	cbnz	r3, 900031e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900031d8:	2501      	movs	r5, #1
    }
900031da:	4628      	mov	r0, r5
900031dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900031e0:	4b48      	ldr	r3, [pc, #288]	@ (90003304 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900031e2:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031e4:	6921      	ldr	r1, [r4, #16]
900031e6:	681b      	ldr	r3, [r3, #0]
900031e8:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900031ec:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031f0:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900031f2:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031f6:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900031f8:	b979      	cbnz	r1, 9000321a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031fa:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
900031fc:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031fe:	6961      	ldr	r1, [r4, #20]
90003200:	fb01 f303 	mul.w	r3, r1, r3
90003204:	69a1      	ldr	r1, [r4, #24]
90003206:	fb01 f202 	mul.w	r2, r1, r2
9000320a:	4293      	cmp	r3, r2
9000320c:	d824      	bhi.n	90003258 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
9000320e:	2300      	movs	r3, #0
    }
90003210:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
90003212:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
90003216:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
9000321a:	6813      	ldr	r3, [r2, #0]
9000321c:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
9000321e:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003220:	695b      	ldr	r3, [r3, #20]
90003222:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
90003224:	69e1      	ldr	r1, [r4, #28]
90003226:	bb21      	cbnz	r1, 90003272 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
90003228:	6a23      	ldr	r3, [r4, #32]
9000322a:	2b00      	cmp	r3, #0
9000322c:	d142      	bne.n	900032b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
9000322e:	4f36      	ldr	r7, [pc, #216]	@ (90003308 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003230:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003234:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
90003236:	2d00      	cmp	r5, #0
90003238:	d02c      	beq.n	90003294 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
9000323a:	699b      	ldr	r3, [r3, #24]
9000323c:	4630      	mov	r0, r6
9000323e:	4798      	blx	r3
90003240:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003242:	6833      	ldr	r3, [r6, #0]
90003244:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003246:	42bb      	cmp	r3, r7
90003248:	d145      	bne.n	900032d6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000324a:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
9000324c:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
9000324e:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003250:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003252:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003254:	60a2      	str	r2, [r4, #8]
90003256:	e7d2      	b.n	900031fe <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
90003258:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
9000325c:	b138      	cbz	r0, 9000326e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000325e:	1a9b      	subs	r3, r3, r2
90003260:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003264:	4299      	cmp	r1, r3
                    stream.skip_frames--;
90003266:	bf98      	it	ls
90003268:	f102 32ff 	addls.w	r2, r2, #4294967295
9000326c:	6222      	str	r2, [r4, #32]
            return true;
9000326e:	2301      	movs	r3, #1
90003270:	e7ce      	b.n	90003210 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003272:	6833      	ldr	r3, [r6, #0]
90003274:	4630      	mov	r0, r6
90003276:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90003278:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000327a:	6833      	ldr	r3, [r6, #0]
9000327c:	69e5      	ldr	r5, [r4, #28]
9000327e:	4630      	mov	r0, r6
90003280:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003282:	4798      	blx	r3
90003284:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
90003286:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
90003288:	bf28      	it	cs
9000328a:	2500      	movcs	r5, #0
9000328c:	4f1e      	ldr	r7, [pc, #120]	@ (90003308 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
9000328e:	bf38      	it	cc
90003290:	2501      	movcc	r5, #1
90003292:	e7d6      	b.n	90003242 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003294:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003296:	42ba      	cmp	r2, r7
90003298:	d124      	bne.n	900032e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
9000329a:	f8d6 8014 	ldr.w	r8, [r6, #20]
9000329e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900032a0:	4630      	mov	r0, r6
900032a2:	4798      	blx	r3
900032a4:	4580      	cmp	r8, r0
900032a6:	d219      	bcs.n	900032dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
900032a8:	6833      	ldr	r3, [r6, #0]
900032aa:	4630      	mov	r0, r6
900032ac:	699b      	ldr	r3, [r3, #24]
900032ae:	4798      	blx	r3
900032b0:	4605      	mov	r5, r0
900032b2:	e7c6      	b.n	90003242 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900032b4:	6832      	ldr	r2, [r6, #0]
900032b6:	4f14      	ldr	r7, [pc, #80]	@ (90003308 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032b8:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900032bc:	42ba      	cmp	r2, r7
900032be:	d116      	bne.n	900032ee <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900032c0:	6970      	ldr	r0, [r6, #20]
900032c2:	18c1      	adds	r1, r0, r3
900032c4:	4630      	mov	r0, r6
900032c6:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
900032c8:	6a22      	ldr	r2, [r4, #32]
900032ca:	68a3      	ldr	r3, [r4, #8]
900032cc:	4413      	add	r3, r2
                        stream.skip_frames = 0;
900032ce:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900032d0:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900032d2:	6222      	str	r2, [r4, #32]
900032d4:	e7ac      	b.n	90003230 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900032d6:	4630      	mov	r0, r6
900032d8:	4798      	blx	r3
900032da:	e7b7      	b.n	9000324c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900032dc:	2300      	movs	r3, #0
900032de:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900032e2:	e7ae      	b.n	90003242 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032e4:	4630      	mov	r0, r6
900032e6:	4790      	blx	r2
900032e8:	6833      	ldr	r3, [r6, #0]
900032ea:	4680      	mov	r8, r0
900032ec:	e7d7      	b.n	9000329e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032ee:	4630      	mov	r0, r6
900032f0:	4790      	blx	r2
900032f2:	6a23      	ldr	r3, [r4, #32]
900032f4:	e7e5      	b.n	900032c2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900032f6:	4b05      	ldr	r3, [pc, #20]	@ (9000330c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900032f8:	21a9      	movs	r1, #169	@ 0xa9
900032fa:	4a05      	ldr	r2, [pc, #20]	@ (90003310 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
900032fc:	4805      	ldr	r0, [pc, #20]	@ (90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
900032fe:	f028 ffc3 	bl	9002c288 <__assert_func>
90003302:	bf00      	nop
90003304:	240245a0 	.word	0x240245a0
90003308:	9000101d 	.word	0x9000101d
9000330c:	9002dc28 	.word	0x9002dc28
90003310:	9002e404 	.word	0x9002e404
90003314:	9002dd58 	.word	0x9002dd58

90003318 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90003318:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000331a:	bb11      	cbnz	r1, 90003362 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
9000331c:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
9000331e:	6840      	ldr	r0, [r0, #4]
90003320:	4611      	mov	r1, r2
90003322:	461a      	mov	r2, r3
90003324:	6803      	ldr	r3, [r0, #0]
90003326:	689b      	ldr	r3, [r3, #8]
90003328:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000332a:	6860      	ldr	r0, [r4, #4]
9000332c:	4a10      	ldr	r2, [pc, #64]	@ (90003370 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
9000332e:	6803      	ldr	r3, [r0, #0]
90003330:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003332:	4293      	cmp	r3, r2
90003334:	d10c      	bne.n	90003350 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
90003336:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003338:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
9000333a:	2300      	movs	r3, #0
9000333c:	4a0d      	ldr	r2, [pc, #52]	@ (90003374 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
9000333e:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003340:	60e0      	str	r0, [r4, #12]
90003342:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003344:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003348:	d104      	bne.n	90003354 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000334a:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
9000334e:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003350:	4798      	blx	r3
90003352:	e7f1      	b.n	90003338 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003354:	4620      	mov	r0, r4
90003356:	46ac      	mov	ip, r5
90003358:	2201      	movs	r2, #1
9000335a:	4619      	mov	r1, r3
    }
9000335c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003360:	4760      	bx	ip
        assert(handle < no_streams);
90003362:	4b05      	ldr	r3, [pc, #20]	@ (90003378 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003364:	214e      	movs	r1, #78	@ 0x4e
90003366:	4a05      	ldr	r2, [pc, #20]	@ (9000337c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
90003368:	4805      	ldr	r0, [pc, #20]	@ (90003380 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000336a:	f028 ff8d 	bl	9002c288 <__assert_func>
9000336e:	bf00      	nop
90003370:	9000101d 	.word	0x9000101d
90003374:	900033ed 	.word	0x900033ed
90003378:	9002dc28 	.word	0x9002dc28
9000337c:	9002e538 	.word	0x9002e538
90003380:	9002dd58 	.word	0x9002dd58

90003384 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003384:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003386:	bb09      	cbnz	r1, 900033cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
90003388:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000338a:	6840      	ldr	r0, [r0, #4]
9000338c:	4611      	mov	r1, r2
9000338e:	6803      	ldr	r3, [r0, #0]
90003390:	68db      	ldr	r3, [r3, #12]
90003392:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003394:	6860      	ldr	r0, [r4, #4]
90003396:	4a10      	ldr	r2, [pc, #64]	@ (900033d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
90003398:	6803      	ldr	r3, [r0, #0]
9000339a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000339c:	4293      	cmp	r3, r2
9000339e:	d10c      	bne.n	900033ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
900033a0:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900033a2:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900033a4:	2300      	movs	r3, #0
900033a6:	4a0d      	ldr	r2, [pc, #52]	@ (900033dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
900033a8:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033aa:	60e0      	str	r0, [r4, #12]
900033ac:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900033ae:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900033b2:	d104      	bne.n	900033be <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900033b4:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900033b8:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033ba:	4798      	blx	r3
900033bc:	e7f1      	b.n	900033a2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900033be:	4620      	mov	r0, r4
900033c0:	46ac      	mov	ip, r5
900033c2:	2201      	movs	r2, #1
900033c4:	4619      	mov	r1, r3
    }
900033c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
900033ca:	4760      	bx	ip
        assert(handle < no_streams);
900033cc:	4b04      	ldr	r3, [pc, #16]	@ (900033e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
900033ce:	215e      	movs	r1, #94	@ 0x5e
900033d0:	4a04      	ldr	r2, [pc, #16]	@ (900033e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900033d2:	4805      	ldr	r0, [pc, #20]	@ (900033e8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900033d4:	f028 ff58 	bl	9002c288 <__assert_func>
900033d8:	9000101d 	.word	0x9000101d
900033dc:	900033ed 	.word	0x900033ed
900033e0:	9002dc28 	.word	0x9002dc28
900033e4:	9002e6a4 	.word	0x9002e6a4
900033e8:	9002dd58 	.word	0x9002dd58

900033ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033ec:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033ee:	2900      	cmp	r1, #0
900033f0:	d14f      	bne.n	90003492 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900033f2:	4604      	mov	r4, r0
        switch (cmd)
900033f4:	2a05      	cmp	r2, #5
900033f6:	d80b      	bhi.n	90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033f8:	e8df f002 	tbb	[pc, r2]
900033fc:	3c373311 	.word	0x3c373311
90003400:	0b03      	.short	0x0b03
            stream.isPlaying = false;
90003402:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
90003404:	2201      	movs	r2, #1
            stream.isPlaying = false;
90003406:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
9000340a:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
9000340c:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
9000340e:	6103      	str	r3, [r0, #16]
    }
90003410:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
90003412:	3b00      	subs	r3, #0
90003414:	bf18      	it	ne
90003416:	2301      	movne	r3, #1
90003418:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
9000341c:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
9000341e:	6840      	ldr	r0, [r0, #4]
90003420:	6803      	ldr	r3, [r0, #0]
90003422:	691b      	ldr	r3, [r3, #16]
90003424:	4798      	blx	r3
90003426:	2800      	cmp	r0, #0
90003428:	d0f2      	beq.n	90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
9000342a:	2300      	movs	r3, #0
                stream.isPlaying = true;
9000342c:	2101      	movs	r1, #1
                if (!stream.repeat)
9000342e:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
90003432:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
90003436:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
90003438:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
9000343a:	2a00      	cmp	r2, #0
9000343c:	d1e8      	bne.n	90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
9000343e:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003440:	4917      	ldr	r1, [pc, #92]	@ (900034a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003442:	6823      	ldr	r3, [r4, #0]
90003444:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003446:	428a      	cmp	r2, r1
90003448:	d11e      	bne.n	90003488 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000344a:	6965      	ldr	r5, [r4, #20]
9000344c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000344e:	4620      	mov	r0, r4
90003450:	4798      	blx	r3
90003452:	4285      	cmp	r5, r0
90003454:	d1dc      	bne.n	90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
90003456:	6823      	ldr	r3, [r4, #0]
90003458:	4620      	mov	r0, r4
9000345a:	699b      	ldr	r3, [r3, #24]
    }
9000345c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003460:	4718      	bx	r3
            stream.isPlaying = false;
90003462:	2300      	movs	r3, #0
90003464:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
90003468:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000346a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000346c:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
9000346e:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003470:	6102      	str	r2, [r0, #16]
    }
90003472:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003474:	2101      	movs	r1, #1
            stream.frameCount = 0;
90003476:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003478:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000347a:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
9000347e:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003482:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003484:	6102      	str	r2, [r0, #16]
    }
90003486:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003488:	4620      	mov	r0, r4
9000348a:	4790      	blx	r2
9000348c:	6823      	ldr	r3, [r4, #0]
9000348e:	4605      	mov	r5, r0
90003490:	e7dc      	b.n	9000344c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
90003492:	4b04      	ldr	r3, [pc, #16]	@ (900034a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003494:	216e      	movs	r1, #110	@ 0x6e
90003496:	4a04      	ldr	r2, [pc, #16]	@ (900034a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
90003498:	4804      	ldr	r0, [pc, #16]	@ (900034ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
9000349a:	f028 fef5 	bl	9002c288 <__assert_func>
9000349e:	bf00      	nop
900034a0:	9000101d 	.word	0x9000101d
900034a4:	9002dc28 	.word	0x9002dc28
900034a8:	9002e7dc 	.word	0x9002e7dc
900034ac:	9002dd58 	.word	0x9002dd58

900034b0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900034b0:	b538      	push	{r3, r4, r5, lr}
900034b2:	4604      	mov	r4, r0
    HAL::initialize();
900034b4:	f010 f99b 	bl	900137ee <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900034b8:	6823      	ldr	r3, [r4, #0]
900034ba:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
900034bc:	f016 f926 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
900034c0:	4601      	mov	r1, r0
900034c2:	4620      	mov	r0, r4
900034c4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034c6:	6823      	ldr	r3, [r4, #0]
900034c8:	4a13      	ldr	r2, [pc, #76]	@ (90003518 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
900034ca:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
900034ce:	4295      	cmp	r5, r2
900034d0:	d116      	bne.n	90003500 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034d2:	4a12      	ldr	r2, [pc, #72]	@ (9000351c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034d4:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900034d6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900034da:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034de:	4810      	ldr	r0, [pc, #64]	@ (90003520 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034e0:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034e4:	4a0f      	ldr	r2, [pc, #60]	@ (90003524 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034e6:	7005      	strb	r5, [r0, #0]
900034e8:	4293      	cmp	r3, r2
900034ea:	d110      	bne.n	9000350e <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034ec:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034ee:	4a0e      	ldr	r2, [pc, #56]	@ (90003528 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034f0:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034f2:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900034f4:	4b0d      	ldr	r3, [pc, #52]	@ (9000352c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900034f6:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900034f8:	4a0d      	ldr	r2, [pc, #52]	@ (90003530 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900034fa:	6459      	str	r1, [r3, #68]	@ 0x44
900034fc:	6053      	str	r3, [r2, #4]
}
900034fe:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003500:	4a0c      	ldr	r2, [pc, #48]	@ (90003534 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
90003502:	2300      	movs	r3, #0
90003504:	4620      	mov	r0, r4
90003506:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
9000350a:	47a8      	blx	r5
9000350c:	e7f2      	b.n	900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
9000350e:	2100      	movs	r1, #0
90003510:	4620      	mov	r0, r4
90003512:	4798      	blx	r3
90003514:	e7ee      	b.n	900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
90003516:	bf00      	nop
90003518:	90000f41 	.word	0x90000f41
9000351c:	d003fc00 	.word	0xd003fc00
90003520:	2402459c 	.word	0x2402459c
90003524:	90000d7d 	.word	0x90000d7d
90003528:	2402459d 	.word	0x2402459d
9000352c:	24009124 	.word	0x24009124
90003530:	240090f4 	.word	0x240090f4
90003534:	d007f800 	.word	0xd007f800

90003538 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
90003538:	4842      	ldr	r0, [pc, #264]	@ (90003644 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
{
9000353a:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
9000353c:	6804      	ldr	r4, [r0, #0]
9000353e:	f3bf 8f5b 	dmb	ish
90003542:	f014 0401 	ands.w	r4, r4, #1
90003546:	d001      	beq.n	9000354c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
90003548:	483f      	ldr	r0, [pc, #252]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000354a:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
9000354c:	f028 fb27 	bl	9002bb9e <__cxa_guard_acquire>
90003550:	2800      	cmp	r0, #0
90003552:	d0f9      	beq.n	90003548 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003554:	4d3c      	ldr	r5, [pc, #240]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
90003556:	4b3d      	ldr	r3, [pc, #244]	@ (9000364c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003558:	4e3d      	ldr	r6, [pc, #244]	@ (90003650 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
9000355a:	f105 0034 	add.w	r0, r5, #52	@ 0x34
9000355e:	612c      	str	r4, [r5, #16]
90003560:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003564:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
90003568:	e9c5 3400 	strd	r3, r4, [r5]
9000356c:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003570:	f017 fc59 	bl	9001ae26 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003574:	f105 0058 	add.w	r0, r5, #88	@ 0x58
90003578:	f013 f8bc 	bl	900166f4 <_ZN8touchgfx12CanvasWidgetC1Ev>
9000357c:	4935      	ldr	r1, [pc, #212]	@ (90003654 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
9000357e:	4a36      	ldr	r2, [pc, #216]	@ (90003658 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
90003580:	6833      	ldr	r3, [r6, #0]
90003582:	65a9      	str	r1, [r5, #88]	@ 0x58
90003584:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90003588:	4934      	ldr	r1, [pc, #208]	@ (9000365c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
9000358a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
9000358e:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
90003592:	6029      	str	r1, [r5, #0]
90003594:	b192      	cbz	r2, 900035bc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
90003596:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90003598:	2800      	cmp	r0, #0
9000359a:	d03f      	beq.n	9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe4>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
9000359c:	6803      	ldr	r3, [r0, #0]
9000359e:	4c30      	ldr	r4, [pc, #192]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
900035a0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035a2:	42a2      	cmp	r2, r4
900035a4:	d017      	beq.n	900035d6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035a6:	4790      	blx	r2
        return auxiliaryLCD;
900035a8:	6833      	ldr	r3, [r6, #0]
900035aa:	fab0 f680 	clz	r6, r0
900035ae:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035b0:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900035b2:	2800      	cmp	r0, #0
900035b4:	d03e      	beq.n	90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfc>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035b6:	6803      	ldr	r3, [r0, #0]
900035b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900035ba:	e00a      	b.n	900035d2 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900035bc:	6898      	ldr	r0, [r3, #8]
900035be:	4c28      	ldr	r4, [pc, #160]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035c0:	6802      	ldr	r2, [r0, #0]
900035c2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900035c4:	42a2      	cmp	r2, r4
900035c6:	d1ee      	bne.n	900035a6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
900035c8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900035ca:	b120      	cbz	r0, 900035d6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900035cc:	6803      	ldr	r3, [r0, #0]
900035ce:	2601      	movs	r6, #1
900035d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035d2:	42a3      	cmp	r3, r4
900035d4:	d129      	bne.n	9000362a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf2>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900035d6:	4923      	ldr	r1, [pc, #140]	@ (90003664 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900035d8:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035da:	2300      	movs	r3, #0
        : AbstractPainter(),
900035dc:	2464      	movs	r4, #100	@ 0x64
900035de:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : widgetWidth(0)
900035e2:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035e6:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035ea:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900035ee:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900035f2:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900035f6:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
        : AbstractPainter(),
900035fa:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
900035fe:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
90003602:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
90003606:	4a18      	ldr	r2, [pc, #96]	@ (90003668 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
90003608:	4818      	ldr	r0, [pc, #96]	@ (9000366c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
9000360a:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
9000360e:	f028 fe59 	bl	9002c2c4 <atexit>
90003612:	480c      	ldr	r0, [pc, #48]	@ (90003644 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
90003614:	f028 facf 	bl	9002bbb6 <__cxa_guard_release>
}
90003618:	480b      	ldr	r0, [pc, #44]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000361a:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
9000361c:	6898      	ldr	r0, [r3, #8]
9000361e:	4c10      	ldr	r4, [pc, #64]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003620:	6803      	ldr	r3, [r0, #0]
90003622:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003624:	42a2      	cmp	r2, r4
90003626:	d0d6      	beq.n	900035d6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003628:	e7bd      	b.n	900035a6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000362a:	4798      	blx	r3
9000362c:	2800      	cmp	r0, #0
9000362e:	bf08      	it	eq
90003630:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90003634:	2e00      	cmp	r6, #0
90003636:	d1ce      	bne.n	900035d6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003638:	4b0d      	ldr	r3, [pc, #52]	@ (90003670 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
9000363a:	212c      	movs	r1, #44	@ 0x2c
9000363c:	4a0d      	ldr	r2, [pc, #52]	@ (90003674 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
9000363e:	480e      	ldr	r0, [pc, #56]	@ (90003678 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003640:	f028 fe22 	bl	9002c288 <__assert_func>
90003644:	24009034 	.word	0x24009034
90003648:	24009038 	.word	0x24009038
9000364c:	90030128 	.word	0x90030128
90003650:	240245a0 	.word	0x240245a0
90003654:	9002ea68 	.word	0x9002ea68
90003658:	9002ea48 	.word	0x9002ea48
9000365c:	9002eae0 	.word	0x9002eae0
90003660:	90002ee5 	.word	0x90002ee5
90003664:	900300dc 	.word	0x900300dc
90003668:	900300bc 	.word	0x900300bc
9000366c:	90002f15 	.word	0x90002f15
90003670:	9002e940 	.word	0x9002e940
90003674:	9002e9a0 	.word	0x9002e9a0
90003678:	9002e9dc 	.word	0x9002e9dc

9000367c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
9000367c:	b510      	push	{r4, lr}
        return instance;
9000367e:	4c14      	ldr	r4, [pc, #80]	@ (900036d0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90003680:	6823      	ldr	r3, [r4, #0]
90003682:	b323      	cbz	r3, 900036ce <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003684:	4b13      	ldr	r3, [pc, #76]	@ (900036d4 <HAL_LTDC_LineEventCallback+0x58>)
90003686:	4a14      	ldr	r2, [pc, #80]	@ (900036d8 <HAL_LTDC_LineEventCallback+0x5c>)
90003688:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9000368a:	8811      	ldrh	r1, [r2, #0]
9000368c:	428b      	cmp	r3, r1
9000368e:	d00a      	beq.n	900036a6 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90003690:	f007 fbf2 	bl	9000ae78 <HAL_LTDC_ProgramLineEvent>
90003694:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90003696:	6803      	ldr	r3, [r0, #0]
90003698:	6a1b      	ldr	r3, [r3, #32]
9000369a:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
9000369c:	2000      	movs	r0, #0
        }
    }
9000369e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900036a2:	f7fd bb0f 	b.w	90000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900036a6:	4b0d      	ldr	r3, [pc, #52]	@ (900036dc <HAL_LTDC_LineEventCallback+0x60>)
900036a8:	8819      	ldrh	r1, [r3, #0]
900036aa:	f007 fbe5 	bl	9000ae78 <HAL_LTDC_ProgramLineEvent>
        return instance;
900036ae:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
900036b0:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
900036b4:	3301      	adds	r3, #1
900036b6:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            OSWrappers::signalVSync();
900036ba:	f7fe fe5b 	bl	90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900036be:	6820      	ldr	r0, [r4, #0]
900036c0:	f010 fdee 	bl	900142a0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900036c4:	2000      	movs	r0, #0
    }
900036c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900036ca:	f7fd bac7 	b.w	90000c5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900036ce:	bd10      	pop	{r4, pc}
900036d0:	240245a0 	.word	0x240245a0
900036d4:	50001000 	.word	0x50001000
900036d8:	24009032 	.word	0x24009032
900036dc:	24009030 	.word	0x24009030

900036e0 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900036e0:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900036e2:	480b      	ldr	r0, [pc, #44]	@ (90003710 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900036e4:	f7fd fe10 	bl	90001308 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900036e8:	4c0a      	ldr	r4, [pc, #40]	@ (90003714 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900036ea:	4b0b      	ldr	r3, [pc, #44]	@ (90003718 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900036ec:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036ee:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900036f2:	2101      	movs	r1, #1
900036f4:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036f6:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
900036f8:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
900036fc:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
90003700:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
90003702:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
90003706:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
9000370a:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
9000370e:	bd10      	pop	{r4, pc}
90003710:	24009124 	.word	0x24009124
90003714:	9002eb2c 	.word	0x9002eb2c
90003718:	240090f4 	.word	0x240090f4

9000371c <MX_USB_DEVICE_InitKeyboard>:
/*
 * -- Insert your external function declaration here --
 */
/* USER CODE BEGIN 1 */
void MX_USB_DEVICE_InitKeyboard(void)
{
9000371c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
9000371e:	2200      	movs	r2, #0
90003720:	4913      	ldr	r1, [pc, #76]	@ (90003770 <MX_USB_DEVICE_InitKeyboard+0x54>)
90003722:	4814      	ldr	r0, [pc, #80]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
90003724:	f00e fe44 	bl	900123b0 <USBD_Init>
90003728:	b960      	cbnz	r0, 90003744 <MX_USB_DEVICE_InitKeyboard+0x28>
  {
    Error_Handler();
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID_Keyboard) != USBD_OK)
9000372a:	4913      	ldr	r1, [pc, #76]	@ (90003778 <MX_USB_DEVICE_InitKeyboard+0x5c>)
9000372c:	4811      	ldr	r0, [pc, #68]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
9000372e:	f00e fe6d 	bl	9001240c <USBD_RegisterClass>
90003732:	b978      	cbnz	r0, 90003754 <MX_USB_DEVICE_InitKeyboard+0x38>
  {
    Error_Handler();
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
90003734:	480f      	ldr	r0, [pc, #60]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
90003736:	f00e fe85 	bl	90012444 <USBD_Start>
9000373a:	b990      	cbnz	r0, 90003762 <MX_USB_DEVICE_InitKeyboard+0x46>

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */
  HAL_PWREx_EnableUSBVoltageDetector();

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
9000373c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_PWREx_EnableUSBVoltageDetector();
90003740:	f009 b82e 	b.w	9000c7a0 <HAL_PWREx_EnableUSBVoltageDetector>
    Error_Handler();
90003744:	f000 fef6 	bl	90004534 <Error_Handler>
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID_Keyboard) != USBD_OK)
90003748:	490b      	ldr	r1, [pc, #44]	@ (90003778 <MX_USB_DEVICE_InitKeyboard+0x5c>)
9000374a:	480a      	ldr	r0, [pc, #40]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
9000374c:	f00e fe5e 	bl	9001240c <USBD_RegisterClass>
90003750:	2800      	cmp	r0, #0
90003752:	d0ef      	beq.n	90003734 <MX_USB_DEVICE_InitKeyboard+0x18>
    Error_Handler();
90003754:	f000 feee 	bl	90004534 <Error_Handler>
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
90003758:	4806      	ldr	r0, [pc, #24]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
9000375a:	f00e fe73 	bl	90012444 <USBD_Start>
9000375e:	2800      	cmp	r0, #0
90003760:	d0ec      	beq.n	9000373c <MX_USB_DEVICE_InitKeyboard+0x20>
    Error_Handler();
90003762:	f000 fee7 	bl	90004534 <Error_Handler>
}
90003766:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_PWREx_EnableUSBVoltageDetector();
9000376a:	f009 b819 	b.w	9000c7a0 <HAL_PWREx_EnableUSBVoltageDetector>
9000376e:	bf00      	nop
90003770:	24000078 	.word	0x24000078
90003774:	2400916c 	.word	0x2400916c
90003778:	24000274 	.word	0x24000274

9000377c <MX_USB_DEVICE_InitMouse>:

void MX_USB_DEVICE_InitMouse(void)
{
9000377c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
9000377e:	2200      	movs	r2, #0
90003780:	4913      	ldr	r1, [pc, #76]	@ (900037d0 <MX_USB_DEVICE_InitMouse+0x54>)
90003782:	4814      	ldr	r0, [pc, #80]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
90003784:	f00e fe14 	bl	900123b0 <USBD_Init>
90003788:	b960      	cbnz	r0, 900037a4 <MX_USB_DEVICE_InitMouse+0x28>
  {
    Error_Handler();
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID_Mouse) != USBD_OK)
9000378a:	4913      	ldr	r1, [pc, #76]	@ (900037d8 <MX_USB_DEVICE_InitMouse+0x5c>)
9000378c:	4811      	ldr	r0, [pc, #68]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
9000378e:	f00e fe3d 	bl	9001240c <USBD_RegisterClass>
90003792:	b978      	cbnz	r0, 900037b4 <MX_USB_DEVICE_InitMouse+0x38>
  {
    Error_Handler();
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
90003794:	480f      	ldr	r0, [pc, #60]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
90003796:	f00e fe55 	bl	90012444 <USBD_Start>
9000379a:	b990      	cbnz	r0, 900037c2 <MX_USB_DEVICE_InitMouse+0x46>

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */
  HAL_PWREx_EnableUSBVoltageDetector();

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
9000379c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_PWREx_EnableUSBVoltageDetector();
900037a0:	f008 bffe 	b.w	9000c7a0 <HAL_PWREx_EnableUSBVoltageDetector>
    Error_Handler();
900037a4:	f000 fec6 	bl	90004534 <Error_Handler>
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID_Mouse) != USBD_OK)
900037a8:	490b      	ldr	r1, [pc, #44]	@ (900037d8 <MX_USB_DEVICE_InitMouse+0x5c>)
900037aa:	480a      	ldr	r0, [pc, #40]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
900037ac:	f00e fe2e 	bl	9001240c <USBD_RegisterClass>
900037b0:	2800      	cmp	r0, #0
900037b2:	d0ef      	beq.n	90003794 <MX_USB_DEVICE_InitMouse+0x18>
    Error_Handler();
900037b4:	f000 febe 	bl	90004534 <Error_Handler>
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
900037b8:	4806      	ldr	r0, [pc, #24]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
900037ba:	f00e fe43 	bl	90012444 <USBD_Start>
900037be:	2800      	cmp	r0, #0
900037c0:	d0ec      	beq.n	9000379c <MX_USB_DEVICE_InitMouse+0x20>
    Error_Handler();
900037c2:	f000 feb7 	bl	90004534 <Error_Handler>
}
900037c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_PWREx_EnableUSBVoltageDetector();
900037ca:	f008 bfe9 	b.w	9000c7a0 <HAL_PWREx_EnableUSBVoltageDetector>
900037ce:	bf00      	nop
900037d0:	24000078 	.word	0x24000078
900037d4:	2400916c 	.word	0x2400916c
900037d8:	2400023c 	.word	0x2400023c

900037dc <MX_USB_DEVICE_Deinit>:

void MX_USB_DEVICE_Deinit(void)
{
900037dc:	b508      	push	{r3, lr}
	if(USBD_Stop(&hUsbDeviceFS) != USBD_OK) {
900037de:	480c      	ldr	r0, [pc, #48]	@ (90003810 <MX_USB_DEVICE_Deinit+0x34>)
900037e0:	f00e fe32 	bl	90012448 <USBD_Stop>
900037e4:	b938      	cbnz	r0, 900037f6 <MX_USB_DEVICE_Deinit+0x1a>
		Error_Handler();
	}
	if(USBD_DeInit(&hUsbDeviceFS) != USBD_OK) {
900037e6:	480a      	ldr	r0, [pc, #40]	@ (90003810 <MX_USB_DEVICE_Deinit+0x34>)
900037e8:	f00e fdf6 	bl	900123d8 <USBD_DeInit>
900037ec:	b950      	cbnz	r0, 90003804 <MX_USB_DEVICE_Deinit+0x28>
		Error_Handler();
	}

	HAL_PWREx_DisableUSBVoltageDetector();
}
900037ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	HAL_PWREx_DisableUSBVoltageDetector();
900037f2:	f008 bfdd 	b.w	9000c7b0 <HAL_PWREx_DisableUSBVoltageDetector>
		Error_Handler();
900037f6:	f000 fe9d 	bl	90004534 <Error_Handler>
	if(USBD_DeInit(&hUsbDeviceFS) != USBD_OK) {
900037fa:	4805      	ldr	r0, [pc, #20]	@ (90003810 <MX_USB_DEVICE_Deinit+0x34>)
900037fc:	f00e fdec 	bl	900123d8 <USBD_DeInit>
90003800:	2800      	cmp	r0, #0
90003802:	d0f4      	beq.n	900037ee <MX_USB_DEVICE_Deinit+0x12>
		Error_Handler();
90003804:	f000 fe96 	bl	90004534 <Error_Handler>
}
90003808:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	HAL_PWREx_DisableUSBVoltageDetector();
9000380c:	f008 bfd0 	b.w	9000c7b0 <HAL_PWREx_DisableUSBVoltageDetector>
90003810:	2400916c 	.word	0x2400916c

90003814 <SendKeyboardEvent>:

void SendKeyboardEvent(keyboardEvent_t keyboardEvent) {
90003814:	b500      	push	{lr}
90003816:	b083      	sub	sp, #12
	USBD_HID_SendReport(&hUsbDeviceFS, (uint8_t*) &keyboardEvent, sizeof(keyboardEvent_t));
90003818:	2208      	movs	r2, #8
void SendKeyboardEvent(keyboardEvent_t keyboardEvent) {
9000381a:	466b      	mov	r3, sp
9000381c:	e883 0003 	stmia.w	r3, {r0, r1}
	USBD_HID_SendReport(&hUsbDeviceFS, (uint8_t*) &keyboardEvent, sizeof(keyboardEvent_t));
90003820:	4619      	mov	r1, r3
90003822:	4803      	ldr	r0, [pc, #12]	@ (90003830 <SendKeyboardEvent+0x1c>)
90003824:	f00f fc6c 	bl	90013100 <USBD_HID_SendReport>
}
90003828:	b003      	add	sp, #12
9000382a:	f85d fb04 	ldr.w	pc, [sp], #4
9000382e:	bf00      	nop
90003830:	2400916c 	.word	0x2400916c

90003834 <SendMouseEvent>:

void SendMouseEvent(mouseEvent_t mouseEvent) {
90003834:	b500      	push	{lr}
90003836:	b083      	sub	sp, #12
	USBD_HID_SendReport(&hUsbDeviceFS, (uint8_t*) &mouseEvent, sizeof(mouseEvent_t));
90003838:	2205      	movs	r2, #5
void SendMouseEvent(mouseEvent_t mouseEvent) {
9000383a:	466b      	mov	r3, sp
9000383c:	e883 0003 	stmia.w	r3, {r0, r1}
	USBD_HID_SendReport(&hUsbDeviceFS, (uint8_t*) &mouseEvent, sizeof(mouseEvent_t));
90003840:	4619      	mov	r1, r3
90003842:	4803      	ldr	r0, [pc, #12]	@ (90003850 <SendMouseEvent+0x1c>)
90003844:	f00f fc5c 	bl	90013100 <USBD_HID_SendReport>
}
90003848:	b003      	add	sp, #12
9000384a:	f85d fb04 	ldr.w	pc, [sp], #4
9000384e:	bf00      	nop
90003850:	2400916c 	.word	0x2400916c

90003854 <USBD_FS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
90003854:	2312      	movs	r3, #18
  return USBD_FS_DeviceDesc;
}
90003856:	4801      	ldr	r0, [pc, #4]	@ (9000385c <USBD_FS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_FS_DeviceDesc);
90003858:	800b      	strh	r3, [r1, #0]
}
9000385a:	4770      	bx	lr
9000385c:	24000064 	.word	0x24000064

90003860 <USBD_FS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
90003860:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
90003862:	4801      	ldr	r0, [pc, #4]	@ (90003868 <USBD_FS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
90003864:	800b      	strh	r3, [r1, #0]
}
90003866:	4770      	bx	lr
90003868:	24000060 	.word	0x24000060

9000386c <USBD_FS_ManufacturerStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
9000386c:	b510      	push	{r4, lr}
  UNUSED(speed);
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
9000386e:	4c04      	ldr	r4, [pc, #16]	@ (90003880 <USBD_FS_ManufacturerStrDescriptor+0x14>)
{
90003870:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
90003872:	4804      	ldr	r0, [pc, #16]	@ (90003884 <USBD_FS_ManufacturerStrDescriptor+0x18>)
90003874:	4621      	mov	r1, r4
90003876:	f00f fa4b 	bl	90012d10 <USBD_GetString>
  return USBD_StrDesc;
}
9000387a:	4620      	mov	r0, r4
9000387c:	bd10      	pop	{r4, pc}
9000387e:	bf00      	nop
90003880:	24009448 	.word	0x24009448
90003884:	9002eb64 	.word	0x9002eb64

90003888 <USBD_FS_ProductStrDescriptor>:
{
90003888:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
9000388a:	4c04      	ldr	r4, [pc, #16]	@ (9000389c <USBD_FS_ProductStrDescriptor+0x14>)
{
9000388c:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
9000388e:	4804      	ldr	r0, [pc, #16]	@ (900038a0 <USBD_FS_ProductStrDescriptor+0x18>)
90003890:	4621      	mov	r1, r4
90003892:	f00f fa3d 	bl	90012d10 <USBD_GetString>
}
90003896:	4620      	mov	r0, r4
90003898:	bd10      	pop	{r4, pc}
9000389a:	bf00      	nop
9000389c:	24009448 	.word	0x24009448
900038a0:	9002eb78 	.word	0x9002eb78

900038a4 <USBD_FS_ConfigStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
900038a4:	b510      	push	{r4, lr}
  if(speed == USBD_SPEED_HIGH)
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
900038a6:	4c04      	ldr	r4, [pc, #16]	@ (900038b8 <USBD_FS_ConfigStrDescriptor+0x14>)
{
900038a8:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
900038aa:	4804      	ldr	r0, [pc, #16]	@ (900038bc <USBD_FS_ConfigStrDescriptor+0x18>)
900038ac:	4621      	mov	r1, r4
900038ae:	f00f fa2f 	bl	90012d10 <USBD_GetString>
  else
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
  }
  return USBD_StrDesc;
}
900038b2:	4620      	mov	r0, r4
900038b4:	bd10      	pop	{r4, pc}
900038b6:	bf00      	nop
900038b8:	24009448 	.word	0x24009448
900038bc:	9002eb90 	.word	0x9002eb90

900038c0 <USBD_FS_InterfaceStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
900038c0:	b510      	push	{r4, lr}
  if(speed == 0)
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
900038c2:	4c04      	ldr	r4, [pc, #16]	@ (900038d4 <USBD_FS_InterfaceStrDescriptor+0x14>)
{
900038c4:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
900038c6:	4804      	ldr	r0, [pc, #16]	@ (900038d8 <USBD_FS_InterfaceStrDescriptor+0x18>)
900038c8:	4621      	mov	r1, r4
900038ca:	f00f fa21 	bl	90012d10 <USBD_GetString>
  else
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
  }
  return USBD_StrDesc;
}
900038ce:	4620      	mov	r0, r4
900038d0:	bd10      	pop	{r4, pc}
900038d2:	bf00      	nop
900038d4:	24009448 	.word	0x24009448
900038d8:	9002eb9c 	.word	0x9002eb9c

900038dc <USBD_FS_SerialStrDescriptor>:
{
  uint32_t deviceserial0;
  uint32_t deviceserial1;
  uint32_t deviceserial2;

  deviceserial0 = *(uint32_t *) DEVICE_ID1;
900038dc:	4a52      	ldr	r2, [pc, #328]	@ (90003a28 <USBD_FS_SerialStrDescriptor+0x14c>)
  *length = USB_SIZ_STRING_SERIAL;
900038de:	f04f 0c1a 	mov.w	ip, #26
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
900038e2:	f8d2 3800 	ldr.w	r3, [r2, #2048]	@ 0x800
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
  deviceserial2 = *(uint32_t *) DEVICE_ID3;

  deviceserial0 += deviceserial2;
900038e6:	f8d2 0808 	ldr.w	r0, [r2, #2056]	@ 0x808
  *length = USB_SIZ_STRING_SERIAL;
900038ea:	f8a1 c000 	strh.w	ip, [r1]

  if (deviceserial0 != 0)
900038ee:	181b      	adds	r3, r3, r0
900038f0:	d101      	bne.n	900038f6 <USBD_FS_SerialStrDescriptor+0x1a>
}
900038f2:	484e      	ldr	r0, [pc, #312]	@ (90003a2c <USBD_FS_SerialStrDescriptor+0x150>)
900038f4:	4770      	bx	lr
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
900038f6:	f8d2 1804 	ldr.w	r1, [r2, #2052]	@ 0x804

  for (idx = 0; idx < len; idx++)
  {
    if (((value >> 28)) < 0xA)
    {
      pbuf[2 * idx] = (value >> 28) + '0';
900038fa:	0f18      	lsrs	r0, r3, #28
900038fc:	4a4b      	ldr	r2, [pc, #300]	@ (90003a2c <USBD_FS_SerialStrDescriptor+0x150>)
    if (((value >> 28)) < 0xA)
900038fe:	f1b3 4f20 	cmp.w	r3, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
90003902:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003906:	bf2c      	ite	cs
90003908:	3037      	addcs	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
9000390a:	3030      	addcc	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
9000390c:	f882 c003 	strb.w	ip, [r2, #3]
    if (((value >> 28)) < 0xA)
90003910:	f3c3 6c03 	ubfx	ip, r3, #24, #4
      pbuf[2 * idx] = (value >> 28) + '0';
90003914:	7090      	strb	r0, [r2, #2]
    if (((value >> 28)) < 0xA)
90003916:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
9000391a:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
9000391c:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003920:	bf8c      	ite	hi
90003922:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003924:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
90003926:	f882 c005 	strb.w	ip, [r2, #5]
    if (((value >> 28)) < 0xA)
9000392a:	f3c3 5c03 	ubfx	ip, r3, #20, #4
      pbuf[2 * idx] = (value >> 28) + '0';
9000392e:	7110      	strb	r0, [r2, #4]
    if (((value >> 28)) < 0xA)
90003930:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
90003934:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
90003936:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
9000393a:	bf8c      	ite	hi
9000393c:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
9000393e:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
90003940:	f882 c007 	strb.w	ip, [r2, #7]
    if (((value >> 28)) < 0xA)
90003944:	f3c3 4c03 	ubfx	ip, r3, #16, #4
      pbuf[2 * idx] = (value >> 28) + '0';
90003948:	7190      	strb	r0, [r2, #6]
    if (((value >> 28)) < 0xA)
9000394a:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
9000394e:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
90003950:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003954:	bf8c      	ite	hi
90003956:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003958:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
9000395a:	f882 c009 	strb.w	ip, [r2, #9]
    if (((value >> 28)) < 0xA)
9000395e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
      pbuf[2 * idx] = (value >> 28) + '0';
90003962:	7210      	strb	r0, [r2, #8]
    if (((value >> 28)) < 0xA)
90003964:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
90003968:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
9000396a:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
9000396e:	bf8c      	ite	hi
90003970:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003972:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
90003974:	f882 c00b 	strb.w	ip, [r2, #11]
    if (((value >> 28)) < 0xA)
90003978:	f3c3 2c03 	ubfx	ip, r3, #8, #4
      pbuf[2 * idx] = (value >> 28) + '0';
9000397c:	7290      	strb	r0, [r2, #10]
    if (((value >> 28)) < 0xA)
9000397e:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
90003982:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
90003984:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003988:	bf8c      	ite	hi
9000398a:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
9000398c:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
9000398e:	f882 c00d 	strb.w	ip, [r2, #13]
    if (((value >> 28)) < 0xA)
90003992:	f3c3 1c03 	ubfx	ip, r3, #4, #4
      pbuf[2 * idx] = (value >> 28) + '0';
90003996:	7310      	strb	r0, [r2, #12]
    if (((value >> 28)) < 0xA)
90003998:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
9000399c:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
9000399e:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
900039a2:	bf8c      	ite	hi
900039a4:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
900039a6:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
900039a8:	f882 c00f 	strb.w	ip, [r2, #15]
900039ac:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + '0';
900039b0:	7390      	strb	r0, [r2, #14]
    if (((value >> 28)) < 0xA)
900039b2:	f003 000f 	and.w	r0, r3, #15
    pbuf[2 * idx + 1] = 0;
900039b6:	f882 c013 	strb.w	ip, [r2, #19]
900039ba:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + '0';
900039be:	4603      	mov	r3, r0
    if (((value >> 28)) < 0xA)
900039c0:	2809      	cmp	r0, #9
    pbuf[2 * idx + 1] = 0;
900039c2:	f04f 0000 	mov.w	r0, #0
900039c6:	f882 c015 	strb.w	ip, [r2, #21]
      pbuf[2 * idx] = (value >> 28) + '0';
900039ca:	bf94      	ite	ls
900039cc:	3330      	addls	r3, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
900039ce:	3337      	addhi	r3, #55	@ 0x37
    if (((value >> 28)) < 0xA)
900039d0:	f1b1 4f20 	cmp.w	r1, #2684354560	@ 0xa0000000
    pbuf[2 * idx + 1] = 0;
900039d4:	7450      	strb	r0, [r2, #17]
      pbuf[2 * idx] = (value >> 28) + '0';
900039d6:	7413      	strb	r3, [r2, #16]
900039d8:	ea4f 7311 	mov.w	r3, r1, lsr #28
    if (((value >> 28)) < 0xA)
900039dc:	f3c1 6003 	ubfx	r0, r1, #24, #4
    pbuf[2 * idx + 1] = 0;
900039e0:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
900039e4:	bf2c      	ite	cs
900039e6:	3337      	addcs	r3, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
900039e8:	3330      	addcc	r3, #48	@ 0x30
    if (((value >> 28)) < 0xA)
900039ea:	2809      	cmp	r0, #9
    pbuf[2 * idx + 1] = 0;
900039ec:	f882 c017 	strb.w	ip, [r2, #23]
      pbuf[2 * idx] = (value >> 28) + '0';
900039f0:	7493      	strb	r3, [r2, #18]
900039f2:	4603      	mov	r3, r0
    if (((value >> 28)) < 0xA)
900039f4:	f3c1 5003 	ubfx	r0, r1, #20, #4
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
900039f8:	bf8c      	ite	hi
900039fa:	3337      	addhi	r3, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
900039fc:	3330      	addls	r3, #48	@ 0x30
    if (((value >> 28)) < 0xA)
900039fe:	2809      	cmp	r0, #9
      pbuf[2 * idx] = (value >> 28) + '0';
90003a00:	7513      	strb	r3, [r2, #20]
90003a02:	4603      	mov	r3, r0
    if (((value >> 28)) < 0xA)
90003a04:	f3c1 4003 	ubfx	r0, r1, #16, #4
    pbuf[2 * idx + 1] = 0;
90003a08:	f04f 0100 	mov.w	r1, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003a0c:	bf8c      	ite	hi
90003a0e:	3337      	addhi	r3, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003a10:	3330      	addls	r3, #48	@ 0x30
    if (((value >> 28)) < 0xA)
90003a12:	2809      	cmp	r0, #9
    pbuf[2 * idx + 1] = 0;
90003a14:	7651      	strb	r1, [r2, #25]
      pbuf[2 * idx] = (value >> 28) + '0';
90003a16:	7593      	strb	r3, [r2, #22]
90003a18:	4603      	mov	r3, r0
}
90003a1a:	4804      	ldr	r0, [pc, #16]	@ (90003a2c <USBD_FS_SerialStrDescriptor+0x150>)
      pbuf[2 * idx] = (value >> 28) + '0';
90003a1c:	bf94      	ite	ls
90003a1e:	3330      	addls	r3, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003a20:	3337      	addhi	r3, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003a22:	7613      	strb	r3, [r2, #24]
}
90003a24:	4770      	bx	lr
90003a26:	bf00      	nop
90003a28:	1ff1e000 	.word	0x1ff1e000
90003a2c:	24000044 	.word	0x24000044

90003a30 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
90003a30:	b510      	push	{r4, lr}
90003a32:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a34:	2100      	movs	r1, #0
{
90003a36:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003a38:	22c0      	movs	r2, #192	@ 0xc0
90003a3a:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a3c:	9106      	str	r1, [sp, #24]
90003a3e:	e9cd 1102 	strd	r1, r1, [sp, #8]
90003a42:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003a46:	f028 febb 	bl	9002c7c0 <memset>
  if(pcdHandle->Instance==USB_OTG_FS)
90003a4a:	4b27      	ldr	r3, [pc, #156]	@ (90003ae8 <HAL_PCD_MspInit+0xb8>)
90003a4c:	6822      	ldr	r2, [r4, #0]
90003a4e:	429a      	cmp	r2, r3
90003a50:	d001      	beq.n	90003a56 <HAL_PCD_MspInit+0x26>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }
}
90003a52:	b038      	add	sp, #224	@ 0xe0
90003a54:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USB;
90003a56:	ed9f 7b20 	vldr	d7, [pc, #128]	@ 90003ad8 <HAL_PCD_MspInit+0xa8>
    PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
90003a5a:	f44f 1340 	mov.w	r3, #3145728	@ 0x300000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003a5e:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USB;
90003a60:	ed8d 7b08 	vstr	d7, [sp, #32]
    PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
90003a64:	932a      	str	r3, [sp, #168]	@ 0xa8
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003a66:	f009 fda7 	bl	9000d5b8 <HAL_RCCEx_PeriphCLKConfig>
90003a6a:	bb90      	cbnz	r0, 90003ad2 <HAL_PCD_MspInit+0xa2>
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a6c:	4c1f      	ldr	r4, [pc, #124]	@ (90003aec <HAL_PCD_MspInit+0xbc>)
    HAL_PWREx_EnableUSBVoltageDetector();
90003a6e:	f008 fe97 	bl	9000c7a0 <HAL_PWREx_EnableUSBVoltageDetector>
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG1_FS;
90003a72:	220a      	movs	r2, #10
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003a74:	a902      	add	r1, sp, #8
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a76:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003a7a:	481d      	ldr	r0, [pc, #116]	@ (90003af0 <HAL_PCD_MspInit+0xc0>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a7c:	f043 0301 	orr.w	r3, r3, #1
90003a80:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003a84:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG1_FS;
90003a88:	9206      	str	r2, [sp, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_11;
90003a8a:	2200      	movs	r2, #0
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a8c:	f003 0301 	and.w	r3, r3, #1
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_11;
90003a90:	ed9f 7b13 	vldr	d7, [pc, #76]	@ 90003ae0 <HAL_PCD_MspInit+0xb0>
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a94:	9300      	str	r3, [sp, #0]
90003a96:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_11;
90003a98:	2300      	movs	r3, #0
90003a9a:	ed8d 7b02 	vstr	d7, [sp, #8]
90003a9e:	e9cd 2304 	strd	r2, r3, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003aa2:	f004 fcd7 	bl	90008454 <HAL_GPIO_Init>
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
90003aa6:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
90003aaa:	2200      	movs	r2, #0
90003aac:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
90003aae:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
90003ab2:	2065      	movs	r0, #101	@ 0x65
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
90003ab4:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
90003ab8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
90003abc:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
90003ac0:	9301      	str	r3, [sp, #4]
90003ac2:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
90003ac4:	f004 fa64 	bl	90007f90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
90003ac8:	2065      	movs	r0, #101	@ 0x65
90003aca:	f004 fa9d 	bl	90008008 <HAL_NVIC_EnableIRQ>
}
90003ace:	b038      	add	sp, #224	@ 0xe0
90003ad0:	bd10      	pop	{r4, pc}
      Error_Handler();
90003ad2:	f000 fd2f 	bl	90004534 <Error_Handler>
90003ad6:	e7c9      	b.n	90003a6c <HAL_PCD_MspInit+0x3c>
90003ad8:	00040000 	.word	0x00040000
90003adc:	00000000 	.word	0x00000000
90003ae0:	00001800 	.word	0x00001800
90003ae4:	00000002 	.word	0x00000002
90003ae8:	40080000 	.word	0x40080000
90003aec:	58024400 	.word	0x58024400
90003af0:	58020000 	.word	0x58020000

90003af4 <HAL_PCD_MspDeInit>:

void HAL_PCD_MspDeInit(PCD_HandleTypeDef* pcdHandle)
{
  if(pcdHandle->Instance==USB_OTG_FS)
90003af4:	6802      	ldr	r2, [r0, #0]
{
90003af6:	b508      	push	{r3, lr}
  if(pcdHandle->Instance==USB_OTG_FS)
90003af8:	4b0a      	ldr	r3, [pc, #40]	@ (90003b24 <HAL_PCD_MspDeInit+0x30>)
90003afa:	429a      	cmp	r2, r3
90003afc:	d000      	beq.n	90003b00 <HAL_PCD_MspDeInit+0xc>

  /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */

  /* USER CODE END USB_OTG_FS_MspDeInit 1 */
  }
}
90003afe:	bd08      	pop	{r3, pc}
    __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
90003b00:	4a09      	ldr	r2, [pc, #36]	@ (90003b28 <HAL_PCD_MspDeInit+0x34>)
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_12|GPIO_PIN_11);
90003b02:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
90003b06:	4809      	ldr	r0, [pc, #36]	@ (90003b2c <HAL_PCD_MspDeInit+0x38>)
    __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
90003b08:	f8d2 30d8 	ldr.w	r3, [r2, #216]	@ 0xd8
90003b0c:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
90003b10:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_12|GPIO_PIN_11);
90003b14:	f004 fde0 	bl	900086d8 <HAL_GPIO_DeInit>
    HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
90003b18:	2065      	movs	r0, #101	@ 0x65
}
90003b1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
90003b1e:	f004 ba81 	b.w	90008024 <HAL_NVIC_DisableIRQ>
90003b22:	bf00      	nop
90003b24:	40080000 	.word	0x40080000
90003b28:	58024400 	.word	0x58024400
90003b2c:	58020000 	.word	0x58020000

90003b30 <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
90003b30:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
90003b34:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003b38:	f00e bca6 	b.w	90012488 <USBD_LL_SetupStage>

90003b3c <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
90003b3c:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
90003b40:	eb00 0383 	add.w	r3, r0, r3, lsl #2
90003b44:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003b48:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
90003b4c:	f00e bccc 	b.w	900124e8 <USBD_LL_DataOutStage>

90003b50 <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
90003b50:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
90003b54:	eb00 0383 	add.w	r3, r0, r3, lsl #2
90003b58:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003b5c:	6a1a      	ldr	r2, [r3, #32]
90003b5e:	f00e bcfd 	b.w	9001255c <USBD_LL_DataInStage>
90003b62:	bf00      	nop

90003b64 <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
90003b64:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003b68:	f00e bda6 	b.w	900126b8 <USBD_LL_SOF>

90003b6c <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
90003b6c:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
90003b6e:	79c1      	ldrb	r1, [r0, #7]
{
90003b70:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
90003b72:	b111      	cbz	r1, 90003b7a <HAL_PCD_ResetCallback+0xe>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
90003b74:	2902      	cmp	r1, #2
90003b76:	d10a      	bne.n	90003b8e <HAL_PCD_ResetCallback+0x22>
  {
    speed = USBD_SPEED_FULL;
90003b78:	2101      	movs	r1, #1
  else
  {
    Error_Handler();
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
90003b7a:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
90003b7e:	f00e fd7b 	bl	90012678 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
90003b82:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
90003b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
90003b8a:	f00e bd47 	b.w	9001261c <USBD_LL_Reset>
    Error_Handler();
90003b8e:	f000 fcd1 	bl	90004534 <Error_Handler>
    speed = USBD_SPEED_FULL;
90003b92:	2101      	movs	r1, #1
90003b94:	e7f1      	b.n	90003b7a <HAL_PCD_ResetCallback+0xe>
90003b96:	bf00      	nop

90003b98 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
90003b98:	b510      	push	{r4, lr}
90003b9a:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
90003b9c:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003ba0:	f00e fd6e 	bl	90012680 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
90003ba4:	6822      	ldr	r2, [r4, #0]
90003ba6:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
90003baa:	f043 0301 	orr.w	r3, r3, #1
90003bae:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
90003bb2:	7ae3      	ldrb	r3, [r4, #11]
90003bb4:	b123      	cbz	r3, 90003bc0 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
90003bb6:	4a03      	ldr	r2, [pc, #12]	@ (90003bc4 <HAL_PCD_SuspendCallback+0x2c>)
90003bb8:	6913      	ldr	r3, [r2, #16]
90003bba:	f043 0306 	orr.w	r3, r3, #6
90003bbe:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
90003bc0:	bd10      	pop	{r4, pc}
90003bc2:	bf00      	nop
90003bc4:	e000ed00 	.word	0xe000ed00

90003bc8 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
90003bc8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003bcc:	f00e bd68 	b.w	900126a0 <USBD_LL_Resume>

90003bd0 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
90003bd0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003bd4:	f00e bd96 	b.w	90012704 <USBD_LL_IsoOUTIncomplete>

90003bd8 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
90003bd8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003bdc:	f00e bd7c 	b.w	900126d8 <USBD_LL_IsoINIncomplete>

90003be0 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
90003be0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003be4:	f00e bda4 	b.w	90012730 <USBD_LL_DevConnected>

90003be8 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
90003be8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003bec:	f00e bda2 	b.w	90012734 <USBD_LL_DevDisconnected>

90003bf0 <USBD_LL_Init>:
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
  /* Init USB Ip. */
  if (pdev->id == DEVICE_FS) {
90003bf0:	7802      	ldrb	r2, [r0, #0]
90003bf2:	b10a      	cbz	r2, 90003bf8 <USBD_LL_Init+0x8>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
  /* USER CODE END TxRx_Configuration */
  }
  return USBD_OK;
}
90003bf4:	2000      	movs	r0, #0
90003bf6:	4770      	bx	lr
{
90003bf8:	b508      	push	{r3, lr}
  hpcd_USB_OTG_FS.pData = pdev;
90003bfa:	4b15      	ldr	r3, [pc, #84]	@ (90003c50 <USBD_LL_Init+0x60>)
  hpcd_USB_OTG_FS.Init.dev_endpoints = 9;
90003bfc:	f04f 0c09 	mov.w	ip, #9
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
90003c00:	4914      	ldr	r1, [pc, #80]	@ (90003c54 <USBD_LL_Init+0x64>)
  hpcd_USB_OTG_FS.pData = pdev;
90003c02:	f8c3 04e0 	str.w	r0, [r3, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_FS;
90003c06:	f8c0 32c8 	str.w	r3, [r0, #712]	@ 0x2c8
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
90003c0a:	f44f 7000 	mov.w	r0, #512	@ 0x200
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
90003c0e:	6019      	str	r1, [r3, #0]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
90003c10:	2102      	movs	r1, #2
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
90003c12:	80d8      	strh	r0, [r3, #6]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
90003c14:	4618      	mov	r0, r3
  hpcd_USB_OTG_FS.Init.dev_endpoints = 9;
90003c16:	f883 c004 	strb.w	ip, [r3, #4]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
90003c1a:	f8c3 1009 	str.w	r1, [r3, #9]
  hpcd_USB_OTG_FS.Init.battery_charging_enable = DISABLE;
90003c1e:	f8a3 200d 	strh.w	r2, [r3, #13]
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
90003c22:	73da      	strb	r2, [r3, #15]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
90003c24:	f007 fb92 	bl	9000b34c <HAL_PCD_Init>
90003c28:	b978      	cbnz	r0, 90003c4a <USBD_LL_Init+0x5a>
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
90003c2a:	2180      	movs	r1, #128	@ 0x80
90003c2c:	4808      	ldr	r0, [pc, #32]	@ (90003c50 <USBD_LL_Init+0x60>)
90003c2e:	f008 fd73 	bl	9000c718 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
90003c32:	2240      	movs	r2, #64	@ 0x40
90003c34:	2100      	movs	r1, #0
90003c36:	4806      	ldr	r0, [pc, #24]	@ (90003c50 <USBD_LL_Init+0x60>)
90003c38:	f008 fcec 	bl	9000c614 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
90003c3c:	2280      	movs	r2, #128	@ 0x80
90003c3e:	2101      	movs	r1, #1
90003c40:	4803      	ldr	r0, [pc, #12]	@ (90003c50 <USBD_LL_Init+0x60>)
90003c42:	f008 fce7 	bl	9000c614 <HAL_PCDEx_SetTxFiFo>
}
90003c46:	2000      	movs	r0, #0
90003c48:	bd08      	pop	{r3, pc}
    Error_Handler( );
90003c4a:	f000 fc73 	bl	90004534 <Error_Handler>
90003c4e:	e7ec      	b.n	90003c2a <USBD_LL_Init+0x3a>
90003c50:	2400965c 	.word	0x2400965c
90003c54:	40080000 	.word	0x40080000

90003c58 <USBD_LL_DeInit>:
  * @brief  De-Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_DeInit(USBD_HandleTypeDef *pdev)
{
90003c58:	b508      	push	{r3, lr}
  HAL_StatusTypeDef hal_status = HAL_OK;
  USBD_StatusTypeDef usb_status = USBD_OK;

  hal_status = HAL_PCD_DeInit(pdev->pData);
90003c5a:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003c5e:	f007 fd7d 	bl	9000b75c <HAL_PCD_DeInit>
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
90003c62:	b118      	cbz	r0, 90003c6c <USBD_LL_DeInit+0x14>
90003c64:	2802      	cmp	r0, #2
90003c66:	bf0c      	ite	eq
90003c68:	2001      	moveq	r0, #1
90003c6a:	2003      	movne	r0, #3
}
90003c6c:	bd08      	pop	{r3, pc}
90003c6e:	bf00      	nop

90003c70 <USBD_LL_Start>:
{
90003c70:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
90003c72:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003c76:	f007 fd87 	bl	9000b788 <HAL_PCD_Start>
  switch (hal_status)
90003c7a:	b118      	cbz	r0, 90003c84 <USBD_LL_Start+0x14>
90003c7c:	2802      	cmp	r0, #2
90003c7e:	bf0c      	ite	eq
90003c80:	2001      	moveq	r0, #1
90003c82:	2003      	movne	r0, #3
}
90003c84:	bd08      	pop	{r3, pc}
90003c86:	bf00      	nop

90003c88 <USBD_LL_Stop>:
{
90003c88:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Stop(pdev->pData);
90003c8a:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003c8e:	f007 fd9d 	bl	9000b7cc <HAL_PCD_Stop>
  switch (hal_status)
90003c92:	b118      	cbz	r0, 90003c9c <USBD_LL_Stop+0x14>
90003c94:	2802      	cmp	r0, #2
90003c96:	bf0c      	ite	eq
90003c98:	2001      	moveq	r0, #1
90003c9a:	2003      	movne	r0, #3
}
90003c9c:	bd08      	pop	{r3, pc}
90003c9e:	bf00      	nop

90003ca0 <USBD_LL_OpenEP>:
{
90003ca0:	4694      	mov	ip, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
90003ca2:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
90003ca6:	461a      	mov	r2, r3
90003ca8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
90003caa:	4663      	mov	r3, ip
90003cac:	f008 fb78 	bl	9000c3a0 <HAL_PCD_EP_Open>
  switch (hal_status)
90003cb0:	b118      	cbz	r0, 90003cba <USBD_LL_OpenEP+0x1a>
90003cb2:	2802      	cmp	r0, #2
90003cb4:	bf0c      	ite	eq
90003cb6:	2001      	moveq	r0, #1
90003cb8:	2003      	movne	r0, #3
}
90003cba:	bd08      	pop	{r3, pc}

90003cbc <USBD_LL_CloseEP>:
{
90003cbc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
90003cbe:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003cc2:	f008 fbab 	bl	9000c41c <HAL_PCD_EP_Close>
  switch (hal_status)
90003cc6:	b118      	cbz	r0, 90003cd0 <USBD_LL_CloseEP+0x14>
90003cc8:	2802      	cmp	r0, #2
90003cca:	bf0c      	ite	eq
90003ccc:	2001      	moveq	r0, #1
90003cce:	2003      	movne	r0, #3
}
90003cd0:	bd08      	pop	{r3, pc}
90003cd2:	bf00      	nop

90003cd4 <USBD_LL_StallEP>:
{
90003cd4:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
90003cd6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003cda:	f008 fc1b 	bl	9000c514 <HAL_PCD_EP_SetStall>
  switch (hal_status)
90003cde:	b118      	cbz	r0, 90003ce8 <USBD_LL_StallEP+0x14>
90003ce0:	2802      	cmp	r0, #2
90003ce2:	bf0c      	ite	eq
90003ce4:	2001      	moveq	r0, #1
90003ce6:	2003      	movne	r0, #3
}
90003ce8:	bd08      	pop	{r3, pc}
90003cea:	bf00      	nop

90003cec <USBD_LL_ClearStallEP>:
{
90003cec:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
90003cee:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003cf2:	f008 fc53 	bl	9000c59c <HAL_PCD_EP_ClrStall>
  switch (hal_status)
90003cf6:	b118      	cbz	r0, 90003d00 <USBD_LL_ClearStallEP+0x14>
90003cf8:	2802      	cmp	r0, #2
90003cfa:	bf0c      	ite	eq
90003cfc:	2001      	moveq	r0, #1
90003cfe:	2003      	movne	r0, #3
}
90003d00:	bd08      	pop	{r3, pc}
90003d02:	bf00      	nop

90003d04 <USBD_LL_IsStallEP>:
  if((ep_addr & 0x80) == 0x80)
90003d04:	060a      	lsls	r2, r1, #24
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
90003d06:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
90003d0a:	d406      	bmi.n	90003d1a <USBD_LL_IsStallEP+0x16>
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
90003d0c:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90003d10:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90003d14:	f893 0256 	ldrb.w	r0, [r3, #598]	@ 0x256
}
90003d18:	4770      	bx	lr
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
90003d1a:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
90003d1e:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90003d22:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90003d26:	7d98      	ldrb	r0, [r3, #22]
90003d28:	4770      	bx	lr
90003d2a:	bf00      	nop

90003d2c <USBD_LL_SetUSBAddress>:
{
90003d2c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
90003d2e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003d32:	f008 fb21 	bl	9000c378 <HAL_PCD_SetAddress>
  switch (hal_status)
90003d36:	b118      	cbz	r0, 90003d40 <USBD_LL_SetUSBAddress+0x14>
90003d38:	2802      	cmp	r0, #2
90003d3a:	bf0c      	ite	eq
90003d3c:	2001      	moveq	r0, #1
90003d3e:	2003      	movne	r0, #3
}
90003d40:	bd08      	pop	{r3, pc}
90003d42:	bf00      	nop

90003d44 <USBD_LL_Transmit>:
{
90003d44:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
90003d46:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003d4a:	f008 fbc1 	bl	9000c4d0 <HAL_PCD_EP_Transmit>
  switch (hal_status)
90003d4e:	b118      	cbz	r0, 90003d58 <USBD_LL_Transmit+0x14>
90003d50:	2802      	cmp	r0, #2
90003d52:	bf0c      	ite	eq
90003d54:	2001      	moveq	r0, #1
90003d56:	2003      	movne	r0, #3
}
90003d58:	bd08      	pop	{r3, pc}
90003d5a:	bf00      	nop

90003d5c <USBD_LL_PrepareReceive>:
{
90003d5c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
90003d5e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003d62:	f008 fb93 	bl	9000c48c <HAL_PCD_EP_Receive>
  switch (hal_status)
90003d66:	b118      	cbz	r0, 90003d70 <USBD_LL_PrepareReceive+0x14>
90003d68:	2802      	cmp	r0, #2
90003d6a:	bf0c      	ite	eq
90003d6c:	2001      	moveq	r0, #1
90003d6e:	2003      	movne	r0, #3
}
90003d70:	bd08      	pop	{r3, pc}
90003d72:	bf00      	nop

90003d74 <USBD_static_malloc>:
}
90003d74:	4800      	ldr	r0, [pc, #0]	@ (90003d78 <USBD_static_malloc+0x4>)
90003d76:	4770      	bx	lr
90003d78:	24009648 	.word	0x24009648

90003d7c <USBD_static_free>:
}
90003d7c:	4770      	bx	lr
90003d7e:	bf00      	nop

90003d80 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003d80:	4901      	ldr	r1, [pc, #4]	@ (90003d88 <vApplicationIdleHook+0x8>)
90003d82:	2000      	movs	r0, #0
90003d84:	f00d be98 	b.w	90011ab8 <vTaskSetApplicationTaskTag>
90003d88:	90000ffd 	.word	0x90000ffd

90003d8c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003d8c:	b570      	push	{r4, r5, r6, lr}
90003d8e:	b082      	sub	sp, #8
  /* init code for USB_DEVICE */
  /* USER CODE BEGIN 5 */
  MX_USB_DEVICE_InitKeyboard();

  uint8_t deviceMode = 1; // 1 is keyboard 0 is mouse
90003d90:	2501      	movs	r5, #1
90003d92:	4e0f      	ldr	r6, [pc, #60]	@ (90003dd0 <StartDefaultTask+0x44>)
  MX_USB_DEVICE_InitKeyboard();
90003d94:	f7ff fcc2 	bl	9000371c <MX_USB_DEVICE_InitKeyboard>
  uint8_t deviceMode = 1; // 1 is keyboard 0 is mouse
90003d98:	e007      	b.n	90003daa <StartDefaultTask+0x1e>
	status = osMessageQueueGet(usbSwapQueueHandle, &tmp, NULL, osWaitForever);
	if(status == osOK) {
		if(deviceMode != 0) {
			MX_USB_DEVICE_Deinit();
			MX_USB_DEVICE_InitMouse();
			deviceMode = 0;
90003d9a:	4625      	mov	r5, r4
			MX_USB_DEVICE_Deinit();
90003d9c:	f7ff fd1e 	bl	900037dc <MX_USB_DEVICE_Deinit>
			MX_USB_DEVICE_InitMouse();
90003da0:	f7ff fcec 	bl	9000377c <MX_USB_DEVICE_InitMouse>
			MX_USB_DEVICE_Deinit();
			MX_USB_DEVICE_InitKeyboard();
			deviceMode = 1;
		}
	}
    osDelay(100);
90003da4:	2064      	movs	r0, #100	@ 0x64
90003da6:	f00b fd45 	bl	9000f834 <osDelay>
	status = osMessageQueueGet(usbSwapQueueHandle, &tmp, NULL, osWaitForever);
90003daa:	f04f 33ff 	mov.w	r3, #4294967295
90003dae:	2200      	movs	r2, #0
90003db0:	f10d 0107 	add.w	r1, sp, #7
90003db4:	6830      	ldr	r0, [r6, #0]
90003db6:	f00b fe6b 	bl	9000fa90 <osMessageQueueGet>
	if(status == osOK) {
90003dba:	f010 04ff 	ands.w	r4, r0, #255	@ 0xff
90003dbe:	d1f1      	bne.n	90003da4 <StartDefaultTask+0x18>
		if(deviceMode != 0) {
90003dc0:	2d00      	cmp	r5, #0
90003dc2:	d1ea      	bne.n	90003d9a <StartDefaultTask+0xe>
			deviceMode = 1;
90003dc4:	2501      	movs	r5, #1
			MX_USB_DEVICE_Deinit();
90003dc6:	f7ff fd09 	bl	900037dc <MX_USB_DEVICE_Deinit>
			MX_USB_DEVICE_InitKeyboard();
90003dca:	f7ff fca7 	bl	9000371c <MX_USB_DEVICE_InitKeyboard>
			deviceMode = 1;
90003dce:	e7e9      	b.n	90003da4 <StartDefaultTask+0x18>
90003dd0:	24009b40 	.word	0x24009b40

90003dd4 <StartTaskUSB>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTaskUSB */
void StartTaskUSB(void *argument)
{
90003dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003dd8:	b087      	sub	sp, #28
90003dda:	2600      	movs	r6, #0
90003ddc:	4d31      	ldr	r5, [pc, #196]	@ (90003ea4 <StartTaskUSB+0xd0>)
90003dde:	f10d 0808 	add.w	r8, sp, #8
90003de2:	af04      	add	r7, sp, #16
90003de4:	4c30      	ldr	r4, [pc, #192]	@ (90003ea8 <StartTaskUSB+0xd4>)

  uint8_t status;
  USBEvent_t event;
  for(;;)
  {
	status = osMessageQueueGet(usbEventQueueHandle, &event, NULL, osWaitForever);
90003de6:	f04f 33ff 	mov.w	r3, #4294967295
90003dea:	2200      	movs	r2, #0
90003dec:	4669      	mov	r1, sp
90003dee:	6828      	ldr	r0, [r5, #0]
90003df0:	f00b fe4e 	bl	9000fa90 <osMessageQueueGet>
	if(status == osOK) {
90003df4:	f010 00ff 	ands.w	r0, r0, #255	@ 0xff
90003df8:	d1f5      	bne.n	90003de6 <StartTaskUSB+0x12>
		if(event.event_type == USB_EVENT_MOUSE){
			GUIMouseEvent_t* guiMouseEvent = (GUIMouseEvent_t*) event.event;
90003dfa:	f8dd 9004 	ldr.w	r9, [sp, #4]
		if(event.event_type == USB_EVENT_MOUSE){
90003dfe:	f89d b000 	ldrb.w	fp, [sp]

			mouseEvent_t mouseEvent = {0, 0, 0, 0, 0};
			mouseEvent.BUTTONS = guiMouseEvent->BUTTONS;
90003e02:	f899 a000 	ldrb.w	sl, [r9]
		if(event.event_type == USB_EVENT_MOUSE){
90003e06:	f1bb 0f00 	cmp.w	fp, #0
90003e0a:	d125      	bne.n	90003e58 <StartTaskUSB+0x84>
			mouseEvent.X = guiMouseEvent->X * 5;
90003e0c:	f899 2001 	ldrb.w	r2, [r9, #1]
			mouseEvent.Y = guiMouseEvent->Y * 5;
90003e10:	f899 3002 	ldrb.w	r3, [r9, #2]
			mouseEvent.X = guiMouseEvent->X * 5;
90003e14:	eb02 0282 	add.w	r2, r2, r2, lsl #2
			mouseEvent_t mouseEvent = {0, 0, 0, 0, 0};
90003e18:	f8ad b00b 	strh.w	fp, [sp, #11]
			mouseEvent.Y = guiMouseEvent->Y * 5;
90003e1c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
			SendMouseEvent(mouseEvent);
90003e20:	f88d a008 	strb.w	sl, [sp, #8]
			mouseEvent.X = guiMouseEvent->X * 5;
90003e24:	f88d 2009 	strb.w	r2, [sp, #9]
			mouseEvent.Y = guiMouseEvent->Y * 5;
90003e28:	f88d 300a 	strb.w	r3, [sp, #10]
			SendMouseEvent(mouseEvent);
90003e2c:	e898 0003 	ldmia.w	r8, {r0, r1}
90003e30:	f7ff fd00 	bl	90003834 <SendMouseEvent>
			free(guiMouseEvent);
90003e34:	4648      	mov	r0, r9
90003e36:	f028 fa53 	bl	9002c2e0 <free>
			if(mouseEvent.BUTTONS != 0) {
90003e3a:	f1ba 0f00 	cmp.w	sl, #0
90003e3e:	d0d2      	beq.n	90003de6 <StartTaskUSB+0x12>
				mouseEvent_t clearEvent = {0, 0, 0, 0, 0};
				osDelay(20);
90003e40:	2014      	movs	r0, #20
				mouseEvent_t clearEvent = {0, 0, 0, 0, 0};
90003e42:	f8c7 b000 	str.w	fp, [r7]
90003e46:	f887 b004 	strb.w	fp, [r7, #4]
				osDelay(20);
90003e4a:	f00b fcf3 	bl	9000f834 <osDelay>
				SendMouseEvent(clearEvent);
90003e4e:	e897 0003 	ldmia.w	r7, {r0, r1}
90003e52:	f7ff fcef 	bl	90003834 <SendMouseEvent>
90003e56:	e7c6      	b.n	90003de6 <StartTaskUSB+0x12>
		} else {
			GUIKeyboardEvent_t* guiKeyboardEvent = (GUIKeyboardEvent_t*) event.event;
			keyboardEvent_t keyboardEvent = {0, 0, 0, 0, 0, 0, 0, 0};
			keyboardEvent.MODIFIER = guiKeyboardEvent->MODIFIERS;
			for(int i = 0; i < 56; i++) {
				if(usbMappingHID[i].unicodeChar == guiKeyboardEvent->keyChar) {
90003e58:	f8b9 1002 	ldrh.w	r1, [r9, #2]
90003e5c:	4b13      	ldr	r3, [pc, #76]	@ (90003eac <StartTaskUSB+0xd8>)
			keyboardEvent_t keyboardEvent = {0, 0, 0, 0, 0, 0, 0, 0};
90003e5e:	f8cd 0009 	str.w	r0, [sp, #9]
			keyboardEvent.MODIFIER = guiKeyboardEvent->MODIFIERS;
90003e62:	f88d a008 	strb.w	sl, [sp, #8]
			keyboardEvent_t keyboardEvent = {0, 0, 0, 0, 0, 0, 0, 0};
90003e66:	9003      	str	r0, [sp, #12]
				if(usbMappingHID[i].unicodeChar == guiKeyboardEvent->keyChar) {
90003e68:	881a      	ldrh	r2, [r3, #0]
90003e6a:	428a      	cmp	r2, r1
90003e6c:	d101      	bne.n	90003e72 <StartTaskUSB+0x9e>
					keyboardEvent.KEYCODE1 = usbMappingHID[i].usbKeycode;
90003e6e:	789e      	ldrb	r6, [r3, #2]
90003e70:	2001      	movs	r0, #1
			for(int i = 0; i < 56; i++) {
90003e72:	3304      	adds	r3, #4
90003e74:	42a3      	cmp	r3, r4
90003e76:	d1f7      	bne.n	90003e68 <StartTaskUSB+0x94>
90003e78:	b108      	cbz	r0, 90003e7e <StartTaskUSB+0xaa>
90003e7a:	f88d 600a 	strb.w	r6, [sp, #10]
				}
			}
			SendKeyboardEvent(keyboardEvent);
90003e7e:	e898 0003 	ldmia.w	r8, {r0, r1}
90003e82:	f7ff fcc7 	bl	90003814 <SendKeyboardEvent>
			free(guiKeyboardEvent);
90003e86:	4648      	mov	r0, r9
90003e88:	f028 fa2a 	bl	9002c2e0 <free>
			keyboardEvent_t clearEvent = {0, 0, 0, 0, 0, 0, 0, 0};
90003e8c:	2300      	movs	r3, #0
			osDelay(20);
90003e8e:	2014      	movs	r0, #20
			keyboardEvent_t clearEvent = {0, 0, 0, 0, 0, 0, 0, 0};
90003e90:	e9c7 3300 	strd	r3, r3, [r7]
			osDelay(20);
90003e94:	f00b fcce 	bl	9000f834 <osDelay>
			SendKeyboardEvent(clearEvent);
90003e98:	e897 0003 	ldmia.w	r7, {r0, r1}
90003e9c:	f7ff fcba 	bl	90003814 <SendKeyboardEvent>
90003ea0:	e7a1      	b.n	90003de6 <StartTaskUSB+0x12>
90003ea2:	bf00      	nop
90003ea4:	24009b44 	.word	0x24009b44
90003ea8:	9002ed8c 	.word	0x9002ed8c
90003eac:	9002ecac 	.word	0x9002ecac

90003eb0 <SystemClock_Config>:
{
90003eb0:	b570      	push	{r4, r5, r6, lr}
90003eb2:	b0a0      	sub	sp, #128	@ 0x80
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003eb4:	224c      	movs	r2, #76	@ 0x4c
90003eb6:	2100      	movs	r1, #0
90003eb8:	a80c      	add	r0, sp, #48	@ 0x30
90003eba:	f028 fc81 	bl	9002c7c0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003ebe:	2220      	movs	r2, #32
90003ec0:	2100      	movs	r1, #0
90003ec2:	a804      	add	r0, sp, #16
90003ec4:	f028 fc7c 	bl	9002c7c0 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003ec8:	2002      	movs	r0, #2
90003eca:	f008 fc45 	bl	9000c758 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90003ece:	4b35      	ldr	r3, [pc, #212]	@ (90003fa4 <SystemClock_Config+0xf4>)
90003ed0:	2100      	movs	r1, #0
90003ed2:	4a35      	ldr	r2, [pc, #212]	@ (90003fa8 <SystemClock_Config+0xf8>)
90003ed4:	9101      	str	r1, [sp, #4]
90003ed6:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003ed8:	f021 0101 	bic.w	r1, r1, #1
90003edc:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003ede:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003ee0:	f003 0301 	and.w	r3, r3, #1
90003ee4:	9301      	str	r3, [sp, #4]
90003ee6:	6993      	ldr	r3, [r2, #24]
90003ee8:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
90003eec:	6193      	str	r3, [r2, #24]
90003eee:	6993      	ldr	r3, [r2, #24]
90003ef0:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
90003ef4:	9301      	str	r3, [sp, #4]
90003ef6:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003ef8:	6993      	ldr	r3, [r2, #24]
90003efa:	049c      	lsls	r4, r3, #18
90003efc:	d5fc      	bpl.n	90003ef8 <SystemClock_Config+0x48>
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003efe:	4b2b      	ldr	r3, [pc, #172]	@ (90003fac <SystemClock_Config+0xfc>)
90003f00:	f8d3 10f4 	ldr.w	r1, [r3, #244]	@ 0xf4
90003f04:	f041 0102 	orr.w	r1, r1, #2
90003f08:	f8c3 10f4 	str.w	r1, [r3, #244]	@ 0xf4
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003f0c:	2100      	movs	r1, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003f0e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90003f12:	f003 0302 	and.w	r3, r3, #2
90003f16:	9302      	str	r3, [sp, #8]
90003f18:	9b02      	ldr	r3, [sp, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003f1a:	9103      	str	r1, [sp, #12]
90003f1c:	6991      	ldr	r1, [r2, #24]
90003f1e:	4b21      	ldr	r3, [pc, #132]	@ (90003fa4 <SystemClock_Config+0xf4>)
90003f20:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
90003f24:	6191      	str	r1, [r2, #24]
90003f26:	6992      	ldr	r2, [r2, #24]
90003f28:	f402 4240 	and.w	r2, r2, #49152	@ 0xc000
90003f2c:	9203      	str	r2, [sp, #12]
90003f2e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003f30:	4a1d      	ldr	r2, [pc, #116]	@ (90003fa8 <SystemClock_Config+0xf8>)
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003f32:	f041 0101 	orr.w	r1, r1, #1
90003f36:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003f38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003f3a:	f003 0301 	and.w	r3, r3, #1
90003f3e:	9303      	str	r3, [sp, #12]
90003f40:	9b03      	ldr	r3, [sp, #12]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003f42:	6993      	ldr	r3, [r2, #24]
90003f44:	0498      	lsls	r0, r3, #18
90003f46:	d5fc      	bpl.n	90003f42 <SystemClock_Config+0x92>
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90003f48:	2302      	movs	r3, #2
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSE;
90003f4a:	2021      	movs	r0, #33	@ 0x21
90003f4c:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003f50:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLP = 2;
90003f52:	9319      	str	r3, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003f54:	2604      	movs	r6, #4
  RCC_OscInitStruct.PLL.PLLR = 2;
90003f56:	931b      	str	r3, [sp, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003f58:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003f5a:	961a      	str	r6, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003f5c:	941e      	str	r4, [sp, #120]	@ 0x78
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003f5e:	e9cd 3315 	strd	r3, r3, [sp, #84]	@ 0x54
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
90003f62:	2301      	movs	r3, #1
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSE;
90003f64:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
90003f68:	9312      	str	r3, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLN = 192;
90003f6a:	2105      	movs	r1, #5
90003f6c:	23c0      	movs	r3, #192	@ 0xc0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003f6e:	a80c      	add	r0, sp, #48	@ 0x30
  RCC_OscInitStruct.PLL.PLLN = 192;
90003f70:	e9cd 1317 	strd	r1, r3, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003f74:	e9cd 541c 	strd	r5, r4, [sp, #112]	@ 0x70
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003f78:	f008 fc94 	bl	9000c8a4 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003f7c:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003f7e:	223f      	movs	r2, #63	@ 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003f80:	4631      	mov	r1, r6
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90003f82:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003f84:	a804      	add	r0, sp, #16
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003f86:	9204      	str	r2, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003f88:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90003f8a:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90003f8c:	9406      	str	r4, [sp, #24]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003f8e:	9205      	str	r2, [sp, #20]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003f90:	e9cd 5307 	strd	r5, r3, [sp, #28]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003f94:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003f98:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003f9a:	f009 f803 	bl	9000cfa4 <HAL_RCC_ClockConfig>
}
90003f9e:	b020      	add	sp, #128	@ 0x80
90003fa0:	bd70      	pop	{r4, r5, r6, pc}
90003fa2:	bf00      	nop
90003fa4:	58000400 	.word	0x58000400
90003fa8:	58024800 	.word	0x58024800
90003fac:	58024400 	.word	0x58024400

90003fb0 <main>:
{
90003fb0:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003fb2:	2400      	movs	r4, #0
{
90003fb4:	b09a      	sub	sp, #104	@ 0x68
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003fb6:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003fb8:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003fba:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003fbc:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90003fc0:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_MPU_Disable();
90003fc4:	f004 f840 	bl	90008048 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003fc8:	f04f 5310 	mov.w	r3, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003fcc:	49d4      	ldr	r1, [pc, #848]	@ (90004320 <main+0x370>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003fce:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.BaseAddress = 0x24000000;
90003fd0:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003fd2:	4bd4      	ldr	r3, [pc, #848]	@ (90004324 <main+0x374>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003fd4:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003fd8:	e9cd 130f 	strd	r1, r3, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003fdc:	f004 f852 	bl	90008084 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003fe0:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003fe4:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003fe6:	f88d 403f 	strb.w	r4, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0x90000000;
90003fea:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003fec:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003ff0:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003ff4:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003ff8:	f004 f844 	bl	90008084 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003ffc:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003ffe:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90004000:	f8ad 603f 	strh.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90004004:	f88d 3035 	strb.w	r3, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90004008:	231a      	movs	r3, #26
9000400a:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
9000400e:	f240 1301 	movw	r3, #257	@ 0x101
90004012:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004016:	f004 f835 	bl	90008084 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
9000401a:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000401e:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90004020:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90004024:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90004026:	f8ad 303f 	strh.w	r3, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0xD0000000;
9000402a:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
9000402e:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  MPU_InitStruct.BaseAddress = 0xD0000000;
90004032:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90004034:	f88d 6035 	strb.w	r6, [sp, #53]	@ 0x35
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004038:	f004 f824 	bl	90008084 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
9000403c:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000403e:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90004040:	f88d 603f 	strb.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90004044:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90004048:	f88d 4035 	strb.w	r4, [sp, #53]	@ 0x35
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
9000404c:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004050:	f004 f818 	bl	90008084 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90004054:	4620      	mov	r0, r4
90004056:	f004 f805 	bl	90008064 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
9000405a:	4ab3      	ldr	r2, [pc, #716]	@ (90004328 <main+0x378>)
9000405c:	6953      	ldr	r3, [r2, #20]
9000405e:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
90004062:	d111      	bne.n	90004088 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90004064:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004068:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
9000406c:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90004070:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004074:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90004078:	6953      	ldr	r3, [r2, #20]
9000407a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000407e:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90004080:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004084:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90004088:	48a7      	ldr	r0, [pc, #668]	@ (90004328 <main+0x378>)
9000408a:	6943      	ldr	r3, [r0, #20]
9000408c:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90004090:	d124      	bne.n	900040dc <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90004092:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90004096:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
9000409a:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000409e:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900040a2:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900040a6:	f3c5 05c9 	ubfx	r5, r5, #3, #10
900040aa:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900040ac:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900040b0:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900040b2:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900040b6:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900040b8:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
900040bc:	1c5a      	adds	r2, r3, #1
900040be:	d1f8      	bne.n	900040b2 <main+0x102>
    } while(sets-- != 0U);
900040c0:	3c20      	subs	r4, #32
900040c2:	f114 0f20 	cmn.w	r4, #32
900040c6:	d1f1      	bne.n	900040ac <main+0xfc>
900040c8:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
900040cc:	6943      	ldr	r3, [r0, #20]
900040ce:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
900040d2:	6143      	str	r3, [r0, #20]
900040d4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900040d8:	f3bf 8f6f 	isb	sy
  HAL_Init();
900040dc:	f003 feec 	bl	90007eb8 <HAL_Init>
  SystemClock_Config();
900040e0:	f7ff fee6 	bl	90003eb0 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
900040e4:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900040e6:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
900040e8:	4d90      	ldr	r5, [pc, #576]	@ (9000432c <main+0x37c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
900040ea:	21c0      	movs	r1, #192	@ 0xc0
900040ec:	4890      	ldr	r0, [pc, #576]	@ (90004330 <main+0x380>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900040ee:	9411      	str	r4, [sp, #68]	@ 0x44
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
900040f0:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900040f2:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900040f4:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
900040f8:	f44f 5700 	mov.w	r7, #8192	@ 0x2000
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
900040fc:	f04f 0940 	mov.w	r9, #64	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90004100:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004104:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90004108:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  __HAL_RCC_GPIOK_CLK_ENABLE();
9000410c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004110:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90004114:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004118:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000411c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
90004120:	9302      	str	r3, [sp, #8]
90004122:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90004124:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004128:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9000412c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004130:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004134:	f003 0340 	and.w	r3, r3, #64	@ 0x40
90004138:	9303      	str	r3, [sp, #12]
9000413a:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOI_CLK_ENABLE();
9000413c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004140:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90004144:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004148:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000414c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90004150:	9304      	str	r3, [sp, #16]
90004152:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90004154:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004158:	f043 0310 	orr.w	r3, r3, #16
9000415c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004160:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004164:	f003 0310 	and.w	r3, r3, #16
90004168:	9305      	str	r3, [sp, #20]
9000416a:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
9000416c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004170:	f043 0302 	orr.w	r3, r3, #2
90004174:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004178:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000417c:	f003 0302 	and.w	r3, r3, #2
90004180:	9306      	str	r3, [sp, #24]
90004182:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90004184:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004188:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
9000418c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004190:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004194:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90004198:	9307      	str	r3, [sp, #28]
9000419a:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000419c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041a0:	f043 0308 	orr.w	r3, r3, #8
900041a4:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900041a8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041ac:	f003 0308 	and.w	r3, r3, #8
900041b0:	9308      	str	r3, [sp, #32]
900041b2:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
900041b4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041b8:	f043 0304 	orr.w	r3, r3, #4
900041bc:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900041c0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041c4:	f003 0304 	and.w	r3, r3, #4
900041c8:	9309      	str	r3, [sp, #36]	@ 0x24
900041ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
900041cc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041d0:	f043 0301 	orr.w	r3, r3, #1
900041d4:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900041d8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041dc:	f003 0301 	and.w	r3, r3, #1
900041e0:	930a      	str	r3, [sp, #40]	@ 0x28
900041e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOF_CLK_ENABLE();
900041e4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041e8:	f043 0320 	orr.w	r3, r3, #32
900041ec:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900041f0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041f4:	f003 0320 	and.w	r3, r3, #32
900041f8:	930b      	str	r3, [sp, #44]	@ 0x2c
900041fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOH_CLK_ENABLE();
900041fc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004200:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90004204:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004208:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000420c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90004210:	930c      	str	r3, [sp, #48]	@ 0x30
90004212:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90004214:	f004 fb30 	bl	90008878 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90004218:	4622      	mov	r2, r4
9000421a:	2180      	movs	r1, #128	@ 0x80
9000421c:	4845      	ldr	r0, [pc, #276]	@ (90004334 <main+0x384>)
9000421e:	f004 fb2b 	bl	90008878 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
90004222:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90004226:	4844      	ldr	r0, [pc, #272]	@ (90004338 <main+0x388>)
90004228:	2201      	movs	r2, #1
9000422a:	f004 fb25 	bl	90008878 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
9000422e:	4622      	mov	r2, r4
90004230:	2108      	movs	r1, #8
90004232:	4842      	ldr	r0, [pc, #264]	@ (9000433c <main+0x38c>)
90004234:	f004 fb20 	bl	90008878 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90004238:	2201      	movs	r2, #1
9000423a:	4841      	ldr	r0, [pc, #260]	@ (90004340 <main+0x390>)
9000423c:	4611      	mov	r1, r2
9000423e:	f004 fb1b 	bl	90008878 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90004242:	4622      	mov	r2, r4
90004244:	2140      	movs	r1, #64	@ 0x40
90004246:	483f      	ldr	r0, [pc, #252]	@ (90004344 <main+0x394>)
90004248:	f004 fb16 	bl	90008878 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
9000424c:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
9000424e:	a90d      	add	r1, sp, #52	@ 0x34
90004250:	4837      	ldr	r0, [pc, #220]	@ (90004330 <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90004252:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90004256:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
9000425a:	f004 f8fb 	bl	90008454 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
9000425e:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90004260:	a90d      	add	r1, sp, #52	@ 0x34
90004262:	4834      	ldr	r0, [pc, #208]	@ (90004334 <main+0x384>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90004264:	930d      	str	r3, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90004266:	9410      	str	r4, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90004268:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
9000426c:	f004 f8f2 	bl	90008454 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
90004270:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
90004274:	a90d      	add	r1, sp, #52	@ 0x34
90004276:	4834      	ldr	r0, [pc, #208]	@ (90004348 <main+0x398>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90004278:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
9000427a:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
9000427e:	f004 f8e9 	bl	90008454 <HAL_GPIO_Init>
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90004282:	a90d      	add	r1, sp, #52	@ 0x34
90004284:	482c      	ldr	r0, [pc, #176]	@ (90004338 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90004286:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
9000428a:	2708      	movs	r7, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
9000428c:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90004290:	f004 f8e0 	bl	90008454 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90004294:	a90d      	add	r1, sp, #52	@ 0x34
90004296:	4829      	ldr	r0, [pc, #164]	@ (9000433c <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90004298:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000429c:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
900042a0:	f004 f8d8 	bl	90008454 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
900042a4:	a90d      	add	r1, sp, #52	@ 0x34
900042a6:	4826      	ldr	r0, [pc, #152]	@ (90004340 <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900042a8:	e9cd 660d 	strd	r6, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
900042ac:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
900042b0:	f004 f8d0 	bl	90008454 <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
900042b4:	a90d      	add	r1, sp, #52	@ 0x34
900042b6:	4823      	ldr	r0, [pc, #140]	@ (90004344 <main+0x394>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900042b8:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
900042bc:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
900042c0:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
900042c4:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
900042c8:	f004 f8c4 	bl	90008454 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
900042cc:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900042d0:	4622      	mov	r2, r4
900042d2:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
900042d4:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900042d6:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
900042d8:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
900042dc:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
900042e0:	4d1a      	ldr	r5, [pc, #104]	@ (9000434c <main+0x39c>)
  __HAL_RCC_MDMA_CLK_ENABLE();
900042e2:	4033      	ands	r3, r6
900042e4:	9301      	str	r3, [sp, #4]
900042e6:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900042e8:	f003 fe52 	bl	90007f90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
900042ec:	207a      	movs	r0, #122	@ 0x7a
900042ee:	f003 fe8b 	bl	90008008 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
900042f2:	2234      	movs	r2, #52	@ 0x34
900042f4:	4621      	mov	r1, r4
900042f6:	eb0d 0002 	add.w	r0, sp, r2
900042fa:	f028 fa61 	bl	9002c7c0 <memset>
  hltdc.Instance = LTDC;
900042fe:	4b14      	ldr	r3, [pc, #80]	@ (90004350 <main+0x3a0>)
  hltdc.Init.AccumulatedVBP = 11;
90004300:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.AccumulatedActiveH = 283;
90004302:	f240 2c0a 	movw	ip, #522	@ 0x20a
  hltdc.Instance = LTDC;
90004306:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90004308:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.TotalHeigh = 285;
9000430a:	f44f 7e04 	mov.w	lr, #528	@ 0x210
  hltdc.Init.VerticalSync = 8;
9000430e:	61af      	str	r7, [r5, #24]
  hltdc.Init.HorizontalSync = 39;
90004310:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90004312:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90004314:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90004316:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
9000431a:	e9c5 0307 	strd	r0, r3, [r5, #28]
9000431e:	e019      	b.n	90004354 <main+0x3a4>
90004320:	03000012 	.word	0x03000012
90004324:	01010001 	.word	0x01010001
90004328:	e000ed00 	.word	0xe000ed00
9000432c:	58024400 	.word	0x58024400
90004330:	58020400 	.word	0x58020400
90004334:	58020c00 	.word	0x58020c00
90004338:	58022000 	.word	0x58022000
9000433c:	58021800 	.word	0x58021800
90004340:	58022800 	.word	0x58022800
90004344:	58020000 	.word	0x58020000
90004348:	58020800 	.word	0x58020800
9000434c:	24009b8c 	.word	0x24009b8c
90004350:	50001000 	.word	0x50001000
  hltdc.Init.AccumulatedActiveH = 283;
90004354:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90004358:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
9000435a:	e9c5 c309 	strd	ip, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
9000435e:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90004362:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.TotalHeigh = 285;
90004366:	e9c5 e30b 	strd	lr, r3, [r5, #44]	@ 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
9000436a:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
9000436e:	f006 fbdb 	bl	9000ab28 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90004372:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90004376:	4622      	mov	r2, r4
90004378:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowX1 = 480;
9000437a:	930e      	str	r3, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
9000437c:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
9000437e:	9317      	str	r3, [sp, #92]	@ 0x5c
  pLayerCfg.WindowY1 = 272;
90004380:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90004384:	4d4f      	ldr	r5, [pc, #316]	@ (900044c4 <main+0x514>)
  pLayerCfg.WindowY1 = 272;
90004386:	9310      	str	r3, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 272;
90004388:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Alpha = 255;
9000438a:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
9000438c:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
  pLayerCfg.Alpha = 255;
90004390:	9312      	str	r3, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90004392:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  pLayerCfg.WindowX0 = 0;
90004396:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90004398:	9314      	str	r3, [sp, #80]	@ 0x50
  pLayerCfg.WindowY0 = 0;
9000439a:	940f      	str	r4, [sp, #60]	@ 0x3c
  pLayerCfg.Alpha0 = 0;
9000439c:	9413      	str	r4, [sp, #76]	@ 0x4c
  pLayerCfg.FBStartAdress = 0;
9000439e:	9416      	str	r4, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
900043a0:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
900043a4:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
900043a8:	f8cd a054 	str.w	sl, [sp, #84]	@ 0x54
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
900043ac:	f006 fc90 	bl	9000acd0 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
900043b0:	4b45      	ldr	r3, [pc, #276]	@ (900044c8 <main+0x518>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
900043b2:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
900043b4:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
900043b6:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
900043b8:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
900043ba:	e9c5 4801 	strd	r4, r8, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
900043be:	e9c5 4811 	strd	r4, r8, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
900043c2:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
900043c6:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
900043ca:	f003 ff01 	bl	900081d0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
900043ce:	4631      	mov	r1, r6
900043d0:	4628      	mov	r0, r5
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
900043d2:	2510      	movs	r5, #16
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
900043d4:	f003 ffd4 	bl	90008380 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
900043d8:	483c      	ldr	r0, [pc, #240]	@ (900044cc <main+0x51c>)
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
900043da:	2304      	movs	r3, #4
  SdramTiming.LoadToActiveDelay = 2;
900043dc:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
900043e0:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.WriteRecoveryTime = 5;
900043e2:	f8cd a044 	str.w	sl, [sp, #68]	@ 0x44
  SdramTiming.SelfRefreshTime = 4;
900043e6:	930f      	str	r3, [sp, #60]	@ 0x3c
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900043e8:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900043ec:	61c4      	str	r4, [r0, #28]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
900043ee:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
900043f0:	e9c0 3503 	strd	r3, r5, [r0, #12]
  SdramTiming.ExitSelfRefreshDelay = 7;
900043f4:	2307      	movs	r3, #7
900043f6:	930e      	str	r3, [sp, #56]	@ 0x38
  SdramTiming.RowCycleDelay = 7;
900043f8:	9310      	str	r3, [sp, #64]	@ 0x40
  hsdram2.Instance = FMC_SDRAM_DEVICE;
900043fa:	4b35      	ldr	r3, [pc, #212]	@ (900044d0 <main+0x520>)
900043fc:	6003      	str	r3, [r0, #0]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
900043fe:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  SdramTiming.RCDDelay = 2;
90004402:	e9cd 8812 	strd	r8, r8, [sp, #72]	@ 0x48
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90004406:	6183      	str	r3, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90004408:	f44f 6800 	mov.w	r8, #2048	@ 0x800
9000440c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90004410:	e9c0 6401 	strd	r6, r4, [r0, #4]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90004414:	e9c0 8308 	strd	r8, r3, [r0, #32]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90004418:	f00a f828 	bl	9000e46c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
9000441c:	4620      	mov	r0, r4
9000441e:	f003 fae7 	bl	900079f0 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90004422:	4620      	mov	r0, r4
90004424:	f003 fb2e 	bl	90007a84 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90004428:	f7fc fb48 	bl	90000abc <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
9000442c:	4b29      	ldr	r3, [pc, #164]	@ (900044d4 <main+0x524>)
9000442e:	482a      	ldr	r0, [pc, #168]	@ (900044d8 <main+0x528>)
90004430:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90004432:	f005 fad5 	bl	900099e0 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90004436:	4b29      	ldr	r3, [pc, #164]	@ (900044dc <main+0x52c>)
90004438:	4829      	ldr	r0, [pc, #164]	@ (900044e0 <main+0x530>)
9000443a:	6003      	str	r3, [r0, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
9000443c:	8084      	strh	r4, [r0, #4]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
9000443e:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90004440:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90004444:	f003 fe4e 	bl	900080e4 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90004448:	f7fc fb3c 	bl	90000ac4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
9000444c:	f7fc fb38 	bl	90000ac0 <MX_TouchGFX_PreOSInit>
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 12, 0);
90004450:	4622      	mov	r2, r4
90004452:	210c      	movs	r1, #12
90004454:	2028      	movs	r0, #40	@ 0x28
90004456:	f003 fd9b 	bl	90007f90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
9000445a:	2028      	movs	r0, #40	@ 0x28
9000445c:	f003 fdd4 	bl	90008008 <HAL_NVIC_EnableIRQ>
  osKernelInitialize();
90004460:	f00b f97a 	bl	9000f758 <osKernelInitialize>
  userButtonQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &userButtonQueue_attributes);
90004464:	4a1f      	ldr	r2, [pc, #124]	@ (900044e4 <main+0x534>)
90004466:	4631      	mov	r1, r6
90004468:	4628      	mov	r0, r5
9000446a:	f00b fa99 	bl	9000f9a0 <osMessageQueueNew>
9000446e:	4b1e      	ldr	r3, [pc, #120]	@ (900044e8 <main+0x538>)
  usbEventQueueHandle = osMessageQueueNew (16, sizeof(USBEvent_t), &usbEventQueue_attributes);
90004470:	4639      	mov	r1, r7
90004472:	4a1e      	ldr	r2, [pc, #120]	@ (900044ec <main+0x53c>)
  userButtonQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &userButtonQueue_attributes);
90004474:	6018      	str	r0, [r3, #0]
  usbEventQueueHandle = osMessageQueueNew (16, sizeof(USBEvent_t), &usbEventQueue_attributes);
90004476:	4628      	mov	r0, r5
90004478:	f00b fa92 	bl	9000f9a0 <osMessageQueueNew>
9000447c:	4b1c      	ldr	r3, [pc, #112]	@ (900044f0 <main+0x540>)
9000447e:	4602      	mov	r2, r0
  usbSwapQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &usbSwapQueueHandle_attributes);
90004480:	4631      	mov	r1, r6
90004482:	4628      	mov	r0, r5
  usbEventQueueHandle = osMessageQueueNew (16, sizeof(USBEvent_t), &usbEventQueue_attributes);
90004484:	601a      	str	r2, [r3, #0]
  usbSwapQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &usbSwapQueueHandle_attributes);
90004486:	4a1b      	ldr	r2, [pc, #108]	@ (900044f4 <main+0x544>)
90004488:	f00b fa8a 	bl	9000f9a0 <osMessageQueueNew>
9000448c:	4b1a      	ldr	r3, [pc, #104]	@ (900044f8 <main+0x548>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
9000448e:	4a1b      	ldr	r2, [pc, #108]	@ (900044fc <main+0x54c>)
90004490:	4621      	mov	r1, r4
  usbSwapQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &usbSwapQueueHandle_attributes);
90004492:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90004494:	481a      	ldr	r0, [pc, #104]	@ (90004500 <main+0x550>)
90004496:	f00b f98b 	bl	9000f7b0 <osThreadNew>
9000449a:	4b1a      	ldr	r3, [pc, #104]	@ (90004504 <main+0x554>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
9000449c:	4a1a      	ldr	r2, [pc, #104]	@ (90004508 <main+0x558>)
9000449e:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900044a0:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
900044a2:	481a      	ldr	r0, [pc, #104]	@ (9000450c <main+0x55c>)
900044a4:	f00b f984 	bl	9000f7b0 <osThreadNew>
900044a8:	4b19      	ldr	r3, [pc, #100]	@ (90004510 <main+0x560>)
900044aa:	4605      	mov	r5, r0
  USBTaskHandle = osThreadNew(StartTaskUSB, NULL, &USBTask_attributes);
900044ac:	4a19      	ldr	r2, [pc, #100]	@ (90004514 <main+0x564>)
900044ae:	4621      	mov	r1, r4
900044b0:	4819      	ldr	r0, [pc, #100]	@ (90004518 <main+0x568>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
900044b2:	601d      	str	r5, [r3, #0]
  USBTaskHandle = osThreadNew(StartTaskUSB, NULL, &USBTask_attributes);
900044b4:	f00b f97c 	bl	9000f7b0 <osThreadNew>
900044b8:	4b18      	ldr	r3, [pc, #96]	@ (9000451c <main+0x56c>)
900044ba:	6018      	str	r0, [r3, #0]
  osKernelStart();
900044bc:	f00b f95e 	bl	9000f77c <osKernelStart>
  while (1)
900044c0:	e7fe      	b.n	900044c0 <main+0x510>
900044c2:	bf00      	nop
900044c4:	24009d64 	.word	0x24009d64
900044c8:	52001000 	.word	0x52001000
900044cc:	24009b58 	.word	0x24009b58
900044d0:	52004140 	.word	0x52004140
900044d4:	52003000 	.word	0x52003000
900044d8:	24009d0c 	.word	0x24009d0c
900044dc:	58024c00 	.word	0x58024c00
900044e0:	24009dcc 	.word	0x24009dcc
900044e4:	9002ec28 	.word	0x9002ec28
900044e8:	24009b48 	.word	0x24009b48
900044ec:	9002ec10 	.word	0x9002ec10
900044f0:	24009b44 	.word	0x24009b44
900044f4:	9002ebf8 	.word	0x9002ebf8
900044f8:	24009b40 	.word	0x24009b40
900044fc:	9002ec88 	.word	0x9002ec88
90004500:	90003d8d 	.word	0x90003d8d
90004504:	24009b54 	.word	0x24009b54
90004508:	9002ec64 	.word	0x9002ec64
9000450c:	90000ad5 	.word	0x90000ad5
90004510:	24009b50 	.word	0x24009b50
90004514:	9002ec40 	.word	0x9002ec40
90004518:	90003dd5 	.word	0x90003dd5
9000451c:	24009b4c 	.word	0x24009b4c

90004520 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90004520:	4b03      	ldr	r3, [pc, #12]	@ (90004530 <HAL_TIM_PeriodElapsedCallback+0x10>)
90004522:	6802      	ldr	r2, [r0, #0]
90004524:	429a      	cmp	r2, r3
90004526:	d000      	beq.n	9000452a <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90004528:	4770      	bx	lr
    HAL_IncTick();
9000452a:	f003 bcf5 	b.w	90007f18 <HAL_IncTick>
9000452e:	bf00      	nop
90004530:	40001000 	.word	0x40001000

90004534 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90004534:	4770      	bx	lr
90004536:	bf00      	nop

90004538 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004538:	4b0b      	ldr	r3, [pc, #44]	@ (90004568 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
9000453a:	2200      	movs	r2, #0
9000453c:	210f      	movs	r1, #15
9000453e:	f06f 0001 	mvn.w	r0, #1
{
90004542:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004544:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90004548:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000454a:	f044 0402 	orr.w	r4, r4, #2
9000454e:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90004552:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90004556:	f003 0302 	and.w	r3, r3, #2
9000455a:	9301      	str	r3, [sp, #4]
9000455c:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
9000455e:	b003      	add	sp, #12
90004560:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004564:	f003 bd14 	b.w	90007f90 <HAL_NVIC_SetPriority>
90004568:	58024400 	.word	0x58024400

9000456c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
9000456c:	4b0a      	ldr	r3, [pc, #40]	@ (90004598 <HAL_CRC_MspInit+0x2c>)
9000456e:	6802      	ldr	r2, [r0, #0]
90004570:	429a      	cmp	r2, r3
90004572:	d000      	beq.n	90004576 <HAL_CRC_MspInit+0xa>
90004574:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90004576:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
9000457a:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
9000457c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004580:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90004584:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004588:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
9000458c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90004590:	9301      	str	r3, [sp, #4]
90004592:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
90004594:	b002      	add	sp, #8
90004596:	4770      	bx	lr
90004598:	58024c00 	.word	0x58024c00

9000459c <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
9000459c:	4b0f      	ldr	r3, [pc, #60]	@ (900045dc <HAL_DMA2D_MspInit+0x40>)
9000459e:	6802      	ldr	r2, [r0, #0]
900045a0:	429a      	cmp	r2, r3
900045a2:	d000      	beq.n	900045a6 <HAL_DMA2D_MspInit+0xa>
900045a4:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900045a6:	4b0e      	ldr	r3, [pc, #56]	@ (900045e0 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900045a8:	205a      	movs	r0, #90	@ 0x5a
900045aa:	2200      	movs	r2, #0
900045ac:	2105      	movs	r1, #5
{
900045ae:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
900045b0:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
900045b4:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
900045b6:	f044 0410 	orr.w	r4, r4, #16
900045ba:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
900045be:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
900045c2:	f003 0310 	and.w	r3, r3, #16
900045c6:	9301      	str	r3, [sp, #4]
900045c8:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900045ca:	f003 fce1 	bl	90007f90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900045ce:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
900045d0:	b002      	add	sp, #8
900045d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900045d6:	f003 bd17 	b.w	90008008 <HAL_NVIC_EnableIRQ>
900045da:	bf00      	nop
900045dc:	52001000 	.word	0x52001000
900045e0:	58024400 	.word	0x58024400

900045e4 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
900045e4:	4b3f      	ldr	r3, [pc, #252]	@ (900046e4 <HAL_JPEG_MspInit+0x100>)
900045e6:	6802      	ldr	r2, [r0, #0]
900045e8:	429a      	cmp	r2, r3
900045ea:	d000      	beq.n	900045ee <HAL_JPEG_MspInit+0xa>
900045ec:	4770      	bx	lr
{
900045ee:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
900045f0:	4b3d      	ldr	r3, [pc, #244]	@ (900046e8 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900045f2:	2211      	movs	r2, #17
900045f4:	4e3d      	ldr	r6, [pc, #244]	@ (900046ec <HAL_JPEG_MspInit+0x108>)
{
900045f6:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900045f8:	4d3d      	ldr	r5, [pc, #244]	@ (900046f0 <HAL_JPEG_MspInit+0x10c>)
900045fa:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900045fc:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900045fe:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90004600:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90004604:	493b      	ldr	r1, [pc, #236]	@ (900046f4 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90004606:	f042 0220 	orr.w	r2, r2, #32
9000460a:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
9000460e:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90004610:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90004614:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004616:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000461a:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000461c:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000461e:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90004620:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90004622:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004624:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004628:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
9000462c:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000462e:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90004630:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90004634:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004638:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
9000463a:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
9000463e:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90004642:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90004646:	2313      	movs	r3, #19
90004648:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
9000464a:	2302      	movs	r3, #2
9000464c:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
9000464e:	f006 fc35 	bl	9000aebc <HAL_MDMA_Init>
90004652:	2800      	cmp	r0, #0
90004654:	d13a      	bne.n	900046cc <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90004656:	2200      	movs	r2, #0
90004658:	4824      	ldr	r0, [pc, #144]	@ (900046ec <HAL_JPEG_MspInit+0x108>)
9000465a:	4611      	mov	r1, r2
9000465c:	f006 fccc 	bl	9000aff8 <HAL_MDMA_ConfigPostRequestMask>
90004660:	2800      	cmp	r0, #0
90004662:	d13c      	bne.n	900046de <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004664:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004666:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004668:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000466a:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000466c:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
9000466e:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004670:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90004674:	4920      	ldr	r1, [pc, #128]	@ (900046f8 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004676:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90004678:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
9000467a:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000467c:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
9000467e:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90004682:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90004686:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004688:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000468a:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000468e:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004690:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004694:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004698:	4815      	ldr	r0, [pc, #84]	@ (900046f0 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
9000469a:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
9000469c:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000469e:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900046a0:	f006 fc0c 	bl	9000aebc <HAL_MDMA_Init>
900046a4:	b9c0      	cbnz	r0, 900046d8 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900046a6:	2200      	movs	r2, #0
900046a8:	4811      	ldr	r0, [pc, #68]	@ (900046f0 <HAL_JPEG_MspInit+0x10c>)
900046aa:	4611      	mov	r1, r2
900046ac:	f006 fca4 	bl	9000aff8 <HAL_MDMA_ConfigPostRequestMask>
900046b0:	b978      	cbnz	r0, 900046d2 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900046b2:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900046b4:	2079      	movs	r0, #121	@ 0x79
900046b6:	2200      	movs	r2, #0
900046b8:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900046ba:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900046bc:	f003 fc68 	bl	90007f90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900046c0:	2079      	movs	r0, #121	@ 0x79

  /* USER CODE END JPEG_MspInit 1 */

  }

}
900046c2:	b002      	add	sp, #8
900046c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900046c8:	f003 bc9e 	b.w	90008008 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900046cc:	f7ff ff32 	bl	90004534 <Error_Handler>
900046d0:	e7c1      	b.n	90004656 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900046d2:	f7ff ff2f 	bl	90004534 <Error_Handler>
900046d6:	e7ec      	b.n	900046b2 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900046d8:	f7ff ff2c 	bl	90004534 <Error_Handler>
900046dc:	e7e3      	b.n	900046a6 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900046de:	f7ff ff29 	bl	90004534 <Error_Handler>
900046e2:	e7bf      	b.n	90004664 <HAL_JPEG_MspInit+0x80>
900046e4:	52003000 	.word	0x52003000
900046e8:	58024400 	.word	0x58024400
900046ec:	24009ca0 	.word	0x24009ca0
900046f0:	24009c34 	.word	0x24009c34
900046f4:	52000200 	.word	0x52000200
900046f8:	520001c0 	.word	0x520001c0

900046fc <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
900046fc:	b570      	push	{r4, r5, r6, lr}
900046fe:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004700:	2100      	movs	r1, #0
{
90004702:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004704:	22c0      	movs	r2, #192	@ 0xc0
90004706:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004708:	9109      	str	r1, [sp, #36]	@ 0x24
9000470a:	e9cd 1105 	strd	r1, r1, [sp, #20]
9000470e:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004712:	f028 f855 	bl	9002c7c0 <memset>
  if(hltdc->Instance==LTDC)
90004716:	4b4a      	ldr	r3, [pc, #296]	@ (90004840 <HAL_LTDC_MspInit+0x144>)
90004718:	6822      	ldr	r2, [r4, #0]
9000471a:	429a      	cmp	r2, r3
9000471c:	d001      	beq.n	90004722 <HAL_LTDC_MspInit+0x26>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
9000471e:	b03a      	add	sp, #232	@ 0xe8
90004720:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90004722:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004724:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004726:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
9000472a:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000472c:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
9000472e:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004730:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90004732:	225d      	movs	r2, #93	@ 0x5d
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90004734:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90004736:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000473a:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
9000473c:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000473e:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90004742:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004746:	f008 ff37 	bl	9000d5b8 <HAL_RCCEx_PeriphCLKConfig>
9000474a:	2800      	cmp	r0, #0
9000474c:	d174      	bne.n	90004838 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
9000474e:	4b3d      	ldr	r3, [pc, #244]	@ (90004844 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004750:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004752:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004754:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
90004756:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000475a:	a905      	add	r1, sp, #20
9000475c:	483a      	ldr	r0, [pc, #232]	@ (90004848 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
9000475e:	f042 0208 	orr.w	r2, r2, #8
90004762:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
90004766:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
9000476a:	f002 0208 	and.w	r2, r2, #8
9000476e:	9200      	str	r2, [sp, #0]
90004770:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90004772:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004776:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
9000477a:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000477e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004782:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
90004786:	9201      	str	r2, [sp, #4]
90004788:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
9000478a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000478e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90004792:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004796:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000479a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9000479e:	9202      	str	r2, [sp, #8]
900047a0:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900047a2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900047a6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
900047aa:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900047ae:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900047b2:	f402 7200 	and.w	r2, r2, #512	@ 0x200
900047b6:	9203      	str	r2, [sp, #12]
900047b8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047ba:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900047be:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900047c2:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900047c6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900047ca:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047cc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047d0:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047d2:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900047d4:	23fc      	movs	r3, #252	@ 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047d6:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900047d8:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900047da:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900047de:	f003 fe39 	bl	90008454 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900047e2:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900047e6:	a905      	add	r1, sp, #20
900047e8:	4818      	ldr	r0, [pc, #96]	@ (9000484c <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900047ea:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900047ec:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047f0:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900047f4:	f003 fe2e 	bl	90008454 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900047f8:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900047fc:	a905      	add	r1, sp, #20
900047fe:	4814      	ldr	r0, [pc, #80]	@ (90004850 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90004800:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004802:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004806:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000480a:	f003 fe23 	bl	90008454 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000480e:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004812:	a905      	add	r1, sp, #20
90004814:	480f      	ldr	r0, [pc, #60]	@ (90004854 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004816:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90004818:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
9000481c:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004820:	f003 fe18 	bl	90008454 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90004824:	462a      	mov	r2, r5
90004826:	2105      	movs	r1, #5
90004828:	2058      	movs	r0, #88	@ 0x58
9000482a:	f003 fbb1 	bl	90007f90 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
9000482e:	2058      	movs	r0, #88	@ 0x58
90004830:	f003 fbea 	bl	90008008 <HAL_NVIC_EnableIRQ>
}
90004834:	b03a      	add	sp, #232	@ 0xe8
90004836:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004838:	f7ff fe7c 	bl	90004534 <Error_Handler>
9000483c:	e787      	b.n	9000474e <HAL_LTDC_MspInit+0x52>
9000483e:	bf00      	nop
90004840:	50001000 	.word	0x50001000
90004844:	58024400 	.word	0x58024400
90004848:	58022800 	.word	0x58022800
9000484c:	58022000 	.word	0x58022000
90004850:	58022400 	.word	0x58022400
90004854:	58021c00 	.word	0x58021c00

90004858 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90004858:	4836      	ldr	r0, [pc, #216]	@ (90004934 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000485a:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
9000485c:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
9000485e:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90004860:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90004862:	e9cd 3302 	strd	r3, r3, [sp, #8]
90004866:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000486a:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
9000486c:	b109      	cbz	r1, 90004872 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
9000486e:	b038      	add	sp, #224	@ 0xe0
90004870:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90004872:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004874:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
90004876:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004878:	a80a      	add	r0, sp, #40	@ 0x28
9000487a:	f027 ffa1 	bl	9002c7c0 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000487e:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90004882:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004884:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90004886:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000488a:	f008 fe95 	bl	9000d5b8 <HAL_RCCEx_PeriphCLKConfig>
9000488e:	2800      	cmp	r0, #0
90004890:	d14c      	bne.n	9000492c <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
90004892:	4b29      	ldr	r3, [pc, #164]	@ (90004938 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004894:	f64f 7083 	movw	r0, #65411	@ 0xff83
90004898:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000489a:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000489c:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900048a0:	2600      	movs	r6, #0
900048a2:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900048a4:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
900048a8:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900048ac:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900048b0:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900048b2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900048b6:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900048ba:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900048bc:	a902      	add	r1, sp, #8
900048be:	481f      	ldr	r0, [pc, #124]	@ (9000493c <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900048c0:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900048c2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900048c6:	f003 fdc5 	bl	90008454 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900048ca:	f248 1233 	movw	r2, #33075	@ 0x8133
900048ce:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900048d0:	a902      	add	r1, sp, #8
900048d2:	481b      	ldr	r0, [pc, #108]	@ (90004940 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900048d4:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900048d6:	e9cd 2302 	strd	r2, r3, [sp, #8]
900048da:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900048de:	f003 fdb9 	bl	90008454 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900048e2:	f24c 7203 	movw	r2, #50947	@ 0xc703
900048e6:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900048e8:	a902      	add	r1, sp, #8
900048ea:	4816      	ldr	r0, [pc, #88]	@ (90004944 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900048ec:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900048ee:	e9cd 2302 	strd	r2, r3, [sp, #8]
900048f2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900048f6:	f003 fdad 	bl	90008454 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900048fa:	f64f 023f 	movw	r2, #63551	@ 0xf83f
900048fe:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90004900:	a902      	add	r1, sp, #8
90004902:	4811      	ldr	r0, [pc, #68]	@ (90004948 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004904:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004906:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000490a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000490e:	f003 fda1 	bl	90008454 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004912:	22e0      	movs	r2, #224	@ 0xe0
90004914:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004916:	a902      	add	r1, sp, #8
90004918:	480c      	ldr	r0, [pc, #48]	@ (9000494c <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000491a:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000491c:	e9cd 6704 	strd	r6, r7, [sp, #16]
90004920:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004924:	f003 fd96 	bl	90008454 <HAL_GPIO_Init>
}
90004928:	b038      	add	sp, #224	@ 0xe0
9000492a:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
9000492c:	f7ff fe02 	bl	90004534 <Error_Handler>
90004930:	e7af      	b.n	90004892 <HAL_SDRAM_MspInit+0x3a>
90004932:	bf00      	nop
90004934:	24009df4 	.word	0x24009df4
90004938:	58024400 	.word	0x58024400
9000493c:	58021000 	.word	0x58021000
90004940:	58021800 	.word	0x58021800
90004944:	58020c00 	.word	0x58020c00
90004948:	58021400 	.word	0x58021400
9000494c:	58021c00 	.word	0x58021c00

90004950 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90004950:	4b13      	ldr	r3, [pc, #76]	@ (900049a0 <HAL_SDRAM_MspDeInit+0x50>)
90004952:	681a      	ldr	r2, [r3, #0]
90004954:	b102      	cbz	r2, 90004958 <HAL_SDRAM_MspDeInit+0x8>
90004956:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90004958:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
9000495a:	4a12      	ldr	r2, [pc, #72]	@ (900049a4 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
9000495c:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000495e:	f64f 7183 	movw	r1, #65411	@ 0xff83
90004962:	4811      	ldr	r0, [pc, #68]	@ (900049a8 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90004964:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
90004966:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
9000496a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000496e:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004972:	f003 feb1 	bl	900086d8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004976:	f248 1133 	movw	r1, #33075	@ 0x8133
9000497a:	480c      	ldr	r0, [pc, #48]	@ (900049ac <HAL_SDRAM_MspDeInit+0x5c>)
9000497c:	f003 feac 	bl	900086d8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90004980:	f24c 7103 	movw	r1, #50947	@ 0xc703
90004984:	480a      	ldr	r0, [pc, #40]	@ (900049b0 <HAL_SDRAM_MspDeInit+0x60>)
90004986:	f003 fea7 	bl	900086d8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000498a:	f64f 013f 	movw	r1, #63551	@ 0xf83f
9000498e:	4809      	ldr	r0, [pc, #36]	@ (900049b4 <HAL_SDRAM_MspDeInit+0x64>)
90004990:	f003 fea2 	bl	900086d8 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004994:	21e0      	movs	r1, #224	@ 0xe0
90004996:	4808      	ldr	r0, [pc, #32]	@ (900049b8 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90004998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
9000499c:	f003 be9c 	b.w	900086d8 <HAL_GPIO_DeInit>
900049a0:	24009df0 	.word	0x24009df0
900049a4:	58024400 	.word	0x58024400
900049a8:	58021000 	.word	0x58021000
900049ac:	58021800 	.word	0x58021800
900049b0:	58020c00 	.word	0x58020c00
900049b4:	58021400 	.word	0x58021400
900049b8:	58021c00 	.word	0x58021c00

900049bc <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900049bc:	280f      	cmp	r0, #15
900049be:	d901      	bls.n	900049c4 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900049c0:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900049c2:	4770      	bx	lr
{
900049c4:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900049c6:	4601      	mov	r1, r0
{
900049c8:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900049ca:	2200      	movs	r2, #0
900049cc:	4604      	mov	r4, r0
900049ce:	2036      	movs	r0, #54	@ 0x36
900049d0:	f003 fade 	bl	90007f90 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900049d4:	2036      	movs	r0, #54	@ 0x36
900049d6:	f003 fb17 	bl	90008008 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900049da:	4b1b      	ldr	r3, [pc, #108]	@ (90004a48 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
900049dc:	4a1b      	ldr	r2, [pc, #108]	@ (90004a4c <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900049de:	4669      	mov	r1, sp
900049e0:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
900049e2:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
900049e4:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
900049e8:	f042 0210 	orr.w	r2, r2, #16
900049ec:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
900049f0:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
900049f4:	f003 0310 	and.w	r3, r3, #16
900049f8:	9301      	str	r3, [sp, #4]
900049fa:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900049fc:	f008 fccc 	bl	9000d398 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90004a00:	9b07      	ldr	r3, [sp, #28]
90004a02:	b9c3      	cbnz	r3, 90004a36 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004a04:	f008 fc38 	bl	9000d278 <HAL_RCC_GetPCLK1Freq>
90004a08:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004a0a:	4911      	ldr	r1, [pc, #68]	@ (90004a50 <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90004a0c:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90004a0e:	4c11      	ldr	r4, [pc, #68]	@ (90004a54 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004a10:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004a14:	4d10      	ldr	r5, [pc, #64]	@ (90004a58 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004a16:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004a1a:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004a1c:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90004a1e:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90004a20:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004a22:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004a24:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004a28:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004a2a:	f009 fd91 	bl	9000e550 <HAL_TIM_Base_Init>
90004a2e:	b130      	cbz	r0, 90004a3e <HAL_InitTick+0x82>
    return HAL_ERROR;
90004a30:	2001      	movs	r0, #1
}
90004a32:	b00b      	add	sp, #44	@ 0x2c
90004a34:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90004a36:	f008 fc1f 	bl	9000d278 <HAL_RCC_GetPCLK1Freq>
90004a3a:	0043      	lsls	r3, r0, #1
90004a3c:	e7e5      	b.n	90004a0a <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
90004a3e:	4620      	mov	r0, r4
90004a40:	f009 fe2c 	bl	9000e69c <HAL_TIM_Base_Start_IT>
90004a44:	e7f5      	b.n	90004a32 <HAL_InitTick+0x76>
90004a46:	bf00      	nop
90004a48:	58024400 	.word	0x58024400
90004a4c:	2400013c 	.word	0x2400013c
90004a50:	431bde83 	.word	0x431bde83
90004a54:	24009df8 	.word	0x24009df8
90004a58:	40001000 	.word	0x40001000

90004a5c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90004a5c:	4770      	bx	lr
90004a5e:	bf00      	nop

90004a60 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90004a60:	e7fe      	b.n	90004a60 <HardFault_Handler>
90004a62:	bf00      	nop

90004a64 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90004a64:	e7fe      	b.n	90004a64 <MemManage_Handler>
90004a66:	bf00      	nop

90004a68 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90004a68:	e7fe      	b.n	90004a68 <BusFault_Handler>
90004a6a:	bf00      	nop

90004a6c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90004a6c:	e7fe      	b.n	90004a6c <UsageFault_Handler>
90004a6e:	bf00      	nop

90004a70 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
90004a70:	4770      	bx	lr
90004a72:	bf00      	nop

90004a74 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90004a74:	4801      	ldr	r0, [pc, #4]	@ (90004a7c <TIM6_DAC_IRQHandler+0x8>)
90004a76:	f009 be6b 	b.w	9000e750 <HAL_TIM_IRQHandler>
90004a7a:	bf00      	nop
90004a7c:	24009df8 	.word	0x24009df8

90004a80 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90004a80:	4801      	ldr	r0, [pc, #4]	@ (90004a88 <LTDC_IRQHandler+0x8>)
90004a82:	f006 b8c3 	b.w	9000ac0c <HAL_LTDC_IRQHandler>
90004a86:	bf00      	nop
90004a88:	24009b8c 	.word	0x24009b8c

90004a8c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90004a8c:	4801      	ldr	r0, [pc, #4]	@ (90004a94 <DMA2D_IRQHandler+0x8>)
90004a8e:	f003 bbe3 	b.w	90008258 <HAL_DMA2D_IRQHandler>
90004a92:	bf00      	nop
90004a94:	24009d64 	.word	0x24009d64

90004a98 <OTG_FS_IRQHandler>:
void OTG_FS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
90004a98:	4801      	ldr	r0, [pc, #4]	@ (90004aa0 <OTG_FS_IRQHandler+0x8>)
90004a9a:	f006 bec1 	b.w	9000b820 <HAL_PCD_IRQHandler>
90004a9e:	bf00      	nop
90004aa0:	2400965c 	.word	0x2400965c

90004aa4 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004aa4:	4801      	ldr	r0, [pc, #4]	@ (90004aac <JPEG_IRQHandler+0x8>)
90004aa6:	f005 bf9f 	b.w	9000a9e8 <HAL_JPEG_IRQHandler>
90004aaa:	bf00      	nop
90004aac:	24009d0c 	.word	0x24009d0c

90004ab0 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004ab0:	4804      	ldr	r0, [pc, #16]	@ (90004ac4 <MDMA_IRQHandler+0x14>)
{
90004ab2:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004ab4:	f006 fb8c 	bl	9000b1d0 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004ab8:	4803      	ldr	r0, [pc, #12]	@ (90004ac8 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
90004aba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004abe:	f006 bb87 	b.w	9000b1d0 <HAL_MDMA_IRQHandler>
90004ac2:	bf00      	nop
90004ac4:	24009c34 	.word	0x24009c34
90004ac8:	24009ca0 	.word	0x24009ca0

90004acc <EXTI15_10_IRQHandler>:

/* USER CODE BEGIN 1 */
uint8_t pinstate = 1;
void EXTI15_10_IRQHandler(void)
{
90004acc:	b510      	push	{r4, lr}
	if (__HAL_GPIO_EXTI_GET_IT(USER_BUTTON_Pin)) {
90004ace:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
90004ad2:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
90004ad6:	049b      	lsls	r3, r3, #18
90004ad8:	d400      	bmi.n	90004adc <EXTI15_10_IRQHandler+0x10>
		osMessageQueuePut(userButtonQueueHandle, &pinstate, 0U, 0U);
		__HAL_GPIO_EXTI_CLEAR_IT(USER_BUTTON_Pin);
	}
}
90004ada:	bd10      	pop	{r4, pc}
		osMessageQueuePut(userButtonQueueHandle, &pinstate, 0U, 0U);
90004adc:	2300      	movs	r3, #0
90004ade:	4805      	ldr	r0, [pc, #20]	@ (90004af4 <EXTI15_10_IRQHandler+0x28>)
90004ae0:	4905      	ldr	r1, [pc, #20]	@ (90004af8 <EXTI15_10_IRQHandler+0x2c>)
90004ae2:	461a      	mov	r2, r3
90004ae4:	6800      	ldr	r0, [r0, #0]
90004ae6:	f00a ff97 	bl	9000fa18 <osMessageQueuePut>
		__HAL_GPIO_EXTI_CLEAR_IT(USER_BUTTON_Pin);
90004aea:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
90004aee:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
}
90004af2:	bd10      	pop	{r4, pc}
90004af4:	24009b48 	.word	0x24009b48
90004af8:	24000098 	.word	0x24000098

90004afc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90004afc:	2001      	movs	r0, #1
90004afe:	4770      	bx	lr

90004b00 <_kill>:

int _kill(int pid, int sig)
{
90004b00:	b508      	push	{r3, lr}
	errno = EINVAL;
90004b02:	f027 ff11 	bl	9002c928 <__errno>
90004b06:	2216      	movs	r2, #22
90004b08:	4603      	mov	r3, r0
	return -1;
}
90004b0a:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
90004b0e:	601a      	str	r2, [r3, #0]
}
90004b10:	bd08      	pop	{r3, pc}
90004b12:	bf00      	nop

90004b14 <_exit>:

void _exit (int status)
{
90004b14:	b508      	push	{r3, lr}
	errno = EINVAL;
90004b16:	f027 ff07 	bl	9002c928 <__errno>
90004b1a:	2316      	movs	r3, #22
90004b1c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
90004b1e:	e7fe      	b.n	90004b1e <_exit+0xa>

90004b20 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90004b20:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004b22:	1e16      	subs	r6, r2, #0
90004b24:	dd07      	ble.n	90004b36 <_read+0x16>
90004b26:	460c      	mov	r4, r1
90004b28:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90004b2a:	f3af 8000 	nop.w
90004b2e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004b32:	42a5      	cmp	r5, r4
90004b34:	d1f9      	bne.n	90004b2a <_read+0xa>
	}

return len;
}
90004b36:	4630      	mov	r0, r6
90004b38:	bd70      	pop	{r4, r5, r6, pc}
90004b3a:	bf00      	nop

90004b3c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90004b3c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004b3e:	1e16      	subs	r6, r2, #0
90004b40:	dd07      	ble.n	90004b52 <_write+0x16>
90004b42:	460c      	mov	r4, r1
90004b44:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004b46:	f814 0b01 	ldrb.w	r0, [r4], #1
90004b4a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004b4e:	42ac      	cmp	r4, r5
90004b50:	d1f9      	bne.n	90004b46 <_write+0xa>
	}
	return len;
}
90004b52:	4630      	mov	r0, r6
90004b54:	bd70      	pop	{r4, r5, r6, pc}
90004b56:	bf00      	nop

90004b58 <_close>:

int _close(int file)
{
	return -1;
}
90004b58:	f04f 30ff 	mov.w	r0, #4294967295
90004b5c:	4770      	bx	lr
90004b5e:	bf00      	nop

90004b60 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90004b60:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004b64:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90004b66:	604b      	str	r3, [r1, #4]
}
90004b68:	4770      	bx	lr
90004b6a:	bf00      	nop

90004b6c <_isatty>:

int _isatty(int file)
{
	return 1;
}
90004b6c:	2001      	movs	r0, #1
90004b6e:	4770      	bx	lr

90004b70 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90004b70:	2000      	movs	r0, #0
90004b72:	4770      	bx	lr

90004b74 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90004b74:	4a0c      	ldr	r2, [pc, #48]	@ (90004ba8 <_sbrk+0x34>)
{
90004b76:	b508      	push	{r3, lr}
90004b78:	4603      	mov	r3, r0
	if (heap_end == 0)
90004b7a:	6810      	ldr	r0, [r2, #0]
90004b7c:	b128      	cbz	r0, 90004b8a <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
90004b7e:	4403      	add	r3, r0
90004b80:	4669      	mov	r1, sp
90004b82:	428b      	cmp	r3, r1
90004b84:	d808      	bhi.n	90004b98 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
90004b86:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
90004b88:	bd08      	pop	{r3, pc}
		heap_end = &end;
90004b8a:	4908      	ldr	r1, [pc, #32]	@ (90004bac <_sbrk+0x38>)
90004b8c:	4608      	mov	r0, r1
90004b8e:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
90004b90:	4669      	mov	r1, sp
90004b92:	4403      	add	r3, r0
90004b94:	428b      	cmp	r3, r1
90004b96:	d9f6      	bls.n	90004b86 <_sbrk+0x12>
		errno = ENOMEM;
90004b98:	f027 fec6 	bl	9002c928 <__errno>
90004b9c:	220c      	movs	r2, #12
90004b9e:	4603      	mov	r3, r0
		return (caddr_t) -1;
90004ba0:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
90004ba4:	601a      	str	r2, [r3, #0]
}
90004ba6:	bd08      	pop	{r3, pc}
90004ba8:	24009e44 	.word	0x24009e44
90004bac:	240252e0 	.word	0x240252e0

90004bb0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DISPLAY = 4;  // segoeui_28_4bpp
    static const touchgfx::FontId MODE = 5;     // segoeui_24_4bpp
    static const uint16_t NUMBER_OF_FONTS = 6;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90004bb0:	4770      	bx	lr
90004bb2:	bf00      	nop

90004bb4 <_ZN23ApplicationFontProviderD0Ev>:
90004bb4:	b510      	push	{r4, lr}
90004bb6:	4604      	mov	r4, r0
90004bb8:	2104      	movs	r1, #4
90004bba:	f026 ffee 	bl	9002bb9a <_ZdlPvj>
90004bbe:	4620      	mov	r0, r4
90004bc0:	bd10      	pop	{r4, pc}
90004bc2:	bf00      	nop

90004bc4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
90004bc4:	b508      	push	{r3, lr}
    switch (typography)
90004bc6:	2905      	cmp	r1, #5
90004bc8:	d81c      	bhi.n	90004c04 <_ZN23ApplicationFontProvider7getFontEt+0x40>
90004bca:	e8df f001 	tbb	[pc, r1]
90004bce:	0b07      	.short	0x0b07
90004bd0:	0317130f 	.word	0x0317130f
    case Typography::DISPLAY:
        // segoeui_28_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    case Typography::MODE:
        // segoeui_24_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
90004bd4:	f000 fe4c 	bl	90005870 <_ZN17TypedTextDatabase8getFontsEv>
90004bd8:	6940      	ldr	r0, [r0, #20]
    default:
        return 0;
    }
}
90004bda:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90004bdc:	f000 fe48 	bl	90005870 <_ZN17TypedTextDatabase8getFontsEv>
90004be0:	6800      	ldr	r0, [r0, #0]
}
90004be2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004be4:	f000 fe44 	bl	90005870 <_ZN17TypedTextDatabase8getFontsEv>
90004be8:	6840      	ldr	r0, [r0, #4]
}
90004bea:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004bec:	f000 fe40 	bl	90005870 <_ZN17TypedTextDatabase8getFontsEv>
90004bf0:	6880      	ldr	r0, [r0, #8]
}
90004bf2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
90004bf4:	f000 fe3c 	bl	90005870 <_ZN17TypedTextDatabase8getFontsEv>
90004bf8:	68c0      	ldr	r0, [r0, #12]
}
90004bfa:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
90004bfc:	f000 fe38 	bl	90005870 <_ZN17TypedTextDatabase8getFontsEv>
90004c00:	6900      	ldr	r0, [r0, #16]
}
90004c02:	bd08      	pop	{r3, pc}
    switch (typography)
90004c04:	2000      	movs	r0, #0
}
90004c06:	bd08      	pop	{r3, pc}

90004c08 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004c08:	4800      	ldr	r0, [pc, #0]	@ (90004c0c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90004c0a:	4770      	bx	lr
90004c0c:	9002eda0 	.word	0x9002eda0

90004c10 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004c10:	2011      	movs	r0, #17
90004c12:	4770      	bx	lr

90004c14 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90004c14:	b169      	cbz	r1, 90004c32 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004c16:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004c18:	b530      	push	{r4, r5, lr}
90004c1a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90004c1c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004c1e:	6895      	ldr	r5, [r2, #8]
90004c20:	f10d 0303 	add.w	r3, sp, #3
90004c24:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
90004c26:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004c28:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004c2c:	47a8      	blx	r5
        return glyph;
    }
90004c2e:	b003      	add	sp, #12
90004c30:	bd30      	pop	{r4, r5, pc}
            return 0;
90004c32:	4608      	mov	r0, r1
    }
90004c34:	4770      	bx	lr
90004c36:	bf00      	nop

90004c38 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004c38:	89c0      	ldrh	r0, [r0, #14]
90004c3a:	4770      	bx	lr

90004c3c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90004c3c:	8a00      	ldrh	r0, [r0, #16]
90004c3e:	4770      	bx	lr

90004c40 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004c40:	88c0      	ldrh	r0, [r0, #6]
90004c42:	4770      	bx	lr

90004c44 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90004c44:	8880      	ldrh	r0, [r0, #4]
90004c46:	4770      	bx	lr

90004c48 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004c48:	7a80      	ldrb	r0, [r0, #10]
    }
90004c4a:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90004c4e:	4770      	bx	lr

90004c50 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004c50:	7a80      	ldrb	r0, [r0, #10]
    }
90004c52:	09c0      	lsrs	r0, r0, #7
90004c54:	4770      	bx	lr
90004c56:	bf00      	nop

90004c58 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004c58:	2000      	movs	r0, #0
90004c5a:	4770      	bx	lr

90004c5c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90004c5c:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 90004c64 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004c60:	4770      	bx	lr
90004c62:	bf00      	nop
90004c64:	00000000 	.word	0x00000000

90004c68 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90004c68:	4770      	bx	lr
90004c6a:	bf00      	nop

90004c6c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004c6c:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004c70:	6808      	ldr	r0, [r1, #0]
90004c72:	6849      	ldr	r1, [r1, #4]
90004c74:	c303      	stmia	r3!, {r0, r1}
    }
90004c76:	4770      	bx	lr

90004c78 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90004c78:	4770      	bx	lr
90004c7a:	bf00      	nop

90004c7c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004c7c:	4770      	bx	lr
90004c7e:	bf00      	nop

90004c80 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004c80:	6041      	str	r1, [r0, #4]
    }
90004c82:	4770      	bx	lr

90004c84 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90004c84:	4770      	bx	lr
90004c86:	bf00      	nop

90004c88 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004c88:	4905      	ldr	r1, [pc, #20]	@ (90004ca0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90004c8a:	2200      	movs	r2, #0
// KeyboardScreen

void FrontendApplicationBase::gotoKeyboardScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoKeyboardScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90004c8c:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004c90:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004c94:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004c98:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoKeyboardScreenScreenNoTransition();
    }
90004c9c:	4770      	bx	lr
90004c9e:	bf00      	nop
90004ca0:	90004d49 	.word	0x90004d49

90004ca4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90004ca4:	2301      	movs	r3, #1
90004ca6:	7203      	strb	r3, [r0, #8]
    }
90004ca8:	4770      	bx	lr
90004caa:	bf00      	nop

90004cac <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90004cac:	4770      	bx	lr
90004cae:	bf00      	nop

90004cb0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90004cb0:	4770      	bx	lr
90004cb2:	bf00      	nop

90004cb4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004cb4:	1d01      	adds	r1, r0, #4
90004cb6:	c90e      	ldmia	r1, {r1, r2, r3}
90004cb8:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004cbc:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004cc0:	07db      	lsls	r3, r3, #31
90004cc2:	d502      	bpl.n	90004cca <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004cc4:	f851 300c 	ldr.w	r3, [r1, ip]
90004cc8:	589a      	ldr	r2, [r3, r2]
90004cca:	4710      	bx	r2

90004ccc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90004ccc:	6843      	ldr	r3, [r0, #4]
90004cce:	b13b      	cbz	r3, 90004ce0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004cd0:	6883      	ldr	r3, [r0, #8]
90004cd2:	b10b      	cbz	r3, 90004cd8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004cd4:	2001      	movs	r0, #1
    }
90004cd6:	4770      	bx	lr
90004cd8:	68c0      	ldr	r0, [r0, #12]
90004cda:	f000 0001 	and.w	r0, r0, #1
90004cde:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004ce0:	4618      	mov	r0, r3
90004ce2:	4770      	bx	lr

90004ce4 <_ZN8touchgfx12NoTransitionD0Ev>:
90004ce4:	b510      	push	{r4, lr}
90004ce6:	4604      	mov	r4, r0
90004ce8:	210c      	movs	r1, #12
90004cea:	f026 ff56 	bl	9002bb9a <_ZdlPvj>
90004cee:	4620      	mov	r0, r4
90004cf0:	bd10      	pop	{r4, pc}
90004cf2:	bf00      	nop

90004cf4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004cf4:	b510      	push	{r4, lr}
90004cf6:	4604      	mov	r4, r0
90004cf8:	2110      	movs	r1, #16
90004cfa:	f026 ff4e 	bl	9002bb9a <_ZdlPvj>
90004cfe:	4620      	mov	r0, r4
90004d00:	bd10      	pop	{r4, pc}
90004d02:	bf00      	nop

90004d04 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004d04:	b510      	push	{r4, lr}
90004d06:	4604      	mov	r4, r0
90004d08:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004d0c:	f026 ff45 	bl	9002bb9a <_ZdlPvj>
90004d10:	4620      	mov	r0, r4
90004d12:	bd10      	pop	{r4, pc}

90004d14 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004d14:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90004d16:	f014 fcf9 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
90004d1a:	6803      	ldr	r3, [r0, #0]
    }
90004d1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004d20:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004d22:	4718      	bx	r3

90004d24 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
90004d24:	b510      	push	{r4, lr}
90004d26:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004d28:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90004d2c:	b158      	cbz	r0, 90004d46 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
90004d2e:	6803      	ldr	r3, [r0, #0]
90004d30:	68db      	ldr	r3, [r3, #12]
90004d32:	4798      	blx	r3
90004d34:	b138      	cbz	r0, 90004d46 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
90004d36:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90004d3a:	6803      	ldr	r3, [r0, #0]
90004d3c:	689b      	ldr	r3, [r3, #8]
90004d3e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90004d40:	2300      	movs	r3, #0
90004d42:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90004d46:	bd10      	pop	{r4, pc}

90004d48 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoKeyboardScreenScreenNoTransitionImpl()
{
90004d48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<KeyboardScreenView, KeyboardScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004d4c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004d50:	4607      	mov	r7, r0
90004d52:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004d54:	68b0      	ldr	r0, [r6, #8]
90004d56:	6803      	ldr	r3, [r0, #0]
90004d58:	6a1b      	ldr	r3, [r3, #32]
90004d5a:	4798      	blx	r3
90004d5c:	f5b0 7f0e 	cmp.w	r0, #568	@ 0x238
90004d60:	f0c0 809c 	bcc.w	90004e9c <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x154>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004d64:	6870      	ldr	r0, [r6, #4]
90004d66:	6803      	ldr	r3, [r0, #0]
90004d68:	6a1b      	ldr	r3, [r3, #32]
90004d6a:	4798      	blx	r3
90004d6c:	280f      	cmp	r0, #15
90004d6e:	f240 80a1 	bls.w	90004eb4 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x16c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004d72:	68f0      	ldr	r0, [r6, #12]
90004d74:	6803      	ldr	r3, [r0, #0]
90004d76:	6a1b      	ldr	r3, [r3, #32]
90004d78:	4798      	blx	r3
90004d7a:	280b      	cmp	r0, #11
90004d7c:	f240 8094 	bls.w	90004ea8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x160>
    if (*currentTrans)
90004d80:	f8df 9160 	ldr.w	r9, [pc, #352]	@ 90004ee4 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90004d84:	f014 fcc2 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90004d88:	3004      	adds	r0, #4
90004d8a:	f014 fce4 	bl	90019756 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004d8e:	f8d9 0000 	ldr.w	r0, [r9]
90004d92:	b130      	cbz	r0, 90004da2 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004d94:	6803      	ldr	r3, [r0, #0]
90004d96:	494a      	ldr	r1, [pc, #296]	@ (90004ec0 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x178>)
90004d98:	68da      	ldr	r2, [r3, #12]
90004d9a:	428a      	cmp	r2, r1
90004d9c:	d177      	bne.n	90004e8e <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x146>
        (*currentTrans)->~Transition();
90004d9e:	681b      	ldr	r3, [r3, #0]
90004da0:	4798      	blx	r3
    if (*currentScreen)
90004da2:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90004ee8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x1a0>
90004da6:	f8d8 0000 	ldr.w	r0, [r8]
90004daa:	2800      	cmp	r0, #0
90004dac:	d061      	beq.n	90004e72 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x12a>
        (*currentScreen)->tearDownScreen();
90004dae:	6803      	ldr	r3, [r0, #0]
90004db0:	695b      	ldr	r3, [r3, #20]
90004db2:	4798      	blx	r3
    if (*currentPresenter)
90004db4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004db8:	2800      	cmp	r0, #0
90004dba:	d055      	beq.n	90004e68 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x120>
        (*currentPresenter)->deactivate();
90004dbc:	6803      	ldr	r3, [r0, #0]
90004dbe:	685b      	ldr	r3, [r3, #4]
90004dc0:	4798      	blx	r3
    if (*currentScreen)
90004dc2:	f8d8 0000 	ldr.w	r0, [r8]
90004dc6:	b110      	cbz	r0, 90004dce <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004dc8:	6803      	ldr	r3, [r0, #0]
90004dca:	681b      	ldr	r3, [r3, #0]
90004dcc:	4798      	blx	r3
    if (*currentPresenter)
90004dce:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004dd2:	b110      	cbz	r0, 90004dda <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004dd4:	6803      	ldr	r3, [r0, #0]
90004dd6:	689b      	ldr	r3, [r3, #8]
90004dd8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004dda:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90004ddc:	2100      	movs	r1, #0
90004dde:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004de0:	468b      	mov	fp, r1
90004de2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004de4:	4798      	blx	r3
90004de6:	4b37      	ldr	r3, [pc, #220]	@ (90004ec4 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x17c>)
90004de8:	4604      	mov	r4, r0
90004dea:	f8c0 b004 	str.w	fp, [r0, #4]
90004dee:	f880 b008 	strb.w	fp, [r0, #8]
90004df2:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004df4:	68b0      	ldr	r0, [r6, #8]
90004df6:	6023      	str	r3, [r4, #0]
90004df8:	6803      	ldr	r3, [r0, #0]
90004dfa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004dfc:	4798      	blx	r3
90004dfe:	4605      	mov	r5, r0
90004e00:	f001 f952 	bl	900060a8 <_ZN18KeyboardScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004e04:	6870      	ldr	r0, [r6, #4]
90004e06:	4659      	mov	r1, fp
90004e08:	6803      	ldr	r3, [r0, #0]
90004e0a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004e0c:	4798      	blx	r3
90004e0e:	4606      	mov	r6, r0
90004e10:	4629      	mov	r1, r5
90004e12:	f001 f88d 	bl	90005f30 <_ZN23KeyboardScreenPresenterC1ER18KeyboardScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90004e16:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004e18:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004e1c:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004e1e:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004e22:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004e26:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004e2a:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90004e2c:	f8c6 a008 	str.w	sl, [r6, #8]
90004e30:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004e32:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004e34:	4798      	blx	r3
    newPresenter->activate();
90004e36:	6833      	ldr	r3, [r6, #0]
90004e38:	4630      	mov	r0, r6
90004e3a:	681b      	ldr	r3, [r3, #0]
90004e3c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004e3e:	4621      	mov	r1, r4
90004e40:	4628      	mov	r0, r5
90004e42:	f016 fcd5 	bl	9001b7f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004e46:	6823      	ldr	r3, [r4, #0]
90004e48:	491f      	ldr	r1, [pc, #124]	@ (90004ec8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x180>)
90004e4a:	691a      	ldr	r2, [r3, #16]
90004e4c:	428a      	cmp	r2, r1
90004e4e:	d11a      	bne.n	90004e86 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x13e>
    newTransition->invalidate();
90004e50:	695b      	ldr	r3, [r3, #20]
90004e52:	4a1e      	ldr	r2, [pc, #120]	@ (90004ecc <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x184>)
90004e54:	4293      	cmp	r3, r2
90004e56:	d111      	bne.n	90004e7c <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x134>
        Application::getInstance()->invalidate();
90004e58:	f014 fc58 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
90004e5c:	6803      	ldr	r3, [r0, #0]
90004e5e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004e60:	b001      	add	sp, #4
90004e62:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004e66:	4718      	bx	r3
    if (*currentScreen)
90004e68:	f8d8 0000 	ldr.w	r0, [r8]
90004e6c:	2800      	cmp	r0, #0
90004e6e:	d1ab      	bne.n	90004dc8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x80>
90004e70:	e7b3      	b.n	90004dda <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004e72:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004e76:	2800      	cmp	r0, #0
90004e78:	d1a0      	bne.n	90004dbc <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x74>
90004e7a:	e7ae      	b.n	90004dda <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004e7c:	4620      	mov	r0, r4
90004e7e:	b001      	add	sp, #4
90004e80:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004e84:	4718      	bx	r3
    newTransition->init();
90004e86:	4620      	mov	r0, r4
90004e88:	4790      	blx	r2
    newTransition->invalidate();
90004e8a:	6823      	ldr	r3, [r4, #0]
90004e8c:	e7e0      	b.n	90004e50 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x108>
        (*currentTrans)->tearDown();
90004e8e:	4790      	blx	r2
    if (*currentTrans)
90004e90:	f8d9 0000 	ldr.w	r0, [r9]
90004e94:	2800      	cmp	r0, #0
90004e96:	d084      	beq.n	90004da2 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004e98:	6803      	ldr	r3, [r0, #0]
90004e9a:	e780      	b.n	90004d9e <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004e9c:	4b0c      	ldr	r3, [pc, #48]	@ (90004ed0 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x188>)
90004e9e:	21a3      	movs	r1, #163	@ 0xa3
90004ea0:	4a0c      	ldr	r2, [pc, #48]	@ (90004ed4 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x18c>)
90004ea2:	480d      	ldr	r0, [pc, #52]	@ (90004ed8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x190>)
90004ea4:	f027 f9f0 	bl	9002c288 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004ea8:	4b0c      	ldr	r3, [pc, #48]	@ (90004edc <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x194>)
90004eaa:	21a5      	movs	r1, #165	@ 0xa5
90004eac:	4a09      	ldr	r2, [pc, #36]	@ (90004ed4 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x18c>)
90004eae:	480a      	ldr	r0, [pc, #40]	@ (90004ed8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x190>)
90004eb0:	f027 f9ea 	bl	9002c288 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004eb4:	4b0a      	ldr	r3, [pc, #40]	@ (90004ee0 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x198>)
90004eb6:	21a4      	movs	r1, #164	@ 0xa4
90004eb8:	4a06      	ldr	r2, [pc, #24]	@ (90004ed4 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x18c>)
90004eba:	4807      	ldr	r0, [pc, #28]	@ (90004ed8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x190>)
90004ebc:	f027 f9e4 	bl	9002c288 <__assert_func>
90004ec0:	90004c79 	.word	0x90004c79
90004ec4:	9002f358 	.word	0x9002f358
90004ec8:	90004c7d 	.word	0x90004c7d
90004ecc:	90004d15 	.word	0x90004d15
90004ed0:	9002ef04 	.word	0x9002ef04
90004ed4:	9002ef94 	.word	0x9002ef94
90004ed8:	9002f074 	.word	0x9002f074
90004edc:	9002f160 	.word	0x9002f160
90004ee0:	9002f0bc 	.word	0x9002f0bc
90004ee4:	240245e8 	.word	0x240245e8
90004ee8:	240245e4 	.word	0x240245e4

90004eec <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoTouchpadScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTouchpadScreenScreenNoTransitionImpl()
{
90004eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<TouchpadScreenView, TouchpadScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004ef0:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004ef4:	4607      	mov	r7, r0
90004ef6:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004ef8:	68b0      	ldr	r0, [r6, #8]
90004efa:	6803      	ldr	r3, [r0, #0]
90004efc:	6a1b      	ldr	r3, [r3, #32]
90004efe:	4798      	blx	r3
90004f00:	f641 5343 	movw	r3, #7491	@ 0x1d43
90004f04:	4298      	cmp	r0, r3
90004f06:	f240 809c 	bls.w	90005042 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004f0a:	6870      	ldr	r0, [r6, #4]
90004f0c:	6803      	ldr	r3, [r0, #0]
90004f0e:	6a1b      	ldr	r3, [r3, #32]
90004f10:	4798      	blx	r3
90004f12:	280f      	cmp	r0, #15
90004f14:	f240 80a1 	bls.w	9000505a <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004f18:	68f0      	ldr	r0, [r6, #12]
90004f1a:	6803      	ldr	r3, [r0, #0]
90004f1c:	6a1b      	ldr	r3, [r3, #32]
90004f1e:	4798      	blx	r3
90004f20:	280b      	cmp	r0, #11
90004f22:	f240 8094 	bls.w	9000504e <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004f26:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 9000508c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004f2a:	f014 fbef 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
90004f2e:	3004      	adds	r0, #4
90004f30:	f014 fc11 	bl	90019756 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004f34:	f8d9 0000 	ldr.w	r0, [r9]
90004f38:	b130      	cbz	r0, 90004f48 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x5c>
        (*currentTrans)->tearDown();
90004f3a:	6803      	ldr	r3, [r0, #0]
90004f3c:	494a      	ldr	r1, [pc, #296]	@ (90005068 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x17c>)
90004f3e:	68da      	ldr	r2, [r3, #12]
90004f40:	428a      	cmp	r2, r1
90004f42:	d177      	bne.n	90005034 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90004f44:	681b      	ldr	r3, [r3, #0]
90004f46:	4798      	blx	r3
    if (*currentScreen)
90004f48:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90005090 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x1a4>
90004f4c:	f8d8 0000 	ldr.w	r0, [r8]
90004f50:	2800      	cmp	r0, #0
90004f52:	d061      	beq.n	90005018 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90004f54:	6803      	ldr	r3, [r0, #0]
90004f56:	695b      	ldr	r3, [r3, #20]
90004f58:	4798      	blx	r3
    if (*currentPresenter)
90004f5a:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004f5e:	2800      	cmp	r0, #0
90004f60:	d055      	beq.n	9000500e <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90004f62:	6803      	ldr	r3, [r0, #0]
90004f64:	685b      	ldr	r3, [r3, #4]
90004f66:	4798      	blx	r3
    if (*currentScreen)
90004f68:	f8d8 0000 	ldr.w	r0, [r8]
90004f6c:	b110      	cbz	r0, 90004f74 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x88>
        (*currentScreen)->~Screen();
90004f6e:	6803      	ldr	r3, [r0, #0]
90004f70:	681b      	ldr	r3, [r3, #0]
90004f72:	4798      	blx	r3
    if (*currentPresenter)
90004f74:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004f78:	b110      	cbz	r0, 90004f80 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x94>
        (*currentPresenter)->~Presenter();
90004f7a:	6803      	ldr	r3, [r0, #0]
90004f7c:	689b      	ldr	r3, [r3, #8]
90004f7e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004f80:	68f0      	ldr	r0, [r6, #12]
90004f82:	2100      	movs	r1, #0
90004f84:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004f86:	468b      	mov	fp, r1
90004f88:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004f8a:	4798      	blx	r3
90004f8c:	4b37      	ldr	r3, [pc, #220]	@ (9000506c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x180>)
90004f8e:	4604      	mov	r4, r0
90004f90:	f8c0 b004 	str.w	fp, [r0, #4]
90004f94:	f880 b008 	strb.w	fp, [r0, #8]
90004f98:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004f9a:	68b0      	ldr	r0, [r6, #8]
90004f9c:	6023      	str	r3, [r4, #0]
90004f9e:	6803      	ldr	r3, [r0, #0]
90004fa0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004fa2:	4798      	blx	r3
90004fa4:	4605      	mov	r5, r0
90004fa6:	f001 fdb9 	bl	90006b1c <_ZN18TouchpadScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004faa:	6870      	ldr	r0, [r6, #4]
90004fac:	4659      	mov	r1, fp
90004fae:	6803      	ldr	r3, [r0, #0]
90004fb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004fb2:	4798      	blx	r3
90004fb4:	4606      	mov	r6, r0
90004fb6:	4629      	mov	r1, r5
90004fb8:	f001 fd98 	bl	90006aec <_ZN23TouchpadScreenPresenterC1ER18TouchpadScreenView>
    model->bind(newPresenter);
90004fbc:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004fbe:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004fc2:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004fc4:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004fc8:	f8c8 5000 	str.w	r5, [r8]
90004fcc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004fd0:	682b      	ldr	r3, [r5, #0]
90004fd2:	f8c6 a008 	str.w	sl, [r6, #8]
90004fd6:	68db      	ldr	r3, [r3, #12]
90004fd8:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004fda:	4798      	blx	r3
    newPresenter->activate();
90004fdc:	6833      	ldr	r3, [r6, #0]
90004fde:	4630      	mov	r0, r6
90004fe0:	681b      	ldr	r3, [r3, #0]
90004fe2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004fe4:	4621      	mov	r1, r4
90004fe6:	4628      	mov	r0, r5
90004fe8:	f016 fc02 	bl	9001b7f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004fec:	6823      	ldr	r3, [r4, #0]
90004fee:	4920      	ldr	r1, [pc, #128]	@ (90005070 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x184>)
90004ff0:	691a      	ldr	r2, [r3, #16]
90004ff2:	428a      	cmp	r2, r1
90004ff4:	d11a      	bne.n	9000502c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90004ff6:	695b      	ldr	r3, [r3, #20]
90004ff8:	4a1e      	ldr	r2, [pc, #120]	@ (90005074 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x188>)
90004ffa:	4293      	cmp	r3, r2
90004ffc:	d111      	bne.n	90005022 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004ffe:	f014 fb85 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
90005002:	6803      	ldr	r3, [r0, #0]
90005004:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90005006:	b001      	add	sp, #4
90005008:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000500c:	4718      	bx	r3
    if (*currentScreen)
9000500e:	f8d8 0000 	ldr.w	r0, [r8]
90005012:	2800      	cmp	r0, #0
90005014:	d1ab      	bne.n	90004f6e <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x82>
90005016:	e7b3      	b.n	90004f80 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x94>
    if (*currentPresenter)
90005018:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
9000501c:	2800      	cmp	r0, #0
9000501e:	d1a0      	bne.n	90004f62 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x76>
90005020:	e7ae      	b.n	90004f80 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x94>
    newTransition->invalidate();
90005022:	4620      	mov	r0, r4
90005024:	b001      	add	sp, #4
90005026:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000502a:	4718      	bx	r3
    newTransition->init();
9000502c:	4620      	mov	r0, r4
9000502e:	4790      	blx	r2
    newTransition->invalidate();
90005030:	6823      	ldr	r3, [r4, #0]
90005032:	e7e0      	b.n	90004ff6 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90005034:	4790      	blx	r2
    if (*currentTrans)
90005036:	f8d9 0000 	ldr.w	r0, [r9]
9000503a:	2800      	cmp	r0, #0
9000503c:	d084      	beq.n	90004f48 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x5c>
        (*currentTrans)->~Transition();
9000503e:	6803      	ldr	r3, [r0, #0]
90005040:	e780      	b.n	90004f44 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x58>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005042:	4b0d      	ldr	r3, [pc, #52]	@ (90005078 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x18c>)
90005044:	21a3      	movs	r1, #163	@ 0xa3
90005046:	4a0d      	ldr	r2, [pc, #52]	@ (9000507c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x190>)
90005048:	480d      	ldr	r0, [pc, #52]	@ (90005080 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x194>)
9000504a:	f027 f91d 	bl	9002c288 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000504e:	4b0d      	ldr	r3, [pc, #52]	@ (90005084 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x198>)
90005050:	21a5      	movs	r1, #165	@ 0xa5
90005052:	4a0a      	ldr	r2, [pc, #40]	@ (9000507c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x190>)
90005054:	480a      	ldr	r0, [pc, #40]	@ (90005080 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x194>)
90005056:	f027 f917 	bl	9002c288 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000505a:	4b0b      	ldr	r3, [pc, #44]	@ (90005088 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x19c>)
9000505c:	21a4      	movs	r1, #164	@ 0xa4
9000505e:	4a07      	ldr	r2, [pc, #28]	@ (9000507c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x190>)
90005060:	4807      	ldr	r0, [pc, #28]	@ (90005080 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x194>)
90005062:	f027 f911 	bl	9002c288 <__assert_func>
90005066:	bf00      	nop
90005068:	90004c79 	.word	0x90004c79
9000506c:	9002f358 	.word	0x9002f358
90005070:	90004c7d 	.word	0x90004c7d
90005074:	90004d15 	.word	0x90004d15
90005078:	9002ef04 	.word	0x9002ef04
9000507c:	9002f204 	.word	0x9002f204
90005080:	9002f074 	.word	0x9002f074
90005084:	9002f160 	.word	0x9002f160
90005088:	9002f0bc 	.word	0x9002f0bc
9000508c:	240245e8 	.word	0x240245e8
90005090:	240245e4 	.word	0x240245e4

90005094 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90005094:	b570      	push	{r4, r5, r6, lr}
90005096:	4604      	mov	r4, r0
90005098:	4615      	mov	r5, r2
9000509a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
9000509c:	f014 fbfc 	bl	90019898 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
900050a0:	4a22      	ldr	r2, [pc, #136]	@ (9000512c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
900050a2:	2300      	movs	r3, #0
      frontendHeap(heap),
900050a4:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
900050a8:	6014      	str	r4, [r2, #0]
        return instance;
900050aa:	4d21      	ldr	r5, [pc, #132]	@ (90005130 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
900050ac:	4a21      	ldr	r2, [pc, #132]	@ (90005134 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
900050ae:	6828      	ldr	r0, [r5, #0]
900050b0:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
900050b2:	4a21      	ldr	r2, [pc, #132]	@ (90005138 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
900050b4:	4921      	ldr	r1, [pc, #132]	@ (9000513c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
900050b6:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
900050ba:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
900050be:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
900050c2:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
900050c6:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900050ca:	6802      	ldr	r2, [r0, #0]
900050cc:	6892      	ldr	r2, [r2, #8]
900050ce:	428a      	cmp	r2, r1
900050d0:	d129      	bne.n	90005126 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
900050d2:	f44f 7380 	mov.w	r3, #256	@ 0x100
900050d6:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
900050da:	2000      	movs	r0, #0
900050dc:	f000 fb0e 	bl	900056fc <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900050e0:	682b      	ldr	r3, [r5, #0]
900050e2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900050e6:	b1e2      	cbz	r2, 90005122 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
900050e8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900050ea:	b1d0      	cbz	r0, 90005122 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
900050ec:	f01e fae7 	bl	900236be <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
900050f0:	682b      	ldr	r3, [r5, #0]
900050f2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900050f6:	b192      	cbz	r2, 9000511e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
900050f8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900050fa:	b180      	cbz	r0, 9000511e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900050fc:	f01e fb5a 	bl	900237b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90005100:	682b      	ldr	r3, [r5, #0]
90005102:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90005106:	b12a      	cbz	r2, 90005114 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
90005108:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000510a:	b118      	cbz	r0, 90005114 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
9000510c:	f01e fb5e 	bl	900237cc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
90005110:	4620      	mov	r0, r4
90005112:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90005114:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
90005116:	f01e fb59 	bl	900237cc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
9000511a:	4620      	mov	r0, r4
9000511c:	bd70      	pop	{r4, r5, r6, pc}
9000511e:	6898      	ldr	r0, [r3, #8]
90005120:	e7ec      	b.n	900050fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90005122:	6898      	ldr	r0, [r3, #8]
90005124:	e7e2      	b.n	900050ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90005126:	4619      	mov	r1, r3
90005128:	4790      	blx	r2
9000512a:	e7d6      	b.n	900050da <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
9000512c:	240245f4 	.word	0x240245f4
90005130:	240245a0 	.word	0x240245a0
90005134:	9002f304 	.word	0x9002f304
90005138:	9002f2ec 	.word	0x9002f2ec
9000513c:	90000d6d 	.word	0x90000d6d

90005140 <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005140:	4905      	ldr	r1, [pc, #20]	@ (90005158 <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv+0x18>)
90005142:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90005144:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005148:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
9000514c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005150:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005154:	4770      	bx	lr
90005156:	bf00      	nop
90005158:	90004d49 	.word	0x90004d49

9000515c <_ZN23FrontendApplicationBase36gotoTouchpadScreenScreenNoTransitionEv>:
9000515c:	4905      	ldr	r1, [pc, #20]	@ (90005174 <_ZN23FrontendApplicationBase36gotoTouchpadScreenScreenNoTransitionEv+0x18>)
9000515e:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90005160:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005164:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90005168:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
9000516c:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005170:	4770      	bx	lr
90005172:	bf00      	nop
90005174:	90004eed 	.word	0x90004eed

90005178 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90005178:	6a40      	ldr	r0, [r0, #36]	@ 0x24
9000517a:	4770      	bx	lr

9000517c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
9000517c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000517e:	4770      	bx	lr

90005180 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90005180:	4770      	bx	lr
90005182:	bf00      	nop

90005184 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90005184:	888b      	ldrh	r3, [r1, #4]
90005186:	69c0      	ldr	r0, [r0, #28]
90005188:	0adb      	lsrs	r3, r3, #11
9000518a:	680a      	ldr	r2, [r1, #0]
9000518c:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90005190:	4410      	add	r0, r2
90005192:	4770      	bx	lr

90005194 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90005194:	b1fa      	cbz	r2, 900051d6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90005196:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90005198:	7b14      	ldrb	r4, [r2, #12]
9000519a:	b1d4      	cbz	r4, 900051d2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
9000519c:	f892 c00d 	ldrb.w	ip, [r2, #13]
900051a0:	f892 e00b 	ldrb.w	lr, [r2, #11]
900051a4:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
900051a8:	6a03      	ldr	r3, [r0, #32]
900051aa:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
900051ae:	ea4e 0202 	orr.w	r2, lr, r2
900051b2:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900051b6:	eb03 0084 	add.w	r0, r3, r4, lsl #2
900051ba:	e004      	b.n	900051c6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
900051bc:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
900051c0:	d807      	bhi.n	900051d2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900051c2:	4283      	cmp	r3, r0
900051c4:	d005      	beq.n	900051d2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
900051c6:	881a      	ldrh	r2, [r3, #0]
900051c8:	428a      	cmp	r2, r1
900051ca:	d1f7      	bne.n	900051bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
900051cc:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
900051d0:	bd10      	pop	{r4, pc}
        return 0;
900051d2:	2000      	movs	r0, #0
}
900051d4:	bd10      	pop	{r4, pc}
        return 0;
900051d6:	4610      	mov	r0, r2
}
900051d8:	4770      	bx	lr
900051da:	bf00      	nop

900051dc <_ZN8touchgfx13GeneratedFontD0Ev>:
900051dc:	b510      	push	{r4, lr}
900051de:	4604      	mov	r4, r0
900051e0:	212c      	movs	r1, #44	@ 0x2c
900051e2:	f026 fcda 	bl	9002bb9a <_ZdlPvj>
900051e6:	4620      	mov	r0, r4
900051e8:	bd10      	pop	{r4, pc}
900051ea:	bf00      	nop

900051ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051ec:	b530      	push	{r4, r5, lr}
900051ee:	b08b      	sub	sp, #44	@ 0x2c
900051f0:	4604      	mov	r4, r0
900051f2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
900051f6:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051f8:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
900051fc:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051fe:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
90005202:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005204:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
90005208:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000520a:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
9000520e:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005210:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
90005214:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005216:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
9000521a:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000521c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90005220:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005222:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
90005226:	9508      	str	r5, [sp, #32]
90005228:	f015 feba 	bl	9001afa0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
9000522c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
9000522e:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90005230:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90005232:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90005234:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90005236:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90005238:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
9000523a:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
9000523c:	62a3      	str	r3, [r4, #40]	@ 0x28
9000523e:	4b02      	ldr	r3, [pc, #8]	@ (90005248 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90005240:	6023      	str	r3, [r4, #0]
}
90005242:	b00b      	add	sp, #44	@ 0x2c
90005244:	bd30      	pop	{r4, r5, pc}
90005246:	bf00      	nop
90005248:	9002f37c 	.word	0x9002f37c

9000524c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
9000524c:	4770      	bx	lr
9000524e:	bf00      	nop

90005250 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90005250:	4770      	bx	lr
90005252:	bf00      	nop

90005254 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90005254:	4770      	bx	lr
90005256:	bf00      	nop

90005258 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90005258:	4770      	bx	lr
9000525a:	bf00      	nop

9000525c <_ZN22KeyboardScreenViewBaseD1Ev>:
}

KeyboardScreenViewBase::~KeyboardScreenViewBase()
{

}
9000525c:	4770      	bx	lr
9000525e:	bf00      	nop

90005260 <_ZN22KeyboardScreenViewBase11setupScreenEv>:

void KeyboardScreenViewBase::setupScreen()
{

}
90005260:	4770      	bx	lr
90005262:	bf00      	nop

90005264 <_ZN22KeyboardScreenViewBaseD0Ev>:
KeyboardScreenViewBase::~KeyboardScreenViewBase()
90005264:	b510      	push	{r4, lr}
90005266:	4604      	mov	r4, r0
}
90005268:	216c      	movs	r1, #108	@ 0x6c
9000526a:	f026 fc96 	bl	9002bb9a <_ZdlPvj>
9000526e:	4620      	mov	r0, r4
90005270:	bd10      	pop	{r4, pc}
90005272:	bf00      	nop

90005274 <_ZN22KeyboardScreenViewBase18goToTouchpadScreenEv>:

void KeyboardScreenViewBase::goToTouchpadScreen()
{
90005274:	b508      	push	{r3, lr}
     */
    virtual void goToTouchpadScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005276:	f014 fa49 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
    //Interaction1
    //When goToTouchpadScreen is called change screen to TouchpadScreen
    //Go to TouchpadScreen with no screen transition
    application().gotoTouchpadScreenScreenNoTransition();
}
9000527a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    application().gotoTouchpadScreenScreenNoTransition();
9000527e:	f7ff bf6d 	b.w	9000515c <_ZN23FrontendApplicationBase36gotoTouchpadScreenScreenNoTransitionEv>
90005282:	bf00      	nop

90005284 <_ZN22KeyboardScreenViewBaseC1Ev>:
KeyboardScreenViewBase::KeyboardScreenViewBase()
90005284:	b510      	push	{r4, lr}
90005286:	4604      	mov	r4, r0
        : presenter(0)
90005288:	f016 f906 	bl	9001b498 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
9000528c:	f44f 7280 	mov.w	r2, #256	@ 0x100
90005290:	480e      	ldr	r0, [pc, #56]	@ (900052cc <_ZN22KeyboardScreenViewBaseC1Ev+0x48>)
90005292:	2300      	movs	r3, #0
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90005294:	490e      	ldr	r1, [pc, #56]	@ (900052d0 <_ZN22KeyboardScreenViewBaseC1Ev+0x4c>)
90005296:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
9000529a:	22ff      	movs	r2, #255	@ 0xff
9000529c:	6020      	str	r0, [r4, #0]
9000529e:	f884 2066 	strb.w	r2, [r4, #102]	@ 0x66
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
900052a2:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
        rect.x = x;
900052a6:	480b      	ldr	r0, [pc, #44]	@ (900052d4 <_ZN22KeyboardScreenViewBaseC1Ev+0x50>)
        : Widget(), alpha(255), color(0)
900052a8:	6421      	str	r1, [r4, #64]	@ 0x40
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900052aa:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900052ae:	63e3      	str	r3, [r4, #60]	@ 0x3c
        color = newColor;
900052b0:	66a2      	str	r2, [r4, #104]	@ 0x68
900052b2:	e9c4 3011 	strd	r3, r0, [r4, #68]	@ 0x44
          nextSibling(0),
900052b6:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
900052ba:	1d20      	adds	r0, r4, #4
          cachedAbsX(0),
900052bc:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
        rect.x = x;
900052c0:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
900052c4:	f00d ffaa 	bl	9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900052c8:	4620      	mov	r0, r4
900052ca:	bd10      	pop	{r4, pc}
900052cc:	9002f3e4 	.word	0x9002f3e4
900052d0:	9003031c 	.word	0x9003031c
900052d4:	011001e0 	.word	0x011001e0

900052d8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_segoeui_20_4bpp();

touchgfx::GeneratedFont& getFont_segoeui_20_4bpp()
{
    static touchgfx::GeneratedFont segoeui_20_4bpp(glyphs_segoeui_20_4bpp, 110, 24, 20, 0, 0, 4, 1, 2, 1, unicodes_segoeui_20_4bpp, kerning_segoeui_20_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900052d8:	4770      	bx	lr
900052da:	bf00      	nop

900052dc <_Z23getFont_segoeui_20_4bppv>:
{
900052dc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont segoeui_20_4bpp(glyphs_segoeui_20_4bpp, 110, 24, 20, 0, 0, 4, 1, 2, 1, unicodes_segoeui_20_4bpp, kerning_segoeui_20_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900052de:	4d1a      	ldr	r5, [pc, #104]	@ (90005348 <_Z23getFont_segoeui_20_4bppv+0x6c>)
{
900052e0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont segoeui_20_4bpp(glyphs_segoeui_20_4bpp, 110, 24, 20, 0, 0, 4, 1, 2, 1, unicodes_segoeui_20_4bpp, kerning_segoeui_20_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900052e2:	682c      	ldr	r4, [r5, #0]
900052e4:	f3bf 8f5b 	dmb	ish
900052e8:	f014 0401 	ands.w	r4, r4, #1
900052ec:	d002      	beq.n	900052f4 <_Z23getFont_segoeui_20_4bppv+0x18>
    return segoeui_20_4bpp;
}
900052ee:	4817      	ldr	r0, [pc, #92]	@ (9000534c <_Z23getFont_segoeui_20_4bppv+0x70>)
900052f0:	b00f      	add	sp, #60	@ 0x3c
900052f2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont segoeui_20_4bpp(glyphs_segoeui_20_4bpp, 110, 24, 20, 0, 0, 4, 1, 2, 1, unicodes_segoeui_20_4bpp, kerning_segoeui_20_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900052f4:	4628      	mov	r0, r5
900052f6:	f026 fc52 	bl	9002bb9e <__cxa_guard_acquire>
900052fa:	2800      	cmp	r0, #0
900052fc:	d0f7      	beq.n	900052ee <_Z23getFont_segoeui_20_4bppv+0x12>
900052fe:	4914      	ldr	r1, [pc, #80]	@ (90005350 <_Z23getFont_segoeui_20_4bppv+0x74>)
90005300:	2301      	movs	r3, #1
90005302:	223f      	movs	r2, #63	@ 0x3f
90005304:	4811      	ldr	r0, [pc, #68]	@ (9000534c <_Z23getFont_segoeui_20_4bppv+0x70>)
90005306:	9306      	str	r3, [sp, #24]
90005308:	9304      	str	r3, [sp, #16]
9000530a:	2304      	movs	r3, #4
9000530c:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
90005310:	4910      	ldr	r1, [pc, #64]	@ (90005354 <_Z23getFont_segoeui_20_4bppv+0x78>)
90005312:	9108      	str	r1, [sp, #32]
90005314:	2114      	movs	r1, #20
90005316:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
9000531a:	e9cd 4302 	strd	r4, r3, [sp, #8]
9000531e:	e9cd 1400 	strd	r1, r4, [sp]
90005322:	4a0d      	ldr	r2, [pc, #52]	@ (90005358 <_Z23getFont_segoeui_20_4bppv+0x7c>)
90005324:	2402      	movs	r4, #2
90005326:	2318      	movs	r3, #24
90005328:	490c      	ldr	r1, [pc, #48]	@ (9000535c <_Z23getFont_segoeui_20_4bppv+0x80>)
9000532a:	9207      	str	r2, [sp, #28]
9000532c:	226e      	movs	r2, #110	@ 0x6e
9000532e:	9405      	str	r4, [sp, #20]
90005330:	f7ff ff5c 	bl	900051ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005334:	480a      	ldr	r0, [pc, #40]	@ (90005360 <_Z23getFont_segoeui_20_4bppv+0x84>)
90005336:	f026 ffc5 	bl	9002c2c4 <atexit>
9000533a:	4628      	mov	r0, r5
9000533c:	f026 fc3b 	bl	9002bbb6 <__cxa_guard_release>
}
90005340:	4802      	ldr	r0, [pc, #8]	@ (9000534c <_Z23getFont_segoeui_20_4bppv+0x70>)
90005342:	b00f      	add	sp, #60	@ 0x3c
90005344:	bd30      	pop	{r4, r5, pc}
90005346:	bf00      	nop
90005348:	24009e48 	.word	0x24009e48
9000534c:	24009e4c 	.word	0x24009e4c
90005350:	9002f414 	.word	0x9002f414
90005354:	90030bb4 	.word	0x90030bb4
90005358:	90031360 	.word	0x90031360
9000535c:	90204a84 	.word	0x90204a84
90005360:	900052d9 	.word	0x900052d9

90005364 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_segoeui_24_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_segoeui_24_4bpp();

touchgfx::GeneratedFont& getFont_segoeui_24_4bpp()
{
    static touchgfx::GeneratedFont segoeui_24_4bpp(glyphs_segoeui_24_4bpp, 0, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_segoeui_24_4bpp, kerning_segoeui_24_4bpp, 0, 0, 0, 0);
90005364:	4770      	bx	lr
90005366:	bf00      	nop

90005368 <_Z23getFont_segoeui_24_4bppv>:
{
90005368:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont segoeui_24_4bpp(glyphs_segoeui_24_4bpp, 0, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_segoeui_24_4bpp, kerning_segoeui_24_4bpp, 0, 0, 0, 0);
9000536a:	4d18      	ldr	r5, [pc, #96]	@ (900053cc <_Z23getFont_segoeui_24_4bppv+0x64>)
{
9000536c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont segoeui_24_4bpp(glyphs_segoeui_24_4bpp, 0, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_segoeui_24_4bpp, kerning_segoeui_24_4bpp, 0, 0, 0, 0);
9000536e:	682c      	ldr	r4, [r5, #0]
90005370:	f3bf 8f5b 	dmb	ish
90005374:	f014 0401 	ands.w	r4, r4, #1
90005378:	d002      	beq.n	90005380 <_Z23getFont_segoeui_24_4bppv+0x18>
    return segoeui_24_4bpp;
}
9000537a:	4815      	ldr	r0, [pc, #84]	@ (900053d0 <_Z23getFont_segoeui_24_4bppv+0x68>)
9000537c:	b00f      	add	sp, #60	@ 0x3c
9000537e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont segoeui_24_4bpp(glyphs_segoeui_24_4bpp, 0, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_segoeui_24_4bpp, kerning_segoeui_24_4bpp, 0, 0, 0, 0);
90005380:	4628      	mov	r0, r5
90005382:	f026 fc0c 	bl	9002bb9e <__cxa_guard_acquire>
90005386:	2800      	cmp	r0, #0
90005388:	d0f7      	beq.n	9000537a <_Z23getFont_segoeui_24_4bppv+0x12>
9000538a:	4912      	ldr	r1, [pc, #72]	@ (900053d4 <_Z23getFont_segoeui_24_4bppv+0x6c>)
9000538c:	2318      	movs	r3, #24
9000538e:	4a12      	ldr	r2, [pc, #72]	@ (900053d8 <_Z23getFont_segoeui_24_4bppv+0x70>)
90005390:	9300      	str	r3, [sp, #0]
90005392:	480f      	ldr	r0, [pc, #60]	@ (900053d0 <_Z23getFont_segoeui_24_4bppv+0x68>)
90005394:	e9cd 2107 	strd	r2, r1, [sp, #28]
90005398:	2101      	movs	r1, #1
9000539a:	2204      	movs	r2, #4
9000539c:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900053a0:	e9cd 2103 	strd	r2, r1, [sp, #12]
900053a4:	e9cd 4409 	strd	r4, r4, [sp, #36]	@ 0x24
900053a8:	4622      	mov	r2, r4
900053aa:	490c      	ldr	r1, [pc, #48]	@ (900053dc <_Z23getFont_segoeui_24_4bppv+0x74>)
900053ac:	e9cd 4405 	strd	r4, r4, [sp, #20]
900053b0:	e9cd 4401 	strd	r4, r4, [sp, #4]
900053b4:	f7ff ff1a 	bl	900051ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900053b8:	4809      	ldr	r0, [pc, #36]	@ (900053e0 <_Z23getFont_segoeui_24_4bppv+0x78>)
900053ba:	f026 ff83 	bl	9002c2c4 <atexit>
900053be:	4628      	mov	r0, r5
900053c0:	f026 fbf9 	bl	9002bbb6 <__cxa_guard_release>
}
900053c4:	4802      	ldr	r0, [pc, #8]	@ (900053d0 <_Z23getFont_segoeui_24_4bppv+0x68>)
900053c6:	b00f      	add	sp, #60	@ 0x3c
900053c8:	bd30      	pop	{r4, r5, pc}
900053ca:	bf00      	nop
900053cc:	24009e78 	.word	0x24009e78
900053d0:	24009e7c 	.word	0x24009e7c
900053d4:	90030ef4 	.word	0x90030ef4
900053d8:	90031374 	.word	0x90031374
900053dc:	90205088 	.word	0x90205088
900053e0:	90005365 	.word	0x90005365

900053e4 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable segoeui_contextualFormsTable;
touchgfx::GeneratedFont& getFont_segoeui_28_4bpp();

touchgfx::GeneratedFont& getFont_segoeui_28_4bpp()
{
    static touchgfx::GeneratedFont segoeui_28_4bpp(glyphs_segoeui_28_4bpp, 110, 34, 28, 0, 0, 4, 1, 3, 1, unicodes_segoeui_28_4bpp, kerning_segoeui_28_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900053e4:	4770      	bx	lr
900053e6:	bf00      	nop

900053e8 <_Z23getFont_segoeui_28_4bppv>:
{
900053e8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont segoeui_28_4bpp(glyphs_segoeui_28_4bpp, 110, 34, 28, 0, 0, 4, 1, 3, 1, unicodes_segoeui_28_4bpp, kerning_segoeui_28_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900053ea:	4d1a      	ldr	r5, [pc, #104]	@ (90005454 <_Z23getFont_segoeui_28_4bppv+0x6c>)
{
900053ec:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont segoeui_28_4bpp(glyphs_segoeui_28_4bpp, 110, 34, 28, 0, 0, 4, 1, 3, 1, unicodes_segoeui_28_4bpp, kerning_segoeui_28_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900053ee:	682c      	ldr	r4, [r5, #0]
900053f0:	f3bf 8f5b 	dmb	ish
900053f4:	f014 0401 	ands.w	r4, r4, #1
900053f8:	d002      	beq.n	90005400 <_Z23getFont_segoeui_28_4bppv+0x18>
    return segoeui_28_4bpp;
}
900053fa:	4817      	ldr	r0, [pc, #92]	@ (90005458 <_Z23getFont_segoeui_28_4bppv+0x70>)
900053fc:	b00f      	add	sp, #60	@ 0x3c
900053fe:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont segoeui_28_4bpp(glyphs_segoeui_28_4bpp, 110, 34, 28, 0, 0, 4, 1, 3, 1, unicodes_segoeui_28_4bpp, kerning_segoeui_28_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
90005400:	4628      	mov	r0, r5
90005402:	f026 fbcc 	bl	9002bb9e <__cxa_guard_acquire>
90005406:	2800      	cmp	r0, #0
90005408:	d0f7      	beq.n	900053fa <_Z23getFont_segoeui_28_4bppv+0x12>
9000540a:	4914      	ldr	r1, [pc, #80]	@ (9000545c <_Z23getFont_segoeui_28_4bppv+0x74>)
9000540c:	2301      	movs	r3, #1
9000540e:	223f      	movs	r2, #63	@ 0x3f
90005410:	4811      	ldr	r0, [pc, #68]	@ (90005458 <_Z23getFont_segoeui_28_4bppv+0x70>)
90005412:	9306      	str	r3, [sp, #24]
90005414:	9304      	str	r3, [sp, #16]
90005416:	2304      	movs	r3, #4
90005418:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
9000541c:	4910      	ldr	r1, [pc, #64]	@ (90005460 <_Z23getFont_segoeui_28_4bppv+0x78>)
9000541e:	9108      	str	r1, [sp, #32]
90005420:	211c      	movs	r1, #28
90005422:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
90005426:	e9cd 4302 	strd	r4, r3, [sp, #8]
9000542a:	e9cd 1400 	strd	r1, r4, [sp]
9000542e:	4a0d      	ldr	r2, [pc, #52]	@ (90005464 <_Z23getFont_segoeui_28_4bppv+0x7c>)
90005430:	2403      	movs	r4, #3
90005432:	2322      	movs	r3, #34	@ 0x22
90005434:	490c      	ldr	r1, [pc, #48]	@ (90005468 <_Z23getFont_segoeui_28_4bppv+0x80>)
90005436:	9207      	str	r2, [sp, #28]
90005438:	226e      	movs	r2, #110	@ 0x6e
9000543a:	9405      	str	r4, [sp, #20]
9000543c:	f7ff fed6 	bl	900051ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005440:	480a      	ldr	r0, [pc, #40]	@ (9000546c <_Z23getFont_segoeui_28_4bppv+0x84>)
90005442:	f026 ff3f 	bl	9002c2c4 <atexit>
90005446:	4628      	mov	r0, r5
90005448:	f026 fbb5 	bl	9002bbb6 <__cxa_guard_release>
}
9000544c:	4802      	ldr	r0, [pc, #8]	@ (90005458 <_Z23getFont_segoeui_28_4bppv+0x70>)
9000544e:	b00f      	add	sp, #60	@ 0x3c
90005450:	bd30      	pop	{r4, r5, pc}
90005452:	bf00      	nop
90005454:	24009ea8 	.word	0x24009ea8
90005458:	24009eac 	.word	0x24009eac
9000545c:	9002f414 	.word	0x9002f414
90005460:	90030ef8 	.word	0x90030ef8
90005464:	90031378 	.word	0x90031378
90005468:	90205098 	.word	0x90205098
9000546c:	900053e5 	.word	0x900053e5

90005470 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005470:	4770      	bx	lr
90005472:	bf00      	nop

90005474 <_Z23getFont_verdana_10_4bppv>:
{
90005474:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005476:	4d18      	ldr	r5, [pc, #96]	@ (900054d8 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90005478:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000547a:	682c      	ldr	r4, [r5, #0]
9000547c:	f3bf 8f5b 	dmb	ish
90005480:	f014 0401 	ands.w	r4, r4, #1
90005484:	d002      	beq.n	9000548c <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90005486:	4815      	ldr	r0, [pc, #84]	@ (900054dc <_Z23getFont_verdana_10_4bppv+0x68>)
90005488:	b00f      	add	sp, #60	@ 0x3c
9000548a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000548c:	4628      	mov	r0, r5
9000548e:	f026 fb86 	bl	9002bb9e <__cxa_guard_acquire>
90005492:	2800      	cmp	r0, #0
90005494:	d0f7      	beq.n	90005486 <_Z23getFont_verdana_10_4bppv+0x12>
90005496:	213f      	movs	r1, #63	@ 0x3f
90005498:	2201      	movs	r2, #1
9000549a:	230a      	movs	r3, #10
9000549c:	2004      	movs	r0, #4
9000549e:	9204      	str	r2, [sp, #16]
900054a0:	9300      	str	r3, [sp, #0]
900054a2:	9003      	str	r0, [sp, #12]
900054a4:	480d      	ldr	r0, [pc, #52]	@ (900054dc <_Z23getFont_verdana_10_4bppv+0x68>)
900054a6:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900054aa:	490d      	ldr	r1, [pc, #52]	@ (900054e0 <_Z23getFont_verdana_10_4bppv+0x6c>)
900054ac:	9108      	str	r1, [sp, #32]
900054ae:	490d      	ldr	r1, [pc, #52]	@ (900054e4 <_Z23getFont_verdana_10_4bppv+0x70>)
900054b0:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900054b4:	9107      	str	r1, [sp, #28]
900054b6:	490c      	ldr	r1, [pc, #48]	@ (900054e8 <_Z23getFont_verdana_10_4bppv+0x74>)
900054b8:	e9cd 4405 	strd	r4, r4, [sp, #20]
900054bc:	e9cd 4401 	strd	r4, r4, [sp, #4]
900054c0:	f7ff fe94 	bl	900051ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900054c4:	4809      	ldr	r0, [pc, #36]	@ (900054ec <_Z23getFont_verdana_10_4bppv+0x78>)
900054c6:	f026 fefd 	bl	9002c2c4 <atexit>
900054ca:	4628      	mov	r0, r5
900054cc:	f026 fb73 	bl	9002bbb6 <__cxa_guard_release>
}
900054d0:	4802      	ldr	r0, [pc, #8]	@ (900054dc <_Z23getFont_verdana_10_4bppv+0x68>)
900054d2:	b00f      	add	sp, #60	@ 0x3c
900054d4:	bd30      	pop	{r4, r5, pc}
900054d6:	bf00      	nop
900054d8:	24009ed8 	.word	0x24009ed8
900054dc:	24009edc 	.word	0x24009edc
900054e0:	90031354 	.word	0x90031354
900054e4:	9003138c 	.word	0x9003138c
900054e8:	9020569c 	.word	0x9020569c
900054ec:	90005471 	.word	0x90005471

900054f0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900054f0:	4770      	bx	lr
900054f2:	bf00      	nop

900054f4 <_Z23getFont_verdana_20_4bppv>:
{
900054f4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900054f6:	4d18      	ldr	r5, [pc, #96]	@ (90005558 <_Z23getFont_verdana_20_4bppv+0x64>)
{
900054f8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900054fa:	682c      	ldr	r4, [r5, #0]
900054fc:	f3bf 8f5b 	dmb	ish
90005500:	f014 0401 	ands.w	r4, r4, #1
90005504:	d002      	beq.n	9000550c <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90005506:	4815      	ldr	r0, [pc, #84]	@ (9000555c <_Z23getFont_verdana_20_4bppv+0x68>)
90005508:	b00f      	add	sp, #60	@ 0x3c
9000550a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000550c:	4628      	mov	r0, r5
9000550e:	f026 fb46 	bl	9002bb9e <__cxa_guard_acquire>
90005512:	2800      	cmp	r0, #0
90005514:	d0f7      	beq.n	90005506 <_Z23getFont_verdana_20_4bppv+0x12>
90005516:	213f      	movs	r1, #63	@ 0x3f
90005518:	2201      	movs	r2, #1
9000551a:	2314      	movs	r3, #20
9000551c:	2004      	movs	r0, #4
9000551e:	9204      	str	r2, [sp, #16]
90005520:	9300      	str	r3, [sp, #0]
90005522:	9003      	str	r0, [sp, #12]
90005524:	480d      	ldr	r0, [pc, #52]	@ (9000555c <_Z23getFont_verdana_20_4bppv+0x68>)
90005526:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000552a:	490d      	ldr	r1, [pc, #52]	@ (90005560 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000552c:	9108      	str	r1, [sp, #32]
9000552e:	490d      	ldr	r1, [pc, #52]	@ (90005564 <_Z23getFont_verdana_20_4bppv+0x70>)
90005530:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005534:	9107      	str	r1, [sp, #28]
90005536:	490c      	ldr	r1, [pc, #48]	@ (90005568 <_Z23getFont_verdana_20_4bppv+0x74>)
90005538:	e9cd 4405 	strd	r4, r4, [sp, #20]
9000553c:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005540:	f7ff fe54 	bl	900051ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005544:	4809      	ldr	r0, [pc, #36]	@ (9000556c <_Z23getFont_verdana_20_4bppv+0x78>)
90005546:	f026 febd 	bl	9002c2c4 <atexit>
9000554a:	4628      	mov	r0, r5
9000554c:	f026 fb33 	bl	9002bbb6 <__cxa_guard_release>
}
90005550:	4802      	ldr	r0, [pc, #8]	@ (9000555c <_Z23getFont_verdana_20_4bppv+0x68>)
90005552:	b00f      	add	sp, #60	@ 0x3c
90005554:	bd30      	pop	{r4, r5, pc}
90005556:	bf00      	nop
90005558:	24009f08 	.word	0x24009f08
9000555c:	24009f0c 	.word	0x24009f0c
90005560:	90031358 	.word	0x90031358
90005564:	90031390 	.word	0x90031390
90005568:	902056ac 	.word	0x902056ac
9000556c:	900054f1 	.word	0x900054f1

90005570 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005570:	4770      	bx	lr
90005572:	bf00      	nop

90005574 <_Z23getFont_verdana_40_4bppv>:
{
90005574:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005576:	4d18      	ldr	r5, [pc, #96]	@ (900055d8 <_Z23getFont_verdana_40_4bppv+0x64>)
{
90005578:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000557a:	682c      	ldr	r4, [r5, #0]
9000557c:	f3bf 8f5b 	dmb	ish
90005580:	f014 0401 	ands.w	r4, r4, #1
90005584:	d002      	beq.n	9000558c <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
90005586:	4815      	ldr	r0, [pc, #84]	@ (900055dc <_Z23getFont_verdana_40_4bppv+0x68>)
90005588:	b00f      	add	sp, #60	@ 0x3c
9000558a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000558c:	4628      	mov	r0, r5
9000558e:	f026 fb06 	bl	9002bb9e <__cxa_guard_acquire>
90005592:	2800      	cmp	r0, #0
90005594:	d0f7      	beq.n	90005586 <_Z23getFont_verdana_40_4bppv+0x12>
90005596:	213f      	movs	r1, #63	@ 0x3f
90005598:	2201      	movs	r2, #1
9000559a:	2328      	movs	r3, #40	@ 0x28
9000559c:	2004      	movs	r0, #4
9000559e:	9204      	str	r2, [sp, #16]
900055a0:	9300      	str	r3, [sp, #0]
900055a2:	9003      	str	r0, [sp, #12]
900055a4:	480d      	ldr	r0, [pc, #52]	@ (900055dc <_Z23getFont_verdana_40_4bppv+0x68>)
900055a6:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900055aa:	490d      	ldr	r1, [pc, #52]	@ (900055e0 <_Z23getFont_verdana_40_4bppv+0x6c>)
900055ac:	9108      	str	r1, [sp, #32]
900055ae:	490d      	ldr	r1, [pc, #52]	@ (900055e4 <_Z23getFont_verdana_40_4bppv+0x70>)
900055b0:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900055b4:	9107      	str	r1, [sp, #28]
900055b6:	490c      	ldr	r1, [pc, #48]	@ (900055e8 <_Z23getFont_verdana_40_4bppv+0x74>)
900055b8:	e9cd 4405 	strd	r4, r4, [sp, #20]
900055bc:	e9cd 4401 	strd	r4, r4, [sp, #4]
900055c0:	f7ff fe14 	bl	900051ec <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900055c4:	4809      	ldr	r0, [pc, #36]	@ (900055ec <_Z23getFont_verdana_40_4bppv+0x78>)
900055c6:	f026 fe7d 	bl	9002c2c4 <atexit>
900055ca:	4628      	mov	r0, r5
900055cc:	f026 faf3 	bl	9002bbb6 <__cxa_guard_release>
}
900055d0:	4802      	ldr	r0, [pc, #8]	@ (900055dc <_Z23getFont_verdana_40_4bppv+0x68>)
900055d2:	b00f      	add	sp, #60	@ 0x3c
900055d4:	bd30      	pop	{r4, r5, pc}
900055d6:	bf00      	nop
900055d8:	24009f38 	.word	0x24009f38
900055dc:	24009f3c 	.word	0x24009f3c
900055e0:	9003135c 	.word	0x9003135c
900055e4:	90031394 	.word	0x90031394
900055e8:	902056bc 	.word	0x902056bc
900055ec:	90005571 	.word	0x90005571

900055f0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
900055f0:	2000      	movs	r0, #0
900055f2:	4770      	bx	lr

900055f4 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
900055f4:	2000      	movs	r0, #0
900055f6:	4770      	bx	lr

900055f8 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900055f8:	b40e      	push	{r1, r2, r3}
900055fa:	b500      	push	{lr}
900055fc:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900055fe:	2100      	movs	r1, #0
{
90005600:	ab03      	add	r3, sp, #12
90005602:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90005606:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005608:	f014 ffce 	bl	9001a5a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000560c:	b002      	add	sp, #8
9000560e:	f85d eb04 	ldr.w	lr, [sp], #4
90005612:	b003      	add	sp, #12
90005614:	4770      	bx	lr
90005616:	bf00      	nop

90005618 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005618:	b40c      	push	{r2, r3}
9000561a:	b500      	push	{lr}
9000561c:	b083      	sub	sp, #12
9000561e:	ab04      	add	r3, sp, #16
90005620:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90005624:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90005626:	f014 ffbf 	bl	9001a5a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000562a:	b003      	add	sp, #12
9000562c:	f85d eb04 	ldr.w	lr, [sp], #4
90005630:	b002      	add	sp, #8
90005632:	4770      	bx	lr

90005634 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005634:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90005636:	b510      	push	{r4, lr}
90005638:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
9000563a:	b133      	cbz	r3, 9000564a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
9000563c:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
9000563e:	b39b      	cbz	r3, 900056a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90005640:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90005642:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90005646:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90005648:	b923      	cbnz	r3, 90005654 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
9000564a:	4620      	mov	r0, r4
}
9000564c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90005650:	f016 bce8 	b.w	9001c024 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005654:	f016 fde4 	bl	9001c220 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90005658:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9000565a:	2b01      	cmp	r3, #1
9000565c:	d92a      	bls.n	900056b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000565e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90005660:	1c53      	adds	r3, r2, #1
90005662:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005664:	2b09      	cmp	r3, #9
90005666:	d812      	bhi.n	9000568e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90005668:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
9000566c:	f640 103f 	movw	r0, #2367	@ 0x93f
90005670:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90005672:	4281      	cmp	r1, r0
90005674:	d1e9      	bne.n	9000564a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005676:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000567a:	0052      	lsls	r2, r2, #1
9000567c:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000567e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90005682:	4422      	add	r2, r4
90005684:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
90005688:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
9000568a:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
9000568c:	e7dd      	b.n	9000564a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
9000568e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90005692:	f640 113f 	movw	r1, #2367	@ 0x93f
90005696:	89db      	ldrh	r3, [r3, #14]
90005698:	428b      	cmp	r3, r1
9000569a:	d1d6      	bne.n	9000564a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000569c:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900056a0:	2300      	movs	r3, #0
900056a2:	0052      	lsls	r2, r2, #1
900056a4:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
900056a6:	e7ea      	b.n	9000567e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
900056a8:	4b05      	ldr	r3, [pc, #20]	@ (900056c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
900056aa:	21c5      	movs	r1, #197	@ 0xc5
900056ac:	4a05      	ldr	r2, [pc, #20]	@ (900056c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
900056ae:	4806      	ldr	r0, [pc, #24]	@ (900056c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900056b0:	f026 fdea 	bl	9002c288 <__assert_func>
            assert(offset < used);
900056b4:	4b05      	ldr	r3, [pc, #20]	@ (900056cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
900056b6:	21cb      	movs	r1, #203	@ 0xcb
900056b8:	4a05      	ldr	r2, [pc, #20]	@ (900056d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
900056ba:	4803      	ldr	r0, [pc, #12]	@ (900056c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900056bc:	f026 fde4 	bl	9002c288 <__assert_func>
900056c0:	9002f870 	.word	0x9002f870
900056c4:	9002f87c 	.word	0x9002f87c
900056c8:	9002f928 	.word	0x9002f928
900056cc:	9002f974 	.word	0x9002f974
900056d0:	9002f984 	.word	0x9002f984

900056d4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900056d4:	f016 bc6f 	b.w	9001bfb6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900056d8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900056d8:	b510      	push	{r4, lr}
900056da:	b086      	sub	sp, #24
900056dc:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900056e0:	ac0a      	add	r4, sp, #40	@ 0x28
{
900056e2:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900056e6:	461a      	mov	r2, r3
900056e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900056ea:	4661      	mov	r1, ip
900056ec:	9401      	str	r4, [sp, #4]
900056ee:	9300      	str	r3, [sp, #0]
900056f0:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900056f2:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900056f4:	f013 fbc8 	bl	90018e88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900056f8:	b006      	add	sp, #24
900056fa:	bd10      	pop	{r4, pc}

900056fc <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900056fc:	b9e0      	cbnz	r0, 90005738 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900056fe:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90005700:	4b13      	ldr	r3, [pc, #76]	@ (90005750 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90005702:	681b      	ldr	r3, [r3, #0]
90005704:	b1cb      	cbz	r3, 9000573a <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005706:	4c13      	ldr	r4, [pc, #76]	@ (90005754 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005708:	4813      	ldr	r0, [pc, #76]	@ (90005758 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
9000570a:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000570e:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005710:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005712:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005714:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005716:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005718:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
9000571a:	4b10      	ldr	r3, [pc, #64]	@ (9000575c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
9000571c:	2200      	movs	r2, #0
9000571e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90005720:	f000 f8a6 	bl	90005870 <_ZN17TypedTextDatabase8getFontsEv>
90005724:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90005726:	f000 f8a1 	bl	9000586c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
9000572a:	4b0d      	ldr	r3, [pc, #52]	@ (90005760 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
9000572c:	4a0d      	ldr	r2, [pc, #52]	@ (90005764 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
9000572e:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90005730:	4b0d      	ldr	r3, [pc, #52]	@ (90005768 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90005732:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005734:	8018      	strh	r0, [r3, #0]
    }
}
90005736:	bd38      	pop	{r3, r4, r5, pc}
90005738:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000573a:	4c0c      	ldr	r4, [pc, #48]	@ (9000576c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
9000573c:	4905      	ldr	r1, [pc, #20]	@ (90005754 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000573e:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90005740:	480b      	ldr	r0, [pc, #44]	@ (90005770 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90005742:	4b05      	ldr	r3, [pc, #20]	@ (90005758 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005744:	4a0b      	ldr	r2, [pc, #44]	@ (90005774 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90005746:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90005748:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
9000574a:	2c00      	cmp	r4, #0
9000574c:	d1e5      	bne.n	9000571a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
9000574e:	bd38      	pop	{r3, r4, r5, pc}
90005750:	24009f74 	.word	0x24009f74
90005754:	24009f6c 	.word	0x24009f6c
90005758:	24009f68 	.word	0x24009f68
9000575c:	24009f70 	.word	0x24009f70
90005760:	240245f8 	.word	0x240245f8
90005764:	24024600 	.word	0x24024600
90005768:	240245fc 	.word	0x240245fc
9000576c:	902056ec 	.word	0x902056ec
90005770:	902056d8 	.word	0x902056d8
90005774:	902056cc 	.word	0x902056cc

90005778 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90005778:	4a04      	ldr	r2, [pc, #16]	@ (9000578c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000577a:	4b05      	ldr	r3, [pc, #20]	@ (90005790 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
9000577c:	6812      	ldr	r2, [r2, #0]
9000577e:	681b      	ldr	r3, [r3, #0]
90005780:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90005784:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90005788:	4770      	bx	lr
9000578a:	bf00      	nop
9000578c:	24009f68 	.word	0x24009f68
90005790:	24009f6c 	.word	0x24009f6c

90005794 <_ZN22TouchpadScreenViewBaseD1Ev>:
}

TouchpadScreenViewBase::~TouchpadScreenViewBase()
{

}
90005794:	4770      	bx	lr
90005796:	bf00      	nop

90005798 <_ZN22TouchpadScreenViewBase11setupScreenEv>:

void TouchpadScreenViewBase::setupScreen()
{

}
90005798:	4770      	bx	lr
9000579a:	bf00      	nop

9000579c <_ZN22TouchpadScreenViewBaseD0Ev>:
TouchpadScreenViewBase::~TouchpadScreenViewBase()
9000579c:	b510      	push	{r4, lr}
9000579e:	4604      	mov	r4, r0
}
900057a0:	2198      	movs	r1, #152	@ 0x98
900057a2:	f026 f9fa 	bl	9002bb9a <_ZdlPvj>
900057a6:	4620      	mov	r0, r4
900057a8:	bd10      	pop	{r4, pc}
900057aa:	bf00      	nop

900057ac <_ZN22TouchpadScreenViewBase18goToKeyboardScreenEv>:

void TouchpadScreenViewBase::goToKeyboardScreen()
{
900057ac:	b508      	push	{r3, lr}
     */
    virtual void goToKeyboardScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900057ae:	f013 ffad 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
    //Interaction1
    //When goToKeyboardScreen is called change screen to KeyboardScreen
    //Go to KeyboardScreen with no screen transition
    application().gotoKeyboardScreenScreenNoTransition();
}
900057b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    application().gotoKeyboardScreenScreenNoTransition();
900057b6:	f7ff bcc3 	b.w	90005140 <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv>
900057ba:	bf00      	nop

900057bc <_ZN22TouchpadScreenViewBaseC1Ev>:
TouchpadScreenViewBase::TouchpadScreenViewBase()
900057bc:	b5f0      	push	{r4, r5, r6, r7, lr}
900057be:	b083      	sub	sp, #12
900057c0:	4604      	mov	r4, r0
900057c2:	f015 fe69 	bl	9001b498 <_ZN8touchgfx6ScreenC1Ev>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
900057c6:	f64f 73ff 	movw	r3, #65535	@ 0xffff
          touchable(false),
900057ca:	f44f 7280 	mov.w	r2, #256	@ 0x100
900057ce:	2500      	movs	r5, #0
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
900057d0:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
900057d4:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
900057d8:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
900057dc:	1d27      	adds	r7, r4, #4
900057de:	f8ad 3004 	strh.w	r3, [sp, #4]
    {
        Image::setBitmap(bmp);
900057e2:	4630      	mov	r0, r6
        : Widget(), alpha(255), color(0)
900057e4:	4b1d      	ldr	r3, [pc, #116]	@ (9000585c <_ZN22TouchpadScreenViewBaseC1Ev+0xa0>)
900057e6:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
900057ea:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
900057ee:	6423      	str	r3, [r4, #64]	@ 0x40
900057f0:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), bitmap(bmp), alpha(255)
900057f2:	4a1b      	ldr	r2, [pc, #108]	@ (90005860 <_ZN22TouchpadScreenViewBaseC1Ev+0xa4>)
900057f4:	491b      	ldr	r1, [pc, #108]	@ (90005864 <_ZN22TouchpadScreenViewBaseC1Ev+0xa8>)
900057f6:	66e2      	str	r2, [r4, #108]	@ 0x6c
900057f8:	6021      	str	r1, [r4, #0]
        Image::setBitmap(bmp);
900057fa:	a901      	add	r1, sp, #4
900057fc:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
90005800:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
90005802:	66a5      	str	r5, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
90005804:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90005808:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
9000580c:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90005810:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90005814:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
90005818:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
9000581c:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90005820:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90005824:	f010 ffc1 	bl	900167aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
90005828:	4b0f      	ldr	r3, [pc, #60]	@ (90005868 <_ZN22TouchpadScreenViewBaseC1Ev+0xac>)
9000582a:	f104 0140 	add.w	r1, r4, #64	@ 0x40
9000582e:	4638      	mov	r0, r7
90005830:	e9c4 5311 	strd	r5, r3, [r4, #68]	@ 0x44
        color = newColor;
90005834:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90005838:	66a3      	str	r3, [r4, #104]	@ 0x68
9000583a:	f00d fcef 	bl	9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_LINES_ID));
9000583e:	a901      	add	r1, sp, #4
90005840:	4630      	mov	r0, r6
90005842:	6725      	str	r5, [r4, #112]	@ 0x70
90005844:	f8ad 5004 	strh.w	r5, [sp, #4]
90005848:	f010 ffaf 	bl	900167aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000584c:	4638      	mov	r0, r7
9000584e:	4631      	mov	r1, r6
90005850:	f00d fce4 	bl	9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005854:	4620      	mov	r0, r4
90005856:	b003      	add	sp, #12
90005858:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000585a:	bf00      	nop
9000585c:	9003031c 	.word	0x9003031c
90005860:	90030384 	.word	0x90030384
90005864:	9002fa60 	.word	0x9002fa60
90005868:	011001e0 	.word	0x011001e0

9000586c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
9000586c:	2003      	movs	r0, #3
9000586e:	4770      	bx	lr

90005870 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90005870:	4800      	ldr	r0, [pc, #0]	@ (90005874 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90005872:	4770      	bx	lr
90005874:	24009f78 	.word	0x24009f78

90005878 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 5:
        touchgfx_fonts[5] = &(getFont_segoeui_24_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
90005878:	b510      	push	{r4, lr}
};
9000587a:	4c0a      	ldr	r4, [pc, #40]	@ (900058a4 <_GLOBAL__sub_I_touchgfx_fonts+0x2c>)
    &(getFont_verdana_20_4bpp()),
9000587c:	f7ff fe3a 	bl	900054f4 <_Z23getFont_verdana_20_4bppv>
};
90005880:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90005882:	f7ff fe77 	bl	90005574 <_Z23getFont_verdana_40_4bppv>
};
90005886:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
90005888:	f7ff fdf4 	bl	90005474 <_Z23getFont_verdana_10_4bppv>
};
9000588c:	60a0      	str	r0, [r4, #8]
    &(getFont_segoeui_20_4bpp()),
9000588e:	f7ff fd25 	bl	900052dc <_Z23getFont_segoeui_20_4bppv>
};
90005892:	60e0      	str	r0, [r4, #12]
    &(getFont_segoeui_28_4bpp()),
90005894:	f7ff fda8 	bl	900053e8 <_Z23getFont_segoeui_28_4bppv>
};
90005898:	6120      	str	r0, [r4, #16]
    &(getFont_segoeui_24_4bpp())
9000589a:	f7ff fd65 	bl	90005368 <_Z23getFont_segoeui_24_4bppv>
};
9000589e:	6160      	str	r0, [r4, #20]
} // namespace TypedTextDatabase
900058a0:	bd10      	pop	{r4, pc}
900058a2:	bf00      	nop
900058a4:	24009f78 	.word	0x24009f78

900058a8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
900058a8:	b410      	push	{r4}
    pointArray = 0;
900058aa:	2400      	movs	r4, #0
900058ac:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
900058ae:	600c      	str	r4, [r1, #0]
    commandArray = 0;
900058b0:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
900058b2:	601c      	str	r4, [r3, #0]
}
900058b4:	f85d 4b04 	ldr.w	r4, [sp], #4
900058b8:	4770      	bx	lr
900058ba:	bf00      	nop

900058bc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
900058bc:	4770      	bx	lr
900058be:	bf00      	nop

900058c0 <_ZN19FrontendApplicationD0Ev>:
900058c0:	b510      	push	{r4, lr}
900058c2:	4604      	mov	r4, r0
900058c4:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900058c8:	f026 f967 	bl	9002bb9a <_ZdlPvj>
900058cc:	4620      	mov	r0, r4
900058ce:	bd10      	pop	{r4, pc}

900058d0 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
900058d0:	b510      	push	{r4, lr}
900058d2:	4604      	mov	r4, r0
    {
        model.tick();
900058d4:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
900058d8:	f000 ffc4 	bl	90006864 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
900058dc:	4620      	mov	r0, r4
    }
900058de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
900058e2:	f013 bf95 	b.w	90019810 <_ZN8touchgfx11Application15handleTickEventEv>
900058e6:	bf00      	nop

900058e8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
900058e8:	b510      	push	{r4, lr}
900058ea:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
900058ec:	f7ff fbd2 	bl	90005094 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
900058f0:	4b01      	ldr	r3, [pc, #4]	@ (900058f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
900058f2:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
900058f4:	6023      	str	r3, [r4, #0]
}
900058f6:	bd10      	pop	{r4, pc}
900058f8:	9002fa98 	.word	0x9002fa98

900058fc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
900058fc:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900058fe:	4770      	bx	lr

90005900 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev>:
    {46, Rect(FOURTH_ROW_X_OFFSET + KEY_OFFSET * 8, FOURTH_ROW_Y_OFFSET, KEY_WIDTH, KEY_HEIGHT), BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID},
    {47, Rect(FOURTH_ROW_X_OFFSET + KEY_OFFSET * 9, FOURTH_ROW_Y_OFFSET, KEY_WIDTH, KEY_HEIGHT), BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID},
    {48, Rect(FOURTH_ROW_X_OFFSET + KEY_OFFSET * 10, FOURTH_ROW_Y_OFFSET, KEY_WIDTH, KEY_HEIGHT), BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID},

    {49, Rect(64*2, 54*4, SPACE_WIDTH, SPACE_HEIGHT), BITMAP_KEYBOARD_SPACE_HIGHLIGHTED_ID}
};
90005900:	4bf8      	ldr	r3, [pc, #992]	@ (90005ce4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3e4>)
90005902:	210c      	movs	r1, #12
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005904:	4af8      	ldr	r2, [pc, #992]	@ (90005ce8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3e8>)
90005906:	2001      	movs	r0, #1
90005908:	f04f 0c10 	mov.w	ip, #16

void FullScreenKeyboard::keyPressedhandler(Unicode::UnicodeChar keyChar)
{
	touchgfx_printf("Key pressed: %c\n", keyChar);
	keyboard.setBufferPosition(0);
}
9000590c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005910:	f04f 0b40 	mov.w	fp, #64	@ 0x40
90005914:	f04f 0703 	mov.w	r7, #3
90005918:	f04f 0a20 	mov.w	sl, #32
9000591c:	f04f 0902 	mov.w	r9, #2
90005920:	f8c3 b00e 	str.w	fp, [r3, #14]
90005924:	f04f 0b60 	mov.w	fp, #96	@ 0x60
90005928:	761f      	strb	r7, [r3, #24]
9000592a:	f04f 0705 	mov.w	r7, #5
9000592e:	f8c3 b01a 	str.w	fp, [r3, #26]
90005932:	f04f 0b04 	mov.w	fp, #4
90005936:	f883 7030 	strb.w	r7, [r3, #48]	@ 0x30
9000593a:	f04f 0706 	mov.w	r7, #6
9000593e:	f883 b024 	strb.w	fp, [r3, #36]	@ 0x24
90005942:	f04f 0b80 	mov.w	fp, #128	@ 0x80
90005946:	f883 703c 	strb.w	r7, [r3, #60]	@ 0x3c
9000594a:	f04f 0707 	mov.w	r7, #7
9000594e:	f8c3 b026 	str.w	fp, [r3, #38]	@ 0x26
90005952:	f04f 0ba0 	mov.w	fp, #160	@ 0xa0
90005956:	f883 7048 	strb.w	r7, [r3, #72]	@ 0x48
9000595a:	f04f 0708 	mov.w	r7, #8
9000595e:	f8c3 b032 	str.w	fp, [r3, #50]	@ 0x32
90005962:	f04f 0bc0 	mov.w	fp, #192	@ 0xc0
90005966:	7018      	strb	r0, [r3, #0]
90005968:	f04f 0e0a 	mov.w	lr, #10
9000596c:	f8c3 b03e 	str.w	fp, [r3, #62]	@ 0x3e
90005970:	f04f 0be0 	mov.w	fp, #224	@ 0xe0
90005974:	f8c3 a002 	str.w	sl, [r3, #2]
90005978:	f04f 080f 	mov.w	r8, #15
9000597c:	f8c3 b04a 	str.w	fp, [r3, #74]	@ 0x4a
90005980:	f44f 7b80 	mov.w	fp, #256	@ 0x100
90005984:	f8c3 2006 	str.w	r2, [r3, #6]
90005988:	2400      	movs	r4, #0
9000598a:	8159      	strh	r1, [r3, #10]
9000598c:	f8c3 2012 	str.w	r2, [r3, #18]
90005990:	82d9      	strh	r1, [r3, #22]
90005992:	f8c3 201e 	str.w	r2, [r3, #30]
90005996:	8459      	strh	r1, [r3, #34]	@ 0x22
90005998:	f8c3 202a 	str.w	r2, [r3, #42]	@ 0x2a
9000599c:	85d9      	strh	r1, [r3, #46]	@ 0x2e
9000599e:	f8c3 2036 	str.w	r2, [r3, #54]	@ 0x36
900059a2:	8759      	strh	r1, [r3, #58]	@ 0x3a
900059a4:	f8c3 2042 	str.w	r2, [r3, #66]	@ 0x42
900059a8:	f8a3 1046 	strh.w	r1, [r3, #70]	@ 0x46
900059ac:	f8c3 204e 	str.w	r2, [r3, #78]	@ 0x4e
900059b0:	f8a3 1052 	strh.w	r1, [r3, #82]	@ 0x52
900059b4:	f8c3 205a 	str.w	r2, [r3, #90]	@ 0x5a
900059b8:	f8a3 105e 	strh.w	r1, [r3, #94]	@ 0x5e
900059bc:	f883 7054 	strb.w	r7, [r3, #84]	@ 0x54
900059c0:	f04f 0709 	mov.w	r7, #9
900059c4:	f883 900c 	strb.w	r9, [r3, #12]
900059c8:	f8c3 b056 	str.w	fp, [r3, #86]	@ 0x56
900059cc:	f44f 7b90 	mov.w	fp, #288	@ 0x120
900059d0:	f883 7060 	strb.w	r7, [r3, #96]	@ 0x60
900059d4:	f04f 070b 	mov.w	r7, #11
900059d8:	f8c3 b062 	str.w	fp, [r3, #98]	@ 0x62
900059dc:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
900059e0:	f883 7078 	strb.w	r7, [r3, #120]	@ 0x78
900059e4:	f04f 070d 	mov.w	r7, #13
900059e8:	f8c3 b06e 	str.w	fp, [r3, #110]	@ 0x6e
900059ec:	f44f 7bb0 	mov.w	fp, #352	@ 0x160
900059f0:	f883 7090 	strb.w	r7, [r3, #144]	@ 0x90
900059f4:	f04f 070e 	mov.w	r7, #14
900059f8:	f8c3 b07a 	str.w	fp, [r3, #122]	@ 0x7a
900059fc:	f44f 7bc0 	mov.w	fp, #384	@ 0x180
90005a00:	4eba      	ldr	r6, [pc, #744]	@ (90005cec <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3ec>)
90005a02:	f8c3 b086 	str.w	fp, [r3, #134]	@ 0x86
90005a06:	f44f 7bd0 	mov.w	fp, #416	@ 0x1a0
90005a0a:	f883 709c 	strb.w	r7, [r3, #156]	@ 0x9c
90005a0e:	f8c3 b092 	str.w	fp, [r3, #146]	@ 0x92
90005a12:	f04f 0b11 	mov.w	fp, #17
90005a16:	4fb6      	ldr	r7, [pc, #728]	@ (90005cf0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3f0>)
90005a18:	f8c3 2066 	str.w	r2, [r3, #102]	@ 0x66
90005a1c:	f8a3 106a 	strh.w	r1, [r3, #106]	@ 0x6a
90005a20:	f8c3 2072 	str.w	r2, [r3, #114]	@ 0x72
90005a24:	f8a3 1076 	strh.w	r1, [r3, #118]	@ 0x76
90005a28:	f8c3 207e 	str.w	r2, [r3, #126]	@ 0x7e
90005a2c:	f8a3 1082 	strh.w	r1, [r3, #130]	@ 0x82
90005a30:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
90005a34:	f8c3 208a 	str.w	r2, [r3, #138]	@ 0x8a
90005a38:	f8a3 108e 	strh.w	r1, [r3, #142]	@ 0x8e
90005a3c:	f8c3 2096 	str.w	r2, [r3, #150]	@ 0x96
90005a40:	f8a3 109a 	strh.w	r1, [r3, #154]	@ 0x9a
90005a44:	f8c3 209e 	str.w	r2, [r3, #158]	@ 0x9e
90005a48:	f8c3 20a2 	str.w	r2, [r3, #162]	@ 0xa2
90005a4c:	f8a3 10a6 	strh.w	r1, [r3, #166]	@ 0xa6
90005a50:	f8c3 20ae 	str.w	r2, [r3, #174]	@ 0xae
90005a54:	f8a3 10b2 	strh.w	r1, [r3, #178]	@ 0xb2
90005a58:	f8c3 70b6 	str.w	r7, [r3, #182]	@ 0xb6
90005a5c:	37c0      	adds	r7, #192	@ 0xc0
90005a5e:	f8c3 20ba 	str.w	r2, [r3, #186]	@ 0xba
90005a62:	f8a3 10be 	strh.w	r1, [r3, #190]	@ 0xbe
90005a66:	f883 e06c 	strb.w	lr, [r3, #108]	@ 0x6c
90005a6a:	f883 80a8 	strb.w	r8, [r3, #168]	@ 0xa8
90005a6e:	f8c3 60aa 	str.w	r6, [r3, #170]	@ 0xaa
90005a72:	f883 c0b4 	strb.w	ip, [r3, #180]	@ 0xb4
90005a76:	f883 b0c0 	strb.w	fp, [r3, #192]	@ 0xc0
90005a7a:	f8df b278 	ldr.w	fp, [pc, #632]	@ 90005cf4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3f4>
90005a7e:	f8c3 20c6 	str.w	r2, [r3, #198]	@ 0xc6
90005a82:	f8c3 b0c2 	str.w	fp, [r3, #194]	@ 0xc2
90005a86:	f04f 0b12 	mov.w	fp, #18
90005a8a:	f8a3 10ca 	strh.w	r1, [r3, #202]	@ 0xca
90005a8e:	f883 b0cc 	strb.w	fp, [r3, #204]	@ 0xcc
90005a92:	f8df b264 	ldr.w	fp, [pc, #612]	@ 90005cf8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3f8>
90005a96:	f8c3 20d2 	str.w	r2, [r3, #210]	@ 0xd2
90005a9a:	f8c3 b0ce 	str.w	fp, [r3, #206]	@ 0xce
90005a9e:	f04f 0b13 	mov.w	fp, #19
90005aa2:	f8a3 10d6 	strh.w	r1, [r3, #214]	@ 0xd6
90005aa6:	f883 b0d8 	strb.w	fp, [r3, #216]	@ 0xd8
90005aaa:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90005cfc <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3fc>
90005aae:	f8c3 20de 	str.w	r2, [r3, #222]	@ 0xde
90005ab2:	f8c3 b0da 	str.w	fp, [r3, #218]	@ 0xda
90005ab6:	f04f 0b14 	mov.w	fp, #20
90005aba:	f8a3 10e2 	strh.w	r1, [r3, #226]	@ 0xe2
90005abe:	f883 b0e4 	strb.w	fp, [r3, #228]	@ 0xe4
90005ac2:	f8df b23c 	ldr.w	fp, [pc, #572]	@ 90005d00 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x400>
90005ac6:	f8c3 20ea 	str.w	r2, [r3, #234]	@ 0xea
90005aca:	f8c3 b0e6 	str.w	fp, [r3, #230]	@ 0xe6
90005ace:	f04f 0b15 	mov.w	fp, #21
90005ad2:	f8a3 10ee 	strh.w	r1, [r3, #238]	@ 0xee
90005ad6:	f883 b0f0 	strb.w	fp, [r3, #240]	@ 0xf0
90005ada:	f8df b228 	ldr.w	fp, [pc, #552]	@ 90005d04 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x404>
90005ade:	f8c3 20f6 	str.w	r2, [r3, #246]	@ 0xf6
90005ae2:	f8c3 b0f2 	str.w	fp, [r3, #242]	@ 0xf2
90005ae6:	f04f 0b16 	mov.w	fp, #22
90005aea:	f8a3 10fa 	strh.w	r1, [r3, #250]	@ 0xfa
90005aee:	f883 b0fc 	strb.w	fp, [r3, #252]	@ 0xfc
90005af2:	f04f 0b17 	mov.w	fp, #23
90005af6:	f8c3 2102 	str.w	r2, [r3, #258]	@ 0x102
90005afa:	f883 b108 	strb.w	fp, [r3, #264]	@ 0x108
90005afe:	f8df b208 	ldr.w	fp, [pc, #520]	@ 90005d08 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x408>
90005b02:	f8a3 1106 	strh.w	r1, [r3, #262]	@ 0x106
90005b06:	f8c3 b10a 	str.w	fp, [r3, #266]	@ 0x10a
90005b0a:	f04f 0b18 	mov.w	fp, #24
90005b0e:	f8c3 210e 	str.w	r2, [r3, #270]	@ 0x10e
90005b12:	f883 b114 	strb.w	fp, [r3, #276]	@ 0x114
90005b16:	f8df b1f4 	ldr.w	fp, [pc, #500]	@ 90005d0c <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x40c>
90005b1a:	f8a3 1112 	strh.w	r1, [r3, #274]	@ 0x112
90005b1e:	f8c3 b116 	str.w	fp, [r3, #278]	@ 0x116
90005b22:	f04f 0b19 	mov.w	fp, #25
90005b26:	f8c3 211a 	str.w	r2, [r3, #282]	@ 0x11a
90005b2a:	f883 b120 	strb.w	fp, [r3, #288]	@ 0x120
90005b2e:	f8df b1e0 	ldr.w	fp, [pc, #480]	@ 90005d10 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x410>
90005b32:	f8a3 111e 	strh.w	r1, [r3, #286]	@ 0x11e
90005b36:	f8c3 70fe 	str.w	r7, [r3, #254]	@ 0xfe
90005b3a:	f8c3 b122 	str.w	fp, [r3, #290]	@ 0x122
90005b3e:	f883 a174 	strb.w	sl, [r3, #372]	@ 0x174
90005b42:	f04f 0a1a 	mov.w	sl, #26
90005b46:	f8c3 2126 	str.w	r2, [r3, #294]	@ 0x126
90005b4a:	f883 a12c 	strb.w	sl, [r3, #300]	@ 0x12c
90005b4e:	f44f 0ad8 	mov.w	sl, #7077888	@ 0x6c0000
90005b52:	f8a3 112a 	strh.w	r1, [r3, #298]	@ 0x12a
90005b56:	f8c3 a12e 	str.w	sl, [r3, #302]	@ 0x12e
90005b5a:	f04f 0a1b 	mov.w	sl, #27
90005b5e:	f8c3 2132 	str.w	r2, [r3, #306]	@ 0x132
90005b62:	f883 a138 	strb.w	sl, [r3, #312]	@ 0x138
90005b66:	f8df a1ac 	ldr.w	sl, [pc, #428]	@ 90005d14 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x414>
90005b6a:	f8a3 1136 	strh.w	r1, [r3, #310]	@ 0x136
90005b6e:	f8c3 a13a 	str.w	sl, [r3, #314]	@ 0x13a
90005b72:	f04f 0a1c 	mov.w	sl, #28
90005b76:	f8c3 213e 	str.w	r2, [r3, #318]	@ 0x13e
90005b7a:	f883 a144 	strb.w	sl, [r3, #324]	@ 0x144
90005b7e:	f8df a198 	ldr.w	sl, [pc, #408]	@ 90005d18 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x418>
90005b82:	f8a3 1142 	strh.w	r1, [r3, #322]	@ 0x142
90005b86:	f8c3 a146 	str.w	sl, [r3, #326]	@ 0x146
90005b8a:	f04f 0a1d 	mov.w	sl, #29
90005b8e:	f8c3 214a 	str.w	r2, [r3, #330]	@ 0x14a
90005b92:	f883 a150 	strb.w	sl, [r3, #336]	@ 0x150
90005b96:	f8df a184 	ldr.w	sl, [pc, #388]	@ 90005d1c <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x41c>
90005b9a:	f8a3 114e 	strh.w	r1, [r3, #334]	@ 0x14e
90005b9e:	f8c3 a152 	str.w	sl, [r3, #338]	@ 0x152
90005ba2:	f04f 0a1e 	mov.w	sl, #30
90005ba6:	f8c3 2156 	str.w	r2, [r3, #342]	@ 0x156
90005baa:	f883 a15c 	strb.w	sl, [r3, #348]	@ 0x15c
90005bae:	f8df a170 	ldr.w	sl, [pc, #368]	@ 90005d20 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x420>
90005bb2:	f8a3 115a 	strh.w	r1, [r3, #346]	@ 0x15a
90005bb6:	f8c3 a15e 	str.w	sl, [r3, #350]	@ 0x15e
90005bba:	f04f 0a1f 	mov.w	sl, #31
90005bbe:	f8c3 2162 	str.w	r2, [r3, #354]	@ 0x162
90005bc2:	f883 a168 	strb.w	sl, [r3, #360]	@ 0x168
90005bc6:	f8df a15c 	ldr.w	sl, [pc, #348]	@ 90005d24 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x424>
90005bca:	f8a3 1166 	strh.w	r1, [r3, #358]	@ 0x166
90005bce:	f8c3 a16a 	str.w	sl, [r3, #362]	@ 0x16a
90005bd2:	f10a 0a20 	add.w	sl, sl, #32
90005bd6:	f8c3 216e 	str.w	r2, [r3, #366]	@ 0x16e
90005bda:	f8c3 a176 	str.w	sl, [r3, #374]	@ 0x176
90005bde:	f04f 0a21 	mov.w	sl, #33	@ 0x21
90005be2:	f8a3 1172 	strh.w	r1, [r3, #370]	@ 0x172
90005be6:	f883 a180 	strb.w	sl, [r3, #384]	@ 0x180
90005bea:	f8df a13c 	ldr.w	sl, [pc, #316]	@ 90005d28 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x428>
90005bee:	f8c3 217a 	str.w	r2, [r3, #378]	@ 0x17a
90005bf2:	f8a3 117e 	strh.w	r1, [r3, #382]	@ 0x17e
90005bf6:	f8c3 2186 	str.w	r2, [r3, #390]	@ 0x186
90005bfa:	f8c3 a182 	str.w	sl, [r3, #386]	@ 0x182
90005bfe:	f04f 0a22 	mov.w	sl, #34	@ 0x22
90005c02:	f8a3 118a 	strh.w	r1, [r3, #394]	@ 0x18a
90005c06:	f883 a18c 	strb.w	sl, [r3, #396]	@ 0x18c
90005c0a:	f8df a120 	ldr.w	sl, [pc, #288]	@ 90005d2c <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x42c>
90005c0e:	f8c3 2192 	str.w	r2, [r3, #402]	@ 0x192
90005c12:	f8c3 a18e 	str.w	sl, [r3, #398]	@ 0x18e
90005c16:	f04f 0a23 	mov.w	sl, #35	@ 0x23
90005c1a:	f8a3 1196 	strh.w	r1, [r3, #406]	@ 0x196
90005c1e:	f883 a198 	strb.w	sl, [r3, #408]	@ 0x198
90005c22:	f8df a10c 	ldr.w	sl, [pc, #268]	@ 90005d30 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x430>
90005c26:	f8c3 219e 	str.w	r2, [r3, #414]	@ 0x19e
90005c2a:	f8c3 a19a 	str.w	sl, [r3, #410]	@ 0x19a
90005c2e:	f04f 0a24 	mov.w	sl, #36	@ 0x24
90005c32:	f8a3 11a2 	strh.w	r1, [r3, #418]	@ 0x1a2
90005c36:	f883 a1a4 	strb.w	sl, [r3, #420]	@ 0x1a4
90005c3a:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90005d34 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x434>
90005c3e:	f8c3 21aa 	str.w	r2, [r3, #426]	@ 0x1aa
90005c42:	f8c3 a1a6 	str.w	sl, [r3, #422]	@ 0x1a6
90005c46:	f04f 0a25 	mov.w	sl, #37	@ 0x25
90005c4a:	f8a3 11ae 	strh.w	r1, [r3, #430]	@ 0x1ae
90005c4e:	f883 a1b0 	strb.w	sl, [r3, #432]	@ 0x1b0
90005c52:	f8df a0e4 	ldr.w	sl, [pc, #228]	@ 90005d38 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x438>
90005c56:	f8c3 21b6 	str.w	r2, [r3, #438]	@ 0x1b6
90005c5a:	f8c3 a1b2 	str.w	sl, [r3, #434]	@ 0x1b2
90005c5e:	f04f 0a26 	mov.w	sl, #38	@ 0x26
90005c62:	f8a3 11ba 	strh.w	r1, [r3, #442]	@ 0x1ba
90005c66:	f883 a1bc 	strb.w	sl, [r3, #444]	@ 0x1bc
90005c6a:	f8df a0d0 	ldr.w	sl, [pc, #208]	@ 90005d3c <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x43c>
90005c6e:	f8c3 21c2 	str.w	r2, [r3, #450]	@ 0x1c2
90005c72:	f8c3 a1be 	str.w	sl, [r3, #446]	@ 0x1be
90005c76:	f04f 0a27 	mov.w	sl, #39	@ 0x27
90005c7a:	f8a3 11c6 	strh.w	r1, [r3, #454]	@ 0x1c6
90005c7e:	f883 a1c8 	strb.w	sl, [r3, #456]	@ 0x1c8
90005c82:	f8df a0bc 	ldr.w	sl, [pc, #188]	@ 90005d40 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x440>
90005c86:	f8c3 21ce 	str.w	r2, [r3, #462]	@ 0x1ce
90005c8a:	f8c3 a1ca 	str.w	sl, [r3, #458]	@ 0x1ca
90005c8e:	f04f 0a28 	mov.w	sl, #40	@ 0x28
90005c92:	f8a3 11d2 	strh.w	r1, [r3, #466]	@ 0x1d2
90005c96:	f883 a1d4 	strb.w	sl, [r3, #468]	@ 0x1d4
90005c9a:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 90005d44 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x444>
90005c9e:	f8c3 21da 	str.w	r2, [r3, #474]	@ 0x1da
90005ca2:	f8c3 a1d6 	str.w	sl, [r3, #470]	@ 0x1d6
90005ca6:	f04f 0a29 	mov.w	sl, #41	@ 0x29
90005caa:	f8a3 11de 	strh.w	r1, [r3, #478]	@ 0x1de
90005cae:	f883 a1e0 	strb.w	sl, [r3, #480]	@ 0x1e0
90005cb2:	f8df a094 	ldr.w	sl, [pc, #148]	@ 90005d48 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x448>
90005cb6:	f8c3 21e6 	str.w	r2, [r3, #486]	@ 0x1e6
90005cba:	f8a3 11ea 	strh.w	r1, [r3, #490]	@ 0x1ea
90005cbe:	f8c3 a1e2 	str.w	sl, [r3, #482]	@ 0x1e2
90005cc2:	f04f 0a2a 	mov.w	sl, #42	@ 0x2a
90005cc6:	f8a3 11f6 	strh.w	r1, [r3, #502]	@ 0x1f6
90005cca:	f8a3 1202 	strh.w	r1, [r3, #514]	@ 0x202
90005cce:	f8a3 120e 	strh.w	r1, [r3, #526]	@ 0x20e
90005cd2:	f8a3 121a 	strh.w	r1, [r3, #538]	@ 0x21a
90005cd6:	f8a3 1226 	strh.w	r1, [r3, #550]	@ 0x226
90005cda:	f8a3 1232 	strh.w	r1, [r3, #562]	@ 0x232
90005cde:	f8a3 123e 	strh.w	r1, [r3, #574]	@ 0x23e
90005ce2:	e033      	b.n	90005d4c <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x44c>
90005ce4:	2400a040 	.word	0x2400a040
90005ce8:	00360020 	.word	0x00360020
90005cec:	00360040 	.word	0x00360040
90005cf0:	00360060 	.word	0x00360060
90005cf4:	00360080 	.word	0x00360080
90005cf8:	003600a0 	.word	0x003600a0
90005cfc:	003600c0 	.word	0x003600c0
90005d00:	003600e0 	.word	0x003600e0
90005d04:	00360100 	.word	0x00360100
90005d08:	00360140 	.word	0x00360140
90005d0c:	00360160 	.word	0x00360160
90005d10:	00360180 	.word	0x00360180
90005d14:	006c0020 	.word	0x006c0020
90005d18:	006c0040 	.word	0x006c0040
90005d1c:	006c0060 	.word	0x006c0060
90005d20:	006c0080 	.word	0x006c0080
90005d24:	006c00a0 	.word	0x006c00a0
90005d28:	006c00e0 	.word	0x006c00e0
90005d2c:	006c0100 	.word	0x006c0100
90005d30:	006c0120 	.word	0x006c0120
90005d34:	006c0140 	.word	0x006c0140
90005d38:	006c0160 	.word	0x006c0160
90005d3c:	00a20040 	.word	0x00a20040
90005d40:	00a20060 	.word	0x00a20060
90005d44:	00a20080 	.word	0x00a20080
90005d48:	00a200a0 	.word	0x00a200a0
90005d4c:	4959      	ldr	r1, [pc, #356]	@ (90005eb4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5b4>)
90005d4e:	485a      	ldr	r0, [pc, #360]	@ (90005eb8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5b8>)
90005d50:	f8c3 11ee 	str.w	r1, [r3, #494]	@ 0x1ee
90005d54:	212b      	movs	r1, #43	@ 0x2b
90005d56:	f8c3 21f2 	str.w	r2, [r3, #498]	@ 0x1f2
90005d5a:	f883 11f8 	strb.w	r1, [r3, #504]	@ 0x1f8
90005d5e:	4957      	ldr	r1, [pc, #348]	@ (90005ebc <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5bc>)
90005d60:	f8c3 21fe 	str.w	r2, [r3, #510]	@ 0x1fe
90005d64:	f8c3 11fa 	str.w	r1, [r3, #506]	@ 0x1fa
90005d68:	212c      	movs	r1, #44	@ 0x2c
90005d6a:	f8c3 220a 	str.w	r2, [r3, #522]	@ 0x20a
90005d6e:	f883 1204 	strb.w	r1, [r3, #516]	@ 0x204
90005d72:	4953      	ldr	r1, [pc, #332]	@ (90005ec0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5c0>)
90005d74:	f8c3 2216 	str.w	r2, [r3, #534]	@ 0x216
90005d78:	f8c3 1206 	str.w	r1, [r3, #518]	@ 0x206
90005d7c:	212d      	movs	r1, #45	@ 0x2d
90005d7e:	f8c3 2222 	str.w	r2, [r3, #546]	@ 0x222
90005d82:	f883 1210 	strb.w	r1, [r3, #528]	@ 0x210
90005d86:	494f      	ldr	r1, [pc, #316]	@ (90005ec4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5c4>)
90005d88:	f8c3 222e 	str.w	r2, [r3, #558]	@ 0x22e
90005d8c:	f8c3 1212 	str.w	r1, [r3, #530]	@ 0x212
90005d90:	212e      	movs	r1, #46	@ 0x2e
90005d92:	f8c3 223a 	str.w	r2, [r3, #570]	@ 0x23a
90005d96:	f883 121c 	strb.w	r1, [r3, #540]	@ 0x21c
90005d9a:	494b      	ldr	r1, [pc, #300]	@ (90005ec8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5c8>)
90005d9c:	f883 a1ec 	strb.w	sl, [r3, #492]	@ 0x1ec
90005da0:	f8c3 121e 	str.w	r1, [r3, #542]	@ 0x21e
90005da4:	212f      	movs	r1, #47	@ 0x2f
90005da6:	f8c3 7246 	str.w	r7, [r3, #582]	@ 0x246
90005daa:	f883 1228 	strb.w	r1, [r3, #552]	@ 0x228
90005dae:	4947      	ldr	r1, [pc, #284]	@ (90005ecc <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5cc>)
90005db0:	f8a3 824a 	strh.w	r8, [r3, #586]	@ 0x24a
90005db4:	f8c3 122a 	str.w	r1, [r3, #554]	@ 0x22a
90005db8:	2130      	movs	r1, #48	@ 0x30
90005dba:	6004      	str	r4, [r0, #0]
90005dbc:	f883 1234 	strb.w	r1, [r3, #564]	@ 0x234
90005dc0:	4943      	ldr	r1, [pc, #268]	@ (90005ed0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5d0>)
90005dc2:	4d44      	ldr	r5, [pc, #272]	@ (90005ed4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5d4>)
90005dc4:	f8c3 1236 	str.w	r1, [r3, #566]	@ 0x236
90005dc8:	2131      	movs	r1, #49	@ 0x31
90005dca:	f883 1240 	strb.w	r1, [r3, #576]	@ 0x240
90005dce:	4942      	ldr	r1, [pc, #264]	@ (90005ed8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5d8>)
90005dd0:	f8c3 1242 	str.w	r1, [r3, #578]	@ 0x242

	{Rect(0, 54*4, MOD_KEY_WIDTH, MOD_KEY_HEIGHT), 0, BITMAP_KEYBOARD_CTRL_HIGHLIGHTED_ID},       // CTRL
	{Rect(64, 54*4, MOD_KEY_WIDTH, MOD_KEY_HEIGHT), 0, BITMAP_KEYBOARD_MOD_HIGHLIGHTED_ID},       // MOD
    {Rect(13*32, 54*4, MOD_KEY_WIDTH, MOD_KEY_HEIGHT), 0, BITMAP_KEYBOARD_ALT_HIGHLIGHTED_ID},       // ALT

};
90005dd4:	f04f 0307 	mov.w	r3, #7
90005dd8:	6042      	str	r2, [r0, #4]
90005dda:	8383      	strh	r3, [r0, #28]
90005ddc:	f04f 0305 	mov.w	r3, #5
90005de0:	6642      	str	r2, [r0, #100]	@ 0x64
90005de2:	8783      	strh	r3, [r0, #60]	@ 0x3c
90005de4:	4b3d      	ldr	r3, [pc, #244]	@ (90005edc <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5dc>)
90005de6:	6742      	str	r2, [r0, #116]	@ 0x74
90005de8:	6443      	str	r3, [r0, #68]	@ 0x44
90005dea:	f04f 0309 	mov.w	r3, #9
90005dee:	f8a0 e00c 	strh.w	lr, [r0, #12]
90005df2:	f8a0 304c 	strh.w	r3, [r0, #76]	@ 0x4c
90005df6:	f04f 030e 	mov.w	r3, #14
90005dfa:	f8a0 c02c 	strh.w	ip, [r0, #44]	@ 0x2c
90005dfe:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90005e02:	f04f 030b 	mov.w	r3, #11
90005e06:	6084      	str	r4, [r0, #8]
90005e08:	f8a0 306c 	strh.w	r3, [r0, #108]	@ 0x6c
90005e0c:	f04f 0308 	mov.w	r3, #8
90005e10:	6484      	str	r4, [r0, #72]	@ 0x48
90005e12:	f8a0 307c 	strh.w	r3, [r0, #124]	@ 0x7c
90005e16:	f44f 73e0 	mov.w	r3, #448	@ 0x1c0
90005e1a:	6684      	str	r4, [r0, #104]	@ 0x68
90005e1c:	6103      	str	r3, [r0, #16]
90005e1e:	f44f 1358 	mov.w	r3, #3538944	@ 0x360000
90005e22:	6784      	str	r4, [r0, #120]	@ 0x78
90005e24:	6203      	str	r3, [r0, #32]
90005e26:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
90005e2a:	f8c0 6084 	str.w	r6, [r0, #132]	@ 0x84
90005e2e:	6303      	str	r3, [r0, #48]	@ 0x30
90005e30:	4b2b      	ldr	r3, [pc, #172]	@ (90005ee0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5e0>)
90005e32:	6403      	str	r3, [r0, #64]	@ 0x40
90005e34:	f44f 0322 	mov.w	r3, #10616832	@ 0xa20000
90005e38:	6503      	str	r3, [r0, #80]	@ 0x50
90005e3a:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
90005e3e:	6603      	str	r3, [r0, #96]	@ 0x60
90005e40:	3320      	adds	r3, #32
90005e42:	6703      	str	r3, [r0, #112]	@ 0x70
90005e44:	f44f 0358 	mov.w	r3, #14155776	@ 0xd80000
90005e48:	e9c0 2405 	strd	r2, r4, [r0, #20]
90005e4c:	e9c0 2409 	strd	r2, r4, [r0, #36]	@ 0x24
90005e50:	e9c0 640d 	strd	r6, r4, [r0, #52]	@ 0x34
90005e54:	e9c0 6415 	strd	r6, r4, [r0, #84]	@ 0x54
90005e58:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
90005e5c:	f04f 0306 	mov.w	r3, #6
        : color(col)
90005e60:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
90005e64:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
90005e68:	f8a0 308c 	strh.w	r3, [r0, #140]	@ 0x8c
90005e6c:	f04f 030d 	mov.w	r3, #13
90005e70:	626a      	str	r2, [r5, #36]	@ 0x24
90005e72:	f8a0 309c 	strh.w	r3, [r0, #156]	@ 0x9c
90005e76:	f04f 0303 	mov.w	r3, #3
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005e7a:	4a1a      	ldr	r2, [pc, #104]	@ (90005ee4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5e4>)
90005e7c:	f8a0 30ac 	strh.w	r3, [r0, #172]	@ 0xac
90005e80:	4b19      	ldr	r3, [pc, #100]	@ (90005ee8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5e8>)
        : typedTextId(id)
90005e82:	f8a5 9020 	strh.w	r9, [r5, #32]
90005e86:	f8c5 3012 	str.w	r3, [r5, #18]
90005e8a:	4b18      	ldr	r3, [pc, #96]	@ (90005eec <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5ec>)
90005e8c:	f8c0 6094 	str.w	r6, [r0, #148]	@ 0x94
90005e90:	61eb      	str	r3, [r5, #28]
90005e92:	4b17      	ldr	r3, [pc, #92]	@ (90005ef0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5f0>)
90005e94:	f8c0 60a4 	str.w	r6, [r0, #164]	@ 0xa4
90005e98:	f8c0 4098 	str.w	r4, [r0, #152]	@ 0x98
90005e9c:	f8c0 40a8 	str.w	r4, [r0, #168]	@ 0xa8
90005ea0:	f8c5 4016 	str.w	r4, [r5, #22]
        : color(col)
90005ea4:	62ec      	str	r4, [r5, #44]	@ 0x2c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005ea6:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
90005eaa:	f8c0 30a0 	str.w	r3, [r0, #160]	@ 0xa0
90005eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005eb2:	bf00      	nop
90005eb4:	00a200c0 	.word	0x00a200c0
90005eb8:	24009f90 	.word	0x24009f90
90005ebc:	00a200e0 	.word	0x00a200e0
90005ec0:	00a20100 	.word	0x00a20100
90005ec4:	00a20120 	.word	0x00a20120
90005ec8:	00a20140 	.word	0x00a20140
90005ecc:	00a20160 	.word	0x00a20160
90005ed0:	00a20180 	.word	0x00a20180
90005ed4:	2400009c 	.word	0x2400009c
90005ed8:	00d80080 	.word	0x00d80080
90005edc:	00360060 	.word	0x00360060
90005ee0:	006c0180 	.word	0x006c0180
90005ee4:	00d80040 	.word	0x00d80040
90005ee8:	01f401f4 	.word	0x01f401f4
90005eec:	9002eefc 	.word	0x9002eefc
90005ef0:	00d801a0 	.word	0x00d801a0

90005ef4 <_ZN23KeyboardScreenPresenterD1Ev>:

    void HandleButtonPressed();
    void toggleKeyboardModifier(uint8_t modifiers);
    void handleNormalKey(uint16_t key);

    virtual ~KeyboardScreenPresenter() {}
90005ef4:	4770      	bx	lr
90005ef6:	bf00      	nop

90005ef8 <_ZThn4_N23KeyboardScreenPresenterD1Ev>:
90005ef8:	3804      	subs	r0, #4
90005efa:	4770      	bx	lr

90005efc <_ZN23KeyboardScreenPresenter10deactivateEv>:
}

void KeyboardScreenPresenter::activate()
{

}
90005efc:	4770      	bx	lr
90005efe:	bf00      	nop

90005f00 <_ZN23KeyboardScreenPresenter19HandleButtonPressedEv>:

}

void KeyboardScreenPresenter::HandleButtonPressed()
{
	view.goToTouchpadScreen();
90005f00:	68c0      	ldr	r0, [r0, #12]
90005f02:	6803      	ldr	r3, [r0, #0]
90005f04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005f06:	4718      	bx	r3

90005f08 <_ZN23KeyboardScreenPresenterD0Ev>:
90005f08:	b510      	push	{r4, lr}
90005f0a:	4604      	mov	r4, r0
90005f0c:	2110      	movs	r1, #16
90005f0e:	f025 fe44 	bl	9002bb9a <_ZdlPvj>
90005f12:	4620      	mov	r0, r4
90005f14:	bd10      	pop	{r4, pc}
90005f16:	bf00      	nop

90005f18 <_ZThn4_N23KeyboardScreenPresenterD0Ev>:
90005f18:	b510      	push	{r4, lr}
90005f1a:	1f04      	subs	r4, r0, #4
90005f1c:	2110      	movs	r1, #16
90005f1e:	4620      	mov	r0, r4
90005f20:	f025 fe3b 	bl	9002bb9a <_ZdlPvj>
90005f24:	4620      	mov	r0, r4
90005f26:	bd10      	pop	{r4, pc}

90005f28 <_ZThn4_N23KeyboardScreenPresenter19HandleButtonPressedEv>:
    void HandleButtonPressed();
90005f28:	6880      	ldr	r0, [r0, #8]
90005f2a:	6803      	ldr	r3, [r0, #0]
90005f2c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005f2e:	4718      	bx	r3

90005f30 <_ZN23KeyboardScreenPresenterC1ER18KeyboardScreenView>:
    : view(v)
90005f30:	4a05      	ldr	r2, [pc, #20]	@ (90005f48 <_ZN23KeyboardScreenPresenterC1ER18KeyboardScreenView+0x18>)
90005f32:	60c1      	str	r1, [r0, #12]
90005f34:	6002      	str	r2, [r0, #0]
KeyboardScreenPresenter::KeyboardScreenPresenter(KeyboardScreenView& v)
90005f36:	b410      	push	{r4}
    ModelListener() : model(0) {}
90005f38:	2400      	movs	r4, #0
90005f3a:	6084      	str	r4, [r0, #8]
    : view(v)
90005f3c:	f102 041c 	add.w	r4, r2, #28
90005f40:	6044      	str	r4, [r0, #4]
}
90005f42:	f85d 4b04 	ldr.w	r4, [sp], #4
90005f46:	4770      	bx	lr
90005f48:	9002faec 	.word	0x9002faec

90005f4c <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>:
}

void KeyboardScreenPresenter::toggleKeyboardModifier(uint8_t modifiers)
{
	model->toggleKeyboardModifier(modifiers);
90005f4c:	6880      	ldr	r0, [r0, #8]
90005f4e:	f000 bcab 	b.w	900068a8 <_ZN5Model22toggleKeyboardModifierEh>
90005f52:	bf00      	nop

90005f54 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>:
}

void KeyboardScreenPresenter::handleNormalKey(uint16_t key)
{
	model->handleNormalKey(key);
90005f54:	6880      	ldr	r0, [r0, #8]
90005f56:	f000 bcab 	b.w	900068b0 <_ZN5Model15handleNormalKeyEt>
90005f5a:	bf00      	nop

90005f5c <_ZN18KeyboardScreenView14tearDownScreenEv>:
}

void KeyboardScreenView::tearDownScreen()
{
    KeyboardScreenViewBase::tearDownScreen();
}
90005f5c:	4770      	bx	lr
90005f5e:	bf00      	nop

90005f60 <_ZN8touchgfx8CallbackI18KeyboardScreenViewtvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005f60:	4770      	bx	lr
90005f62:	bf00      	nop

90005f64 <_ZN8touchgfx8CallbackI18KeyboardScreenViewvvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005f64:	4770      	bx	lr
90005f66:	bf00      	nop

90005f68 <_ZN8touchgfx8CallbackI18KeyboardScreenViewtvvE7executeEt>:
    virtual void execute(T1 t1)
90005f68:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005f6a:	68c3      	ldr	r3, [r0, #12]
90005f6c:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90005f70:	f013 0f01 	tst.w	r3, #1
90005f74:	eb04 0063 	add.w	r0, r4, r3, asr #1
90005f78:	d004      	beq.n	90005f84 <_ZN8touchgfx8CallbackI18KeyboardScreenViewtvvE7executeEt+0x1c>
90005f7a:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005f7e:	f854 300c 	ldr.w	r3, [r4, ip]
90005f82:	589a      	ldr	r2, [r3, r2]
    }
90005f84:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005f88:	4710      	bx	r2
90005f8a:	bf00      	nop

90005f8c <_ZNK8touchgfx8CallbackI18KeyboardScreenViewtvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005f8c:	6843      	ldr	r3, [r0, #4]
90005f8e:	b13b      	cbz	r3, 90005fa0 <_ZNK8touchgfx8CallbackI18KeyboardScreenViewtvvE7isValidEv+0x14>
90005f90:	6883      	ldr	r3, [r0, #8]
90005f92:	b10b      	cbz	r3, 90005f98 <_ZNK8touchgfx8CallbackI18KeyboardScreenViewtvvE7isValidEv+0xc>
90005f94:	2001      	movs	r0, #1
    }
90005f96:	4770      	bx	lr
90005f98:	68c0      	ldr	r0, [r0, #12]
90005f9a:	f000 0001 	and.w	r0, r0, #1
90005f9e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005fa0:	4618      	mov	r0, r3
90005fa2:	4770      	bx	lr

90005fa4 <_ZN8touchgfx8CallbackI18KeyboardScreenViewvvvE7executeEv>:
        (pobject->*pmemfun)();
90005fa4:	1d01      	adds	r1, r0, #4
90005fa6:	c90e      	ldmia	r1, {r1, r2, r3}
90005fa8:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005fac:	eb01 0063 	add.w	r0, r1, r3, asr #1
90005fb0:	07db      	lsls	r3, r3, #31
90005fb2:	d502      	bpl.n	90005fba <_ZN8touchgfx8CallbackI18KeyboardScreenViewvvvE7executeEv+0x16>
90005fb4:	f851 300c 	ldr.w	r3, [r1, ip]
90005fb8:	589a      	ldr	r2, [r3, r2]
90005fba:	4710      	bx	r2

90005fbc <_ZNK8touchgfx8CallbackI18KeyboardScreenViewvvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005fbc:	6843      	ldr	r3, [r0, #4]
90005fbe:	b13b      	cbz	r3, 90005fd0 <_ZNK8touchgfx8CallbackI18KeyboardScreenViewvvvE7isValidEv+0x14>
90005fc0:	6883      	ldr	r3, [r0, #8]
90005fc2:	b10b      	cbz	r3, 90005fc8 <_ZNK8touchgfx8CallbackI18KeyboardScreenViewvvvE7isValidEv+0xc>
90005fc4:	2001      	movs	r0, #1
    }
90005fc6:	4770      	bx	lr
90005fc8:	68c0      	ldr	r0, [r0, #12]
90005fca:	f000 0001 	and.w	r0, r0, #1
90005fce:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005fd0:	4618      	mov	r0, r3
90005fd2:	4770      	bx	lr

90005fd4 <_ZN8touchgfx8CallbackI18KeyboardScreenViewvvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005fd4:	b510      	push	{r4, lr}
90005fd6:	4604      	mov	r4, r0
90005fd8:	2110      	movs	r1, #16
90005fda:	f025 fdde 	bl	9002bb9a <_ZdlPvj>
90005fde:	4620      	mov	r0, r4
90005fe0:	bd10      	pop	{r4, pc}
90005fe2:	bf00      	nop

90005fe4 <_ZN8touchgfx8CallbackI18KeyboardScreenViewtvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005fe4:	b510      	push	{r4, lr}
90005fe6:	4604      	mov	r4, r0
90005fe8:	2110      	movs	r1, #16
90005fea:	f025 fdd6 	bl	9002bb9a <_ZdlPvj>
90005fee:	4620      	mov	r0, r4
90005ff0:	bd10      	pop	{r4, pc}
90005ff2:	bf00      	nop

90005ff4 <_ZN18KeyboardScreenView17escPressedHandlerEv>:

void KeyboardScreenView::escPressedHandler()
{
	presenter->handleNormalKey(0x1);
90005ff4:	2101      	movs	r1, #1
90005ff6:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90005ff8:	f7ff bfac 	b.w	90005f54 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90005ffc <_ZN18KeyboardScreenView17delPressedHandlerEv>:
	touchgfx_printf("ESC pressed\n");
}

void KeyboardScreenView::delPressedHandler()
{
	presenter->handleNormalKey(0x2);
90005ffc:	2102      	movs	r1, #2
90005ffe:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006000:	f7ff bfa8 	b.w	90005f54 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90006004 <_ZN18KeyboardScreenView17tabPressedHandlerEv>:
}

void KeyboardScreenView::tabPressedHandler()
{
	presenter->handleNormalKey(0x3);
90006004:	2103      	movs	r1, #3
90006006:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006008:	f7ff bfa4 	b.w	90005f54 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

9000600c <_ZN18KeyboardScreenView23backspacePressedHandlerEv>:
}
void KeyboardScreenView::backspacePressedHandler()
{
	presenter->handleNormalKey(0x4);
9000600c:	2104      	movs	r1, #4
9000600e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006010:	f7ff bfa0 	b.w	90005f54 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90006014 <_ZN18KeyboardScreenView19enterPressedHandlerEv>:
}

void KeyboardScreenView::enterPressedHandler()
{
	presenter->handleNormalKey(0x5);
90006014:	2105      	movs	r1, #5
90006016:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006018:	f7ff bf9c 	b.w	90005f54 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

9000601c <_ZN18KeyboardScreenView18homePressedHandlerEv>:
{
	presenter->toggleKeyboardModifier(0x2);
}
void KeyboardScreenView::homePressedHandler()
{
	presenter->handleNormalKey(0x6);
9000601c:	2106      	movs	r1, #6
9000601e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006020:	f7ff bf98 	b.w	90005f54 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90006024 <_ZN18KeyboardScreenView17endPressedHandlerEv>:
}
void KeyboardScreenView::endPressedHandler()
{
	presenter->handleNormalKey(0x7);
90006024:	2107      	movs	r1, #7
90006026:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006028:	f7ff bf94 	b.w	90005f54 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

9000602c <_ZN18KeyboardScreenView19shiftPressedHandlerEv>:
	presenter->toggleKeyboardModifier(0x2);
9000602c:	2102      	movs	r1, #2
9000602e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006030:	f7ff bf8c 	b.w	90005f4c <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>

90006034 <_ZN18KeyboardScreenView18ctrlPressedHandlerEv>:
}

void KeyboardScreenView::ctrlPressedHandler()
{
	presenter->toggleKeyboardModifier(0x1);
90006034:	2101      	movs	r1, #1
90006036:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006038:	f7ff bf88 	b.w	90005f4c <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>

9000603c <_ZN18KeyboardScreenView17modPressedHandlerEv>:
}
void KeyboardScreenView::modPressedHandler()
{
	presenter->toggleKeyboardModifier(0x8);
9000603c:	2108      	movs	r1, #8
9000603e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006040:	f7ff bf84 	b.w	90005f4c <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>

90006044 <_ZN18KeyboardScreenView17altPressedHandlerEv>:
}
void KeyboardScreenView::altPressedHandler()
{
	presenter->toggleKeyboardModifier(0x4);
90006044:	2104      	movs	r1, #4
90006046:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006048:	f7ff bf80 	b.w	90005f4c <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>

9000604c <_ZN18KeyboardScreenView17keyPressedhandlerEt>:
}

void KeyboardScreenView::keyPressedhandler(Unicode::UnicodeChar keyChar)
{
9000604c:	b510      	push	{r4, lr}
9000604e:	4604      	mov	r4, r0
	if(keyChar != 0) {
90006050:	b931      	cbnz	r1, 90006060 <_ZN18KeyboardScreenView17keyPressedhandlerEt+0x14>
		touchgfx_printf("Key pressed: %c\n", keyChar);
		presenter->handleNormalKey(keyChar);
	}
	keyboard.setBufferPosition(0);
90006052:	f104 0090 	add.w	r0, r4, #144	@ 0x90
90006056:	2100      	movs	r1, #0
}
90006058:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	keyboard.setBufferPosition(0);
9000605c:	f010 bfee 	b.w	9001703c <_ZN8touchgfx8Keyboard17setBufferPositionEt>
		presenter->handleNormalKey(keyChar);
90006060:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006062:	f7ff ff77 	bl	90005f54 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>
	keyboard.setBufferPosition(0);
90006066:	f104 0090 	add.w	r0, r4, #144	@ 0x90
9000606a:	2100      	movs	r1, #0
}
9000606c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	keyboard.setBufferPosition(0);
90006070:	f010 bfe4 	b.w	9001703c <_ZN8touchgfx8Keyboard17setBufferPositionEt>

90006074 <_ZN18KeyboardScreenViewD1Ev>:

class KeyboardScreenView : public KeyboardScreenViewBase
{
public:
    KeyboardScreenView();
    virtual ~KeyboardScreenView() {}
90006074:	4b03      	ldr	r3, [pc, #12]	@ (90006084 <_ZN18KeyboardScreenViewD1Ev+0x10>)
90006076:	b510      	push	{r4, lr}
90006078:	4604      	mov	r4, r0
9000607a:	6003      	str	r3, [r0, #0]
9000607c:	f7ff f8ee 	bl	9000525c <_ZN22KeyboardScreenViewBaseD1Ev>
90006080:	4620      	mov	r0, r4
90006082:	bd10      	pop	{r4, pc}
90006084:	9002fb4c 	.word	0x9002fb4c

90006088 <_ZN18KeyboardScreenViewD0Ev>:
90006088:	4b06      	ldr	r3, [pc, #24]	@ (900060a4 <_ZN18KeyboardScreenViewD0Ev+0x1c>)
9000608a:	b510      	push	{r4, lr}
9000608c:	4604      	mov	r4, r0
9000608e:	6003      	str	r3, [r0, #0]
90006090:	f7ff f8e4 	bl	9000525c <_ZN22KeyboardScreenViewBaseD1Ev>
90006094:	f44f 710e 	mov.w	r1, #568	@ 0x238
90006098:	4620      	mov	r0, r4
9000609a:	f025 fd7e 	bl	9002bb9a <_ZdlPvj>
9000609e:	4620      	mov	r0, r4
900060a0:	bd10      	pop	{r4, pc}
900060a2:	bf00      	nop
900060a4:	9002fb4c 	.word	0x9002fb4c

900060a8 <_ZN18KeyboardScreenViewC1Ev>:
KeyboardScreenView::KeyboardScreenView() : keyboard(),
900060a8:	b570      	push	{r4, r5, r6, lr}
900060aa:	4604      	mov	r4, r0
keyPressed(this, &KeyboardScreenView::keyPressedhandler)
900060ac:	f7ff f8ea 	bl	90005284 <_ZN22KeyboardScreenViewBaseC1Ev>
900060b0:	4b5a      	ldr	r3, [pc, #360]	@ (9000621c <_ZN18KeyboardScreenViewC1Ev+0x174>)
        : pobject(pObject), pmemfun(pmemfun_0)
900060b2:	2500      	movs	r5, #0
900060b4:	4626      	mov	r6, r4
900060b6:	f846 3b90 	str.w	r3, [r6], #144
KeyboardScreenView::KeyboardScreenView() : keyboard(),
900060ba:	4630      	mov	r0, r6
900060bc:	f010 fd26 	bl	90016b0c <_ZN8touchgfx8KeyboardC1Ev>
900060c0:	4a57      	ldr	r2, [pc, #348]	@ (90006220 <_ZN18KeyboardScreenViewC1Ev+0x178>)
900060c2:	4b58      	ldr	r3, [pc, #352]	@ (90006224 <_ZN18KeyboardScreenViewC1Ev+0x17c>)
	keyboard.setLayout(&fullscreenLayout);
900060c4:	4630      	mov	r0, r6
900060c6:	f8c4 2180 	str.w	r2, [r4, #384]	@ 0x180
900060ca:	4a57      	ldr	r2, [pc, #348]	@ (90006228 <_ZN18KeyboardScreenViewC1Ev+0x180>)
900060cc:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
900060d0:	f8c4 2190 	str.w	r2, [r4, #400]	@ 0x190
900060d4:	4a55      	ldr	r2, [pc, #340]	@ (9000622c <_ZN18KeyboardScreenViewC1Ev+0x184>)
900060d6:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
900060da:	f8c4 21a0 	str.w	r2, [r4, #416]	@ 0x1a0
900060de:	4a54      	ldr	r2, [pc, #336]	@ (90006230 <_ZN18KeyboardScreenViewC1Ev+0x188>)
900060e0:	f8c4 3198 	str.w	r3, [r4, #408]	@ 0x198
900060e4:	f8c4 21b0 	str.w	r2, [r4, #432]	@ 0x1b0
900060e8:	4a52      	ldr	r2, [pc, #328]	@ (90006234 <_ZN18KeyboardScreenViewC1Ev+0x18c>)
900060ea:	f8c4 31a8 	str.w	r3, [r4, #424]	@ 0x1a8
900060ee:	f8c4 21c0 	str.w	r2, [r4, #448]	@ 0x1c0
900060f2:	4a51      	ldr	r2, [pc, #324]	@ (90006238 <_ZN18KeyboardScreenViewC1Ev+0x190>)
900060f4:	f8c4 31b8 	str.w	r3, [r4, #440]	@ 0x1b8
900060f8:	f8c4 21d0 	str.w	r2, [r4, #464]	@ 0x1d0
900060fc:	4a4f      	ldr	r2, [pc, #316]	@ (9000623c <_ZN18KeyboardScreenViewC1Ev+0x194>)
900060fe:	f8c4 31c8 	str.w	r3, [r4, #456]	@ 0x1c8
90006102:	f8c4 21e0 	str.w	r2, [r4, #480]	@ 0x1e0
90006106:	4a4e      	ldr	r2, [pc, #312]	@ (90006240 <_ZN18KeyboardScreenViewC1Ev+0x198>)
90006108:	f8c4 31d8 	str.w	r3, [r4, #472]	@ 0x1d8
9000610c:	f8c4 31e8 	str.w	r3, [r4, #488]	@ 0x1e8
90006110:	f8c4 21f0 	str.w	r2, [r4, #496]	@ 0x1f0
90006114:	f8c4 417c 	str.w	r4, [r4, #380]	@ 0x17c
90006118:	f8c4 5184 	str.w	r5, [r4, #388]	@ 0x184
9000611c:	f8c4 418c 	str.w	r4, [r4, #396]	@ 0x18c
90006120:	f8c4 5194 	str.w	r5, [r4, #404]	@ 0x194
90006124:	f8c4 419c 	str.w	r4, [r4, #412]	@ 0x19c
90006128:	f8c4 51a4 	str.w	r5, [r4, #420]	@ 0x1a4
9000612c:	f8c4 41ac 	str.w	r4, [r4, #428]	@ 0x1ac
90006130:	f8c4 51b4 	str.w	r5, [r4, #436]	@ 0x1b4
90006134:	f8c4 41bc 	str.w	r4, [r4, #444]	@ 0x1bc
90006138:	f8c4 51c4 	str.w	r5, [r4, #452]	@ 0x1c4
9000613c:	f8c4 41cc 	str.w	r4, [r4, #460]	@ 0x1cc
90006140:	f8c4 51d4 	str.w	r5, [r4, #468]	@ 0x1d4
90006144:	f8c4 41dc 	str.w	r4, [r4, #476]	@ 0x1dc
90006148:	f8c4 51e4 	str.w	r5, [r4, #484]	@ 0x1e4
9000614c:	f8c4 41ec 	str.w	r4, [r4, #492]	@ 0x1ec
90006150:	f8c4 51f4 	str.w	r5, [r4, #500]	@ 0x1f4
90006154:	4a3b      	ldr	r2, [pc, #236]	@ (90006244 <_ZN18KeyboardScreenViewC1Ev+0x19c>)
	fullscreenLayout.callbackAreaArray[0].callback = &escPressed;
90006156:	493c      	ldr	r1, [pc, #240]	@ (90006248 <_ZN18KeyboardScreenViewC1Ev+0x1a0>)
90006158:	e9c4 347e 	strd	r3, r4, [r4, #504]	@ 0x1f8
9000615c:	e9c4 5381 	strd	r5, r3, [r4, #516]	@ 0x204
90006160:	f8c4 3218 	str.w	r3, [r4, #536]	@ 0x218
90006164:	4b39      	ldr	r3, [pc, #228]	@ (9000624c <_ZN18KeyboardScreenViewC1Ev+0x1a4>)
90006166:	f8c4 2200 	str.w	r2, [r4, #512]	@ 0x200
9000616a:	4a39      	ldr	r2, [pc, #228]	@ (90006250 <_ZN18KeyboardScreenViewC1Ev+0x1a8>)
9000616c:	f8c4 420c 	str.w	r4, [r4, #524]	@ 0x20c
90006170:	f8c4 2210 	str.w	r2, [r4, #528]	@ 0x210
90006174:	f504 72bc 	add.w	r2, r4, #376	@ 0x178
90006178:	f8c4 5214 	str.w	r5, [r4, #532]	@ 0x214
9000617c:	f8c4 5224 	str.w	r5, [r4, #548]	@ 0x224
90006180:	e9c4 4387 	strd	r4, r3, [r4, #540]	@ 0x21c
        : pobject(pObject), pmemfun(pmemfun_1)
90006184:	4b33      	ldr	r3, [pc, #204]	@ (90006254 <_ZN18KeyboardScreenViewC1Ev+0x1ac>)
90006186:	e9c4 348a 	strd	r3, r4, [r4, #552]	@ 0x228
9000618a:	4b33      	ldr	r3, [pc, #204]	@ (90006258 <_ZN18KeyboardScreenViewC1Ev+0x1b0>)
9000618c:	e9c4 358c 	strd	r3, r5, [r4, #560]	@ 0x230
90006190:	68cb      	ldr	r3, [r1, #12]
90006192:	609a      	str	r2, [r3, #8]
	fullscreenLayout.callbackAreaArray[1].callback = &delPressed;
90006194:	f504 72c4 	add.w	r2, r4, #392	@ 0x188
90006198:	619a      	str	r2, [r3, #24]
	fullscreenLayout.callbackAreaArray[2].callback = &tabPressed;
9000619a:	f504 72cc 	add.w	r2, r4, #408	@ 0x198
9000619e:	629a      	str	r2, [r3, #40]	@ 0x28
	fullscreenLayout.callbackAreaArray[3].callback = &backspacePressed;
900061a0:	f504 72d4 	add.w	r2, r4, #424	@ 0x1a8
900061a4:	639a      	str	r2, [r3, #56]	@ 0x38
	fullscreenLayout.callbackAreaArray[4].callback = &enterPressed;
900061a6:	f504 72dc 	add.w	r2, r4, #440	@ 0x1b8
900061aa:	649a      	str	r2, [r3, #72]	@ 0x48
	fullscreenLayout.callbackAreaArray[5].callback = &shiftPressed;
900061ac:	f504 72e4 	add.w	r2, r4, #456	@ 0x1c8
900061b0:	659a      	str	r2, [r3, #88]	@ 0x58
	fullscreenLayout.callbackAreaArray[6].callback = &homePressed;
900061b2:	f504 72ec 	add.w	r2, r4, #472	@ 0x1d8
900061b6:	669a      	str	r2, [r3, #104]	@ 0x68
	fullscreenLayout.callbackAreaArray[7].callback = &endPressed;
900061b8:	f504 72f4 	add.w	r2, r4, #488	@ 0x1e8
900061bc:	679a      	str	r2, [r3, #120]	@ 0x78
	fullscreenLayout.callbackAreaArray[8].callback = &ctrlPressed;
900061be:	f504 72fc 	add.w	r2, r4, #504	@ 0x1f8
900061c2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
	fullscreenLayout.callbackAreaArray[9].callback = &modPressed;
900061c6:	f504 7202 	add.w	r2, r4, #520	@ 0x208
900061ca:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
	fullscreenLayout.callbackAreaArray[10].callback = &altPressed;
900061ce:	f504 7206 	add.w	r2, r4, #536	@ 0x218
900061d2:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
	keyboard.setLayout(&fullscreenLayout);
900061d6:	f010 fd12 	bl	90016bfe <_ZN8touchgfx8Keyboard9setLayoutEPKNS0_6LayoutE>
	keyboard.setKeyListener(keyPressed);
900061da:	f504 730a 	add.w	r3, r4, #552	@ 0x228
	keyboard.setKeymappingList(&keyMappingListAnsi);
900061de:	4630      	mov	r0, r6
900061e0:	491e      	ldr	r1, [pc, #120]	@ (9000625c <_ZN18KeyboardScreenViewC1Ev+0x1b4>)
     *
     * @note Backspace, shift and mode keys report a 0 as value.
     */
    void setKeyListener(GenericCallback<Unicode::UnicodeChar>& callback)
    {
        keyListener = &callback;
900061e2:	f8c4 30bc 	str.w	r3, [r4, #188]	@ 0xbc
900061e6:	f010 ff2d 	bl	90017044 <_ZN8touchgfx8Keyboard17setKeymappingListEPKNS0_14KeyMappingListE>
	memset(buffer, 0, sizeof(buffer));
900061ea:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
900061ee:	4a1c      	ldr	r2, [pc, #112]	@ (90006260 <_ZN18KeyboardScreenViewC1Ev+0x1b8>)
900061f0:	4629      	mov	r1, r5
900061f2:	4618      	mov	r0, r3
900061f4:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
900061f8:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
900061fc:	2224      	movs	r2, #36	@ 0x24
900061fe:	f026 fadf 	bl	9002c7c0 <memset>
90006202:	4603      	mov	r3, r0
	keyboard.setBuffer(buffer, BUFFER_SIZE);
90006204:	2212      	movs	r2, #18
90006206:	4630      	mov	r0, r6
90006208:	4619      	mov	r1, r3
9000620a:	f010 fced 	bl	90016be8 <_ZN8touchgfx8Keyboard9setBufferEPtt>
9000620e:	1d20      	adds	r0, r4, #4
90006210:	4631      	mov	r1, r6
90006212:	f00d f803 	bl	9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90006216:	4620      	mov	r0, r4
90006218:	bd70      	pop	{r4, r5, r6, pc}
9000621a:	bf00      	nop
9000621c:	9002fb4c 	.word	0x9002fb4c
90006220:	90005ff5 	.word	0x90005ff5
90006224:	9002fb1c 	.word	0x9002fb1c
90006228:	90005ffd 	.word	0x90005ffd
9000622c:	90006005 	.word	0x90006005
90006230:	9000600d 	.word	0x9000600d
90006234:	90006015 	.word	0x90006015
90006238:	9000602d 	.word	0x9000602d
9000623c:	9000601d 	.word	0x9000601d
90006240:	90006025 	.word	0x90006025
90006244:	90006035 	.word	0x90006035
90006248:	240000cc 	.word	0x240000cc
9000624c:	90006045 	.word	0x90006045
90006250:	9000603d 	.word	0x9000603d
90006254:	9002fb34 	.word	0x9002fb34
90006258:	9000604d 	.word	0x9000604d
9000625c:	9002fb7c 	.word	0x9002fb7c
90006260:	011001e0 	.word	0x011001e0

90006264 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev>:
};
90006264:	4bf8      	ldr	r3, [pc, #992]	@ (90006648 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3e4>)
90006266:	210c      	movs	r1, #12
90006268:	4af8      	ldr	r2, [pc, #992]	@ (9000664c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3e8>)
9000626a:	2001      	movs	r0, #1
9000626c:	f04f 0c10 	mov.w	ip, #16
}
90006270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006274:	f04f 0b40 	mov.w	fp, #64	@ 0x40
90006278:	f04f 0703 	mov.w	r7, #3
9000627c:	f04f 0a20 	mov.w	sl, #32
90006280:	f04f 0902 	mov.w	r9, #2
90006284:	f8c3 b00e 	str.w	fp, [r3, #14]
90006288:	f04f 0b60 	mov.w	fp, #96	@ 0x60
9000628c:	761f      	strb	r7, [r3, #24]
9000628e:	f04f 0705 	mov.w	r7, #5
90006292:	f8c3 b01a 	str.w	fp, [r3, #26]
90006296:	f04f 0b04 	mov.w	fp, #4
9000629a:	f883 7030 	strb.w	r7, [r3, #48]	@ 0x30
9000629e:	f04f 0706 	mov.w	r7, #6
900062a2:	f883 b024 	strb.w	fp, [r3, #36]	@ 0x24
900062a6:	f04f 0b80 	mov.w	fp, #128	@ 0x80
900062aa:	f883 703c 	strb.w	r7, [r3, #60]	@ 0x3c
900062ae:	f04f 0707 	mov.w	r7, #7
900062b2:	f8c3 b026 	str.w	fp, [r3, #38]	@ 0x26
900062b6:	f04f 0ba0 	mov.w	fp, #160	@ 0xa0
900062ba:	f883 7048 	strb.w	r7, [r3, #72]	@ 0x48
900062be:	f04f 0708 	mov.w	r7, #8
900062c2:	f8c3 b032 	str.w	fp, [r3, #50]	@ 0x32
900062c6:	f04f 0bc0 	mov.w	fp, #192	@ 0xc0
900062ca:	7018      	strb	r0, [r3, #0]
900062cc:	f04f 0e0a 	mov.w	lr, #10
900062d0:	f8c3 b03e 	str.w	fp, [r3, #62]	@ 0x3e
900062d4:	f04f 0be0 	mov.w	fp, #224	@ 0xe0
900062d8:	f8c3 a002 	str.w	sl, [r3, #2]
900062dc:	f04f 080f 	mov.w	r8, #15
900062e0:	f8c3 b04a 	str.w	fp, [r3, #74]	@ 0x4a
900062e4:	f44f 7b80 	mov.w	fp, #256	@ 0x100
900062e8:	f8c3 2006 	str.w	r2, [r3, #6]
900062ec:	2400      	movs	r4, #0
900062ee:	8159      	strh	r1, [r3, #10]
900062f0:	f8c3 2012 	str.w	r2, [r3, #18]
900062f4:	82d9      	strh	r1, [r3, #22]
900062f6:	f8c3 201e 	str.w	r2, [r3, #30]
900062fa:	8459      	strh	r1, [r3, #34]	@ 0x22
900062fc:	f8c3 202a 	str.w	r2, [r3, #42]	@ 0x2a
90006300:	85d9      	strh	r1, [r3, #46]	@ 0x2e
90006302:	f8c3 2036 	str.w	r2, [r3, #54]	@ 0x36
90006306:	8759      	strh	r1, [r3, #58]	@ 0x3a
90006308:	f8c3 2042 	str.w	r2, [r3, #66]	@ 0x42
9000630c:	f8a3 1046 	strh.w	r1, [r3, #70]	@ 0x46
90006310:	f8c3 204e 	str.w	r2, [r3, #78]	@ 0x4e
90006314:	f8a3 1052 	strh.w	r1, [r3, #82]	@ 0x52
90006318:	f8c3 205a 	str.w	r2, [r3, #90]	@ 0x5a
9000631c:	f8a3 105e 	strh.w	r1, [r3, #94]	@ 0x5e
90006320:	f883 7054 	strb.w	r7, [r3, #84]	@ 0x54
90006324:	f04f 0709 	mov.w	r7, #9
90006328:	f883 900c 	strb.w	r9, [r3, #12]
9000632c:	f8c3 b056 	str.w	fp, [r3, #86]	@ 0x56
90006330:	f44f 7b90 	mov.w	fp, #288	@ 0x120
90006334:	f883 7060 	strb.w	r7, [r3, #96]	@ 0x60
90006338:	f04f 070b 	mov.w	r7, #11
9000633c:	f8c3 b062 	str.w	fp, [r3, #98]	@ 0x62
90006340:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
90006344:	f883 7078 	strb.w	r7, [r3, #120]	@ 0x78
90006348:	f04f 070d 	mov.w	r7, #13
9000634c:	f8c3 b06e 	str.w	fp, [r3, #110]	@ 0x6e
90006350:	f44f 7bb0 	mov.w	fp, #352	@ 0x160
90006354:	f883 7090 	strb.w	r7, [r3, #144]	@ 0x90
90006358:	f04f 070e 	mov.w	r7, #14
9000635c:	f8c3 b07a 	str.w	fp, [r3, #122]	@ 0x7a
90006360:	f44f 7bc0 	mov.w	fp, #384	@ 0x180
90006364:	4eba      	ldr	r6, [pc, #744]	@ (90006650 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3ec>)
90006366:	f8c3 b086 	str.w	fp, [r3, #134]	@ 0x86
9000636a:	f44f 7bd0 	mov.w	fp, #416	@ 0x1a0
9000636e:	f883 709c 	strb.w	r7, [r3, #156]	@ 0x9c
90006372:	f8c3 b092 	str.w	fp, [r3, #146]	@ 0x92
90006376:	f04f 0b11 	mov.w	fp, #17
9000637a:	4fb6      	ldr	r7, [pc, #728]	@ (90006654 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3f0>)
9000637c:	f8c3 2066 	str.w	r2, [r3, #102]	@ 0x66
90006380:	f8a3 106a 	strh.w	r1, [r3, #106]	@ 0x6a
90006384:	f8c3 2072 	str.w	r2, [r3, #114]	@ 0x72
90006388:	f8a3 1076 	strh.w	r1, [r3, #118]	@ 0x76
9000638c:	f8c3 207e 	str.w	r2, [r3, #126]	@ 0x7e
90006390:	f8a3 1082 	strh.w	r1, [r3, #130]	@ 0x82
90006394:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
90006398:	f8c3 208a 	str.w	r2, [r3, #138]	@ 0x8a
9000639c:	f8a3 108e 	strh.w	r1, [r3, #142]	@ 0x8e
900063a0:	f8c3 2096 	str.w	r2, [r3, #150]	@ 0x96
900063a4:	f8a3 109a 	strh.w	r1, [r3, #154]	@ 0x9a
900063a8:	f8c3 209e 	str.w	r2, [r3, #158]	@ 0x9e
900063ac:	f8c3 20a2 	str.w	r2, [r3, #162]	@ 0xa2
900063b0:	f8a3 10a6 	strh.w	r1, [r3, #166]	@ 0xa6
900063b4:	f8c3 20ae 	str.w	r2, [r3, #174]	@ 0xae
900063b8:	f8a3 10b2 	strh.w	r1, [r3, #178]	@ 0xb2
900063bc:	f8c3 70b6 	str.w	r7, [r3, #182]	@ 0xb6
900063c0:	37c0      	adds	r7, #192	@ 0xc0
900063c2:	f8c3 20ba 	str.w	r2, [r3, #186]	@ 0xba
900063c6:	f8a3 10be 	strh.w	r1, [r3, #190]	@ 0xbe
900063ca:	f883 e06c 	strb.w	lr, [r3, #108]	@ 0x6c
900063ce:	f883 80a8 	strb.w	r8, [r3, #168]	@ 0xa8
900063d2:	f8c3 60aa 	str.w	r6, [r3, #170]	@ 0xaa
900063d6:	f883 c0b4 	strb.w	ip, [r3, #180]	@ 0xb4
900063da:	f883 b0c0 	strb.w	fp, [r3, #192]	@ 0xc0
900063de:	f8df b278 	ldr.w	fp, [pc, #632]	@ 90006658 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3f4>
900063e2:	f8c3 20c6 	str.w	r2, [r3, #198]	@ 0xc6
900063e6:	f8c3 b0c2 	str.w	fp, [r3, #194]	@ 0xc2
900063ea:	f04f 0b12 	mov.w	fp, #18
900063ee:	f8a3 10ca 	strh.w	r1, [r3, #202]	@ 0xca
900063f2:	f883 b0cc 	strb.w	fp, [r3, #204]	@ 0xcc
900063f6:	f8df b264 	ldr.w	fp, [pc, #612]	@ 9000665c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3f8>
900063fa:	f8c3 20d2 	str.w	r2, [r3, #210]	@ 0xd2
900063fe:	f8c3 b0ce 	str.w	fp, [r3, #206]	@ 0xce
90006402:	f04f 0b13 	mov.w	fp, #19
90006406:	f8a3 10d6 	strh.w	r1, [r3, #214]	@ 0xd6
9000640a:	f883 b0d8 	strb.w	fp, [r3, #216]	@ 0xd8
9000640e:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90006660 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3fc>
90006412:	f8c3 20de 	str.w	r2, [r3, #222]	@ 0xde
90006416:	f8c3 b0da 	str.w	fp, [r3, #218]	@ 0xda
9000641a:	f04f 0b14 	mov.w	fp, #20
9000641e:	f8a3 10e2 	strh.w	r1, [r3, #226]	@ 0xe2
90006422:	f883 b0e4 	strb.w	fp, [r3, #228]	@ 0xe4
90006426:	f8df b23c 	ldr.w	fp, [pc, #572]	@ 90006664 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x400>
9000642a:	f8c3 20ea 	str.w	r2, [r3, #234]	@ 0xea
9000642e:	f8c3 b0e6 	str.w	fp, [r3, #230]	@ 0xe6
90006432:	f04f 0b15 	mov.w	fp, #21
90006436:	f8a3 10ee 	strh.w	r1, [r3, #238]	@ 0xee
9000643a:	f883 b0f0 	strb.w	fp, [r3, #240]	@ 0xf0
9000643e:	f8df b228 	ldr.w	fp, [pc, #552]	@ 90006668 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x404>
90006442:	f8c3 20f6 	str.w	r2, [r3, #246]	@ 0xf6
90006446:	f8c3 b0f2 	str.w	fp, [r3, #242]	@ 0xf2
9000644a:	f04f 0b16 	mov.w	fp, #22
9000644e:	f8a3 10fa 	strh.w	r1, [r3, #250]	@ 0xfa
90006452:	f883 b0fc 	strb.w	fp, [r3, #252]	@ 0xfc
90006456:	f04f 0b17 	mov.w	fp, #23
9000645a:	f8c3 2102 	str.w	r2, [r3, #258]	@ 0x102
9000645e:	f883 b108 	strb.w	fp, [r3, #264]	@ 0x108
90006462:	f8df b208 	ldr.w	fp, [pc, #520]	@ 9000666c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x408>
90006466:	f8a3 1106 	strh.w	r1, [r3, #262]	@ 0x106
9000646a:	f8c3 b10a 	str.w	fp, [r3, #266]	@ 0x10a
9000646e:	f04f 0b18 	mov.w	fp, #24
90006472:	f8c3 210e 	str.w	r2, [r3, #270]	@ 0x10e
90006476:	f883 b114 	strb.w	fp, [r3, #276]	@ 0x114
9000647a:	f8df b1f4 	ldr.w	fp, [pc, #500]	@ 90006670 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x40c>
9000647e:	f8a3 1112 	strh.w	r1, [r3, #274]	@ 0x112
90006482:	f8c3 b116 	str.w	fp, [r3, #278]	@ 0x116
90006486:	f04f 0b19 	mov.w	fp, #25
9000648a:	f8c3 211a 	str.w	r2, [r3, #282]	@ 0x11a
9000648e:	f883 b120 	strb.w	fp, [r3, #288]	@ 0x120
90006492:	f8df b1e0 	ldr.w	fp, [pc, #480]	@ 90006674 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x410>
90006496:	f8a3 111e 	strh.w	r1, [r3, #286]	@ 0x11e
9000649a:	f8c3 70fe 	str.w	r7, [r3, #254]	@ 0xfe
9000649e:	f8c3 b122 	str.w	fp, [r3, #290]	@ 0x122
900064a2:	f883 a174 	strb.w	sl, [r3, #372]	@ 0x174
900064a6:	f04f 0a1a 	mov.w	sl, #26
900064aa:	f8c3 2126 	str.w	r2, [r3, #294]	@ 0x126
900064ae:	f883 a12c 	strb.w	sl, [r3, #300]	@ 0x12c
900064b2:	f44f 0ad8 	mov.w	sl, #7077888	@ 0x6c0000
900064b6:	f8a3 112a 	strh.w	r1, [r3, #298]	@ 0x12a
900064ba:	f8c3 a12e 	str.w	sl, [r3, #302]	@ 0x12e
900064be:	f04f 0a1b 	mov.w	sl, #27
900064c2:	f8c3 2132 	str.w	r2, [r3, #306]	@ 0x132
900064c6:	f883 a138 	strb.w	sl, [r3, #312]	@ 0x138
900064ca:	f8df a1ac 	ldr.w	sl, [pc, #428]	@ 90006678 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x414>
900064ce:	f8a3 1136 	strh.w	r1, [r3, #310]	@ 0x136
900064d2:	f8c3 a13a 	str.w	sl, [r3, #314]	@ 0x13a
900064d6:	f04f 0a1c 	mov.w	sl, #28
900064da:	f8c3 213e 	str.w	r2, [r3, #318]	@ 0x13e
900064de:	f883 a144 	strb.w	sl, [r3, #324]	@ 0x144
900064e2:	f8df a198 	ldr.w	sl, [pc, #408]	@ 9000667c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x418>
900064e6:	f8a3 1142 	strh.w	r1, [r3, #322]	@ 0x142
900064ea:	f8c3 a146 	str.w	sl, [r3, #326]	@ 0x146
900064ee:	f04f 0a1d 	mov.w	sl, #29
900064f2:	f8c3 214a 	str.w	r2, [r3, #330]	@ 0x14a
900064f6:	f883 a150 	strb.w	sl, [r3, #336]	@ 0x150
900064fa:	f8df a184 	ldr.w	sl, [pc, #388]	@ 90006680 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x41c>
900064fe:	f8a3 114e 	strh.w	r1, [r3, #334]	@ 0x14e
90006502:	f8c3 a152 	str.w	sl, [r3, #338]	@ 0x152
90006506:	f04f 0a1e 	mov.w	sl, #30
9000650a:	f8c3 2156 	str.w	r2, [r3, #342]	@ 0x156
9000650e:	f883 a15c 	strb.w	sl, [r3, #348]	@ 0x15c
90006512:	f8df a170 	ldr.w	sl, [pc, #368]	@ 90006684 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x420>
90006516:	f8a3 115a 	strh.w	r1, [r3, #346]	@ 0x15a
9000651a:	f8c3 a15e 	str.w	sl, [r3, #350]	@ 0x15e
9000651e:	f04f 0a1f 	mov.w	sl, #31
90006522:	f8c3 2162 	str.w	r2, [r3, #354]	@ 0x162
90006526:	f883 a168 	strb.w	sl, [r3, #360]	@ 0x168
9000652a:	f8df a15c 	ldr.w	sl, [pc, #348]	@ 90006688 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x424>
9000652e:	f8a3 1166 	strh.w	r1, [r3, #358]	@ 0x166
90006532:	f8c3 a16a 	str.w	sl, [r3, #362]	@ 0x16a
90006536:	f10a 0a20 	add.w	sl, sl, #32
9000653a:	f8c3 216e 	str.w	r2, [r3, #366]	@ 0x16e
9000653e:	f8c3 a176 	str.w	sl, [r3, #374]	@ 0x176
90006542:	f04f 0a21 	mov.w	sl, #33	@ 0x21
90006546:	f8a3 1172 	strh.w	r1, [r3, #370]	@ 0x172
9000654a:	f883 a180 	strb.w	sl, [r3, #384]	@ 0x180
9000654e:	f8df a13c 	ldr.w	sl, [pc, #316]	@ 9000668c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x428>
90006552:	f8c3 217a 	str.w	r2, [r3, #378]	@ 0x17a
90006556:	f8a3 117e 	strh.w	r1, [r3, #382]	@ 0x17e
9000655a:	f8c3 2186 	str.w	r2, [r3, #390]	@ 0x186
9000655e:	f8c3 a182 	str.w	sl, [r3, #386]	@ 0x182
90006562:	f04f 0a22 	mov.w	sl, #34	@ 0x22
90006566:	f8a3 118a 	strh.w	r1, [r3, #394]	@ 0x18a
9000656a:	f883 a18c 	strb.w	sl, [r3, #396]	@ 0x18c
9000656e:	f8df a120 	ldr.w	sl, [pc, #288]	@ 90006690 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x42c>
90006572:	f8c3 2192 	str.w	r2, [r3, #402]	@ 0x192
90006576:	f8c3 a18e 	str.w	sl, [r3, #398]	@ 0x18e
9000657a:	f04f 0a23 	mov.w	sl, #35	@ 0x23
9000657e:	f8a3 1196 	strh.w	r1, [r3, #406]	@ 0x196
90006582:	f883 a198 	strb.w	sl, [r3, #408]	@ 0x198
90006586:	f8df a10c 	ldr.w	sl, [pc, #268]	@ 90006694 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x430>
9000658a:	f8c3 219e 	str.w	r2, [r3, #414]	@ 0x19e
9000658e:	f8c3 a19a 	str.w	sl, [r3, #410]	@ 0x19a
90006592:	f04f 0a24 	mov.w	sl, #36	@ 0x24
90006596:	f8a3 11a2 	strh.w	r1, [r3, #418]	@ 0x1a2
9000659a:	f883 a1a4 	strb.w	sl, [r3, #420]	@ 0x1a4
9000659e:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90006698 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x434>
900065a2:	f8c3 21aa 	str.w	r2, [r3, #426]	@ 0x1aa
900065a6:	f8c3 a1a6 	str.w	sl, [r3, #422]	@ 0x1a6
900065aa:	f04f 0a25 	mov.w	sl, #37	@ 0x25
900065ae:	f8a3 11ae 	strh.w	r1, [r3, #430]	@ 0x1ae
900065b2:	f883 a1b0 	strb.w	sl, [r3, #432]	@ 0x1b0
900065b6:	f8df a0e4 	ldr.w	sl, [pc, #228]	@ 9000669c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x438>
900065ba:	f8c3 21b6 	str.w	r2, [r3, #438]	@ 0x1b6
900065be:	f8c3 a1b2 	str.w	sl, [r3, #434]	@ 0x1b2
900065c2:	f04f 0a26 	mov.w	sl, #38	@ 0x26
900065c6:	f8a3 11ba 	strh.w	r1, [r3, #442]	@ 0x1ba
900065ca:	f883 a1bc 	strb.w	sl, [r3, #444]	@ 0x1bc
900065ce:	f8df a0d0 	ldr.w	sl, [pc, #208]	@ 900066a0 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x43c>
900065d2:	f8c3 21c2 	str.w	r2, [r3, #450]	@ 0x1c2
900065d6:	f8c3 a1be 	str.w	sl, [r3, #446]	@ 0x1be
900065da:	f04f 0a27 	mov.w	sl, #39	@ 0x27
900065de:	f8a3 11c6 	strh.w	r1, [r3, #454]	@ 0x1c6
900065e2:	f883 a1c8 	strb.w	sl, [r3, #456]	@ 0x1c8
900065e6:	f8df a0bc 	ldr.w	sl, [pc, #188]	@ 900066a4 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x440>
900065ea:	f8c3 21ce 	str.w	r2, [r3, #462]	@ 0x1ce
900065ee:	f8c3 a1ca 	str.w	sl, [r3, #458]	@ 0x1ca
900065f2:	f04f 0a28 	mov.w	sl, #40	@ 0x28
900065f6:	f8a3 11d2 	strh.w	r1, [r3, #466]	@ 0x1d2
900065fa:	f883 a1d4 	strb.w	sl, [r3, #468]	@ 0x1d4
900065fe:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 900066a8 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x444>
90006602:	f8c3 21da 	str.w	r2, [r3, #474]	@ 0x1da
90006606:	f8c3 a1d6 	str.w	sl, [r3, #470]	@ 0x1d6
9000660a:	f04f 0a29 	mov.w	sl, #41	@ 0x29
9000660e:	f8a3 11de 	strh.w	r1, [r3, #478]	@ 0x1de
90006612:	f883 a1e0 	strb.w	sl, [r3, #480]	@ 0x1e0
90006616:	f8df a094 	ldr.w	sl, [pc, #148]	@ 900066ac <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x448>
9000661a:	f8c3 21e6 	str.w	r2, [r3, #486]	@ 0x1e6
9000661e:	f8a3 11ea 	strh.w	r1, [r3, #490]	@ 0x1ea
90006622:	f8c3 a1e2 	str.w	sl, [r3, #482]	@ 0x1e2
90006626:	f04f 0a2a 	mov.w	sl, #42	@ 0x2a
9000662a:	f8a3 11f6 	strh.w	r1, [r3, #502]	@ 0x1f6
9000662e:	f8a3 1202 	strh.w	r1, [r3, #514]	@ 0x202
90006632:	f8a3 120e 	strh.w	r1, [r3, #526]	@ 0x20e
90006636:	f8a3 121a 	strh.w	r1, [r3, #538]	@ 0x21a
9000663a:	f8a3 1226 	strh.w	r1, [r3, #550]	@ 0x226
9000663e:	f8a3 1232 	strh.w	r1, [r3, #562]	@ 0x232
90006642:	f8a3 123e 	strh.w	r1, [r3, #574]	@ 0x23e
90006646:	e033      	b.n	900066b0 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x44c>
90006648:	2400a33c 	.word	0x2400a33c
9000664c:	00360020 	.word	0x00360020
90006650:	00360040 	.word	0x00360040
90006654:	00360060 	.word	0x00360060
90006658:	00360080 	.word	0x00360080
9000665c:	003600a0 	.word	0x003600a0
90006660:	003600c0 	.word	0x003600c0
90006664:	003600e0 	.word	0x003600e0
90006668:	00360100 	.word	0x00360100
9000666c:	00360140 	.word	0x00360140
90006670:	00360160 	.word	0x00360160
90006674:	00360180 	.word	0x00360180
90006678:	006c0020 	.word	0x006c0020
9000667c:	006c0040 	.word	0x006c0040
90006680:	006c0060 	.word	0x006c0060
90006684:	006c0080 	.word	0x006c0080
90006688:	006c00a0 	.word	0x006c00a0
9000668c:	006c00e0 	.word	0x006c00e0
90006690:	006c0100 	.word	0x006c0100
90006694:	006c0120 	.word	0x006c0120
90006698:	006c0140 	.word	0x006c0140
9000669c:	006c0160 	.word	0x006c0160
900066a0:	00a20040 	.word	0x00a20040
900066a4:	00a20060 	.word	0x00a20060
900066a8:	00a20080 	.word	0x00a20080
900066ac:	00a200a0 	.word	0x00a200a0
900066b0:	4959      	ldr	r1, [pc, #356]	@ (90006818 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5b4>)
900066b2:	485a      	ldr	r0, [pc, #360]	@ (9000681c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5b8>)
900066b4:	f8c3 11ee 	str.w	r1, [r3, #494]	@ 0x1ee
900066b8:	212b      	movs	r1, #43	@ 0x2b
900066ba:	f8c3 21f2 	str.w	r2, [r3, #498]	@ 0x1f2
900066be:	f883 11f8 	strb.w	r1, [r3, #504]	@ 0x1f8
900066c2:	4957      	ldr	r1, [pc, #348]	@ (90006820 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5bc>)
900066c4:	f8c3 21fe 	str.w	r2, [r3, #510]	@ 0x1fe
900066c8:	f8c3 11fa 	str.w	r1, [r3, #506]	@ 0x1fa
900066cc:	212c      	movs	r1, #44	@ 0x2c
900066ce:	f8c3 220a 	str.w	r2, [r3, #522]	@ 0x20a
900066d2:	f883 1204 	strb.w	r1, [r3, #516]	@ 0x204
900066d6:	4953      	ldr	r1, [pc, #332]	@ (90006824 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5c0>)
900066d8:	f8c3 2216 	str.w	r2, [r3, #534]	@ 0x216
900066dc:	f8c3 1206 	str.w	r1, [r3, #518]	@ 0x206
900066e0:	212d      	movs	r1, #45	@ 0x2d
900066e2:	f8c3 2222 	str.w	r2, [r3, #546]	@ 0x222
900066e6:	f883 1210 	strb.w	r1, [r3, #528]	@ 0x210
900066ea:	494f      	ldr	r1, [pc, #316]	@ (90006828 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5c4>)
900066ec:	f8c3 222e 	str.w	r2, [r3, #558]	@ 0x22e
900066f0:	f8c3 1212 	str.w	r1, [r3, #530]	@ 0x212
900066f4:	212e      	movs	r1, #46	@ 0x2e
900066f6:	f8c3 223a 	str.w	r2, [r3, #570]	@ 0x23a
900066fa:	f883 121c 	strb.w	r1, [r3, #540]	@ 0x21c
900066fe:	494b      	ldr	r1, [pc, #300]	@ (9000682c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5c8>)
90006700:	f883 a1ec 	strb.w	sl, [r3, #492]	@ 0x1ec
90006704:	f8c3 121e 	str.w	r1, [r3, #542]	@ 0x21e
90006708:	212f      	movs	r1, #47	@ 0x2f
9000670a:	f8c3 7246 	str.w	r7, [r3, #582]	@ 0x246
9000670e:	f883 1228 	strb.w	r1, [r3, #552]	@ 0x228
90006712:	4947      	ldr	r1, [pc, #284]	@ (90006830 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5cc>)
90006714:	f8a3 824a 	strh.w	r8, [r3, #586]	@ 0x24a
90006718:	f8c3 122a 	str.w	r1, [r3, #554]	@ 0x22a
9000671c:	2130      	movs	r1, #48	@ 0x30
9000671e:	6004      	str	r4, [r0, #0]
90006720:	f883 1234 	strb.w	r1, [r3, #564]	@ 0x234
90006724:	4943      	ldr	r1, [pc, #268]	@ (90006834 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5d0>)
90006726:	4d44      	ldr	r5, [pc, #272]	@ (90006838 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5d4>)
90006728:	f8c3 1236 	str.w	r1, [r3, #566]	@ 0x236
9000672c:	2131      	movs	r1, #49	@ 0x31
9000672e:	f883 1240 	strb.w	r1, [r3, #576]	@ 0x240
90006732:	4942      	ldr	r1, [pc, #264]	@ (9000683c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5d8>)
90006734:	f8c3 1242 	str.w	r1, [r3, #578]	@ 0x242
};
90006738:	f04f 0307 	mov.w	r3, #7
9000673c:	6042      	str	r2, [r0, #4]
9000673e:	8383      	strh	r3, [r0, #28]
90006740:	f04f 0305 	mov.w	r3, #5
90006744:	6642      	str	r2, [r0, #100]	@ 0x64
90006746:	8783      	strh	r3, [r0, #60]	@ 0x3c
90006748:	4b3d      	ldr	r3, [pc, #244]	@ (90006840 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5dc>)
9000674a:	6742      	str	r2, [r0, #116]	@ 0x74
9000674c:	6443      	str	r3, [r0, #68]	@ 0x44
9000674e:	f04f 0309 	mov.w	r3, #9
90006752:	f8a0 e00c 	strh.w	lr, [r0, #12]
90006756:	f8a0 304c 	strh.w	r3, [r0, #76]	@ 0x4c
9000675a:	f04f 030e 	mov.w	r3, #14
9000675e:	f8a0 c02c 	strh.w	ip, [r0, #44]	@ 0x2c
90006762:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90006766:	f04f 030b 	mov.w	r3, #11
9000676a:	6084      	str	r4, [r0, #8]
9000676c:	f8a0 306c 	strh.w	r3, [r0, #108]	@ 0x6c
90006770:	f04f 0308 	mov.w	r3, #8
90006774:	6484      	str	r4, [r0, #72]	@ 0x48
90006776:	f8a0 307c 	strh.w	r3, [r0, #124]	@ 0x7c
9000677a:	f44f 73e0 	mov.w	r3, #448	@ 0x1c0
9000677e:	6684      	str	r4, [r0, #104]	@ 0x68
90006780:	6103      	str	r3, [r0, #16]
90006782:	f44f 1358 	mov.w	r3, #3538944	@ 0x360000
90006786:	6784      	str	r4, [r0, #120]	@ 0x78
90006788:	6203      	str	r3, [r0, #32]
9000678a:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
9000678e:	f8c0 6084 	str.w	r6, [r0, #132]	@ 0x84
90006792:	6303      	str	r3, [r0, #48]	@ 0x30
90006794:	4b2b      	ldr	r3, [pc, #172]	@ (90006844 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5e0>)
90006796:	6403      	str	r3, [r0, #64]	@ 0x40
90006798:	f44f 0322 	mov.w	r3, #10616832	@ 0xa20000
9000679c:	6503      	str	r3, [r0, #80]	@ 0x50
9000679e:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
900067a2:	6603      	str	r3, [r0, #96]	@ 0x60
900067a4:	3320      	adds	r3, #32
900067a6:	6703      	str	r3, [r0, #112]	@ 0x70
900067a8:	f44f 0358 	mov.w	r3, #14155776	@ 0xd80000
900067ac:	e9c0 2405 	strd	r2, r4, [r0, #20]
900067b0:	e9c0 2409 	strd	r2, r4, [r0, #36]	@ 0x24
900067b4:	e9c0 640d 	strd	r6, r4, [r0, #52]	@ 0x34
900067b8:	e9c0 6415 	strd	r6, r4, [r0, #84]	@ 0x54
900067bc:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
900067c0:	f04f 0306 	mov.w	r3, #6
        : color(col)
900067c4:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
900067c8:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
900067cc:	f8a0 308c 	strh.w	r3, [r0, #140]	@ 0x8c
900067d0:	f04f 030d 	mov.w	r3, #13
900067d4:	626a      	str	r2, [r5, #36]	@ 0x24
900067d6:	f8a0 309c 	strh.w	r3, [r0, #156]	@ 0x9c
900067da:	f04f 0303 	mov.w	r3, #3
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900067de:	4a1a      	ldr	r2, [pc, #104]	@ (90006848 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5e4>)
900067e0:	f8a0 30ac 	strh.w	r3, [r0, #172]	@ 0xac
900067e4:	4b19      	ldr	r3, [pc, #100]	@ (9000684c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5e8>)
900067e6:	f8a5 9020 	strh.w	r9, [r5, #32]
900067ea:	f8c5 3012 	str.w	r3, [r5, #18]
900067ee:	4b18      	ldr	r3, [pc, #96]	@ (90006850 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5ec>)
900067f0:	f8c0 6094 	str.w	r6, [r0, #148]	@ 0x94
900067f4:	61eb      	str	r3, [r5, #28]
900067f6:	4b17      	ldr	r3, [pc, #92]	@ (90006854 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5f0>)
900067f8:	f8c0 60a4 	str.w	r6, [r0, #164]	@ 0xa4
900067fc:	f8c0 4098 	str.w	r4, [r0, #152]	@ 0x98
90006800:	f8c0 40a8 	str.w	r4, [r0, #168]	@ 0xa8
90006804:	f8c5 4016 	str.w	r4, [r5, #22]
        : color(col)
90006808:	62ec      	str	r4, [r5, #44]	@ 0x2c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000680a:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
9000680e:	f8c0 30a0 	str.w	r3, [r0, #160]	@ 0xa0
90006812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006816:	bf00      	nop
90006818:	00a200c0 	.word	0x00a200c0
9000681c:	2400a28c 	.word	0x2400a28c
90006820:	00a200e0 	.word	0x00a200e0
90006824:	00a20100 	.word	0x00a20100
90006828:	00a20120 	.word	0x00a20120
9000682c:	00a20140 	.word	0x00a20140
90006830:	00a20160 	.word	0x00a20160
90006834:	00a20180 	.word	0x00a20180
90006838:	240000cc 	.word	0x240000cc
9000683c:	00d80080 	.word	0x00d80080
90006840:	00360060 	.word	0x00360060
90006844:	006c0180 	.word	0x006c0180
90006848:	00d80040 	.word	0x00d80040
9000684c:	01f401f4 	.word	0x01f401f4
90006850:	9002eefc 	.word	0x9002eefc
90006854:	00d801a0 	.word	0x00d801a0

90006858 <_ZN18KeyboardScreenView11setupScreenEv>:
    KeyboardScreenViewBase::setupScreen();
90006858:	f7fe bd02 	b.w	90005260 <_ZN22KeyboardScreenViewBase11setupScreenEv>

9000685c <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
#include <touchgfx/Utils.hpp>



Model::Model() : modelListener(0)
9000685c:	2200      	movs	r2, #0
9000685e:	6002      	str	r2, [r0, #0]
{

}
90006860:	4770      	bx	lr
90006862:	bf00      	nop

90006864 <_ZN5Model4tickEv>:

void Model::tick()
{
90006864:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR
	static uint8_t state;
	osStatus_t status = osMessageQueueGet(userButtonQueueHandle, &state, NULL, 0);
90006866:	2300      	movs	r3, #0
90006868:	4d0b      	ldr	r5, [pc, #44]	@ (90006898 <_ZN5Model4tickEv+0x34>)
{
9000686a:	4604      	mov	r4, r0
	osStatus_t status = osMessageQueueGet(userButtonQueueHandle, &state, NULL, 0);
9000686c:	490b      	ldr	r1, [pc, #44]	@ (9000689c <_ZN5Model4tickEv+0x38>)
9000686e:	461a      	mov	r2, r3
90006870:	6828      	ldr	r0, [r5, #0]
90006872:	f009 f90d 	bl	9000fa90 <osMessageQueueGet>
	if(status == osOK) {
90006876:	b970      	cbnz	r0, 90006896 <_ZN5Model4tickEv+0x32>
		modelListener->HandleButtonPressed();
90006878:	4625      	mov	r5, r4
9000687a:	4604      	mov	r4, r0
9000687c:	6828      	ldr	r0, [r5, #0]
9000687e:	6803      	ldr	r3, [r0, #0]
90006880:	689b      	ldr	r3, [r3, #8]
90006882:	4798      	blx	r3
		static uint8_t swap = 1;
		osMessageQueuePut(usbSwapQueueHandle, &swap, 0U, 0U);
90006884:	4806      	ldr	r0, [pc, #24]	@ (900068a0 <_ZN5Model4tickEv+0x3c>)
90006886:	4623      	mov	r3, r4
90006888:	4622      	mov	r2, r4
9000688a:	4906      	ldr	r1, [pc, #24]	@ (900068a4 <_ZN5Model4tickEv+0x40>)
9000688c:	6800      	ldr	r0, [r0, #0]
	}
#endif
}
9000688e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		osMessageQueuePut(usbSwapQueueHandle, &swap, 0U, 0U);
90006892:	f009 b8c1 	b.w	9000fa18 <osMessageQueuePut>
}
90006896:	bd70      	pop	{r4, r5, r6, pc}
90006898:	24009b48 	.word	0x24009b48
9000689c:	2400a588 	.word	0x2400a588
900068a0:	24009b40 	.word	0x24009b40
900068a4:	240000fc 	.word	0x240000fc

900068a8 <_ZN5Model22toggleKeyboardModifierEh>:

void Model::toggleKeyboardModifier(uint8_t modifiers)
{
	activeModifiers ^= modifiers;
900068a8:	7903      	ldrb	r3, [r0, #4]
900068aa:	4059      	eors	r1, r3
900068ac:	7101      	strb	r1, [r0, #4]
	touchgfx_printf("Keyboard modifiers changed: 0x%x\n", activeModifiers);
}
900068ae:	4770      	bx	lr

900068b0 <_ZN5Model15handleNormalKeyEt>:

void Model::handleNormalKey(uint16_t key)
{
900068b0:	b570      	push	{r4, r5, r6, lr}
900068b2:	4604      	mov	r4, r0
#ifndef SIMULATOR

	GUIKeyboardEvent* keyboardEvent = (GUIKeyboardEvent*) malloc(sizeof(GUIKeyboardEvent));
900068b4:	2004      	movs	r0, #4
{
900068b6:	460d      	mov	r5, r1
	GUIKeyboardEvent* keyboardEvent = (GUIKeyboardEvent*) malloc(sizeof(GUIKeyboardEvent));
900068b8:	f025 fd0a 	bl	9002c2d0 <malloc>
	keyboardEvent->MODIFIERS = activeModifiers;
900068bc:	7923      	ldrb	r3, [r4, #4]
	GUIKeyboardEvent* keyboardEvent = (GUIKeyboardEvent*) malloc(sizeof(GUIKeyboardEvent));
900068be:	4602      	mov	r2, r0

	usbKeyboardEvent = {
		USB_EVENT_KEYBOARD,
		keyboardEvent,
	};
	osMessageQueuePut(usbEventQueueHandle, &usbKeyboardEvent, 0U, 0U);
900068c0:	4908      	ldr	r1, [pc, #32]	@ (900068e4 <_ZN5Model15handleNormalKeyEt+0x34>)
	usbKeyboardEvent = {
900068c2:	f04f 0c01 	mov.w	ip, #1
	keyboardEvent->MODIFIERS = activeModifiers;
900068c6:	7003      	strb	r3, [r0, #0]
	osMessageQueuePut(usbEventQueueHandle, &usbKeyboardEvent, 0U, 0U);
900068c8:	2300      	movs	r3, #0
	usbKeyboardEvent = {
900068ca:	60e2      	str	r2, [r4, #12]
	keyboardEvent->keyChar = key;
900068cc:	8055      	strh	r5, [r2, #2]
	osMessageQueuePut(usbEventQueueHandle, &usbKeyboardEvent, 0U, 0U);
900068ce:	461a      	mov	r2, r3
900068d0:	6808      	ldr	r0, [r1, #0]
900068d2:	f104 0108 	add.w	r1, r4, #8
	usbKeyboardEvent = {
900068d6:	f884 c008 	strb.w	ip, [r4, #8]

#else
	touchgfx_printf("Key pressed: 0x%x\n", key);
#endif
}
900068da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	osMessageQueuePut(usbEventQueueHandle, &usbKeyboardEvent, 0U, 0U);
900068de:	f009 b89b 	b.w	9000fa18 <osMessageQueuePut>
900068e2:	bf00      	nop
900068e4:	24009b44 	.word	0x24009b44

900068e8 <_ZN5Model19handleMouseMovementEhh>:

void Model::handleMouseMovement(uint8_t x, uint8_t y)
{
900068e8:	b570      	push	{r4, r5, r6, lr}
900068ea:	4604      	mov	r4, r0
#ifndef SIMULATOR
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
900068ec:	2003      	movs	r0, #3
{
900068ee:	460e      	mov	r6, r1
900068f0:	4615      	mov	r5, r2
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
900068f2:	f025 fced 	bl	9002c2d0 <malloc>
	mouseEvent->BUTTONS = 0;
900068f6:	2300      	movs	r3, #0
	mouseEvent->X = x;
	mouseEvent->Y = y;
	usbMouseEvent = {
900068f8:	6160      	str	r0, [r4, #20]
		USB_EVENT_MOUSE,
		mouseEvent,
	};
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
900068fa:	f104 0110 	add.w	r1, r4, #16
	usbMouseEvent = {
900068fe:	7423      	strb	r3, [r4, #16]
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
90006900:	461a      	mov	r2, r3
90006902:	4c04      	ldr	r4, [pc, #16]	@ (90006914 <_ZN5Model19handleMouseMovementEhh+0x2c>)
	mouseEvent->BUTTONS = 0;
90006904:	7003      	strb	r3, [r0, #0]
	mouseEvent->X = x;
90006906:	7046      	strb	r6, [r0, #1]
	mouseEvent->Y = y;
90006908:	7085      	strb	r5, [r0, #2]
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
9000690a:	6820      	ldr	r0, [r4, #0]

#else
	touchgfx_printf("Mouse moved: %d, %d\n", x, y);
#endif
}
9000690c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
90006910:	f009 b882 	b.w	9000fa18 <osMessageQueuePut>
90006914:	24009b44 	.word	0x24009b44

90006918 <_ZN5Model16handleMouseClickEh>:

void Model::handleMouseClick(uint8_t buttons)
{
90006918:	b570      	push	{r4, r5, r6, lr}
9000691a:	4604      	mov	r4, r0
#ifndef SIMULATOR
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
9000691c:	2003      	movs	r0, #3
{
9000691e:	460d      	mov	r5, r1
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
90006920:	f025 fcd6 	bl	9002c2d0 <malloc>
		mouseEvent->BUTTONS = buttons;
		mouseEvent->X = 0;
90006924:	2300      	movs	r3, #0
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
90006926:	4602      	mov	r2, r0
		mouseEvent->Y = 0;
		usbMouseEvent = {
			USB_EVENT_MOUSE,
			mouseEvent,
		};
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
90006928:	4906      	ldr	r1, [pc, #24]	@ (90006944 <_ZN5Model16handleMouseClickEh+0x2c>)
		usbMouseEvent = {
9000692a:	6162      	str	r2, [r4, #20]
		mouseEvent->BUTTONS = buttons;
9000692c:	7015      	strb	r5, [r2, #0]
		mouseEvent->X = 0;
9000692e:	7053      	strb	r3, [r2, #1]
		mouseEvent->Y = 0;
90006930:	7093      	strb	r3, [r2, #2]
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
90006932:	461a      	mov	r2, r3
90006934:	6808      	ldr	r0, [r1, #0]
90006936:	f104 0110 	add.w	r1, r4, #16
		usbMouseEvent = {
9000693a:	7423      	strb	r3, [r4, #16]

#else
	touchgfx_printf("Mouse clicked: 0x%x\n", buttons);
#endif
}
9000693c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
90006940:	f009 b86a 	b.w	9000fa18 <osMessageQueuePut>
90006944:	24009b44 	.word	0x24009b44

90006948 <_ZN17TouchpadContainerD1Ev>:
    add(circle1);
	touchgfx_printf("Hello touchable!");
    setTouchable(true);
}

TouchpadContainer::~TouchpadContainer() {
90006948:	4b03      	ldr	r3, [pc, #12]	@ (90006958 <_ZN17TouchpadContainerD1Ev+0x10>)
9000694a:	b510      	push	{r4, lr}
9000694c:	4604      	mov	r4, r0
9000694e:	6003      	str	r3, [r0, #0]
    CanvasWidgetRenderer::resetBuffer();
90006950:	f011 fa04 	bl	90017d5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90006954:	4620      	mov	r0, r4
90006956:	bd10      	pop	{r4, pc}
90006958:	9002fc50 	.word	0x9002fc50

9000695c <_ZN17TouchpadContainerD0Ev>:
TouchpadContainer::~TouchpadContainer() {
9000695c:	4b06      	ldr	r3, [pc, #24]	@ (90006978 <_ZN17TouchpadContainerD0Ev+0x1c>)
9000695e:	b510      	push	{r4, lr}
90006960:	4604      	mov	r4, r0
90006962:	6003      	str	r3, [r0, #0]
    CanvasWidgetRenderer::resetBuffer();
90006964:	f011 f9fa 	bl	90017d5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90006968:	f641 41a8 	movw	r1, #7336	@ 0x1ca8
9000696c:	4620      	mov	r0, r4
9000696e:	f025 f914 	bl	9002bb9a <_ZdlPvj>
90006972:	4620      	mov	r0, r4
90006974:	bd10      	pop	{r4, pc}
90006976:	bf00      	nop
90006978:	9002fc50 	.word	0x9002fc50

9000697c <_ZN17TouchpadContainerC1Ev>:
TouchpadContainer::TouchpadContainer() {
9000697c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
          touchable(false),
90006980:	f44f 7280 	mov.w	r2, #256	@ 0x100
        : x(0), y(0), width(0), height(0)
90006984:	2500      	movs	r5, #0
90006986:	4b42      	ldr	r3, [pc, #264]	@ (90006a90 <_ZN17TouchpadContainerC1Ev+0x114>)
90006988:	4606      	mov	r6, r0
9000698a:	4604      	mov	r4, r0
9000698c:	8482      	strh	r2, [r0, #36]	@ 0x24
          firstChild(0)
9000698e:	6285      	str	r5, [r0, #40]	@ 0x28
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90006990:	f8df 8118 	ldr.w	r8, [pc, #280]	@ 90006aac <_ZN17TouchpadContainerC1Ev+0x130>
90006994:	f104 0774 	add.w	r7, r4, #116	@ 0x74
90006998:	e9c0 5501 	strd	r5, r5, [r0, #4]
9000699c:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
900069a0:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
900069a4:	e9c0 5507 	strd	r5, r5, [r0, #28]
900069a8:	f846 3b2c 	str.w	r3, [r6], #44
900069ac:	4630      	mov	r0, r6
900069ae:	f00f f999 	bl	90015ce4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainter()
900069b2:	4b38      	ldr	r3, [pc, #224]	@ (90006a94 <_ZN17TouchpadContainerC1Ev+0x118>)
        : widgetWidth(0)
900069b4:	f8a4 5078 	strh.w	r5, [r4, #120]	@ 0x78
900069b8:	6763      	str	r3, [r4, #116]	@ 0x74
900069ba:	f8d8 3000 	ldr.w	r3, [r8]
900069be:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900069c2:	b312      	cbz	r2, 90006a0a <_ZN17TouchpadContainerC1Ev+0x8e>
900069c4:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900069c6:	2800      	cmp	r0, #0
900069c8:	d05b      	beq.n	90006a82 <_ZN17TouchpadContainerC1Ev+0x106>
        bool compat = HAL::lcd().framebufferFormat() == format;
900069ca:	6803      	ldr	r3, [r0, #0]
900069cc:	4d32      	ldr	r5, [pc, #200]	@ (90006a98 <_ZN17TouchpadContainerC1Ev+0x11c>)
900069ce:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900069d0:	42aa      	cmp	r2, r5
900069d2:	d028      	beq.n	90006a26 <_ZN17TouchpadContainerC1Ev+0xaa>
900069d4:	4790      	blx	r2
        return auxiliaryLCD;
900069d6:	f8d8 3000 	ldr.w	r3, [r8]
900069da:	fab0 f880 	clz	r8, r0
900069de:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900069e0:	ea4f 1858 	mov.w	r8, r8, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900069e4:	b140      	cbz	r0, 900069f8 <_ZN17TouchpadContainerC1Ev+0x7c>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900069e6:	6803      	ldr	r3, [r0, #0]
900069e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900069ea:	42ab      	cmp	r3, r5
900069ec:	d01b      	beq.n	90006a26 <_ZN17TouchpadContainerC1Ev+0xaa>
900069ee:	4798      	blx	r3
900069f0:	2800      	cmp	r0, #0
900069f2:	bf08      	it	eq
900069f4:	f048 0801 	orreq.w	r8, r8, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900069f8:	f1b8 0f00 	cmp.w	r8, #0
900069fc:	d113      	bne.n	90006a26 <_ZN17TouchpadContainerC1Ev+0xaa>
900069fe:	4b27      	ldr	r3, [pc, #156]	@ (90006a9c <_ZN17TouchpadContainerC1Ev+0x120>)
90006a00:	212c      	movs	r1, #44	@ 0x2c
90006a02:	4a27      	ldr	r2, [pc, #156]	@ (90006aa0 <_ZN17TouchpadContainerC1Ev+0x124>)
90006a04:	4827      	ldr	r0, [pc, #156]	@ (90006aa4 <_ZN17TouchpadContainerC1Ev+0x128>)
90006a06:	f025 fc3f 	bl	9002c288 <__assert_func>
        return instance->lcdRef;
90006a0a:	6898      	ldr	r0, [r3, #8]
90006a0c:	4d22      	ldr	r5, [pc, #136]	@ (90006a98 <_ZN17TouchpadContainerC1Ev+0x11c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90006a0e:	6802      	ldr	r2, [r0, #0]
90006a10:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90006a12:	42aa      	cmp	r2, r5
90006a14:	d1de      	bne.n	900069d4 <_ZN17TouchpadContainerC1Ev+0x58>
        return auxiliaryLCD;
90006a16:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90006a18:	b128      	cbz	r0, 90006a26 <_ZN17TouchpadContainerC1Ev+0xaa>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006a1a:	6803      	ldr	r3, [r0, #0]
90006a1c:	f04f 0801 	mov.w	r8, #1
90006a20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90006a22:	42ab      	cmp	r3, r5
90006a24:	d1e3      	bne.n	900069ee <_ZN17TouchpadContainerC1Ev+0x72>
90006a26:	4b20      	ldr	r3, [pc, #128]	@ (90006aa8 <_ZN17TouchpadContainerC1Ev+0x12c>)
90006a28:	2500      	movs	r5, #0
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90006a2a:	f104 0088 	add.w	r0, r4, #136	@ 0x88
90006a2e:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
90006a32:	6763      	str	r3, [r4, #116]	@ 0x74
90006a34:	3324      	adds	r3, #36	@ 0x24
90006a36:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
90006a3a:	67e3      	str	r3, [r4, #124]	@ 0x7c
90006a3c:	f011 f984 	bl	90017d48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90006a40:	f04f 1228 	mov.w	r2, #2621480	@ 0x280028
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
90006a44:	f44f 7320 	mov.w	r3, #640	@ 0x280
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
90006a48:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
    add(circle1);
90006a4c:	4631      	mov	r1, r6
        canvasPainter = &painter;
90006a4e:	6567      	str	r7, [r4, #84]	@ 0x54
90006a50:	6620      	str	r0, [r4, #96]	@ 0x60
90006a52:	4620      	mov	r0, r4
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
90006a54:	66e5      	str	r5, [r4, #108]	@ 0x6c
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
90006a56:	6665      	str	r5, [r4, #100]	@ 0x64
90006a58:	e9c4 520c 	strd	r5, r2, [r4, #48]	@ 0x30
        this->circleCenterY = CWRUtil::toQ5(y);
90006a5c:	e9c4 3316 	strd	r3, r3, [r4, #88]	@ 0x58
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
90006a60:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
90006a64:	f04f 33ff 	mov.w	r3, #4294967295
90006a68:	66a2      	str	r2, [r4, #104]	@ 0x68
90006a6a:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90006a6e:	f8a4 3084 	strh.w	r3, [r4, #132]	@ 0x84
90006a72:	f00c fbd3 	bl	9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        touchable = touch;
90006a76:	2301      	movs	r3, #1
}
90006a78:	4620      	mov	r0, r4
90006a7a:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90006a7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return instance->lcdRef;
90006a82:	6898      	ldr	r0, [r3, #8]
90006a84:	4d04      	ldr	r5, [pc, #16]	@ (90006a98 <_ZN17TouchpadContainerC1Ev+0x11c>)
90006a86:	6803      	ldr	r3, [r0, #0]
90006a88:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90006a8a:	42aa      	cmp	r2, r5
90006a8c:	d0cb      	beq.n	90006a26 <_ZN17TouchpadContainerC1Ev+0xaa>
90006a8e:	e7a1      	b.n	900069d4 <_ZN17TouchpadContainerC1Ev+0x58>
90006a90:	9002fc50 	.word	0x9002fc50
90006a94:	9002ea48 	.word	0x9002ea48
90006a98:	90002ee5 	.word	0x90002ee5
90006a9c:	9002e940 	.word	0x9002e940
90006aa0:	9002e9a0 	.word	0x9002e9a0
90006aa4:	9002e9dc 	.word	0x9002e9dc
90006aa8:	900300dc 	.word	0x900300dc
90006aac:	240245a0 	.word	0x240245a0

90006ab0 <_ZN23TouchpadScreenPresenterD1Ev>:

    void HandleButtonPressed();
    void handleMouseMovement(uint8_t x, uint8_t y);
    void handleMouseClick(uint8_t buttons);

    virtual ~TouchpadScreenPresenter() {}
90006ab0:	4770      	bx	lr
90006ab2:	bf00      	nop

90006ab4 <_ZThn4_N23TouchpadScreenPresenterD1Ev>:
90006ab4:	3804      	subs	r0, #4
90006ab6:	4770      	bx	lr

90006ab8 <_ZN23TouchpadScreenPresenter10deactivateEv>:
}

void TouchpadScreenPresenter::activate()
{

}
90006ab8:	4770      	bx	lr
90006aba:	bf00      	nop

90006abc <_ZN23TouchpadScreenPresenter19HandleButtonPressedEv>:

}

void TouchpadScreenPresenter::HandleButtonPressed()
{
	view.goToKeyboardScreen();
90006abc:	68c0      	ldr	r0, [r0, #12]
90006abe:	6803      	ldr	r3, [r0, #0]
90006ac0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90006ac2:	4718      	bx	r3

90006ac4 <_ZN23TouchpadScreenPresenterD0Ev>:
90006ac4:	b510      	push	{r4, lr}
90006ac6:	4604      	mov	r4, r0
90006ac8:	2110      	movs	r1, #16
90006aca:	f025 f866 	bl	9002bb9a <_ZdlPvj>
90006ace:	4620      	mov	r0, r4
90006ad0:	bd10      	pop	{r4, pc}
90006ad2:	bf00      	nop

90006ad4 <_ZThn4_N23TouchpadScreenPresenterD0Ev>:
90006ad4:	b510      	push	{r4, lr}
90006ad6:	1f04      	subs	r4, r0, #4
90006ad8:	2110      	movs	r1, #16
90006ada:	4620      	mov	r0, r4
90006adc:	f025 f85d 	bl	9002bb9a <_ZdlPvj>
90006ae0:	4620      	mov	r0, r4
90006ae2:	bd10      	pop	{r4, pc}

90006ae4 <_ZThn4_N23TouchpadScreenPresenter19HandleButtonPressedEv>:
    void HandleButtonPressed();
90006ae4:	6880      	ldr	r0, [r0, #8]
90006ae6:	6803      	ldr	r3, [r0, #0]
90006ae8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90006aea:	4718      	bx	r3

90006aec <_ZN23TouchpadScreenPresenterC1ER18TouchpadScreenView>:
    : view(v)
90006aec:	4a05      	ldr	r2, [pc, #20]	@ (90006b04 <_ZN23TouchpadScreenPresenterC1ER18TouchpadScreenView+0x18>)
90006aee:	60c1      	str	r1, [r0, #12]
90006af0:	6002      	str	r2, [r0, #0]
TouchpadScreenPresenter::TouchpadScreenPresenter(TouchpadScreenView& v)
90006af2:	b410      	push	{r4}
90006af4:	2400      	movs	r4, #0
90006af6:	6084      	str	r4, [r0, #8]
    : view(v)
90006af8:	f102 041c 	add.w	r4, r2, #28
90006afc:	6044      	str	r4, [r0, #4]
}
90006afe:	f85d 4b04 	ldr.w	r4, [sp], #4
90006b02:	4770      	bx	lr
90006b04:	9002fce0 	.word	0x9002fce0

90006b08 <_ZN23TouchpadScreenPresenter19handleMouseMovementEhh>:
}

void TouchpadScreenPresenter::handleMouseMovement(uint8_t x, uint8_t y)
{
	model->handleMouseMovement(x, y);
90006b08:	6880      	ldr	r0, [r0, #8]
90006b0a:	f7ff beed 	b.w	900068e8 <_ZN5Model19handleMouseMovementEhh>
90006b0e:	bf00      	nop

90006b10 <_ZN23TouchpadScreenPresenter16handleMouseClickEh>:
}

void TouchpadScreenPresenter::handleMouseClick(uint8_t buttons)
{
	model->handleMouseClick(buttons);
90006b10:	6880      	ldr	r0, [r0, #8]
90006b12:	f7ff bf01 	b.w	90006918 <_ZN5Model16handleMouseClickEh>
90006b16:	bf00      	nop

90006b18 <_ZN18TouchpadScreenView14tearDownScreenEv>:
}

void TouchpadScreenView::tearDownScreen()
{
    TouchpadScreenViewBase::tearDownScreen();
}
90006b18:	4770      	bx	lr
90006b1a:	bf00      	nop

90006b1c <_ZN18TouchpadScreenViewC1Ev>:
TouchpadScreenView::TouchpadScreenView() : touchpadContainer()
90006b1c:	b510      	push	{r4, lr}
90006b1e:	4604      	mov	r4, r0
90006b20:	f7fe fe4c 	bl	900057bc <_ZN22TouchpadScreenViewBaseC1Ev>
90006b24:	4b06      	ldr	r3, [pc, #24]	@ (90006b40 <_ZN18TouchpadScreenViewC1Ev+0x24>)
90006b26:	4620      	mov	r0, r4
90006b28:	f840 3b98 	str.w	r3, [r0], #152
90006b2c:	f7ff ff26 	bl	9000697c <_ZN17TouchpadContainerC1Ev>
90006b30:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90006b34:	2200      	movs	r2, #0
}
90006b36:	4620      	mov	r0, r4
TouchpadScreenView::TouchpadScreenView() : touchpadContainer()
90006b38:	f883 2d40 	strb.w	r2, [r3, #3392]	@ 0xd40
}
90006b3c:	bd10      	pop	{r4, pc}
90006b3e:	bf00      	nop
90006b40:	9002fd10 	.word	0x9002fd10

90006b44 <_ZN18TouchpadScreenView11setupScreenEv>:
{
90006b44:	b510      	push	{r4, lr}
90006b46:	4604      	mov	r4, r0
    TouchpadScreenViewBase::setupScreen();
90006b48:	f7fe fe26 	bl	90005798 <_ZN22TouchpadScreenViewBase11setupScreenEv>
        rect.x = x;
90006b4c:	2200      	movs	r2, #0
90006b4e:	f04f 1328 	mov.w	r3, #2621480	@ 0x280028
90006b52:	f104 0198 	add.w	r1, r4, #152	@ 0x98
90006b56:	1d20      	adds	r0, r4, #4
90006b58:	e9c4 2327 	strd	r2, r3, [r4, #156]	@ 0x9c
}
90006b5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90006b60:	f00c bb5c 	b.w	9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>

90006b64 <_ZN18TouchpadScreenViewD1Ev>:

class TouchpadScreenView : public TouchpadScreenViewBase
{
public:
    TouchpadScreenView();
    virtual ~TouchpadScreenView() {}
90006b64:	4b05      	ldr	r3, [pc, #20]	@ (90006b7c <_ZN18TouchpadScreenViewD1Ev+0x18>)
90006b66:	b510      	push	{r4, lr}
90006b68:	4604      	mov	r4, r0
90006b6a:	f840 3b98 	str.w	r3, [r0], #152
90006b6e:	f7ff feeb 	bl	90006948 <_ZN17TouchpadContainerD1Ev>
90006b72:	4620      	mov	r0, r4
90006b74:	f7fe fe0e 	bl	90005794 <_ZN22TouchpadScreenViewBaseD1Ev>
90006b78:	4620      	mov	r0, r4
90006b7a:	bd10      	pop	{r4, pc}
90006b7c:	9002fd10 	.word	0x9002fd10

90006b80 <_ZN18TouchpadScreenViewD0Ev>:
90006b80:	4b08      	ldr	r3, [pc, #32]	@ (90006ba4 <_ZN18TouchpadScreenViewD0Ev+0x24>)
90006b82:	b510      	push	{r4, lr}
90006b84:	4604      	mov	r4, r0
90006b86:	f840 3b98 	str.w	r3, [r0], #152
90006b8a:	f7ff fedd 	bl	90006948 <_ZN17TouchpadContainerD1Ev>
90006b8e:	4620      	mov	r0, r4
90006b90:	f7fe fe00 	bl	90005794 <_ZN22TouchpadScreenViewBaseD1Ev>
90006b94:	4620      	mov	r0, r4
90006b96:	f641 5144 	movw	r1, #7492	@ 0x1d44
90006b9a:	f024 fffe 	bl	9002bb9a <_ZdlPvj>
90006b9e:	4620      	mov	r0, r4
90006ba0:	bd10      	pop	{r4, pc}
90006ba2:	bf00      	nop
90006ba4:	9002fd10 	.word	0x9002fd10

90006ba8 <_ZN18TouchpadScreenView15handleDragEventERKN8touchgfx9DragEventE>:

void TouchpadScreenView::handleDragEvent(const DragEvent& event)
{
	touchgfx_printf("Drag event (%d, %d) -> (%d, %d): %d, %d\n", event.getOldX(), event.getOldY(), event.getNewX(), event.getNewY(), event.getDeltaX(), event.getDeltaY());
	touchpadContainer.moveTo(event.getNewX()-20, event.getNewY()-20);
90006ba8:	898a      	ldrh	r2, [r1, #12]
{
90006baa:	b538      	push	{r3, r4, r5, lr}
	touchpadContainer.moveTo(event.getNewX()-20, event.getNewY()-20);
90006bac:	3a14      	subs	r2, #20
{
90006bae:	460c      	mov	r4, r1
        moveRelative(x - rect.x, y - rect.y);
90006bb0:	f8b0 309e 	ldrh.w	r3, [r0, #158]	@ 0x9e
90006bb4:	4605      	mov	r5, r0
	touchpadContainer.moveTo(event.getNewX()-20, event.getNewY()-20);
90006bb6:	8949      	ldrh	r1, [r1, #10]
90006bb8:	3098      	adds	r0, #152	@ 0x98
90006bba:	1ad2      	subs	r2, r2, r3
90006bbc:	8883      	ldrh	r3, [r0, #4]
90006bbe:	3914      	subs	r1, #20
90006bc0:	b212      	sxth	r2, r2
90006bc2:	1ac9      	subs	r1, r1, r3
90006bc4:	b209      	sxth	r1, r1
90006bc6:	f013 fe9b 	bl	9001a900 <_ZN8touchgfx8Drawable12moveRelativeEss>
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
90006bca:	8923      	ldrh	r3, [r4, #8]
90006bcc:	89a2      	ldrh	r2, [r4, #12]
        return dragNewX - dragOldX;
90006bce:	8961      	ldrh	r1, [r4, #10]
        return dragNewY - dragOldY;
90006bd0:	1ad2      	subs	r2, r2, r3
        return dragNewX - dragOldX;
90006bd2:	88e3      	ldrh	r3, [r4, #6]
	presenter->handleMouseMovement(event.getDeltaX(), event.getDeltaY());
90006bd4:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
90006bd6:	1ac9      	subs	r1, r1, r3
90006bd8:	b2d2      	uxtb	r2, r2
90006bda:	b2c9      	uxtb	r1, r1
90006bdc:	f7ff ff94 	bl	90006b08 <_ZN23TouchpadScreenPresenter19handleMouseMovementEhh>
	isPressValid = false;
90006be0:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
90006be4:	2200      	movs	r2, #0
	TouchpadScreenViewBase::handleDragEvent(event);
90006be6:	4621      	mov	r1, r4
90006be8:	4628      	mov	r0, r5
	isPressValid = false;
90006bea:	f883 2d40 	strb.w	r2, [r3, #3392]	@ 0xd40
}
90006bee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	TouchpadScreenViewBase::handleDragEvent(event);
90006bf2:	f014 bb8f 	b.w	9001b314 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>
90006bf6:	bf00      	nop

90006bf8 <_ZN18TouchpadScreenView16handleClickEventERKN8touchgfx10ClickEventE>:

void TouchpadScreenView::handleClickEvent(const ClickEvent& event)
{
90006bf8:	b538      	push	{r3, r4, r5, lr}
90006bfa:	460c      	mov	r4, r1
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
90006bfc:	7909      	ldrb	r1, [r1, #4]
90006bfe:	4605      	mov	r5, r0
	if(event.getType() == ClickEvent::RELEASED) {
90006c00:	2901      	cmp	r1, #1
90006c02:	d01f      	beq.n	90006c44 <_ZN18TouchpadScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x4c>
		touchgfx_printf("Click event (RELEASED) (%d, %d)\n", event.getX(), event.getY());
		if(isPressValid) {
			presenter->handleMouseClick(0x1);
		}
	} else if (event.getType() == ClickEvent::PRESSED) {
90006c04:	b129      	cbz	r1, 90006c12 <_ZN18TouchpadScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x1a>
		touchpadContainer.moveTo(event.getX()-20, event.getY()-20);
		isPressValid = true;
	}
	TouchpadScreenViewBase::handleClickEvent(event);
90006c06:	4621      	mov	r1, r4
90006c08:	4628      	mov	r0, r5
}
90006c0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	TouchpadScreenViewBase::handleClickEvent(event);
90006c0e:	f014 bb2d 	b.w	9001b26c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
90006c12:	f8b0 309e 	ldrh.w	r3, [r0, #158]	@ 0x9e
90006c16:	3098      	adds	r0, #152	@ 0x98
90006c18:	8922      	ldrh	r2, [r4, #8]
90006c1a:	88e1      	ldrh	r1, [r4, #6]
90006c1c:	1ad2      	subs	r2, r2, r3
90006c1e:	8883      	ldrh	r3, [r0, #4]
90006c20:	1ac9      	subs	r1, r1, r3
90006c22:	3a14      	subs	r2, #20
90006c24:	3914      	subs	r1, #20
90006c26:	b212      	sxth	r2, r2
90006c28:	b209      	sxth	r1, r1
90006c2a:	f013 fe69 	bl	9001a900 <_ZN8touchgfx8Drawable12moveRelativeEss>
		isPressValid = true;
90006c2e:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
90006c32:	2201      	movs	r2, #1
	TouchpadScreenViewBase::handleClickEvent(event);
90006c34:	4621      	mov	r1, r4
90006c36:	4628      	mov	r0, r5
		isPressValid = true;
90006c38:	f883 2d40 	strb.w	r2, [r3, #3392]	@ 0xd40
}
90006c3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	TouchpadScreenViewBase::handleClickEvent(event);
90006c40:	f014 bb14 	b.w	9001b26c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
		if(isPressValid) {
90006c44:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
90006c48:	f893 3d40 	ldrb.w	r3, [r3, #3392]	@ 0xd40
90006c4c:	2b00      	cmp	r3, #0
90006c4e:	d0da      	beq.n	90006c06 <_ZN18TouchpadScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xe>
			presenter->handleMouseClick(0x1);
90006c50:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006c52:	f7ff ff5d 	bl	90006b10 <_ZN23TouchpadScreenPresenter16handleMouseClickEh>
	TouchpadScreenViewBase::handleClickEvent(event);
90006c56:	4621      	mov	r1, r4
90006c58:	4628      	mov	r0, r5
}
90006c5a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	TouchpadScreenViewBase::handleClickEvent(event);
90006c5e:	f014 bb05 	b.w	9001b26c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
90006c62:	bf00      	nop

90006c64 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90006c64:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006c68:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90006c6a:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006c6e:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006c72:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90006c74:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90006c76:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006c7a:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90006c7e:	4770      	bx	lr

90006c80 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90006c80:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90006c84:	2b01      	cmp	r3, #1
90006c86:	d102      	bne.n	90006c8e <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90006c88:	2300      	movs	r3, #0
90006c8a:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90006c8e:	2000      	movs	r0, #0
90006c90:	4770      	bx	lr
90006c92:	bf00      	nop

90006c94 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90006c94:	2000      	movs	r0, #0
90006c96:	4770      	bx	lr

90006c98 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006c98:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006c9a:	6904      	ldr	r4, [r0, #16]
90006c9c:	8900      	ldrh	r0, [r0, #8]
90006c9e:	46a4      	mov	ip, r4
}
90006ca0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006ca4:	4760      	bx	ip
90006ca6:	bf00      	nop

90006ca8 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006ca8:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006caa:	68c4      	ldr	r4, [r0, #12]
90006cac:	8900      	ldrh	r0, [r0, #8]
90006cae:	46a4      	mov	ip, r4
}
90006cb0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006cb4:	4760      	bx	ip
90006cb6:	bf00      	nop

90006cb8 <FT5336_GestureConfig>:
{
90006cb8:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006cba:	f100 0518 	add.w	r5, r0, #24
{
90006cbe:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006cc0:	7809      	ldrb	r1, [r1, #0]
90006cc2:	4628      	mov	r0, r5
90006cc4:	f000 f96c 	bl	90006fa0 <ft5336_radian_value>
90006cc8:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90006cca:	7931      	ldrb	r1, [r6, #4]
90006ccc:	4628      	mov	r0, r5
90006cce:	f000 f975 	bl	90006fbc <ft5336_offset_left_right>
90006cd2:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006cd4:	7a31      	ldrb	r1, [r6, #8]
90006cd6:	4628      	mov	r0, r5
90006cd8:	f000 f97e 	bl	90006fd8 <ft5336_offset_up_down>
90006cdc:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006cde:	7b31      	ldrb	r1, [r6, #12]
90006ce0:	4628      	mov	r0, r5
90006ce2:	f000 f987 	bl	90006ff4 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006ce6:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006ce8:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006cea:	4628      	mov	r0, r5
90006cec:	f000 f990 	bl	90007010 <ft5336_distance_up_down>
90006cf0:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006cf2:	7d31      	ldrb	r1, [r6, #20]
90006cf4:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006cf6:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006cf8:	f000 f998 	bl	9000702c <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006cfc:	42c4      	cmn	r4, r0
}
90006cfe:	bf14      	ite	ne
90006d00:	f04f 30ff 	movne.w	r0, #4294967295
90006d04:	2000      	moveq	r0, #0
90006d06:	bd70      	pop	{r4, r5, r6, pc}

90006d08 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006d08:	3018      	adds	r0, #24
90006d0a:	f000 b9ab 	b.w	90007064 <ft5336_chip_id>
90006d0e:	bf00      	nop

90006d10 <FT5336_GetState>:
{
90006d10:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006d12:	f100 0518 	add.w	r5, r0, #24
{
90006d16:	b083      	sub	sp, #12
90006d18:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006d1a:	4628      	mov	r0, r5
90006d1c:	a901      	add	r1, sp, #4
90006d1e:	f000 f931 	bl	90006f84 <ft5336_td_status>
90006d22:	bb10      	cbnz	r0, 90006d6a <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006d24:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006d28:	2b05      	cmp	r3, #5
90006d2a:	bf94      	ite	ls
90006d2c:	4619      	movls	r1, r3
90006d2e:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006d30:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006d32:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006d34:	4628      	mov	r0, r5
90006d36:	2103      	movs	r1, #3
90006d38:	eb0d 0203 	add.w	r2, sp, r3
90006d3c:	f000 f910 	bl	90006f60 <ft5336_read_reg>
90006d40:	b9b0      	cbnz	r0, 90006d70 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006d42:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006d46:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006d4a:	0212      	lsls	r2, r2, #8
90006d4c:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006d50:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006d52:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006d56:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006d5a:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006d5c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90006d60:	430b      	orrs	r3, r1
90006d62:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90006d66:	b003      	add	sp, #12
90006d68:	bd30      	pop	{r4, r5, pc}
90006d6a:	f04f 31ff 	mov.w	r1, #4294967295
90006d6e:	e7df      	b.n	90006d30 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90006d70:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006d74:	e7f7      	b.n	90006d66 <FT5336_GetState+0x56>
90006d76:	bf00      	nop

90006d78 <FT5336_GetMultiTouchState>:
{
90006d78:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006d7a:	f100 0518 	add.w	r5, r0, #24
{
90006d7e:	b088      	sub	sp, #32
90006d80:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006d82:	4628      	mov	r0, r5
90006d84:	4669      	mov	r1, sp
90006d86:	f000 f8fd 	bl	90006f84 <ft5336_td_status>
90006d8a:	2800      	cmp	r0, #0
90006d8c:	f040 809a 	bne.w	90006ec4 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006d90:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006d94:	2b05      	cmp	r3, #5
90006d96:	bf94      	ite	ls
90006d98:	4619      	movls	r1, r3
90006d9a:	2100      	movhi	r1, #0
90006d9c:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006d9e:	231e      	movs	r3, #30
90006da0:	466a      	mov	r2, sp
90006da2:	4628      	mov	r0, r5
90006da4:	2103      	movs	r1, #3
90006da6:	f000 f8db 	bl	90006f60 <ft5336_read_reg>
90006daa:	2800      	cmp	r0, #0
90006dac:	f040 808d 	bne.w	90006eca <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006db0:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006db4:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006db8:	020a      	lsls	r2, r1, #8
90006dba:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006dbe:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dc0:	f89d c007 	ldrb.w	ip, [sp, #7]
90006dc4:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006dc8:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006dca:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006dce:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dd2:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006dd4:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006dd8:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006dda:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006ddc:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dde:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006de0:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006de4:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006de6:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dea:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006dee:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006df0:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006df2:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006df6:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006df8:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006dfa:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dfc:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e00:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e02:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e04:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e08:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e0c:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e0e:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e10:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e12:	ea45 050c 	orr.w	r5, r5, ip
90006e16:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e1a:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e1e:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e20:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e22:	0212      	lsls	r2, r2, #8
90006e24:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e28:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e2a:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e2e:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e32:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e34:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e36:	f89d 300e 	ldrb.w	r3, [sp, #14]
90006e3a:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e3c:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e40:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e42:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e44:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e48:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e4a:	f89d 200f 	ldrb.w	r2, [sp, #15]
90006e4e:	4313      	orrs	r3, r2
90006e50:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e52:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e54:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e58:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e5c:	020a      	lsls	r2, r1, #8
90006e5e:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e62:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e64:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e68:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e6a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e6e:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e70:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e74:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e76:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e78:	f89d 1018 	ldrb.w	r1, [sp, #24]
90006e7c:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e7e:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e80:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e82:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e86:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e88:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e8c:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e8e:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e92:	f89d 301d 	ldrb.w	r3, [sp, #29]
90006e96:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e98:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e9a:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e9c:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006ea0:	6625      	str	r5, [r4, #96]	@ 0x60
90006ea2:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006ea4:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006ea8:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006eaa:	021b      	lsls	r3, r3, #8
90006eac:	f89d 101b 	ldrb.w	r1, [sp, #27]
90006eb0:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90006eb4:	430b      	orrs	r3, r1
90006eb6:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006eb8:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006ebc:	4313      	orrs	r3, r2
90006ebe:	6163      	str	r3, [r4, #20]
}
90006ec0:	b008      	add	sp, #32
90006ec2:	bd70      	pop	{r4, r5, r6, pc}
90006ec4:	f04f 31ff 	mov.w	r1, #4294967295
90006ec8:	e768      	b.n	90006d9c <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90006eca:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006ece:	e7f7      	b.n	90006ec0 <FT5336_GetMultiTouchState+0x148>

90006ed0 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006ed0:	3018      	adds	r0, #24
90006ed2:	f000 b84d 	b.w	90006f70 <ft5336_gest_id>
90006ed6:	bf00      	nop

90006ed8 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90006ed8:	2101      	movs	r1, #1
90006eda:	3018      	adds	r0, #24
90006edc:	f000 b8b4 	b.w	90007048 <ft5336_g_mode>

90006ee0 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006ee0:	2100      	movs	r1, #0
90006ee2:	3018      	adds	r0, #24
90006ee4:	f000 b8b0 	b.w	90007048 <ft5336_g_mode>

90006ee8 <FT5336_Init>:
{
90006ee8:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90006eea:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90006eee:	b98d      	cbnz	r5, 90006f14 <FT5336_Init+0x2c>
    pObj->IO.Init();
90006ef0:	4606      	mov	r6, r0
90006ef2:	4604      	mov	r4, r0
90006ef4:	f856 3b18 	ldr.w	r3, [r6], #24
90006ef8:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006efa:	4629      	mov	r1, r5
90006efc:	4630      	mov	r0, r6
90006efe:	f000 f8a3 	bl	90007048 <ft5336_g_mode>
  if(ret != FT5336_OK)
90006f02:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006f04:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006f08:	bf18      	it	ne
90006f0a:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006f0c:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90006f10:	4240      	negs	r0, r0
}
90006f12:	bd70      	pop	{r4, r5, r6, pc}
    ret += FT5336_DisableIT(pObj);
90006f14:	2000      	movs	r0, #0
}
90006f16:	bd70      	pop	{r4, r5, r6, pc}

90006f18 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90006f18:	2000      	movs	r0, #0
90006f1a:	4770      	bx	lr

90006f1c <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006f1c:	b1c0      	cbz	r0, 90006f50 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006f1e:	890a      	ldrh	r2, [r1, #8]
{
90006f20:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006f22:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90006f26:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006f28:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006f2c:	694a      	ldr	r2, [r1, #20]
90006f2e:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006f32:	4909      	ldr	r1, [pc, #36]	@ (90006f58 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006f34:	60c5      	str	r5, [r0, #12]
90006f36:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006f3a:	4a08      	ldr	r2, [pc, #32]	@ (90006f5c <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006f3c:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006f40:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006f42:	b10b      	cbz	r3, 90006f48 <FT5336_RegisterBusIO+0x2c>
}
90006f44:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90006f46:	4718      	bx	r3
}
90006f48:	f04f 30ff 	mov.w	r0, #4294967295
90006f4c:	bc30      	pop	{r4, r5}
90006f4e:	4770      	bx	lr
90006f50:	f04f 30ff 	mov.w	r0, #4294967295
90006f54:	4770      	bx	lr
90006f56:	bf00      	nop
90006f58:	90006c99 	.word	0x90006c99
90006f5c:	90006ca9 	.word	0x90006ca9

90006f60 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006f60:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f62:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006f66:	46a4      	mov	ip, r4
}
90006f68:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f6c:	4760      	bx	ip
90006f6e:	bf00      	nop

90006f70 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006f70:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f72:	2301      	movs	r3, #1
{
90006f74:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f76:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006f7a:	4619      	mov	r1, r3
90006f7c:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90006f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f82:	4760      	bx	ip

90006f84 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90006f84:	b538      	push	{r3, r4, r5, lr}
90006f86:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f88:	2301      	movs	r3, #1
90006f8a:	2102      	movs	r1, #2
90006f8c:	4622      	mov	r2, r4
90006f8e:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90006f92:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90006f94:	b918      	cbnz	r0, 90006f9e <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90006f96:	7823      	ldrb	r3, [r4, #0]
90006f98:	f003 030f 	and.w	r3, r3, #15
90006f9c:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90006f9e:	bd38      	pop	{r3, r4, r5, pc}

90006fa0 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90006fa0:	b510      	push	{r4, lr}
90006fa2:	460c      	mov	r4, r1
90006fa4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fa6:	2301      	movs	r3, #1
90006fa8:	2191      	movs	r1, #145	@ 0x91
{
90006faa:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fae:	f10d 0207 	add.w	r2, sp, #7
90006fb2:	6804      	ldr	r4, [r0, #0]
90006fb4:	6880      	ldr	r0, [r0, #8]
90006fb6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006fb8:	b002      	add	sp, #8
90006fba:	bd10      	pop	{r4, pc}

90006fbc <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006fbc:	b510      	push	{r4, lr}
90006fbe:	460c      	mov	r4, r1
90006fc0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fc2:	2301      	movs	r3, #1
90006fc4:	2192      	movs	r1, #146	@ 0x92
{
90006fc6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fca:	f10d 0207 	add.w	r2, sp, #7
90006fce:	6804      	ldr	r4, [r0, #0]
90006fd0:	6880      	ldr	r0, [r0, #8]
90006fd2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006fd4:	b002      	add	sp, #8
90006fd6:	bd10      	pop	{r4, pc}

90006fd8 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006fd8:	b510      	push	{r4, lr}
90006fda:	460c      	mov	r4, r1
90006fdc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fde:	2301      	movs	r3, #1
90006fe0:	2193      	movs	r1, #147	@ 0x93
{
90006fe2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fe6:	f10d 0207 	add.w	r2, sp, #7
90006fea:	6804      	ldr	r4, [r0, #0]
90006fec:	6880      	ldr	r0, [r0, #8]
90006fee:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006ff0:	b002      	add	sp, #8
90006ff2:	bd10      	pop	{r4, pc}

90006ff4 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006ff4:	b510      	push	{r4, lr}
90006ff6:	460c      	mov	r4, r1
90006ff8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006ffa:	2301      	movs	r3, #1
90006ffc:	2194      	movs	r1, #148	@ 0x94
{
90006ffe:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007002:	f10d 0207 	add.w	r2, sp, #7
90007006:	6804      	ldr	r4, [r0, #0]
90007008:	6880      	ldr	r0, [r0, #8]
9000700a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
9000700c:	b002      	add	sp, #8
9000700e:	bd10      	pop	{r4, pc}

90007010 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90007010:	b510      	push	{r4, lr}
90007012:	460c      	mov	r4, r1
90007014:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007016:	2301      	movs	r3, #1
90007018:	2195      	movs	r1, #149	@ 0x95
{
9000701a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000701e:	f10d 0207 	add.w	r2, sp, #7
90007022:	6804      	ldr	r4, [r0, #0]
90007024:	6880      	ldr	r0, [r0, #8]
90007026:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90007028:	b002      	add	sp, #8
9000702a:	bd10      	pop	{r4, pc}

9000702c <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
9000702c:	b510      	push	{r4, lr}
9000702e:	460c      	mov	r4, r1
90007030:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007032:	2301      	movs	r3, #1
90007034:	2196      	movs	r1, #150	@ 0x96
{
90007036:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000703a:	f10d 0207 	add.w	r2, sp, #7
9000703e:	6804      	ldr	r4, [r0, #0]
90007040:	6880      	ldr	r0, [r0, #8]
90007042:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90007044:	b002      	add	sp, #8
90007046:	bd10      	pop	{r4, pc}

90007048 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90007048:	b510      	push	{r4, lr}
9000704a:	460c      	mov	r4, r1
9000704c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000704e:	2301      	movs	r3, #1
90007050:	21a4      	movs	r1, #164	@ 0xa4
{
90007052:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007056:	f10d 0207 	add.w	r2, sp, #7
9000705a:	6804      	ldr	r4, [r0, #0]
9000705c:	6880      	ldr	r0, [r0, #8]
9000705e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90007060:	b002      	add	sp, #8
90007062:	bd10      	pop	{r4, pc}

90007064 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90007064:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007066:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
9000706a:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
9000706c:	2301      	movs	r3, #1
9000706e:	46a4      	mov	ip, r4
90007070:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90007072:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007076:	4760      	bx	ip

90007078 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90007078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
9000707a:	680b      	ldr	r3, [r1, #0]
{
9000707c:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000707e:	4c2a      	ldr	r4, [pc, #168]	@ (90007128 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007080:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
90007084:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90007086:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90007088:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000708a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
9000708c:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000708e:	2301      	movs	r3, #1
90007090:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90007092:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007094:	f007 fa22 	bl	9000e4dc <HAL_SDRAM_SendCommand>
90007098:	2800      	cmp	r0, #0
9000709a:	d142      	bne.n	90007122 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
9000709c:	f000 ff48 	bl	90007f30 <HAL_GetTick>
900070a0:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
900070a2:	f000 ff45 	bl	90007f30 <HAL_GetTick>
900070a6:	4286      	cmp	r6, r0
900070a8:	d0fb      	beq.n	900070a2 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900070aa:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
900070ac:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
900070ae:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070b0:	491d      	ldr	r1, [pc, #116]	@ (90007128 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
900070b2:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
900070b4:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
900070b6:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070b8:	4638      	mov	r0, r7
900070ba:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
900070be:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
900070c0:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070c2:	f007 fa0b 	bl	9000e4dc <HAL_SDRAM_SendCommand>
900070c6:	bb60      	cbnz	r0, 90007122 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070c8:	4917      	ldr	r1, [pc, #92]	@ (90007128 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
900070ca:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
900070ce:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070d0:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
900070d2:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
900070d6:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070d8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
900070dc:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070de:	f007 f9fd 	bl	9000e4dc <HAL_SDRAM_SendCommand>
900070e2:	b9f0      	cbnz	r0, 90007122 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070e4:	4910      	ldr	r1, [pc, #64]	@ (90007128 <MT48LC4M32B2_Init+0xb0>)
900070e6:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900070e8:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
900070ec:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
900070ee:	696a      	ldr	r2, [r5, #20]
900070f0:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
900070f2:	69aa      	ldr	r2, [r5, #24]
900070f4:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900070f6:	69ea      	ldr	r2, [r5, #28]
900070f8:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
900070fa:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
900070fc:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900070fe:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90007100:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007104:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90007108:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000710a:	f007 f9e7 	bl	9000e4dc <HAL_SDRAM_SendCommand>
9000710e:	b940      	cbnz	r0, 90007122 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90007110:	68a9      	ldr	r1, [r5, #8]
90007112:	4638      	mov	r0, r7
90007114:	f007 fa02 	bl	9000e51c <HAL_SDRAM_ProgramRefreshRate>
90007118:	3800      	subs	r0, #0
9000711a:	bf18      	it	ne
9000711c:	2001      	movne	r0, #1
9000711e:	4240      	negs	r0, r0
}
90007120:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90007122:	f04f 30ff 	mov.w	r0, #4294967295
}
90007126:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90007128:	2400a590 	.word	0x2400a590

9000712c <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
9000712c:	4a10      	ldr	r2, [pc, #64]	@ (90007170 <BSP_I2C4_DeInit+0x44>)
{
9000712e:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90007130:	6813      	ldr	r3, [r2, #0]
90007132:	3b01      	subs	r3, #1
90007134:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90007136:	b10b      	cbz	r3, 9000713c <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90007138:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
9000713a:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
9000713c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90007140:	480c      	ldr	r0, [pc, #48]	@ (90007174 <BSP_I2C4_DeInit+0x48>)
90007142:	f001 fac9 	bl	900086d8 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90007146:	480b      	ldr	r0, [pc, #44]	@ (90007174 <BSP_I2C4_DeInit+0x48>)
90007148:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
9000714c:	f001 fac4 	bl	900086d8 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90007150:	4a09      	ldr	r2, [pc, #36]	@ (90007178 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007152:	480a      	ldr	r0, [pc, #40]	@ (9000717c <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90007154:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90007158:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000715c:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90007160:	f001 fec6 	bl	90008ef0 <HAL_I2C_DeInit>
90007164:	2800      	cmp	r0, #0
90007166:	d0e7      	beq.n	90007138 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90007168:	f06f 0007 	mvn.w	r0, #7
}
9000716c:	bd08      	pop	{r3, pc}
9000716e:	bf00      	nop
90007170:	2400aff8 	.word	0x2400aff8
90007174:	58020c00 	.word	0x58020c00
90007178:	58024400 	.word	0x58024400
9000717c:	2400a5a0 	.word	0x2400a5a0

90007180 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90007180:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90007182:	2201      	movs	r2, #1
{
90007184:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90007186:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
9000718a:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
9000718e:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90007192:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90007196:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90007198:	f001 fe4e 	bl	90008e38 <HAL_I2C_Init>
9000719c:	b108      	cbz	r0, 900071a2 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
9000719e:	2001      	movs	r0, #1
}
900071a0:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
900071a2:	4601      	mov	r1, r0
900071a4:	4620      	mov	r0, r4
900071a6:	f002 f8c1 	bl	9000932c <HAL_I2CEx_ConfigAnalogFilter>
900071aa:	2800      	cmp	r0, #0
900071ac:	d1f7      	bne.n	9000719e <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
900071ae:	4601      	mov	r1, r0
900071b0:	4620      	mov	r0, r4
900071b2:	f002 f8e5 	bl	90009380 <HAL_I2CEx_ConfigDigitalFilter>
900071b6:	3800      	subs	r0, #0
900071b8:	bf18      	it	ne
900071ba:	2001      	movne	r0, #1
}
900071bc:	bd10      	pop	{r4, pc}
900071be:	bf00      	nop

900071c0 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
900071c0:	4b9a      	ldr	r3, [pc, #616]	@ (9000742c <BSP_I2C4_Init+0x26c>)
  hbus_i2c4.Instance = BUS_I2C4;
900071c2:	489b      	ldr	r0, [pc, #620]	@ (90007430 <BSP_I2C4_Init+0x270>)
900071c4:	4a9b      	ldr	r2, [pc, #620]	@ (90007434 <BSP_I2C4_Init+0x274>)
{
900071c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
900071ca:	681c      	ldr	r4, [r3, #0]
{
900071cc:	b09d      	sub	sp, #116	@ 0x74
  hbus_i2c4.Instance = BUS_I2C4;
900071ce:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
900071d0:	b11c      	cbz	r4, 900071da <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
900071d2:	2000      	movs	r0, #0
}
900071d4:	b01d      	add	sp, #116	@ 0x74
900071d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
900071da:	2201      	movs	r2, #1
900071dc:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
900071de:	f002 f89f 	bl	90009320 <HAL_I2C_GetState>
900071e2:	2800      	cmp	r0, #0
900071e4:	d1f5      	bne.n	900071d2 <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900071e6:	4d94      	ldr	r5, [pc, #592]	@ (90007438 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900071e8:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
900071ec:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900071ee:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900071f0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900071f4:	f04f 0800 	mov.w	r8, #0
900071f8:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900071fc:	f043 0308 	orr.w	r3, r3, #8
90007200:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90007204:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90007208:	f003 0308 	and.w	r3, r3, #8
9000720c:	9313      	str	r3, [sp, #76]	@ 0x4c
9000720e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007210:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90007214:	f043 0308 	orr.w	r3, r3, #8
90007218:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000721c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90007220:	961a      	str	r6, [sp, #104]	@ 0x68
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007222:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007226:	e9cd 0116 	strd	r0, r1, [sp, #88]	@ 0x58
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000722a:	9314      	str	r3, [sp, #80]	@ 0x50
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
9000722c:	a916      	add	r1, sp, #88	@ 0x58
9000722e:	4883      	ldr	r0, [pc, #524]	@ (9000743c <BSP_I2C4_Init+0x27c>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90007230:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90007232:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007236:	f001 f90d 	bl	90008454 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000723a:	2312      	movs	r3, #18
9000723c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90007240:	a916      	add	r1, sp, #88	@ 0x58
90007242:	487e      	ldr	r0, [pc, #504]	@ (9000743c <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90007244:	961a      	str	r6, [sp, #104]	@ 0x68
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007246:	e9cd 2316 	strd	r2, r3, [sp, #88]	@ 0x58
9000724a:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000724e:	f001 f901 	bl	90008454 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90007252:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90007256:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000725a:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
9000725e:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90007262:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90007266:	9315      	str	r3, [sp, #84]	@ 0x54
90007268:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_FORCE_RESET();
9000726a:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000726e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90007272:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
90007276:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000727a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000727e:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007282:	f006 f841 	bl	9000d308 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90007286:	2800      	cmp	r0, #0
90007288:	f000 81fd 	beq.w	90007686 <BSP_I2C4_Init+0x4c6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000728c:	4b6c      	ldr	r3, [pc, #432]	@ (90007440 <BSP_I2C4_Init+0x280>)
  if (tsdadel_max <= 0)
9000728e:	4625      	mov	r5, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
90007290:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007294:	4e6b      	ldr	r6, [pc, #428]	@ (90007444 <BSP_I2C4_Init+0x284>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007296:	eb03 0350 	add.w	r3, r3, r0, lsr #1
9000729a:	9401      	str	r4, [sp, #4]
9000729c:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
900072a0:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900072a2:	9700      	str	r7, [sp, #0]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900072a4:	eb07 0147 	add.w	r1, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900072a8:	f5c3 7cc3 	rsb	ip, r3, #390	@ 0x186
900072ac:	4b66      	ldr	r3, [pc, #408]	@ (90007448 <BSP_I2C4_Init+0x288>)
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900072ae:	007a      	lsls	r2, r7, #1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
900072b0:	f1c1 0e32 	rsb	lr, r1, #50	@ 0x32
900072b4:	6819      	ldr	r1, [r3, #0]
  if (tsdadel_max <= 0)
900072b6:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
900072ba:	9202      	str	r2, [sp, #8]
  if (tsdadel_min <= 0)
900072bc:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_max <= 0)
900072c0:	4689      	mov	r9, r1
900072c2:	4622      	mov	r2, r4
900072c4:	9111      	str	r1, [sp, #68]	@ 0x44
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900072c6:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
900072ca:	46b8      	mov	r8, r7
900072cc:	eb07 0347 	add.w	r3, r7, r7, lsl #1
900072d0:	bf2c      	ite	cs
900072d2:	2001      	movcs	r0, #1
900072d4:	2000      	movcc	r0, #0
900072d6:	ebbe 0f47 	cmp.w	lr, r7, lsl #1
900072da:	f000 0001 	and.w	r0, r0, #1
900072de:	eb07 0187 	add.w	r1, r7, r7, lsl #2
900072e2:	bf88      	it	hi
900072e4:	2000      	movhi	r0, #0
900072e6:	459e      	cmp	lr, r3
900072e8:	eb07 0483 	add.w	r4, r7, r3, lsl #2
900072ec:	9004      	str	r0, [sp, #16]
900072ee:	bf8c      	ite	hi
900072f0:	2000      	movhi	r0, #0
900072f2:	2001      	movls	r0, #1
900072f4:	459c      	cmp	ip, r3
900072f6:	940f      	str	r4, [sp, #60]	@ 0x3c
900072f8:	ebc7 0bc7 	rsb	fp, r7, r7, lsl #3
900072fc:	bf38      	it	cc
900072fe:	2000      	movcc	r0, #0
90007300:	ebbe 0f87 	cmp.w	lr, r7, lsl #2
90007304:	9006      	str	r0, [sp, #24]
90007306:	eb07 0041 	add.w	r0, r7, r1, lsl #1
9000730a:	9005      	str	r0, [sp, #20]
9000730c:	bf94      	ite	ls
9000730e:	2001      	movls	r0, #1
90007310:	2000      	movhi	r0, #0
90007312:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90007316:	f000 0401 	and.w	r4, r0, #1
9000731a:	bf38      	it	cc
9000731c:	2400      	movcc	r4, #0
9000731e:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007320:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007324:	9407      	str	r4, [sp, #28]
90007326:	bf8c      	ite	hi
90007328:	2400      	movhi	r4, #0
9000732a:	2401      	movls	r4, #1
9000732c:	458c      	cmp	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
9000732e:	9003      	str	r0, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007330:	bf38      	it	cc
90007332:	2400      	movcc	r4, #0
90007334:	ebbe 0f43 	cmp.w	lr, r3, lsl #1
90007338:	bf98      	it	ls
9000733a:	2001      	movls	r0, #1
9000733c:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90007340:	9408      	str	r4, [sp, #32]
90007342:	465c      	mov	r4, fp
90007344:	f000 0001 	and.w	r0, r0, #1
90007348:	bf38      	it	cc
9000734a:	2000      	movcc	r0, #0
9000734c:	45de      	cmp	lr, fp
9000734e:	9009      	str	r0, [sp, #36]	@ 0x24
90007350:	4658      	mov	r0, fp
90007352:	bf8c      	ite	hi
90007354:	2000      	movhi	r0, #0
90007356:	2001      	movls	r0, #1
90007358:	45dc      	cmp	ip, fp
9000735a:	bf38      	it	cc
9000735c:	2000      	movcc	r0, #0
9000735e:	ebbe 0fc7 	cmp.w	lr, r7, lsl #3
90007362:	4683      	mov	fp, r0
90007364:	bf94      	ite	ls
90007366:	f04f 0b01 	movls.w	fp, #1
9000736a:	f04f 0b00 	movhi.w	fp, #0
9000736e:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90007372:	900a      	str	r0, [sp, #40]	@ 0x28
90007374:	f00b 0b01 	and.w	fp, fp, #1
90007378:	bf38      	it	cc
9000737a:	f04f 0b00 	movcc.w	fp, #0
9000737e:	4658      	mov	r0, fp
90007380:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
90007384:	eb07 0bc7 	add.w	fp, r7, r7, lsl #3
90007388:	45de      	cmp	lr, fp
9000738a:	bf8c      	ite	hi
9000738c:	2000      	movhi	r0, #0
9000738e:	2001      	movls	r0, #1
90007390:	45dc      	cmp	ip, fp
90007392:	bf38      	it	cc
90007394:	2000      	movcc	r0, #0
90007396:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
9000739a:	900c      	str	r0, [sp, #48]	@ 0x30
9000739c:	bf98      	it	ls
9000739e:	f04f 0b01 	movls.w	fp, #1
900073a2:	9805      	ldr	r0, [sp, #20]
900073a4:	bf88      	it	hi
900073a6:	f04f 0b00 	movhi.w	fp, #0
900073aa:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
900073ae:	f00b 0b01 	and.w	fp, fp, #1
900073b2:	4601      	mov	r1, r0
900073b4:	bf38      	it	cc
900073b6:	f04f 0b00 	movcc.w	fp, #0
900073ba:	4586      	cmp	lr, r0
900073bc:	bf8c      	ite	hi
900073be:	2100      	movhi	r1, #0
900073c0:	2101      	movls	r1, #1
900073c2:	4584      	cmp	ip, r0
900073c4:	4620      	mov	r0, r4
900073c6:	bf38      	it	cc
900073c8:	2100      	movcc	r1, #0
900073ca:	ebbe 0f83 	cmp.w	lr, r3, lsl #2
900073ce:	910d      	str	r1, [sp, #52]	@ 0x34
900073d0:	bf94      	ite	ls
900073d2:	2101      	movls	r1, #1
900073d4:	2100      	movhi	r1, #0
900073d6:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
900073da:	f001 0101 	and.w	r1, r1, #1
900073de:	bf38      	it	cc
900073e0:	2100      	movcc	r1, #0
900073e2:	910e      	str	r1, [sp, #56]	@ 0x38
900073e4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900073e6:	4571      	cmp	r1, lr
900073e8:	460b      	mov	r3, r1
900073ea:	bf34      	ite	cc
900073ec:	2300      	movcc	r3, #0
900073ee:	2301      	movcs	r3, #1
900073f0:	4561      	cmp	r1, ip
900073f2:	bf88      	it	hi
900073f4:	2300      	movhi	r3, #0
900073f6:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
900073fa:	930f      	str	r3, [sp, #60]	@ 0x3c
900073fc:	bf94      	ite	ls
900073fe:	2301      	movls	r3, #1
90007400:	2300      	movhi	r3, #0
90007402:	ebbc 0f44 	cmp.w	ip, r4, lsl #1
90007406:	f04f 0400 	mov.w	r4, #0
9000740a:	f003 0301 	and.w	r3, r3, #1
9000740e:	bf38      	it	cc
90007410:	2300      	movcc	r3, #0
90007412:	9310      	str	r3, [sp, #64]	@ 0x40
90007414:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90007418:	459e      	cmp	lr, r3
9000741a:	bf8c      	ite	hi
9000741c:	2100      	movhi	r1, #0
9000741e:	2101      	movls	r1, #1
90007420:	459c      	cmp	ip, r3
90007422:	bf38      	it	cc
90007424:	2100      	movcc	r1, #0
90007426:	9105      	str	r1, [sp, #20]
90007428:	e014      	b.n	90007454 <BSP_I2C4_Init+0x294>
9000742a:	bf00      	nop
9000742c:	2400aff8 	.word	0x2400aff8
90007430:	2400a5a0 	.word	0x2400a5a0
90007434:	58001c00 	.word	0x58001c00
90007438:	58024400 	.word	0x58024400
9000743c:	58020c00 	.word	0x58020c00
90007440:	3b9aca00 	.word	0x3b9aca00
90007444:	2400a5f8 	.word	0x2400a5f8
90007448:	2400a5f4 	.word	0x2400a5f4
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
9000744c:	2c10      	cmp	r4, #16
9000744e:	44b8      	add	r8, r7
90007450:	f000 8273 	beq.w	9000793a <BSP_I2C4_Init+0x77a>
      if (tscldel >= (uint32_t)tscldel_min)
90007454:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
90007458:	4623      	mov	r3, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
9000745a:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
9000745e:	d3f5      	bcc.n	9000744c <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
90007460:	ebba 0105 	subs.w	r1, sl, r5
90007464:	bf18      	it	ne
90007466:	2101      	movne	r1, #1
90007468:	f1be 0f00 	cmp.w	lr, #0
9000746c:	bf18      	it	ne
9000746e:	2100      	movne	r1, #0
90007470:	2900      	cmp	r1, #0
90007472:	f040 8250 	bne.w	90007916 <BSP_I2C4_Init+0x756>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007476:	45bc      	cmp	ip, r7
90007478:	bf34      	ite	cc
9000747a:	2100      	movcc	r1, #0
9000747c:	2101      	movcs	r1, #1
9000747e:	45be      	cmp	lr, r7
90007480:	bf88      	it	hi
90007482:	2100      	movhi	r1, #0
            if(presc != prev_presc)
90007484:	45aa      	cmp	sl, r5
90007486:	bf0c      	ite	eq
90007488:	2100      	moveq	r1, #0
9000748a:	f001 0101 	andne.w	r1, r1, #1
9000748e:	2900      	cmp	r1, #0
90007490:	f000 8103 	beq.w	9000769a <BSP_I2C4_Init+0x4da>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007494:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007498:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000749c:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000749e:	46b2      	mov	sl, r6
900074a0:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074a4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074a8:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074ac:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074ae:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074b0:	f200 81aa 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
900074b4:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900074b6:	9a06      	ldr	r2, [sp, #24]
900074b8:	45aa      	cmp	sl, r5
900074ba:	bf0c      	ite	eq
900074bc:	2200      	moveq	r2, #0
900074be:	f002 0201 	andne.w	r2, r2, #1
900074c2:	2a00      	cmp	r2, #0
900074c4:	f000 8105 	beq.w	900076d2 <BSP_I2C4_Init+0x512>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074c8:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900074cc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074d0:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074d2:	46b2      	mov	sl, r6
900074d4:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074d8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074dc:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074e0:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074e2:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074e4:	f200 8190 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
900074e8:	4611      	mov	r1, r2
900074ea:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900074ec:	9a08      	ldr	r2, [sp, #32]
900074ee:	45aa      	cmp	sl, r5
900074f0:	bf0c      	ite	eq
900074f2:	2200      	moveq	r2, #0
900074f4:	f002 0201 	andne.w	r2, r2, #1
900074f8:	2a00      	cmp	r2, #0
900074fa:	f000 8105 	beq.w	90007708 <BSP_I2C4_Init+0x548>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074fe:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007502:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007506:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007508:	46b2      	mov	sl, r6
9000750a:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000750e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007512:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007516:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007518:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000751a:	f200 8175 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
9000751e:	4611      	mov	r1, r2
90007520:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007522:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90007524:	45aa      	cmp	sl, r5
90007526:	bf0c      	ite	eq
90007528:	2200      	moveq	r2, #0
9000752a:	f002 0201 	andne.w	r2, r2, #1
9000752e:	2a00      	cmp	r2, #0
90007530:	f000 8104 	beq.w	9000773c <BSP_I2C4_Init+0x57c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007534:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007538:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000753c:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000753e:	46b2      	mov	sl, r6
90007540:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007544:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007548:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000754c:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000754e:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007550:	f200 815a 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
90007554:	4611      	mov	r1, r2
90007556:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007558:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9000755a:	45aa      	cmp	sl, r5
9000755c:	bf0c      	ite	eq
9000755e:	2200      	moveq	r2, #0
90007560:	f002 0201 	andne.w	r2, r2, #1
90007564:	2a00      	cmp	r2, #0
90007566:	f000 8103 	beq.w	90007770 <BSP_I2C4_Init+0x5b0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000756a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000756e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007572:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007574:	46b2      	mov	sl, r6
90007576:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000757a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000757e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007582:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007584:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007586:	f200 813f 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
9000758a:	4611      	mov	r1, r2
9000758c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000758e:	980d      	ldr	r0, [sp, #52]	@ 0x34
90007590:	4555      	cmp	r5, sl
90007592:	bf0c      	ite	eq
90007594:	2000      	moveq	r0, #0
90007596:	f000 0001 	andne.w	r0, r0, #1
9000759a:	2800      	cmp	r0, #0
9000759c:	f000 8101 	beq.w	900077a2 <BSP_I2C4_Init+0x5e2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075a0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900075a4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075a8:	210b      	movs	r1, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075aa:	46b2      	mov	sl, r6
900075ac:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075b0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075b4:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900075b8:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075ba:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075bc:	f200 8124 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
900075c0:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900075c2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900075c4:	4555      	cmp	r5, sl
900075c6:	bf0c      	ite	eq
900075c8:	2200      	moveq	r2, #0
900075ca:	f002 0201 	andne.w	r2, r2, #1
900075ce:	2a00      	cmp	r2, #0
900075d0:	f000 8100 	beq.w	900077d4 <BSP_I2C4_Init+0x614>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075d4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900075d8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075dc:	200d      	movs	r0, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075de:	46b2      	mov	sl, r6
900075e0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075e4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075e8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900075ec:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075ee:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075f0:	f200 810a 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
900075f4:	4610      	mov	r0, r2
900075f6:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900075f8:	9a05      	ldr	r2, [sp, #20]
900075fa:	4555      	cmp	r5, sl
900075fc:	bf0c      	ite	eq
900075fe:	2200      	moveq	r2, #0
90007600:	f002 0201 	andne.w	r2, r2, #1
90007604:	2a00      	cmp	r2, #0
90007606:	f000 8182 	beq.w	9000790e <BSP_I2C4_Init+0x74e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000760a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
9000760e:	f8df a360 	ldr.w	sl, [pc, #864]	@ 90007970 <BSP_I2C4_Init+0x7b0>
              I2c_valid_timing_nbr ++;
90007612:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007616:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
9000761a:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000761e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007622:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007624:	f04f 030f 	mov.w	r3, #15
90007628:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000762a:	f200 80ed 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
9000762e:	46aa      	mov	sl, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90007630:	e70c      	b.n	9000744c <BSP_I2C4_Init+0x28c>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007632:	9a06      	ldr	r2, [sp, #24]
90007634:	4661      	mov	r1, ip
90007636:	f109 0914 	add.w	r9, r9, #20
9000763a:	3201      	adds	r2, #1
9000763c:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
90007640:	e9dd 3c0c 	ldrd	r3, ip, [sp, #48]	@ 0x30
90007644:	4572      	cmp	r2, lr
90007646:	9206      	str	r2, [sp, #24]
90007648:	f040 8103 	bne.w	90007852 <BSP_I2C4_Init+0x692>
        if (idx < I2C_VALID_TIMING_NBR)
9000764c:	9b01      	ldr	r3, [sp, #4]
9000764e:	2b7f      	cmp	r3, #127	@ 0x7f
90007650:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
90007654:	d817      	bhi.n	90007686 <BSP_I2C4_Init+0x4c6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007656:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000765a:	eb00 0283 	add.w	r2, r0, r3, lsl #2
9000765e:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007662:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90007664:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007666:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007668:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000766c:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007670:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007674:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90007676:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007678:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
9000767a:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000767e:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007680:	430b      	orrs	r3, r1
90007682:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007686:	4621      	mov	r1, r4
90007688:	48b7      	ldr	r0, [pc, #732]	@ (90007968 <BSP_I2C4_Init+0x7a8>)
9000768a:	f7ff fd79 	bl	90007180 <MX_I2C4_Init>
9000768e:	2800      	cmp	r0, #0
90007690:	f43f ad9f 	beq.w	900071d2 <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
90007694:	f06f 0007 	mvn.w	r0, #7
  return ret;
90007698:	e59c      	b.n	900071d4 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
9000769a:	4611      	mov	r1, r2
9000769c:	9a04      	ldr	r2, [sp, #16]
9000769e:	45aa      	cmp	sl, r5
900076a0:	bf0c      	ite	eq
900076a2:	2200      	moveq	r2, #0
900076a4:	f002 0201 	andne.w	r2, r2, #1
900076a8:	2a00      	cmp	r2, #0
900076aa:	f43f af04 	beq.w	900074b6 <BSP_I2C4_Init+0x2f6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076ae:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900076b2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076b6:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076b8:	46b2      	mov	sl, r6
900076ba:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076be:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076c2:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076c6:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076c8:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076ca:	f200 809d 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
900076ce:	4611      	mov	r1, r2
900076d0:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900076d2:	9a07      	ldr	r2, [sp, #28]
900076d4:	45aa      	cmp	sl, r5
900076d6:	bf0c      	ite	eq
900076d8:	2200      	moveq	r2, #0
900076da:	f002 0201 	andne.w	r2, r2, #1
900076de:	2a00      	cmp	r2, #0
900076e0:	f43f af04 	beq.w	900074ec <BSP_I2C4_Init+0x32c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076e4:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900076e8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076ec:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076ee:	46b2      	mov	sl, r6
900076f0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076f4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076f8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076fc:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076fe:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007700:	f200 8082 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
90007704:	4611      	mov	r1, r2
90007706:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007708:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9000770a:	45aa      	cmp	sl, r5
9000770c:	bf0c      	ite	eq
9000770e:	2200      	moveq	r2, #0
90007710:	f002 0201 	andne.w	r2, r2, #1
90007714:	2a00      	cmp	r2, #0
90007716:	f43f af04 	beq.w	90007522 <BSP_I2C4_Init+0x362>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000771a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000771e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007722:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007724:	46b2      	mov	sl, r6
90007726:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000772a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000772e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007732:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007734:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007736:	d867      	bhi.n	90007808 <BSP_I2C4_Init+0x648>
90007738:	4611      	mov	r1, r2
9000773a:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000773c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9000773e:	45aa      	cmp	sl, r5
90007740:	bf0c      	ite	eq
90007742:	2200      	moveq	r2, #0
90007744:	f002 0201 	andne.w	r2, r2, #1
90007748:	2a00      	cmp	r2, #0
9000774a:	f43f af05 	beq.w	90007558 <BSP_I2C4_Init+0x398>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000774e:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007752:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007756:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007758:	46b2      	mov	sl, r6
9000775a:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000775e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007762:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007766:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007768:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000776a:	d84d      	bhi.n	90007808 <BSP_I2C4_Init+0x648>
9000776c:	4611      	mov	r1, r2
9000776e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007770:	45aa      	cmp	sl, r5
90007772:	bf0c      	ite	eq
90007774:	2200      	moveq	r2, #0
90007776:	f00b 0201 	andne.w	r2, fp, #1
9000777a:	2a00      	cmp	r2, #0
9000777c:	f43f af07 	beq.w	9000758e <BSP_I2C4_Init+0x3ce>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007780:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007784:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007788:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000778a:	46b2      	mov	sl, r6
9000778c:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007790:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007794:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007798:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000779a:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000779c:	d834      	bhi.n	90007808 <BSP_I2C4_Init+0x648>
9000779e:	4611      	mov	r1, r2
900077a0:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900077a2:	980e      	ldr	r0, [sp, #56]	@ 0x38
900077a4:	4555      	cmp	r5, sl
900077a6:	bf0c      	ite	eq
900077a8:	2000      	moveq	r0, #0
900077aa:	f000 0001 	andne.w	r0, r0, #1
900077ae:	2800      	cmp	r0, #0
900077b0:	f000 80af 	beq.w	90007912 <BSP_I2C4_Init+0x752>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077b4:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900077b8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900077bc:	210c      	movs	r1, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077be:	46b2      	mov	sl, r6
900077c0:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900077c4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077c8:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900077cc:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900077ce:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900077d0:	d81a      	bhi.n	90007808 <BSP_I2C4_Init+0x648>
900077d2:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900077d4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900077d6:	4555      	cmp	r5, sl
900077d8:	bf0c      	ite	eq
900077da:	2200      	moveq	r2, #0
900077dc:	f002 0201 	andne.w	r2, r2, #1
900077e0:	2a00      	cmp	r2, #0
900077e2:	f43f af09 	beq.w	900075f8 <BSP_I2C4_Init+0x438>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077e6:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900077ea:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077ee:	46b2      	mov	sl, r6
900077f0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
900077f4:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900077f8:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900077fc:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900077fe:	f04f 030e 	mov.w	r3, #14
90007802:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007804:	f67f af13 	bls.w	9000762e <BSP_I2C4_Init+0x46e>
90007808:	4b58      	ldr	r3, [pc, #352]	@ (9000796c <BSP_I2C4_Init+0x7ac>)
9000780a:	4650      	mov	r0, sl
9000780c:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing_nbr ++;
9000780e:	4649      	mov	r1, r9
90007810:	9a02      	ldr	r2, [sp, #8]
90007812:	f8c3 9000 	str.w	r9, [r3]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007816:	2500      	movs	r5, #0
90007818:	9f00      	ldr	r7, [sp, #0]
9000781a:	f240 2657 	movw	r6, #599	@ 0x257
9000781e:	f240 4301 	movw	r3, #1025	@ 0x401
90007822:	9506      	str	r5, [sp, #24]
90007824:	f04f 35ff 	mov.w	r5, #4294967295
90007828:	42be      	cmp	r6, r7
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000782a:	468e      	mov	lr, r1
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000782c:	9501      	str	r5, [sp, #4]
9000782e:	f102 0532 	add.w	r5, r2, #50	@ 0x32
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007832:	9408      	str	r4, [sp, #32]
90007834:	eba3 0302 	sub.w	r3, r3, r2
90007838:	bf38      	it	cc
9000783a:	463e      	movcc	r6, r7
9000783c:	f8df 9130 	ldr.w	r9, [pc, #304]	@ 90007970 <BSP_I2C4_Init+0x7b0>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007840:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
90007844:	f6a2 0c34 	subw	ip, r2, #2100	@ 0x834
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007848:	f240 4a12 	movw	sl, #1042	@ 0x412
9000784c:	4639      	mov	r1, r7
9000784e:	462c      	mov	r4, r5
90007850:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007852:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007856:	2500      	movs	r5, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007858:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000785c:	1a1a      	subs	r2, r3, r0
9000785e:	1827      	adds	r7, r4, r0
90007860:	ea4f 0842 	mov.w	r8, r2, lsl #1
90007864:	eb0c 0200 	add.w	r2, ip, r0
90007868:	e9cd 3c0c 	strd	r3, ip, [sp, #48]	@ 0x30
9000786c:	9207      	str	r2, [sp, #28]
9000786e:	468c      	mov	ip, r1
90007870:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
90007874:	e006      	b.n	90007884 <BSP_I2C4_Init+0x6c4>
90007876:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
9000787a:	4407      	add	r7, r0
9000787c:	eba8 0800 	sub.w	r8, r8, r0
90007880:	f43f aed7 	beq.w	90007632 <BSP_I2C4_Init+0x472>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007884:	f240 5314 	movw	r3, #1300	@ 0x514
90007888:	9500      	str	r5, [sp, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000788a:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000788c:	429f      	cmp	r7, r3
9000788e:	d9f2      	bls.n	90007876 <BSP_I2C4_Init+0x6b6>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007890:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007894:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90007898:	d2ed      	bcs.n	90007876 <BSP_I2C4_Init+0x6b6>
9000789a:	f640 0e34 	movw	lr, #2100	@ 0x834
9000789e:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900078a0:	2200      	movs	r2, #0
900078a2:	ebae 0e03 	sub.w	lr, lr, r3
900078a6:	9b07      	ldr	r3, [sp, #28]
900078a8:	e9cd 5c02 	strd	r5, ip, [sp, #8]
900078ac:	e9cd 7804 	strd	r7, r8, [sp, #16]
900078b0:	443b      	add	r3, r7
900078b2:	f8dd c004 	ldr.w	ip, [sp, #4]
900078b6:	f8dd 8018 	ldr.w	r8, [sp, #24]
900078ba:	e005      	b.n	900078c8 <BSP_I2C4_Init+0x708>
900078bc:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
900078c0:	4403      	add	r3, r0
900078c2:	eba4 0400 	sub.w	r4, r4, r0
900078c6:	d01a      	beq.n	900078fe <BSP_I2C4_Init+0x73e>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900078c8:	eb0e 0103 	add.w	r1, lr, r3
900078cc:	4617      	mov	r7, r2
900078ce:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
900078d2:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900078d4:	42b1      	cmp	r1, r6
900078d6:	d9f1      	bls.n	900078bc <BSP_I2C4_Init+0x6fc>
900078d8:	4555      	cmp	r5, sl
900078da:	d8ef      	bhi.n	900078bc <BSP_I2C4_Init+0x6fc>
            if (error < 0)
900078dc:	ea33 0123 	bics.w	r1, r3, r3, asr #32
900078e0:	bf28      	it	cs
900078e2:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
900078e4:	458b      	cmp	fp, r1
900078e6:	d9e9      	bls.n	900078bc <BSP_I2C4_Init+0x6fc>
              I2c_valid_timing[count].sclh = sclh;
900078e8:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900078ea:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              I2c_valid_timing[count].scll = scll;
900078ee:	9900      	ldr	r1, [sp, #0]
              I2c_valid_timing[count].sclh = sclh;
900078f0:	46c4      	mov	ip, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900078f2:	4403      	add	r3, r0
900078f4:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
900078f8:	e9c9 7103 	strd	r7, r1, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900078fc:	d1e4      	bne.n	900078c8 <BSP_I2C4_Init+0x708>
900078fe:	f8cd c004 	str.w	ip, [sp, #4]
90007902:	9d02      	ldr	r5, [sp, #8]
90007904:	f8dd 8014 	ldr.w	r8, [sp, #20]
90007908:	e9dd c703 	ldrd	ip, r7, [sp, #12]
9000790c:	e7b3      	b.n	90007876 <BSP_I2C4_Init+0x6b6>
9000790e:	4602      	mov	r2, r0
90007910:	e59c      	b.n	9000744c <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
90007912:	4608      	mov	r0, r1
90007914:	e655      	b.n	900075c2 <BSP_I2C4_Init+0x402>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007916:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000791a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000791e:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007920:	46b2      	mov	sl, r6
90007922:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007926:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000792a:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000792e:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007930:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007932:	f63f af69 	bhi.w	90007808 <BSP_I2C4_Init+0x648>
90007936:	46aa      	mov	sl, r5
90007938:	e6b0      	b.n	9000769c <BSP_I2C4_Init+0x4dc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
9000793a:	3501      	adds	r5, #1
9000793c:	9b00      	ldr	r3, [sp, #0]
9000793e:	2d10      	cmp	r5, #16
90007940:	441f      	add	r7, r3
90007942:	f47f acc0 	bne.w	900072c6 <BSP_I2C4_Init+0x106>
90007946:	4693      	mov	fp, r2
90007948:	9c01      	ldr	r4, [sp, #4]
9000794a:	9911      	ldr	r1, [sp, #68]	@ 0x44
9000794c:	9a02      	ldr	r2, [sp, #8]
9000794e:	f1bb 0f00 	cmp.w	fp, #0
90007952:	d003      	beq.n	9000795c <BSP_I2C4_Init+0x79c>
90007954:	4b05      	ldr	r3, [pc, #20]	@ (9000796c <BSP_I2C4_Init+0x7ac>)
90007956:	4649      	mov	r1, r9
90007958:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000795c:	2900      	cmp	r1, #0
9000795e:	f43f ae92 	beq.w	90007686 <BSP_I2C4_Init+0x4c6>
90007962:	4803      	ldr	r0, [pc, #12]	@ (90007970 <BSP_I2C4_Init+0x7b0>)
90007964:	e757      	b.n	90007816 <BSP_I2C4_Init+0x656>
90007966:	bf00      	nop
90007968:	2400a5a0 	.word	0x2400a5a0
9000796c:	2400a5f4 	.word	0x2400a5f4
90007970:	2400a5f8 	.word	0x2400a5f8

90007974 <BSP_I2C4_WriteReg>:
{
90007974:	b530      	push	{r4, r5, lr}
90007976:	4614      	mov	r4, r2
90007978:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000797a:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000797e:	460a      	mov	r2, r1
90007980:	9301      	str	r3, [sp, #4]
90007982:	4601      	mov	r1, r0
90007984:	2301      	movs	r3, #1
90007986:	4809      	ldr	r0, [pc, #36]	@ (900079ac <BSP_I2C4_WriteReg+0x38>)
90007988:	9502      	str	r5, [sp, #8]
9000798a:	9400      	str	r4, [sp, #0]
9000798c:	f001 faca 	bl	90008f24 <HAL_I2C_Mem_Write>
90007990:	b908      	cbnz	r0, 90007996 <BSP_I2C4_WriteReg+0x22>
}
90007992:	b005      	add	sp, #20
90007994:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90007996:	4805      	ldr	r0, [pc, #20]	@ (900079ac <BSP_I2C4_WriteReg+0x38>)
90007998:	f001 fcc6 	bl	90009328 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
9000799c:	2804      	cmp	r0, #4
9000799e:	bf14      	ite	ne
900079a0:	f06f 0003 	mvnne.w	r0, #3
900079a4:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900079a8:	e7f3      	b.n	90007992 <BSP_I2C4_WriteReg+0x1e>
900079aa:	bf00      	nop
900079ac:	2400a5a0 	.word	0x2400a5a0

900079b0 <BSP_I2C4_ReadReg>:
{
900079b0:	b530      	push	{r4, r5, lr}
900079b2:	4614      	mov	r4, r2
900079b4:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900079b6:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
900079ba:	460a      	mov	r2, r1
900079bc:	9301      	str	r3, [sp, #4]
900079be:	4601      	mov	r1, r0
900079c0:	2301      	movs	r3, #1
900079c2:	4809      	ldr	r0, [pc, #36]	@ (900079e8 <BSP_I2C4_ReadReg+0x38>)
900079c4:	9502      	str	r5, [sp, #8]
900079c6:	9400      	str	r4, [sp, #0]
900079c8:	f001 fbaa 	bl	90009120 <HAL_I2C_Mem_Read>
900079cc:	b908      	cbnz	r0, 900079d2 <BSP_I2C4_ReadReg+0x22>
}
900079ce:	b005      	add	sp, #20
900079d0:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900079d2:	4805      	ldr	r0, [pc, #20]	@ (900079e8 <BSP_I2C4_ReadReg+0x38>)
900079d4:	f001 fca8 	bl	90009328 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
900079d8:	2804      	cmp	r0, #4
900079da:	bf14      	ite	ne
900079dc:	f06f 0003 	mvnne.w	r0, #3
900079e0:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900079e4:	e7f3      	b.n	900079ce <BSP_I2C4_ReadReg+0x1e>
900079e6:	bf00      	nop
900079e8:	2400a5a0 	.word	0x2400a5a0

900079ec <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
900079ec:	f000 baa0 	b.w	90007f30 <HAL_GetTick>

900079f0 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
900079f0:	b970      	cbnz	r0, 90007a10 <BSP_SDRAM_DeInit+0x20>
{
900079f2:	b510      	push	{r4, lr}
900079f4:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
900079f6:	4808      	ldr	r0, [pc, #32]	@ (90007a18 <BSP_SDRAM_DeInit+0x28>)
900079f8:	f006 fd62 	bl	9000e4c0 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
900079fc:	207a      	movs	r0, #122	@ 0x7a
900079fe:	f000 fb11 	bl	90008024 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007a02:	4b06      	ldr	r3, [pc, #24]	@ (90007a1c <BSP_SDRAM_DeInit+0x2c>)
90007a04:	4806      	ldr	r0, [pc, #24]	@ (90007a20 <BSP_SDRAM_DeInit+0x30>)
90007a06:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007a08:	f003 fad2 	bl	9000afb0 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007a0c:	4620      	mov	r0, r4
}
90007a0e:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007a10:	f06f 0001 	mvn.w	r0, #1
}
90007a14:	4770      	bx	lr
90007a16:	bf00      	nop
90007a18:	2400b0f4 	.word	0x2400b0f4
90007a1c:	52000040 	.word	0x52000040
90007a20:	2400affc 	.word	0x2400affc

90007a24 <MX_SDRAM_BANK2_Init>:
{
90007a24:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90007a26:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007a28:	2200      	movs	r2, #0
{
90007a2a:	b089      	sub	sp, #36	@ 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007a2c:	4c13      	ldr	r4, [pc, #76]	@ (90007a7c <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007a2e:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007a30:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90007a32:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90007a34:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90007a36:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90007a38:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90007a3a:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007a3c:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90007a40:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90007a42:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007a44:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90007a46:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007a48:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007a4a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007a4e:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007a50:	f44f 6500 	mov.w	r5, #2048	@ 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007a54:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007a56:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007a58:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90007a5c:	2204      	movs	r2, #4
90007a5e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90007a62:	2202      	movs	r2, #2
90007a64:	2302      	movs	r3, #2
90007a66:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007a6a:	4b05      	ldr	r3, [pc, #20]	@ (90007a80 <MX_SDRAM_BANK2_Init+0x5c>)
90007a6c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007a6e:	f006 fcfd 	bl	9000e46c <HAL_SDRAM_Init>
}
90007a72:	3800      	subs	r0, #0
90007a74:	bf18      	it	ne
90007a76:	2001      	movne	r0, #1
90007a78:	b009      	add	sp, #36	@ 0x24
90007a7a:	bd30      	pop	{r4, r5, pc}
90007a7c:	2400b0f4 	.word	0x2400b0f4
90007a80:	52004140 	.word	0x52004140

90007a84 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90007a84:	2800      	cmp	r0, #0
90007a86:	f040 80cd 	bne.w	90007c24 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90007a8a:	4b69      	ldr	r3, [pc, #420]	@ (90007c30 <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007a8c:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
90007a8e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007a92:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
90007a96:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90007a98:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
{
90007a9c:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
90007a9e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007aa2:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007aa4:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
90007aa6:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90007aa8:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007aac:	4c61      	ldr	r4, [pc, #388]	@ (90007c34 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007aae:	4e62      	ldr	r6, [pc, #392]	@ (90007c38 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90007ab0:	9200      	str	r2, [sp, #0]
90007ab2:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90007ab4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007ab8:	430a      	orrs	r2, r1
90007aba:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90007abe:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007ac2:	400a      	ands	r2, r1
90007ac4:	9201      	str	r2, [sp, #4]
90007ac6:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90007ac8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007acc:	f042 0208 	orr.w	r2, r2, #8
90007ad0:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007ad4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007ad8:	f002 0208 	and.w	r2, r2, #8
90007adc:	9202      	str	r2, [sp, #8]
90007ade:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90007ae0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007ae4:	f042 0210 	orr.w	r2, r2, #16
90007ae8:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007aec:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007af0:	f002 0210 	and.w	r2, r2, #16
90007af4:	9203      	str	r2, [sp, #12]
90007af6:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007af8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007afc:	f042 0220 	orr.w	r2, r2, #32
90007b00:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007b04:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007b08:	f002 0220 	and.w	r2, r2, #32
90007b0c:	9204      	str	r2, [sp, #16]
90007b0e:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90007b10:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007b14:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90007b18:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007b1c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007b20:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90007b24:	9205      	str	r2, [sp, #20]
90007b26:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007b28:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007b2c:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90007b30:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007b34:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007b36:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007b3a:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007b3c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007b40:	483e      	ldr	r0, [pc, #248]	@ (90007c3c <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007b42:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007b44:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007b46:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007b4a:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007b4c:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007b4e:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007b50:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007b54:	f000 fc7e 	bl	90008454 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007b58:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007b5c:	a907      	add	r1, sp, #28
90007b5e:	4838      	ldr	r0, [pc, #224]	@ (90007c40 <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007b60:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007b62:	f000 fc77 	bl	90008454 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007b66:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007b6a:	a907      	add	r1, sp, #28
90007b6c:	4835      	ldr	r0, [pc, #212]	@ (90007c44 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007b6e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007b70:	f000 fc70 	bl	90008454 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007b74:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007b78:	a907      	add	r1, sp, #28
90007b7a:	4833      	ldr	r0, [pc, #204]	@ (90007c48 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007b7c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007b7e:	f000 fc69 	bl	90008454 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007b82:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007b84:	a907      	add	r1, sp, #28
90007b86:	4831      	ldr	r0, [pc, #196]	@ (90007c4c <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007b88:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007b8a:	f000 fc63 	bl	90008454 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007b8e:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007b90:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007b94:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90007b98:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90007b9a:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90007b9c:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007b9e:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007ba0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007ba4:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007ba6:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007ba8:	4a29      	ldr	r2, [pc, #164]	@ (90007c50 <BSP_SDRAM_Init+0x1cc>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007baa:	6334      	str	r4, [r6, #48]	@ 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007bac:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007bae:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007bb0:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90007bb4:	f640 0308 	movw	r3, #2056	@ 0x808
90007bb8:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90007bba:	2320      	movs	r3, #32
90007bbc:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007bbe:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90007bc2:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007bc6:	6263      	str	r3, [r4, #36]	@ 0x24
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90007bc8:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90007bcc:	f003 f9f0 	bl	9000afb0 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90007bd0:	4620      	mov	r0, r4
90007bd2:	f003 f973 	bl	9000aebc <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90007bd6:	462a      	mov	r2, r5
90007bd8:	210f      	movs	r1, #15
90007bda:	207a      	movs	r0, #122	@ 0x7a
90007bdc:	f000 f9d8 	bl	90007f90 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90007be0:	207a      	movs	r0, #122	@ 0x7a
90007be2:	f000 fa11 	bl	90008008 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90007be6:	2210      	movs	r2, #16
90007be8:	2104      	movs	r1, #4
90007bea:	4630      	mov	r0, r6
90007bec:	f7ff ff1a 	bl	90007a24 <MX_SDRAM_BANK2_Init>
90007bf0:	4603      	mov	r3, r0
90007bf2:	b9d0      	cbnz	r0, 90007c2a <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007bf4:	4917      	ldr	r1, [pc, #92]	@ (90007c54 <BSP_SDRAM_Init+0x1d0>)
90007bf6:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007bf8:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007bfa:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007bfc:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007bfe:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90007c02:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007c04:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007c08:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007c0c:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007c10:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007c14:	f7ff fa30 	bl	90007078 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90007c18:	2800      	cmp	r0, #0
90007c1a:	bf18      	it	ne
90007c1c:	f06f 0004 	mvnne.w	r0, #4
}
90007c20:	b00d      	add	sp, #52	@ 0x34
90007c22:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007c24:	f06f 0001 	mvn.w	r0, #1
}
90007c28:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90007c2a:	f04f 30ff 	mov.w	r0, #4294967295
90007c2e:	e7f7      	b.n	90007c20 <BSP_SDRAM_Init+0x19c>
90007c30:	58024400 	.word	0x58024400
90007c34:	2400b068 	.word	0x2400b068
90007c38:	2400b0f4 	.word	0x2400b0f4
90007c3c:	58020c00 	.word	0x58020c00
90007c40:	58021000 	.word	0x58021000
90007c44:	58021400 	.word	0x58021400
90007c48:	58021800 	.word	0x58021800
90007c4c:	58021c00 	.word	0x58021c00
90007c50:	52000040 	.word	0x52000040
90007c54:	2400b0d4 	.word	0x2400b0d4

90007c58 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90007c58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007c5c:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90007c5e:	2800      	cmp	r0, #0
90007c60:	d16b      	bne.n	90007d3a <BSP_TS_Init+0xe2>
90007c62:	680b      	ldr	r3, [r1, #0]
90007c64:	460d      	mov	r5, r1
90007c66:	1e5a      	subs	r2, r3, #1
90007c68:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90007c6c:	d265      	bcs.n	90007d3a <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007c6e:	684a      	ldr	r2, [r1, #4]
90007c70:	1e51      	subs	r1, r2, #1
90007c72:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90007c76:	d260      	bcs.n	90007d3a <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90007c78:	4293      	cmp	r3, r2
90007c7a:	bf28      	it	cs
90007c7c:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007c7e:	68ea      	ldr	r2, [r5, #12]
90007c80:	429a      	cmp	r2, r3
90007c82:	d85a      	bhi.n	90007d3a <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90007c84:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90007c86:	4b31      	ldr	r3, [pc, #196]	@ (90007d4c <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007c88:	4c31      	ldr	r4, [pc, #196]	@ (90007d50 <BSP_TS_Init+0xf8>)
90007c8a:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007c8c:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90007c90:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007c92:	4a30      	ldr	r2, [pc, #192]	@ (90007d54 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007c94:	4b30      	ldr	r3, [pc, #192]	@ (90007d58 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007c96:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007c98:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007c9a:	4a30      	ldr	r2, [pc, #192]	@ (90007d5c <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007c9c:	4b30      	ldr	r3, [pc, #192]	@ (90007d60 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90007c9e:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007ca0:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007ca2:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90007ca4:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007ca6:	f7ff f939 	bl	90006f1c <FT5336_RegisterBusIO>
90007caa:	2800      	cmp	r0, #0
90007cac:	d14b      	bne.n	90007d46 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007cae:	a901      	add	r1, sp, #4
90007cb0:	4620      	mov	r0, r4
90007cb2:	f7ff f829 	bl	90006d08 <FT5336_ReadID>
90007cb6:	2800      	cmp	r0, #0
90007cb8:	d145      	bne.n	90007d46 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007cba:	9b01      	ldr	r3, [sp, #4]
90007cbc:	2b51      	cmp	r3, #81	@ 0x51
90007cbe:	d142      	bne.n	90007d46 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007cc0:	4b28      	ldr	r3, [pc, #160]	@ (90007d64 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007cc2:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90007cc4:	4f28      	ldr	r7, [pc, #160]	@ (90007d68 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007cc6:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90007d70 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007cca:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007ccc:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007cd0:	681b      	ldr	r3, [r3, #0]
90007cd2:	4798      	blx	r3
90007cd4:	4606      	mov	r6, r0
90007cd6:	2800      	cmp	r0, #0
90007cd8:	d135      	bne.n	90007d46 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007cda:	4c24      	ldr	r4, [pc, #144]	@ (90007d6c <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007cdc:	a902      	add	r1, sp, #8
90007cde:	6838      	ldr	r0, [r7, #0]
90007ce0:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007ce4:	e9d5 7200 	ldrd	r7, r2, [r5]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007ce8:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007cea:	e9c4 7200 	strd	r7, r2, [r4]
90007cee:	68aa      	ldr	r2, [r5, #8]
90007cf0:	60a2      	str	r2, [r4, #8]
90007cf2:	68ea      	ldr	r2, [r5, #12]
90007cf4:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007cf6:	4798      	blx	r3
90007cf8:	2800      	cmp	r0, #0
90007cfa:	db18      	blt.n	90007d2e <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007cfc:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007d00:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007d04:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007d06:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007d0a:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007d0c:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007d0e:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007d10:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007d12:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007d16:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007d1a:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007d1e:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007d22:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007d24:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
90007d26:	4630      	mov	r0, r6
90007d28:	b008      	add	sp, #32
90007d2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007d2e:	f06f 0604 	mvn.w	r6, #4
}
90007d32:	4630      	mov	r0, r6
90007d34:	b008      	add	sp, #32
90007d36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90007d3a:	f06f 0601 	mvn.w	r6, #1
}
90007d3e:	4630      	mov	r0, r6
90007d40:	b008      	add	sp, #32
90007d42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90007d46:	f04f 36ff 	mov.w	r6, #4294967295
90007d4a:	e7ec      	b.n	90007d26 <BSP_TS_Init+0xce>
90007d4c:	900071c1 	.word	0x900071c1
90007d50:	2400b128 	.word	0x2400b128
90007d54:	9000712d 	.word	0x9000712d
90007d58:	900079b1 	.word	0x900079b1
90007d5c:	90007975 	.word	0x90007975
90007d60:	900079ed 	.word	0x900079ed
90007d64:	24000100 	.word	0x24000100
90007d68:	2400b190 	.word	0x2400b190
90007d6c:	2400b150 	.word	0x2400b150
90007d70:	2400b194 	.word	0x2400b194

90007d74 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90007d74:	2800      	cmp	r0, #0
90007d76:	d154      	bne.n	90007e22 <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007d78:	4b2b      	ldr	r3, [pc, #172]	@ (90007e28 <BSP_TS_GetState+0xb4>)
90007d7a:	4a2c      	ldr	r2, [pc, #176]	@ (90007e2c <BSP_TS_GetState+0xb8>)
90007d7c:	681b      	ldr	r3, [r3, #0]
90007d7e:	6810      	ldr	r0, [r2, #0]
90007d80:	691b      	ldr	r3, [r3, #16]
{
90007d82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007d86:	b084      	sub	sp, #16
90007d88:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007d8a:	a901      	add	r1, sp, #4
90007d8c:	4798      	blx	r3
90007d8e:	2800      	cmp	r0, #0
90007d90:	db3f      	blt.n	90007e12 <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007d92:	4b27      	ldr	r3, [pc, #156]	@ (90007e30 <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90007d94:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007d96:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007d98:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90007d9a:	b930      	cbnz	r0, 90007daa <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90007d9c:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007d9e:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90007da2:	2000      	movs	r0, #0
}
90007da4:	b004      	add	sp, #16
90007da6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007daa:	689f      	ldr	r7, [r3, #8]
90007dac:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90007dae:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007db2:	d433      	bmi.n	90007e1c <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90007db4:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90007db6:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007db8:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007dbc:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007dc0:	d003      	beq.n	90007dca <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007dc2:	f10e 32ff 	add.w	r2, lr, #4294967295
90007dc6:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007dca:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007dce:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007dd0:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007dd2:	bf48      	it	mi
90007dd4:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007dd8:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007ddc:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007dde:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007de0:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007de4:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007de8:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007dec:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007dee:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007df0:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007df2:	bf8c      	ite	hi
90007df4:	1b90      	subhi	r0, r2, r6
90007df6:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007df8:	42a9      	cmp	r1, r5
90007dfa:	bf8c      	ite	hi
90007dfc:	1b4f      	subhi	r7, r1, r5
90007dfe:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007e00:	42b8      	cmp	r0, r7
90007e02:	bf38      	it	cc
90007e04:	4638      	movcc	r0, r7
90007e06:	68df      	ldr	r7, [r3, #12]
90007e08:	4287      	cmp	r7, r0
90007e0a:	d2c8      	bcs.n	90007d9e <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007e0c:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007e0e:	62d9      	str	r1, [r3, #44]	@ 0x2c
90007e10:	e7c7      	b.n	90007da2 <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90007e12:	f06f 0004 	mvn.w	r0, #4
}
90007e16:	b004      	add	sp, #16
90007e18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90007e1c:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007e1e:	4642      	mov	r2, r8
90007e20:	e7ca      	b.n	90007db8 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
90007e22:	f06f 0001 	mvn.w	r0, #1
}
90007e26:	4770      	bx	lr
90007e28:	2400b194 	.word	0x2400b194
90007e2c:	2400b190 	.word	0x2400b190
90007e30:	2400b150 	.word	0x2400b150

90007e34 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007e34:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007e36:	4c19      	ldr	r4, [pc, #100]	@ (90007e9c <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007e38:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007e3a:	4b19      	ldr	r3, [pc, #100]	@ (90007ea0 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007e3c:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90007e40:	4818      	ldr	r0, [pc, #96]	@ (90007ea4 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007e42:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
90007e46:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
90007e4a:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007e4c:	4c16      	ldr	r4, [pc, #88]	@ (90007ea8 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90007e4e:	f041 0101 	orr.w	r1, r1, #1
90007e52:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90007e54:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90007e56:	6819      	ldr	r1, [r3, #0]
90007e58:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007e5a:	4914      	ldr	r1, [pc, #80]	@ (90007eac <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90007e5c:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90007e5e:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90007e60:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90007e62:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90007e64:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90007e66:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90007e68:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90007e6a:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
90007e6c:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
90007e6e:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
90007e70:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
90007e72:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90007e74:	6818      	ldr	r0, [r3, #0]
90007e76:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
90007e7a:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90007e7c:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007e7e:	6823      	ldr	r3, [r4, #0]
90007e80:	4019      	ands	r1, r3
90007e82:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
90007e86:	d203      	bcs.n	90007e90 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007e88:	4b09      	ldr	r3, [pc, #36]	@ (90007eb0 <SystemInit+0x7c>)
90007e8a:	2201      	movs	r2, #1
90007e8c:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007e90:	4a08      	ldr	r2, [pc, #32]	@ (90007eb4 <SystemInit+0x80>)
90007e92:	4b02      	ldr	r3, [pc, #8]	@ (90007e9c <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90007e94:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007e98:	609a      	str	r2, [r3, #8]
}
90007e9a:	4770      	bx	lr
90007e9c:	e000ed00 	.word	0xe000ed00
90007ea0:	58024400 	.word	0x58024400
90007ea4:	eaf6ed7f 	.word	0xeaf6ed7f
90007ea8:	5c001000 	.word	0x5c001000
90007eac:	ffff0000 	.word	0xffff0000
90007eb0:	51008000 	.word	0x51008000
90007eb4:	90000000 	.word	0x90000000

90007eb8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90007eb8:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007eba:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007ebc:	4c12      	ldr	r4, [pc, #72]	@ (90007f08 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007ebe:	f000 f855 	bl	90007f6c <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007ec2:	f004 ffe1 	bl	9000ce88 <HAL_RCC_GetSysClockFreq>
90007ec6:	4b11      	ldr	r3, [pc, #68]	@ (90007f0c <HAL_Init+0x54>)
90007ec8:	4911      	ldr	r1, [pc, #68]	@ (90007f10 <HAL_Init+0x58>)
90007eca:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007ecc:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007ece:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007ed2:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007ed6:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007ed8:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007eda:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90007ede:	490d      	ldr	r1, [pc, #52]	@ (90007f14 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007ee0:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007ee4:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007ee6:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90007eea:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007eec:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007eee:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007ef0:	f7fc fd64 	bl	900049bc <HAL_InitTick>
90007ef4:	b110      	cbz	r0, 90007efc <HAL_Init+0x44>
  {
    return HAL_ERROR;
90007ef6:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007ef8:	4620      	mov	r0, r4
90007efa:	bd10      	pop	{r4, pc}
90007efc:	4604      	mov	r4, r0
  HAL_MspInit();
90007efe:	f7fc fb1b 	bl	90004538 <HAL_MspInit>
}
90007f02:	4620      	mov	r0, r4
90007f04:	bd10      	pop	{r4, pc}
90007f06:	bf00      	nop
90007f08:	24000130 	.word	0x24000130
90007f0c:	58024400 	.word	0x58024400
90007f10:	9002fd40 	.word	0x9002fd40
90007f14:	24000134 	.word	0x24000134

90007f18 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007f18:	4a03      	ldr	r2, [pc, #12]	@ (90007f28 <HAL_IncTick+0x10>)
90007f1a:	4b04      	ldr	r3, [pc, #16]	@ (90007f2c <HAL_IncTick+0x14>)
90007f1c:	6811      	ldr	r1, [r2, #0]
90007f1e:	781b      	ldrb	r3, [r3, #0]
90007f20:	440b      	add	r3, r1
90007f22:	6013      	str	r3, [r2, #0]
}
90007f24:	4770      	bx	lr
90007f26:	bf00      	nop
90007f28:	2400b198 	.word	0x2400b198
90007f2c:	24000138 	.word	0x24000138

90007f30 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007f30:	4b01      	ldr	r3, [pc, #4]	@ (90007f38 <HAL_GetTick+0x8>)
90007f32:	6818      	ldr	r0, [r3, #0]
}
90007f34:	4770      	bx	lr
90007f36:	bf00      	nop
90007f38:	2400b198 	.word	0x2400b198

90007f3c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
90007f3c:	b538      	push	{r3, r4, r5, lr}
90007f3e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
90007f40:	f7ff fff6 	bl	90007f30 <HAL_GetTick>
90007f44:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
90007f46:	1c63      	adds	r3, r4, #1
90007f48:	d002      	beq.n	90007f50 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
90007f4a:	4b04      	ldr	r3, [pc, #16]	@ (90007f5c <HAL_Delay+0x20>)
90007f4c:	781b      	ldrb	r3, [r3, #0]
90007f4e:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
90007f50:	f7ff ffee 	bl	90007f30 <HAL_GetTick>
90007f54:	1b40      	subs	r0, r0, r5
90007f56:	42a0      	cmp	r0, r4
90007f58:	d3fa      	bcc.n	90007f50 <HAL_Delay+0x14>
  {
  }
}
90007f5a:	bd38      	pop	{r3, r4, r5, pc}
90007f5c:	24000138 	.word	0x24000138

90007f60 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007f60:	4b01      	ldr	r3, [pc, #4]	@ (90007f68 <HAL_GetREVID+0x8>)
90007f62:	6818      	ldr	r0, [r3, #0]
}
90007f64:	0c00      	lsrs	r0, r0, #16
90007f66:	4770      	bx	lr
90007f68:	5c001000 	.word	0x5c001000

90007f6c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007f6c:	4906      	ldr	r1, [pc, #24]	@ (90007f88 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007f6e:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007f72:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90007f74:	4b05      	ldr	r3, [pc, #20]	@ (90007f8c <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007f76:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007f78:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007f7c:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90007f80:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90007f82:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90007f84:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90007f86:	4770      	bx	lr
90007f88:	e000ed00 	.word	0xe000ed00
90007f8c:	05fa0000 	.word	0x05fa0000

90007f90 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90007f90:	4b1a      	ldr	r3, [pc, #104]	@ (90007ffc <HAL_NVIC_SetPriority+0x6c>)
90007f92:	68db      	ldr	r3, [r3, #12]
90007f94:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90007f98:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007f9a:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007f9e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007fa2:	f1be 0f04 	cmp.w	lr, #4
90007fa6:	bf28      	it	cs
90007fa8:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007fac:	f1bc 0f06 	cmp.w	ip, #6
90007fb0:	d91a      	bls.n	90007fe8 <HAL_NVIC_SetPriority+0x58>
90007fb2:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90007fb6:	f04f 33ff 	mov.w	r3, #4294967295
90007fba:	fa03 f30c 	lsl.w	r3, r3, ip
90007fbe:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007fc2:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90007fc6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007fc8:	fa03 f30e 	lsl.w	r3, r3, lr
90007fcc:	ea21 0303 	bic.w	r3, r1, r3
90007fd0:	fa03 f30c 	lsl.w	r3, r3, ip
90007fd4:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007fd8:	ea4f 1303 	mov.w	r3, r3, lsl #4
90007fdc:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90007fde:	db06      	blt.n	90007fee <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007fe0:	4a07      	ldr	r2, [pc, #28]	@ (90008000 <HAL_NVIC_SetPriority+0x70>)
90007fe2:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90007fe4:	f85d fb04 	ldr.w	pc, [sp], #4
90007fe8:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007fea:	4694      	mov	ip, r2
90007fec:	e7e9      	b.n	90007fc2 <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007fee:	f000 000f 	and.w	r0, r0, #15
90007ff2:	4a04      	ldr	r2, [pc, #16]	@ (90008004 <HAL_NVIC_SetPriority+0x74>)
90007ff4:	5413      	strb	r3, [r2, r0]
90007ff6:	f85d fb04 	ldr.w	pc, [sp], #4
90007ffa:	bf00      	nop
90007ffc:	e000ed00 	.word	0xe000ed00
90008000:	e000e400 	.word	0xe000e400
90008004:	e000ed14 	.word	0xe000ed14

90008008 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008008:	2800      	cmp	r0, #0
9000800a:	db07      	blt.n	9000801c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000800c:	2301      	movs	r3, #1
9000800e:	f000 011f 	and.w	r1, r0, #31
90008012:	4a03      	ldr	r2, [pc, #12]	@ (90008020 <HAL_NVIC_EnableIRQ+0x18>)
90008014:	0940      	lsrs	r0, r0, #5
90008016:	408b      	lsls	r3, r1
90008018:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
9000801c:	4770      	bx	lr
9000801e:	bf00      	nop
90008020:	e000e100 	.word	0xe000e100

90008024 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90008024:	2800      	cmp	r0, #0
90008026:	db0c      	blt.n	90008042 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90008028:	0943      	lsrs	r3, r0, #5
9000802a:	2201      	movs	r2, #1
9000802c:	f000 001f 	and.w	r0, r0, #31
90008030:	4904      	ldr	r1, [pc, #16]	@ (90008044 <HAL_NVIC_DisableIRQ+0x20>)
90008032:	3320      	adds	r3, #32
90008034:	4082      	lsls	r2, r0
90008036:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
9000803a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000803e:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90008042:	4770      	bx	lr
90008044:	e000e100 	.word	0xe000e100

90008048 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90008048:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000804c:	4b04      	ldr	r3, [pc, #16]	@ (90008060 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000804e:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90008050:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90008052:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90008056:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
90008058:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
9000805c:	4770      	bx	lr
9000805e:	bf00      	nop
90008060:	e000ed00 	.word	0xe000ed00

90008064 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90008064:	4b06      	ldr	r3, [pc, #24]	@ (90008080 <HAL_MPU_Enable+0x1c>)
90008066:	f040 0001 	orr.w	r0, r0, #1
9000806a:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000806e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90008070:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90008074:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90008076:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000807a:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000807e:	4770      	bx	lr
90008080:	e000ed00 	.word	0xe000ed00

90008084 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90008084:	4a16      	ldr	r2, [pc, #88]	@ (900080e0 <HAL_MPU_ConfigRegion+0x5c>)
90008086:	7843      	ldrb	r3, [r0, #1]
90008088:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
9000808c:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
90008090:	f023 0301 	bic.w	r3, r3, #1
90008094:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
90008098:	6843      	ldr	r3, [r0, #4]
9000809a:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000809e:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900080a0:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
900080a4:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
900080a6:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900080a8:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
900080ac:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900080b0:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
900080b2:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900080b4:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
900080b8:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900080bc:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
900080c0:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900080c2:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
900080c6:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
900080ca:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900080ce:	7a01      	ldrb	r1, [r0, #8]
900080d0:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
900080d4:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900080d8:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
900080dc:	4770      	bx	lr
900080de:	bf00      	nop
900080e0:	e000ed00 	.word	0xe000ed00

900080e4 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
900080e4:	2800      	cmp	r0, #0
900080e6:	d036      	beq.n	90008156 <HAL_CRC_Init+0x72>
{
900080e8:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
900080ea:	7f43      	ldrb	r3, [r0, #29]
900080ec:	4604      	mov	r4, r0
900080ee:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900080f2:	b363      	cbz	r3, 9000814e <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
900080f4:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
900080f6:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
900080f8:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
900080fa:	b9f3      	cbnz	r3, 9000813a <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
900080fc:	6823      	ldr	r3, [r4, #0]
900080fe:	4a17      	ldr	r2, [pc, #92]	@ (9000815c <HAL_CRC_Init+0x78>)
90008100:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90008102:	689a      	ldr	r2, [r3, #8]
90008104:	f022 0218 	bic.w	r2, r2, #24
90008108:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000810a:	7962      	ldrb	r2, [r4, #5]
9000810c:	b18a      	cbz	r2, 90008132 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
9000810e:	6922      	ldr	r2, [r4, #16]
90008110:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008112:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008114:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008118:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9000811c:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
9000811e:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90008120:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90008122:	689a      	ldr	r2, [r3, #8]
90008124:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
90008128:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000812a:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
9000812c:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
9000812e:	7761      	strb	r1, [r4, #29]
}
90008130:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008132:	f04f 32ff 	mov.w	r2, #4294967295
90008136:	611a      	str	r2, [r3, #16]
90008138:	e7eb      	b.n	90008112 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000813a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000813e:	4620      	mov	r0, r4
90008140:	f000 f80e 	bl	90008160 <HAL_CRCEx_Polynomial_Set>
90008144:	b908      	cbnz	r0, 9000814a <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008146:	6823      	ldr	r3, [r4, #0]
90008148:	e7df      	b.n	9000810a <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000814a:	2001      	movs	r0, #1
}
9000814c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000814e:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90008150:	f7fc fa0c 	bl	9000456c <HAL_CRC_MspInit>
90008154:	e7ce      	b.n	900080f4 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90008156:	2001      	movs	r0, #1
}
90008158:	4770      	bx	lr
9000815a:	bf00      	nop
9000815c:	04c11db7 	.word	0x04c11db7

90008160 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90008160:	07cb      	lsls	r3, r1, #31
90008162:	d51a      	bpl.n	9000819a <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90008164:	231f      	movs	r3, #31
{
90008166:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008168:	3b01      	subs	r3, #1
9000816a:	1c5c      	adds	r4, r3, #1
9000816c:	fa21 fc03 	lsr.w	ip, r1, r3
90008170:	d015      	beq.n	9000819e <HAL_CRCEx_Polynomial_Set+0x3e>
90008172:	f01c 0f01 	tst.w	ip, #1
90008176:	d0f7      	beq.n	90008168 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
90008178:	2a18      	cmp	r2, #24
9000817a:	d811      	bhi.n	900081a0 <HAL_CRCEx_Polynomial_Set+0x40>
9000817c:	e8df f002 	tbb	[pc, r2]
90008180:	10101016 	.word	0x10101016
90008184:	10101010 	.word	0x10101010
90008188:	10101024 	.word	0x10101024
9000818c:	10101010 	.word	0x10101010
90008190:	10101021 	.word	0x10101021
90008194:	10101010 	.word	0x10101010
90008198:	14          	.byte	0x14
90008199:	00          	.byte	0x00
9000819a:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
9000819c:	4770      	bx	lr
    switch (PolyLength)
9000819e:	b12a      	cbz	r2, 900081ac <HAL_CRCEx_Polynomial_Set+0x4c>
900081a0:	2001      	movs	r0, #1
}
900081a2:	f85d 4b04 	ldr.w	r4, [sp], #4
900081a6:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
900081a8:	2b06      	cmp	r3, #6
900081aa:	d8f9      	bhi.n	900081a0 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900081ac:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900081ae:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
900081b0:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900081b2:	68a3      	ldr	r3, [r4, #8]
900081b4:	f023 0318 	bic.w	r3, r3, #24
900081b8:	4313      	orrs	r3, r2
900081ba:	60a3      	str	r3, [r4, #8]
}
900081bc:	f85d 4b04 	ldr.w	r4, [sp], #4
900081c0:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
900081c2:	2b07      	cmp	r3, #7
900081c4:	d9f2      	bls.n	900081ac <HAL_CRCEx_Polynomial_Set+0x4c>
900081c6:	e7eb      	b.n	900081a0 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
900081c8:	2b0f      	cmp	r3, #15
900081ca:	d9ef      	bls.n	900081ac <HAL_CRCEx_Polynomial_Set+0x4c>
900081cc:	e7e8      	b.n	900081a0 <HAL_CRCEx_Polynomial_Set+0x40>
900081ce:	bf00      	nop

900081d0 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
900081d0:	2800      	cmp	r0, #0
900081d2:	d035      	beq.n	90008240 <HAL_DMA2D_Init+0x70>
{
900081d4:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
900081d6:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
900081da:	4604      	mov	r4, r0
900081dc:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900081e0:	b34b      	cbz	r3, 90008236 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081e2:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900081e4:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081e6:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900081e8:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081ec:	69e1      	ldr	r1, [r4, #28]
900081ee:	681d      	ldr	r5, [r3, #0]
900081f0:	4814      	ldr	r0, [pc, #80]	@ (90008244 <HAL_DMA2D_Init+0x74>)
900081f2:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900081f4:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081f6:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900081f8:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081fa:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900081fc:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081fe:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90008200:	4302      	orrs	r2, r0
90008202:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90008204:	4810      	ldr	r0, [pc, #64]	@ (90008248 <HAL_DMA2D_Init+0x78>)
90008206:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008208:	4910      	ldr	r1, [pc, #64]	@ (9000824c <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000820a:	4302      	orrs	r2, r0
9000820c:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000820e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
90008210:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008212:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90008216:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008218:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000821a:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000821c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
9000821e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90008222:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90008224:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
90008228:	430a      	orrs	r2, r1
9000822a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
9000822c:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000822e:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90008230:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90008234:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90008236:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000823a:	f7fc f9af 	bl	9000459c <HAL_DMA2D_MspInit>
9000823e:	e7d0      	b.n	900081e2 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90008240:	2001      	movs	r0, #1
}
90008242:	4770      	bx	lr
90008244:	fff8ffbf 	.word	0xfff8ffbf
90008248:	fffffef8 	.word	0xfffffef8
9000824c:	ffff0000 	.word	0xffff0000

90008250 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90008250:	4770      	bx	lr
90008252:	bf00      	nop

90008254 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90008254:	4770      	bx	lr
90008256:	bf00      	nop

90008258 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008258:	6803      	ldr	r3, [r0, #0]
{
9000825a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000825c:	685d      	ldr	r5, [r3, #4]
{
9000825e:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90008260:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90008262:	07ea      	lsls	r2, r5, #31
90008264:	d501      	bpl.n	9000826a <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90008266:	05f1      	lsls	r1, r6, #23
90008268:	d456      	bmi.n	90008318 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000826a:	06aa      	lsls	r2, r5, #26
9000826c:	d501      	bpl.n	90008272 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
9000826e:	04b3      	lsls	r3, r6, #18
90008270:	d43b      	bmi.n	900082ea <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90008272:	0728      	lsls	r0, r5, #28
90008274:	d501      	bpl.n	9000827a <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90008276:	0531      	lsls	r1, r6, #20
90008278:	d421      	bmi.n	900082be <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000827a:	076a      	lsls	r2, r5, #29
9000827c:	d501      	bpl.n	90008282 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
9000827e:	0573      	lsls	r3, r6, #21
90008280:	d472      	bmi.n	90008368 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90008282:	07a8      	lsls	r0, r5, #30
90008284:	d501      	bpl.n	9000828a <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90008286:	05b1      	lsls	r1, r6, #22
90008288:	d404      	bmi.n	90008294 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000828a:	06ea      	lsls	r2, r5, #27
9000828c:	d501      	bpl.n	90008292 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000828e:	04f3      	lsls	r3, r6, #19
90008290:	d457      	bmi.n	90008342 <HAL_DMA2D_IRQHandler+0xea>
}
90008292:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90008294:	6823      	ldr	r3, [r4, #0]
90008296:	681a      	ldr	r2, [r3, #0]
90008298:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000829c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000829e:	2202      	movs	r2, #2
900082a0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
900082a2:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900082a4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900082a6:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
900082a8:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
900082aa:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900082ae:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
900082b2:	6a23      	ldr	r3, [r4, #32]
900082b4:	2b00      	cmp	r3, #0
900082b6:	d0e8      	beq.n	9000828a <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
900082b8:	4620      	mov	r0, r4
900082ba:	4798      	blx	r3
900082bc:	e7e5      	b.n	9000828a <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
900082be:	6823      	ldr	r3, [r4, #0]
900082c0:	681a      	ldr	r2, [r3, #0]
900082c2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
900082c6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
900082c8:	2208      	movs	r2, #8
900082ca:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900082cc:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
900082ce:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900082d0:	4313      	orrs	r3, r2
900082d2:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900082d4:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900082d8:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900082da:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900082dc:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900082e0:	2b00      	cmp	r3, #0
900082e2:	d0ca      	beq.n	9000827a <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
900082e4:	4620      	mov	r0, r4
900082e6:	4798      	blx	r3
900082e8:	e7c7      	b.n	9000827a <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
900082ea:	6823      	ldr	r3, [r4, #0]
900082ec:	681a      	ldr	r2, [r3, #0]
900082ee:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
900082f2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
900082f4:	2220      	movs	r2, #32
900082f6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900082f8:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
900082fa:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900082fc:	f043 0302 	orr.w	r3, r3, #2
90008300:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008302:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008306:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90008308:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
9000830a:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000830e:	2b00      	cmp	r3, #0
90008310:	d0af      	beq.n	90008272 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90008312:	4620      	mov	r0, r4
90008314:	4798      	blx	r3
90008316:	e7ac      	b.n	90008272 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90008318:	681a      	ldr	r2, [r3, #0]
9000831a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000831e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90008320:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90008322:	f042 0201 	orr.w	r2, r2, #1
90008326:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90008328:	2201      	movs	r2, #1
9000832a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000832c:	2304      	movs	r3, #4
9000832e:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90008332:	2300      	movs	r3, #0
90008334:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008338:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9000833a:	2b00      	cmp	r3, #0
9000833c:	d095      	beq.n	9000826a <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000833e:	4798      	blx	r3
90008340:	e793      	b.n	9000826a <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008342:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008344:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008346:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90008348:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000834a:	681a      	ldr	r2, [r3, #0]
9000834c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90008350:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008352:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008354:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008356:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90008358:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000835c:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000835e:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008362:	f7ff ff77 	bl	90008254 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90008366:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008368:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000836a:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000836c:	681a      	ldr	r2, [r3, #0]
9000836e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90008372:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90008374:	2204      	movs	r2, #4
90008376:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008378:	f7ff ff6a 	bl	90008250 <HAL_DMA2D_LineEventCallback>
9000837c:	e781      	b.n	90008282 <HAL_DMA2D_IRQHandler+0x2a>
9000837e:	bf00      	nop

90008380 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90008380:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90008384:	2a01      	cmp	r2, #1
90008386:	d05f      	beq.n	90008448 <HAL_DMA2D_ConfigLayer+0xc8>
90008388:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000838a:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000838e:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008390:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90008394:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90008398:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
9000839a:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000839c:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
900083a0:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900083a4:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900083a6:	6b04      	ldr	r4, [r0, #48]	@ 0x30
900083a8:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900083aa:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900083ac:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900083ae:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900083b2:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900083b6:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900083b8:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900083ba:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900083be:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900083c2:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900083c4:	d923      	bls.n	9000840e <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
900083c6:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900083ca:	b971      	cbnz	r1, 900083ea <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900083cc:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900083ce:	491f      	ldr	r1, [pc, #124]	@ (9000844c <HAL_DMA2D_ConfigLayer+0xcc>)
900083d0:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900083d2:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900083d4:	4311      	orrs	r1, r2
900083d6:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900083d8:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
900083da:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
900083dc:	2101      	movs	r1, #1

  return HAL_OK;
900083de:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
900083e0:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
900083e4:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
900083e8:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
900083ea:	2d0b      	cmp	r5, #11
900083ec:	d12a      	bne.n	90008444 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
900083ee:	6c00      	ldr	r0, [r0, #64]	@ 0x40
900083f0:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
900083f4:	4816      	ldr	r0, [pc, #88]	@ (90008450 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900083f6:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900083fa:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900083fc:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008400:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008402:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008406:	430a      	orrs	r2, r1
90008408:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000840a:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000840c:	e7e5      	b.n	900083da <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000840e:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90008412:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008414:	b959      	cbnz	r1, 9000842e <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008416:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008418:	490c      	ldr	r1, [pc, #48]	@ (9000844c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000841a:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000841c:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000841e:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008420:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90008422:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008426:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008428:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000842a:	62a0      	str	r0, [r4, #40]	@ 0x28
9000842c:	e7d5      	b.n	900083da <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000842e:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008430:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008434:	4905      	ldr	r1, [pc, #20]	@ (9000844c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008436:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008438:	4029      	ands	r1, r5
9000843a:	4311      	orrs	r1, r2
9000843c:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000843e:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90008440:	6226      	str	r6, [r4, #32]
90008442:	e7ca      	b.n	900083da <HAL_DMA2D_ConfigLayer+0x5a>
90008444:	4801      	ldr	r0, [pc, #4]	@ (9000844c <HAL_DMA2D_ConfigLayer+0xcc>)
90008446:	e7d6      	b.n	900083f6 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90008448:	2002      	movs	r0, #2
}
9000844a:	4770      	bx	lr
9000844c:	00ccfff0 	.word	0x00ccfff0
90008450:	00c0fff0 	.word	0x00c0fff0

90008454 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90008454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008458:	680c      	ldr	r4, [r1, #0]
{
9000845a:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000845c:	2c00      	cmp	r4, #0
9000845e:	f000 80a5 	beq.w	900085ac <HAL_GPIO_Init+0x158>
  uint32_t position = 0x00U;
90008462:	2300      	movs	r3, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008464:	f04f 0b01 	mov.w	fp, #1
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90008468:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000846c:	9100      	str	r1, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000846e:	fa0b fc03 	lsl.w	ip, fp, r3
    if (iocurrent != 0x00U)
90008472:	ea1c 0a04 	ands.w	sl, ip, r4
90008476:	f000 8094 	beq.w	900085a2 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000847a:	9900      	ldr	r1, [sp, #0]
9000847c:	005f      	lsls	r7, r3, #1
9000847e:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008480:	2103      	movs	r1, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008482:	f005 0203 	and.w	r2, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008486:	fa01 f607 	lsl.w	r6, r1, r7
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000848a:	f102 38ff 	add.w	r8, r2, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000848e:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008490:	f1b8 0f01 	cmp.w	r8, #1
90008494:	f240 808d 	bls.w	900085b2 <HAL_GPIO_Init+0x15e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90008498:	2a03      	cmp	r2, #3
9000849a:	f040 80cb 	bne.w	90008634 <HAL_GPIO_Init+0x1e0>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000849e:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
900084a0:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900084a2:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900084a6:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900084aa:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
900084ae:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900084b0:	d077      	beq.n	900085a2 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900084b2:	4e7f      	ldr	r6, [pc, #508]	@ (900086b0 <HAL_GPIO_Init+0x25c>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900084b4:	f003 0703 	and.w	r7, r3, #3
900084b8:	210f      	movs	r1, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900084ba:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900084be:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900084c0:	f042 0202 	orr.w	r2, r2, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900084c4:	fa01 fc07 	lsl.w	ip, r1, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900084c8:	497a      	ldr	r1, [pc, #488]	@ (900086b4 <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900084ca:	f8c6 20f4 	str.w	r2, [r6, #244]	@ 0xf4
900084ce:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
900084d2:	f023 0603 	bic.w	r6, r3, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900084d6:	4288      	cmp	r0, r1
900084d8:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900084dc:	f002 0202 	and.w	r2, r2, #2
900084e0:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
900084e4:	9203      	str	r2, [sp, #12]
900084e6:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
900084e8:	68b2      	ldr	r2, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900084ea:	ea22 020c 	bic.w	r2, r2, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900084ee:	d031      	beq.n	90008554 <HAL_GPIO_Init+0x100>
900084f0:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
900084f4:	4288      	cmp	r0, r1
900084f6:	f000 80b0 	beq.w	9000865a <HAL_GPIO_Init+0x206>
900084fa:	496f      	ldr	r1, [pc, #444]	@ (900086b8 <HAL_GPIO_Init+0x264>)
900084fc:	4288      	cmp	r0, r1
900084fe:	f000 80b2 	beq.w	90008666 <HAL_GPIO_Init+0x212>
90008502:	f8df c1b8 	ldr.w	ip, [pc, #440]	@ 900086bc <HAL_GPIO_Init+0x268>
90008506:	4560      	cmp	r0, ip
90008508:	f000 80a1 	beq.w	9000864e <HAL_GPIO_Init+0x1fa>
9000850c:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 900086c0 <HAL_GPIO_Init+0x26c>
90008510:	4560      	cmp	r0, ip
90008512:	f000 80b4 	beq.w	9000867e <HAL_GPIO_Init+0x22a>
90008516:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 900086c4 <HAL_GPIO_Init+0x270>
9000851a:	4560      	cmp	r0, ip
9000851c:	f000 80b5 	beq.w	9000868a <HAL_GPIO_Init+0x236>
90008520:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 900086c8 <HAL_GPIO_Init+0x274>
90008524:	4560      	cmp	r0, ip
90008526:	f000 80a4 	beq.w	90008672 <HAL_GPIO_Init+0x21e>
9000852a:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 900086cc <HAL_GPIO_Init+0x278>
9000852e:	4560      	cmp	r0, ip
90008530:	f000 80b1 	beq.w	90008696 <HAL_GPIO_Init+0x242>
90008534:	f8df c198 	ldr.w	ip, [pc, #408]	@ 900086d0 <HAL_GPIO_Init+0x27c>
90008538:	4560      	cmp	r0, ip
9000853a:	f000 80b2 	beq.w	900086a2 <HAL_GPIO_Init+0x24e>
9000853e:	f8df c194 	ldr.w	ip, [pc, #404]	@ 900086d4 <HAL_GPIO_Init+0x280>
90008542:	4560      	cmp	r0, ip
90008544:	bf0c      	ite	eq
90008546:	f04f 0c09 	moveq.w	ip, #9
9000854a:	f04f 0c0a 	movne.w	ip, #10
9000854e:	fa0c f707 	lsl.w	r7, ip, r7
90008552:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
90008554:	60b2      	str	r2, [r6, #8]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008556:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
90008558:	f8de 2000 	ldr.w	r2, [lr]
        temp &= ~(iocurrent);
9000855c:	ea6f 060a 	mvn.w	r6, sl
        {
          temp |= iocurrent;
90008560:	bf4c      	ite	mi
90008562:	ea4a 0202 	orrmi.w	r2, sl, r2
        temp &= ~(iocurrent);
90008566:	4032      	andpl	r2, r6
        }
        EXTI->RTSR1 = temp;

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90008568:	02a9      	lsls	r1, r5, #10
        EXTI->RTSR1 = temp;
9000856a:	f8ce 2000 	str.w	r2, [lr]
        temp = EXTI->FTSR1;
9000856e:	f8de 2004 	ldr.w	r2, [lr, #4]
        temp &= ~(iocurrent);
90008572:	bf54      	ite	pl
90008574:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90008576:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->FTSR1 = temp;

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
9000857a:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
9000857c:	f8ce 2004 	str.w	r2, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
90008580:	f8de 2084 	ldr.w	r2, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
90008584:	bf54      	ite	pl
90008586:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90008588:	ea4a 0202 	orrmi.w	r2, sl, r2
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000858c:	03e9      	lsls	r1, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
9000858e:	f8ce 2084 	str.w	r2, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90008592:	f8de 2080 	ldr.w	r2, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90008596:	bf54      	ite	pl
90008598:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
9000859a:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000859e:	f8ce 2080 	str.w	r2, [lr, #128]	@ 0x80
      }
    }

    position++;
900085a2:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900085a4:	fa34 f203 	lsrs.w	r2, r4, r3
900085a8:	f47f af61 	bne.w	9000846e <HAL_GPIO_Init+0x1a>
  }
}
900085ac:	b005      	add	sp, #20
900085ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
900085b2:	9900      	ldr	r1, [sp, #0]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900085b4:	2a02      	cmp	r2, #2
        temp = GPIOx->OSPEEDR;
900085b6:	f8d0 9008 	ldr.w	r9, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
900085ba:	68c9      	ldr	r1, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900085bc:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
900085c0:	fa01 f807 	lsl.w	r8, r1, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900085c4:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_Init->Speed << (position * 2U));
900085c6:	ea48 0809 	orr.w	r8, r8, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900085ca:	6889      	ldr	r1, [r1, #8]
        GPIOx->OSPEEDR = temp;
900085cc:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900085d0:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
900085d4:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900085d8:	fa08 f803 	lsl.w	r8, r8, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
900085dc:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900085e0:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
900085e4:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900085e8:	fa01 fc07 	lsl.w	ip, r1, r7
      temp = GPIOx->PUPDR;
900085ec:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900085f0:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900085f4:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900085f8:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900085fc:	f47f af4f 	bne.w	9000849e <HAL_GPIO_Init+0x4a>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008600:	f003 0c07 	and.w	ip, r3, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008604:	9900      	ldr	r1, [sp, #0]
        temp = GPIOx->AFR[position >> 3U];
90008606:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000860a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000860e:	6909      	ldr	r1, [r1, #16]
90008610:	eb00 0888 	add.w	r8, r0, r8, lsl #2
90008614:	fa01 f10c 	lsl.w	r1, r1, ip
        temp = GPIOx->AFR[position >> 3U];
90008618:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000861c:	9101      	str	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
9000861e:	210f      	movs	r1, #15
90008620:	fa01 fc0c 	lsl.w	ip, r1, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90008624:	9901      	ldr	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008626:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000862a:	ea41 0c09 	orr.w	ip, r1, r9
        GPIOx->AFR[position >> 3U] = temp;
9000862e:	f8c8 c020 	str.w	ip, [r8, #32]
90008632:	e734      	b.n	9000849e <HAL_GPIO_Init+0x4a>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008634:	9900      	ldr	r1, [sp, #0]
      temp = GPIOx->PUPDR;
90008636:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000863a:	6889      	ldr	r1, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000863c:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008640:	fa01 fc07 	lsl.w	ip, r1, r7
90008644:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90008648:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000864c:	e727      	b.n	9000849e <HAL_GPIO_Init+0x4a>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000864e:	f04f 0c03 	mov.w	ip, #3
90008652:	fa0c f707 	lsl.w	r7, ip, r7
90008656:	433a      	orrs	r2, r7
90008658:	e77c      	b.n	90008554 <HAL_GPIO_Init+0x100>
9000865a:	f04f 0c01 	mov.w	ip, #1
9000865e:	fa0c f707 	lsl.w	r7, ip, r7
90008662:	433a      	orrs	r2, r7
90008664:	e776      	b.n	90008554 <HAL_GPIO_Init+0x100>
90008666:	f04f 0c02 	mov.w	ip, #2
9000866a:	fa0c f707 	lsl.w	r7, ip, r7
9000866e:	433a      	orrs	r2, r7
90008670:	e770      	b.n	90008554 <HAL_GPIO_Init+0x100>
90008672:	f04f 0c06 	mov.w	ip, #6
90008676:	fa0c f707 	lsl.w	r7, ip, r7
9000867a:	433a      	orrs	r2, r7
9000867c:	e76a      	b.n	90008554 <HAL_GPIO_Init+0x100>
9000867e:	f04f 0c04 	mov.w	ip, #4
90008682:	fa0c f707 	lsl.w	r7, ip, r7
90008686:	433a      	orrs	r2, r7
90008688:	e764      	b.n	90008554 <HAL_GPIO_Init+0x100>
9000868a:	f04f 0c05 	mov.w	ip, #5
9000868e:	fa0c f707 	lsl.w	r7, ip, r7
90008692:	433a      	orrs	r2, r7
90008694:	e75e      	b.n	90008554 <HAL_GPIO_Init+0x100>
90008696:	f04f 0c07 	mov.w	ip, #7
9000869a:	fa0c f707 	lsl.w	r7, ip, r7
9000869e:	433a      	orrs	r2, r7
900086a0:	e758      	b.n	90008554 <HAL_GPIO_Init+0x100>
900086a2:	f04f 0c08 	mov.w	ip, #8
900086a6:	fa0c f707 	lsl.w	r7, ip, r7
900086aa:	433a      	orrs	r2, r7
900086ac:	e752      	b.n	90008554 <HAL_GPIO_Init+0x100>
900086ae:	bf00      	nop
900086b0:	58024400 	.word	0x58024400
900086b4:	58020000 	.word	0x58020000
900086b8:	58020800 	.word	0x58020800
900086bc:	58020c00 	.word	0x58020c00
900086c0:	58021000 	.word	0x58021000
900086c4:	58021400 	.word	0x58021400
900086c8:	58021800 	.word	0x58021800
900086cc:	58021c00 	.word	0x58021c00
900086d0:	58022000 	.word	0x58022000
900086d4:	58022400 	.word	0x58022400

900086d8 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
900086d8:	2900      	cmp	r1, #0
900086da:	f000 80ac 	beq.w	90008836 <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
900086de:	2300      	movs	r3, #0
{
900086e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
900086e4:	2601      	movs	r6, #1
{
900086e6:	b083      	sub	sp, #12
900086e8:	f8df a168 	ldr.w	sl, [pc, #360]	@ 90008854 <HAL_GPIO_DeInit+0x17c>
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900086ec:	f04f 080f 	mov.w	r8, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900086f0:	f04f 0903 	mov.w	r9, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
900086f4:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0x00U)
900086f8:	ea12 0c01 	ands.w	ip, r2, r1
900086fc:	d073      	beq.n	900087e6 <HAL_GPIO_DeInit+0x10e>
      tmp = SYSCFG->EXTICR[position >> 2U];
900086fe:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008702:	f003 0403 	and.w	r4, r3, #3
90008706:	4455      	add	r5, sl
90008708:	00a4      	lsls	r4, r4, #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9000870a:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000870c:	fa08 fe04 	lsl.w	lr, r8, r4
90008710:	ea0e 0707 	and.w	r7, lr, r7
90008714:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008716:	4f4b      	ldr	r7, [pc, #300]	@ (90008844 <HAL_GPIO_DeInit+0x16c>)
90008718:	42b8      	cmp	r0, r7
9000871a:	d027      	beq.n	9000876c <HAL_GPIO_DeInit+0x94>
9000871c:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
90008720:	42b8      	cmp	r0, r7
90008722:	d067      	beq.n	900087f4 <HAL_GPIO_DeInit+0x11c>
90008724:	4f48      	ldr	r7, [pc, #288]	@ (90008848 <HAL_GPIO_DeInit+0x170>)
90008726:	42b8      	cmp	r0, r7
90008728:	d067      	beq.n	900087fa <HAL_GPIO_DeInit+0x122>
9000872a:	4f48      	ldr	r7, [pc, #288]	@ (9000884c <HAL_GPIO_DeInit+0x174>)
9000872c:	42b8      	cmp	r0, r7
9000872e:	d06e      	beq.n	9000880e <HAL_GPIO_DeInit+0x136>
90008730:	4f47      	ldr	r7, [pc, #284]	@ (90008850 <HAL_GPIO_DeInit+0x178>)
90008732:	42b8      	cmp	r0, r7
90008734:	d070      	beq.n	90008818 <HAL_GPIO_DeInit+0x140>
90008736:	f8df b120 	ldr.w	fp, [pc, #288]	@ 90008858 <HAL_GPIO_DeInit+0x180>
9000873a:	4558      	cmp	r0, fp
9000873c:	d062      	beq.n	90008804 <HAL_GPIO_DeInit+0x12c>
9000873e:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 9000885c <HAL_GPIO_DeInit+0x184>
90008742:	4558      	cmp	r0, fp
90008744:	d072      	beq.n	9000882c <HAL_GPIO_DeInit+0x154>
90008746:	f8df b118 	ldr.w	fp, [pc, #280]	@ 90008860 <HAL_GPIO_DeInit+0x188>
9000874a:	4558      	cmp	r0, fp
9000874c:	d074      	beq.n	90008838 <HAL_GPIO_DeInit+0x160>
9000874e:	f8df b114 	ldr.w	fp, [pc, #276]	@ 90008864 <HAL_GPIO_DeInit+0x18c>
90008752:	4558      	cmp	r0, fp
90008754:	d065      	beq.n	90008822 <HAL_GPIO_DeInit+0x14a>
90008756:	f8df b110 	ldr.w	fp, [pc, #272]	@ 90008868 <HAL_GPIO_DeInit+0x190>
9000875a:	4558      	cmp	r0, fp
9000875c:	bf14      	ite	ne
9000875e:	f04f 0b0a 	movne.w	fp, #10
90008762:	f04f 0b09 	moveq.w	fp, #9
90008766:	fa0b f404 	lsl.w	r4, fp, r4
9000876a:	e000      	b.n	9000876e <HAL_GPIO_DeInit+0x96>
9000876c:	2400      	movs	r4, #0
9000876e:	9f01      	ldr	r7, [sp, #4]
90008770:	42a7      	cmp	r7, r4
90008772:	d119      	bne.n	900087a8 <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90008774:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
90008778:	f8d4 7080 	ldr.w	r7, [r4, #128]	@ 0x80
9000877c:	ea27 070c 	bic.w	r7, r7, ip
90008780:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90008784:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
90008788:	ea27 070c 	bic.w	r7, r7, ip
9000878c:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90008790:	6867      	ldr	r7, [r4, #4]
90008792:	ea27 070c 	bic.w	r7, r7, ip
90008796:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90008798:	6827      	ldr	r7, [r4, #0]
9000879a:	ea27 070c 	bic.w	r7, r7, ip
9000879e:	6027      	str	r7, [r4, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900087a0:	68ac      	ldr	r4, [r5, #8]
900087a2:	ea24 040e 	bic.w	r4, r4, lr
900087a6:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900087a8:	005d      	lsls	r5, r3, #1
900087aa:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900087ac:	08df      	lsrs	r7, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900087ae:	fa09 f505 	lsl.w	r5, r9, r5
900087b2:	eb00 0787 	add.w	r7, r0, r7, lsl #2
900087b6:	432c      	orrs	r4, r5
900087b8:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900087ba:	f003 0407 	and.w	r4, r3, #7
900087be:	f8d7 c020 	ldr.w	ip, [r7, #32]
900087c2:	00a4      	lsls	r4, r4, #2
900087c4:	fa08 f404 	lsl.w	r4, r8, r4
900087c8:	ea2c 0404 	bic.w	r4, ip, r4
900087cc:	623c      	str	r4, [r7, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900087ce:	68c4      	ldr	r4, [r0, #12]
900087d0:	ea24 0405 	bic.w	r4, r4, r5
900087d4:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900087d6:	6844      	ldr	r4, [r0, #4]
900087d8:	ea24 0202 	bic.w	r2, r4, r2
900087dc:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900087de:	6882      	ldr	r2, [r0, #8]
900087e0:	ea22 0205 	bic.w	r2, r2, r5
900087e4:	6082      	str	r2, [r0, #8]
    }

    position++;
900087e6:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
900087e8:	fa31 f203 	lsrs.w	r2, r1, r3
900087ec:	d182      	bne.n	900086f4 <HAL_GPIO_DeInit+0x1c>
  }
}
900087ee:	b003      	add	sp, #12
900087f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900087f4:	fa06 f404 	lsl.w	r4, r6, r4
900087f8:	e7b9      	b.n	9000876e <HAL_GPIO_DeInit+0x96>
900087fa:	f04f 0b02 	mov.w	fp, #2
900087fe:	fa0b f404 	lsl.w	r4, fp, r4
90008802:	e7b4      	b.n	9000876e <HAL_GPIO_DeInit+0x96>
90008804:	f04f 0b05 	mov.w	fp, #5
90008808:	fa0b f404 	lsl.w	r4, fp, r4
9000880c:	e7af      	b.n	9000876e <HAL_GPIO_DeInit+0x96>
9000880e:	f04f 0b03 	mov.w	fp, #3
90008812:	fa0b f404 	lsl.w	r4, fp, r4
90008816:	e7aa      	b.n	9000876e <HAL_GPIO_DeInit+0x96>
90008818:	f04f 0b04 	mov.w	fp, #4
9000881c:	fa0b f404 	lsl.w	r4, fp, r4
90008820:	e7a5      	b.n	9000876e <HAL_GPIO_DeInit+0x96>
90008822:	f04f 0b08 	mov.w	fp, #8
90008826:	fa0b f404 	lsl.w	r4, fp, r4
9000882a:	e7a0      	b.n	9000876e <HAL_GPIO_DeInit+0x96>
9000882c:	f04f 0b06 	mov.w	fp, #6
90008830:	fa0b f404 	lsl.w	r4, fp, r4
90008834:	e79b      	b.n	9000876e <HAL_GPIO_DeInit+0x96>
90008836:	4770      	bx	lr
90008838:	f04f 0b07 	mov.w	fp, #7
9000883c:	fa0b f404 	lsl.w	r4, fp, r4
90008840:	e795      	b.n	9000876e <HAL_GPIO_DeInit+0x96>
90008842:	bf00      	nop
90008844:	58020000 	.word	0x58020000
90008848:	58020800 	.word	0x58020800
9000884c:	58020c00 	.word	0x58020c00
90008850:	58021000 	.word	0x58021000
90008854:	58000400 	.word	0x58000400
90008858:	58021400 	.word	0x58021400
9000885c:	58021800 	.word	0x58021800
90008860:	58021c00 	.word	0x58021c00
90008864:	58022000 	.word	0x58022000
90008868:	58022400 	.word	0x58022400

9000886c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
9000886c:	6903      	ldr	r3, [r0, #16]
9000886e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90008870:	bf14      	ite	ne
90008872:	2001      	movne	r0, #1
90008874:	2000      	moveq	r0, #0
90008876:	4770      	bx	lr

90008878 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90008878:	b902      	cbnz	r2, 9000887c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000887a:	0409      	lsls	r1, r1, #16
9000887c:	6181      	str	r1, [r0, #24]
  }
}
9000887e:	4770      	bx	lr

90008880 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90008880:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90008882:	ea01 0203 	and.w	r2, r1, r3
90008886:	ea21 0103 	bic.w	r1, r1, r3
9000888a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000888e:	6181      	str	r1, [r0, #24]
}
90008890:	4770      	bx	lr
90008892:	bf00      	nop

90008894 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @param  Status The actual Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
90008894:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008898:	6803      	ldr	r3, [r0, #0]
9000889a:	699a      	ldr	r2, [r3, #24]
9000889c:	0414      	lsls	r4, r2, #16
9000889e:	f140 8088 	bpl.w	900089b2 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11e>
900088a2:	4604      	mov	r4, r0
900088a4:	4688      	mov	r8, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900088a6:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
900088aa:	699e      	ldr	r6, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900088ac:	f016 0610 	ands.w	r6, r6, #16
900088b0:	f000 8082 	beq.w	900089b8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x124>
  uint32_t error_code = 0;
900088b4:	2600      	movs	r6, #0
  uint32_t tickstart = Tickstart;
900088b6:	4645      	mov	r5, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900088b8:	f8c3 901c 	str.w	r9, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
900088bc:	4637      	mov	r7, r6

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900088be:	699a      	ldr	r2, [r3, #24]
900088c0:	0692      	lsls	r2, r2, #26
900088c2:	d427      	bmi.n	90008914 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x80>
900088c4:	bb4f      	cbnz	r7, 9000891a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900088c6:	f7ff fb33 	bl	90007f30 <HAL_GetTick>
900088ca:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900088cc:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900088ce:	2819      	cmp	r0, #25
900088d0:	d9f5      	bls.n	900088be <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900088d2:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900088d4:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900088d8:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900088da:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900088dc:	0409      	lsls	r1, r1, #16
900088de:	d50b      	bpl.n	900088f8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp1 != I2C_CR2_STOP) && \
900088e0:	0440      	lsls	r0, r0, #17
900088e2:	d409      	bmi.n	900088f8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
900088e4:	2a20      	cmp	r2, #32
900088e6:	d007      	beq.n	900088f8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900088e8:	685a      	ldr	r2, [r3, #4]
900088ea:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900088ee:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
900088f0:	f7ff fb1e 	bl	90007f30 <HAL_GetTick>
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900088f4:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
900088f6:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900088f8:	699a      	ldr	r2, [r3, #24]
900088fa:	0691      	lsls	r1, r2, #26
900088fc:	d4df      	bmi.n	900088be <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900088fe:	f7ff fb17 	bl	90007f30 <HAL_GetTick>
90008902:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008904:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008906:	2819      	cmp	r0, #25
90008908:	d9f6      	bls.n	900088f8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000890a:	699a      	ldr	r2, [r3, #24]
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000890c:	2620      	movs	r6, #32

              status = HAL_ERROR;
9000890e:	2701      	movs	r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008910:	0692      	lsls	r2, r2, #26
90008912:	d5d7      	bpl.n	900088c4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x30>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
90008914:	b90f      	cbnz	r7, 9000891a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008916:	2220      	movs	r2, #32
90008918:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000891a:	f046 0604 	orr.w	r6, r6, #4

    status = HAL_ERROR;
9000891e:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90008920:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008922:	05d7      	lsls	r7, r2, #23
90008924:	d531      	bpl.n	9000898a <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf6>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008926:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000892a:	0550      	lsls	r0, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000892c:	f046 0601 	orr.w	r6, r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008930:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008932:	d504      	bpl.n	9000893e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xaa>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008934:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008938:	f046 0608 	orr.w	r6, r6, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000893c:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000893e:	0592      	lsls	r2, r2, #22
90008940:	d504      	bpl.n	9000894c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008942:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008946:	f046 0602 	orr.w	r6, r6, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000894a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000894c:	699a      	ldr	r2, [r3, #24]
9000894e:	0795      	lsls	r5, r2, #30
90008950:	d501      	bpl.n	90008956 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xc2>
    hi2c->Instance->TXDR = 0x00U;
90008952:	2200      	movs	r2, #0
90008954:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008956:	699a      	ldr	r2, [r3, #24]
90008958:	07d0      	lsls	r0, r2, #31
9000895a:	d403      	bmi.n	90008964 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd0>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000895c:	699a      	ldr	r2, [r3, #24]
9000895e:	f042 0201 	orr.w	r2, r2, #1
90008962:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90008964:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90008966:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008968:	4d19      	ldr	r5, [pc, #100]	@ (900089d0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000896a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
9000896c:	402a      	ands	r2, r5
9000896e:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008970:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90008972:	4333      	orrs	r3, r6
90008974:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008976:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000897a:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
9000897e:	2300      	movs	r3, #0
      return HAL_ERROR;
90008980:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008982:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90008986:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000898a:	0551      	lsls	r1, r2, #21
9000898c:	d4d2      	bmi.n	90008934 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa0>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000898e:	0597      	lsls	r7, r2, #22
90008990:	d4d7      	bmi.n	90008942 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xae>
  if (status != HAL_OK)
90008992:	2d00      	cmp	r5, #0
90008994:	d1da      	bne.n	9000894c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008996:	f7ff facb 	bl	90007f30 <HAL_GetTick>
9000899a:	eba0 0008 	sub.w	r0, r0, r8
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000899e:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900089a0:	2819      	cmp	r0, #25
900089a2:	d902      	bls.n	900089aa <I2C_WaitOnFlagUntilTimeout.constprop.0+0x116>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900089a4:	699a      	ldr	r2, [r3, #24]
900089a6:	0411      	lsls	r1, r2, #16
900089a8:	d408      	bmi.n	900089bc <I2C_WaitOnFlagUntilTimeout.constprop.0+0x128>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900089aa:	699a      	ldr	r2, [r3, #24]
900089ac:	0412      	lsls	r2, r2, #16
900089ae:	f53f af7c 	bmi.w	900088aa <I2C_WaitOnFlagUntilTimeout.constprop.0+0x16>
  return HAL_OK;
900089b2:	2000      	movs	r0, #0
}
900089b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  HAL_StatusTypeDef status = HAL_OK;
900089b8:	4635      	mov	r5, r6
900089ba:	e7b1      	b.n	90008920 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x8c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900089bc:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900089be:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900089c0:	4313      	orrs	r3, r2
900089c2:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900089c4:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900089c8:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
900089cc:	e7d7      	b.n	9000897e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xea>
900089ce:	bf00      	nop
900089d0:	fe00e800 	.word	0xfe00e800

900089d4 <I2C_WaitOnTXISFlagUntilTimeout>:
{
900089d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900089d8:	6803      	ldr	r3, [r0, #0]
{
900089da:	4680      	mov	r8, r0
900089dc:	460d      	mov	r5, r1
900089de:	4692      	mov	sl, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900089e0:	2710      	movs	r7, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900089e2:	699c      	ldr	r4, [r3, #24]
900089e4:	f014 0402 	ands.w	r4, r4, #2
900089e8:	f040 80a5 	bne.w	90008b36 <I2C_WaitOnTXISFlagUntilTimeout+0x162>
  uint32_t itflag   = hi2c->Instance->ISR;
900089ec:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900089ee:	f012 0c10 	ands.w	ip, r2, #16
900089f2:	d078      	beq.n	90008ae6 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
  uint32_t tickstart = Tickstart;
900089f4:	46d1      	mov	r9, sl
  HAL_StatusTypeDef status = HAL_OK;
900089f6:	4626      	mov	r6, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900089f8:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900089fa:	1c68      	adds	r0, r5, #1
900089fc:	d001      	beq.n	90008a02 <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
900089fe:	e041      	b.n	90008a84 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
90008a00:	b92e      	cbnz	r6, 90008a0e <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
90008a02:	699a      	ldr	r2, [r3, #24]
90008a04:	0691      	lsls	r1, r2, #26
90008a06:	d5fb      	bpl.n	90008a00 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
    if (status == HAL_OK)
90008a08:	b90e      	cbnz	r6, 90008a0e <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008a0a:	2220      	movs	r2, #32
90008a0c:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
90008a0e:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90008a10:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008a14:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008a16:	05d0      	lsls	r0, r2, #23
90008a18:	d569      	bpl.n	90008aee <I2C_WaitOnTXISFlagUntilTimeout+0x11a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008a1a:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008a1e:	0557      	lsls	r7, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008a20:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008a24:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008a26:	d504      	bpl.n	90008a32 <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008a28:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008a2c:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008a30:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008a32:	0595      	lsls	r5, r2, #22
90008a34:	d504      	bpl.n	90008a40 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008a36:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008a3a:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008a3e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008a40:	699a      	ldr	r2, [r3, #24]
90008a42:	0790      	lsls	r0, r2, #30
90008a44:	d501      	bpl.n	90008a4a <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    hi2c->Instance->TXDR = 0x00U;
90008a46:	2200      	movs	r2, #0
90008a48:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008a4a:	699a      	ldr	r2, [r3, #24]
90008a4c:	07d1      	lsls	r1, r2, #31
90008a4e:	d403      	bmi.n	90008a58 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008a50:	699a      	ldr	r2, [r3, #24]
90008a52:	f042 0201 	orr.w	r2, r2, #1
90008a56:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008a58:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008a5a:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008a5c:	4c37      	ldr	r4, [pc, #220]	@ (90008b3c <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008a5e:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008a60:	4022      	ands	r2, r4
90008a62:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008a64:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
90008a68:	ea43 030c 	orr.w	r3, r3, ip
90008a6c:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008a70:	f888 0041 	strb.w	r0, [r8, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008a74:	f888 1042 	strb.w	r1, [r8, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008a78:	2300      	movs	r3, #0
      return HAL_ERROR;
90008a7a:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008a7c:	f888 3040 	strb.w	r3, [r8, #64]	@ 0x40
}
90008a80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a84:	699a      	ldr	r2, [r3, #24]
90008a86:	0692      	lsls	r2, r2, #26
90008a88:	d4be      	bmi.n	90008a08 <I2C_WaitOnTXISFlagUntilTimeout+0x34>
90008a8a:	2e00      	cmp	r6, #0
90008a8c:	d1bf      	bne.n	90008a0e <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008a8e:	f7ff fa4f 	bl	90007f30 <HAL_GetTick>
90008a92:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008a96:	f8d8 3000 	ldr.w	r3, [r8]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008a9a:	4285      	cmp	r5, r0
90008a9c:	d301      	bcc.n	90008aa2 <I2C_WaitOnTXISFlagUntilTimeout+0xce>
90008a9e:	2d00      	cmp	r5, #0
90008aa0:	d1f0      	bne.n	90008a84 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008aa2:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008aa4:	f898 2042 	ldrb.w	r2, [r8, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008aa8:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008aaa:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008aac:	0409      	lsls	r1, r1, #16
90008aae:	d50c      	bpl.n	90008aca <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              (tmp1 != I2C_CR2_STOP) && \
90008ab0:	0441      	lsls	r1, r0, #17
90008ab2:	d40a      	bmi.n	90008aca <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
90008ab4:	2a20      	cmp	r2, #32
90008ab6:	d008      	beq.n	90008aca <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008ab8:	685a      	ldr	r2, [r3, #4]
90008aba:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008abe:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008ac0:	f7ff fa36 	bl	90007f30 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008ac4:	f8d8 3000 	ldr.w	r3, [r8]
            tickstart = HAL_GetTick();
90008ac8:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008aca:	699a      	ldr	r2, [r3, #24]
90008acc:	0692      	lsls	r2, r2, #26
90008ace:	d494      	bmi.n	900089fa <I2C_WaitOnTXISFlagUntilTimeout+0x26>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008ad0:	f7ff fa2e 	bl	90007f30 <HAL_GetTick>
90008ad4:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008ad8:	f8d8 3000 	ldr.w	r3, [r8]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008adc:	2819      	cmp	r0, #25
90008ade:	d9f4      	bls.n	90008aca <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008ae0:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008ae2:	2601      	movs	r6, #1
90008ae4:	e789      	b.n	900089fa <I2C_WaitOnTXISFlagUntilTimeout+0x26>
  itflag = hi2c->Instance->ISR;
90008ae6:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90008ae8:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008aea:	05d0      	lsls	r0, r2, #23
90008aec:	d495      	bmi.n	90008a1a <I2C_WaitOnTXISFlagUntilTimeout+0x46>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008aee:	0556      	lsls	r6, r2, #21
90008af0:	d49a      	bmi.n	90008a28 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008af2:	0594      	lsls	r4, r2, #22
90008af4:	d49f      	bmi.n	90008a36 <I2C_WaitOnTXISFlagUntilTimeout+0x62>
  if (status != HAL_OK)
90008af6:	2900      	cmp	r1, #0
90008af8:	d1a2      	bne.n	90008a40 <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
90008afa:	1c6a      	adds	r2, r5, #1
90008afc:	f43f af71 	beq.w	900089e2 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b00:	f7ff fa16 	bl	90007f30 <HAL_GetTick>
90008b04:	eba0 030a 	sub.w	r3, r0, sl
90008b08:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008b0a:	f8d8 3000 	ldr.w	r3, [r8]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b0e:	d802      	bhi.n	90008b16 <I2C_WaitOnTXISFlagUntilTimeout+0x142>
90008b10:	2d00      	cmp	r5, #0
90008b12:	f47f af65 	bne.w	900089e0 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008b16:	699a      	ldr	r2, [r3, #24]
90008b18:	f012 0202 	ands.w	r2, r2, #2
90008b1c:	f47f af60 	bne.w	900089e0 <I2C_WaitOnTXISFlagUntilTimeout+0xc>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b20:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b24:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b26:	430b      	orrs	r3, r1
90008b28:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b2c:	f888 1041 	strb.w	r1, [r8, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008b30:	f888 2042 	strb.w	r2, [r8, #66]	@ 0x42
          return HAL_ERROR;
90008b34:	e7a0      	b.n	90008a78 <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
  return HAL_OK;
90008b36:	2000      	movs	r0, #0
}
90008b38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008b3c:	fe00e800 	.word	0xfe00e800

90008b40 <I2C_WaitOnFlagUntilTimeout>:
{
90008b40:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008b44:	461c      	mov	r4, r3
90008b46:	4683      	mov	fp, r0
90008b48:	460e      	mov	r6, r1
90008b4a:	4615      	mov	r5, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b4c:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008b4e:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b52:	699a      	ldr	r2, [r3, #24]
90008b54:	ea36 0202 	bics.w	r2, r6, r2
90008b58:	bf0c      	ite	eq
90008b5a:	2201      	moveq	r2, #1
90008b5c:	2200      	movne	r2, #0
90008b5e:	42aa      	cmp	r2, r5
90008b60:	f040 80af 	bne.w	90008cc2 <I2C_WaitOnFlagUntilTimeout+0x182>
  uint32_t itflag   = hi2c->Instance->ISR;
90008b64:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008b66:	f012 0c10 	ands.w	ip, r2, #16
90008b6a:	d07d      	beq.n	90008c68 <I2C_WaitOnFlagUntilTimeout+0x128>
  uint32_t error_code = 0;
90008b6c:	f04f 0900 	mov.w	r9, #0
  uint32_t tickstart = Tickstart;
90008b70:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008b74:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008b78:	464f      	mov	r7, r9
90008b7a:	1c60      	adds	r0, r4, #1
90008b7c:	d001      	beq.n	90008b82 <I2C_WaitOnFlagUntilTimeout+0x42>
90008b7e:	e041      	b.n	90008c04 <I2C_WaitOnFlagUntilTimeout+0xc4>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008b80:	b92f      	cbnz	r7, 90008b8e <I2C_WaitOnFlagUntilTimeout+0x4e>
90008b82:	699a      	ldr	r2, [r3, #24]
90008b84:	0691      	lsls	r1, r2, #26
90008b86:	d5fb      	bpl.n	90008b80 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90008b88:	b90f      	cbnz	r7, 90008b8e <I2C_WaitOnFlagUntilTimeout+0x4e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008b8a:	2220      	movs	r2, #32
90008b8c:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
90008b8e:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90008b90:	f049 0c04 	orr.w	ip, r9, #4
    status = HAL_ERROR;
90008b94:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008b96:	05d7      	lsls	r7, r2, #23
90008b98:	d56a      	bpl.n	90008c70 <I2C_WaitOnFlagUntilTimeout+0x130>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008b9a:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008b9e:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008ba0:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008ba4:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008ba6:	d504      	bpl.n	90008bb2 <I2C_WaitOnFlagUntilTimeout+0x72>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008ba8:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008bac:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008bb0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008bb2:	0592      	lsls	r2, r2, #22
90008bb4:	d504      	bpl.n	90008bc0 <I2C_WaitOnFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008bb6:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008bba:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008bbe:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008bc0:	699a      	ldr	r2, [r3, #24]
90008bc2:	0790      	lsls	r0, r2, #30
90008bc4:	d501      	bpl.n	90008bca <I2C_WaitOnFlagUntilTimeout+0x8a>
    hi2c->Instance->TXDR = 0x00U;
90008bc6:	2200      	movs	r2, #0
90008bc8:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008bca:	699a      	ldr	r2, [r3, #24]
90008bcc:	07d1      	lsls	r1, r2, #31
90008bce:	d403      	bmi.n	90008bd8 <I2C_WaitOnFlagUntilTimeout+0x98>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008bd0:	699a      	ldr	r2, [r3, #24]
90008bd2:	f042 0201 	orr.w	r2, r2, #1
90008bd6:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008bd8:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008bda:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008bdc:	4c3a      	ldr	r4, [pc, #232]	@ (90008cc8 <I2C_WaitOnFlagUntilTimeout+0x188>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008bde:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008be0:	4022      	ands	r2, r4
90008be2:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008be4:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90008be8:	ea43 030c 	orr.w	r3, r3, ip
90008bec:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008bf0:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008bf4:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008bf8:	2300      	movs	r3, #0
      return HAL_ERROR;
90008bfa:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008bfc:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90008c00:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008c04:	699a      	ldr	r2, [r3, #24]
90008c06:	0692      	lsls	r2, r2, #26
90008c08:	d4be      	bmi.n	90008b88 <I2C_WaitOnFlagUntilTimeout+0x48>
90008c0a:	2f00      	cmp	r7, #0
90008c0c:	d1bf      	bne.n	90008b8e <I2C_WaitOnFlagUntilTimeout+0x4e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008c0e:	f7ff f98f 	bl	90007f30 <HAL_GetTick>
90008c12:	eba0 000a 	sub.w	r0, r0, sl
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008c16:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008c1a:	4284      	cmp	r4, r0
90008c1c:	d301      	bcc.n	90008c22 <I2C_WaitOnFlagUntilTimeout+0xe2>
90008c1e:	2c00      	cmp	r4, #0
90008c20:	d1f0      	bne.n	90008c04 <I2C_WaitOnFlagUntilTimeout+0xc4>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008c22:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
90008c24:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008c28:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
90008c2a:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008c2c:	0400      	lsls	r0, r0, #16
90008c2e:	d50c      	bpl.n	90008c4a <I2C_WaitOnFlagUntilTimeout+0x10a>
              (tmp1 != I2C_CR2_STOP) && \
90008c30:	0449      	lsls	r1, r1, #17
90008c32:	d40a      	bmi.n	90008c4a <I2C_WaitOnFlagUntilTimeout+0x10a>
90008c34:	2a20      	cmp	r2, #32
90008c36:	d008      	beq.n	90008c4a <I2C_WaitOnFlagUntilTimeout+0x10a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008c38:	685a      	ldr	r2, [r3, #4]
90008c3a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008c3e:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008c40:	f7ff f976 	bl	90007f30 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008c44:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90008c48:	4682      	mov	sl, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008c4a:	699a      	ldr	r2, [r3, #24]
90008c4c:	0692      	lsls	r2, r2, #26
90008c4e:	d494      	bmi.n	90008b7a <I2C_WaitOnFlagUntilTimeout+0x3a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008c50:	f7ff f96e 	bl	90007f30 <HAL_GetTick>
90008c54:	eba0 000a 	sub.w	r0, r0, sl
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008c58:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008c5c:	2819      	cmp	r0, #25
90008c5e:	d9f4      	bls.n	90008c4a <I2C_WaitOnFlagUntilTimeout+0x10a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008c60:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90008c64:	2701      	movs	r7, #1
90008c66:	e788      	b.n	90008b7a <I2C_WaitOnFlagUntilTimeout+0x3a>
  itflag = hi2c->Instance->ISR;
90008c68:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90008c6a:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008c6c:	05d7      	lsls	r7, r2, #23
90008c6e:	d494      	bmi.n	90008b9a <I2C_WaitOnFlagUntilTimeout+0x5a>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008c70:	0550      	lsls	r0, r2, #21
90008c72:	d499      	bmi.n	90008ba8 <I2C_WaitOnFlagUntilTimeout+0x68>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008c74:	0597      	lsls	r7, r2, #22
90008c76:	d49e      	bmi.n	90008bb6 <I2C_WaitOnFlagUntilTimeout+0x76>
  if (status != HAL_OK)
90008c78:	2900      	cmp	r1, #0
90008c7a:	d1a1      	bne.n	90008bc0 <I2C_WaitOnFlagUntilTimeout+0x80>
    if (Timeout != HAL_MAX_DELAY)
90008c7c:	1c62      	adds	r2, r4, #1
90008c7e:	f43f af68 	beq.w	90008b52 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c82:	f7ff f955 	bl	90007f30 <HAL_GetTick>
90008c86:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90008c88:	1ac3      	subs	r3, r0, r3
90008c8a:	42a3      	cmp	r3, r4
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008c8c:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c90:	d802      	bhi.n	90008c98 <I2C_WaitOnFlagUntilTimeout+0x158>
90008c92:	2c00      	cmp	r4, #0
90008c94:	f47f af5d 	bne.w	90008b52 <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008c98:	699a      	ldr	r2, [r3, #24]
90008c9a:	ea36 0202 	bics.w	r2, r6, r2
90008c9e:	bf0c      	ite	eq
90008ca0:	2201      	moveq	r2, #1
90008ca2:	2200      	movne	r2, #0
90008ca4:	42aa      	cmp	r2, r5
90008ca6:	f47f af54 	bne.w	90008b52 <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008caa:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008cae:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008cb0:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008cb2:	430b      	orrs	r3, r1
90008cb4:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008cb8:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008cbc:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
90008cc0:	e79a      	b.n	90008bf8 <I2C_WaitOnFlagUntilTimeout+0xb8>
  return HAL_OK;
90008cc2:	2000      	movs	r0, #0
}
90008cc4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008cc8:	fe00e800 	.word	0xfe00e800

90008ccc <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008ccc:	6803      	ldr	r3, [r0, #0]
{
90008cce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008cd2:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008cd4:	699a      	ldr	r2, [r3, #24]
90008cd6:	0694      	lsls	r4, r2, #26
90008cd8:	f100 8092 	bmi.w	90008e00 <I2C_WaitOnSTOPFlagUntilTimeout+0x134>
90008cdc:	4605      	mov	r5, r0
90008cde:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008ce0:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008ce4:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008ce6:	f012 0c10 	ands.w	ip, r2, #16
90008cea:	f000 808c 	beq.w	90008e06 <I2C_WaitOnSTOPFlagUntilTimeout+0x13a>
  uint32_t error_code = 0;
90008cee:	2400      	movs	r4, #0
  uint32_t tickstart = Tickstart;
90008cf0:	46b9      	mov	r9, r7
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008cf2:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008cf6:	46a2      	mov	sl, r4
90008cf8:	1c70      	adds	r0, r6, #1
90008cfa:	d003      	beq.n	90008d04 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90008cfc:	e043      	b.n	90008d86 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008cfe:	f1ba 0f00 	cmp.w	sl, #0
90008d02:	d107      	bne.n	90008d14 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90008d04:	699a      	ldr	r2, [r3, #24]
90008d06:	0691      	lsls	r1, r2, #26
90008d08:	d5f9      	bpl.n	90008cfe <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90008d0a:	f1ba 0f00 	cmp.w	sl, #0
90008d0e:	d101      	bne.n	90008d14 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008d10:	2220      	movs	r2, #32
90008d12:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008d14:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008d18:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90008d1a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008d1c:	05d0      	lsls	r0, r2, #23
90008d1e:	d55a      	bpl.n	90008dd6 <I2C_WaitOnSTOPFlagUntilTimeout+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008d20:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008d24:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008d26:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008d2a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008d2c:	d504      	bpl.n	90008d38 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008d2e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008d32:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008d36:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008d38:	0596      	lsls	r6, r2, #22
90008d3a:	d504      	bpl.n	90008d46 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008d3c:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008d40:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008d44:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008d46:	699a      	ldr	r2, [r3, #24]
90008d48:	0790      	lsls	r0, r2, #30
90008d4a:	d501      	bpl.n	90008d50 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
90008d4c:	2200      	movs	r2, #0
90008d4e:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008d50:	699a      	ldr	r2, [r3, #24]
90008d52:	07d1      	lsls	r1, r2, #31
90008d54:	d403      	bmi.n	90008d5e <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008d56:	699a      	ldr	r2, [r3, #24]
90008d58:	f042 0201 	orr.w	r2, r2, #1
90008d5c:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008d5e:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008d60:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008d62:	4c33      	ldr	r4, [pc, #204]	@ (90008e30 <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008d64:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008d66:	4022      	ands	r2, r4
90008d68:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008d6a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90008d6c:	ea43 030c 	orr.w	r3, r3, ip
90008d70:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008d72:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008d76:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90008d7a:	2300      	movs	r3, #0
      return HAL_ERROR;
90008d7c:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90008d7e:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90008d82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008d86:	699a      	ldr	r2, [r3, #24]
90008d88:	0692      	lsls	r2, r2, #26
90008d8a:	d4be      	bmi.n	90008d0a <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
90008d8c:	f1ba 0f00 	cmp.w	sl, #0
90008d90:	d1c0      	bne.n	90008d14 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008d92:	f7ff f8cd 	bl	90007f30 <HAL_GetTick>
90008d96:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008d9a:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008d9c:	4286      	cmp	r6, r0
90008d9e:	d301      	bcc.n	90008da4 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
90008da0:	2e00      	cmp	r6, #0
90008da2:	d1f0      	bne.n	90008d86 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008da4:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008da6:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008daa:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008dac:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008dae:	0409      	lsls	r1, r1, #16
90008db0:	d503      	bpl.n	90008dba <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              (tmp1 != I2C_CR2_STOP) && \
90008db2:	0441      	lsls	r1, r0, #17
90008db4:	d401      	bmi.n	90008dba <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008db6:	2a20      	cmp	r2, #32
90008db8:	d130      	bne.n	90008e1c <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008dba:	699a      	ldr	r2, [r3, #24]
90008dbc:	0692      	lsls	r2, r2, #26
90008dbe:	d49b      	bmi.n	90008cf8 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008dc0:	f7ff f8b6 	bl	90007f30 <HAL_GetTick>
90008dc4:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008dc8:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008dca:	2819      	cmp	r0, #25
90008dcc:	d9f5      	bls.n	90008dba <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008dce:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008dd0:	f04f 0a01 	mov.w	sl, #1
90008dd4:	e790      	b.n	90008cf8 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008dd6:	0550      	lsls	r0, r2, #21
90008dd8:	d4a9      	bmi.n	90008d2e <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008dda:	0594      	lsls	r4, r2, #22
90008ddc:	d4ae      	bmi.n	90008d3c <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
90008dde:	2900      	cmp	r1, #0
90008de0:	d1b1      	bne.n	90008d46 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008de2:	f7ff f8a5 	bl	90007f30 <HAL_GetTick>
90008de6:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008de8:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008dea:	42b0      	cmp	r0, r6
90008dec:	d800      	bhi.n	90008df0 <I2C_WaitOnSTOPFlagUntilTimeout+0x124>
90008dee:	b91e      	cbnz	r6, 90008df8 <I2C_WaitOnSTOPFlagUntilTimeout+0x12c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008df0:	699a      	ldr	r2, [r3, #24]
90008df2:	f012 0220 	ands.w	r2, r2, #32
90008df6:	d008      	beq.n	90008e0a <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008df8:	699a      	ldr	r2, [r3, #24]
90008dfa:	0692      	lsls	r2, r2, #26
90008dfc:	f57f af72 	bpl.w	90008ce4 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
90008e00:	2000      	movs	r0, #0
}
90008e02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008e06:	4661      	mov	r1, ip
90008e08:	e787      	b.n	90008d1a <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008e0a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008e0c:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008e0e:	430b      	orrs	r3, r1
90008e10:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008e12:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90008e16:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90008e1a:	e7ae      	b.n	90008d7a <I2C_WaitOnSTOPFlagUntilTimeout+0xae>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008e1c:	685a      	ldr	r2, [r3, #4]
90008e1e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008e22:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008e24:	f7ff f884 	bl	90007f30 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008e28:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90008e2a:	4681      	mov	r9, r0
90008e2c:	e7c5      	b.n	90008dba <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008e2e:	bf00      	nop
90008e30:	fe00e800 	.word	0xfe00e800

90008e34 <HAL_I2C_MspInit>:
}
90008e34:	4770      	bx	lr
90008e36:	bf00      	nop

90008e38 <HAL_I2C_Init>:
  if (hi2c == NULL)
90008e38:	2800      	cmp	r0, #0
90008e3a:	d053      	beq.n	90008ee4 <HAL_I2C_Init+0xac>
{
90008e3c:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90008e3e:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90008e42:	4604      	mov	r4, r0
90008e44:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008e48:	2b00      	cmp	r3, #0
90008e4a:	d046      	beq.n	90008eda <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90008e4c:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008e4e:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008e50:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008e52:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90008e56:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008e58:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008e5c:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90008e5e:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008e62:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90008e64:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008e66:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008e68:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008e6a:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008e6c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90008e70:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008e72:	d009      	beq.n	90008e88 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008e74:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008e78:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008e7a:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008e7c:	d107      	bne.n	90008e8e <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008e7e:	685a      	ldr	r2, [r3, #4]
90008e80:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90008e84:	605a      	str	r2, [r3, #4]
90008e86:	e006      	b.n	90008e96 <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008e88:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008e8c:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008e8e:	685a      	ldr	r2, [r3, #4]
90008e90:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008e94:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008e96:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90008e98:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008e9c:	4912      	ldr	r1, [pc, #72]	@ (90008ee8 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008e9e:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008ea0:	4301      	orrs	r1, r0
90008ea2:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90008ea4:	68d9      	ldr	r1, [r3, #12]
90008ea6:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
90008eaa:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90008eac:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008eb0:	4302      	orrs	r2, r0
90008eb2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008eb6:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008eba:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008ebc:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008ebe:	4301      	orrs	r1, r0
  return HAL_OK;
90008ec0:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008ec2:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90008ec4:	6819      	ldr	r1, [r3, #0]
90008ec6:	f041 0101 	orr.w	r1, r1, #1
90008eca:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008ecc:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008ece:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90008ed2:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008ed4:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
90008ed8:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
90008eda:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
90008ede:	f7ff ffa9 	bl	90008e34 <HAL_I2C_MspInit>
90008ee2:	e7b3      	b.n	90008e4c <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90008ee4:	2001      	movs	r0, #1
}
90008ee6:	4770      	bx	lr
90008ee8:	02008000 	.word	0x02008000

90008eec <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90008eec:	4770      	bx	lr
90008eee:	bf00      	nop

90008ef0 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90008ef0:	b1b0      	cbz	r0, 90008f20 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90008ef2:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008ef4:	2324      	movs	r3, #36	@ 0x24
{
90008ef6:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90008ef8:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
90008efc:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90008efe:	6813      	ldr	r3, [r2, #0]
90008f00:	f023 0301 	bic.w	r3, r3, #1
90008f04:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90008f06:	f7ff fff1 	bl	90008eec <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008f0a:	2300      	movs	r3, #0
90008f0c:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
90008f0e:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008f10:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90008f14:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90008f18:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008f1a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
90008f1e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90008f20:	2001      	movs	r0, #1
}
90008f22:	4770      	bx	lr

90008f24 <HAL_I2C_Mem_Write>:
{
90008f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008f28:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90008f2a:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90008f2e:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
90008f30:	2820      	cmp	r0, #32
{
90008f32:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
90008f36:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
90008f38:	d11e      	bne.n	90008f78 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
90008f3a:	4698      	mov	r8, r3
90008f3c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90008f3e:	b1bb      	cbz	r3, 90008f70 <HAL_I2C_Mem_Write+0x4c>
90008f40:	f1ba 0f00 	cmp.w	sl, #0
90008f44:	d014      	beq.n	90008f70 <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
90008f46:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90008f4a:	2b01      	cmp	r3, #1
90008f4c:	d014      	beq.n	90008f78 <HAL_I2C_Mem_Write+0x54>
90008f4e:	2301      	movs	r3, #1
90008f50:	460d      	mov	r5, r1
90008f52:	4691      	mov	r9, r2
90008f54:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90008f58:	f7fe ffea 	bl	90007f30 <HAL_GetTick>
90008f5c:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008f5e:	4620      	mov	r0, r4
90008f60:	4631      	mov	r1, r6
90008f62:	f7ff fc97 	bl	90008894 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90008f66:	b158      	cbz	r0, 90008f80 <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
90008f68:	2001      	movs	r0, #1
}
90008f6a:	b003      	add	sp, #12
90008f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008f70:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008f74:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90008f76:	e7f7      	b.n	90008f68 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
90008f78:	2002      	movs	r0, #2
}
90008f7a:	b003      	add	sp, #12
90008f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90008f80:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008f82:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90008f86:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
90008f88:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008f8a:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90008f8c:	4a5f      	ldr	r2, [pc, #380]	@ (9000910c <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008f8e:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008f92:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008f94:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008f96:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008f9a:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008f9c:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008f9e:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008fa2:	684b      	ldr	r3, [r1, #4]
90008fa4:	4013      	ands	r3, r2
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008fa6:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008faa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008fae:	4a58      	ldr	r2, [pc, #352]	@ (90009110 <HAL_I2C_Mem_Write+0x1ec>)
90008fb0:	ea43 030b 	orr.w	r3, r3, fp
90008fb4:	431a      	orrs	r2, r3
90008fb6:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008fb8:	4632      	mov	r2, r6
90008fba:	4639      	mov	r1, r7
90008fbc:	f7ff fd0a 	bl	900089d4 <I2C_WaitOnTXISFlagUntilTimeout>
90008fc0:	2800      	cmp	r0, #0
90008fc2:	d176      	bne.n	900090b2 <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008fc4:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008fc8:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008fca:	d169      	bne.n	900090a0 <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008fcc:	fa5f f289 	uxtb.w	r2, r9
90008fd0:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90008fd2:	463b      	mov	r3, r7
90008fd4:	2200      	movs	r2, #0
90008fd6:	2180      	movs	r1, #128	@ 0x80
90008fd8:	4620      	mov	r0, r4
90008fda:	9600      	str	r6, [sp, #0]
90008fdc:	f7ff fdb0 	bl	90008b40 <I2C_WaitOnFlagUntilTimeout>
90008fe0:	2800      	cmp	r0, #0
90008fe2:	d166      	bne.n	900090b2 <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008fe4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008fe6:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008fe8:	b29b      	uxth	r3, r3
90008fea:	2bff      	cmp	r3, #255	@ 0xff
90008fec:	d965      	bls.n	900090ba <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90008fee:	6853      	ldr	r3, [r2, #4]
90008ff0:	4948      	ldr	r1, [pc, #288]	@ (90009114 <HAL_I2C_Mem_Write+0x1f0>)
90008ff2:	400b      	ands	r3, r1
90008ff4:	4948      	ldr	r1, [pc, #288]	@ (90009118 <HAL_I2C_Mem_Write+0x1f4>)
90008ff6:	ea43 030b 	orr.w	r3, r3, fp
90008ffa:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008ffc:	23ff      	movs	r3, #255	@ 0xff
90008ffe:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009000:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90009002:	e003      	b.n	9000900c <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
90009004:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90009006:	b29b      	uxth	r3, r3
90009008:	2b00      	cmp	r3, #0
9000900a:	d069      	beq.n	900090e0 <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
9000900c:	4632      	mov	r2, r6
9000900e:	4639      	mov	r1, r7
90009010:	4620      	mov	r0, r4
90009012:	f7ff fcdf 	bl	900089d4 <I2C_WaitOnTXISFlagUntilTimeout>
90009016:	4602      	mov	r2, r0
90009018:	2800      	cmp	r0, #0
9000901a:	d1a5      	bne.n	90008f68 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000901c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000901e:	6825      	ldr	r5, [r4, #0]
90009020:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
90009024:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90009026:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
90009028:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
9000902c:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
9000902e:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009030:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90009034:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90009036:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
9000903a:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
9000903c:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009040:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
90009042:	b289      	uxth	r1, r1
90009044:	2b00      	cmp	r3, #0
90009046:	d1dd      	bne.n	90009004 <HAL_I2C_Mem_Write+0xe0>
90009048:	2900      	cmp	r1, #0
9000904a:	d0db      	beq.n	90009004 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9000904c:	463b      	mov	r3, r7
9000904e:	2180      	movs	r1, #128	@ 0x80
90009050:	4620      	mov	r0, r4
90009052:	9600      	str	r6, [sp, #0]
90009054:	f7ff fd74 	bl	90008b40 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009058:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9000905c:	2800      	cmp	r0, #0
9000905e:	d183      	bne.n	90008f68 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009060:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009062:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 90009114 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009066:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009068:	492b      	ldr	r1, [pc, #172]	@ (90009118 <HAL_I2C_Mem_Write+0x1f4>)
9000906a:	4670      	mov	r0, lr
9000906c:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000906e:	4563      	cmp	r3, ip
90009070:	d909      	bls.n	90009086 <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90009072:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009074:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009078:	ea03 030e 	and.w	r3, r3, lr
9000907c:	ea43 030b 	orr.w	r3, r3, fp
90009080:	4319      	orrs	r1, r3
90009082:	6051      	str	r1, [r2, #4]
}
90009084:	e7be      	b.n	90009004 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
90009086:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009088:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
9000908a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000908c:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
9000908e:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009090:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009092:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90009096:	430b      	orrs	r3, r1
90009098:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000909c:	6053      	str	r3, [r2, #4]
}
9000909e:	e7b1      	b.n	90009004 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900090a0:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900090a4:	4639      	mov	r1, r7
900090a6:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900090a8:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900090aa:	4632      	mov	r2, r6
900090ac:	f7ff fc92 	bl	900089d4 <I2C_WaitOnTXISFlagUntilTimeout>
900090b0:	b188      	cbz	r0, 900090d6 <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
900090b2:	2300      	movs	r3, #0
900090b4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
900090b8:	e756      	b.n	90008f68 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
900090ba:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900090bc:	4815      	ldr	r0, [pc, #84]	@ (90009114 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
900090be:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900090c0:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
900090c2:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900090c4:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900090c6:	4001      	ands	r1, r0
900090c8:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
900090cc:	430b      	orrs	r3, r1
900090ce:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
900090d2:	6053      	str	r3, [r2, #4]
}
900090d4:	e79a      	b.n	9000900c <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900090d6:	fa5f f289 	uxtb.w	r2, r9
900090da:	6823      	ldr	r3, [r4, #0]
900090dc:	629a      	str	r2, [r3, #40]	@ 0x28
900090de:	e778      	b.n	90008fd2 <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900090e0:	4632      	mov	r2, r6
900090e2:	4639      	mov	r1, r7
900090e4:	4620      	mov	r0, r4
900090e6:	f7ff fdf1 	bl	90008ccc <I2C_WaitOnSTOPFlagUntilTimeout>
900090ea:	2800      	cmp	r0, #0
900090ec:	f47f af3c 	bne.w	90008f68 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900090f0:	6823      	ldr	r3, [r4, #0]
900090f2:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900090f4:	4d09      	ldr	r5, [pc, #36]	@ (9000911c <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900090f6:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900090f8:	685a      	ldr	r2, [r3, #4]
900090fa:	402a      	ands	r2, r5
900090fc:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900090fe:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009102:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009106:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
9000910a:	e72e      	b.n	90008f6a <HAL_I2C_Mem_Write+0x46>
9000910c:	fc009800 	.word	0xfc009800
90009110:	01002000 	.word	0x01002000
90009114:	fc009c00 	.word	0xfc009c00
90009118:	01ff0000 	.word	0x01ff0000
9000911c:	fe00e800 	.word	0xfe00e800

90009120 <HAL_I2C_Mem_Read>:
{
90009120:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90009124:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90009126:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
9000912a:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
9000912c:	2820      	cmp	r0, #32
{
9000912e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90009132:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90009134:	d11e      	bne.n	90009174 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
90009136:	4698      	mov	r8, r3
90009138:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9000913a:	b1bb      	cbz	r3, 9000916c <HAL_I2C_Mem_Read+0x4c>
9000913c:	f1ba 0f00 	cmp.w	sl, #0
90009140:	d014      	beq.n	9000916c <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
90009142:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90009146:	2b01      	cmp	r3, #1
90009148:	d014      	beq.n	90009174 <HAL_I2C_Mem_Read+0x54>
9000914a:	2301      	movs	r3, #1
9000914c:	460d      	mov	r5, r1
9000914e:	4691      	mov	r9, r2
90009150:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90009154:	f7fe feec 	bl	90007f30 <HAL_GetTick>
90009158:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
9000915a:	4620      	mov	r0, r4
9000915c:	4631      	mov	r1, r6
9000915e:	f7ff fb99 	bl	90008894 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90009162:	b158      	cbz	r0, 9000917c <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
90009164:	2001      	movs	r0, #1
}
90009166:	b002      	add	sp, #8
90009168:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000916c:	f44f 7300 	mov.w	r3, #512	@ 0x200
90009170:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90009172:	e7f7      	b.n	90009164 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
90009174:	2002      	movs	r0, #2
}
90009176:	b002      	add	sp, #8
90009178:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
9000917c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000917e:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
90009182:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
90009184:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009186:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
90009188:	495f      	ldr	r1, [pc, #380]	@ (90009308 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
9000918a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000918e:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90009190:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90009192:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009196:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009198:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
9000919a:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000919e:	6853      	ldr	r3, [r2, #4]
900091a0:	400b      	ands	r3, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900091a2:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
900091a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900091aa:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
900091ac:	432b      	orrs	r3, r5
900091ae:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
900091b2:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900091b4:	4632      	mov	r2, r6
900091b6:	f7ff fc0d 	bl	900089d4 <I2C_WaitOnTXISFlagUntilTimeout>
900091ba:	2800      	cmp	r0, #0
900091bc:	d177      	bne.n	900092ae <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900091be:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900091c2:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900091c4:	d16a      	bne.n	9000929c <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900091c6:	fa5f f289 	uxtb.w	r2, r9
900091ca:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
900091cc:	463b      	mov	r3, r7
900091ce:	2200      	movs	r2, #0
900091d0:	2140      	movs	r1, #64	@ 0x40
900091d2:	4620      	mov	r0, r4
900091d4:	9600      	str	r6, [sp, #0]
900091d6:	f7ff fcb3 	bl	90008b40 <I2C_WaitOnFlagUntilTimeout>
900091da:	2800      	cmp	r0, #0
900091dc:	d167      	bne.n	900092ae <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900091de:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900091e0:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900091e2:	b29b      	uxth	r3, r3
900091e4:	2bff      	cmp	r3, #255	@ 0xff
900091e6:	d966      	bls.n	900092b6 <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
900091e8:	6853      	ldr	r3, [r2, #4]
900091ea:	4947      	ldr	r1, [pc, #284]	@ (90009308 <HAL_I2C_Mem_Read+0x1e8>)
900091ec:	400b      	ands	r3, r1
900091ee:	4947      	ldr	r1, [pc, #284]	@ (9000930c <HAL_I2C_Mem_Read+0x1ec>)
900091f0:	432b      	orrs	r3, r5
900091f2:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900091f4:	23ff      	movs	r3, #255	@ 0xff
900091f6:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900091f8:	6051      	str	r1, [r2, #4]
}
900091fa:	e003      	b.n	90009204 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
900091fc:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900091fe:	b29b      	uxth	r3, r3
90009200:	2b00      	cmp	r3, #0
90009202:	d06b      	beq.n	900092dc <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90009204:	463b      	mov	r3, r7
90009206:	2200      	movs	r2, #0
90009208:	2104      	movs	r1, #4
9000920a:	4620      	mov	r0, r4
9000920c:	9600      	str	r6, [sp, #0]
9000920e:	f7ff fc97 	bl	90008b40 <I2C_WaitOnFlagUntilTimeout>
90009212:	2800      	cmp	r0, #0
90009214:	d1a6      	bne.n	90009164 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90009216:	6821      	ldr	r1, [r4, #0]
90009218:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000921a:	6a49      	ldr	r1, [r1, #36]	@ 0x24
9000921c:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
9000921e:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90009222:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
90009224:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009226:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
9000922a:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
9000922c:	3101      	adds	r1, #1
      hi2c->XferCount--;
9000922e:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90009232:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
90009234:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009236:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000923a:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
9000923c:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000923e:	b289      	uxth	r1, r1
90009240:	2b00      	cmp	r3, #0
90009242:	d1db      	bne.n	900091fc <HAL_I2C_Mem_Read+0xdc>
90009244:	2900      	cmp	r1, #0
90009246:	d0d9      	beq.n	900091fc <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009248:	4602      	mov	r2, r0
9000924a:	463b      	mov	r3, r7
9000924c:	2180      	movs	r1, #128	@ 0x80
9000924e:	4620      	mov	r0, r4
90009250:	9600      	str	r6, [sp, #0]
90009252:	f7ff fc75 	bl	90008b40 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009256:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9000925a:	2800      	cmp	r0, #0
9000925c:	d182      	bne.n	90009164 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000925e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009260:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 9000931c <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009264:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009266:	492a      	ldr	r1, [pc, #168]	@ (90009310 <HAL_I2C_Mem_Read+0x1f0>)
90009268:	4670      	mov	r0, lr
9000926a:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000926c:	4563      	cmp	r3, ip
9000926e:	d908      	bls.n	90009282 <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
90009270:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009272:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009276:	ea03 030e 	and.w	r3, r3, lr
9000927a:	432b      	orrs	r3, r5
9000927c:	4319      	orrs	r1, r3
9000927e:	6051      	str	r1, [r2, #4]
}
90009280:	e7bc      	b.n	900091fc <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
90009282:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009284:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90009286:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009288:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
9000928a:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000928c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000928e:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90009292:	430b      	orrs	r3, r1
90009294:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009298:	6053      	str	r3, [r2, #4]
}
9000929a:	e7af      	b.n	900091fc <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000929c:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900092a0:	4639      	mov	r1, r7
900092a2:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900092a4:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900092a6:	4632      	mov	r2, r6
900092a8:	f7ff fb94 	bl	900089d4 <I2C_WaitOnTXISFlagUntilTimeout>
900092ac:	b188      	cbz	r0, 900092d2 <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
900092ae:	2300      	movs	r3, #0
900092b0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
900092b4:	e756      	b.n	90009164 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
900092b6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900092b8:	4813      	ldr	r0, [pc, #76]	@ (90009308 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
900092ba:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900092bc:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
900092be:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
900092c0:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900092c2:	4001      	ands	r1, r0
900092c4:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
900092c8:	430b      	orrs	r3, r1
900092ca:	4912      	ldr	r1, [pc, #72]	@ (90009314 <HAL_I2C_Mem_Read+0x1f4>)
900092cc:	4319      	orrs	r1, r3
900092ce:	6051      	str	r1, [r2, #4]
}
900092d0:	e798      	b.n	90009204 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900092d2:	fa5f f289 	uxtb.w	r2, r9
900092d6:	6823      	ldr	r3, [r4, #0]
900092d8:	629a      	str	r2, [r3, #40]	@ 0x28
900092da:	e777      	b.n	900091cc <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900092dc:	4632      	mov	r2, r6
900092de:	4639      	mov	r1, r7
900092e0:	4620      	mov	r0, r4
900092e2:	f7ff fcf3 	bl	90008ccc <I2C_WaitOnSTOPFlagUntilTimeout>
900092e6:	2800      	cmp	r0, #0
900092e8:	f47f af3c 	bne.w	90009164 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900092ec:	6823      	ldr	r3, [r4, #0]
900092ee:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900092f0:	4d09      	ldr	r5, [pc, #36]	@ (90009318 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900092f2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900092f4:	685a      	ldr	r2, [r3, #4]
900092f6:	402a      	ands	r2, r5
900092f8:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900092fa:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900092fe:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90009302:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
90009306:	e72e      	b.n	90009166 <HAL_I2C_Mem_Read+0x46>
90009308:	fc009800 	.word	0xfc009800
9000930c:	01ff2400 	.word	0x01ff2400
90009310:	01ff0000 	.word	0x01ff0000
90009314:	02002400 	.word	0x02002400
90009318:	fe00e800 	.word	0xfe00e800
9000931c:	fc009c00 	.word	0xfc009c00

90009320 <HAL_I2C_GetState>:
  return hi2c->State;
90009320:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90009324:	4770      	bx	lr
90009326:	bf00      	nop

90009328 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90009328:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
9000932a:	4770      	bx	lr

9000932c <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000932c:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009330:	2a20      	cmp	r2, #32
90009332:	d123      	bne.n	9000937c <HAL_I2CEx_ConfigAnalogFilter+0x50>
90009334:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009338:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
9000933c:	4603      	mov	r3, r0
9000933e:	2a01      	cmp	r2, #1
90009340:	d01c      	beq.n	9000937c <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009342:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009344:	2024      	movs	r0, #36	@ 0x24
{
90009346:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90009348:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000934c:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90009350:	6810      	ldr	r0, [r2, #0]
90009352:	f020 0001 	bic.w	r0, r0, #1
90009356:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90009358:	6810      	ldr	r0, [r2, #0]
9000935a:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
9000935e:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90009360:	6810      	ldr	r0, [r2, #0]
90009362:	4301      	orrs	r1, r0

    return HAL_OK;
90009364:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009366:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009368:	6811      	ldr	r1, [r2, #0]
9000936a:	f041 0101 	orr.w	r1, r1, #1
9000936e:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90009370:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009374:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009378:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
9000937c:	2002      	movs	r0, #2
}
9000937e:	4770      	bx	lr

90009380 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90009380:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009384:	2a20      	cmp	r2, #32
90009386:	d122      	bne.n	900093ce <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90009388:	4603      	mov	r3, r0
{
9000938a:	b500      	push	{lr}
9000938c:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009390:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90009394:	2a01      	cmp	r2, #1
90009396:	d01c      	beq.n	900093d2 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009398:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000939a:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000939c:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
900093a0:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
900093a4:	6810      	ldr	r0, [r2, #0]
900093a6:	f020 0001 	bic.w	r0, r0, #1
900093aa:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
900093ac:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
900093ae:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
900093b2:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
900093b6:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
900093b8:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
900093ba:	6811      	ldr	r1, [r2, #0]
900093bc:	f041 0101 	orr.w	r1, r1, #1
900093c0:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900093c2:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900093c6:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
900093ca:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
900093ce:	2002      	movs	r0, #2
}
900093d0:	4770      	bx	lr
    __HAL_LOCK(hi2c);
900093d2:	2002      	movs	r0, #2
}
900093d4:	f85d fb04 	ldr.w	pc, [sp], #4

900093d8 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
900093d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900093dc:	4699      	mov	r9, r3
900093de:	4680      	mov	r8, r0
900093e0:	460d      	mov	r5, r1
900093e2:	4614      	mov	r4, r2

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
900093e4:	7803      	ldrb	r3, [r0, #0]
900093e6:	2601      	movs	r6, #1
  p = 0;
900093e8:	2700      	movs	r7, #0
900093ea:	e005      	b.n	900093f8 <JPEG_Bits_To_SizeCodes+0x20>
    i = (uint32_t)Bits[l];
900093ec:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    if ((p + i) > 256UL)
900093f0:	19da      	adds	r2, r3, r7
900093f2:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
900093f6:	d83a      	bhi.n	9000946e <JPEG_Bits_To_SizeCodes+0x96>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
900093f8:	19e8      	adds	r0, r5, r7
900093fa:	461a      	mov	r2, r3
900093fc:	4631      	mov	r1, r6
    while (i != 0UL)
900093fe:	b113      	cbz	r3, 90009406 <JPEG_Bits_To_SizeCodes+0x2e>
      p++;
90009400:	441f      	add	r7, r3
      Huffsize[p] = (uint8_t) l + 1U;
90009402:	f023 f9dd 	bl	9002c7c0 <memset>
  for (l = 0; l < 16UL; l++)
90009406:	2e10      	cmp	r6, #16
    if ((p + i) > 256UL)
90009408:	f106 0601 	add.w	r6, r6, #1
  for (l = 0; l < 16UL; l++)
9000940c:	d1ee      	bne.n	900093ec <JPEG_Bits_To_SizeCodes+0x14>
      i--;
    }
  }
  Huffsize[p] = 0;
9000940e:	2300      	movs	r3, #0
90009410:	55eb      	strb	r3, [r5, r7]
  *LastK = p;
90009412:	f8c9 7000 	str.w	r7, [r9]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90009416:	7829      	ldrb	r1, [r5, #0]
90009418:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
9000941a:	b329      	cbz	r1, 90009468 <JPEG_Bits_To_SizeCodes+0x90>
  code = 0;
9000941c:	4699      	mov	r9, r3
9000941e:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009422:	2701      	movs	r7, #1
  p = 0;
90009424:	461e      	mov	r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90009426:	4291      	cmp	r1, r2
90009428:	d124      	bne.n	90009474 <JPEG_Bits_To_SizeCodes+0x9c>
9000942a:	eb06 0008 	add.w	r0, r6, r8
9000942e:	eb05 0c06 	add.w	ip, r5, r6
90009432:	464b      	mov	r3, r9
90009434:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90009438:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
9000943c:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
9000943e:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90009442:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90009444:	4596      	cmp	lr, r2
90009446:	d0f7      	beq.n	90009438 <JPEG_Bits_To_SizeCodes+0x60>
90009448:	3601      	adds	r6, #1
9000944a:	eba6 0609 	sub.w	r6, r6, r9
      p++;
9000944e:	440e      	add	r6, r1
    if(si > 31UL)
90009450:	2a1f      	cmp	r2, #31
90009452:	d80c      	bhi.n	9000946e <JPEG_Bits_To_SizeCodes+0x96>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009454:	fa07 f102 	lsl.w	r1, r7, r2
90009458:	4299      	cmp	r1, r3
9000945a:	d908      	bls.n	9000946e <JPEG_Bits_To_SizeCodes+0x96>
  while (Huffsize[p] != 0U)
9000945c:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000945e:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
90009462:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90009464:	2900      	cmp	r1, #0
90009466:	d1de      	bne.n	90009426 <JPEG_Bits_To_SizeCodes+0x4e>
  }
  /* Return function status */
  return HAL_OK;
90009468:	2000      	movs	r0, #0
}
9000946a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_ERROR;
9000946e:	2001      	movs	r0, #1
}
90009470:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (((uint32_t) Huffsize[p]) == si)
90009474:	464b      	mov	r3, r9
90009476:	e7eb      	b.n	90009450 <JPEG_Bits_To_SizeCodes+0x78>

90009478 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90009478:	b5f0      	push	{r4, r5, r6, r7, lr}
9000947a:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
9000947e:	460d      	mov	r5, r1
90009480:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009482:	ab01      	add	r3, sp, #4
90009484:	aa43      	add	r2, sp, #268	@ 0x10c
90009486:	a902      	add	r1, sp, #8
90009488:	f7ff ffa6 	bl	900093d8 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
9000948c:	b9d0      	cbnz	r0, 900094c4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000948e:	9f01      	ldr	r7, [sp, #4]
90009490:	b1c7      	cbz	r7, 900094c4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90009492:	370f      	adds	r7, #15
90009494:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90009498:	a902      	add	r1, sp, #8
9000949a:	f104 0c0f 	add.w	ip, r4, #15
9000949e:	4427      	add	r7, r4
900094a0:	e009      	b.n	900094b6 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900094a2:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
900094a6:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900094a8:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900094ac:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900094b0:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900094b2:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
900094b4:	d006      	beq.n	900094c4 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
900094b6:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
900094ba:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900094bc:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
900094c0:	d9ef      	bls.n	900094a2 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
900094c2:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900094c4:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
900094c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900094ca:	bf00      	nop

900094cc <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
900094cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
900094d0:	6804      	ldr	r4, [r0, #0]
{
900094d2:	b093      	sub	sp, #76	@ 0x4c
900094d4:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
900094d6:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
900094da:	429a      	cmp	r2, r3
900094dc:	f000 809d 	beq.w	9000961a <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
900094e0:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
900094e4:	429a      	cmp	r2, r3
900094e6:	d003      	beq.n	900094f0 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
900094e8:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900094ea:	b013      	add	sp, #76	@ 0x4c
900094ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900094f0:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
900094f4:	a903      	add	r1, sp, #12
900094f6:	f7ff ffbf 	bl	90009478 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
900094fa:	2800      	cmp	r0, #0
900094fc:	d1f5      	bne.n	900094ea <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
900094fe:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009502:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009506:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
9000950a:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000950c:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90009510:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009512:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90009516:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000951a:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
9000951e:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009522:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
90009526:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009528:	f89d 9015 	ldrb.w	r9, [sp, #21]
9000952c:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009530:	f89d c014 	ldrb.w	ip, [sp, #20]
90009534:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009538:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000953c:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009540:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009544:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009546:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000954a:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
9000954e:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
90009552:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009556:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000955a:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000955e:	f89d 7011 	ldrb.w	r7, [sp, #17]
90009562:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009566:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009568:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000956c:	f89d 2010 	ldrb.w	r2, [sp, #16]
90009570:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009574:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90009576:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000957a:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000957c:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
90009580:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009584:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009588:	f89d 600f 	ldrb.w	r6, [sp, #15]
9000958c:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009590:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009594:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009596:	9b01      	ldr	r3, [sp, #4]
90009598:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000959c:	f89d 500d 	ldrb.w	r5, [sp, #13]
900095a0:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095a4:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
900095a8:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095ac:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
900095ae:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095b2:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095b6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900095ba:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095be:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095c2:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095c6:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
900095ca:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
900095ce:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
900095d2:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095d6:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
900095da:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095dc:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
900095e0:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
900095e2:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
900095e6:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095ea:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
900095ee:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095f0:	f89d 2020 	ldrb.w	r2, [sp, #32]
900095f4:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
900095f6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
900095fa:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095fe:	f89d 301c 	ldrb.w	r3, [sp, #28]
90009602:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009604:	f89d 3018 	ldrb.w	r3, [sp, #24]
90009608:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
9000960c:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90009610:	f844 3c18 	str.w	r3, [r4, #-24]
}
90009614:	b013      	add	sp, #76	@ 0x4c
90009616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000961a:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
9000961e:	e769      	b.n	900094f4 <JPEG_Set_HuffDC_Mem+0x28>

90009620 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90009620:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009624:	6804      	ldr	r4, [r0, #0]
{
90009626:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
9000962a:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000962c:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
90009630:	429a      	cmp	r2, r3
90009632:	d041      	beq.n	900096b8 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90009634:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90009638:	429a      	cmp	r2, r3
9000963a:	d004      	beq.n	90009646 <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
9000963c:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000963e:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
90009642:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009646:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000964a:	4628      	mov	r0, r5
9000964c:	466b      	mov	r3, sp
9000964e:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
90009652:	a901      	add	r1, sp, #4
90009654:	f7ff fec0 	bl	900093d8 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009658:	2800      	cmp	r0, #0
9000965a:	d1f0      	bne.n	9000963e <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
9000965c:	9b00      	ldr	r3, [sp, #0]
9000965e:	b373      	cbz	r3, 900096be <JPEG_Set_HuffAC_Mem+0x9e>
90009660:	330f      	adds	r3, #15
90009662:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
90009666:	af01      	add	r7, sp, #4
90009668:	f105 020f 	add.w	r2, r5, #15
9000966c:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009670:	ae42      	add	r6, sp, #264	@ 0x108
90009672:	e011      	b.n	90009698 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
90009674:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90009678:	2ba1      	cmp	r3, #161	@ 0xa1
9000967a:	d8df      	bhi.n	9000963c <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000967c:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009680:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90009684:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90009688:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000968a:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000968e:	46b1      	mov	r9, r6
90009690:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009694:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90009696:	d014      	beq.n	900096c2 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90009698:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000969c:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
9000969e:	2900      	cmp	r1, #0
900096a0:	d0ec      	beq.n	9000967c <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
900096a2:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
900096a4:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900096a8:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
900096aa:	eb05 0585 	add.w	r5, r5, r5, lsl #2
900096ae:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900096b2:	d1df      	bne.n	90009674 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
900096b4:	23a1      	movs	r3, #161	@ 0xa1
900096b6:	e7e1      	b.n	9000967c <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
900096b8:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
900096bc:	e7c5      	b.n	9000964a <JPEG_Set_HuffAC_Mem+0x2a>
900096be:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
900096c2:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
900096c6:	4a1a      	ldr	r2, [pc, #104]	@ (90009730 <JPEG_Set_HuffAC_Mem+0x110>)
900096c8:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
900096cc:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
900096ce:	6023      	str	r3, [r4, #0]
900096d0:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
900096d4:	6063      	str	r3, [r4, #4]
900096d6:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
900096da:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
900096dc:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
900096e0:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
900096e2:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
900096e6:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
900096ea:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
900096ec:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900096f0:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
900096f2:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900096f6:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096f8:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096fc:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009700:	0212      	lsls	r2, r2, #8
90009702:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009706:	021b      	lsls	r3, r3, #8
90009708:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000970c:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
90009710:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009712:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009716:	433a      	orrs	r2, r7
    while (i > 1UL)
90009718:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000971a:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000971e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009722:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
90009726:	d1e7      	bne.n	900096f8 <JPEG_Set_HuffAC_Mem+0xd8>
}
90009728:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
9000972c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009730:	0fd10fd0 	.word	0x0fd10fd0

90009734 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009734:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009736:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009738:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000973c:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000973e:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009740:	f002 0203 	and.w	r2, r2, #3
90009744:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009746:	685a      	ldr	r2, [r3, #4]
90009748:	bf0c      	ite	eq
9000974a:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000974e:	f022 0208 	bicne.w	r2, r2, #8
90009752:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009754:	681a      	ldr	r2, [r3, #0]
90009756:	f022 0201 	bic.w	r2, r2, #1
9000975a:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000975c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000975e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009762:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009764:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009766:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
9000976a:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000976c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000976e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009772:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009774:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009776:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000977a:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000977c:	681a      	ldr	r2, [r3, #0]
9000977e:	f042 0201 	orr.w	r2, r2, #1
90009782:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009784:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009786:	f002 020c 	and.w	r2, r2, #12
9000978a:	2a08      	cmp	r2, #8
9000978c:	d00a      	beq.n	900097a4 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000978e:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009790:	f002 020c 	and.w	r2, r2, #12
90009794:	2a0c      	cmp	r2, #12
90009796:	d000      	beq.n	9000979a <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90009798:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000979a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000979c:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900097a0:	631a      	str	r2, [r3, #48]	@ 0x30
}
900097a2:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
900097a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900097a6:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
900097aa:	631a      	str	r2, [r3, #48]	@ 0x30
900097ac:	4770      	bx	lr
900097ae:	bf00      	nop

900097b0 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900097b0:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900097b2:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
900097b4:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900097b6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
900097b8:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900097ba:	42aa      	cmp	r2, r5
900097bc:	d32a      	bcc.n	90009814 <JPEG_DMA_StartProcess+0x64>
900097be:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900097c0:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900097c2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900097c4:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900097c6:	42b3      	cmp	r3, r6
900097c8:	d324      	bcc.n	90009814 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
900097ca:	4f19      	ldr	r7, [pc, #100]	@ (90009830 <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
900097cc:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 9000983c <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
900097d0:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
900097d2:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
900097d6:	4917      	ldr	r1, [pc, #92]	@ (90009834 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
900097d8:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
900097da:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
900097dc:	4916      	ldr	r1, [pc, #88]	@ (90009838 <JPEG_DMA_StartProcess+0x88>)
900097de:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
900097e0:	b1a5      	cbz	r5, 9000980c <JPEG_DMA_StartProcess+0x5c>
900097e2:	b19e      	cbz	r6, 9000980c <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900097e4:	fbb2 f1f5 	udiv	r1, r2, r5
900097e8:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900097ec:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900097ee:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900097f0:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900097f2:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900097f4:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
900097f6:	fbb3 f2f6 	udiv	r2, r3, r6
900097fa:	fb06 3212 	mls	r2, r6, r2, r3
900097fe:	1a9b      	subs	r3, r3, r2
90009800:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009802:	9500      	str	r5, [sp, #0]
90009804:	69e2      	ldr	r2, [r4, #28]
90009806:	f001 fc23 	bl	9000b050 <HAL_MDMA_Start_IT>
9000980a:	b130      	cbz	r0, 9000981a <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000980c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000980e:	f043 0304 	orr.w	r3, r3, #4
90009812:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
90009814:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
90009816:	b003      	add	sp, #12
90009818:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000981a:	6822      	ldr	r2, [r4, #0]
9000981c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000981e:	69a1      	ldr	r1, [r4, #24]
90009820:	3240      	adds	r2, #64	@ 0x40
90009822:	9500      	str	r5, [sp, #0]
90009824:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009826:	f001 fc13 	bl	9000b050 <HAL_MDMA_Start_IT>
9000982a:	2800      	cmp	r0, #0
9000982c:	d0f3      	beq.n	90009816 <JPEG_DMA_StartProcess+0x66>
9000982e:	e7ed      	b.n	9000980c <JPEG_DMA_StartProcess+0x5c>
90009830:	90009e1d 	.word	0x90009e1d
90009834:	9000a091 	.word	0x9000a091
90009838:	9000a111 	.word	0x9000a111
9000983c:	90009e49 	.word	0x90009e49

90009840 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009840:	6803      	ldr	r3, [r0, #0]
90009842:	685a      	ldr	r2, [r3, #4]
90009844:	f002 0203 	and.w	r2, r2, #3
90009848:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000984a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000984e:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009850:	d018      	beq.n	90009884 <HAL_JPEG_GetInfo.part.0+0x44>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90009852:	685a      	ldr	r2, [r3, #4]
90009854:	f012 0203 	ands.w	r2, r2, #3
90009858:	d10b      	bne.n	90009872 <HAL_JPEG_GetInfo.part.0+0x32>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000985a:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
9000985c:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009860:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009862:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009864:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009866:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000986a:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000986e:	2100      	movs	r1, #0
90009870:	e02f      	b.n	900098d2 <HAL_JPEG_GetInfo.part.0+0x92>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90009872:	685a      	ldr	r2, [r3, #4]
90009874:	f002 0203 	and.w	r2, r2, #3
90009878:	2a03      	cmp	r2, #3
9000987a:	f000 8097 	beq.w	900099ac <HAL_JPEG_GetInfo.part.0+0x16c>
    return HAL_ERROR;
9000987e:	2001      	movs	r0, #1
}
90009880:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009884:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009886:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009888:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000988c:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000988e:	68d9      	ldr	r1, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009890:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009894:	0c09      	lsrs	r1, r1, #16
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009896:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009898:	695c      	ldr	r4, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000989a:	f8c9 100c 	str.w	r1, [r9, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000989e:	0916      	lsrs	r6, r2, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
900098a0:	6999      	ldr	r1, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900098a2:	f014 0ff0 	tst.w	r4, #240	@ 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
900098a6:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
900098aa:	ea4f 1714 	mov.w	r7, r4, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
900098ae:	ea4f 1111 	mov.w	r1, r1, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900098b2:	d105      	bne.n	900098c0 <HAL_JPEG_GetInfo.part.0+0x80>
900098b4:	2a01      	cmp	r2, #1
900098b6:	d103      	bne.n	900098c0 <HAL_JPEG_GetInfo.part.0+0x80>
900098b8:	070d      	lsls	r5, r1, #28
900098ba:	d1d8      	bne.n	9000986e <HAL_JPEG_GetInfo.part.0+0x2e>
900098bc:	2102      	movs	r1, #2
900098be:	e008      	b.n	900098d2 <HAL_JPEG_GetInfo.part.0+0x92>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900098c0:	433e      	orrs	r6, r7
900098c2:	0734      	lsls	r4, r6, #28
900098c4:	d0d3      	beq.n	9000986e <HAL_JPEG_GetInfo.part.0+0x2e>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900098c6:	430f      	orrs	r7, r1
900098c8:	0739      	lsls	r1, r7, #28
900098ca:	d1d0      	bne.n	9000986e <HAL_JPEG_GetInfo.part.0+0x2e>
900098cc:	2a03      	cmp	r2, #3
900098ce:	d1ce      	bne.n	9000986e <HAL_JPEG_GetInfo.part.0+0x2e>
900098d0:	2101      	movs	r1, #1
900098d2:	4a42      	ldr	r2, [pc, #264]	@ (900099dc <HAL_JPEG_GetInfo.part.0+0x19c>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
900098d4:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
900098d8:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
900098dc:	2600      	movs	r6, #0
900098de:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900098e2:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
900098e6:	f241 3188 	movw	r1, #5000	@ 0x1388
900098ea:	e033      	b.n	90009954 <HAL_JPEG_GetInfo.part.0+0x114>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900098ec:	f892 8001 	ldrb.w	r8, [r2, #1]
900098f0:	fb0e f707 	mul.w	r7, lr, r7
900098f4:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
900098f6:	f815 8008 	ldrb.w	r8, [r5, r8]
900098fa:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900098fe:	2f64      	cmp	r7, #100	@ 0x64
90009900:	d958      	bls.n	900099b4 <HAL_JPEG_GetInfo.part.0+0x174>
          quality += 5000UL / scale;
90009902:	fbb1 f7f7 	udiv	r7, r1, r7
90009906:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009908:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000990c:	2f01      	cmp	r7, #1
9000990e:	d03d      	beq.n	9000998c <HAL_JPEG_GetInfo.part.0+0x14c>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009910:	f892 8002 	ldrb.w	r8, [r2, #2]
90009914:	fb0e f707 	mul.w	r7, lr, r7
90009918:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000991a:	f815 8008 	ldrb.w	r8, [r5, r8]
9000991e:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009922:	2f64      	cmp	r7, #100	@ 0x64
90009924:	d955      	bls.n	900099d2 <HAL_JPEG_GetInfo.part.0+0x192>
          quality += 5000UL / scale;
90009926:	fbb1 f7f7 	udiv	r7, r1, r7
9000992a:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000992c:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000992e:	2b01      	cmp	r3, #1
90009930:	d030      	beq.n	90009994 <HAL_JPEG_GetInfo.part.0+0x154>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009932:	78d7      	ldrb	r7, [r2, #3]
90009934:	fb0e f303 	mul.w	r3, lr, r3
90009938:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
9000993a:	5def      	ldrb	r7, [r5, r7]
9000993c:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90009940:	2b64      	cmp	r3, #100	@ 0x64
90009942:	d93c      	bls.n	900099be <HAL_JPEG_GetInfo.part.0+0x17e>
          quality += 5000UL / scale;
90009944:	fbb1 f3f3 	udiv	r3, r1, r3
90009948:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000994a:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000994c:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009950:	4294      	cmp	r4, r2
90009952:	d025      	beq.n	900099a0 <HAL_JPEG_GetInfo.part.0+0x160>
    quantRow = *tableAddress;
90009954:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009958:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000995a:	2f01      	cmp	r7, #1
9000995c:	d028      	beq.n	900099b0 <HAL_JPEG_GetInfo.part.0+0x170>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000995e:	f892 8000 	ldrb.w	r8, [r2]
90009962:	fb0e f707 	mul.w	r7, lr, r7
90009966:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009968:	f815 8008 	ldrb.w	r8, [r5, r8]
9000996c:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009970:	2f64      	cmp	r7, #100	@ 0x64
90009972:	d929      	bls.n	900099c8 <HAL_JPEG_GetInfo.part.0+0x188>
          quality += 5000UL / scale;
90009974:	fbb1 f7f7 	udiv	r7, r1, r7
90009978:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000997a:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000997e:	2f01      	cmp	r7, #1
90009980:	d1b4      	bne.n	900098ec <HAL_JPEG_GetInfo.part.0+0xac>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009982:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90009986:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90009988:	2f01      	cmp	r7, #1
9000998a:	d1c1      	bne.n	90009910 <HAL_JPEG_GetInfo.part.0+0xd0>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000998c:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000998e:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90009990:	2b01      	cmp	r3, #1
90009992:	d1ce      	bne.n	90009932 <HAL_JPEG_GetInfo.part.0+0xf2>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009994:	3204      	adds	r2, #4
        quality += 100UL;
90009996:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
90009998:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000999c:	4294      	cmp	r4, r2
9000999e:	d1d9      	bne.n	90009954 <HAL_JPEG_GetInfo.part.0+0x114>
  }

  return (quality / 64UL);
900099a0:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
900099a2:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
900099a4:	f8c9 6010 	str.w	r6, [r9, #16]
}
900099a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900099ac:	2130      	movs	r1, #48	@ 0x30
900099ae:	e76a      	b.n	90009886 <HAL_JPEG_GetInfo.part.0+0x46>
        quality += 100UL;
900099b0:	3664      	adds	r6, #100	@ 0x64
900099b2:	e7e2      	b.n	9000997a <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += (200UL - scale) / 2UL;
900099b4:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
900099b8:	eb06 0657 	add.w	r6, r6, r7, lsr #1
900099bc:	e7a4      	b.n	90009908 <HAL_JPEG_GetInfo.part.0+0xc8>
900099be:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
900099c2:	eb06 0653 	add.w	r6, r6, r3, lsr #1
900099c6:	e7c0      	b.n	9000994a <HAL_JPEG_GetInfo.part.0+0x10a>
900099c8:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
900099cc:	eb06 0657 	add.w	r6, r6, r7, lsr #1
900099d0:	e7d3      	b.n	9000997a <HAL_JPEG_GetInfo.part.0+0x13a>
900099d2:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
900099d6:	eb06 0657 	add.w	r6, r6, r7, lsr #1
900099da:	e7a7      	b.n	9000992c <HAL_JPEG_GetInfo.part.0+0xec>
900099dc:	9002fdd0 	.word	0x9002fdd0

900099e0 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
900099e0:	2800      	cmp	r0, #0
900099e2:	f000 8107 	beq.w	90009bf4 <HAL_JPEG_Init+0x214>
{
900099e6:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
900099e8:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
900099ec:	4605      	mov	r5, r0
900099ee:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900099f2:	2b00      	cmp	r3, #0
900099f4:	f000 80f9 	beq.w	90009bea <HAL_JPEG_Init+0x20a>
  __HAL_JPEG_ENABLE(hjpeg);
900099f8:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900099fa:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
900099fc:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900099fe:	497e      	ldr	r1, [pc, #504]	@ (90009bf8 <HAL_JPEG_Init+0x218>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90009a00:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90009a04:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009a06:	f042 0201 	orr.w	r2, r2, #1
90009a0a:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009a0c:	6822      	ldr	r2, [r4, #0]
90009a0e:	f022 0201 	bic.w	r2, r2, #1
90009a12:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009a14:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009a16:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009a1a:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009a1c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009a1e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009a22:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009a24:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009a26:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009a2a:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009a2c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90009a2e:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009a32:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009a34:	4a71      	ldr	r2, [pc, #452]	@ (90009bfc <HAL_JPEG_Init+0x21c>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90009a36:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a38:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
90009a3a:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009a3c:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a40:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90009a44:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
90009a48:	4b6d      	ldr	r3, [pc, #436]	@ (90009c00 <HAL_JPEG_Init+0x220>)
90009a4a:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90009a4e:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009a52:	496c      	ldr	r1, [pc, #432]	@ (90009c04 <HAL_JPEG_Init+0x224>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a54:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009a58:	4b6b      	ldr	r3, [pc, #428]	@ (90009c08 <HAL_JPEG_Init+0x228>)
90009a5a:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90009a5e:	4a6b      	ldr	r2, [pc, #428]	@ (90009c0c <HAL_JPEG_Init+0x22c>)
90009a60:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a64:	4b6a      	ldr	r3, [pc, #424]	@ (90009c10 <HAL_JPEG_Init+0x230>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009a66:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a6a:	496a      	ldr	r1, [pc, #424]	@ (90009c14 <HAL_JPEG_Init+0x234>)
90009a6c:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90009a70:	4a69      	ldr	r2, [pc, #420]	@ (90009c18 <HAL_JPEG_Init+0x238>)
90009a72:	4b6a      	ldr	r3, [pc, #424]	@ (90009c1c <HAL_JPEG_Init+0x23c>)
90009a74:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
90009a78:	f8c4 2380 	str.w	r2, [r4, #896]	@ 0x380
90009a7c:	f8c4 337c 	str.w	r3, [r4, #892]	@ 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009a80:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
  value = *address & 0xFFFF0000U;
90009a84:	f8d4 142c 	ldr.w	r1, [r4, #1068]	@ 0x42c
90009a88:	4a65      	ldr	r2, [pc, #404]	@ (90009c20 <HAL_JPEG_Init+0x240>)
90009a8a:	400a      	ands	r2, r1
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90009a8c:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009a90:	4313      	orrs	r3, r2
  *address = value;
90009a92:	4a64      	ldr	r2, [pc, #400]	@ (90009c24 <HAL_JPEG_Init+0x244>)
90009a94:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
90009a98:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009a9c:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90009aa0:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009aa2:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009aa6:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90009aa8:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009aac:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90009ab0:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009ab2:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009ab6:	ea43 030c 	orr.w	r3, r3, ip
90009aba:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009abe:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009ac2:	d1eb      	bne.n	90009a9c <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
90009ac4:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009ac8:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90009acc:	4954      	ldr	r1, [pc, #336]	@ (90009c20 <HAL_JPEG_Init+0x240>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009ace:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90009ad0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90009ad2:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
90009ad6:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
90009ada:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90009ade:	400b      	ands	r3, r1
  *address = value;
90009ae0:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009ae4:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
90009ae8:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
90009aec:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009af0:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
90009af4:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90009af8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90009afa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009afe:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
90009b02:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009b06:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009b08:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009b0a:	4b47      	ldr	r3, [pc, #284]	@ (90009c28 <HAL_JPEG_Init+0x248>)
  *address = value;
90009b0c:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009b10:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009b14:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
90009b18:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90009b1c:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90009b20:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009b24:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
90009b26:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
90009b2a:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90009b2e:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90009b32:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009b34:	493d      	ldr	r1, [pc, #244]	@ (90009c2c <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009b36:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009b38:	4b3d      	ldr	r3, [pc, #244]	@ (90009c30 <HAL_JPEG_Init+0x250>)
  *address = value;
90009b3a:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009b3e:	4a3d      	ldr	r2, [pc, #244]	@ (90009c34 <HAL_JPEG_Init+0x254>)
90009b40:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90009b44:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009b48:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90009b4c:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90009b50:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009b54:	4a38      	ldr	r2, [pc, #224]	@ (90009c38 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90009b56:	b29b      	uxth	r3, r3
90009b58:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009b5c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009b60:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009b64:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90009b68:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009b6a:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009b6e:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90009b70:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009b74:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90009b78:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009b7a:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90009b7e:	ea43 030c 	orr.w	r3, r3, ip
90009b82:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009b86:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009b8a:	d1eb      	bne.n	90009b64 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90009b8c:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90009b90:	4924      	ldr	r1, [pc, #144]	@ (90009c24 <HAL_JPEG_Init+0x244>)
90009b92:	4628      	mov	r0, r5
90009b94:	f7ff fd44 	bl	90009620 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009b98:	b118      	cbz	r0, 90009ba2 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009b9a:	2301      	movs	r3, #1
    return HAL_ERROR;
90009b9c:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009b9e:	652b      	str	r3, [r5, #80]	@ 0x50
}
90009ba0:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90009ba2:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90009ba6:	4924      	ldr	r1, [pc, #144]	@ (90009c38 <HAL_JPEG_Init+0x258>)
90009ba8:	4628      	mov	r0, r5
90009baa:	f7ff fd39 	bl	90009620 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009bae:	2800      	cmp	r0, #0
90009bb0:	d1f3      	bne.n	90009b9a <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90009bb2:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90009bb6:	4921      	ldr	r1, [pc, #132]	@ (90009c3c <HAL_JPEG_Init+0x25c>)
90009bb8:	4628      	mov	r0, r5
90009bba:	f7ff fc87 	bl	900094cc <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90009bbe:	2800      	cmp	r0, #0
90009bc0:	d1eb      	bne.n	90009b9a <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90009bc2:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90009bc6:	491e      	ldr	r1, [pc, #120]	@ (90009c40 <HAL_JPEG_Init+0x260>)
90009bc8:	4628      	mov	r0, r5
90009bca:	f7ff fc7f 	bl	900094cc <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90009bce:	2800      	cmp	r0, #0
90009bd0:	d1e3      	bne.n	90009b9a <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009bd2:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90009bd4:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009bd6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90009bda:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90009bdc:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90009bde:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90009be0:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90009be4:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
90009be6:	6568      	str	r0, [r5, #84]	@ 0x54
}
90009be8:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
90009bea:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90009bee:	f7fa fcf9 	bl	900045e4 <HAL_JPEG_MspInit>
90009bf2:	e701      	b.n	900099f8 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90009bf4:	2001      	movs	r0, #1
}
90009bf6:	4770      	bx	lr
90009bf8:	9002fd90 	.word	0x9002fd90
90009bfc:	9002fd50 	.word	0x9002fd50
90009c00:	01050100 	.word	0x01050100
90009c04:	0b0a0908 	.word	0x0b0a0908
90009c08:	07060504 	.word	0x07060504
90009c0c:	03020100 	.word	0x03020100
90009c10:	7d010000 	.word	0x7d010000
90009c14:	04040505 	.word	0x04040505
90009c18:	03040203 	.word	0x03040203
90009c1c:	03010200 	.word	0x03010200
90009c20:	ffff0000 	.word	0xffff0000
90009c24:	9002fec4 	.word	0x9002fec4
90009c28:	09080706 	.word	0x09080706
90009c2c:	01000404 	.word	0x01000404
90009c30:	04040201 	.word	0x04040201
90009c34:	05070403 	.word	0x05070403
90009c38:	9002fe10 	.word	0x9002fe10
90009c3c:	9002ff94 	.word	0x9002ff94
90009c40:	9002ff78 	.word	0x9002ff78

90009c44 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009c44:	2b00      	cmp	r3, #0
90009c46:	bf18      	it	ne
90009c48:	2900      	cmpne	r1, #0
90009c4a:	d036      	beq.n	90009cba <HAL_JPEG_Decode_DMA+0x76>
{
90009c4c:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009c4e:	fab0 f580 	clz	r5, r0
90009c52:	4604      	mov	r4, r0
90009c54:	096d      	lsrs	r5, r5, #5
90009c56:	b370      	cbz	r0, 90009cb6 <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90009c58:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90009c5c:	f1bc 0f01 	cmp.w	ip, #1
90009c60:	d022      	beq.n	90009ca8 <HAL_JPEG_Decode_DMA+0x64>
90009c62:	f04f 0c01 	mov.w	ip, #1
90009c66:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009c6a:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90009c6e:	f1bc 0f01 	cmp.w	ip, #1
90009c72:	d117      	bne.n	90009ca4 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90009c74:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90009c76:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90009c7a:	9b04      	ldr	r3, [sp, #16]
90009c7c:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90009c7e:	2304      	movs	r3, #4
90009c80:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90009c84:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c86:	f023 030f 	bic.w	r3, r3, #15
90009c8a:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90009c8c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c8e:	f043 030e 	orr.w	r3, r3, #14
90009c92:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90009c94:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90009c96:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90009c98:	f7ff fd4c 	bl	90009734 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90009c9c:	f7ff fd88 	bl	900097b0 <JPEG_DMA_StartProcess>
90009ca0:	b920      	cbnz	r0, 90009cac <HAL_JPEG_Decode_DMA+0x68>
}
90009ca2:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90009ca4:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90009ca8:	2002      	movs	r0, #2
}
90009caa:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009cac:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90009cae:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009cb2:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90009cb6:	2001      	movs	r0, #1
}
90009cb8:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90009cba:	2001      	movs	r0, #1
}
90009cbc:	4770      	bx	lr
90009cbe:	bf00      	nop

90009cc0 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009cc0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009cc2:	f003 030c 	and.w	r3, r3, #12
90009cc6:	2b0c      	cmp	r3, #12
90009cc8:	d01a      	beq.n	90009d00 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009cca:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009ccc:	f003 030c 	and.w	r3, r3, #12
90009cd0:	2b08      	cmp	r3, #8
90009cd2:	d001      	beq.n	90009cd8 <HAL_JPEG_Pause+0x18>
}
90009cd4:	2000      	movs	r0, #0
90009cd6:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009cd8:	07ca      	lsls	r2, r1, #31
90009cda:	d41f      	bmi.n	90009d1c <HAL_JPEG_Pause+0x5c>
90009cdc:	f04f 3cff 	mov.w	ip, #4294967295
90009ce0:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009ce4:	078b      	lsls	r3, r1, #30
90009ce6:	d504      	bpl.n	90009cf2 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009ce8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009cea:	4694      	mov	ip, r2
90009cec:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009cf0:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009cf2:	6802      	ldr	r2, [r0, #0]
}
90009cf4:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009cf6:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009cf8:	ea03 030c 	and.w	r3, r3, ip
90009cfc:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009cfe:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009d00:	07cb      	lsls	r3, r1, #31
90009d02:	d503      	bpl.n	90009d0c <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009d04:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009d06:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90009d0a:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009d0c:	0789      	lsls	r1, r1, #30
90009d0e:	d5e1      	bpl.n	90009cd4 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009d10:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009d12:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009d16:	6543      	str	r3, [r0, #84]	@ 0x54
}
90009d18:	2000      	movs	r0, #0
90009d1a:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009d1c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009d1e:	f06f 0c06 	mvn.w	ip, #6
90009d22:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
90009d26:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90009d2a:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009d2c:	e7da      	b.n	90009ce4 <HAL_JPEG_Pause+0x24>
90009d2e:	bf00      	nop

90009d30 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90009d30:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90009d32:	6282      	str	r2, [r0, #40]	@ 0x28
}
90009d34:	4770      	bx	lr
90009d36:	bf00      	nop

90009d38 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90009d38:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90009d3a:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90009d3c:	4770      	bx	lr
90009d3e:	bf00      	nop

90009d40 <HAL_JPEG_Abort>:
{
90009d40:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90009d42:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90009d44:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009d46:	6d41      	ldr	r1, [r0, #84]	@ 0x54
90009d48:	4a32      	ldr	r2, [pc, #200]	@ (90009e14 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009d4a:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009d4e:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009d50:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009d52:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009d54:	d043      	beq.n	90009dde <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009d56:	6822      	ldr	r2, [r4, #0]
90009d58:	6813      	ldr	r3, [r2, #0]
90009d5a:	f023 0301 	bic.w	r3, r3, #1
90009d5e:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90009d60:	f7fe f8e6 	bl	90007f30 <HAL_GetTick>
90009d64:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90009d66:	e005      	b.n	90009d74 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
90009d68:	f7fe f8e2 	bl	90007f30 <HAL_GetTick>
90009d6c:	1b40      	subs	r0, r0, r5
90009d6e:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90009d72:	d82b      	bhi.n	90009dcc <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90009d74:	6823      	ldr	r3, [r4, #0]
90009d76:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009d78:	0612      	lsls	r2, r2, #24
90009d7a:	d4f5      	bmi.n	90009d68 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009d7c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90009d7e:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009d80:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009d84:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009d86:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009d88:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009d8c:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009d8e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009d90:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009d94:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009d96:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009d98:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009d9c:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90009d9e:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90009da0:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90009da2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009da4:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
90009da8:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
90009daa:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90009dac:	b138      	cbz	r0, 90009dbe <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009dae:	2306      	movs	r3, #6
    return HAL_ERROR;
90009db0:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009db2:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90009db6:	2300      	movs	r3, #0
90009db8:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009dbc:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90009dbe:	2301      	movs	r3, #1
90009dc0:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90009dc4:	2300      	movs	r3, #0
90009dc6:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009dca:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009dcc:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009dce:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009dd0:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009dd2:	f042 0208 	orr.w	r2, r2, #8
90009dd6:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009dd8:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90009ddc:	e7ce      	b.n	90009d7c <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90009dde:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90009de0:	f001 f9a8 	bl	9000b134 <HAL_MDMA_Abort>
90009de4:	b118      	cbz	r0, 90009dee <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90009de6:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90009de8:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009dea:	2b40      	cmp	r3, #64	@ 0x40
90009dec:	d00d      	beq.n	90009e0a <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90009dee:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009df0:	f001 f9a0 	bl	9000b134 <HAL_MDMA_Abort>
90009df4:	2800      	cmp	r0, #0
90009df6:	d0ae      	beq.n	90009d56 <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90009df8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90009dfa:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009dfc:	2b40      	cmp	r3, #64	@ 0x40
90009dfe:	d1aa      	bne.n	90009d56 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009e00:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009e02:	f043 0304 	orr.w	r3, r3, #4
90009e06:	6523      	str	r3, [r4, #80]	@ 0x50
90009e08:	e7a5      	b.n	90009d56 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009e0a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009e0c:	f043 0304 	orr.w	r3, r3, #4
90009e10:	6523      	str	r3, [r4, #80]	@ 0x50
90009e12:	e7ec      	b.n	90009dee <HAL_JPEG_Abort+0xae>
90009e14:	ffff7ff0 	.word	0xffff7ff0

90009e18 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
90009e18:	4770      	bx	lr
90009e1a:	bf00      	nop

90009e1c <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009e1c:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90009e1e:	2101      	movs	r1, #1
{
90009e20:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009e22:	6803      	ldr	r3, [r0, #0]
90009e24:	681a      	ldr	r2, [r3, #0]
90009e26:	f022 0201 	bic.w	r2, r2, #1
90009e2a:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009e2c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009e2e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009e32:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009e34:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009e38:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90009e3a:	f043 0304 	orr.w	r3, r3, #4
90009e3e:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90009e40:	f7f8 f960 	bl	90002104 <HAL_JPEG_ErrorCallback>
}
90009e44:	bd08      	pop	{r3, pc}
90009e46:	bf00      	nop

90009e48 <JPEG_MDMAInCpltCallback>:
{
90009e48:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009e4a:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009e4c:	f248 010c 	movw	r1, #32780	@ 0x800c
{
90009e50:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009e52:	6822      	ldr	r2, [r4, #0]
90009e54:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009e56:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
90009e5a:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009e5c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009e5e:	400b      	ands	r3, r1
90009e60:	2b0c      	cmp	r3, #12
90009e62:	d001      	beq.n	90009e68 <JPEG_MDMAInCpltCallback+0x20>
}
90009e64:	b003      	add	sp, #12
90009e66:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e68:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009e6a:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e6c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009e6e:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009e70:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e72:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009e76:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e78:	1a9b      	subs	r3, r3, r2
90009e7a:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009e7c:	6a21      	ldr	r1, [r4, #32]
90009e7e:	f7f8 f875 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
90009e82:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009e84:	42ab      	cmp	r3, r5
90009e86:	d311      	bcc.n	90009eac <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009e88:	b305      	cbz	r5, 90009ecc <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009e8a:	fbb3 f2f5 	udiv	r2, r3, r5
90009e8e:	fb05 3212 	mls	r2, r5, r2, r3
90009e92:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009e94:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009e96:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009e98:	04d1      	lsls	r1, r2, #19
90009e9a:	d400      	bmi.n	90009e9e <JPEG_MDMAInCpltCallback+0x56>
90009e9c:	b963      	cbnz	r3, 90009eb8 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009e9e:	6822      	ldr	r2, [r4, #0]
90009ea0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009ea2:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
90009ea6:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009ea8:	b003      	add	sp, #12
90009eaa:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009eac:	b1cb      	cbz	r3, 90009ee2 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
90009eae:	0798      	lsls	r0, r3, #30
90009eb0:	d119      	bne.n	90009ee6 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009eb2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009eb4:	04d2      	lsls	r2, r2, #19
90009eb6:	d4f2      	bmi.n	90009e9e <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009eb8:	6822      	ldr	r2, [r4, #0]
90009eba:	2501      	movs	r5, #1
90009ebc:	69a1      	ldr	r1, [r4, #24]
90009ebe:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009ec0:	3240      	adds	r2, #64	@ 0x40
90009ec2:	9500      	str	r5, [sp, #0]
90009ec4:	f001 f8c4 	bl	9000b050 <HAL_MDMA_Start_IT>
90009ec8:	2800      	cmp	r0, #0
90009eca:	d0e8      	beq.n	90009e9e <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009ecc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ece:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
90009ed0:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009ed2:	f043 0304 	orr.w	r3, r3, #4
90009ed6:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ed8:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
90009edc:	f7f8 f912 	bl	90002104 <HAL_JPEG_ErrorCallback>
        return;
90009ee0:	e7c0      	b.n	90009e64 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009ee2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009ee4:	e7db      	b.n	90009e9e <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
90009ee6:	f023 0303 	bic.w	r3, r3, #3
90009eea:	3304      	adds	r3, #4
90009eec:	e7d2      	b.n	90009e94 <JPEG_MDMAInCpltCallback+0x4c>
90009eee:	bf00      	nop

90009ef0 <JPEG_DMA_PollResidualData>:
{
90009ef0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009ef2:	6802      	ldr	r2, [r0, #0]
90009ef4:	2610      	movs	r6, #16
{
90009ef6:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009ef8:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90009efa:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90009efe:	d11d      	bne.n	90009f3c <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009f00:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009f02:	06df      	lsls	r7, r3, #27
90009f04:	d51a      	bpl.n	90009f3c <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
90009f06:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009f08:	69e7      	ldr	r7, [r4, #28]
90009f0a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009f0c:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009f0e:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009f10:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009f12:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009f14:	6a67      	ldr	r7, [r4, #36]	@ 0x24
90009f16:	69e2      	ldr	r2, [r4, #28]
90009f18:	443a      	add	r2, r7
90009f1a:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009f1c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009f1e:	69e2      	ldr	r2, [r4, #28]
90009f20:	4402      	add	r2, r0
90009f22:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009f24:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009f26:	69e2      	ldr	r2, [r4, #28]
90009f28:	440a      	add	r2, r1
90009f2a:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90009f2c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009f2e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
90009f30:	3304      	adds	r3, #4
90009f32:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009f34:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009f36:	4293      	cmp	r3, r2
90009f38:	d021      	beq.n	90009f7e <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009f3a:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
90009f3c:	3e01      	subs	r6, #1
90009f3e:	d1db      	bne.n	90009ef8 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
90009f40:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009f42:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009f44:	06d8      	lsls	r0, r3, #27
90009f46:	d501      	bpl.n	90009f4c <JPEG_DMA_PollResidualData+0x5c>
90009f48:	048b      	lsls	r3, r1, #18
90009f4a:	d417      	bmi.n	90009f7c <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009f4c:	6813      	ldr	r3, [r2, #0]
90009f4e:	f023 0301 	bic.w	r3, r3, #1
90009f52:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
90009f54:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009f56:	b9eb      	cbnz	r3, 90009f94 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
90009f58:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
90009f5a:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009f5c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009f5e:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f60:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009f64:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009f68:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009f6c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f6e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009f70:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009f72:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f76:	d00a      	beq.n	90009f8e <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009f78:	f7ff ff4e 	bl	90009e18 <HAL_JPEG_EncodeCpltCallback>
}
90009f7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f7e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f80:	4620      	mov	r0, r4
90009f82:	69e1      	ldr	r1, [r4, #28]
90009f84:	f7f8 f812 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009f88:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
90009f8a:	6265      	str	r5, [r4, #36]	@ 0x24
90009f8c:	e7d6      	b.n	90009f3c <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009f8e:	f7f8 f8bb 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
90009f92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f94:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f96:	4620      	mov	r0, r4
90009f98:	69e1      	ldr	r1, [r4, #28]
90009f9a:	f7f8 f807 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009f9e:	2300      	movs	r3, #0
90009fa0:	6263      	str	r3, [r4, #36]	@ 0x24
90009fa2:	e7d9      	b.n	90009f58 <JPEG_DMA_PollResidualData+0x68>

90009fa4 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009fa4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009fa6:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
90009faa:	d06f      	beq.n	9000a08c <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009fac:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009fae:	f003 030c 	and.w	r3, r3, #12
90009fb2:	2b0c      	cmp	r3, #12
{
90009fb4:	b530      	push	{r4, r5, lr}
90009fb6:	4604      	mov	r4, r0
90009fb8:	b083      	sub	sp, #12
90009fba:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009fbc:	d007      	beq.n	90009fce <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009fbe:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009fc0:	f003 030c 	and.w	r3, r3, #12
90009fc4:	2b08      	cmp	r3, #8
90009fc6:	d035      	beq.n	9000a034 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
90009fc8:	2000      	movs	r0, #0
}
90009fca:	b003      	add	sp, #12
90009fcc:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009fce:	07c8      	lsls	r0, r1, #31
90009fd0:	d415      	bmi.n	90009ffe <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009fd2:	07a9      	lsls	r1, r5, #30
90009fd4:	d5f8      	bpl.n	90009fc8 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009fd6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009fd8:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009fdc:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009fde:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009fe0:	041a      	lsls	r2, r3, #16
90009fe2:	d44f      	bmi.n	9000a084 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009fe4:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009fe6:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
90009fe8:	2a00      	cmp	r2, #0
90009fea:	d13a      	bne.n	9000a062 <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009fec:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009fee:	2206      	movs	r2, #6
    return HAL_ERROR;
90009ff0:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009ff2:	f043 0304 	orr.w	r3, r3, #4
90009ff6:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ff8:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
90009ffc:	e7e5      	b.n	90009fca <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009ffe:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a000:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a002:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000a006:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a008:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
9000a00a:	2a00      	cmp	r2, #0
9000a00c:	d0ee      	beq.n	90009fec <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000a00e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a010:	fbb3 f1f2 	udiv	r1, r3, r2
9000a014:	fb02 3211 	mls	r2, r2, r1, r3
9000a018:	1a9b      	subs	r3, r3, r2
9000a01a:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
9000a01c:	2b00      	cmp	r3, #0
9000a01e:	d0d8      	beq.n	90009fd2 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000a020:	6822      	ldr	r2, [r4, #0]
9000a022:	2101      	movs	r1, #1
9000a024:	3240      	adds	r2, #64	@ 0x40
9000a026:	9100      	str	r1, [sp, #0]
9000a028:	69a1      	ldr	r1, [r4, #24]
9000a02a:	f001 f811 	bl	9000b050 <HAL_MDMA_Start_IT>
9000a02e:	2800      	cmp	r0, #0
9000a030:	d0cf      	beq.n	90009fd2 <HAL_JPEG_Resume+0x2e>
9000a032:	e7db      	b.n	90009fec <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a034:	f011 0101 	ands.w	r1, r1, #1
9000a038:	d011      	beq.n	9000a05e <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a03a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a03c:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a03e:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a040:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a044:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a046:	07ab      	lsls	r3, r5, #30
9000a048:	d504      	bpl.n	9000a054 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a04a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000a04c:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a04e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a052:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000a054:	6822      	ldr	r2, [r4, #0]
9000a056:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a058:	430b      	orrs	r3, r1
9000a05a:	6313      	str	r3, [r2, #48]	@ 0x30
9000a05c:	e7b4      	b.n	90009fc8 <HAL_JPEG_Resume+0x24>
9000a05e:	2228      	movs	r2, #40	@ 0x28
9000a060:	e7f1      	b.n	9000a046 <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a062:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a064:	fbb3 f1f2 	udiv	r1, r3, r2
9000a068:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a06c:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a06e:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a070:	2201      	movs	r2, #1
9000a072:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a074:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a076:	9200      	str	r2, [sp, #0]
9000a078:	69e2      	ldr	r2, [r4, #28]
9000a07a:	f000 ffe9 	bl	9000b050 <HAL_MDMA_Start_IT>
9000a07e:	2800      	cmp	r0, #0
9000a080:	d0a2      	beq.n	90009fc8 <HAL_JPEG_Resume+0x24>
9000a082:	e7b3      	b.n	90009fec <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000a084:	4620      	mov	r0, r4
9000a086:	f7ff ff33 	bl	90009ef0 <JPEG_DMA_PollResidualData>
9000a08a:	e79d      	b.n	90009fc8 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
9000a08c:	2001      	movs	r0, #1
}
9000a08e:	4770      	bx	lr

9000a090 <JPEG_MDMAOutCpltCallback>:
{
9000a090:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a092:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a094:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000a098:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a09a:	6823      	ldr	r3, [r4, #0]
9000a09c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a09e:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a0a2:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a0a4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a0a6:	400a      	ands	r2, r1
9000a0a8:	2a0c      	cmp	r2, #12
9000a0aa:	d001      	beq.n	9000a0b0 <JPEG_MDMAOutCpltCallback+0x20>
}
9000a0ac:	b003      	add	sp, #12
9000a0ae:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000a0b0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a0b2:	0692      	lsls	r2, r2, #26
9000a0b4:	d505      	bpl.n	9000a0c2 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a0b6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a0b8:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a0bc:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000a0be:	b003      	add	sp, #12
9000a0c0:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a0c2:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0c4:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a0c6:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a0c8:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0ca:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a0cc:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000a0d0:	1a9b      	subs	r3, r3, r2
9000a0d2:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0d4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a0d6:	f7f7 ff69 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a0da:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a0dc:	049b      	lsls	r3, r3, #18
9000a0de:	d501      	bpl.n	9000a0e4 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a0e0:	6823      	ldr	r3, [r4, #0]
9000a0e2:	e7e8      	b.n	9000a0b6 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0e4:	6821      	ldr	r1, [r4, #0]
9000a0e6:	2501      	movs	r5, #1
9000a0e8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a0ea:	69e2      	ldr	r2, [r4, #28]
9000a0ec:	3144      	adds	r1, #68	@ 0x44
9000a0ee:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a0f0:	9500      	str	r5, [sp, #0]
9000a0f2:	f000 ffad 	bl	9000b050 <HAL_MDMA_Start_IT>
9000a0f6:	2800      	cmp	r0, #0
9000a0f8:	d0f2      	beq.n	9000a0e0 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a0fa:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a0fc:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000a0fe:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a100:	f043 0304 	orr.w	r3, r3, #4
9000a104:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a106:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000a10a:	f7f7 fffb 	bl	90002104 <HAL_JPEG_ErrorCallback>
          return;
9000a10e:	e7cd      	b.n	9000a0ac <JPEG_MDMAOutCpltCallback+0x1c>

9000a110 <JPEG_MDMAOutAbortCallback>:
{
9000a110:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a112:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a114:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a116:	041a      	lsls	r2, r3, #16
9000a118:	d400      	bmi.n	9000a11c <JPEG_MDMAOutAbortCallback+0xc>
}
9000a11a:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a11c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a11e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a120:	681b      	ldr	r3, [r3, #0]
9000a122:	695b      	ldr	r3, [r3, #20]
9000a124:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a128:	1ad3      	subs	r3, r2, r3
9000a12a:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a12c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a12e:	429a      	cmp	r2, r3
9000a130:	d025      	beq.n	9000a17e <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a132:	6822      	ldr	r2, [r4, #0]
9000a134:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000a136:	f015 0510 	ands.w	r5, r5, #16
9000a13a:	d118      	bne.n	9000a16e <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000a13c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a13e:	bb4b      	cbnz	r3, 9000a194 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a140:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a142:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a144:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a146:	f023 0301 	bic.w	r3, r3, #1
9000a14a:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a14c:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a14e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a150:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a154:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a158:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a15c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a15e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a160:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a162:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a166:	d012      	beq.n	9000a18e <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a168:	f7ff fe56 	bl	90009e18 <HAL_JPEG_EncodeCpltCallback>
}
9000a16c:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a16e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a170:	049b      	lsls	r3, r3, #18
9000a172:	d4d2      	bmi.n	9000a11a <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000a174:	4620      	mov	r0, r4
}
9000a176:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a17a:	f7ff beb9 	b.w	90009ef0 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a17e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a180:	4620      	mov	r0, r4
9000a182:	69e1      	ldr	r1, [r4, #28]
9000a184:	f7f7 ff12 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a188:	2300      	movs	r3, #0
9000a18a:	6263      	str	r3, [r4, #36]	@ 0x24
9000a18c:	e7d1      	b.n	9000a132 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a18e:	f7f7 ffbb 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
9000a192:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a194:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a196:	4620      	mov	r0, r4
9000a198:	69e1      	ldr	r1, [r4, #28]
9000a19a:	f7f7 ff07 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a19e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a1a0:	6265      	str	r5, [r4, #36]	@ 0x24
9000a1a2:	e7cd      	b.n	9000a140 <JPEG_MDMAOutAbortCallback+0x30>

9000a1a4 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a1a4:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a1a6:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a1a8:	f002 0203 	and.w	r2, r2, #3
9000a1ac:	2a02      	cmp	r2, #2
{
9000a1ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a1b2:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a1b4:	d01e      	beq.n	9000a1f4 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000a1b6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a1b8:	04d7      	lsls	r7, r2, #19
9000a1ba:	d407      	bmi.n	9000a1cc <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000a1bc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1be:	0796      	lsls	r6, r2, #30
9000a1c0:	f100 811b 	bmi.w	9000a3fa <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000a1c4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1c6:	0750      	lsls	r0, r2, #29
9000a1c8:	f100 81cc 	bmi.w	9000a564 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a1cc:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a1ce:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a1d2:	d107      	bne.n	9000a1e4 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000a1d4:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000a1d6:	f016 0608 	ands.w	r6, r6, #8
9000a1da:	d14a      	bne.n	9000a272 <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a1dc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1de:	06d2      	lsls	r2, r2, #27
9000a1e0:	f100 81fe 	bmi.w	9000a5e0 <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a1e4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1e6:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a1ea:	2a20      	cmp	r2, #32
9000a1ec:	d019      	beq.n	9000a222 <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
9000a1ee:	2000      	movs	r0, #0
}
9000a1f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a1f4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1f6:	0652      	lsls	r2, r2, #25
9000a1f8:	d5dd      	bpl.n	9000a1b6 <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a1fa:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a1fc:	4629      	mov	r1, r5
9000a1fe:	f7ff fb1f 	bl	90009840 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a202:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a204:	4629      	mov	r1, r5
9000a206:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a208:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a20a:	f7f7 fe81 	bl	90001f10 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a20e:	6823      	ldr	r3, [r4, #0]
9000a210:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a212:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000a216:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a218:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a21a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000a21e:	639a      	str	r2, [r3, #56]	@ 0x38
9000a220:	e7c9      	b.n	9000a1b6 <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a222:	681a      	ldr	r2, [r3, #0]
9000a224:	f022 0201 	bic.w	r2, r2, #1
9000a228:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a22a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a22c:	f002 020c 	and.w	r2, r2, #12
9000a230:	2a08      	cmp	r2, #8
9000a232:	f000 8201 	beq.w	9000a638 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a236:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a238:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a23c:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000a23e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a240:	2b00      	cmp	r3, #0
9000a242:	f040 81fe 	bne.w	9000a642 <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000a246:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a248:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a24a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a24c:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a24e:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a252:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a256:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a25a:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a25c:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a25e:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a260:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a264:	f000 81e5 	beq.w	9000a632 <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a268:	f7ff fdd6 	bl	90009e18 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000a26c:	2001      	movs	r0, #1
}
9000a26e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a272:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a274:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a276:	3220      	adds	r2, #32
9000a278:	4296      	cmp	r6, r2
9000a27a:	f0c0 8200 	bcc.w	9000a67e <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000a27e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a280:	69e1      	ldr	r1, [r4, #28]
9000a282:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a284:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a286:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a288:	69e2      	ldr	r2, [r4, #28]
9000a28a:	440a      	add	r2, r1
9000a28c:	0a19      	lsrs	r1, r3, #8
9000a28e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a290:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a292:	69e2      	ldr	r2, [r4, #28]
9000a294:	440a      	add	r2, r1
9000a296:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a298:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a29a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a29c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a29e:	69e2      	ldr	r2, [r4, #28]
9000a2a0:	440a      	add	r2, r1
9000a2a2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a2a4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a2a6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a2a8:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a2aa:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a2ac:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a2ae:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a2b0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a2b2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a2b4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2b6:	69e2      	ldr	r2, [r4, #28]
9000a2b8:	440a      	add	r2, r1
9000a2ba:	0a19      	lsrs	r1, r3, #8
9000a2bc:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2be:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2c0:	69e2      	ldr	r2, [r4, #28]
9000a2c2:	440a      	add	r2, r1
9000a2c4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2c6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2c8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2ca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2cc:	69e2      	ldr	r2, [r4, #28]
9000a2ce:	440a      	add	r2, r1
9000a2d0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a2d2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a2d4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a2d6:	3304      	adds	r3, #4
9000a2d8:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a2da:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a2dc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a2de:	69e1      	ldr	r1, [r4, #28]
9000a2e0:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a2e2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2e4:	69e2      	ldr	r2, [r4, #28]
9000a2e6:	440a      	add	r2, r1
9000a2e8:	0a19      	lsrs	r1, r3, #8
9000a2ea:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2ec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2ee:	69e2      	ldr	r2, [r4, #28]
9000a2f0:	440a      	add	r2, r1
9000a2f2:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2f4:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2f6:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2f8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2fa:	69e2      	ldr	r2, [r4, #28]
9000a2fc:	440a      	add	r2, r1
9000a2fe:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a300:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a302:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a304:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a306:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a308:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a30a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a30c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a30e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a310:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a312:	69e2      	ldr	r2, [r4, #28]
9000a314:	440a      	add	r2, r1
9000a316:	0a19      	lsrs	r1, r3, #8
9000a318:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a31a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a31c:	69e2      	ldr	r2, [r4, #28]
9000a31e:	440a      	add	r2, r1
9000a320:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a322:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a324:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a326:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a328:	69e2      	ldr	r2, [r4, #28]
9000a32a:	440a      	add	r2, r1
9000a32c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a32e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a330:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a332:	3304      	adds	r3, #4
9000a334:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a336:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a338:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a33a:	69e1      	ldr	r1, [r4, #28]
9000a33c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a33e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a340:	69e2      	ldr	r2, [r4, #28]
9000a342:	440a      	add	r2, r1
9000a344:	0a19      	lsrs	r1, r3, #8
9000a346:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a348:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a34a:	69e2      	ldr	r2, [r4, #28]
9000a34c:	440a      	add	r2, r1
9000a34e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a350:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a352:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a354:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a356:	69e2      	ldr	r2, [r4, #28]
9000a358:	440a      	add	r2, r1
9000a35a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a35c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a35e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a360:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a362:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a364:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a366:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a368:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a36a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a36c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a36e:	69e2      	ldr	r2, [r4, #28]
9000a370:	440a      	add	r2, r1
9000a372:	0a19      	lsrs	r1, r3, #8
9000a374:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a376:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a378:	69e2      	ldr	r2, [r4, #28]
9000a37a:	440a      	add	r2, r1
9000a37c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a37e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a380:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a382:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a384:	69e2      	ldr	r2, [r4, #28]
9000a386:	440a      	add	r2, r1
9000a388:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a38a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a38c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a38e:	3304      	adds	r3, #4
9000a390:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a392:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a394:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a396:	69e1      	ldr	r1, [r4, #28]
9000a398:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a39a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a39c:	69e2      	ldr	r2, [r4, #28]
9000a39e:	440a      	add	r2, r1
9000a3a0:	0a19      	lsrs	r1, r3, #8
9000a3a2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3a4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3a6:	69e2      	ldr	r2, [r4, #28]
9000a3a8:	440a      	add	r2, r1
9000a3aa:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3ac:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3ae:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3b0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3b2:	69e2      	ldr	r2, [r4, #28]
9000a3b4:	440a      	add	r2, r1
9000a3b6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a3b8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a3ba:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a3bc:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a3be:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a3c0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a3c2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a3c4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a3c6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a3c8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3ca:	69e2      	ldr	r2, [r4, #28]
9000a3cc:	440a      	add	r2, r1
9000a3ce:	0a19      	lsrs	r1, r3, #8
9000a3d0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3d2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3d4:	69e2      	ldr	r2, [r4, #28]
9000a3d6:	440a      	add	r2, r1
9000a3d8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3da:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3dc:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3de:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3e0:	69e2      	ldr	r2, [r4, #28]
9000a3e2:	440a      	add	r2, r1
9000a3e4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a3e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a3e8:	3304      	adds	r3, #4
9000a3ea:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a3ec:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a3ee:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a3f0:	429a      	cmp	r2, r3
9000a3f2:	f000 8258 	beq.w	9000a8a6 <JPEG_Process+0x702>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a3f6:	6823      	ldr	r3, [r4, #0]
9000a3f8:	e6f4      	b.n	9000a1e4 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a3fa:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a3fc:	2a00      	cmp	r2, #0
9000a3fe:	f000 8128 	beq.w	9000a652 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a402:	6a21      	ldr	r1, [r4, #32]
9000a404:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a406:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a408:	f240 81b9 	bls.w	9000a77e <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a40c:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a40e:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a410:	04cd      	lsls	r5, r1, #19
9000a412:	f53f aedb 	bmi.w	9000a1cc <JPEG_Process+0x28>
9000a416:	2a00      	cmp	r2, #0
9000a418:	f43f aed8 	beq.w	9000a1cc <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a41c:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000a41e:	ea4f 0092 	mov.w	r0, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000a422:	f200 8248 	bhi.w	9000a8b6 <JPEG_Process+0x712>
      if (nb_words > 0UL)
9000a426:	2a03      	cmp	r2, #3
9000a428:	f240 82c0 	bls.w	9000a9ac <JPEG_Process+0x808>
          input_count = hjpeg->JpegInCount;
9000a42c:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a42e:	2801      	cmp	r0, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a430:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a432:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a436:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a438:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a43a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a43c:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a440:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a442:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a446:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a44a:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a44e:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a450:	6a21      	ldr	r1, [r4, #32]
9000a452:	f101 0104 	add.w	r1, r1, #4
9000a456:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a458:	f43f aeb8 	beq.w	9000a1cc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a45c:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a45e:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a460:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a464:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a466:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a468:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a46a:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a46e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a470:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a474:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a478:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a47c:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a47e:	6a21      	ldr	r1, [r4, #32]
9000a480:	f101 0104 	add.w	r1, r1, #4
9000a484:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a486:	f43f aea1 	beq.w	9000a1cc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a48a:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a48c:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a48e:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a492:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a494:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a496:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a498:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a49c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a49e:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a4a2:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4a6:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a4aa:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a4ac:	6a21      	ldr	r1, [r4, #32]
9000a4ae:	f101 0104 	add.w	r1, r1, #4
9000a4b2:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a4b4:	f43f ae8a 	beq.w	9000a1cc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a4b8:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a4ba:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4bc:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a4c0:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4c2:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4c4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4c6:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a4ca:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4cc:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a4d0:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4d4:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a4d8:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a4da:	6a21      	ldr	r1, [r4, #32]
9000a4dc:	f101 0104 	add.w	r1, r1, #4
9000a4e0:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a4e2:	f43f ae73 	beq.w	9000a1cc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a4e6:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a4e8:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4ea:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a4ee:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4f0:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4f2:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4f4:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a4f8:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4fa:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a4fe:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a502:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a506:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a508:	6a21      	ldr	r1, [r4, #32]
9000a50a:	f101 0104 	add.w	r1, r1, #4
9000a50e:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a510:	f43f ae5c 	beq.w	9000a1cc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a514:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a516:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a518:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a51c:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a51e:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a520:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a522:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a526:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a528:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a52c:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a530:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a534:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a536:	6a21      	ldr	r1, [r4, #32]
9000a538:	f101 0104 	add.w	r1, r1, #4
9000a53c:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a53e:	f47f ae45 	bne.w	9000a1cc <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a542:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a544:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a546:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a548:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a54a:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a54c:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a54e:	7849      	ldrb	r1, [r1, #1]
9000a550:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000a554:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a556:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a55a:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a55c:	6a22      	ldr	r2, [r4, #32]
9000a55e:	3204      	adds	r2, #4
9000a560:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000a562:	e633      	b.n	9000a1cc <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a564:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a566:	2a00      	cmp	r2, #0
9000a568:	d073      	beq.n	9000a652 <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a56a:	6a21      	ldr	r1, [r4, #32]
9000a56c:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a56e:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a570:	f200 8182 	bhi.w	9000a878 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a574:	428a      	cmp	r2, r1
9000a576:	f040 8104 	bne.w	9000a782 <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a57a:	6a21      	ldr	r1, [r4, #32]
9000a57c:	4620      	mov	r0, r4
9000a57e:	f7f7 fcf5 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a582:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a584:	2a04      	cmp	r2, #4
9000a586:	d902      	bls.n	9000a58e <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a588:	f022 0203 	bic.w	r2, r2, #3
9000a58c:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a58e:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a590:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a592:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a594:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a596:	04c9      	lsls	r1, r1, #19
9000a598:	f53f ae18 	bmi.w	9000a1cc <JPEG_Process+0x28>
9000a59c:	2a00      	cmp	r2, #0
9000a59e:	f43f ae15 	beq.w	9000a1cc <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a5a2:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a5a4:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000a5a6:	f040 8177 	bne.w	9000a898 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a5aa:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a5ac:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a5ae:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a5b0:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000a5b2:	f105 0501 	add.w	r5, r5, #1
9000a5b6:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a5b8:	d010      	beq.n	9000a5dc <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a5ba:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a5bc:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a5be:	5d45      	ldrb	r5, [r0, r5]
9000a5c0:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000a5c4:	6a25      	ldr	r5, [r4, #32]
9000a5c6:	f105 0501 	add.w	r5, r5, #1
9000a5ca:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a5cc:	d106      	bne.n	9000a5dc <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a5ce:	6a22      	ldr	r2, [r4, #32]
9000a5d0:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000a5d2:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a5d4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a5d8:	3201      	adds	r2, #1
9000a5da:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a5dc:	6419      	str	r1, [r3, #64]	@ 0x40
9000a5de:	e5f5      	b.n	9000a1cc <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a5e0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a5e2:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a5e4:	3204      	adds	r2, #4
9000a5e6:	4295      	cmp	r5, r2
9000a5e8:	f0c0 80cd 	bcc.w	9000a786 <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
9000a5ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a5ee:	69e1      	ldr	r1, [r4, #28]
9000a5f0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a5f2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a5f4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5f6:	69e2      	ldr	r2, [r4, #28]
9000a5f8:	440a      	add	r2, r1
9000a5fa:	0a19      	lsrs	r1, r3, #8
9000a5fc:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a5fe:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a600:	69e2      	ldr	r2, [r4, #28]
9000a602:	440a      	add	r2, r1
9000a604:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a606:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a608:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a60a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a60c:	69e2      	ldr	r2, [r4, #28]
9000a60e:	440a      	add	r2, r1
9000a610:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a612:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a614:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000a616:	3304      	adds	r3, #4
9000a618:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a61a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a61c:	429a      	cmp	r2, r3
9000a61e:	f47f aeea 	bne.w	9000a3f6 <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a622:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a624:	4620      	mov	r0, r4
9000a626:	69e1      	ldr	r1, [r4, #28]
9000a628:	f7f7 fcc0 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a62c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a62e:	6266      	str	r6, [r4, #36]	@ 0x24
9000a630:	e5d8      	b.n	9000a1e4 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a632:	f7f7 fd69 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
9000a636:	e619      	b.n	9000a26c <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a638:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a63a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a63e:	631a      	str	r2, [r3, #48]	@ 0x30
9000a640:	e5f9      	b.n	9000a236 <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a642:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a644:	4620      	mov	r0, r4
9000a646:	69e1      	ldr	r1, [r4, #28]
9000a648:	f7f7 fcb0 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a64c:	2300      	movs	r3, #0
9000a64e:	6263      	str	r3, [r4, #36]	@ 0x24
9000a650:	e5f9      	b.n	9000a246 <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a652:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a654:	f002 020c 	and.w	r2, r2, #12
9000a658:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a65a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a65c:	f000 811e 	beq.w	9000a89c <JPEG_Process+0x6f8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a660:	f002 020c 	and.w	r2, r2, #12
9000a664:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a666:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a668:	f47f adb0 	bne.w	9000a1cc <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a66c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a670:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a672:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a674:	f022 0206 	bic.w	r2, r2, #6
9000a678:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a67a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a67c:	e5a6      	b.n	9000a1cc <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a67e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a680:	4296      	cmp	r6, r2
9000a682:	f67f adaf 	bls.w	9000a1e4 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a686:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a688:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000a68a:	0880      	lsrs	r0, r0, #2
9000a68c:	d020      	beq.n	9000a6d0 <JPEG_Process+0x52c>
9000a68e:	4629      	mov	r1, r5
9000a690:	e000      	b.n	9000a694 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000a692:	6823      	ldr	r3, [r4, #0]
9000a694:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a696:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a698:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a69a:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a69c:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a69e:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a6a0:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a6a2:	69e2      	ldr	r2, [r4, #28]
9000a6a4:	4432      	add	r2, r6
9000a6a6:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000a6aa:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a6ac:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a6ae:	69e2      	ldr	r2, [r4, #28]
9000a6b0:	4432      	add	r2, r6
9000a6b2:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a6b6:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a6ba:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a6bc:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a6be:	69e2      	ldr	r2, [r4, #28]
9000a6c0:	4432      	add	r2, r6
9000a6c2:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a6c4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a6c6:	f103 0304 	add.w	r3, r3, #4
9000a6ca:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a6cc:	d1e1      	bne.n	9000a692 <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a6ce:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a6d0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a6d2:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a6d4:	429e      	cmp	r6, r3
9000a6d6:	f000 8161 	beq.w	9000a99c <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a6da:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a6de:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a6e0:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000a6e4:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a6e6:	d00e      	beq.n	9000a706 <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a6e8:	f005 0303 	and.w	r3, r5, #3
9000a6ec:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a6ee:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a6f0:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a6f2:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a6f4:	fa27 f303 	lsr.w	r3, r7, r3
9000a6f8:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a6fa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a6fc:	69e1      	ldr	r1, [r4, #28]
9000a6fe:	f103 0301 	add.w	r3, r3, #1
9000a702:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a704:	d1f0      	bne.n	9000a6e8 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000a706:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a70a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a70c:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a70e:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a712:	f7f7 fc4b 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a716:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a718:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000a71a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a71c:	f63f ae6b 	bhi.w	9000a3f6 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a720:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000a724:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a726:	69e0      	ldr	r0, [r4, #28]
9000a728:	fa27 f502 	lsr.w	r5, r7, r2
9000a72c:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a72e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a730:	f101 0101 	add.w	r1, r1, #1
9000a734:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a736:	f43f ae5e 	beq.w	9000a3f6 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a73a:	f102 0108 	add.w	r1, r2, #8
9000a73e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a740:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a742:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a744:	fa27 f101 	lsr.w	r1, r7, r1
9000a748:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a74a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a74c:	f101 0101 	add.w	r1, r1, #1
9000a750:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a752:	f43f ae50 	beq.w	9000a3f6 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a756:	3210      	adds	r2, #16
9000a758:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a75a:	69e0      	ldr	r0, [r4, #28]
9000a75c:	fa27 f202 	lsr.w	r2, r7, r2
9000a760:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a762:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a764:	3201      	adds	r2, #1
9000a766:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a768:	2e00      	cmp	r6, #0
9000a76a:	f47f ae44 	bne.w	9000a3f6 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a76e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a770:	0e3f      	lsrs	r7, r7, #24
9000a772:	69e2      	ldr	r2, [r4, #28]
9000a774:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000a776:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a778:	3301      	adds	r3, #1
9000a77a:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a77c:	e63b      	b.n	9000a3f6 <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a77e:	428a      	cmp	r2, r1
9000a780:	d07c      	beq.n	9000a87c <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a782:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a784:	e522      	b.n	9000a1cc <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a786:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a788:	4295      	cmp	r5, r2
9000a78a:	f67f ad2b 	bls.w	9000a1e4 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a78e:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a790:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000a792:	0880      	lsrs	r0, r0, #2
9000a794:	d020      	beq.n	9000a7d8 <JPEG_Process+0x634>
9000a796:	4631      	mov	r1, r6
9000a798:	e000      	b.n	9000a79c <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000a79a:	6823      	ldr	r3, [r4, #0]
9000a79c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a79e:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a7a0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a7a2:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a7a4:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a7a6:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a7a8:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a7aa:	69e2      	ldr	r2, [r4, #28]
9000a7ac:	442a      	add	r2, r5
9000a7ae:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000a7b2:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a7b4:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a7b6:	69e2      	ldr	r2, [r4, #28]
9000a7b8:	442a      	add	r2, r5
9000a7ba:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a7be:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a7c2:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a7c4:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a7c6:	69e2      	ldr	r2, [r4, #28]
9000a7c8:	442a      	add	r2, r5
9000a7ca:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a7cc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a7ce:	f103 0304 	add.w	r3, r3, #4
9000a7d2:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a7d4:	d1e1      	bne.n	9000a79a <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a7d6:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a7d8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a7da:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a7dc:	429d      	cmp	r5, r3
9000a7de:	f000 80dd 	beq.w	9000a99c <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a7e2:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a7e6:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a7e8:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000a7ec:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a7ee:	d00e      	beq.n	9000a80e <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a7f0:	f006 0303 	and.w	r3, r6, #3
9000a7f4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a7f6:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a7f8:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a7fa:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a7fc:	fa27 f303 	lsr.w	r3, r7, r3
9000a800:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a802:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a804:	69e1      	ldr	r1, [r4, #28]
9000a806:	f103 0301 	add.w	r3, r3, #1
9000a80a:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a80c:	d1f0      	bne.n	9000a7f0 <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000a80e:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a812:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a814:	4620      	mov	r0, r4
9000a816:	f7f7 fbc9 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000a81a:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000a81e:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a820:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000a822:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a824:	f63f ade7 	bhi.w	9000a3f6 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a828:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000a82c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a82e:	69e0      	ldr	r0, [r4, #28]
9000a830:	fa27 f502 	lsr.w	r5, r7, r2
9000a834:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a836:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a838:	f101 0101 	add.w	r1, r1, #1
9000a83c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a83e:	f43f adda 	beq.w	9000a3f6 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a842:	f102 0108 	add.w	r1, r2, #8
9000a846:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a848:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a84a:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a84c:	fa27 f101 	lsr.w	r1, r7, r1
9000a850:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a852:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a854:	f101 0101 	add.w	r1, r1, #1
9000a858:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a85a:	f43f adcc 	beq.w	9000a3f6 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a85e:	3210      	adds	r2, #16
9000a860:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a862:	69e0      	ldr	r0, [r4, #28]
9000a864:	fa27 f202 	lsr.w	r2, r7, r2
9000a868:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a86a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a86c:	3201      	adds	r2, #1
9000a86e:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a870:	2b00      	cmp	r3, #0
9000a872:	f43f af7c 	beq.w	9000a76e <JPEG_Process+0x5ca>
9000a876:	e5be      	b.n	9000a3f6 <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a878:	1a52      	subs	r2, r2, r1
9000a87a:	e68b      	b.n	9000a594 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a87c:	6a21      	ldr	r1, [r4, #32]
9000a87e:	4620      	mov	r0, r4
9000a880:	f7f7 fb74 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a884:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a886:	2a04      	cmp	r2, #4
9000a888:	d902      	bls.n	9000a890 <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a88a:	f022 0203 	bic.w	r2, r2, #3
9000a88e:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a890:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a892:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a894:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000a896:	e5ba      	b.n	9000a40e <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000a898:	6a22      	ldr	r2, [r4, #32]
9000a89a:	e653      	b.n	9000a544 <JPEG_Process+0x3a0>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a89c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a8a0:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a8a2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a8a4:	e492      	b.n	9000a1cc <JPEG_Process+0x28>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a8a6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a8a8:	4620      	mov	r0, r4
9000a8aa:	69e1      	ldr	r1, [r4, #28]
9000a8ac:	f7f7 fb7e 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a8b0:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a8b2:	6265      	str	r5, [r4, #36]	@ 0x24
9000a8b4:	e496      	b.n	9000a1e4 <JPEG_Process+0x40>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8b6:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000a8b8:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8ba:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8bc:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8be:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8c0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8c2:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a8c4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8c6:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a8ca:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8cc:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8d0:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a8d2:	6a21      	ldr	r1, [r4, #32]
9000a8d4:	3104      	adds	r1, #4
9000a8d6:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a8d8:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8da:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8dc:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8de:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8e0:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8e2:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a8e4:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8e6:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a8ea:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8ec:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8f0:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a8f2:	6a21      	ldr	r1, [r4, #32]
9000a8f4:	3104      	adds	r1, #4
9000a8f6:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a8f8:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8fa:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8fc:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8fe:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a900:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a902:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a904:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a906:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a90a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a90c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a910:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a912:	6a21      	ldr	r1, [r4, #32]
9000a914:	3104      	adds	r1, #4
9000a916:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a918:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a91a:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a91c:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a91e:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a920:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a922:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a924:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a926:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a92a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a92c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a930:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a932:	6a21      	ldr	r1, [r4, #32]
9000a934:	3104      	adds	r1, #4
9000a936:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a938:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a93a:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a93c:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a93e:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a940:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a942:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a944:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a946:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a94a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a94c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a950:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a952:	6a21      	ldr	r1, [r4, #32]
9000a954:	3104      	adds	r1, #4
9000a956:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a958:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a95a:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a95c:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a95e:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a960:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a962:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a964:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a966:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a96a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a96c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a970:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a972:	6a21      	ldr	r1, [r4, #32]
9000a974:	3104      	adds	r1, #4
9000a976:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a978:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a97a:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a97c:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a97e:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a980:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a982:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a984:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a986:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a98a:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a98c:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a990:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a992:	6a21      	ldr	r1, [r4, #32]
9000a994:	3104      	adds	r1, #4
9000a996:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a998:	6a20      	ldr	r0, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a99a:	e5d3      	b.n	9000a544 <JPEG_Process+0x3a0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a99c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a99e:	4620      	mov	r0, r4
9000a9a0:	f7f7 fb04 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a9a4:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a9a6:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a9a8:	6262      	str	r2, [r4, #36]	@ 0x24
9000a9aa:	e41b      	b.n	9000a1e4 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a9ac:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a9ae:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a9b0:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a9b2:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000a9b4:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a9b8:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000a9ba:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a9bc:	f43f ae0e 	beq.w	9000a5dc <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a9c0:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a9c2:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a9c4:	5c28      	ldrb	r0, [r5, r0]
9000a9c6:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000a9ca:	6a20      	ldr	r0, [r4, #32]
9000a9cc:	f100 0001 	add.w	r0, r0, #1
9000a9d0:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a9d2:	f47f ae03 	bne.w	9000a5dc <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a9d6:	6a22      	ldr	r2, [r4, #32]
9000a9d8:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000a9da:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a9dc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a9e0:	3201      	adds	r2, #1
9000a9e2:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a9e4:	e5fa      	b.n	9000a5dc <JPEG_Process+0x438>
9000a9e6:	bf00      	nop

9000a9e8 <HAL_JPEG_IRQHandler>:
{
9000a9e8:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000a9ea:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000a9ee:	3b03      	subs	r3, #3
9000a9f0:	2b01      	cmp	r3, #1
9000a9f2:	d900      	bls.n	9000a9f6 <HAL_JPEG_IRQHandler+0xe>
}
9000a9f4:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a9f6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a9f8:	4604      	mov	r4, r0
9000a9fa:	f003 030c 	and.w	r3, r3, #12
9000a9fe:	2b08      	cmp	r3, #8
9000aa00:	d050      	beq.n	9000aaa4 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000aa02:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000aa04:	f003 030c 	and.w	r3, r3, #12
9000aa08:	2b0c      	cmp	r3, #12
9000aa0a:	d1f3      	bne.n	9000a9f4 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa0c:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000aa0e:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa10:	f002 0203 	and.w	r2, r2, #3
9000aa14:	2a02      	cmp	r2, #2
9000aa16:	d049      	beq.n	9000aaac <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000aa18:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aa1a:	0692      	lsls	r2, r2, #26
9000aa1c:	d5ea      	bpl.n	9000a9f4 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000aa1e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000aa20:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000aa22:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000aa26:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aa28:	681a      	ldr	r2, [r3, #0]
9000aa2a:	f022 0201 	bic.w	r2, r2, #1
9000aa2e:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000aa30:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000aa32:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000aa36:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000aa38:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000aa3a:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000aa3e:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000aa40:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000aa44:	2b02      	cmp	r3, #2
9000aa46:	d054      	beq.n	9000aaf2 <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000aa48:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000aa4a:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000aa4e:	2b02      	cmp	r3, #2
9000aa50:	d043      	beq.n	9000aada <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aa52:	6803      	ldr	r3, [r0, #0]
9000aa54:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000aa56:	695b      	ldr	r3, [r3, #20]
9000aa58:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000aa5c:	1ad3      	subs	r3, r2, r3
9000aa5e:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000aa60:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa62:	429a      	cmp	r2, r3
9000aa64:	d048      	beq.n	9000aaf8 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000aa66:	6822      	ldr	r2, [r4, #0]
9000aa68:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000aa6a:	f015 0510 	ands.w	r5, r5, #16
9000aa6e:	d138      	bne.n	9000aae2 <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000aa70:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa72:	2b00      	cmp	r3, #0
9000aa74:	d14b      	bne.n	9000ab0e <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aa76:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000aa78:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000aa7a:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aa7c:	f023 0301 	bic.w	r3, r3, #1
9000aa80:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000aa82:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa84:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa86:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000aa8a:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa8e:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000aa92:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa94:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa96:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000aa98:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa9c:	d034      	beq.n	9000ab08 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000aa9e:	f7ff f9bb 	bl	90009e18 <HAL_JPEG_EncodeCpltCallback>
}
9000aaa2:	bd38      	pop	{r3, r4, r5, pc}
9000aaa4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000aaa8:	f7ff bb7c 	b.w	9000a1a4 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000aaac:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aaae:	0651      	lsls	r1, r2, #25
9000aab0:	d5b2      	bpl.n	9000aa18 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000aab2:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000aab4:	4629      	mov	r1, r5
9000aab6:	f7fe fec3 	bl	90009840 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000aaba:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000aabc:	4629      	mov	r1, r5
9000aabe:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000aac0:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000aac2:	f7f7 fa25 	bl	90001f10 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000aac6:	6823      	ldr	r3, [r4, #0]
9000aac8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000aaca:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000aace:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000aad0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000aad2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000aad6:	639a      	str	r2, [r3, #56]	@ 0x38
9000aad8:	e79e      	b.n	9000aa18 <HAL_JPEG_IRQHandler+0x30>
}
9000aada:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000aade:	f000 bb63 	b.w	9000b1a8 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000aae2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000aae4:	049b      	lsls	r3, r3, #18
9000aae6:	d485      	bmi.n	9000a9f4 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000aae8:	4620      	mov	r0, r4
}
9000aaea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000aaee:	f7ff b9ff 	b.w	90009ef0 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000aaf2:	f000 fb59 	bl	9000b1a8 <HAL_MDMA_Abort_IT>
9000aaf6:	e7a7      	b.n	9000aa48 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aaf8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aafa:	4620      	mov	r0, r4
9000aafc:	69e1      	ldr	r1, [r4, #28]
9000aafe:	f7f7 fa55 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000ab02:	2300      	movs	r3, #0
9000ab04:	6263      	str	r3, [r4, #36]	@ 0x24
9000ab06:	e7ae      	b.n	9000aa66 <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000ab08:	f7f7 fafe 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
9000ab0c:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000ab0e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000ab10:	4620      	mov	r0, r4
9000ab12:	69e1      	ldr	r1, [r4, #28]
9000ab14:	f7f7 fa4a 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000ab18:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000ab1a:	6265      	str	r5, [r4, #36]	@ 0x24
9000ab1c:	e7ab      	b.n	9000aa76 <HAL_JPEG_IRQHandler+0x8e>
9000ab1e:	bf00      	nop

9000ab20 <HAL_JPEG_GetState>:
  return hjpeg->State;
9000ab20:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000ab24:	4770      	bx	lr
9000ab26:	bf00      	nop

9000ab28 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000ab28:	2800      	cmp	r0, #0
9000ab2a:	d067      	beq.n	9000abfc <HAL_LTDC_Init+0xd4>
{
9000ab2c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000ab2e:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000ab32:	4604      	mov	r4, r0
9000ab34:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000ab38:	2b00      	cmp	r3, #0
9000ab3a:	d05a      	beq.n	9000abf2 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab3c:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ab3e:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab40:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ab44:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab48:	4302      	orrs	r2, r0
9000ab4a:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ab4c:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab4e:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000ab50:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ab52:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000ab56:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000ab58:	4929      	ldr	r1, [pc, #164]	@ (9000ac00 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ab5a:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab5c:	6998      	ldr	r0, [r3, #24]
9000ab5e:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000ab60:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab62:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000ab64:	689a      	ldr	r2, [r3, #8]
9000ab66:	400a      	ands	r2, r1
9000ab68:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000ab6a:	689a      	ldr	r2, [r3, #8]
9000ab6c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ab70:	69a0      	ldr	r0, [r4, #24]
9000ab72:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000ab74:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000ab76:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000ab78:	68da      	ldr	r2, [r3, #12]
9000ab7a:	400a      	ands	r2, r1
9000ab7c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000ab7e:	68da      	ldr	r2, [r3, #12]
9000ab80:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ab84:	6a20      	ldr	r0, [r4, #32]
9000ab86:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000ab88:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000ab8a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000ab8c:	691a      	ldr	r2, [r3, #16]
9000ab8e:	400a      	ands	r2, r1
9000ab90:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000ab92:	691a      	ldr	r2, [r3, #16]
9000ab94:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ab98:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000ab9a:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000ab9c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000ab9e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000aba0:	695a      	ldr	r2, [r3, #20]
9000aba2:	400a      	ands	r2, r1
9000aba4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000aba6:	695a      	ldr	r2, [r3, #20]
9000aba8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000abaa:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000abae:	430a      	orrs	r2, r1
9000abb0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000abb2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000abb4:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000abb8:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000abbc:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000abc0:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000abc2:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000abc4:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000abc8:	432a      	orrs	r2, r5
9000abca:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000abce:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000abd0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000abd4:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000abd6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000abd8:	f042 0206 	orr.w	r2, r2, #6
9000abdc:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000abde:	699a      	ldr	r2, [r3, #24]
9000abe0:	f042 0201 	orr.w	r2, r2, #1
9000abe4:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000abe6:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000abe8:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000abec:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000abf0:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000abf2:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000abf6:	f7f9 fd81 	bl	900046fc <HAL_LTDC_MspInit>
9000abfa:	e79f      	b.n	9000ab3c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000abfc:	2001      	movs	r0, #1
}
9000abfe:	4770      	bx	lr
9000ac00:	f000f800 	.word	0xf000f800

9000ac04 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000ac04:	4770      	bx	lr
9000ac06:	bf00      	nop

9000ac08 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000ac08:	4770      	bx	lr
9000ac0a:	bf00      	nop

9000ac0c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000ac0c:	6803      	ldr	r3, [r0, #0]
{
9000ac0e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000ac10:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000ac12:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000ac14:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000ac16:	076a      	lsls	r2, r5, #29
9000ac18:	d501      	bpl.n	9000ac1e <HAL_LTDC_IRQHandler+0x12>
9000ac1a:	0771      	lsls	r1, r6, #29
9000ac1c:	d41d      	bmi.n	9000ac5a <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000ac1e:	07aa      	lsls	r2, r5, #30
9000ac20:	d501      	bpl.n	9000ac26 <HAL_LTDC_IRQHandler+0x1a>
9000ac22:	07b3      	lsls	r3, r6, #30
9000ac24:	d42d      	bmi.n	9000ac82 <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000ac26:	07e8      	lsls	r0, r5, #31
9000ac28:	d501      	bpl.n	9000ac2e <HAL_LTDC_IRQHandler+0x22>
9000ac2a:	07f1      	lsls	r1, r6, #31
9000ac2c:	d440      	bmi.n	9000acb0 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000ac2e:	072a      	lsls	r2, r5, #28
9000ac30:	d501      	bpl.n	9000ac36 <HAL_LTDC_IRQHandler+0x2a>
9000ac32:	0733      	lsls	r3, r6, #28
9000ac34:	d400      	bmi.n	9000ac38 <HAL_LTDC_IRQHandler+0x2c>
}
9000ac36:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000ac38:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000ac3a:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000ac3c:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000ac3e:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000ac40:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ac42:	f022 0208 	bic.w	r2, r2, #8
9000ac46:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000ac48:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000ac4a:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000ac4c:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000ac50:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000ac54:	f7ff ffd8 	bl	9000ac08 <HAL_LTDC_ReloadEventCallback>
}
9000ac58:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000ac5a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ac5c:	f022 0204 	bic.w	r2, r2, #4
9000ac60:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000ac62:	2204      	movs	r2, #4
9000ac64:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000ac66:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000ac6a:	f043 0301 	orr.w	r3, r3, #1
9000ac6e:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000ac72:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000ac74:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000ac78:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000ac7c:	f7ff ffc2 	bl	9000ac04 <HAL_LTDC_ErrorCallback>
9000ac80:	e7cd      	b.n	9000ac1e <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000ac82:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000ac84:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000ac86:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ac88:	f022 0202 	bic.w	r2, r2, #2
9000ac8c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000ac8e:	2202      	movs	r2, #2
9000ac90:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000ac92:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000ac94:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000ac98:	f043 0302 	orr.w	r3, r3, #2
9000ac9c:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000aca0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000aca2:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000aca6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000acaa:	f7ff ffab 	bl	9000ac04 <HAL_LTDC_ErrorCallback>
9000acae:	e7ba      	b.n	9000ac26 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000acb0:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000acb2:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000acb4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000acb6:	f022 0201 	bic.w	r2, r2, #1
9000acba:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000acbc:	2201      	movs	r2, #1
9000acbe:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000acc0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000acc2:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000acc6:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000acca:	f7f8 fcd7 	bl	9000367c <HAL_LTDC_LineEventCallback>
9000acce:	e7ae      	b.n	9000ac2e <HAL_LTDC_IRQHandler+0x22>

9000acd0 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000acd0:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000acd4:	2b01      	cmp	r3, #1
9000acd6:	f000 80c6 	beq.w	9000ae66 <HAL_LTDC_ConfigLayer+0x196>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000acda:	2302      	movs	r3, #2
{
9000acdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ace0:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000ace4:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ace8:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
{
9000acec:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000acee:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000acf2:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000acf4:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000acf8:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000acfa:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000acfe:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000ad00:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000ad04:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ad06:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ad0a:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ad0e:	f8df a164 	ldr.w	sl, [pc, #356]	@ 9000ae74 <HAL_LTDC_ConfigLayer+0x1a4>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ad12:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000ad16:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000ad1a:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ad1c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000ad1e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000ad22:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000ad24:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ad26:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000ad2a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000ad2c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000ad30:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000ad32:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ad34:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ad38:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000ad3a:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ad3c:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000ad40:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000ad44:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ad46:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000ad48:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000ad4c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000ad50:	440b      	add	r3, r1
9000ad52:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000ad56:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ad5a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ad5e:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ad62:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ad66:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ad6a:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ad6c:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000ad70:	68ab      	ldr	r3, [r5, #8]
9000ad72:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000ad76:	3301      	adds	r3, #1
9000ad78:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000ad7c:	4403      	add	r3, r0
9000ad7e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000ad82:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000ad84:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000ad88:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000ad8c:	f023 0307 	bic.w	r3, r3, #7
9000ad90:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000ad94:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000ad98:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000ad9c:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000ad9e:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000ada2:	f895 4031 	ldrb.w	r4, [r5, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000ada6:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000adaa:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000adae:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000adb2:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000adb6:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000adba:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000adbe:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000adc2:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000adc6:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000adca:	696b      	ldr	r3, [r5, #20]
9000adcc:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000add0:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000add4:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000add6:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000adda:	6a28      	ldr	r0, [r5, #32]
9000addc:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000adde:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000ade2:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000ade6:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
9000adea:	2300      	movs	r3, #0
9000adec:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000adf0:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000adf2:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000adf6:	b3a1      	cbz	r1, 9000ae62 <HAL_LTDC_ConfigLayer+0x192>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000adf8:	2901      	cmp	r1, #1
9000adfa:	d036      	beq.n	9000ae6a <HAL_LTDC_ConfigLayer+0x19a>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
9000adfc:	1e8b      	subs	r3, r1, #2
9000adfe:	2907      	cmp	r1, #7
9000ae00:	bf18      	it	ne
9000ae02:	2b02      	cmpne	r3, #2
9000ae04:	bf94      	ite	ls
9000ae06:	2301      	movls	r3, #1
9000ae08:	2300      	movhi	r3, #0
9000ae0a:	3301      	adds	r3, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000ae0c:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000ae0e:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000ae10:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000ae14:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000ae18:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000ae1a:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000ae1c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000ae20:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000ae24:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000ae28:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000ae2c:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000ae30:	4b0f      	ldr	r3, [pc, #60]	@ (9000ae70 <HAL_LTDC_ConfigLayer+0x1a0>)
9000ae32:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
9000ae36:	400b      	ands	r3, r1
9000ae38:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000ae3c:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000ae40:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000ae42:	f859 3006 	ldr.w	r3, [r9, r6]
9000ae46:	4313      	orrs	r3, r2
9000ae48:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000ae4c:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000ae4e:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000ae52:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000ae54:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000ae58:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000ae5c:	b003      	add	sp, #12
9000ae5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 4U;
9000ae62:	2304      	movs	r3, #4
9000ae64:	e7d2      	b.n	9000ae0c <HAL_LTDC_ConfigLayer+0x13c>
  __HAL_LOCK(hltdc);
9000ae66:	2002      	movs	r0, #2
}
9000ae68:	4770      	bx	lr
    tmp = 3U;
9000ae6a:	2303      	movs	r3, #3
9000ae6c:	e7ce      	b.n	9000ae0c <HAL_LTDC_ConfigLayer+0x13c>
9000ae6e:	bf00      	nop
9000ae70:	fffff800 	.word	0xfffff800
9000ae74:	fffff8f8 	.word	0xfffff8f8

9000ae78 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000ae78:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000ae7c:	2a01      	cmp	r2, #1
9000ae7e:	d019      	beq.n	9000aeb4 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ae80:	6802      	ldr	r2, [r0, #0]
9000ae82:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ae84:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000ae86:	f04f 0c00 	mov.w	ip, #0
{
9000ae8a:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ae8c:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ae90:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000ae92:	4c09      	ldr	r4, [pc, #36]	@ (9000aeb8 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ae94:	f020 0001 	bic.w	r0, r0, #1
9000ae98:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000ae9a:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000ae9c:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000ae9e:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000aea0:	4301      	orrs	r1, r0
9000aea2:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000aea4:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000aea8:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000aeaa:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000aeae:	f85d 4b04 	ldr.w	r4, [sp], #4
9000aeb2:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000aeb4:	2002      	movs	r0, #2
}
9000aeb6:	4770      	bx	lr
9000aeb8:	50001000 	.word	0x50001000

9000aebc <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000aebc:	b538      	push	{r3, r4, r5, lr}
9000aebe:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000aec0:	f7fd f836 	bl	90007f30 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000aec4:	2c00      	cmp	r4, #0
9000aec6:	d058      	beq.n	9000af7a <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000aec8:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000aeca:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000aecc:	2100      	movs	r1, #0
9000aece:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000aed0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000aed4:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000aed8:	68da      	ldr	r2, [r3, #12]
9000aeda:	f022 0201 	bic.w	r2, r2, #1
9000aede:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000aee0:	e005      	b.n	9000aeee <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000aee2:	f7fd f825 	bl	90007f30 <HAL_GetTick>
9000aee6:	1b43      	subs	r3, r0, r5
9000aee8:	2b05      	cmp	r3, #5
9000aeea:	d841      	bhi.n	9000af70 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000aeec:	6823      	ldr	r3, [r4, #0]
9000aeee:	68da      	ldr	r2, [r3, #12]
9000aef0:	07d2      	lsls	r2, r2, #31
9000aef2:	d4f6      	bmi.n	9000aee2 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000aef4:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000aef8:	69e0      	ldr	r0, [r4, #28]
9000aefa:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000aefc:	68e1      	ldr	r1, [r4, #12]
9000aefe:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000af00:	4302      	orrs	r2, r0
9000af02:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000af04:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000af06:	4302      	orrs	r2, r0
9000af08:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000af0a:	4302      	orrs	r2, r0
9000af0c:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000af0e:	4302      	orrs	r2, r0
9000af10:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000af12:	4302      	orrs	r2, r0
9000af14:	68a0      	ldr	r0, [r4, #8]
9000af16:	4302      	orrs	r2, r0
9000af18:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000af1a:	3801      	subs	r0, #1
9000af1c:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000af20:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000af22:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000af24:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000af28:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000af2a:	d103      	bne.n	9000af34 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000af2c:	691a      	ldr	r2, [r3, #16]
9000af2e:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000af32:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000af34:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000af36:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000af38:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000af3a:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000af3c:	db1f      	blt.n	9000af7e <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000af3e:	b292      	uxth	r2, r2
9000af40:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000af42:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000af44:	2a00      	cmp	r2, #0
9000af46:	db24      	blt.n	9000af92 <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000af48:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000af4a:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000af4e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000af52:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000af54:	d029      	beq.n	9000afaa <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000af56:	b2c0      	uxtb	r0, r0
9000af58:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000af5a:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000af5c:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000af5e:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000af60:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000af62:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000af64:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000af66:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000af6a:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000af6e:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000af70:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000af72:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000af74:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000af76:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000af7a:	2001      	movs	r0, #1
}
9000af7c:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000af7e:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000af80:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000af82:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000af86:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000af88:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000af8a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000af8c:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000af8e:	2a00      	cmp	r2, #0
9000af90:	dada      	bge.n	9000af48 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000af92:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000af94:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000af96:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000af9a:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000af9e:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000afa0:	6a19      	ldr	r1, [r3, #32]
9000afa2:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000afa6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000afa8:	d1d5      	bne.n	9000af56 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000afaa:	2200      	movs	r2, #0
9000afac:	629a      	str	r2, [r3, #40]	@ 0x28
9000afae:	e7d4      	b.n	9000af5a <HAL_MDMA_Init+0x9e>

9000afb0 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000afb0:	b1f8      	cbz	r0, 9000aff2 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000afb2:	6802      	ldr	r2, [r0, #0]
9000afb4:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000afb6:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000afb8:	68d0      	ldr	r0, [r2, #12]
{
9000afba:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000afbc:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000afc0:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000afc2:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000afc4:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000afc6:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000afc8:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000afca:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000afcc:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000afce:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000afd0:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000afd2:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000afd4:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000afd6:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000afd8:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000afda:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000afdc:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000afde:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000afe2:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000afe6:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000afea:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000afec:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000aff0:	4770      	bx	lr
    return HAL_ERROR;
9000aff2:	2001      	movs	r0, #1
}
9000aff4:	4770      	bx	lr
9000aff6:	bf00      	nop

9000aff8 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000aff8:	b308      	cbz	r0, 9000b03e <HAL_MDMA_ConfigPostRequestMask+0x46>
9000affa:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000affc:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000b000:	2801      	cmp	r0, #1
9000b002:	d01e      	beq.n	9000b042 <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000b004:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000b006:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b00a:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000b00e:	45f4      	cmp	ip, lr
9000b010:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000b014:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b018:	d004      	beq.n	9000b024 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000b01a:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000b01c:	2200      	movs	r2, #0
9000b01e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000b022:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000b024:	681c      	ldr	r4, [r3, #0]
9000b026:	6925      	ldr	r5, [r4, #16]
9000b028:	006d      	lsls	r5, r5, #1
9000b02a:	d4f7      	bmi.n	9000b01c <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000b02c:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000b02e:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b030:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000b032:	b941      	cbnz	r1, 9000b046 <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b034:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000b038:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000b03a:	2000      	movs	r0, #0
9000b03c:	e7ee      	b.n	9000b01c <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000b03e:	2001      	movs	r0, #1
9000b040:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000b042:	2002      	movs	r0, #2
}
9000b044:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b046:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000b04a:	6122      	str	r2, [r4, #16]
9000b04c:	e7f5      	b.n	9000b03a <HAL_MDMA_ConfigPostRequestMask+0x42>
9000b04e:	bf00      	nop

9000b050 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000b050:	2800      	cmp	r0, #0
9000b052:	d06b      	beq.n	9000b12c <HAL_MDMA_Start_IT+0xdc>
{
9000b054:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000b056:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000b05a:	2c01      	cmp	r4, #1
9000b05c:	d009      	beq.n	9000b072 <HAL_MDMA_Start_IT+0x22>
9000b05e:	2401      	movs	r4, #1
9000b060:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b064:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000b068:	2c01      	cmp	r4, #1
9000b06a:	d005      	beq.n	9000b078 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000b06c:	2300      	movs	r3, #0
9000b06e:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000b072:	2002      	movs	r0, #2
}
9000b074:	bc70      	pop	{r4, r5, r6}
9000b076:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b078:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b07a:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b07c:	4d2c      	ldr	r5, [pc, #176]	@ (9000b130 <HAL_MDMA_Start_IT+0xe0>)
9000b07e:	f3c3 0310 	ubfx	r3, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b082:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b086:	2400      	movs	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b088:	f106 3cff 	add.w	ip, r6, #4294967295
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b08c:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b090:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000b092:	6804      	ldr	r4, [r0, #0]
9000b094:	68e6      	ldr	r6, [r4, #12]
9000b096:	f026 0601 	bic.w	r6, r6, #1
9000b09a:	60e6      	str	r6, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b09c:	6966      	ldr	r6, [r4, #20]
9000b09e:	ea05 0506 	and.w	r5, r5, r6
9000b0a2:	ea45 0503 	orr.w	r5, r5, r3
9000b0a6:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b0a8:	6963      	ldr	r3, [r4, #20]
9000b0aa:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000b0ae:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000b0b2:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000b0b4:	f04f 031f 	mov.w	r3, #31
9000b0b8:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000b0ba:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000b0bc:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000b0be:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b0c0:	bf0c      	ite	eq
9000b0c2:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b0c6:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b0ca:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000b0ce:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b0d0:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000b0d2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b0d4:	bf0c      	ite	eq
9000b0d6:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000b0da:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000b0de:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000b0e0:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000b0e2:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000b0e4:	68e3      	ldr	r3, [r4, #12]
9000b0e6:	f043 0306 	orr.w	r3, r3, #6
9000b0ea:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000b0ec:	b11a      	cbz	r2, 9000b0f6 <HAL_MDMA_Start_IT+0xa6>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000b0ee:	68e3      	ldr	r3, [r4, #12]
9000b0f0:	f043 0310 	orr.w	r3, r3, #16
9000b0f4:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b0f6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000b0f8:	b11b      	cbz	r3, 9000b102 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000b0fa:	68e3      	ldr	r3, [r4, #12]
9000b0fc:	f043 0308 	orr.w	r3, r3, #8
9000b100:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000b102:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000b104:	b11b      	cbz	r3, 9000b10e <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000b106:	68e3      	ldr	r3, [r4, #12]
9000b108:	f043 0320 	orr.w	r3, r3, #32
9000b10c:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000b10e:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b110:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000b112:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b116:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000b11a:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b11c:	d103      	bne.n	9000b126 <HAL_MDMA_Start_IT+0xd6>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000b11e:	68e3      	ldr	r3, [r4, #12]
9000b120:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b124:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000b126:	2000      	movs	r0, #0
}
9000b128:	bc70      	pop	{r4, r5, r6}
9000b12a:	4770      	bx	lr
    return HAL_ERROR;
9000b12c:	2001      	movs	r0, #1
}
9000b12e:	4770      	bx	lr
9000b130:	fffe0000 	.word	0xfffe0000

9000b134 <HAL_MDMA_Abort>:
{
9000b134:	b538      	push	{r3, r4, r5, lr}
9000b136:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000b138:	f7fc fefa 	bl	90007f30 <HAL_GetTick>
  if(hmdma == NULL)
9000b13c:	b334      	cbz	r4, 9000b18c <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b13e:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000b142:	2b02      	cmp	r3, #2
9000b144:	d11d      	bne.n	9000b182 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b146:	6822      	ldr	r2, [r4, #0]
9000b148:	4605      	mov	r5, r0
9000b14a:	68d3      	ldr	r3, [r2, #12]
9000b14c:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000b150:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000b152:	68d3      	ldr	r3, [r2, #12]
9000b154:	f023 0301 	bic.w	r3, r3, #1
9000b158:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b15a:	e005      	b.n	9000b168 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b15c:	f7fc fee8 	bl	90007f30 <HAL_GetTick>
9000b160:	1b43      	subs	r3, r0, r5
9000b162:	2b05      	cmp	r3, #5
9000b164:	d814      	bhi.n	9000b190 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b166:	6822      	ldr	r2, [r4, #0]
9000b168:	68d3      	ldr	r3, [r2, #12]
9000b16a:	f013 0301 	ands.w	r3, r3, #1
9000b16e:	d1f5      	bne.n	9000b15c <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b170:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000b172:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b174:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000b176:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000b178:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000b17c:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000b180:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b182:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000b184:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b186:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000b188:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000b18c:	2001      	movs	r0, #1
}
9000b18e:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b190:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000b192:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b194:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b196:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000b19a:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b19e:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b1a0:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000b1a4:	e7f2      	b.n	9000b18c <HAL_MDMA_Abort+0x58>
9000b1a6:	bf00      	nop

9000b1a8 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000b1a8:	4603      	mov	r3, r0
9000b1aa:	b128      	cbz	r0, 9000b1b8 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b1ac:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000b1b0:	2a02      	cmp	r2, #2
9000b1b2:	d003      	beq.n	9000b1bc <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b1b4:	2280      	movs	r2, #128	@ 0x80
9000b1b6:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000b1b8:	2001      	movs	r0, #1
9000b1ba:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000b1bc:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b1be:	2104      	movs	r1, #4
  return HAL_OK;
9000b1c0:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b1c2:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000b1c6:	68d3      	ldr	r3, [r2, #12]
9000b1c8:	f023 0301 	bic.w	r3, r3, #1
9000b1cc:	60d3      	str	r3, [r2, #12]
}
9000b1ce:	4770      	bx	lr

9000b1d0 <HAL_MDMA_IRQHandler>:
{
9000b1d0:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000b1d2:	2300      	movs	r3, #0
{
9000b1d4:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b1d6:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000b1da:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000b1dc:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b1de:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b1e0:	4b57      	ldr	r3, [pc, #348]	@ (9000b340 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b1e2:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b1e4:	4a57      	ldr	r2, [pc, #348]	@ (9000b344 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000b1e6:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b1e8:	6823      	ldr	r3, [r4, #0]
9000b1ea:	441a      	add	r2, r3
9000b1ec:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000b1f0:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b1f4:	4202      	tst	r2, r0
9000b1f6:	f000 80a0 	beq.w	9000b33a <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000b1fa:	681a      	ldr	r2, [r3, #0]
9000b1fc:	07d1      	lsls	r1, r2, #31
9000b1fe:	d529      	bpl.n	9000b254 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000b200:	68da      	ldr	r2, [r3, #12]
9000b202:	0792      	lsls	r2, r2, #30
9000b204:	d526      	bpl.n	9000b254 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000b206:	68da      	ldr	r2, [r3, #12]
9000b208:	f022 0202 	bic.w	r2, r2, #2
9000b20c:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000b20e:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b210:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000b212:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b214:	bf54      	ite	pl
9000b216:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000b21a:	f041 0102 	orrmi.w	r1, r1, #2
9000b21e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000b220:	0591      	lsls	r1, r2, #22
9000b222:	d503      	bpl.n	9000b22c <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000b224:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b226:	f041 0104 	orr.w	r1, r1, #4
9000b22a:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000b22c:	05d0      	lsls	r0, r2, #23
9000b22e:	d503      	bpl.n	9000b238 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000b230:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b232:	f041 0108 	orr.w	r1, r1, #8
9000b236:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000b238:	0551      	lsls	r1, r2, #21
9000b23a:	d503      	bpl.n	9000b244 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000b23c:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b23e:	f041 0110 	orr.w	r1, r1, #16
9000b242:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000b244:	0510      	lsls	r0, r2, #20
9000b246:	d503      	bpl.n	9000b250 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000b248:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000b24a:	f042 0220 	orr.w	r2, r2, #32
9000b24e:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000b250:	2201      	movs	r2, #1
9000b252:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000b254:	681a      	ldr	r2, [r3, #0]
9000b256:	06d1      	lsls	r1, r2, #27
9000b258:	d509      	bpl.n	9000b26e <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000b25a:	68da      	ldr	r2, [r3, #12]
9000b25c:	0692      	lsls	r2, r2, #26
9000b25e:	d506      	bpl.n	9000b26e <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b260:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000b262:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b264:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000b266:	b112      	cbz	r2, 9000b26e <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000b268:	4620      	mov	r0, r4
9000b26a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000b26c:	6823      	ldr	r3, [r4, #0]
9000b26e:	681a      	ldr	r2, [r3, #0]
9000b270:	0710      	lsls	r0, r2, #28
9000b272:	d509      	bpl.n	9000b288 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000b274:	68da      	ldr	r2, [r3, #12]
9000b276:	06d1      	lsls	r1, r2, #27
9000b278:	d506      	bpl.n	9000b288 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b27a:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000b27c:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b27e:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000b280:	b112      	cbz	r2, 9000b288 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000b282:	4620      	mov	r0, r4
9000b284:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000b286:	6823      	ldr	r3, [r4, #0]
9000b288:	681a      	ldr	r2, [r3, #0]
9000b28a:	0752      	lsls	r2, r2, #29
9000b28c:	d509      	bpl.n	9000b2a2 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000b28e:	68da      	ldr	r2, [r3, #12]
9000b290:	0710      	lsls	r0, r2, #28
9000b292:	d506      	bpl.n	9000b2a2 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b294:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b296:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b298:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b29a:	b112      	cbz	r2, 9000b2a2 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000b29c:	4620      	mov	r0, r4
9000b29e:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000b2a0:	6823      	ldr	r3, [r4, #0]
9000b2a2:	681a      	ldr	r2, [r3, #0]
9000b2a4:	0791      	lsls	r1, r2, #30
9000b2a6:	d516      	bpl.n	9000b2d6 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000b2a8:	68da      	ldr	r2, [r3, #12]
9000b2aa:	0752      	lsls	r2, r2, #29
9000b2ac:	d513      	bpl.n	9000b2d6 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b2ae:	68da      	ldr	r2, [r3, #12]
9000b2b0:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000b2b4:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000b2b6:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000b2ba:	2a04      	cmp	r2, #4
9000b2bc:	d034      	beq.n	9000b328 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b2be:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000b2c0:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b2c2:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000b2c4:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000b2c6:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000b2c8:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000b2cc:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000b2d0:	b10b      	cbz	r3, 9000b2d6 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000b2d2:	4620      	mov	r0, r4
9000b2d4:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000b2d6:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000b2d8:	2b00      	cmp	r3, #0
9000b2da:	d02e      	beq.n	9000b33a <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000b2dc:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b2de:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000b2e0:	4b19      	ldr	r3, [pc, #100]	@ (9000b348 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b2e2:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000b2e6:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000b2ea:	68cb      	ldr	r3, [r1, #12]
9000b2ec:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b2f0:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000b2f2:	60cb      	str	r3, [r1, #12]
9000b2f4:	e002      	b.n	9000b2fc <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000b2f6:	68cb      	ldr	r3, [r1, #12]
9000b2f8:	07d8      	lsls	r0, r3, #31
9000b2fa:	d504      	bpl.n	9000b306 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000b2fc:	9b01      	ldr	r3, [sp, #4]
9000b2fe:	3301      	adds	r3, #1
9000b300:	4293      	cmp	r3, r2
9000b302:	9301      	str	r3, [sp, #4]
9000b304:	d9f7      	bls.n	9000b2f6 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000b306:	2300      	movs	r3, #0
9000b308:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b30c:	68cb      	ldr	r3, [r1, #12]
9000b30e:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b310:	bf4c      	ite	mi
9000b312:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000b314:	2301      	movpl	r3, #1
9000b316:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000b31a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000b31c:	b16b      	cbz	r3, 9000b33a <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000b31e:	4620      	mov	r0, r4
}
9000b320:	b003      	add	sp, #12
9000b322:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000b326:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000b328:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000b32a:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000b32c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000b32e:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000b332:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000b336:	2b00      	cmp	r3, #0
9000b338:	d1f1      	bne.n	9000b31e <HAL_MDMA_IRQHandler+0x14e>
}
9000b33a:	b003      	add	sp, #12
9000b33c:	bd30      	pop	{r4, r5, pc}
9000b33e:	bf00      	nop
9000b340:	24000134 	.word	0x24000134
9000b344:	adffffc0 	.word	0xadffffc0
9000b348:	1b4e81b5 	.word	0x1b4e81b5

9000b34c <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
9000b34c:	b570      	push	{r4, r5, r6, lr}
9000b34e:	b082      	sub	sp, #8
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
9000b350:	b1d0      	cbz	r0, 9000b388 <HAL_PCD_Init+0x3c>
  }

  /* Check the parameters */
  assert_param(IS_PCD_ALL_INSTANCE(hpcd->Instance));

  if (hpcd->State == HAL_PCD_STATE_RESET)
9000b352:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
9000b356:	4604      	mov	r4, r0
9000b358:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000b35c:	2b00      	cmp	r3, #0
9000b35e:	f000 81eb 	beq.w	9000b738 <HAL_PCD_Init+0x3ec>
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
9000b362:	2603      	movs	r6, #3

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
9000b364:	6820      	ldr	r0, [r4, #0]

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
9000b366:	1d25      	adds	r5, r4, #4
  hpcd->State = HAL_PCD_STATE_BUSY;
9000b368:	f884 6495 	strb.w	r6, [r4, #1173]	@ 0x495
  __HAL_PCD_DISABLE(hpcd);
9000b36c:	f003 fc62 	bl	9000ec34 <USB_DisableGlobalInt>
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
9000b370:	7c23      	ldrb	r3, [r4, #16]
9000b372:	f88d 3000 	strb.w	r3, [sp]
9000b376:	6820      	ldr	r0, [r4, #0]
9000b378:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9000b37c:	f003 fb4a 	bl	9000ea14 <USB_CoreInit>
9000b380:	b130      	cbz	r0, 9000b390 <HAL_PCD_Init+0x44>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
9000b382:	2302      	movs	r3, #2
9000b384:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
9000b388:	2501      	movs	r5, #1
  }

  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
9000b38a:	4628      	mov	r0, r5
9000b38c:	b002      	add	sp, #8
9000b38e:	bd70      	pop	{r4, r5, r6, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
9000b390:	4601      	mov	r1, r0
9000b392:	6820      	ldr	r0, [r4, #0]
9000b394:	f003 fc56 	bl	9000ec44 <USB_SetCurrentMode>
9000b398:	2800      	cmp	r0, #0
9000b39a:	d1f2      	bne.n	9000b382 <HAL_PCD_Init+0x36>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b39c:	7922      	ldrb	r2, [r4, #4]
9000b39e:	2a00      	cmp	r2, #0
9000b3a0:	f000 81b1 	beq.w	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->IN_ep[i].num = i;
9000b3a4:	f44f 7380 	mov.w	r3, #256	@ 0x100
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3a8:	2a01      	cmp	r2, #1
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3aa:	85e0      	strh	r0, [r4, #46]	@ 0x2e
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b3ac:	7620      	strb	r0, [r4, #24]
    hpcd->IN_ep[i].xfer_len = 0U;
9000b3ae:	6260      	str	r0, [r4, #36]	@ 0x24
    hpcd->IN_ep[i].num = i;
9000b3b0:	82a3      	strh	r3, [r4, #20]
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b3b2:	e9c4 0007 	strd	r0, r0, [r4, #28]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3b6:	f000 81c8 	beq.w	9000b74a <HAL_PCD_Init+0x3fe>
    hpcd->IN_ep[i].num = i;
9000b3ba:	f240 1301 	movw	r3, #257	@ 0x101
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3be:	2a02      	cmp	r2, #2
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b3c0:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hpcd->IN_ep[i].num = i;
9000b3c4:	8723      	strh	r3, [r4, #56]	@ 0x38
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3c6:	f04f 0301 	mov.w	r3, #1
    hpcd->IN_ep[i].xfer_len = 0U;
9000b3ca:	64a0      	str	r0, [r4, #72]	@ 0x48
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3cc:	f8a4 3052 	strh.w	r3, [r4, #82]	@ 0x52
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b3d0:	e9c4 0010 	strd	r0, r0, [r4, #64]	@ 0x40
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3d4:	f000 80e0 	beq.w	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b3d8:	f44f 7381 	mov.w	r3, #258	@ 0x102
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3dc:	2a03      	cmp	r2, #3
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b3de:	f884 0060 	strb.w	r0, [r4, #96]	@ 0x60
    hpcd->IN_ep[i].num = i;
9000b3e2:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3e6:	f04f 0302 	mov.w	r3, #2
    hpcd->IN_ep[i].xfer_len = 0U;
9000b3ea:	66e0      	str	r0, [r4, #108]	@ 0x6c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3ec:	f8a4 3076 	strh.w	r3, [r4, #118]	@ 0x76
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b3f0:	e9c4 0019 	strd	r0, r0, [r4, #100]	@ 0x64
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3f4:	f000 80d0 	beq.w	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b3f8:	f240 1303 	movw	r3, #259	@ 0x103
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3fc:	2a04      	cmp	r2, #4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3fe:	f8a4 609a 	strh.w	r6, [r4, #154]	@ 0x9a
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b402:	f884 0084 	strb.w	r0, [r4, #132]	@ 0x84
    hpcd->IN_ep[i].xfer_len = 0U;
9000b406:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    hpcd->IN_ep[i].num = i;
9000b40a:	f8a4 3080 	strh.w	r3, [r4, #128]	@ 0x80
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b40e:	e9c4 0022 	strd	r0, r0, [r4, #136]	@ 0x88
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b412:	f000 80c1 	beq.w	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b416:	f44f 7382 	mov.w	r3, #260	@ 0x104
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b41a:	2a05      	cmp	r2, #5
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b41c:	f884 00a8 	strb.w	r0, [r4, #168]	@ 0xa8
    hpcd->IN_ep[i].num = i;
9000b420:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b424:	f04f 0304 	mov.w	r3, #4
    hpcd->IN_ep[i].xfer_len = 0U;
9000b428:	f8c4 00b4 	str.w	r0, [r4, #180]	@ 0xb4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b42c:	f8a4 30be 	strh.w	r3, [r4, #190]	@ 0xbe
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b430:	e9c4 002b 	strd	r0, r0, [r4, #172]	@ 0xac
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b434:	f000 80b0 	beq.w	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b438:	f240 1305 	movw	r3, #261	@ 0x105
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b43c:	2a06      	cmp	r2, #6
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b43e:	f884 00cc 	strb.w	r0, [r4, #204]	@ 0xcc
    hpcd->IN_ep[i].num = i;
9000b442:	f8a4 30c8 	strh.w	r3, [r4, #200]	@ 0xc8
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b446:	f04f 0305 	mov.w	r3, #5
    hpcd->IN_ep[i].xfer_len = 0U;
9000b44a:	f8c4 00d8 	str.w	r0, [r4, #216]	@ 0xd8
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b44e:	f8a4 30e2 	strh.w	r3, [r4, #226]	@ 0xe2
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b452:	e9c4 0034 	strd	r0, r0, [r4, #208]	@ 0xd0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b456:	f000 809f 	beq.w	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b45a:	f44f 7383 	mov.w	r3, #262	@ 0x106
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b45e:	2a07      	cmp	r2, #7
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b460:	f884 00f0 	strb.w	r0, [r4, #240]	@ 0xf0
    hpcd->IN_ep[i].num = i;
9000b464:	f8a4 30ec 	strh.w	r3, [r4, #236]	@ 0xec
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b468:	f04f 0306 	mov.w	r3, #6
    hpcd->IN_ep[i].xfer_len = 0U;
9000b46c:	f8c4 00fc 	str.w	r0, [r4, #252]	@ 0xfc
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b470:	f8a4 3106 	strh.w	r3, [r4, #262]	@ 0x106
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b474:	e9c4 003d 	strd	r0, r0, [r4, #244]	@ 0xf4
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b478:	f000 808e 	beq.w	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b47c:	f240 1107 	movw	r1, #263	@ 0x107
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b480:	2300      	movs	r3, #0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b482:	2a08      	cmp	r2, #8
    hpcd->IN_ep[i].num = i;
9000b484:	f8a4 1110 	strh.w	r1, [r4, #272]	@ 0x110
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b488:	f04f 0107 	mov.w	r1, #7
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b48c:	f884 3114 	strb.w	r3, [r4, #276]	@ 0x114
    hpcd->IN_ep[i].xfer_len = 0U;
9000b490:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b494:	f8a4 112a 	strh.w	r1, [r4, #298]	@ 0x12a
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b498:	e9c4 3346 	strd	r3, r3, [r4, #280]	@ 0x118
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b49c:	d07c      	beq.n	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b49e:	f44f 7184 	mov.w	r1, #264	@ 0x108
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4a2:	2a09      	cmp	r2, #9
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b4a4:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
    hpcd->IN_ep[i].num = i;
9000b4a8:	f8a4 1134 	strh.w	r1, [r4, #308]	@ 0x134
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4ac:	f04f 0108 	mov.w	r1, #8
    hpcd->IN_ep[i].xfer_len = 0U;
9000b4b0:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4b4:	f8a4 114e 	strh.w	r1, [r4, #334]	@ 0x14e
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b4b8:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4bc:	d06c      	beq.n	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b4be:	f240 1109 	movw	r1, #265	@ 0x109
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4c2:	2a0a      	cmp	r2, #10
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b4c4:	f884 315c 	strb.w	r3, [r4, #348]	@ 0x15c
    hpcd->IN_ep[i].num = i;
9000b4c8:	f8a4 1158 	strh.w	r1, [r4, #344]	@ 0x158
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4cc:	f04f 0109 	mov.w	r1, #9
    hpcd->IN_ep[i].xfer_len = 0U;
9000b4d0:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4d4:	f8a4 1172 	strh.w	r1, [r4, #370]	@ 0x172
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b4d8:	e9c4 3358 	strd	r3, r3, [r4, #352]	@ 0x160
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4dc:	d05c      	beq.n	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b4de:	f44f 7185 	mov.w	r1, #266	@ 0x10a
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4e2:	2a0b      	cmp	r2, #11
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b4e4:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
    hpcd->IN_ep[i].num = i;
9000b4e8:	f8a4 117c 	strh.w	r1, [r4, #380]	@ 0x17c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4ec:	f04f 010a 	mov.w	r1, #10
    hpcd->IN_ep[i].xfer_len = 0U;
9000b4f0:	f8c4 318c 	str.w	r3, [r4, #396]	@ 0x18c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4f4:	f8a4 1196 	strh.w	r1, [r4, #406]	@ 0x196
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b4f8:	e9c4 3361 	strd	r3, r3, [r4, #388]	@ 0x184
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4fc:	d04c      	beq.n	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b4fe:	f240 110b 	movw	r1, #267	@ 0x10b
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b502:	2a0c      	cmp	r2, #12
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b504:	f884 31a4 	strb.w	r3, [r4, #420]	@ 0x1a4
    hpcd->IN_ep[i].num = i;
9000b508:	f8a4 11a0 	strh.w	r1, [r4, #416]	@ 0x1a0
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b50c:	f04f 010b 	mov.w	r1, #11
    hpcd->IN_ep[i].xfer_len = 0U;
9000b510:	f8c4 31b0 	str.w	r3, [r4, #432]	@ 0x1b0
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b514:	f8a4 11ba 	strh.w	r1, [r4, #442]	@ 0x1ba
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b518:	e9c4 336a 	strd	r3, r3, [r4, #424]	@ 0x1a8
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b51c:	d03c      	beq.n	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b51e:	f44f 7186 	mov.w	r1, #268	@ 0x10c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b522:	2a0d      	cmp	r2, #13
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b524:	f884 31c8 	strb.w	r3, [r4, #456]	@ 0x1c8
    hpcd->IN_ep[i].num = i;
9000b528:	f8a4 11c4 	strh.w	r1, [r4, #452]	@ 0x1c4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b52c:	f04f 010c 	mov.w	r1, #12
    hpcd->IN_ep[i].xfer_len = 0U;
9000b530:	f8c4 31d4 	str.w	r3, [r4, #468]	@ 0x1d4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b534:	f8a4 11de 	strh.w	r1, [r4, #478]	@ 0x1de
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b538:	e9c4 3373 	strd	r3, r3, [r4, #460]	@ 0x1cc
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b53c:	d02c      	beq.n	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b53e:	f240 110d 	movw	r1, #269	@ 0x10d
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b542:	2a0e      	cmp	r2, #14
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b544:	f884 31ec 	strb.w	r3, [r4, #492]	@ 0x1ec
    hpcd->IN_ep[i].num = i;
9000b548:	f8a4 11e8 	strh.w	r1, [r4, #488]	@ 0x1e8
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b54c:	f04f 010d 	mov.w	r1, #13
    hpcd->IN_ep[i].xfer_len = 0U;
9000b550:	f8c4 31f8 	str.w	r3, [r4, #504]	@ 0x1f8
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b554:	f8a4 1202 	strh.w	r1, [r4, #514]	@ 0x202
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b558:	e9c4 337c 	strd	r3, r3, [r4, #496]	@ 0x1f0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b55c:	d01c      	beq.n	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b55e:	f44f 7187 	mov.w	r1, #270	@ 0x10e
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b562:	2a0f      	cmp	r2, #15
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b564:	f884 3210 	strb.w	r3, [r4, #528]	@ 0x210
    hpcd->IN_ep[i].num = i;
9000b568:	f8a4 120c 	strh.w	r1, [r4, #524]	@ 0x20c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b56c:	f04f 010e 	mov.w	r1, #14
    hpcd->IN_ep[i].xfer_len = 0U;
9000b570:	f8c4 321c 	str.w	r3, [r4, #540]	@ 0x21c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b574:	f8a4 1226 	strh.w	r1, [r4, #550]	@ 0x226
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b578:	e9c4 3385 	strd	r3, r3, [r4, #532]	@ 0x214
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b57c:	d00c      	beq.n	9000b598 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b57e:	f240 110f 	movw	r1, #271	@ 0x10f
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b582:	f884 3234 	strb.w	r3, [r4, #564]	@ 0x234
    hpcd->IN_ep[i].xfer_len = 0U;
9000b586:	f8c4 3240 	str.w	r3, [r4, #576]	@ 0x240
    hpcd->IN_ep[i].num = i;
9000b58a:	f8a4 1230 	strh.w	r1, [r4, #560]	@ 0x230
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b58e:	210f      	movs	r1, #15
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b590:	e9c4 338e 	strd	r3, r3, [r4, #568]	@ 0x238
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b594:	f8a4 124a 	strh.w	r1, [r4, #586]	@ 0x24a
    hpcd->OUT_ep[i].num = i;
9000b598:	2300      	movs	r3, #0
9000b59a:	2101      	movs	r1, #1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b59c:	2a02      	cmp	r2, #2
    hpcd->OUT_ep[i].num = i;
9000b59e:	f8a4 3254 	strh.w	r3, [r4, #596]	@ 0x254
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b5a2:	f884 3258 	strb.w	r3, [r4, #600]	@ 0x258
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b5a6:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
    hpcd->OUT_ep[i].num = i;
9000b5aa:	f8a4 1278 	strh.w	r1, [r4, #632]	@ 0x278
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b5ae:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b5b2:	f8c4 3288 	str.w	r3, [r4, #648]	@ 0x288
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b5b6:	e9c4 3397 	strd	r3, r3, [r4, #604]	@ 0x25c
9000b5ba:	e9c4 33a0 	strd	r3, r3, [r4, #640]	@ 0x280
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5be:	f000 80a2 	beq.w	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b5c2:	2102      	movs	r1, #2
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5c4:	2a03      	cmp	r2, #3
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b5c6:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
    hpcd->OUT_ep[i].num = i;
9000b5ca:	f8a4 129c 	strh.w	r1, [r4, #668]	@ 0x29c
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b5ce:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b5d2:	e9c4 33a9 	strd	r3, r3, [r4, #676]	@ 0x2a4
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5d6:	f000 8096 	beq.w	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b5da:	2103      	movs	r1, #3
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5dc:	2a04      	cmp	r2, #4
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b5de:	f884 32c4 	strb.w	r3, [r4, #708]	@ 0x2c4
    hpcd->OUT_ep[i].num = i;
9000b5e2:	f8a4 12c0 	strh.w	r1, [r4, #704]	@ 0x2c0
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b5e6:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b5ea:	e9c4 33b2 	strd	r3, r3, [r4, #712]	@ 0x2c8
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5ee:	f000 808a 	beq.w	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b5f2:	2104      	movs	r1, #4
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5f4:	2a05      	cmp	r2, #5
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b5f6:	f884 32e8 	strb.w	r3, [r4, #744]	@ 0x2e8
    hpcd->OUT_ep[i].num = i;
9000b5fa:	f8a4 12e4 	strh.w	r1, [r4, #740]	@ 0x2e4
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b5fe:	f8c4 32f4 	str.w	r3, [r4, #756]	@ 0x2f4
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b602:	e9c4 33bb 	strd	r3, r3, [r4, #748]	@ 0x2ec
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b606:	d07e      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b608:	2105      	movs	r1, #5
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b60a:	2a06      	cmp	r2, #6
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b60c:	f884 330c 	strb.w	r3, [r4, #780]	@ 0x30c
    hpcd->OUT_ep[i].num = i;
9000b610:	f8a4 1308 	strh.w	r1, [r4, #776]	@ 0x308
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b614:	f8c4 3318 	str.w	r3, [r4, #792]	@ 0x318
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b618:	e9c4 33c4 	strd	r3, r3, [r4, #784]	@ 0x310
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b61c:	d073      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b61e:	2106      	movs	r1, #6
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b620:	2a07      	cmp	r2, #7
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b622:	f884 3330 	strb.w	r3, [r4, #816]	@ 0x330
    hpcd->OUT_ep[i].num = i;
9000b626:	f8a4 132c 	strh.w	r1, [r4, #812]	@ 0x32c
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b62a:	f8c4 333c 	str.w	r3, [r4, #828]	@ 0x33c
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b62e:	e9c4 33cd 	strd	r3, r3, [r4, #820]	@ 0x334
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b632:	d068      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b634:	2107      	movs	r1, #7
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b636:	2a08      	cmp	r2, #8
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b638:	f884 3354 	strb.w	r3, [r4, #852]	@ 0x354
    hpcd->OUT_ep[i].num = i;
9000b63c:	f8a4 1350 	strh.w	r1, [r4, #848]	@ 0x350
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b640:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b644:	e9c4 33d6 	strd	r3, r3, [r4, #856]	@ 0x358
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b648:	d05d      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b64a:	2108      	movs	r1, #8
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b64c:	2a09      	cmp	r2, #9
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b64e:	f884 3378 	strb.w	r3, [r4, #888]	@ 0x378
    hpcd->OUT_ep[i].num = i;
9000b652:	f8a4 1374 	strh.w	r1, [r4, #884]	@ 0x374
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b656:	f8c4 3384 	str.w	r3, [r4, #900]	@ 0x384
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b65a:	e9c4 33df 	strd	r3, r3, [r4, #892]	@ 0x37c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b65e:	d052      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b660:	2109      	movs	r1, #9
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b662:	2a0a      	cmp	r2, #10
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b664:	f884 339c 	strb.w	r3, [r4, #924]	@ 0x39c
    hpcd->OUT_ep[i].num = i;
9000b668:	f8a4 1398 	strh.w	r1, [r4, #920]	@ 0x398
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b66c:	f8c4 33a8 	str.w	r3, [r4, #936]	@ 0x3a8
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b670:	e9c4 33e8 	strd	r3, r3, [r4, #928]	@ 0x3a0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b674:	d047      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b676:	210a      	movs	r1, #10
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b678:	2a0b      	cmp	r2, #11
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b67a:	f884 33c0 	strb.w	r3, [r4, #960]	@ 0x3c0
    hpcd->OUT_ep[i].num = i;
9000b67e:	f8a4 13bc 	strh.w	r1, [r4, #956]	@ 0x3bc
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b682:	f8c4 33cc 	str.w	r3, [r4, #972]	@ 0x3cc
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b686:	e9c4 33f1 	strd	r3, r3, [r4, #964]	@ 0x3c4
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b68a:	d03c      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b68c:	210b      	movs	r1, #11
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b68e:	2a0c      	cmp	r2, #12
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b690:	f884 33e4 	strb.w	r3, [r4, #996]	@ 0x3e4
    hpcd->OUT_ep[i].num = i;
9000b694:	f8a4 13e0 	strh.w	r1, [r4, #992]	@ 0x3e0
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b698:	f8c4 33f0 	str.w	r3, [r4, #1008]	@ 0x3f0
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b69c:	e9c4 33fa 	strd	r3, r3, [r4, #1000]	@ 0x3e8
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6a0:	d031      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b6a2:	210c      	movs	r1, #12
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6a4:	2a0d      	cmp	r2, #13
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b6a6:	f884 3408 	strb.w	r3, [r4, #1032]	@ 0x408
    hpcd->OUT_ep[i].maxpacket = 0U;
9000b6aa:	f8c4 340c 	str.w	r3, [r4, #1036]	@ 0x40c
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b6ae:	f8c4 3410 	str.w	r3, [r4, #1040]	@ 0x410
    hpcd->OUT_ep[i].num = i;
9000b6b2:	f8a4 1404 	strh.w	r1, [r4, #1028]	@ 0x404
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b6b6:	f8c4 3414 	str.w	r3, [r4, #1044]	@ 0x414
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6ba:	d024      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b6bc:	210d      	movs	r1, #13
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6be:	2a0e      	cmp	r2, #14
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b6c0:	f884 342c 	strb.w	r3, [r4, #1068]	@ 0x42c
    hpcd->OUT_ep[i].maxpacket = 0U;
9000b6c4:	f8c4 3430 	str.w	r3, [r4, #1072]	@ 0x430
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b6c8:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
    hpcd->OUT_ep[i].num = i;
9000b6cc:	f8a4 1428 	strh.w	r1, [r4, #1064]	@ 0x428
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b6d0:	f8c4 3438 	str.w	r3, [r4, #1080]	@ 0x438
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6d4:	d017      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b6d6:	210e      	movs	r1, #14
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6d8:	2a0f      	cmp	r2, #15
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b6da:	f884 3450 	strb.w	r3, [r4, #1104]	@ 0x450
    hpcd->OUT_ep[i].maxpacket = 0U;
9000b6de:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b6e2:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
    hpcd->OUT_ep[i].num = i;
9000b6e6:	f8a4 144c 	strh.w	r1, [r4, #1100]	@ 0x44c
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b6ea:	f8c4 345c 	str.w	r3, [r4, #1116]	@ 0x45c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6ee:	d00a      	beq.n	9000b706 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b6f0:	220f      	movs	r2, #15
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b6f2:	f884 3474 	strb.w	r3, [r4, #1140]	@ 0x474
    hpcd->OUT_ep[i].maxpacket = 0U;
9000b6f6:	f8c4 3478 	str.w	r3, [r4, #1144]	@ 0x478
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b6fa:	f8c4 347c 	str.w	r3, [r4, #1148]	@ 0x47c
    hpcd->OUT_ep[i].num = i;
9000b6fe:	f8a4 2470 	strh.w	r2, [r4, #1136]	@ 0x470
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b702:	f8c4 3480 	str.w	r3, [r4, #1152]	@ 0x480
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
9000b706:	7c20      	ldrb	r0, [r4, #16]
9000b708:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9000b70c:	f88d 0000 	strb.w	r0, [sp]
9000b710:	6820      	ldr	r0, [r4, #0]
9000b712:	f003 facd 	bl	9000ecb0 <USB_DevInit>
9000b716:	4605      	mov	r5, r0
9000b718:	2800      	cmp	r0, #0
9000b71a:	f47f ae32 	bne.w	9000b382 <HAL_PCD_Init+0x36>
  hpcd->State = HAL_PCD_STATE_READY;
9000b71e:	2201      	movs	r2, #1
  if (hpcd->Init.lpm_enable == 1U)
9000b720:	7b23      	ldrb	r3, [r4, #12]
  hpcd->USB_Address = 0U;
9000b722:	7460      	strb	r0, [r4, #17]
  if (hpcd->Init.lpm_enable == 1U)
9000b724:	4293      	cmp	r3, r2
  hpcd->State = HAL_PCD_STATE_READY;
9000b726:	f884 2495 	strb.w	r2, [r4, #1173]	@ 0x495
  if (hpcd->Init.lpm_enable == 1U)
9000b72a:	d00a      	beq.n	9000b742 <HAL_PCD_Init+0x3f6>
  (void)USB_DevDisconnect(hpcd->Instance);
9000b72c:	6820      	ldr	r0, [r4, #0]
9000b72e:	f003 ff85 	bl	9000f63c <USB_DevDisconnect>
}
9000b732:	4628      	mov	r0, r5
9000b734:	b002      	add	sp, #8
9000b736:	bd70      	pop	{r4, r5, r6, pc}
    hpcd->Lock = HAL_UNLOCKED;
9000b738:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
    HAL_PCD_MspInit(hpcd);
9000b73c:	f7f8 f978 	bl	90003a30 <HAL_PCD_MspInit>
9000b740:	e60f      	b.n	9000b362 <HAL_PCD_Init+0x16>
    (void)HAL_PCDEx_ActivateLPM(hpcd);
9000b742:	4620      	mov	r0, r4
9000b744:	f000 ffee 	bl	9000c724 <HAL_PCDEx_ActivateLPM>
9000b748:	e7f0      	b.n	9000b72c <HAL_PCD_Init+0x3e0>
    hpcd->OUT_ep[i].num = i;
9000b74a:	f8a4 0254 	strh.w	r0, [r4, #596]	@ 0x254
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b74e:	f884 0258 	strb.w	r0, [r4, #600]	@ 0x258
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b752:	f8c4 0264 	str.w	r0, [r4, #612]	@ 0x264
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b756:	e9c4 0097 	strd	r0, r0, [r4, #604]	@ 0x25c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b75a:	e7d4      	b.n	9000b706 <HAL_PCD_Init+0x3ba>

9000b75c <HAL_PCD_DeInit>:
  * @brief  DeInitializes the PCD peripheral.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_DeInit(PCD_HandleTypeDef *hpcd)
{
9000b75c:	b538      	push	{r3, r4, r5, lr}
  /* Check the PCD handle allocation */
  if (hpcd == NULL)
9000b75e:	b140      	cbz	r0, 9000b772 <HAL_PCD_DeInit+0x16>
  {
    return HAL_ERROR;
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
9000b760:	4604      	mov	r4, r0
9000b762:	2303      	movs	r3, #3

  /* Stop Device */
  if (USB_StopDevice(hpcd->Instance) != HAL_OK)
9000b764:	6800      	ldr	r0, [r0, #0]
  hpcd->State = HAL_PCD_STATE_BUSY;
9000b766:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  if (USB_StopDevice(hpcd->Instance) != HAL_OK)
9000b76a:	f003 febd 	bl	9000f4e8 <USB_StopDevice>
9000b76e:	4605      	mov	r5, r0
9000b770:	b110      	cbz	r0, 9000b778 <HAL_PCD_DeInit+0x1c>
    return HAL_ERROR;
9000b772:	2501      	movs	r5, #1
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  hpcd->State = HAL_PCD_STATE_RESET;

  return HAL_OK;
}
9000b774:	4628      	mov	r0, r5
9000b776:	bd38      	pop	{r3, r4, r5, pc}
  HAL_PCD_MspDeInit(hpcd);
9000b778:	4620      	mov	r0, r4
9000b77a:	f7f8 f9bb 	bl	90003af4 <HAL_PCD_MspDeInit>
}
9000b77e:	4628      	mov	r0, r5
  hpcd->State = HAL_PCD_STATE_RESET;
9000b780:	f884 5495 	strb.w	r5, [r4, #1173]	@ 0x495
}
9000b784:	bd38      	pop	{r3, r4, r5, pc}
9000b786:	bf00      	nop

9000b788 <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
9000b788:	b510      	push	{r4, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;

  __HAL_LOCK(hpcd);
9000b78a:	f890 3494 	ldrb.w	r3, [r0, #1172]	@ 0x494
{
9000b78e:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000b790:	6800      	ldr	r0, [r0, #0]
  __HAL_LOCK(hpcd);
9000b792:	2b01      	cmp	r3, #1
9000b794:	d017      	beq.n	9000b7c6 <HAL_PCD_Start+0x3e>
9000b796:	2301      	movs	r3, #1
9000b798:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
9000b79c:	68c3      	ldr	r3, [r0, #12]
9000b79e:	065b      	lsls	r3, r3, #25
9000b7a0:	d502      	bpl.n	9000b7a8 <HAL_PCD_Start+0x20>
9000b7a2:	7b63      	ldrb	r3, [r4, #13]
9000b7a4:	2b01      	cmp	r3, #1
9000b7a6:	d009      	beq.n	9000b7bc <HAL_PCD_Start+0x34>
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
  }

  __HAL_PCD_ENABLE(hpcd);
9000b7a8:	f003 fa3c 	bl	9000ec24 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
9000b7ac:	6820      	ldr	r0, [r4, #0]
9000b7ae:	f003 ff35 	bl	9000f61c <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
9000b7b2:	2300      	movs	r3, #0

  return HAL_OK;
9000b7b4:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000b7b6:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000b7ba:	bd10      	pop	{r4, pc}
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
9000b7bc:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9000b7be:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b7c2:	6383      	str	r3, [r0, #56]	@ 0x38
9000b7c4:	e7f0      	b.n	9000b7a8 <HAL_PCD_Start+0x20>
  __HAL_LOCK(hpcd);
9000b7c6:	2002      	movs	r0, #2
}
9000b7c8:	bd10      	pop	{r4, pc}
9000b7ca:	bf00      	nop

9000b7cc <HAL_PCD_Stop>:
  * @brief  Stop the USB device.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Stop(PCD_HandleTypeDef *hpcd)
{
9000b7cc:	b538      	push	{r3, r4, r5, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;

  __HAL_LOCK(hpcd);
9000b7ce:	f890 3494 	ldrb.w	r3, [r0, #1172]	@ 0x494
9000b7d2:	2b01      	cmp	r3, #1
9000b7d4:	d019      	beq.n	9000b80a <HAL_PCD_Stop+0x3e>
9000b7d6:	2301      	movs	r3, #1
9000b7d8:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000b7da:	6805      	ldr	r5, [r0, #0]
  __HAL_LOCK(hpcd);
9000b7dc:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  __HAL_PCD_DISABLE(hpcd);
9000b7e0:	4628      	mov	r0, r5
9000b7e2:	f003 fa27 	bl	9000ec34 <USB_DisableGlobalInt>
  (void)USB_DevDisconnect(hpcd->Instance);
9000b7e6:	6820      	ldr	r0, [r4, #0]
9000b7e8:	f003 ff28 	bl	9000f63c <USB_DevDisconnect>

  (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
9000b7ec:	2110      	movs	r1, #16
9000b7ee:	6820      	ldr	r0, [r4, #0]
9000b7f0:	f003 fb94 	bl	9000ef1c <USB_FlushTxFifo>

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
9000b7f4:	68eb      	ldr	r3, [r5, #12]
9000b7f6:	065b      	lsls	r3, r3, #25
9000b7f8:	d502      	bpl.n	9000b800 <HAL_PCD_Stop+0x34>
9000b7fa:	7b63      	ldrb	r3, [r4, #13]
9000b7fc:	2b01      	cmp	r3, #1
9000b7fe:	d006      	beq.n	9000b80e <HAL_PCD_Stop+0x42>
  {
    /* Disable USB Transceiver */
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
  }

  __HAL_UNLOCK(hpcd);
9000b800:	2300      	movs	r3, #0

  return HAL_OK;
9000b802:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000b804:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000b808:	bd38      	pop	{r3, r4, r5, pc}
  __HAL_LOCK(hpcd);
9000b80a:	2002      	movs	r0, #2
}
9000b80c:	bd38      	pop	{r3, r4, r5, pc}
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000b80e:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000b810:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000b814:	63ab      	str	r3, [r5, #56]	@ 0x38
  __HAL_UNLOCK(hpcd);
9000b816:	2300      	movs	r3, #0
  return HAL_OK;
9000b818:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000b81a:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  return HAL_OK;
9000b81e:	e7f3      	b.n	9000b808 <HAL_PCD_Stop+0x3c>

9000b820 <HAL_PCD_IRQHandler>:
  * @brief  Handles PCD interrupt request.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
void HAL_PCD_IRQHandler(PCD_HandleTypeDef *hpcd)
{
9000b820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000b824:	6806      	ldr	r6, [r0, #0]
{
9000b826:	b089      	sub	sp, #36	@ 0x24
9000b828:	4604      	mov	r4, r0
  uint32_t epnum;
  uint32_t fifoemptymsk;
  uint32_t RegVal;

  /* ensure that we are in device mode */
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
9000b82a:	4630      	mov	r0, r6
9000b82c:	f003 ff44 	bl	9000f6b8 <USB_GetMode>
9000b830:	b110      	cbz	r0, 9000b838 <HAL_PCD_IRQHandler+0x18>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
      hpcd->Instance->GOTGINT |= RegVal;
    }
  }
}
9000b832:	b009      	add	sp, #36	@ 0x24
9000b834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
9000b838:	4605      	mov	r5, r0
9000b83a:	6820      	ldr	r0, [r4, #0]
9000b83c:	f003 ff0e 	bl	9000f65c <USB_ReadInterrupts>
9000b840:	2800      	cmp	r0, #0
9000b842:	d0f6      	beq.n	9000b832 <HAL_PCD_IRQHandler+0x12>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
9000b844:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
9000b848:	f506 6200 	add.w	r2, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
9000b84c:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
9000b84e:	f3c3 230d 	ubfx	r3, r3, #8, #14
9000b852:	9203      	str	r2, [sp, #12]
9000b854:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
9000b858:	f003 ff00 	bl	9000f65c <USB_ReadInterrupts>
9000b85c:	f010 0f02 	tst.w	r0, #2
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
9000b860:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
9000b862:	d003      	beq.n	9000b86c <HAL_PCD_IRQHandler+0x4c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
9000b864:	6943      	ldr	r3, [r0, #20]
9000b866:	f003 0302 	and.w	r3, r3, #2
9000b86a:	6143      	str	r3, [r0, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
9000b86c:	f003 fef6 	bl	9000f65c <USB_ReadInterrupts>
9000b870:	f010 0f10 	tst.w	r0, #16
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000b874:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
9000b876:	d012      	beq.n	9000b89e <HAL_PCD_IRQHandler+0x7e>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000b878:	6983      	ldr	r3, [r0, #24]
9000b87a:	f023 0310 	bic.w	r3, r3, #16
9000b87e:	6183      	str	r3, [r0, #24]
      RegVal = USBx->GRXSTSP;
9000b880:	6a37      	ldr	r7, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
9000b882:	f3c7 4343 	ubfx	r3, r7, #17, #4
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
9000b886:	f007 080f 	and.w	r8, r7, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
9000b88a:	2b02      	cmp	r3, #2
9000b88c:	f000 83dc 	beq.w	9000c048 <HAL_PCD_IRQHandler+0x828>
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
9000b890:	2b06      	cmp	r3, #6
9000b892:	f000 8379 	beq.w	9000bf88 <HAL_PCD_IRQHandler+0x768>
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000b896:	6983      	ldr	r3, [r0, #24]
9000b898:	f043 0310 	orr.w	r3, r3, #16
9000b89c:	6183      	str	r3, [r0, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
9000b89e:	f003 fedd 	bl	9000f65c <USB_ReadInterrupts>
9000b8a2:	f410 2f00 	tst.w	r0, #524288	@ 0x80000
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
9000b8a6:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
9000b8a8:	f040 82d1 	bne.w	9000be4e <HAL_PCD_IRQHandler+0x62e>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
9000b8ac:	f003 fed6 	bl	9000f65c <USB_ReadInterrupts>
9000b8b0:	0347      	lsls	r7, r0, #13
9000b8b2:	f100 8228 	bmi.w	9000bd06 <HAL_PCD_IRQHandler+0x4e6>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
9000b8b6:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
9000b8b8:	f003 fed0 	bl	9000f65c <USB_ReadInterrupts>
9000b8bc:	2800      	cmp	r0, #0
9000b8be:	f2c0 819a 	blt.w	9000bbf6 <HAL_PCD_IRQHandler+0x3d6>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
9000b8c2:	6820      	ldr	r0, [r4, #0]
9000b8c4:	f003 feca 	bl	9000f65c <USB_ReadInterrupts>
9000b8c8:	0502      	lsls	r2, r0, #20
9000b8ca:	f100 8157 	bmi.w	9000bb7c <HAL_PCD_IRQHandler+0x35c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
9000b8ce:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT))
9000b8d0:	f003 fec4 	bl	9000f65c <USB_ReadInterrupts>
9000b8d4:	0107      	lsls	r7, r0, #4
9000b8d6:	d514      	bpl.n	9000b902 <HAL_PCD_IRQHandler+0xe2>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT);
9000b8d8:	6822      	ldr	r2, [r4, #0]
9000b8da:	6953      	ldr	r3, [r2, #20]
9000b8dc:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
9000b8e0:	6153      	str	r3, [r2, #20]
      if (hpcd->LPM_State == LPM_L0)
9000b8e2:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
9000b8e6:	2b00      	cmp	r3, #0
9000b8e8:	f040 8301 	bne.w	9000beee <HAL_PCD_IRQHandler+0x6ce>
        hpcd->LPM_State = LPM_L1;
9000b8ec:	2101      	movs	r1, #1
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
9000b8ee:	4620      	mov	r0, r4
        hpcd->LPM_State = LPM_L1;
9000b8f0:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        hpcd->BESL = (hpcd->Instance->GLPMCFG & USB_OTG_GLPMCFG_BESL) >> 2U;
9000b8f4:	6d53      	ldr	r3, [r2, #84]	@ 0x54
9000b8f6:	f3c3 0383 	ubfx	r3, r3, #2, #4
9000b8fa:	f8c4 34d0 	str.w	r3, [r4, #1232]	@ 0x4d0
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
9000b8fe:	f000 ff29 	bl	9000c754 <HAL_PCDEx_LPM_Callback>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
9000b902:	6820      	ldr	r0, [r4, #0]
9000b904:	f003 feaa 	bl	9000f65c <USB_ReadInterrupts>
9000b908:	04c0      	lsls	r0, r0, #19
9000b90a:	f100 819e 	bmi.w	9000bc4a <HAL_PCD_IRQHandler+0x42a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
9000b90e:	6820      	ldr	r0, [r4, #0]
9000b910:	f003 fea4 	bl	9000f65c <USB_ReadInterrupts>
9000b914:	f410 5f00 	tst.w	r0, #8192	@ 0x2000
      (void)USB_ActivateSetup(hpcd->Instance);
9000b918:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
9000b91a:	f040 817f 	bne.w	9000bc1c <HAL_PCD_IRQHandler+0x3fc>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
9000b91e:	f003 fe9d 	bl	9000f65c <USB_ReadInterrupts>
9000b922:	0701      	lsls	r1, r0, #28
9000b924:	f100 81e6 	bmi.w	9000bcf4 <HAL_PCD_IRQHandler+0x4d4>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
9000b928:	6820      	ldr	r0, [r4, #0]
9000b92a:	f003 fe97 	bl	9000f65c <USB_ReadInterrupts>
9000b92e:	0602      	lsls	r2, r0, #24
9000b930:	d571      	bpl.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
9000b932:	69b3      	ldr	r3, [r6, #24]
9000b934:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000b938:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b93a:	7923      	ldrb	r3, [r4, #4]
9000b93c:	2b01      	cmp	r3, #1
9000b93e:	d96a      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b940:	f894 227b 	ldrb.w	r2, [r4, #635]	@ 0x27b
9000b944:	2a01      	cmp	r2, #1
9000b946:	f000 83ed 	beq.w	9000c124 <HAL_PCD_IRQHandler+0x904>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b94a:	2b02      	cmp	r3, #2
9000b94c:	d963      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b94e:	f894 229f 	ldrb.w	r2, [r4, #671]	@ 0x29f
9000b952:	2a01      	cmp	r2, #1
9000b954:	f000 8401 	beq.w	9000c15a <HAL_PCD_IRQHandler+0x93a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b958:	2b03      	cmp	r3, #3
9000b95a:	d95c      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b95c:	f894 22c3 	ldrb.w	r2, [r4, #707]	@ 0x2c3
9000b960:	2a01      	cmp	r2, #1
9000b962:	f000 830a 	beq.w	9000bf7a <HAL_PCD_IRQHandler+0x75a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b966:	2b04      	cmp	r3, #4
9000b968:	d955      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b96a:	f894 22e7 	ldrb.w	r2, [r4, #743]	@ 0x2e7
9000b96e:	2a01      	cmp	r2, #1
9000b970:	f000 831d 	beq.w	9000bfae <HAL_PCD_IRQHandler+0x78e>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b974:	2b05      	cmp	r3, #5
9000b976:	d94e      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b978:	f894 230b 	ldrb.w	r2, [r4, #779]	@ 0x30b
9000b97c:	2a01      	cmp	r2, #1
9000b97e:	f000 842c 	beq.w	9000c1da <HAL_PCD_IRQHandler+0x9ba>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b982:	2b06      	cmp	r3, #6
9000b984:	d947      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b986:	f894 232f 	ldrb.w	r2, [r4, #815]	@ 0x32f
9000b98a:	2a01      	cmp	r2, #1
9000b98c:	f000 8439 	beq.w	9000c202 <HAL_PCD_IRQHandler+0x9e2>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b990:	2b07      	cmp	r3, #7
9000b992:	d940      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b994:	f894 2353 	ldrb.w	r2, [r4, #851]	@ 0x353
9000b998:	2a01      	cmp	r2, #1
9000b99a:	f000 844b 	beq.w	9000c234 <HAL_PCD_IRQHandler+0xa14>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b99e:	2b08      	cmp	r3, #8
9000b9a0:	d939      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9a2:	f894 2377 	ldrb.w	r2, [r4, #887]	@ 0x377
9000b9a6:	2a01      	cmp	r2, #1
9000b9a8:	f000 8458 	beq.w	9000c25c <HAL_PCD_IRQHandler+0xa3c>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9ac:	2b09      	cmp	r3, #9
9000b9ae:	d932      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9b0:	f894 239b 	ldrb.w	r2, [r4, #923]	@ 0x39b
9000b9b4:	2a01      	cmp	r2, #1
9000b9b6:	f000 8465 	beq.w	9000c284 <HAL_PCD_IRQHandler+0xa64>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9ba:	2b0a      	cmp	r3, #10
9000b9bc:	d92b      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9be:	f894 23bf 	ldrb.w	r2, [r4, #959]	@ 0x3bf
9000b9c2:	2a01      	cmp	r2, #1
9000b9c4:	f000 8472 	beq.w	9000c2ac <HAL_PCD_IRQHandler+0xa8c>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9c8:	2b0b      	cmp	r3, #11
9000b9ca:	d924      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9cc:	f894 23e3 	ldrb.w	r2, [r4, #995]	@ 0x3e3
9000b9d0:	2a01      	cmp	r2, #1
9000b9d2:	f000 847f 	beq.w	9000c2d4 <HAL_PCD_IRQHandler+0xab4>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9d6:	2b0c      	cmp	r3, #12
9000b9d8:	d91d      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9da:	f894 2407 	ldrb.w	r2, [r4, #1031]	@ 0x407
9000b9de:	2a01      	cmp	r2, #1
9000b9e0:	f000 8484 	beq.w	9000c2ec <HAL_PCD_IRQHandler+0xacc>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9e4:	2b0d      	cmp	r3, #13
9000b9e6:	d916      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9e8:	f894 242b 	ldrb.w	r2, [r4, #1067]	@ 0x42b
9000b9ec:	2a01      	cmp	r2, #1
9000b9ee:	f000 84a4 	beq.w	9000c33a <HAL_PCD_IRQHandler+0xb1a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9f2:	2b0e      	cmp	r3, #14
9000b9f4:	d90f      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9f6:	f894 244f 	ldrb.w	r2, [r4, #1103]	@ 0x44f
9000b9fa:	2a01      	cmp	r2, #1
9000b9fc:	f000 84ab 	beq.w	9000c356 <HAL_PCD_IRQHandler+0xb36>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba00:	2b0f      	cmp	r3, #15
9000ba02:	d908      	bls.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000ba04:	f894 3473 	ldrb.w	r3, [r4, #1139]	@ 0x473
9000ba08:	2b01      	cmp	r3, #1
9000ba0a:	d104      	bne.n	9000ba16 <HAL_PCD_IRQHandler+0x1f6>
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000ba0c:	f504 618e 	add.w	r1, r4, #1136	@ 0x470
9000ba10:	6820      	ldr	r0, [r4, #0]
9000ba12:	f003 fc81 	bl	9000f318 <USB_EPStopXfer>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
9000ba16:	6820      	ldr	r0, [r4, #0]
9000ba18:	f003 fe20 	bl	9000f65c <USB_ReadInterrupts>
9000ba1c:	02c3      	lsls	r3, r0, #11
9000ba1e:	f140 80ab 	bpl.w	9000bb78 <HAL_PCD_IRQHandler+0x358>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba22:	7923      	ldrb	r3, [r4, #4]
9000ba24:	2b01      	cmp	r3, #1
9000ba26:	f240 8089 	bls.w	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba2a:	f894 203c 	ldrb.w	r2, [r4, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba2e:	f8d6 1920 	ldr.w	r1, [r6, #2336]	@ 0x920
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba32:	2a01      	cmp	r2, #1
9000ba34:	f000 826a 	beq.w	9000bf0c <HAL_PCD_IRQHandler+0x6ec>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba38:	2b02      	cmp	r3, #2
9000ba3a:	d97f      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba3c:	f894 2060 	ldrb.w	r2, [r4, #96]	@ 0x60
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba40:	f8d6 1940 	ldr.w	r1, [r6, #2368]	@ 0x940
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba44:	2a01      	cmp	r2, #1
9000ba46:	f000 8274 	beq.w	9000bf32 <HAL_PCD_IRQHandler+0x712>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba4a:	2b03      	cmp	r3, #3
9000ba4c:	d976      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba4e:	f894 2084 	ldrb.w	r2, [r4, #132]	@ 0x84
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba52:	f8d6 1960 	ldr.w	r1, [r6, #2400]	@ 0x960
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba56:	2a01      	cmp	r2, #1
9000ba58:	f000 8277 	beq.w	9000bf4a <HAL_PCD_IRQHandler+0x72a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba5c:	2b04      	cmp	r3, #4
9000ba5e:	d96d      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba60:	f894 20a8 	ldrb.w	r2, [r4, #168]	@ 0xa8
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba64:	f8d6 1980 	ldr.w	r1, [r6, #2432]	@ 0x980
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba68:	2a01      	cmp	r2, #1
9000ba6a:	f000 827a 	beq.w	9000bf62 <HAL_PCD_IRQHandler+0x742>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba6e:	2b05      	cmp	r3, #5
9000ba70:	d964      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba72:	f894 20cc 	ldrb.w	r2, [r4, #204]	@ 0xcc
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba76:	f8d6 19a0 	ldr.w	r1, [r6, #2464]	@ 0x9a0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba7a:	2a01      	cmp	r2, #1
9000ba7c:	f000 8346 	beq.w	9000c10c <HAL_PCD_IRQHandler+0x8ec>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba80:	2b06      	cmp	r3, #6
9000ba82:	d95b      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba84:	f894 20f0 	ldrb.w	r2, [r4, #240]	@ 0xf0
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba88:	f8d6 19c0 	ldr.w	r1, [r6, #2496]	@ 0x9c0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba8c:	2a01      	cmp	r2, #1
9000ba8e:	f000 8358 	beq.w	9000c142 <HAL_PCD_IRQHandler+0x922>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba92:	2b07      	cmp	r3, #7
9000ba94:	d952      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba96:	f894 2114 	ldrb.w	r2, [r4, #276]	@ 0x114
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba9a:	f8d6 19e0 	ldr.w	r1, [r6, #2528]	@ 0x9e0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba9e:	2a01      	cmp	r2, #1
9000baa0:	f000 8363 	beq.w	9000c16a <HAL_PCD_IRQHandler+0x94a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000baa4:	2b08      	cmp	r3, #8
9000baa6:	d949      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000baa8:	f894 2138 	ldrb.w	r2, [r4, #312]	@ 0x138
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000baac:	f8d6 1a00 	ldr.w	r1, [r6, #2560]	@ 0xa00
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bab0:	2a01      	cmp	r2, #1
9000bab2:	f000 836a 	beq.w	9000c18a <HAL_PCD_IRQHandler+0x96a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bab6:	2b09      	cmp	r3, #9
9000bab8:	d940      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000baba:	f894 215c 	ldrb.w	r2, [r4, #348]	@ 0x15c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000babe:	f8d6 1a20 	ldr.w	r1, [r6, #2592]	@ 0xa20
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bac2:	2a01      	cmp	r2, #1
9000bac4:	f000 8375 	beq.w	9000c1b2 <HAL_PCD_IRQHandler+0x992>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bac8:	2b0a      	cmp	r3, #10
9000baca:	d937      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bacc:	f894 2180 	ldrb.w	r2, [r4, #384]	@ 0x180
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bad0:	f8d6 1a40 	ldr.w	r1, [r6, #2624]	@ 0xa40
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bad4:	2a01      	cmp	r2, #1
9000bad6:	f000 8388 	beq.w	9000c1ea <HAL_PCD_IRQHandler+0x9ca>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bada:	2b0b      	cmp	r3, #11
9000badc:	d92e      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bade:	f894 21a4 	ldrb.w	r2, [r4, #420]	@ 0x1a4
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bae2:	f8d6 1a60 	ldr.w	r1, [r6, #2656]	@ 0xa60
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bae6:	2a01      	cmp	r2, #1
9000bae8:	f000 8398 	beq.w	9000c21c <HAL_PCD_IRQHandler+0x9fc>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000baec:	2b0c      	cmp	r3, #12
9000baee:	d925      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000baf0:	f894 21c8 	ldrb.w	r2, [r4, #456]	@ 0x1c8
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000baf4:	f8d6 1a80 	ldr.w	r1, [r6, #2688]	@ 0xa80
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000baf8:	2a01      	cmp	r2, #1
9000bafa:	f000 83a3 	beq.w	9000c244 <HAL_PCD_IRQHandler+0xa24>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bafe:	2b0d      	cmp	r3, #13
9000bb00:	d91c      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bb02:	f894 21ec 	ldrb.w	r2, [r4, #492]	@ 0x1ec
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bb06:	f8d6 1aa0 	ldr.w	r1, [r6, #2720]	@ 0xaa0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bb0a:	2a01      	cmp	r2, #1
9000bb0c:	f000 83ae 	beq.w	9000c26c <HAL_PCD_IRQHandler+0xa4c>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bb10:	2b0e      	cmp	r3, #14
9000bb12:	d913      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bb14:	f894 2210 	ldrb.w	r2, [r4, #528]	@ 0x210
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bb18:	f8d6 1ac0 	ldr.w	r1, [r6, #2752]	@ 0xac0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bb1c:	2a01      	cmp	r2, #1
9000bb1e:	f000 83b9 	beq.w	9000c294 <HAL_PCD_IRQHandler+0xa74>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bb22:	2b0f      	cmp	r3, #15
9000bb24:	d90a      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bb26:	f894 2234 	ldrb.w	r2, [r4, #564]	@ 0x234
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bb2a:	f8d6 1ae0 	ldr.w	r1, [r6, #2784]	@ 0xae0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bb2e:	2a01      	cmp	r2, #1
9000bb30:	f000 83c4 	beq.w	9000c2bc <HAL_PCD_IRQHandler+0xa9c>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bb34:	2b10      	cmp	r3, #16
9000bb36:	d901      	bls.n	9000bb3c <HAL_PCD_IRQHandler+0x31c>
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bb38:	f8d6 3b00 	ldr.w	r3, [r6, #2816]	@ 0xb00
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
9000bb3c:	6820      	ldr	r0, [r4, #0]
9000bb3e:	6943      	ldr	r3, [r0, #20]
9000bb40:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
9000bb44:	6143      	str	r3, [r0, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
9000bb46:	f003 fd89 	bl	9000f65c <USB_ReadInterrupts>
9000bb4a:	0287      	lsls	r7, r0, #10
9000bb4c:	d421      	bmi.n	9000bb92 <HAL_PCD_IRQHandler+0x372>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
9000bb4e:	6820      	ldr	r0, [r4, #0]
9000bb50:	f003 fd84 	bl	9000f65c <USB_ReadInterrupts>
9000bb54:	0040      	lsls	r0, r0, #1
9000bb56:	f100 80c4 	bmi.w	9000bce2 <HAL_PCD_IRQHandler+0x4c2>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
9000bb5a:	6820      	ldr	r0, [r4, #0]
9000bb5c:	f003 fd7e 	bl	9000f65c <USB_ReadInterrupts>
9000bb60:	0741      	lsls	r1, r0, #29
9000bb62:	f57f ae66 	bpl.w	9000b832 <HAL_PCD_IRQHandler+0x12>
      RegVal = hpcd->Instance->GOTGINT;
9000bb66:	6823      	ldr	r3, [r4, #0]
9000bb68:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
9000bb6a:	076a      	lsls	r2, r5, #29
9000bb6c:	f100 828d 	bmi.w	9000c08a <HAL_PCD_IRQHandler+0x86a>
      hpcd->Instance->GOTGINT |= RegVal;
9000bb70:	685a      	ldr	r2, [r3, #4]
9000bb72:	432a      	orrs	r2, r5
9000bb74:	605a      	str	r2, [r3, #4]
9000bb76:	e65c      	b.n	9000b832 <HAL_PCD_IRQHandler+0x12>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
9000bb78:	6820      	ldr	r0, [r4, #0]
9000bb7a:	e7e4      	b.n	9000bb46 <HAL_PCD_IRQHandler+0x326>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
9000bb7c:	9b03      	ldr	r3, [sp, #12]
9000bb7e:	689b      	ldr	r3, [r3, #8]
9000bb80:	07db      	lsls	r3, r3, #31
9000bb82:	f100 827e 	bmi.w	9000c082 <HAL_PCD_IRQHandler+0x862>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
9000bb86:	6820      	ldr	r0, [r4, #0]
9000bb88:	6943      	ldr	r3, [r0, #20]
9000bb8a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
9000bb8e:	6143      	str	r3, [r0, #20]
9000bb90:	e69e      	b.n	9000b8d0 <HAL_PCD_IRQHandler+0xb0>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bb92:	f894 c004 	ldrb.w	ip, [r4, #4]
9000bb96:	f1bc 0f01 	cmp.w	ip, #1
9000bb9a:	d926      	bls.n	9000bbea <HAL_PCD_IRQHandler+0x3ca>
9000bb9c:	f506 6232 	add.w	r2, r6, #2848	@ 0xb20
9000bba0:	4623      	mov	r3, r4
9000bba2:	2101      	movs	r1, #1
9000bba4:	e004      	b.n	9000bbb0 <HAL_PCD_IRQHandler+0x390>
9000bba6:	3101      	adds	r1, #1
9000bba8:	3220      	adds	r2, #32
9000bbaa:	3324      	adds	r3, #36	@ 0x24
9000bbac:	4561      	cmp	r1, ip
9000bbae:	d01c      	beq.n	9000bbea <HAL_PCD_IRQHandler+0x3ca>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
9000bbb0:	f893 027c 	ldrb.w	r0, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
9000bbb4:	6815      	ldr	r5, [r2, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
9000bbb6:	2801      	cmp	r0, #1
9000bbb8:	d1f5      	bne.n	9000bba6 <HAL_PCD_IRQHandler+0x386>
9000bbba:	2d00      	cmp	r5, #0
9000bbbc:	daf3      	bge.n	9000bba6 <HAL_PCD_IRQHandler+0x386>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
9000bbbe:	f8d4 74d4 	ldr.w	r7, [r4, #1236]	@ 0x4d4
9000bbc2:	f405 3580 	and.w	r5, r5, #65536	@ 0x10000
9000bbc6:	f007 0701 	and.w	r7, r7, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
9000bbca:	42bd      	cmp	r5, r7
9000bbcc:	d1eb      	bne.n	9000bba6 <HAL_PCD_IRQHandler+0x386>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
9000bbce:	f883 027b 	strb.w	r0, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
9000bbd2:	69b0      	ldr	r0, [r6, #24]
9000bbd4:	f040 0080 	orr.w	r0, r0, #128	@ 0x80
9000bbd8:	61b0      	str	r0, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
9000bbda:	6970      	ldr	r0, [r6, #20]
9000bbdc:	0605      	lsls	r5, r0, #24
9000bbde:	d4e2      	bmi.n	9000bba6 <HAL_PCD_IRQHandler+0x386>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
9000bbe0:	9a03      	ldr	r2, [sp, #12]
9000bbe2:	6853      	ldr	r3, [r2, #4]
9000bbe4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
9000bbe8:	6053      	str	r3, [r2, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
9000bbea:	6820      	ldr	r0, [r4, #0]
9000bbec:	6943      	ldr	r3, [r0, #20]
9000bbee:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
9000bbf2:	6143      	str	r3, [r0, #20]
9000bbf4:	e7ac      	b.n	9000bb50 <HAL_PCD_IRQHandler+0x330>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
9000bbf6:	9a03      	ldr	r2, [sp, #12]
9000bbf8:	6853      	ldr	r3, [r2, #4]
9000bbfa:	f023 0301 	bic.w	r3, r3, #1
9000bbfe:	6053      	str	r3, [r2, #4]
      if (hpcd->LPM_State == LPM_L1)
9000bc00:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
9000bc04:	2b01      	cmp	r3, #1
9000bc06:	f000 818d 	beq.w	9000bf24 <HAL_PCD_IRQHandler+0x704>
        HAL_PCD_ResumeCallback(hpcd);
9000bc0a:	4620      	mov	r0, r4
9000bc0c:	f7f7 ffdc 	bl	90003bc8 <HAL_PCD_ResumeCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
9000bc10:	6820      	ldr	r0, [r4, #0]
9000bc12:	6943      	ldr	r3, [r0, #20]
9000bc14:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
9000bc18:	6143      	str	r3, [r0, #20]
9000bc1a:	e653      	b.n	9000b8c4 <HAL_PCD_IRQHandler+0xa4>
      (void)USB_ActivateSetup(hpcd->Instance);
9000bc1c:	f003 fd50 	bl	9000f6c0 <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
9000bc20:	6820      	ldr	r0, [r4, #0]
9000bc22:	f003 f9a3 	bl	9000ef6c <USB_GetDevSpeed>
      (void)USB_SetTurnaroundTime(hpcd->Instance,
9000bc26:	6825      	ldr	r5, [r4, #0]
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
9000bc28:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
9000bc2a:	f001 fae5 	bl	9000d1f8 <HAL_RCC_GetHCLKFreq>
9000bc2e:	79e2      	ldrb	r2, [r4, #7]
9000bc30:	4601      	mov	r1, r0
9000bc32:	4628      	mov	r0, r5
9000bc34:	f002 ff7c 	bl	9000eb30 <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
9000bc38:	4620      	mov	r0, r4
9000bc3a:	f7f7 ff97 	bl	90003b6c <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
9000bc3e:	6820      	ldr	r0, [r4, #0]
9000bc40:	6943      	ldr	r3, [r0, #20]
9000bc42:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
9000bc46:	6143      	str	r3, [r0, #20]
9000bc48:	e669      	b.n	9000b91e <HAL_PCD_IRQHandler+0xfe>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
9000bc4a:	9a03      	ldr	r2, [sp, #12]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
9000bc4c:	2110      	movs	r1, #16
9000bc4e:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
9000bc50:	6853      	ldr	r3, [r2, #4]
9000bc52:	f023 0301 	bic.w	r3, r3, #1
9000bc56:	6053      	str	r3, [r2, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
9000bc58:	f003 f960 	bl	9000ef1c <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000bc5c:	7920      	ldrb	r0, [r4, #4]
9000bc5e:	b1d8      	cbz	r0, 9000bc98 <HAL_PCD_IRQHandler+0x478>
9000bc60:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000bc64:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
9000bc68:	6099      	str	r1, [r3, #8]
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000bc6a:	3501      	adds	r5, #1
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000bc6c:	681a      	ldr	r2, [r3, #0]
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000bc6e:	3320      	adds	r3, #32
9000bc70:	4285      	cmp	r5, r0
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000bc72:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
9000bc76:	f843 2c20 	str.w	r2, [r3, #-32]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000bc7a:	f8c3 11e8 	str.w	r1, [r3, #488]	@ 0x1e8
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
9000bc7e:	f8d3 21e0 	ldr.w	r2, [r3, #480]	@ 0x1e0
9000bc82:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
9000bc86:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
9000bc8a:	f8d3 21e0 	ldr.w	r2, [r3, #480]	@ 0x1e0
9000bc8e:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
9000bc92:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000bc96:	d1e7      	bne.n	9000bc68 <HAL_PCD_IRQHandler+0x448>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
9000bc98:	9a03      	ldr	r2, [sp, #12]
9000bc9a:	69d3      	ldr	r3, [r2, #28]
9000bc9c:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
9000bca0:	61d3      	str	r3, [r2, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
9000bca2:	7be3      	ldrb	r3, [r4, #15]
9000bca4:	2b00      	cmp	r3, #0
9000bca6:	f000 8126 	beq.w	9000bef6 <HAL_PCD_IRQHandler+0x6d6>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
9000bcaa:	f8d2 3084 	ldr.w	r3, [r2, #132]	@ 0x84
9000bcae:	f043 030b 	orr.w	r3, r3, #11
9000bcb2:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
9000bcb6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
9000bcb8:	f043 030b 	orr.w	r3, r3, #11
9000bcbc:	6453      	str	r3, [r2, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
9000bcbe:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
9000bcc2:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
9000bcc6:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
9000bcc8:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
9000bccc:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
9000bcd0:	79a1      	ldrb	r1, [r4, #6]
9000bcd2:	f003 fd0b 	bl	9000f6ec <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
9000bcd6:	6820      	ldr	r0, [r4, #0]
9000bcd8:	6943      	ldr	r3, [r0, #20]
9000bcda:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
9000bcde:	6143      	str	r3, [r0, #20]
9000bce0:	e616      	b.n	9000b910 <HAL_PCD_IRQHandler+0xf0>
      HAL_PCD_ConnectCallback(hpcd);
9000bce2:	4620      	mov	r0, r4
9000bce4:	f7f7 ff7c 	bl	90003be0 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
9000bce8:	6820      	ldr	r0, [r4, #0]
9000bcea:	6943      	ldr	r3, [r0, #20]
9000bcec:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
9000bcf0:	6143      	str	r3, [r0, #20]
9000bcf2:	e733      	b.n	9000bb5c <HAL_PCD_IRQHandler+0x33c>
      HAL_PCD_SOFCallback(hpcd);
9000bcf4:	4620      	mov	r0, r4
9000bcf6:	f7f7 ff35 	bl	90003b64 <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
9000bcfa:	6820      	ldr	r0, [r4, #0]
9000bcfc:	6943      	ldr	r3, [r0, #20]
9000bcfe:	f003 0308 	and.w	r3, r3, #8
9000bd02:	6143      	str	r3, [r0, #20]
9000bd04:	e611      	b.n	9000b92a <HAL_PCD_IRQHandler+0x10a>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
9000bd06:	6820      	ldr	r0, [r4, #0]
9000bd08:	f003 fcb4 	bl	9000f674 <USB_ReadDevAllInEpInterrupt>
      while (ep_intr != 0U)
9000bd0c:	4681      	mov	r9, r0
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
9000bd0e:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
9000bd10:	f1b9 0f00 	cmp.w	r9, #0
9000bd14:	f43f add0 	beq.w	9000b8b8 <HAL_PCD_IRQHandler+0x98>
9000bd18:	f506 6710 	add.w	r7, r6, #2304	@ 0x900
9000bd1c:	46a0      	mov	r8, r4
      epnum = 0U;
9000bd1e:	f04f 0a00 	mov.w	sl, #0
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
9000bd22:	46bb      	mov	fp, r7
9000bd24:	e9cd 6504 	strd	r6, r5, [sp, #16]
9000bd28:	4605      	mov	r5, r0
9000bd2a:	e009      	b.n	9000bd40 <HAL_PCD_IRQHandler+0x520>
      while (ep_intr != 0U)
9000bd2c:	ea5f 0959 	movs.w	r9, r9, lsr #1
        epnum++;
9000bd30:	f10a 0a01 	add.w	sl, sl, #1
      while (ep_intr != 0U)
9000bd34:	f108 0824 	add.w	r8, r8, #36	@ 0x24
9000bd38:	f10b 0b20 	add.w	fp, fp, #32
9000bd3c:	f000 8140 	beq.w	9000bfc0 <HAL_PCD_IRQHandler+0x7a0>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
9000bd40:	f019 0f01 	tst.w	r9, #1
9000bd44:	d0f2      	beq.n	9000bd2c <HAL_PCD_IRQHandler+0x50c>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
9000bd46:	fa5f f78a 	uxtb.w	r7, sl
9000bd4a:	4628      	mov	r0, r5
9000bd4c:	4639      	mov	r1, r7
9000bd4e:	f003 fca3 	bl	9000f698 <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
9000bd52:	07c1      	lsls	r1, r0, #31
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
9000bd54:	4606      	mov	r6, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
9000bd56:	d513      	bpl.n	9000bd80 <HAL_PCD_IRQHandler+0x560>
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000bd58:	2001      	movs	r0, #1
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000bd5a:	9b03      	ldr	r3, [sp, #12]
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000bd5c:	f00a 010f 	and.w	r1, sl, #15
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000bd60:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000bd62:	fa00 f101 	lsl.w	r1, r0, r1
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000bd66:	ea22 0201 	bic.w	r2, r2, r1
9000bd6a:	635a      	str	r2, [r3, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
9000bd6c:	f8cb 0008 	str.w	r0, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
9000bd70:	79a1      	ldrb	r1, [r4, #6]
9000bd72:	4281      	cmp	r1, r0
9000bd74:	f000 818e 	beq.w	9000c094 <HAL_PCD_IRQHandler+0x874>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
9000bd78:	4639      	mov	r1, r7
9000bd7a:	4620      	mov	r0, r4
9000bd7c:	f7f7 fee8 	bl	90003b50 <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
9000bd80:	0732      	lsls	r2, r6, #28
9000bd82:	d502      	bpl.n	9000bd8a <HAL_PCD_IRQHandler+0x56a>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
9000bd84:	2308      	movs	r3, #8
9000bd86:	f8cb 3008 	str.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
9000bd8a:	06f3      	lsls	r3, r6, #27
9000bd8c:	d502      	bpl.n	9000bd94 <HAL_PCD_IRQHandler+0x574>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
9000bd8e:	2310      	movs	r3, #16
9000bd90:	f8cb 3008 	str.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
9000bd94:	0675      	lsls	r5, r6, #25
9000bd96:	d502      	bpl.n	9000bd9e <HAL_PCD_IRQHandler+0x57e>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
9000bd98:	2340      	movs	r3, #64	@ 0x40
9000bd9a:	f8cb 3008 	str.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
9000bd9e:	07b0      	lsls	r0, r6, #30
9000bda0:	f100 8145 	bmi.w	9000c02e <HAL_PCD_IRQHandler+0x80e>
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
9000bda4:	0631      	lsls	r1, r6, #24
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_WriteEmptyTxFifo(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000bda6:	6825      	ldr	r5, [r4, #0]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
9000bda8:	d5c0      	bpl.n	9000bd2c <HAL_PCD_IRQHandler+0x50c>
  uint32_t len32b;
  uint32_t fifoemptymsk;

  ep = &hpcd->IN_ep[epnum];

  if (ep->xfer_count > ep->xfer_len)
9000bdaa:	e9d8 2309 	ldrd	r2, r3, [r8, #36]	@ 0x24
9000bdae:	4293      	cmp	r3, r2
9000bdb0:	d8bc      	bhi.n	9000bd2c <HAL_PCD_IRQHandler+0x50c>
  {
    return HAL_ERROR;
  }

  len = ep->xfer_len - ep->xfer_count;
9000bdb2:	eba2 0e03 	sub.w	lr, r2, r3
  if (len > ep->maxpacket)
  {
    len = ep->maxpacket;
  }

  len32b = (len + 3U) / 4U;
9000bdb6:	f8d8 101c 	ldr.w	r1, [r8, #28]

  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bdba:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
  uint32_t USBx_BASE = (uint32_t)USBx;
9000bdbe:	9507      	str	r5, [sp, #28]
  len32b = (len + 3U) / 4U;
9000bdc0:	458e      	cmp	lr, r1
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bdc2:	eb0c 164a 	add.w	r6, ip, sl, lsl #5
  len32b = (len + 3U) / 4U;
9000bdc6:	bf28      	it	cs
9000bdc8:	468e      	movcs	lr, r1
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bdca:	69b0      	ldr	r0, [r6, #24]
  len32b = (len + 3U) / 4U;
9000bdcc:	f10e 0103 	add.w	r1, lr, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bdd0:	fa1f fe80 	uxth.w	lr, r0
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
9000bdd4:	ebbe 0f91 	cmp.w	lr, r1, lsr #2
9000bdd8:	f0c0 8194 	bcc.w	9000c104 <HAL_PCD_IRQHandler+0x8e4>
9000bddc:	f8cd b018 	str.w	fp, [sp, #24]
9000bde0:	e024      	b.n	9000be2c <HAL_PCD_IRQHandler+0x60c>
  {
    /* Write the FIFO */
    len = ep->xfer_len - ep->xfer_count;
9000bde2:	eba2 0b03 	sub.w	fp, r2, r3
9000bde6:	f8d8 301c 	ldr.w	r3, [r8, #28]
    {
      len = ep->maxpacket;
    }
    len32b = (len + 3U) / 4U;

    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
9000bdea:	f8d8 1020 	ldr.w	r1, [r8, #32]
9000bdee:	463a      	mov	r2, r7
9000bdf0:	459b      	cmp	fp, r3
9000bdf2:	4628      	mov	r0, r5
9000bdf4:	bf28      	it	cs
9000bdf6:	469b      	movcs	fp, r3
9000bdf8:	79a3      	ldrb	r3, [r4, #6]
9000bdfa:	9300      	str	r3, [sp, #0]
9000bdfc:	fa1f f38b 	uxth.w	r3, fp
9000be00:	f003 fad4 	bl	9000f3ac <USB_WritePacket>
                          (uint8_t)hpcd->Init.dma_enable);

    ep->xfer_buff  += len;
9000be04:	f8d8 3020 	ldr.w	r3, [r8, #32]
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000be08:	69b2      	ldr	r2, [r6, #24]
    ep->xfer_buff  += len;
9000be0a:	445b      	add	r3, fp
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000be0c:	b292      	uxth	r2, r2
    ep->xfer_buff  += len;
9000be0e:	f8c8 3020 	str.w	r3, [r8, #32]
    ep->xfer_count += len;
9000be12:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
9000be16:	445b      	add	r3, fp
    len32b = (len + 3U) / 4U;
9000be18:	f10b 0b03 	add.w	fp, fp, #3
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
9000be1c:	ebb2 0f9b 	cmp.w	r2, fp, lsr #2
    ep->xfer_count += len;
9000be20:	f8c8 3028 	str.w	r3, [r8, #40]	@ 0x28
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
9000be24:	f0c0 8169 	bcc.w	9000c0fa <HAL_PCD_IRQHandler+0x8da>
  }

  if (ep->xfer_len <= ep->xfer_count)
9000be28:	f8d8 2024 	ldr.w	r2, [r8, #36]	@ 0x24
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000be2c:	4293      	cmp	r3, r2
9000be2e:	d3d8      	bcc.n	9000bde2 <HAL_PCD_IRQHandler+0x5c2>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
9000be30:	f8dd b018 	ldr.w	fp, [sp, #24]
9000be34:	6825      	ldr	r5, [r4, #0]
  {
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000be36:	9b07      	ldr	r3, [sp, #28]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000be38:	2201      	movs	r2, #1
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000be3a:	f503 6100 	add.w	r1, r3, #2048	@ 0x800
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000be3e:	f00a 030f 	and.w	r3, sl, #15
9000be42:	409a      	lsls	r2, r3
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000be44:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9000be46:	ea23 0302 	bic.w	r3, r3, r2
9000be4a:	634b      	str	r3, [r1, #52]	@ 0x34
9000be4c:	e76e      	b.n	9000bd2c <HAL_PCD_IRQHandler+0x50c>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
9000be4e:	f003 fc09 	bl	9000f664 <USB_ReadDevAllOutEpInterrupt>
      while (ep_intr != 0U)
9000be52:	4607      	mov	r7, r0
9000be54:	2800      	cmp	r0, #0
9000be56:	f000 80b1 	beq.w	9000bfbc <HAL_PCD_IRQHandler+0x79c>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
9000be5a:	9504      	str	r5, [sp, #16]
9000be5c:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
9000be60:	46a3      	mov	fp, r4
      epnum = 0U;
9000be62:	f04f 0a00 	mov.w	sl, #0
9000be66:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
9000be68:	4625      	mov	r5, r4
9000be6a:	e008      	b.n	9000be7e <HAL_PCD_IRQHandler+0x65e>
      while (ep_intr != 0U)
9000be6c:	087f      	lsrs	r7, r7, #1
        epnum++;
9000be6e:	f10a 0a01 	add.w	sl, sl, #1
      while (ep_intr != 0U)
9000be72:	f108 0820 	add.w	r8, r8, #32
9000be76:	f10b 0b24 	add.w	fp, fp, #36	@ 0x24
9000be7a:	f000 80a5 	beq.w	9000bfc8 <HAL_PCD_IRQHandler+0x7a8>
        if ((ep_intr & 0x1U) != 0U)
9000be7e:	07fc      	lsls	r4, r7, #31
9000be80:	d5f4      	bpl.n	9000be6c <HAL_PCD_IRQHandler+0x64c>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
9000be82:	fa5f f48a 	uxtb.w	r4, sl
9000be86:	4621      	mov	r1, r4
9000be88:	f003 fbfc 	bl	9000f684 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
9000be8c:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
9000be90:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
9000be92:	f040 809c 	bne.w	9000bfce <HAL_PCD_IRQHandler+0x7ae>
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
9000be96:	f019 0f08 	tst.w	r9, #8
9000be9a:	f040 80b7 	bne.w	9000c00c <HAL_PCD_IRQHandler+0x7ec>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
9000be9e:	f019 0f10 	tst.w	r9, #16
9000bea2:	d002      	beq.n	9000beaa <HAL_PCD_IRQHandler+0x68a>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
9000bea4:	2210      	movs	r2, #16
9000bea6:	f8c8 2008 	str.w	r2, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
9000beaa:	f019 0f02 	tst.w	r9, #2
9000beae:	d00f      	beq.n	9000bed0 <HAL_PCD_IRQHandler+0x6b0>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
9000beb0:	6972      	ldr	r2, [r6, #20]
9000beb2:	0610      	lsls	r0, r2, #24
9000beb4:	d504      	bpl.n	9000bec0 <HAL_PCD_IRQHandler+0x6a0>
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
9000beb6:	9b03      	ldr	r3, [sp, #12]
9000beb8:	685a      	ldr	r2, [r3, #4]
9000beba:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
9000bebe:	605a      	str	r2, [r3, #4]
            if (ep->is_iso_incomplete == 1U)
9000bec0:	f89b 2257 	ldrb.w	r2, [fp, #599]	@ 0x257
9000bec4:	2a01      	cmp	r2, #1
9000bec6:	f000 8134 	beq.w	9000c132 <HAL_PCD_IRQHandler+0x912>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
9000beca:	2302      	movs	r3, #2
9000becc:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
9000bed0:	f019 0f20 	tst.w	r9, #32
9000bed4:	d002      	beq.n	9000bedc <HAL_PCD_IRQHandler+0x6bc>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
9000bed6:	2320      	movs	r3, #32
9000bed8:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
9000bedc:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
9000bee0:	d003      	beq.n	9000beea <HAL_PCD_IRQHandler+0x6ca>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
9000bee2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
9000bee6:	f8c8 3008 	str.w	r3, [r8, #8]
9000beea:	6828      	ldr	r0, [r5, #0]
9000beec:	e7be      	b.n	9000be6c <HAL_PCD_IRQHandler+0x64c>
        HAL_PCD_SuspendCallback(hpcd);
9000beee:	4620      	mov	r0, r4
9000bef0:	f7f7 fe52 	bl	90003b98 <HAL_PCD_SuspendCallback>
9000bef4:	e505      	b.n	9000b902 <HAL_PCD_IRQHandler+0xe2>
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
9000bef6:	4611      	mov	r1, r2
9000bef8:	f242 032b 	movw	r3, #8235	@ 0x202b
9000befc:	6952      	ldr	r2, [r2, #20]
9000befe:	4313      	orrs	r3, r2
9000bf00:	614b      	str	r3, [r1, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
9000bf02:	690b      	ldr	r3, [r1, #16]
9000bf04:	f043 030b 	orr.w	r3, r3, #11
9000bf08:	610b      	str	r3, [r1, #16]
9000bf0a:	e6d8      	b.n	9000bcbe <HAL_PCD_IRQHandler+0x49e>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bf0c:	2900      	cmp	r1, #0
9000bf0e:	f6bf ad93 	bge.w	9000ba38 <HAL_PCD_IRQHandler+0x218>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf12:	f104 0138 	add.w	r1, r4, #56	@ 0x38
9000bf16:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000bf18:	f884 203b 	strb.w	r2, [r4, #59]	@ 0x3b
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf1c:	f003 f9fc 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf20:	7923      	ldrb	r3, [r4, #4]
9000bf22:	e589      	b.n	9000ba38 <HAL_PCD_IRQHandler+0x218>
        hpcd->LPM_State = LPM_L0;
9000bf24:	2100      	movs	r1, #0
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
9000bf26:	4620      	mov	r0, r4
        hpcd->LPM_State = LPM_L0;
9000bf28:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
9000bf2c:	f000 fc12 	bl	9000c754 <HAL_PCDEx_LPM_Callback>
9000bf30:	e66e      	b.n	9000bc10 <HAL_PCD_IRQHandler+0x3f0>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bf32:	2900      	cmp	r1, #0
9000bf34:	f6bf ad89 	bge.w	9000ba4a <HAL_PCD_IRQHandler+0x22a>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf38:	f104 015c 	add.w	r1, r4, #92	@ 0x5c
9000bf3c:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000bf3e:	f884 205f 	strb.w	r2, [r4, #95]	@ 0x5f
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf42:	f003 f9e9 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf46:	7923      	ldrb	r3, [r4, #4]
9000bf48:	e57f      	b.n	9000ba4a <HAL_PCD_IRQHandler+0x22a>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bf4a:	2900      	cmp	r1, #0
9000bf4c:	f6bf ad86 	bge.w	9000ba5c <HAL_PCD_IRQHandler+0x23c>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf50:	f104 0180 	add.w	r1, r4, #128	@ 0x80
9000bf54:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000bf56:	f884 2083 	strb.w	r2, [r4, #131]	@ 0x83
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf5a:	f003 f9dd 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf5e:	7923      	ldrb	r3, [r4, #4]
9000bf60:	e57c      	b.n	9000ba5c <HAL_PCD_IRQHandler+0x23c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bf62:	2900      	cmp	r1, #0
9000bf64:	f6bf ad83 	bge.w	9000ba6e <HAL_PCD_IRQHandler+0x24e>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf68:	f104 01a4 	add.w	r1, r4, #164	@ 0xa4
9000bf6c:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000bf6e:	f884 20a7 	strb.w	r2, [r4, #167]	@ 0xa7
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf72:	f003 f9d1 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf76:	7923      	ldrb	r3, [r4, #4]
9000bf78:	e579      	b.n	9000ba6e <HAL_PCD_IRQHandler+0x24e>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf7a:	f504 7130 	add.w	r1, r4, #704	@ 0x2c0
9000bf7e:	6820      	ldr	r0, [r4, #0]
9000bf80:	f003 f9ca 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf84:	7923      	ldrb	r3, [r4, #4]
9000bf86:	e4ee      	b.n	9000b966 <HAL_PCD_IRQHandler+0x146>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000bf88:	eb08 08c8 	add.w	r8, r8, r8, lsl #3
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
9000bf8c:	2208      	movs	r2, #8
9000bf8e:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
9000bf92:	4630      	mov	r0, r6
9000bf94:	f003 fa20 	bl	9000f3d8 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000bf98:	f3c7 130a 	ubfx	r3, r7, #4, #11
9000bf9c:	eb04 0288 	add.w	r2, r4, r8, lsl #2
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000bfa0:	6820      	ldr	r0, [r4, #0]
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000bfa2:	f8d2 1268 	ldr.w	r1, [r2, #616]	@ 0x268
9000bfa6:	440b      	add	r3, r1
9000bfa8:	f8c2 3268 	str.w	r3, [r2, #616]	@ 0x268
9000bfac:	e473      	b.n	9000b896 <HAL_PCD_IRQHandler+0x76>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bfae:	f504 7139 	add.w	r1, r4, #740	@ 0x2e4
9000bfb2:	6820      	ldr	r0, [r4, #0]
9000bfb4:	f003 f9b0 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bfb8:	7923      	ldrb	r3, [r4, #4]
9000bfba:	e4db      	b.n	9000b974 <HAL_PCD_IRQHandler+0x154>
9000bfbc:	6820      	ldr	r0, [r4, #0]
9000bfbe:	e475      	b.n	9000b8ac <HAL_PCD_IRQHandler+0x8c>
9000bfc0:	4628      	mov	r0, r5
9000bfc2:	9e04      	ldr	r6, [sp, #16]
9000bfc4:	9d05      	ldr	r5, [sp, #20]
9000bfc6:	e477      	b.n	9000b8b8 <HAL_PCD_IRQHandler+0x98>
9000bfc8:	462c      	mov	r4, r5
9000bfca:	9d04      	ldr	r5, [sp, #16]
9000bfcc:	e46e      	b.n	9000b8ac <HAL_PCD_IRQHandler+0x8c>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000bfce:	6828      	ldr	r0, [r5, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
9000bfd0:	2201      	movs	r2, #1
9000bfd2:	f8c8 2008 	str.w	r2, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000bfd6:	f500 6230 	add.w	r2, r0, #2816	@ 0xb00

  if (hpcd->Init.dma_enable == 1U)
9000bfda:	79a9      	ldrb	r1, [r5, #6]
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000bfdc:	eb02 124a 	add.w	r2, r2, sl, lsl #5
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
9000bfe0:	f8d0 e040 	ldr.w	lr, [r0, #64]	@ 0x40
  if (hpcd->Init.dma_enable == 1U)
9000bfe4:	2901      	cmp	r1, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000bfe6:	6893      	ldr	r3, [r2, #8]
  if (hpcd->Init.dma_enable == 1U)
9000bfe8:	d079      	beq.n	9000c0de <HAL_PCD_IRQHandler+0x8be>
      /* ... */
    }
  }
  else
  {
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
9000bfea:	49be      	ldr	r1, [pc, #760]	@ (9000c2e4 <HAL_PCD_IRQHandler+0xac4>)
9000bfec:	458e      	cmp	lr, r1
9000bfee:	f000 80d8 	beq.w	9000c1a2 <HAL_PCD_IRQHandler+0x982>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
    }
    else
    {
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
9000bff2:	f1ba 0f00 	cmp.w	sl, #0
9000bff6:	d104      	bne.n	9000c002 <HAL_PCD_IRQHandler+0x7e2>
9000bff8:	f8d5 2264 	ldr.w	r2, [r5, #612]	@ 0x264
9000bffc:	2a00      	cmp	r2, #0
9000bffe:	f000 81a4 	beq.w	9000c34a <HAL_PCD_IRQHandler+0xb2a>
      }

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
      hpcd->DataOutStageCallback(hpcd, (uint8_t)epnum);
#else
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
9000c002:	4621      	mov	r1, r4
9000c004:	4628      	mov	r0, r5
9000c006:	f7f7 fd99 	bl	90003b3c <HAL_PCD_DataOutStageCallback>
9000c00a:	e744      	b.n	9000be96 <HAL_PCD_IRQHandler+0x676>
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000c00c:	6829      	ldr	r1, [r5, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
9000c00e:	2208      	movs	r2, #8
9000c010:	f8c8 2008 	str.w	r2, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000c014:	f501 6230 	add.w	r2, r1, #2816	@ 0xb00
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
9000c018:	6c08      	ldr	r0, [r1, #64]	@ 0x40

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000c01a:	49b3      	ldr	r1, [pc, #716]	@ (9000c2e8 <HAL_PCD_IRQHandler+0xac8>)
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000c01c:	eb02 124a 	add.w	r2, r2, sl, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000c020:	4288      	cmp	r0, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000c022:	6893      	ldr	r3, [r2, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000c024:	d849      	bhi.n	9000c0ba <HAL_PCD_IRQHandler+0x89a>

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
9000c026:	4628      	mov	r0, r5
9000c028:	f7f7 fd82 	bl	90003b30 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
9000c02c:	e737      	b.n	9000be9e <HAL_PCD_IRQHandler+0x67e>
            (void)USB_FlushTxFifo(USBx, epnum);
9000c02e:	4651      	mov	r1, sl
9000c030:	9804      	ldr	r0, [sp, #16]
9000c032:	f002 ff73 	bl	9000ef1c <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
9000c036:	f898 2017 	ldrb.w	r2, [r8, #23]
9000c03a:	2a01      	cmp	r2, #1
9000c03c:	f000 80c5 	beq.w	9000c1ca <HAL_PCD_IRQHandler+0x9aa>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
9000c040:	2202      	movs	r2, #2
9000c042:	f8cb 2008 	str.w	r2, [fp, #8]
9000c046:	e6ad      	b.n	9000bda4 <HAL_PCD_IRQHandler+0x584>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
9000c048:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
9000c04c:	421f      	tst	r7, r3
9000c04e:	f43f ac22 	beq.w	9000b896 <HAL_PCD_IRQHandler+0x76>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
9000c052:	eb08 08c8 	add.w	r8, r8, r8, lsl #3
9000c056:	f3c7 120a 	ubfx	r2, r7, #4, #11
9000c05a:	4630      	mov	r0, r6
9000c05c:	eb04 0888 	add.w	r8, r4, r8, lsl #2
9000c060:	4617      	mov	r7, r2
9000c062:	f8d8 1260 	ldr.w	r1, [r8, #608]	@ 0x260
9000c066:	f003 f9b7 	bl	9000f3d8 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000c06a:	f8d8 3260 	ldr.w	r3, [r8, #608]	@ 0x260
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000c06e:	6820      	ldr	r0, [r4, #0]
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000c070:	443b      	add	r3, r7
9000c072:	f8c8 3260 	str.w	r3, [r8, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000c076:	f8d8 3268 	ldr.w	r3, [r8, #616]	@ 0x268
9000c07a:	443b      	add	r3, r7
9000c07c:	f8c8 3268 	str.w	r3, [r8, #616]	@ 0x268
9000c080:	e409      	b.n	9000b896 <HAL_PCD_IRQHandler+0x76>
        HAL_PCD_SuspendCallback(hpcd);
9000c082:	4620      	mov	r0, r4
9000c084:	f7f7 fd88 	bl	90003b98 <HAL_PCD_SuspendCallback>
9000c088:	e57d      	b.n	9000bb86 <HAL_PCD_IRQHandler+0x366>
        HAL_PCD_DisconnectCallback(hpcd);
9000c08a:	4620      	mov	r0, r4
9000c08c:	f7f7 fdac 	bl	90003be8 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
9000c090:	6823      	ldr	r3, [r4, #0]
9000c092:	e56d      	b.n	9000bb70 <HAL_PCD_IRQHandler+0x350>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
9000c094:	e9d8 0207 	ldrd	r0, r2, [r8, #28]
9000c098:	4402      	add	r2, r0
9000c09a:	f8c8 2020 	str.w	r2, [r8, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
9000c09e:	f1ba 0f00 	cmp.w	sl, #0
9000c0a2:	f47f ae69 	bne.w	9000bd78 <HAL_PCD_IRQHandler+0x558>
9000c0a6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000c0a8:	2a00      	cmp	r2, #0
9000c0aa:	f47f ae65 	bne.w	9000bd78 <HAL_PCD_IRQHandler+0x558>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
9000c0ae:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
9000c0b2:	6820      	ldr	r0, [r4, #0]
9000c0b4:	f003 fb1a 	bl	9000f6ec <USB_EP0_OutStart>
9000c0b8:	e65e      	b.n	9000bd78 <HAL_PCD_IRQHandler+0x558>
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000c0ba:	041b      	lsls	r3, r3, #16
9000c0bc:	d561      	bpl.n	9000c182 <HAL_PCD_IRQHandler+0x962>
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
9000c0be:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
  HAL_PCD_SetupStageCallback(hpcd);
9000c0c2:	4628      	mov	r0, r5
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
9000c0c4:	6091      	str	r1, [r2, #8]
  HAL_PCD_SetupStageCallback(hpcd);
9000c0c6:	f7f7 fd33 	bl	90003b30 <HAL_PCD_SetupStageCallback>
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
9000c0ca:	79a9      	ldrb	r1, [r5, #6]
9000c0cc:	2901      	cmp	r1, #1
9000c0ce:	f47f aee6 	bne.w	9000be9e <HAL_PCD_IRQHandler+0x67e>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
9000c0d2:	f205 429c 	addw	r2, r5, #1180	@ 0x49c
9000c0d6:	6828      	ldr	r0, [r5, #0]
9000c0d8:	f003 fb08 	bl	9000f6ec <USB_EP0_OutStart>
9000c0dc:	e6df      	b.n	9000be9e <HAL_PCD_IRQHandler+0x67e>
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
9000c0de:	0719      	lsls	r1, r3, #28
9000c0e0:	f140 8097 	bpl.w	9000c212 <HAL_PCD_IRQHandler+0x9f2>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000c0e4:	4980      	ldr	r1, [pc, #512]	@ (9000c2e8 <HAL_PCD_IRQHandler+0xac8>)
9000c0e6:	458e      	cmp	lr, r1
9000c0e8:	f67f aed5 	bls.w	9000be96 <HAL_PCD_IRQHandler+0x676>
9000c0ec:	0418      	lsls	r0, r3, #16
9000c0ee:	f57f aed2 	bpl.w	9000be96 <HAL_PCD_IRQHandler+0x676>
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
9000c0f2:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
9000c0f6:	6091      	str	r1, [r2, #8]
9000c0f8:	e6cd      	b.n	9000be96 <HAL_PCD_IRQHandler+0x676>
  if (ep->xfer_len <= ep->xfer_count)
9000c0fa:	f8dd b018 	ldr.w	fp, [sp, #24]
9000c0fe:	f8d8 2024 	ldr.w	r2, [r8, #36]	@ 0x24
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
9000c102:	6825      	ldr	r5, [r4, #0]
  if (ep->xfer_len <= ep->xfer_count)
9000c104:	4293      	cmp	r3, r2
9000c106:	f4ff ae11 	bcc.w	9000bd2c <HAL_PCD_IRQHandler+0x50c>
9000c10a:	e694      	b.n	9000be36 <HAL_PCD_IRQHandler+0x616>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c10c:	2900      	cmp	r1, #0
9000c10e:	f6bf acb7 	bge.w	9000ba80 <HAL_PCD_IRQHandler+0x260>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c112:	f104 01c8 	add.w	r1, r4, #200	@ 0xc8
9000c116:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c118:	f884 20cb 	strb.w	r2, [r4, #203]	@ 0xcb
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c11c:	f003 f8fc 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c120:	7923      	ldrb	r3, [r4, #4]
9000c122:	e4ad      	b.n	9000ba80 <HAL_PCD_IRQHandler+0x260>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c124:	f504 711e 	add.w	r1, r4, #632	@ 0x278
9000c128:	6820      	ldr	r0, [r4, #0]
9000c12a:	f003 f8f5 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c12e:	7923      	ldrb	r3, [r4, #4]
9000c130:	e40b      	b.n	9000b94a <HAL_PCD_IRQHandler+0x12a>
              ep->is_iso_incomplete = 0U;
9000c132:	2200      	movs	r2, #0
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
9000c134:	4621      	mov	r1, r4
9000c136:	4628      	mov	r0, r5
              ep->is_iso_incomplete = 0U;
9000c138:	f88b 2257 	strb.w	r2, [fp, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
9000c13c:	f7f7 fd48 	bl	90003bd0 <HAL_PCD_ISOOUTIncompleteCallback>
9000c140:	e6c3      	b.n	9000beca <HAL_PCD_IRQHandler+0x6aa>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c142:	2900      	cmp	r1, #0
9000c144:	f6bf aca5 	bge.w	9000ba92 <HAL_PCD_IRQHandler+0x272>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c148:	f104 01ec 	add.w	r1, r4, #236	@ 0xec
9000c14c:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c14e:	f884 20ef 	strb.w	r2, [r4, #239]	@ 0xef
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c152:	f003 f8e1 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c156:	7923      	ldrb	r3, [r4, #4]
9000c158:	e49b      	b.n	9000ba92 <HAL_PCD_IRQHandler+0x272>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c15a:	f504 7127 	add.w	r1, r4, #668	@ 0x29c
9000c15e:	6820      	ldr	r0, [r4, #0]
9000c160:	f003 f8da 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c164:	7923      	ldrb	r3, [r4, #4]
9000c166:	f7ff bbf7 	b.w	9000b958 <HAL_PCD_IRQHandler+0x138>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c16a:	2900      	cmp	r1, #0
9000c16c:	f6bf ac9a 	bge.w	9000baa4 <HAL_PCD_IRQHandler+0x284>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c170:	f504 7188 	add.w	r1, r4, #272	@ 0x110
9000c174:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c176:	f884 2113 	strb.w	r2, [r4, #275]	@ 0x113
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c17a:	f003 f8cd 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c17e:	7923      	ldrb	r3, [r4, #4]
9000c180:	e490      	b.n	9000baa4 <HAL_PCD_IRQHandler+0x284>
  HAL_PCD_SetupStageCallback(hpcd);
9000c182:	4628      	mov	r0, r5
9000c184:	f7f7 fcd4 	bl	90003b30 <HAL_PCD_SetupStageCallback>
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
9000c188:	e79f      	b.n	9000c0ca <HAL_PCD_IRQHandler+0x8aa>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c18a:	2900      	cmp	r1, #0
9000c18c:	f6bf ac93 	bge.w	9000bab6 <HAL_PCD_IRQHandler+0x296>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c190:	f504 719a 	add.w	r1, r4, #308	@ 0x134
9000c194:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c196:	f884 2137 	strb.w	r2, [r4, #311]	@ 0x137
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c19a:	f003 f8bd 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c19e:	7923      	ldrb	r3, [r4, #4]
9000c1a0:	e489      	b.n	9000bab6 <HAL_PCD_IRQHandler+0x296>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
9000c1a2:	0418      	lsls	r0, r3, #16
9000c1a4:	d4a5      	bmi.n	9000c0f2 <HAL_PCD_IRQHandler+0x8d2>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
9000c1a6:	0699      	lsls	r1, r3, #26
9000c1a8:	f57f af2b 	bpl.w	9000c002 <HAL_PCD_IRQHandler+0x7e2>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
9000c1ac:	2120      	movs	r1, #32
9000c1ae:	6091      	str	r1, [r2, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
9000c1b0:	e727      	b.n	9000c002 <HAL_PCD_IRQHandler+0x7e2>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c1b2:	2900      	cmp	r1, #0
9000c1b4:	f6bf ac88 	bge.w	9000bac8 <HAL_PCD_IRQHandler+0x2a8>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1b8:	f504 71ac 	add.w	r1, r4, #344	@ 0x158
9000c1bc:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c1be:	f884 215b 	strb.w	r2, [r4, #347]	@ 0x15b
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1c2:	f003 f8a9 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c1c6:	7923      	ldrb	r3, [r4, #4]
9000c1c8:	e47e      	b.n	9000bac8 <HAL_PCD_IRQHandler+0x2a8>
              ep->is_iso_incomplete = 0U;
9000c1ca:	2200      	movs	r2, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
9000c1cc:	4639      	mov	r1, r7
9000c1ce:	4620      	mov	r0, r4
              ep->is_iso_incomplete = 0U;
9000c1d0:	f888 2017 	strb.w	r2, [r8, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
9000c1d4:	f7f7 fd00 	bl	90003bd8 <HAL_PCD_ISOINIncompleteCallback>
9000c1d8:	e732      	b.n	9000c040 <HAL_PCD_IRQHandler+0x820>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1da:	f504 7142 	add.w	r1, r4, #776	@ 0x308
9000c1de:	6820      	ldr	r0, [r4, #0]
9000c1e0:	f003 f89a 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c1e4:	7923      	ldrb	r3, [r4, #4]
9000c1e6:	f7ff bbcc 	b.w	9000b982 <HAL_PCD_IRQHandler+0x162>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c1ea:	2900      	cmp	r1, #0
9000c1ec:	f6bf ac75 	bge.w	9000bada <HAL_PCD_IRQHandler+0x2ba>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1f0:	f504 71be 	add.w	r1, r4, #380	@ 0x17c
9000c1f4:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c1f6:	f884 217f 	strb.w	r2, [r4, #383]	@ 0x17f
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1fa:	f003 f88d 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c1fe:	7923      	ldrb	r3, [r4, #4]
9000c200:	e46b      	b.n	9000bada <HAL_PCD_IRQHandler+0x2ba>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c202:	f504 714b 	add.w	r1, r4, #812	@ 0x32c
9000c206:	6820      	ldr	r0, [r4, #0]
9000c208:	f003 f886 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c20c:	7923      	ldrb	r3, [r4, #4]
9000c20e:	f7ff bbbf 	b.w	9000b990 <HAL_PCD_IRQHandler+0x170>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
9000c212:	0699      	lsls	r1, r3, #26
9000c214:	d572      	bpl.n	9000c2fc <HAL_PCD_IRQHandler+0xadc>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
9000c216:	2120      	movs	r1, #32
9000c218:	6091      	str	r1, [r2, #8]
9000c21a:	e63c      	b.n	9000be96 <HAL_PCD_IRQHandler+0x676>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c21c:	2900      	cmp	r1, #0
9000c21e:	f6bf ac65 	bge.w	9000baec <HAL_PCD_IRQHandler+0x2cc>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c222:	f504 71d0 	add.w	r1, r4, #416	@ 0x1a0
9000c226:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c228:	f884 21a3 	strb.w	r2, [r4, #419]	@ 0x1a3
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c22c:	f003 f874 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c230:	7923      	ldrb	r3, [r4, #4]
9000c232:	e45b      	b.n	9000baec <HAL_PCD_IRQHandler+0x2cc>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c234:	f504 7154 	add.w	r1, r4, #848	@ 0x350
9000c238:	6820      	ldr	r0, [r4, #0]
9000c23a:	f003 f86d 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c23e:	7923      	ldrb	r3, [r4, #4]
9000c240:	f7ff bbad 	b.w	9000b99e <HAL_PCD_IRQHandler+0x17e>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c244:	2900      	cmp	r1, #0
9000c246:	f6bf ac5a 	bge.w	9000bafe <HAL_PCD_IRQHandler+0x2de>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c24a:	f504 71e2 	add.w	r1, r4, #452	@ 0x1c4
9000c24e:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c250:	f884 21c7 	strb.w	r2, [r4, #455]	@ 0x1c7
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c254:	f003 f860 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c258:	7923      	ldrb	r3, [r4, #4]
9000c25a:	e450      	b.n	9000bafe <HAL_PCD_IRQHandler+0x2de>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c25c:	f504 715d 	add.w	r1, r4, #884	@ 0x374
9000c260:	6820      	ldr	r0, [r4, #0]
9000c262:	f003 f859 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c266:	7923      	ldrb	r3, [r4, #4]
9000c268:	f7ff bba0 	b.w	9000b9ac <HAL_PCD_IRQHandler+0x18c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c26c:	2900      	cmp	r1, #0
9000c26e:	f6bf ac4f 	bge.w	9000bb10 <HAL_PCD_IRQHandler+0x2f0>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c272:	f504 71f4 	add.w	r1, r4, #488	@ 0x1e8
9000c276:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c278:	f884 21eb 	strb.w	r2, [r4, #491]	@ 0x1eb
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c27c:	f003 f84c 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c280:	7923      	ldrb	r3, [r4, #4]
9000c282:	e445      	b.n	9000bb10 <HAL_PCD_IRQHandler+0x2f0>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c284:	f504 7166 	add.w	r1, r4, #920	@ 0x398
9000c288:	6820      	ldr	r0, [r4, #0]
9000c28a:	f003 f845 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c28e:	7923      	ldrb	r3, [r4, #4]
9000c290:	f7ff bb93 	b.w	9000b9ba <HAL_PCD_IRQHandler+0x19a>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c294:	2900      	cmp	r1, #0
9000c296:	f6bf ac44 	bge.w	9000bb22 <HAL_PCD_IRQHandler+0x302>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c29a:	f504 7103 	add.w	r1, r4, #524	@ 0x20c
9000c29e:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c2a0:	f884 220f 	strb.w	r2, [r4, #527]	@ 0x20f
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c2a4:	f003 f838 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c2a8:	7923      	ldrb	r3, [r4, #4]
9000c2aa:	e43a      	b.n	9000bb22 <HAL_PCD_IRQHandler+0x302>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c2ac:	f504 716f 	add.w	r1, r4, #956	@ 0x3bc
9000c2b0:	6820      	ldr	r0, [r4, #0]
9000c2b2:	f003 f831 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c2b6:	7923      	ldrb	r3, [r4, #4]
9000c2b8:	f7ff bb86 	b.w	9000b9c8 <HAL_PCD_IRQHandler+0x1a8>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c2bc:	2900      	cmp	r1, #0
9000c2be:	f6bf ac39 	bge.w	9000bb34 <HAL_PCD_IRQHandler+0x314>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c2c2:	f504 710c 	add.w	r1, r4, #560	@ 0x230
9000c2c6:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c2c8:	f884 2233 	strb.w	r2, [r4, #563]	@ 0x233
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c2cc:	f003 f824 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c2d0:	7923      	ldrb	r3, [r4, #4]
9000c2d2:	e42f      	b.n	9000bb34 <HAL_PCD_IRQHandler+0x314>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c2d4:	f504 7178 	add.w	r1, r4, #992	@ 0x3e0
9000c2d8:	6820      	ldr	r0, [r4, #0]
9000c2da:	f003 f81d 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c2de:	7923      	ldrb	r3, [r4, #4]
9000c2e0:	f7ff bb79 	b.w	9000b9d6 <HAL_PCD_IRQHandler+0x1b6>
9000c2e4:	4f54310a 	.word	0x4f54310a
9000c2e8:	4f54300a 	.word	0x4f54300a
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c2ec:	f204 4104 	addw	r1, r4, #1028	@ 0x404
9000c2f0:	6820      	ldr	r0, [r4, #0]
9000c2f2:	f003 f811 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c2f6:	7923      	ldrb	r3, [r4, #4]
9000c2f8:	f7ff bb74 	b.w	9000b9e4 <HAL_PCD_IRQHandler+0x1c4>
    else if ((DoepintReg & (USB_OTG_DOEPINT_STUP | USB_OTG_DOEPINT_OTEPSPR)) == 0U)
9000c2fc:	f013 0f28 	tst.w	r3, #40	@ 0x28
9000c300:	f47f adc9 	bne.w	9000be96 <HAL_PCD_IRQHandler+0x676>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000c304:	491b      	ldr	r1, [pc, #108]	@ (9000c374 <HAL_PCD_IRQHandler+0xb54>)
9000c306:	458e      	cmp	lr, r1
9000c308:	d902      	bls.n	9000c310 <HAL_PCD_IRQHandler+0xaf0>
9000c30a:	041b      	lsls	r3, r3, #16
9000c30c:	f53f aef1 	bmi.w	9000c0f2 <HAL_PCD_IRQHandler+0x8d2>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
9000c310:	6911      	ldr	r1, [r2, #16]
9000c312:	f8db 2274 	ldr.w	r2, [fp, #628]	@ 0x274
9000c316:	f3c1 0112 	ubfx	r1, r1, #0, #19
9000c31a:	1a52      	subs	r2, r2, r1
9000c31c:	f8cb 2268 	str.w	r2, [fp, #616]	@ 0x268
        if (epnum == 0U)
9000c320:	f1ba 0f00 	cmp.w	sl, #0
9000c324:	f47f ae6d 	bne.w	9000c002 <HAL_PCD_IRQHandler+0x7e2>
          if (ep->xfer_len == 0U)
9000c328:	f8d5 1264 	ldr.w	r1, [r5, #612]	@ 0x264
9000c32c:	b1d9      	cbz	r1, 9000c366 <HAL_PCD_IRQHandler+0xb46>
            ep->xfer_buff += ep->xfer_count;
9000c32e:	f8d5 1260 	ldr.w	r1, [r5, #608]	@ 0x260
9000c332:	4411      	add	r1, r2
9000c334:	f8c5 1260 	str.w	r1, [r5, #608]	@ 0x260
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
9000c338:	e663      	b.n	9000c002 <HAL_PCD_IRQHandler+0x7e2>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c33a:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
9000c33e:	6820      	ldr	r0, [r4, #0]
9000c340:	f002 ffea 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c344:	7923      	ldrb	r3, [r4, #4]
9000c346:	f7ff bb54 	b.w	9000b9f2 <HAL_PCD_IRQHandler+0x1d2>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
9000c34a:	f205 429c 	addw	r2, r5, #1180	@ 0x49c
9000c34e:	4651      	mov	r1, sl
9000c350:	f003 f9cc 	bl	9000f6ec <USB_EP0_OutStart>
9000c354:	e655      	b.n	9000c002 <HAL_PCD_IRQHandler+0x7e2>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c356:	f204 414c 	addw	r1, r4, #1100	@ 0x44c
9000c35a:	6820      	ldr	r0, [r4, #0]
9000c35c:	f002 ffdc 	bl	9000f318 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c360:	7923      	ldrb	r3, [r4, #4]
9000c362:	f7ff bb4d 	b.w	9000ba00 <HAL_PCD_IRQHandler+0x1e0>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
9000c366:	f205 429c 	addw	r2, r5, #1180	@ 0x49c
9000c36a:	2101      	movs	r1, #1
9000c36c:	f003 f9be 	bl	9000f6ec <USB_EP0_OutStart>
9000c370:	e647      	b.n	9000c002 <HAL_PCD_IRQHandler+0x7e2>
9000c372:	bf00      	nop
9000c374:	4f54300a 	.word	0x4f54300a

9000c378 <HAL_PCD_SetAddress>:
  __HAL_LOCK(hpcd);
9000c378:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
9000c37c:	2a01      	cmp	r2, #1
9000c37e:	d00d      	beq.n	9000c39c <HAL_PCD_SetAddress+0x24>
9000c380:	2201      	movs	r2, #1
{
9000c382:	b510      	push	{r4, lr}
9000c384:	4604      	mov	r4, r0
  (void)USB_SetDevAddress(hpcd->Instance, address);
9000c386:	6800      	ldr	r0, [r0, #0]
  hpcd->USB_Address = address;
9000c388:	7461      	strb	r1, [r4, #17]
  __HAL_LOCK(hpcd);
9000c38a:	f884 2494 	strb.w	r2, [r4, #1172]	@ 0x494
  (void)USB_SetDevAddress(hpcd->Instance, address);
9000c38e:	f003 f933 	bl	9000f5f8 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
9000c392:	2300      	movs	r3, #0
  return HAL_OK;
9000c394:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000c396:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000c39a:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
9000c39c:	2002      	movs	r0, #2
}
9000c39e:	4770      	bx	lr

9000c3a0 <HAL_PCD_EP_Open>:
{
9000c3a0:	b510      	push	{r4, lr}
9000c3a2:	f001 0e0f 	and.w	lr, r1, #15
  if ((ep_addr & 0x80U) == 0x80U)
9000c3a6:	0609      	lsls	r1, r1, #24
{
9000c3a8:	4604      	mov	r4, r0
9000c3aa:	eb0e 0cce 	add.w	ip, lr, lr, lsl #3
9000c3ae:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
  if ((ep_addr & 0x80U) == 0x80U)
9000c3b2:	d425      	bmi.n	9000c400 <HAL_PCD_EP_Open+0x60>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c3b4:	f50c 7115 	add.w	r1, ip, #596	@ 0x254
    ep->is_in = 0U;
9000c3b8:	f04f 0c00 	mov.w	ip, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c3bc:	4401      	add	r1, r0
    ep->is_in = 0U;
9000c3be:	eb0e 00ce 	add.w	r0, lr, lr, lsl #3
9000c3c2:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000c3c6:	f880 c255 	strb.w	ip, [r0, #597]	@ 0x255
  ep->maxpacket = ep_mps;
9000c3ca:	608a      	str	r2, [r1, #8]
  if (ep->is_in != 0U)
9000c3cc:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
9000c3ce:	f881 e000 	strb.w	lr, [r1]
  ep->type = ep_type;
9000c3d2:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
9000c3d4:	b10a      	cbz	r2, 9000c3da <HAL_PCD_EP_Open+0x3a>
    ep->tx_fifo_num = ep->num;
9000c3d6:	f8a1 e01a 	strh.w	lr, [r1, #26]
  if (ep_type == EP_TYPE_BULK)
9000c3da:	2b02      	cmp	r3, #2
9000c3dc:	d101      	bne.n	9000c3e2 <HAL_PCD_EP_Open+0x42>
    ep->data_pid_start = 0U;
9000c3de:	2300      	movs	r3, #0
9000c3e0:	714b      	strb	r3, [r1, #5]
  __HAL_LOCK(hpcd);
9000c3e2:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c3e6:	2b01      	cmp	r3, #1
9000c3e8:	d016      	beq.n	9000c418 <HAL_PCD_EP_Open+0x78>
9000c3ea:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
9000c3ec:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
9000c3ee:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
9000c3f2:	f002 fdc7 	bl	9000ef84 <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
9000c3f6:	2300      	movs	r3, #0
  return ret;
9000c3f8:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000c3fa:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000c3fe:	bd10      	pop	{r4, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c400:	f10c 0114 	add.w	r1, ip, #20
    ep->is_in = 1U;
9000c404:	f04f 0c01 	mov.w	ip, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c408:	4401      	add	r1, r0
    ep->is_in = 1U;
9000c40a:	eb0e 00ce 	add.w	r0, lr, lr, lsl #3
9000c40e:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000c412:	f880 c015 	strb.w	ip, [r0, #21]
9000c416:	e7d8      	b.n	9000c3ca <HAL_PCD_EP_Open+0x2a>
  __HAL_LOCK(hpcd);
9000c418:	2002      	movs	r0, #2
}
9000c41a:	bd10      	pop	{r4, pc}

9000c41c <HAL_PCD_EP_Close>:
  if ((ep_addr & 0x80U) == 0x80U)
9000c41c:	f001 030f 	and.w	r3, r1, #15
9000c420:	0609      	lsls	r1, r1, #24
9000c422:	461a      	mov	r2, r3
9000c424:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
{
9000c428:	b510      	push	{r4, lr}
9000c42a:	ea4f 0383 	mov.w	r3, r3, lsl #2
9000c42e:	4604      	mov	r4, r0
  if ((ep_addr & 0x80U) == 0x80U)
9000c430:	d419      	bmi.n	9000c466 <HAL_PCD_EP_Close+0x4a>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c432:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
9000c436:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
9000c43a:	2000      	movs	r0, #0
9000c43c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c440:	4421      	add	r1, r4
    ep->is_in = 0U;
9000c442:	f883 0255 	strb.w	r0, [r3, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
9000c446:	700a      	strb	r2, [r1, #0]
  __HAL_LOCK(hpcd);
9000c448:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c44c:	2b01      	cmp	r3, #1
9000c44e:	d01a      	beq.n	9000c486 <HAL_PCD_EP_Close+0x6a>
9000c450:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
9000c452:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
9000c454:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
9000c458:	f002 fdda 	bl	9000f010 <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
9000c45c:	2300      	movs	r3, #0
  return HAL_OK;
9000c45e:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000c460:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000c464:	bd10      	pop	{r4, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c466:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
9000c46a:	eb02 00c2 	add.w	r0, r2, r2, lsl #3
9000c46e:	f04f 0c01 	mov.w	ip, #1
9000c472:	eb04 0380 	add.w	r3, r4, r0, lsl #2
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c476:	4421      	add	r1, r4
    ep->is_in = 1U;
9000c478:	f883 c015 	strb.w	ip, [r3, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
9000c47c:	700a      	strb	r2, [r1, #0]
  __HAL_LOCK(hpcd);
9000c47e:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c482:	2b01      	cmp	r3, #1
9000c484:	d1e4      	bne.n	9000c450 <HAL_PCD_EP_Close+0x34>
9000c486:	2002      	movs	r0, #2
}
9000c488:	bd10      	pop	{r4, pc}
9000c48a:	bf00      	nop

9000c48c <HAL_PCD_EP_Receive>:
{
9000c48c:	b510      	push	{r4, lr}
9000c48e:	f001 0e0f 	and.w	lr, r1, #15
9000c492:	4614      	mov	r4, r2
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c494:	2124      	movs	r1, #36	@ 0x24
  ep->xfer_buff = pBuf;
9000c496:	eb0e 0cce 	add.w	ip, lr, lr, lsl #3
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c49a:	fb01 010e 	mla	r1, r1, lr, r0
  ep->xfer_buff = pBuf;
9000c49e:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c4a2:	f501 7115 	add.w	r1, r1, #596	@ 0x254
  ep->xfer_len = len;
9000c4a6:	f8cc 3264 	str.w	r3, [ip, #612]	@ 0x264
  ep->xfer_count = 0U;
9000c4aa:	2300      	movs	r3, #0
  ep->num = ep_addr & EP_ADDR_MSK;
9000c4ac:	f88c e254 	strb.w	lr, [ip, #596]	@ 0x254
  ep->xfer_buff = pBuf;
9000c4b0:	f8cc 2260 	str.w	r2, [ip, #608]	@ 0x260
  ep->xfer_count = 0U;
9000c4b4:	f8cc 3268 	str.w	r3, [ip, #616]	@ 0x268
  ep->is_in = 0U;
9000c4b8:	f88c 3255 	strb.w	r3, [ip, #597]	@ 0x255
  if (hpcd->Init.dma_enable == 1U)
9000c4bc:	7982      	ldrb	r2, [r0, #6]
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000c4be:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
9000c4c0:	2a01      	cmp	r2, #1
    ep->dma_addr = (uint32_t)pBuf;
9000c4c2:	bf08      	it	eq
9000c4c4:	f8cc 4270 	streq.w	r4, [ip, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000c4c8:	f002 fe00 	bl	9000f0cc <USB_EPStartXfer>
}
9000c4cc:	2000      	movs	r0, #0
9000c4ce:	bd10      	pop	{r4, pc}

9000c4d0 <HAL_PCD_EP_Transmit>:
{
9000c4d0:	b510      	push	{r4, lr}
9000c4d2:	f001 0e0f 	and.w	lr, r1, #15
9000c4d6:	4614      	mov	r4, r2
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c4d8:	2124      	movs	r1, #36	@ 0x24
  ep->xfer_buff = pBuf;
9000c4da:	eb0e 0cce 	add.w	ip, lr, lr, lsl #3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c4de:	fb01 010e 	mla	r1, r1, lr, r0
  ep->xfer_buff = pBuf;
9000c4e2:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c4e6:	3114      	adds	r1, #20
  ep->xfer_len = len;
9000c4e8:	f8cc 3024 	str.w	r3, [ip, #36]	@ 0x24
  ep->xfer_count = 0U;
9000c4ec:	2300      	movs	r3, #0
  ep->num = ep_addr & EP_ADDR_MSK;
9000c4ee:	f88c e014 	strb.w	lr, [ip, #20]
  ep->xfer_count = 0U;
9000c4f2:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  ep->is_in = 1U;
9000c4f6:	2301      	movs	r3, #1
  ep->xfer_buff = pBuf;
9000c4f8:	f8cc 2020 	str.w	r2, [ip, #32]
  ep->is_in = 1U;
9000c4fc:	f88c 3015 	strb.w	r3, [ip, #21]
  if (hpcd->Init.dma_enable == 1U)
9000c500:	7982      	ldrb	r2, [r0, #6]
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000c502:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
9000c504:	429a      	cmp	r2, r3
    ep->dma_addr = (uint32_t)pBuf;
9000c506:	bf08      	it	eq
9000c508:	f8cc 4030 	streq.w	r4, [ip, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000c50c:	f002 fdde 	bl	9000f0cc <USB_EPStartXfer>
}
9000c510:	2000      	movs	r0, #0
9000c512:	bd10      	pop	{r4, pc}

9000c514 <HAL_PCD_EP_SetStall>:
{
9000c514:	b538      	push	{r3, r4, r5, lr}
9000c516:	f001 050f 	and.w	r5, r1, #15
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
9000c51a:	7903      	ldrb	r3, [r0, #4]
9000c51c:	42ab      	cmp	r3, r5
9000c51e:	d333      	bcc.n	9000c588 <HAL_PCD_EP_SetStall+0x74>
  if ((0x80U & ep_addr) == 0x80U)
9000c520:	060b      	lsls	r3, r1, #24
9000c522:	4604      	mov	r4, r0
9000c524:	d41d      	bmi.n	9000c562 <HAL_PCD_EP_SetStall+0x4e>
    ep = &hpcd->OUT_ep[ep_addr];
9000c526:	2224      	movs	r2, #36	@ 0x24
    ep->is_in = 0U;
9000c528:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    ep = &hpcd->OUT_ep[ep_addr];
9000c52c:	fb02 0101 	mla	r1, r2, r1, r0
    ep->is_in = 0U;
9000c530:	eb00 0383 	add.w	r3, r0, r3, lsl #2
9000c534:	2200      	movs	r2, #0
    ep = &hpcd->OUT_ep[ep_addr];
9000c536:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->is_in = 0U;
9000c53a:	f883 2255 	strb.w	r2, [r3, #597]	@ 0x255
  ep->is_stall = 1U;
9000c53e:	2301      	movs	r3, #1
  ep->num = ep_addr & EP_ADDR_MSK;
9000c540:	700d      	strb	r5, [r1, #0]
  ep->is_stall = 1U;
9000c542:	708b      	strb	r3, [r1, #2]
  __HAL_LOCK(hpcd);
9000c544:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
9000c548:	429a      	cmp	r2, r3
9000c54a:	d01b      	beq.n	9000c584 <HAL_PCD_EP_SetStall+0x70>
  (void)USB_EPSetStall(hpcd->Instance, ep);
9000c54c:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
9000c54e:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
9000c552:	f002 ff65 	bl	9000f420 <USB_EPSetStall>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
9000c556:	b1cd      	cbz	r5, 9000c58c <HAL_PCD_EP_SetStall+0x78>
  __HAL_UNLOCK(hpcd);
9000c558:	2300      	movs	r3, #0
  return HAL_OK;
9000c55a:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000c55c:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000c560:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c562:	2124      	movs	r1, #36	@ 0x24
    ep->is_in = 1U;
9000c564:	eb05 03c5 	add.w	r3, r5, r5, lsl #3
9000c568:	2201      	movs	r2, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c56a:	fb01 0105 	mla	r1, r1, r5, r0
    ep->is_in = 1U;
9000c56e:	eb00 0383 	add.w	r3, r0, r3, lsl #2
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c572:	3114      	adds	r1, #20
    ep->is_in = 1U;
9000c574:	755a      	strb	r2, [r3, #21]
  ep->is_stall = 1U;
9000c576:	2301      	movs	r3, #1
  ep->num = ep_addr & EP_ADDR_MSK;
9000c578:	700d      	strb	r5, [r1, #0]
  ep->is_stall = 1U;
9000c57a:	708b      	strb	r3, [r1, #2]
  __HAL_LOCK(hpcd);
9000c57c:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
9000c580:	429a      	cmp	r2, r3
9000c582:	d1e3      	bne.n	9000c54c <HAL_PCD_EP_SetStall+0x38>
9000c584:	2002      	movs	r0, #2
}
9000c586:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000c588:	2001      	movs	r0, #1
}
9000c58a:	bd38      	pop	{r3, r4, r5, pc}
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
9000c58c:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
9000c590:	79a1      	ldrb	r1, [r4, #6]
9000c592:	6820      	ldr	r0, [r4, #0]
9000c594:	f003 f8aa 	bl	9000f6ec <USB_EP0_OutStart>
9000c598:	e7de      	b.n	9000c558 <HAL_PCD_EP_SetStall+0x44>
9000c59a:	bf00      	nop

9000c59c <HAL_PCD_EP_ClrStall>:
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
9000c59c:	f001 020f 	and.w	r2, r1, #15
{
9000c5a0:	b538      	push	{r3, r4, r5, lr}
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
9000c5a2:	7903      	ldrb	r3, [r0, #4]
9000c5a4:	4293      	cmp	r3, r2
9000c5a6:	d332      	bcc.n	9000c60e <HAL_PCD_EP_ClrStall+0x72>
  if ((0x80U & ep_addr) == 0x80U)
9000c5a8:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
9000c5ac:	0609      	lsls	r1, r1, #24
9000c5ae:	4604      	mov	r4, r0
9000c5b0:	ea4f 0383 	mov.w	r3, r3, lsl #2
9000c5b4:	d41a      	bmi.n	9000c5ec <HAL_PCD_EP_ClrStall+0x50>
    ep->is_in = 0U;
9000c5b6:	eb02 00c2 	add.w	r0, r2, r2, lsl #3
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c5ba:	f503 7315 	add.w	r3, r3, #596	@ 0x254
    ep->is_in = 0U;
9000c5be:	2500      	movs	r5, #0
9000c5c0:	eb04 0080 	add.w	r0, r4, r0, lsl #2
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c5c4:	18e1      	adds	r1, r4, r3
    ep->is_in = 0U;
9000c5c6:	f880 5255 	strb.w	r5, [r0, #597]	@ 0x255
  ep->is_stall = 0U;
9000c5ca:	2500      	movs	r5, #0
  ep->num = ep_addr & EP_ADDR_MSK;
9000c5cc:	700a      	strb	r2, [r1, #0]
  ep->is_stall = 0U;
9000c5ce:	708d      	strb	r5, [r1, #2]
  __HAL_LOCK(hpcd);
9000c5d0:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c5d4:	2b01      	cmp	r3, #1
9000c5d6:	d018      	beq.n	9000c60a <HAL_PCD_EP_ClrStall+0x6e>
9000c5d8:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
9000c5da:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
9000c5dc:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
9000c5e0:	f002 ff56 	bl	9000f490 <USB_EPClearStall>
  return HAL_OK;
9000c5e4:	4628      	mov	r0, r5
  __HAL_UNLOCK(hpcd);
9000c5e6:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494
}
9000c5ea:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 1U;
9000c5ec:	eb02 00c2 	add.w	r0, r2, r2, lsl #3
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c5f0:	3314      	adds	r3, #20
    ep->is_in = 1U;
9000c5f2:	2501      	movs	r5, #1
9000c5f4:	eb04 0080 	add.w	r0, r4, r0, lsl #2
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c5f8:	18e1      	adds	r1, r4, r3
    ep->is_in = 1U;
9000c5fa:	7545      	strb	r5, [r0, #21]
  ep->is_stall = 0U;
9000c5fc:	2500      	movs	r5, #0
  ep->num = ep_addr & EP_ADDR_MSK;
9000c5fe:	700a      	strb	r2, [r1, #0]
  ep->is_stall = 0U;
9000c600:	708d      	strb	r5, [r1, #2]
  __HAL_LOCK(hpcd);
9000c602:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c606:	2b01      	cmp	r3, #1
9000c608:	d1e6      	bne.n	9000c5d8 <HAL_PCD_EP_ClrStall+0x3c>
9000c60a:	2002      	movs	r0, #2
}
9000c60c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000c60e:	2001      	movs	r0, #1
}
9000c610:	bd38      	pop	{r3, r4, r5, pc}
9000c612:	bf00      	nop

9000c614 <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
9000c614:	6800      	ldr	r0, [r0, #0]

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
9000c616:	0412      	lsls	r2, r2, #16
  Tx_Offset = hpcd->Instance->GRXFSIZ;
9000c618:	6a43      	ldr	r3, [r0, #36]	@ 0x24
  if (fifo == 0U)
9000c61a:	b919      	cbnz	r1, 9000c624 <HAL_PCDEx_SetTxFiFo+0x10>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
9000c61c:	4313      	orrs	r3, r2
9000c61e:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
9000c620:	2000      	movs	r0, #0
9000c622:	4770      	bx	lr
{
9000c624:	b430      	push	{r4, r5}
    for (i = 0U; i < (fifo - 1U); i++)
9000c626:	3901      	subs	r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
9000c628:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000c62a:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c62e:	d06b      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c630:	f8d0 4104 	ldr.w	r4, [r0, #260]	@ 0x104
    for (i = 0U; i < (fifo - 1U); i++)
9000c634:	2901      	cmp	r1, #1
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c636:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c63a:	d065      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c63c:	f8d0 4108 	ldr.w	r4, [r0, #264]	@ 0x108
    for (i = 0U; i < (fifo - 1U); i++)
9000c640:	2902      	cmp	r1, #2
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c642:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c646:	d05f      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c648:	f8d0 410c 	ldr.w	r4, [r0, #268]	@ 0x10c
    for (i = 0U; i < (fifo - 1U); i++)
9000c64c:	2903      	cmp	r1, #3
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c64e:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c652:	d059      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c654:	f8d0 4110 	ldr.w	r4, [r0, #272]	@ 0x110
    for (i = 0U; i < (fifo - 1U); i++)
9000c658:	2904      	cmp	r1, #4
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c65a:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c65e:	d053      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c660:	f8d0 4114 	ldr.w	r4, [r0, #276]	@ 0x114
    for (i = 0U; i < (fifo - 1U); i++)
9000c664:	2905      	cmp	r1, #5
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c666:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c66a:	d04d      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c66c:	f8d0 4118 	ldr.w	r4, [r0, #280]	@ 0x118
    for (i = 0U; i < (fifo - 1U); i++)
9000c670:	2906      	cmp	r1, #6
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c672:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c676:	d047      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c678:	f8d0 411c 	ldr.w	r4, [r0, #284]	@ 0x11c
    for (i = 0U; i < (fifo - 1U); i++)
9000c67c:	2907      	cmp	r1, #7
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c67e:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c682:	d041      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c684:	f8d0 4120 	ldr.w	r4, [r0, #288]	@ 0x120
    for (i = 0U; i < (fifo - 1U); i++)
9000c688:	2908      	cmp	r1, #8
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c68a:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c68e:	d03b      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c690:	f8d0 4124 	ldr.w	r4, [r0, #292]	@ 0x124
    for (i = 0U; i < (fifo - 1U); i++)
9000c694:	2909      	cmp	r1, #9
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c696:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c69a:	d035      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c69c:	f8d0 4128 	ldr.w	r4, [r0, #296]	@ 0x128
    for (i = 0U; i < (fifo - 1U); i++)
9000c6a0:	290a      	cmp	r1, #10
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6a2:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6a6:	d02f      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6a8:	f8d0 412c 	ldr.w	r4, [r0, #300]	@ 0x12c
    for (i = 0U; i < (fifo - 1U); i++)
9000c6ac:	290b      	cmp	r1, #11
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6ae:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6b2:	d029      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6b4:	f8d0 4130 	ldr.w	r4, [r0, #304]	@ 0x130
    for (i = 0U; i < (fifo - 1U); i++)
9000c6b8:	290c      	cmp	r1, #12
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6ba:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6be:	d023      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6c0:	f8d0 4134 	ldr.w	r4, [r0, #308]	@ 0x134
    for (i = 0U; i < (fifo - 1U); i++)
9000c6c4:	290d      	cmp	r1, #13
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6c6:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6ca:	d01d      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6cc:	f8d0 4138 	ldr.w	r4, [r0, #312]	@ 0x138
    for (i = 0U; i < (fifo - 1U); i++)
9000c6d0:	290e      	cmp	r1, #14
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6d2:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6d6:	d017      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6d8:	f8d0 413c 	ldr.w	r4, [r0, #316]	@ 0x13c
    for (i = 0U; i < (fifo - 1U); i++)
9000c6dc:	290f      	cmp	r1, #15
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6de:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6e2:	d011      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6e4:	f8d0 4140 	ldr.w	r4, [r0, #320]	@ 0x140
    for (i = 0U; i < (fifo - 1U); i++)
9000c6e8:	2910      	cmp	r1, #16
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6ea:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6ee:	d00b      	beq.n	9000c708 <HAL_PCDEx_SetTxFiFo+0xf4>
9000c6f0:	2410      	movs	r4, #16
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6f2:	f104 0c40 	add.w	ip, r4, #64	@ 0x40
    for (i = 0U; i < (fifo - 1U); i++)
9000c6f6:	3401      	adds	r4, #1
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6f8:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
    for (i = 0U; i < (fifo - 1U); i++)
9000c6fc:	428c      	cmp	r4, r1
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6fe:	f8dc 5004 	ldr.w	r5, [ip, #4]
9000c702:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c706:	d3f4      	bcc.n	9000c6f2 <HAL_PCDEx_SetTxFiFo+0xde>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
9000c708:	3140      	adds	r1, #64	@ 0x40
9000c70a:	431a      	orrs	r2, r3
9000c70c:	eb00 0381 	add.w	r3, r0, r1, lsl #2
}
9000c710:	2000      	movs	r0, #0
9000c712:	bc30      	pop	{r4, r5}
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
9000c714:	605a      	str	r2, [r3, #4]
}
9000c716:	4770      	bx	lr

9000c718 <HAL_PCDEx_SetRxFiFo>:
  * @param  hpcd PCD handle
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
9000c718:	4603      	mov	r3, r0
  hpcd->Instance->GRXFSIZ = size;

  return HAL_OK;
}
9000c71a:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
9000c71c:	681b      	ldr	r3, [r3, #0]
9000c71e:	6259      	str	r1, [r3, #36]	@ 0x24
}
9000c720:	4770      	bx	lr
9000c722:	bf00      	nop

9000c724 <HAL_PCDEx_ActivateLPM>:
  * @brief  Activate LPM feature.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_ActivateLPM(PCD_HandleTypeDef *hpcd)
{
9000c724:	4603      	mov	r3, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;

  hpcd->lpm_active = 1U;
  hpcd->LPM_State = LPM_L0;
9000c726:	f04f 0c00 	mov.w	ip, #0
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
9000c72a:	4909      	ldr	r1, [pc, #36]	@ (9000c750 <HAL_PCDEx_ActivateLPM+0x2c>)
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000c72c:	681a      	ldr	r2, [r3, #0]

  return HAL_OK;
}
9000c72e:	4660      	mov	r0, ip
{
9000c730:	b410      	push	{r4}
  hpcd->lpm_active = 1U;
9000c732:	2401      	movs	r4, #1
  hpcd->LPM_State = LPM_L0;
9000c734:	f883 c4cc 	strb.w	ip, [r3, #1228]	@ 0x4cc
  hpcd->lpm_active = 1U;
9000c738:	f8c3 44d8 	str.w	r4, [r3, #1240]	@ 0x4d8
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
9000c73c:	6993      	ldr	r3, [r2, #24]
}
9000c73e:	f85d 4b04 	ldr.w	r4, [sp], #4
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
9000c742:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
9000c746:	6193      	str	r3, [r2, #24]
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
9000c748:	6d53      	ldr	r3, [r2, #84]	@ 0x54
9000c74a:	4319      	orrs	r1, r3
9000c74c:	6551      	str	r1, [r2, #84]	@ 0x54
}
9000c74e:	4770      	bx	lr
9000c750:	10000003 	.word	0x10000003

9000c754 <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
9000c754:	4770      	bx	lr
9000c756:	bf00      	nop

9000c758 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000c758:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000c75a:	4c10      	ldr	r4, [pc, #64]	@ (9000c79c <HAL_PWREx_ConfigSupply+0x44>)
9000c75c:	68e3      	ldr	r3, [r4, #12]
9000c75e:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000c762:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000c764:	d105      	bne.n	9000c772 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000c766:	f003 0307 	and.w	r3, r3, #7
9000c76a:	1a18      	subs	r0, r3, r0
9000c76c:	bf18      	it	ne
9000c76e:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000c770:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000c772:	f023 0307 	bic.w	r3, r3, #7
9000c776:	4303      	orrs	r3, r0
9000c778:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000c77a:	f7fb fbd9 	bl	90007f30 <HAL_GetTick>
9000c77e:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000c780:	e005      	b.n	9000c78e <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000c782:	f7fb fbd5 	bl	90007f30 <HAL_GetTick>
9000c786:	1b40      	subs	r0, r0, r5
9000c788:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000c78c:	d804      	bhi.n	9000c798 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000c78e:	6863      	ldr	r3, [r4, #4]
9000c790:	049b      	lsls	r3, r3, #18
9000c792:	d5f6      	bpl.n	9000c782 <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000c794:	2000      	movs	r0, #0
}
9000c796:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000c798:	2001      	movs	r0, #1
}
9000c79a:	bd38      	pop	{r3, r4, r5, pc}
9000c79c:	58024800 	.word	0x58024800

9000c7a0 <HAL_PWREx_EnableUSBVoltageDetector>:
  * @retval None.
  */
void HAL_PWREx_EnableUSBVoltageDetector (void)
{
  /* Enable the USB voltage detector */
  SET_BIT (PWR->CR3, PWR_CR3_USB33DEN);
9000c7a0:	4a02      	ldr	r2, [pc, #8]	@ (9000c7ac <HAL_PWREx_EnableUSBVoltageDetector+0xc>)
9000c7a2:	68d3      	ldr	r3, [r2, #12]
9000c7a4:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000c7a8:	60d3      	str	r3, [r2, #12]
}
9000c7aa:	4770      	bx	lr
9000c7ac:	58024800 	.word	0x58024800

9000c7b0 <HAL_PWREx_DisableUSBVoltageDetector>:
  * @retval None.
  */
void HAL_PWREx_DisableUSBVoltageDetector (void)
{
  /* Disable the USB voltage detector */
  CLEAR_BIT (PWR->CR3, PWR_CR3_USB33DEN);
9000c7b0:	4a02      	ldr	r2, [pc, #8]	@ (9000c7bc <HAL_PWREx_DisableUSBVoltageDetector+0xc>)
9000c7b2:	68d3      	ldr	r3, [r2, #12]
9000c7b4:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000c7b8:	60d3      	str	r3, [r2, #12]
}
9000c7ba:	4770      	bx	lr
9000c7bc:	58024800 	.word	0x58024800

9000c7c0 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c7c0:	4b33      	ldr	r3, [pc, #204]	@ (9000c890 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000c7c2:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c7c4:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c7c6:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c7c8:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000c7ca:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c7ce:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c7d0:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c7d4:	d036      	beq.n	9000c844 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c7d6:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c7da:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c7de:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c7e2:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c7e6:	fb05 f202 	mul.w	r2, r5, r2
9000c7ea:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c7ec:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c7f0:	ee06 2a90 	vmov	s13, r2
9000c7f4:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000c7f8:	d002      	beq.n	9000c800 <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000c7fa:	2902      	cmp	r1, #2
9000c7fc:	d042      	beq.n	9000c884 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000c7fe:	b319      	cbz	r1, 9000c848 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c800:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000c894 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000c804:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000c808:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000c80a:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c80e:	ee07 3a90 	vmov	s15, r3
9000c812:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c816:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c81a:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000c81e:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000c822:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c826:	4b1a      	ldr	r3, [pc, #104]	@ (9000c890 <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000c828:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000c82a:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c82e:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c830:	ee07 3a10 	vmov	s14, r3
9000c834:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000c838:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000c83c:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000c840:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000c844:	bc30      	pop	{r4, r5}
9000c846:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c848:	681a      	ldr	r2, [r3, #0]
9000c84a:	0692      	lsls	r2, r2, #26
9000c84c:	d51d      	bpl.n	9000c88a <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c84e:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c850:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c854:	4a10      	ldr	r2, [pc, #64]	@ (9000c898 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c856:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c858:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c85c:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c860:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c862:	ee07 3a90 	vmov	s15, r3
9000c866:	ee06 2a10 	vmov	s12, r2
9000c86a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c86e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c872:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000c876:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000c87a:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000c87e:	ee67 7a87 	vmul.f32	s15, s15, s14
9000c882:	e7d0      	b.n	9000c826 <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c884:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c89c <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000c888:	e7bc      	b.n	9000c804 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c88a:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c8a0 <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000c88e:	e7b9      	b.n	9000c804 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000c890:	58024400 	.word	0x58024400
9000c894:	4a742400 	.word	0x4a742400
9000c898:	03d09000 	.word	0x03d09000
9000c89c:	4bbebc20 	.word	0x4bbebc20
9000c8a0:	4c742400 	.word	0x4c742400

9000c8a4 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000c8a4:	2800      	cmp	r0, #0
9000c8a6:	f000 82e9 	beq.w	9000ce7c <HAL_RCC_OscConfig+0x5d8>
{
9000c8aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000c8ac:	6803      	ldr	r3, [r0, #0]
9000c8ae:	4604      	mov	r4, r0
9000c8b0:	07d9      	lsls	r1, r3, #31
9000c8b2:	d52e      	bpl.n	9000c912 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c8b4:	4997      	ldr	r1, [pc, #604]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
9000c8b6:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c8b8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c8ba:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000c8be:	2a10      	cmp	r2, #16
9000c8c0:	f000 80ee 	beq.w	9000caa0 <HAL_RCC_OscConfig+0x1fc>
9000c8c4:	2a18      	cmp	r2, #24
9000c8c6:	f000 80e6 	beq.w	9000ca96 <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c8ca:	6863      	ldr	r3, [r4, #4]
9000c8cc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000c8d0:	f000 8111 	beq.w	9000caf6 <HAL_RCC_OscConfig+0x252>
9000c8d4:	2b00      	cmp	r3, #0
9000c8d6:	f000 8167 	beq.w	9000cba8 <HAL_RCC_OscConfig+0x304>
9000c8da:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000c8de:	4b8d      	ldr	r3, [pc, #564]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
9000c8e0:	681a      	ldr	r2, [r3, #0]
9000c8e2:	f000 828a 	beq.w	9000cdfa <HAL_RCC_OscConfig+0x556>
9000c8e6:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000c8ea:	601a      	str	r2, [r3, #0]
9000c8ec:	681a      	ldr	r2, [r3, #0]
9000c8ee:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000c8f2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000c8f4:	f7fb fb1c 	bl	90007f30 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c8f8:	4e86      	ldr	r6, [pc, #536]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000c8fa:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c8fc:	e005      	b.n	9000c90a <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000c8fe:	f7fb fb17 	bl	90007f30 <HAL_GetTick>
9000c902:	1b40      	subs	r0, r0, r5
9000c904:	2864      	cmp	r0, #100	@ 0x64
9000c906:	f200 814d 	bhi.w	9000cba4 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c90a:	6833      	ldr	r3, [r6, #0]
9000c90c:	039b      	lsls	r3, r3, #14
9000c90e:	d5f6      	bpl.n	9000c8fe <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000c910:	6823      	ldr	r3, [r4, #0]
9000c912:	079d      	lsls	r5, r3, #30
9000c914:	d470      	bmi.n	9000c9f8 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c916:	06d9      	lsls	r1, r3, #27
9000c918:	d533      	bpl.n	9000c982 <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c91a:	4a7e      	ldr	r2, [pc, #504]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
9000c91c:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c91e:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c920:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000c924:	2b08      	cmp	r3, #8
9000c926:	f000 80cb 	beq.w	9000cac0 <HAL_RCC_OscConfig+0x21c>
9000c92a:	2b18      	cmp	r3, #24
9000c92c:	f000 80c3 	beq.w	9000cab6 <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000c930:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000c932:	4d78      	ldr	r5, [pc, #480]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000c934:	2b00      	cmp	r3, #0
9000c936:	f000 816f 	beq.w	9000cc18 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000c93a:	682b      	ldr	r3, [r5, #0]
9000c93c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000c940:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c942:	f7fb faf5 	bl	90007f30 <HAL_GetTick>
9000c946:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c948:	e005      	b.n	9000c956 <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000c94a:	f7fb faf1 	bl	90007f30 <HAL_GetTick>
9000c94e:	1b80      	subs	r0, r0, r6
9000c950:	2802      	cmp	r0, #2
9000c952:	f200 8127 	bhi.w	9000cba4 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c956:	682b      	ldr	r3, [r5, #0]
9000c958:	05db      	lsls	r3, r3, #23
9000c95a:	d5f6      	bpl.n	9000c94a <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c95c:	f7fb fb00 	bl	90007f60 <HAL_GetREVID>
9000c960:	f241 0303 	movw	r3, #4099	@ 0x1003
9000c964:	4298      	cmp	r0, r3
9000c966:	f200 8269 	bhi.w	9000ce3c <HAL_RCC_OscConfig+0x598>
9000c96a:	6a22      	ldr	r2, [r4, #32]
9000c96c:	686b      	ldr	r3, [r5, #4]
9000c96e:	2a20      	cmp	r2, #32
9000c970:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000c974:	bf0c      	ite	eq
9000c976:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000c97a:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000c97e:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c980:	6823      	ldr	r3, [r4, #0]
9000c982:	071d      	lsls	r5, r3, #28
9000c984:	d516      	bpl.n	9000c9b4 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000c986:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000c988:	4d62      	ldr	r5, [pc, #392]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000c98a:	2b00      	cmp	r3, #0
9000c98c:	f000 8122 	beq.w	9000cbd4 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000c990:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000c992:	f043 0301 	orr.w	r3, r3, #1
9000c996:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000c998:	f7fb faca 	bl	90007f30 <HAL_GetTick>
9000c99c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000c99e:	e005      	b.n	9000c9ac <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000c9a0:	f7fb fac6 	bl	90007f30 <HAL_GetTick>
9000c9a4:	1b80      	subs	r0, r0, r6
9000c9a6:	2802      	cmp	r0, #2
9000c9a8:	f200 80fc 	bhi.w	9000cba4 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000c9ac:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000c9ae:	0798      	lsls	r0, r3, #30
9000c9b0:	d5f6      	bpl.n	9000c9a0 <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000c9b2:	6823      	ldr	r3, [r4, #0]
9000c9b4:	069a      	lsls	r2, r3, #26
9000c9b6:	d516      	bpl.n	9000c9e6 <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000c9b8:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000c9ba:	4d56      	ldr	r5, [pc, #344]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000c9bc:	2b00      	cmp	r3, #0
9000c9be:	f000 811a 	beq.w	9000cbf6 <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000c9c2:	682b      	ldr	r3, [r5, #0]
9000c9c4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000c9c8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000c9ca:	f7fb fab1 	bl	90007f30 <HAL_GetTick>
9000c9ce:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000c9d0:	e005      	b.n	9000c9de <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000c9d2:	f7fb faad 	bl	90007f30 <HAL_GetTick>
9000c9d6:	1b80      	subs	r0, r0, r6
9000c9d8:	2802      	cmp	r0, #2
9000c9da:	f200 80e3 	bhi.w	9000cba4 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000c9de:	682b      	ldr	r3, [r5, #0]
9000c9e0:	049f      	lsls	r7, r3, #18
9000c9e2:	d5f6      	bpl.n	9000c9d2 <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000c9e4:	6823      	ldr	r3, [r4, #0]
9000c9e6:	0759      	lsls	r1, r3, #29
9000c9e8:	f100 808b 	bmi.w	9000cb02 <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000c9ec:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000c9ee:	2b00      	cmp	r3, #0
9000c9f0:	f040 80bf 	bne.w	9000cb72 <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000c9f4:	2000      	movs	r0, #0
}
9000c9f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c9f8:	4a46      	ldr	r2, [pc, #280]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
9000c9fa:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c9fc:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c9fe:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000ca02:	d12d      	bne.n	9000ca60 <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000ca04:	4b43      	ldr	r3, [pc, #268]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000ca06:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000ca08:	681b      	ldr	r3, [r3, #0]
9000ca0a:	0759      	lsls	r1, r3, #29
9000ca0c:	d501      	bpl.n	9000ca12 <HAL_RCC_OscConfig+0x16e>
9000ca0e:	2a00      	cmp	r2, #0
9000ca10:	d04f      	beq.n	9000cab2 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ca12:	4d40      	ldr	r5, [pc, #256]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
9000ca14:	682b      	ldr	r3, [r5, #0]
9000ca16:	f023 0319 	bic.w	r3, r3, #25
9000ca1a:	4313      	orrs	r3, r2
9000ca1c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ca1e:	f7fb fa87 	bl	90007f30 <HAL_GetTick>
9000ca22:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ca24:	e005      	b.n	9000ca32 <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000ca26:	f7fb fa83 	bl	90007f30 <HAL_GetTick>
9000ca2a:	1b80      	subs	r0, r0, r6
9000ca2c:	2802      	cmp	r0, #2
9000ca2e:	f200 80b9 	bhi.w	9000cba4 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ca32:	682b      	ldr	r3, [r5, #0]
9000ca34:	075b      	lsls	r3, r3, #29
9000ca36:	d5f6      	bpl.n	9000ca26 <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000ca38:	f7fb fa92 	bl	90007f60 <HAL_GetREVID>
9000ca3c:	f241 0303 	movw	r3, #4099	@ 0x1003
9000ca40:	4298      	cmp	r0, r3
9000ca42:	f200 8110 	bhi.w	9000cc66 <HAL_RCC_OscConfig+0x3c2>
9000ca46:	6922      	ldr	r2, [r4, #16]
9000ca48:	686b      	ldr	r3, [r5, #4]
9000ca4a:	2a40      	cmp	r2, #64	@ 0x40
9000ca4c:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000ca50:	bf0c      	ite	eq
9000ca52:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000ca56:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000ca5a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000ca5c:	6823      	ldr	r3, [r4, #0]
9000ca5e:	e75a      	b.n	9000c916 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000ca60:	2b18      	cmp	r3, #24
9000ca62:	f000 80fc 	beq.w	9000cc5e <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ca66:	4d2b      	ldr	r5, [pc, #172]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000ca68:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ca6a:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000ca6c:	2a00      	cmp	r2, #0
9000ca6e:	f000 80e5 	beq.w	9000cc3c <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ca72:	f023 0319 	bic.w	r3, r3, #25
9000ca76:	4313      	orrs	r3, r2
9000ca78:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ca7a:	f7fb fa59 	bl	90007f30 <HAL_GetTick>
9000ca7e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ca80:	e005      	b.n	9000ca8e <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000ca82:	f7fb fa55 	bl	90007f30 <HAL_GetTick>
9000ca86:	1b80      	subs	r0, r0, r6
9000ca88:	2802      	cmp	r0, #2
9000ca8a:	f200 808b 	bhi.w	9000cba4 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ca8e:	682b      	ldr	r3, [r5, #0]
9000ca90:	075f      	lsls	r7, r3, #29
9000ca92:	d5f6      	bpl.n	9000ca82 <HAL_RCC_OscConfig+0x1de>
9000ca94:	e7d0      	b.n	9000ca38 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000ca96:	f001 0103 	and.w	r1, r1, #3
9000ca9a:	2902      	cmp	r1, #2
9000ca9c:	f47f af15 	bne.w	9000c8ca <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000caa0:	4a1c      	ldr	r2, [pc, #112]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
9000caa2:	6812      	ldr	r2, [r2, #0]
9000caa4:	0392      	lsls	r2, r2, #14
9000caa6:	f57f af34 	bpl.w	9000c912 <HAL_RCC_OscConfig+0x6e>
9000caaa:	6862      	ldr	r2, [r4, #4]
9000caac:	2a00      	cmp	r2, #0
9000caae:	f47f af30 	bne.w	9000c912 <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000cab2:	2001      	movs	r0, #1
}
9000cab4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000cab6:	f002 0203 	and.w	r2, r2, #3
9000caba:	2a01      	cmp	r2, #1
9000cabc:	f47f af38 	bne.w	9000c930 <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000cac0:	4b14      	ldr	r3, [pc, #80]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
9000cac2:	681b      	ldr	r3, [r3, #0]
9000cac4:	05da      	lsls	r2, r3, #23
9000cac6:	d502      	bpl.n	9000cace <HAL_RCC_OscConfig+0x22a>
9000cac8:	69e3      	ldr	r3, [r4, #28]
9000caca:	2b80      	cmp	r3, #128	@ 0x80
9000cacc:	d1f1      	bne.n	9000cab2 <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000cace:	f7fb fa47 	bl	90007f60 <HAL_GetREVID>
9000cad2:	f241 0303 	movw	r3, #4099	@ 0x1003
9000cad6:	4298      	cmp	r0, r3
9000cad8:	f200 80ce 	bhi.w	9000cc78 <HAL_RCC_OscConfig+0x3d4>
9000cadc:	6a22      	ldr	r2, [r4, #32]
9000cade:	2a20      	cmp	r2, #32
9000cae0:	f000 81bb 	beq.w	9000ce5a <HAL_RCC_OscConfig+0x5b6>
9000cae4:	490b      	ldr	r1, [pc, #44]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
9000cae6:	684b      	ldr	r3, [r1, #4]
9000cae8:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000caec:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000caf0:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000caf2:	6823      	ldr	r3, [r4, #0]
9000caf4:	e745      	b.n	9000c982 <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000caf6:	4a07      	ldr	r2, [pc, #28]	@ (9000cb14 <HAL_RCC_OscConfig+0x270>)
9000caf8:	6813      	ldr	r3, [r2, #0]
9000cafa:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000cafe:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000cb00:	e6f8      	b.n	9000c8f4 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000cb02:	4d05      	ldr	r5, [pc, #20]	@ (9000cb18 <HAL_RCC_OscConfig+0x274>)
9000cb04:	682b      	ldr	r3, [r5, #0]
9000cb06:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000cb0a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000cb0c:	f7fb fa10 	bl	90007f30 <HAL_GetTick>
9000cb10:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000cb12:	e008      	b.n	9000cb26 <HAL_RCC_OscConfig+0x282>
9000cb14:	58024400 	.word	0x58024400
9000cb18:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000cb1c:	f7fb fa08 	bl	90007f30 <HAL_GetTick>
9000cb20:	1b80      	subs	r0, r0, r6
9000cb22:	2864      	cmp	r0, #100	@ 0x64
9000cb24:	d83e      	bhi.n	9000cba4 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000cb26:	682b      	ldr	r3, [r5, #0]
9000cb28:	05da      	lsls	r2, r3, #23
9000cb2a:	d5f7      	bpl.n	9000cb1c <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000cb2c:	68a3      	ldr	r3, [r4, #8]
9000cb2e:	2b01      	cmp	r3, #1
9000cb30:	f000 818d 	beq.w	9000ce4e <HAL_RCC_OscConfig+0x5aa>
9000cb34:	2b00      	cmp	r3, #0
9000cb36:	f000 8168 	beq.w	9000ce0a <HAL_RCC_OscConfig+0x566>
9000cb3a:	2b05      	cmp	r3, #5
9000cb3c:	4b85      	ldr	r3, [pc, #532]	@ (9000cd54 <HAL_RCC_OscConfig+0x4b0>)
9000cb3e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000cb40:	f000 8194 	beq.w	9000ce6c <HAL_RCC_OscConfig+0x5c8>
9000cb44:	f022 0201 	bic.w	r2, r2, #1
9000cb48:	671a      	str	r2, [r3, #112]	@ 0x70
9000cb4a:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000cb4c:	f022 0204 	bic.w	r2, r2, #4
9000cb50:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000cb52:	f7fb f9ed 	bl	90007f30 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000cb56:	4e7f      	ldr	r6, [pc, #508]	@ (9000cd54 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cb58:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000cb5c:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000cb5e:	e004      	b.n	9000cb6a <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cb60:	f7fb f9e6 	bl	90007f30 <HAL_GetTick>
9000cb64:	1b40      	subs	r0, r0, r5
9000cb66:	42b8      	cmp	r0, r7
9000cb68:	d81c      	bhi.n	9000cba4 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000cb6a:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000cb6c:	079b      	lsls	r3, r3, #30
9000cb6e:	d5f7      	bpl.n	9000cb60 <HAL_RCC_OscConfig+0x2bc>
9000cb70:	e73c      	b.n	9000c9ec <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000cb72:	4d78      	ldr	r5, [pc, #480]	@ (9000cd54 <HAL_RCC_OscConfig+0x4b0>)
9000cb74:	692a      	ldr	r2, [r5, #16]
9000cb76:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000cb7a:	2a18      	cmp	r2, #24
9000cb7c:	f000 80f0 	beq.w	9000cd60 <HAL_RCC_OscConfig+0x4bc>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000cb80:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000cb82:	682b      	ldr	r3, [r5, #0]
9000cb84:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000cb88:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000cb8a:	d07f      	beq.n	9000cc8c <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000cb8c:	f7fb f9d0 	bl	90007f30 <HAL_GetTick>
9000cb90:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000cb92:	682b      	ldr	r3, [r5, #0]
9000cb94:	019b      	lsls	r3, r3, #6
9000cb96:	f57f af2d 	bpl.w	9000c9f4 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000cb9a:	f7fb f9c9 	bl	90007f30 <HAL_GetTick>
9000cb9e:	1b00      	subs	r0, r0, r4
9000cba0:	2802      	cmp	r0, #2
9000cba2:	d9f6      	bls.n	9000cb92 <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000cba4:	2003      	movs	r0, #3
}
9000cba6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000cba8:	4d6a      	ldr	r5, [pc, #424]	@ (9000cd54 <HAL_RCC_OscConfig+0x4b0>)
9000cbaa:	682b      	ldr	r3, [r5, #0]
9000cbac:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000cbb0:	602b      	str	r3, [r5, #0]
9000cbb2:	682b      	ldr	r3, [r5, #0]
9000cbb4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000cbb8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000cbba:	f7fb f9b9 	bl	90007f30 <HAL_GetTick>
9000cbbe:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000cbc0:	e004      	b.n	9000cbcc <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000cbc2:	f7fb f9b5 	bl	90007f30 <HAL_GetTick>
9000cbc6:	1b80      	subs	r0, r0, r6
9000cbc8:	2864      	cmp	r0, #100	@ 0x64
9000cbca:	d8eb      	bhi.n	9000cba4 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000cbcc:	682b      	ldr	r3, [r5, #0]
9000cbce:	039f      	lsls	r7, r3, #14
9000cbd0:	d4f7      	bmi.n	9000cbc2 <HAL_RCC_OscConfig+0x31e>
9000cbd2:	e69d      	b.n	9000c910 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000cbd4:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000cbd6:	f023 0301 	bic.w	r3, r3, #1
9000cbda:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000cbdc:	f7fb f9a8 	bl	90007f30 <HAL_GetTick>
9000cbe0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000cbe2:	e004      	b.n	9000cbee <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000cbe4:	f7fb f9a4 	bl	90007f30 <HAL_GetTick>
9000cbe8:	1b80      	subs	r0, r0, r6
9000cbea:	2802      	cmp	r0, #2
9000cbec:	d8da      	bhi.n	9000cba4 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000cbee:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000cbf0:	0799      	lsls	r1, r3, #30
9000cbf2:	d4f7      	bmi.n	9000cbe4 <HAL_RCC_OscConfig+0x340>
9000cbf4:	e6dd      	b.n	9000c9b2 <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000cbf6:	682b      	ldr	r3, [r5, #0]
9000cbf8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000cbfc:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000cbfe:	f7fb f997 	bl	90007f30 <HAL_GetTick>
9000cc02:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000cc04:	e004      	b.n	9000cc10 <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000cc06:	f7fb f993 	bl	90007f30 <HAL_GetTick>
9000cc0a:	1b80      	subs	r0, r0, r6
9000cc0c:	2802      	cmp	r0, #2
9000cc0e:	d8c9      	bhi.n	9000cba4 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000cc10:	682b      	ldr	r3, [r5, #0]
9000cc12:	0498      	lsls	r0, r3, #18
9000cc14:	d4f7      	bmi.n	9000cc06 <HAL_RCC_OscConfig+0x362>
9000cc16:	e6e5      	b.n	9000c9e4 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000cc18:	682b      	ldr	r3, [r5, #0]
9000cc1a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000cc1e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000cc20:	f7fb f986 	bl	90007f30 <HAL_GetTick>
9000cc24:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000cc26:	e004      	b.n	9000cc32 <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000cc28:	f7fb f982 	bl	90007f30 <HAL_GetTick>
9000cc2c:	1b80      	subs	r0, r0, r6
9000cc2e:	2802      	cmp	r0, #2
9000cc30:	d8b8      	bhi.n	9000cba4 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000cc32:	682b      	ldr	r3, [r5, #0]
9000cc34:	05df      	lsls	r7, r3, #23
9000cc36:	d4f7      	bmi.n	9000cc28 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000cc38:	6823      	ldr	r3, [r4, #0]
9000cc3a:	e6a2      	b.n	9000c982 <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000cc3c:	f023 0301 	bic.w	r3, r3, #1
9000cc40:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000cc42:	f7fb f975 	bl	90007f30 <HAL_GetTick>
9000cc46:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000cc48:	e004      	b.n	9000cc54 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000cc4a:	f7fb f971 	bl	90007f30 <HAL_GetTick>
9000cc4e:	1b80      	subs	r0, r0, r6
9000cc50:	2802      	cmp	r0, #2
9000cc52:	d8a7      	bhi.n	9000cba4 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000cc54:	682b      	ldr	r3, [r5, #0]
9000cc56:	0758      	lsls	r0, r3, #29
9000cc58:	d4f7      	bmi.n	9000cc4a <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000cc5a:	6823      	ldr	r3, [r4, #0]
9000cc5c:	e65b      	b.n	9000c916 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000cc5e:	0790      	lsls	r0, r2, #30
9000cc60:	f47f af01 	bne.w	9000ca66 <HAL_RCC_OscConfig+0x1c2>
9000cc64:	e6ce      	b.n	9000ca04 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000cc66:	686b      	ldr	r3, [r5, #4]
9000cc68:	6922      	ldr	r2, [r4, #16]
9000cc6a:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000cc6e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000cc72:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000cc74:	6823      	ldr	r3, [r4, #0]
9000cc76:	e64e      	b.n	9000c916 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000cc78:	4a36      	ldr	r2, [pc, #216]	@ (9000cd54 <HAL_RCC_OscConfig+0x4b0>)
9000cc7a:	6a21      	ldr	r1, [r4, #32]
9000cc7c:	68d3      	ldr	r3, [r2, #12]
9000cc7e:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000cc82:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000cc86:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000cc88:	6823      	ldr	r3, [r4, #0]
9000cc8a:	e67a      	b.n	9000c982 <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000cc8c:	f7fb f950 	bl	90007f30 <HAL_GetTick>
9000cc90:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000cc92:	e004      	b.n	9000cc9e <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000cc94:	f7fb f94c 	bl	90007f30 <HAL_GetTick>
9000cc98:	1b80      	subs	r0, r0, r6
9000cc9a:	2802      	cmp	r0, #2
9000cc9c:	d882      	bhi.n	9000cba4 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000cc9e:	682b      	ldr	r3, [r5, #0]
9000cca0:	0199      	lsls	r1, r3, #6
9000cca2:	d4f7      	bmi.n	9000cc94 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000cca4:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000cca6:	4b2c      	ldr	r3, [pc, #176]	@ (9000cd58 <HAL_RCC_OscConfig+0x4b4>)
9000cca8:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000ccaa:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ccac:	492b      	ldr	r1, [pc, #172]	@ (9000cd5c <HAL_RCC_OscConfig+0x4b8>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000ccae:	4e29      	ldr	r6, [pc, #164]	@ (9000cd54 <HAL_RCC_OscConfig+0x4b0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000ccb0:	4313      	orrs	r3, r2
9000ccb2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000ccb4:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000ccb8:	62ab      	str	r3, [r5, #40]	@ 0x28
9000ccba:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000ccbe:	3b01      	subs	r3, #1
9000ccc0:	3a01      	subs	r2, #1
9000ccc2:	025b      	lsls	r3, r3, #9
9000ccc4:	0412      	lsls	r2, r2, #16
9000ccc6:	b29b      	uxth	r3, r3
9000ccc8:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000cccc:	4313      	orrs	r3, r2
9000ccce:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000ccd0:	3a01      	subs	r2, #1
9000ccd2:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000ccd6:	4313      	orrs	r3, r2
9000ccd8:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000ccda:	3a01      	subs	r2, #1
9000ccdc:	0612      	lsls	r2, r2, #24
9000ccde:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000cce2:	4313      	orrs	r3, r2
9000cce4:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000cce6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000cce8:	f023 0301 	bic.w	r3, r3, #1
9000ccec:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ccee:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
9000ccf0:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
9000ccf2:	4011      	ands	r1, r2
9000ccf4:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000ccf8:	6369      	str	r1, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000ccfa:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ccfc:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000ccfe:	f023 030c 	bic.w	r3, r3, #12
9000cd02:	4313      	orrs	r3, r2
9000cd04:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000cd06:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000cd08:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000cd0a:	f023 0302 	bic.w	r3, r3, #2
9000cd0e:	4313      	orrs	r3, r2
9000cd10:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000cd12:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000cd14:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000cd18:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cd1a:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000cd1c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000cd20:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000cd22:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000cd24:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000cd28:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000cd2a:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000cd2c:	f043 0301 	orr.w	r3, r3, #1
9000cd30:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000cd32:	682b      	ldr	r3, [r5, #0]
9000cd34:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000cd38:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000cd3a:	f7fb f8f9 	bl	90007f30 <HAL_GetTick>
9000cd3e:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000cd40:	6833      	ldr	r3, [r6, #0]
9000cd42:	019a      	lsls	r2, r3, #6
9000cd44:	f53f ae56 	bmi.w	9000c9f4 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000cd48:	f7fb f8f2 	bl	90007f30 <HAL_GetTick>
9000cd4c:	1b00      	subs	r0, r0, r4
9000cd4e:	2802      	cmp	r0, #2
9000cd50:	d9f6      	bls.n	9000cd40 <HAL_RCC_OscConfig+0x49c>
9000cd52:	e727      	b.n	9000cba4 <HAL_RCC_OscConfig+0x300>
9000cd54:	58024400 	.word	0x58024400
9000cd58:	fffffc0c 	.word	0xfffffc0c
9000cd5c:	ffff0007 	.word	0xffff0007
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000cd60:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000cd62:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000cd64:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000cd66:	f43f aea4 	beq.w	9000cab2 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000cd6a:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000cd6e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000cd70:	428b      	cmp	r3, r1
9000cd72:	f47f ae9e 	bne.w	9000cab2 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000cd76:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000cd7a:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000cd7c:	429a      	cmp	r2, r3
9000cd7e:	f47f ae98 	bne.w	9000cab2 <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000cd82:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000cd84:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000cd88:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000cd8a:	429a      	cmp	r2, r3
9000cd8c:	f47f ae91 	bne.w	9000cab2 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000cd90:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000cd92:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000cd96:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000cd98:	429a      	cmp	r2, r3
9000cd9a:	f47f ae8a 	bne.w	9000cab2 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000cd9e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000cda0:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000cda4:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000cda6:	429a      	cmp	r2, r3
9000cda8:	f47f ae83 	bne.w	9000cab2 <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000cdac:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000cdae:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000cdb2:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000cdb4:	4298      	cmp	r0, r3
9000cdb6:	f47f ae7c 	bne.w	9000cab2 <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000cdba:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000cdbc:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000cdbe:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000cdc2:	429a      	cmp	r2, r3
9000cdc4:	f43f ae16 	beq.w	9000c9f4 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000cdc8:	4a2d      	ldr	r2, [pc, #180]	@ (9000ce80 <HAL_RCC_OscConfig+0x5dc>)
9000cdca:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000cdcc:	f023 0301 	bic.w	r3, r3, #1
9000cdd0:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000cdd2:	f7fb f8ad 	bl	90007f30 <HAL_GetTick>
9000cdd6:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000cdd8:	f7fb f8aa 	bl	90007f30 <HAL_GetTick>
9000cddc:	42a8      	cmp	r0, r5
9000cdde:	d0fb      	beq.n	9000cdd8 <HAL_RCC_OscConfig+0x534>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000cde0:	4a27      	ldr	r2, [pc, #156]	@ (9000ce80 <HAL_RCC_OscConfig+0x5dc>)
9000cde2:	4b28      	ldr	r3, [pc, #160]	@ (9000ce84 <HAL_RCC_OscConfig+0x5e0>)
9000cde4:	6b50      	ldr	r0, [r2, #52]	@ 0x34
9000cde6:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000cde8:	4003      	ands	r3, r0
9000cdea:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000cdee:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000cdf0:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000cdf2:	f043 0301 	orr.w	r3, r3, #1
9000cdf6:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000cdf8:	e5fc      	b.n	9000c9f4 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000cdfa:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000cdfe:	601a      	str	r2, [r3, #0]
9000ce00:	681a      	ldr	r2, [r3, #0]
9000ce02:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000ce06:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000ce08:	e574      	b.n	9000c8f4 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ce0a:	4d1d      	ldr	r5, [pc, #116]	@ (9000ce80 <HAL_RCC_OscConfig+0x5dc>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ce0c:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ce10:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ce12:	f023 0301 	bic.w	r3, r3, #1
9000ce16:	672b      	str	r3, [r5, #112]	@ 0x70
9000ce18:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ce1a:	f023 0304 	bic.w	r3, r3, #4
9000ce1e:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000ce20:	f7fb f886 	bl	90007f30 <HAL_GetTick>
9000ce24:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000ce26:	e005      	b.n	9000ce34 <HAL_RCC_OscConfig+0x590>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ce28:	f7fb f882 	bl	90007f30 <HAL_GetTick>
9000ce2c:	1b80      	subs	r0, r0, r6
9000ce2e:	42b8      	cmp	r0, r7
9000ce30:	f63f aeb8 	bhi.w	9000cba4 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000ce34:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ce36:	0798      	lsls	r0, r3, #30
9000ce38:	d4f6      	bmi.n	9000ce28 <HAL_RCC_OscConfig+0x584>
9000ce3a:	e5d7      	b.n	9000c9ec <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ce3c:	68eb      	ldr	r3, [r5, #12]
9000ce3e:	6a22      	ldr	r2, [r4, #32]
9000ce40:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000ce44:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000ce48:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ce4a:	6823      	ldr	r3, [r4, #0]
9000ce4c:	e599      	b.n	9000c982 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ce4e:	4a0c      	ldr	r2, [pc, #48]	@ (9000ce80 <HAL_RCC_OscConfig+0x5dc>)
9000ce50:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000ce52:	f043 0301 	orr.w	r3, r3, #1
9000ce56:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ce58:	e67b      	b.n	9000cb52 <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ce5a:	4a09      	ldr	r2, [pc, #36]	@ (9000ce80 <HAL_RCC_OscConfig+0x5dc>)
9000ce5c:	6853      	ldr	r3, [r2, #4]
9000ce5e:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000ce62:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000ce66:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ce68:	6823      	ldr	r3, [r4, #0]
9000ce6a:	e58a      	b.n	9000c982 <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ce6c:	f042 0204 	orr.w	r2, r2, #4
9000ce70:	671a      	str	r2, [r3, #112]	@ 0x70
9000ce72:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ce74:	f042 0201 	orr.w	r2, r2, #1
9000ce78:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ce7a:	e66a      	b.n	9000cb52 <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000ce7c:	2001      	movs	r0, #1
}
9000ce7e:	4770      	bx	lr
9000ce80:	58024400 	.word	0x58024400
9000ce84:	ffff0007 	.word	0xffff0007

9000ce88 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ce88:	4a3f      	ldr	r2, [pc, #252]	@ (9000cf88 <HAL_RCC_GetSysClockFreq+0x100>)
9000ce8a:	6913      	ldr	r3, [r2, #16]
9000ce8c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ce90:	2b10      	cmp	r3, #16
9000ce92:	d004      	beq.n	9000ce9e <HAL_RCC_GetSysClockFreq+0x16>
9000ce94:	2b18      	cmp	r3, #24
9000ce96:	d00d      	beq.n	9000ceb4 <HAL_RCC_GetSysClockFreq+0x2c>
9000ce98:	b11b      	cbz	r3, 9000cea2 <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000ce9a:	483c      	ldr	r0, [pc, #240]	@ (9000cf8c <HAL_RCC_GetSysClockFreq+0x104>)
9000ce9c:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ce9e:	483c      	ldr	r0, [pc, #240]	@ (9000cf90 <HAL_RCC_GetSysClockFreq+0x108>)
9000cea0:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cea2:	6813      	ldr	r3, [r2, #0]
9000cea4:	0699      	lsls	r1, r3, #26
9000cea6:	d548      	bpl.n	9000cf3a <HAL_RCC_GetSysClockFreq+0xb2>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cea8:	6813      	ldr	r3, [r2, #0]
9000ceaa:	483a      	ldr	r0, [pc, #232]	@ (9000cf94 <HAL_RCC_GetSysClockFreq+0x10c>)
9000ceac:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ceb0:	40d8      	lsrs	r0, r3
9000ceb2:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ceb4:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000ceb6:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ceb8:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ceba:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000cebc:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000cec0:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000cec2:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000cec6:	d036      	beq.n	9000cf36 <HAL_RCC_GetSysClockFreq+0xae>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000cec8:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000cecc:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ced0:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ced4:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ced8:	fb05 f303 	mul.w	r3, r5, r3
9000cedc:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cede:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000cee2:	ee06 3a90 	vmov	s13, r3
9000cee6:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000ceea:	d002      	beq.n	9000cef2 <HAL_RCC_GetSysClockFreq+0x6a>
9000ceec:	2902      	cmp	r1, #2
9000ceee:	d026      	beq.n	9000cf3e <HAL_RCC_GetSysClockFreq+0xb6>
9000cef0:	b341      	cbz	r1, 9000cf44 <HAL_RCC_GetSysClockFreq+0xbc>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cef2:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 9000cf98 <HAL_RCC_GetSysClockFreq+0x110>
9000cef6:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000cefa:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000cefc:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000cf00:	ee07 3a10 	vmov	s14, r3
9000cf04:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000cf08:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000cf0c:	ee37 7a26 	vadd.f32	s14, s14, s13
9000cf10:	ee37 7a25 	vadd.f32	s14, s14, s11
9000cf14:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000cf18:	4b1b      	ldr	r3, [pc, #108]	@ (9000cf88 <HAL_RCC_GetSysClockFreq+0x100>)
9000cf1a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000cf1c:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000cf20:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000cf22:	ee07 3a90 	vmov	s15, r3
9000cf26:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000cf2a:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000cf2e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000cf32:	ee17 0a90 	vmov	r0, s15
}
9000cf36:	bc30      	pop	{r4, r5}
9000cf38:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000cf3a:	4816      	ldr	r0, [pc, #88]	@ (9000cf94 <HAL_RCC_GetSysClockFreq+0x10c>)
}
9000cf3c:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf3e:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 9000cf9c <HAL_RCC_GetSysClockFreq+0x114>
9000cf42:	e7d8      	b.n	9000cef6 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cf44:	6813      	ldr	r3, [r2, #0]
9000cf46:	069b      	lsls	r3, r3, #26
9000cf48:	d51a      	bpl.n	9000cf80 <HAL_RCC_GetSysClockFreq+0xf8>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cf4a:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf4c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000cf50:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cf52:	4910      	ldr	r1, [pc, #64]	@ (9000cf94 <HAL_RCC_GetSysClockFreq+0x10c>)
9000cf54:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf58:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cf5c:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf5e:	ee07 3a10 	vmov	s14, r3
9000cf62:	ee06 1a10 	vmov	s12, r1
9000cf66:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000cf6a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000cf6e:	ee77 6a26 	vadd.f32	s13, s14, s13
9000cf72:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000cf76:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000cf7a:	ee27 7a27 	vmul.f32	s14, s14, s15
9000cf7e:	e7cb      	b.n	9000cf18 <HAL_RCC_GetSysClockFreq+0x90>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf80:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000cfa0 <HAL_RCC_GetSysClockFreq+0x118>
9000cf84:	e7b7      	b.n	9000cef6 <HAL_RCC_GetSysClockFreq+0x6e>
9000cf86:	bf00      	nop
9000cf88:	58024400 	.word	0x58024400
9000cf8c:	003d0900 	.word	0x003d0900
9000cf90:	017d7840 	.word	0x017d7840
9000cf94:	03d09000 	.word	0x03d09000
9000cf98:	4a742400 	.word	0x4a742400
9000cf9c:	4bbebc20 	.word	0x4bbebc20
9000cfa0:	4c742400 	.word	0x4c742400

9000cfa4 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000cfa4:	2800      	cmp	r0, #0
9000cfa6:	f000 810e 	beq.w	9000d1c6 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000cfaa:	4a8d      	ldr	r2, [pc, #564]	@ (9000d1e0 <HAL_RCC_ClockConfig+0x23c>)
9000cfac:	6813      	ldr	r3, [r2, #0]
9000cfae:	f003 030f 	and.w	r3, r3, #15
9000cfb2:	428b      	cmp	r3, r1
{
9000cfb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000cfb8:	4604      	mov	r4, r0
9000cfba:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000cfbc:	d20c      	bcs.n	9000cfd8 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000cfbe:	6813      	ldr	r3, [r2, #0]
9000cfc0:	f023 030f 	bic.w	r3, r3, #15
9000cfc4:	430b      	orrs	r3, r1
9000cfc6:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000cfc8:	6813      	ldr	r3, [r2, #0]
9000cfca:	f003 030f 	and.w	r3, r3, #15
9000cfce:	428b      	cmp	r3, r1
9000cfd0:	d002      	beq.n	9000cfd8 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000cfd2:	2001      	movs	r0, #1
}
9000cfd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000cfd8:	6823      	ldr	r3, [r4, #0]
9000cfda:	0758      	lsls	r0, r3, #29
9000cfdc:	d50b      	bpl.n	9000cff6 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000cfde:	4981      	ldr	r1, [pc, #516]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000cfe0:	6920      	ldr	r0, [r4, #16]
9000cfe2:	698a      	ldr	r2, [r1, #24]
9000cfe4:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000cfe8:	4290      	cmp	r0, r2
9000cfea:	d904      	bls.n	9000cff6 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000cfec:	698a      	ldr	r2, [r1, #24]
9000cfee:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000cff2:	4302      	orrs	r2, r0
9000cff4:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000cff6:	0719      	lsls	r1, r3, #28
9000cff8:	d50b      	bpl.n	9000d012 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000cffa:	497a      	ldr	r1, [pc, #488]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000cffc:	6960      	ldr	r0, [r4, #20]
9000cffe:	69ca      	ldr	r2, [r1, #28]
9000d000:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d004:	4290      	cmp	r0, r2
9000d006:	d904      	bls.n	9000d012 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000d008:	69ca      	ldr	r2, [r1, #28]
9000d00a:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000d00e:	4302      	orrs	r2, r0
9000d010:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000d012:	06da      	lsls	r2, r3, #27
9000d014:	d50b      	bpl.n	9000d02e <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000d016:	4973      	ldr	r1, [pc, #460]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d018:	69a0      	ldr	r0, [r4, #24]
9000d01a:	69ca      	ldr	r2, [r1, #28]
9000d01c:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000d020:	4290      	cmp	r0, r2
9000d022:	d904      	bls.n	9000d02e <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000d024:	69ca      	ldr	r2, [r1, #28]
9000d026:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000d02a:	4302      	orrs	r2, r0
9000d02c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000d02e:	069f      	lsls	r7, r3, #26
9000d030:	d50b      	bpl.n	9000d04a <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000d032:	496c      	ldr	r1, [pc, #432]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d034:	69e0      	ldr	r0, [r4, #28]
9000d036:	6a0a      	ldr	r2, [r1, #32]
9000d038:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d03c:	4290      	cmp	r0, r2
9000d03e:	d904      	bls.n	9000d04a <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000d040:	6a0a      	ldr	r2, [r1, #32]
9000d042:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000d046:	4302      	orrs	r2, r0
9000d048:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000d04a:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000d04c:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000d050:	f140 80ab 	bpl.w	9000d1aa <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000d054:	4e63      	ldr	r6, [pc, #396]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d056:	68e0      	ldr	r0, [r4, #12]
9000d058:	69b1      	ldr	r1, [r6, #24]
9000d05a:	f001 010f 	and.w	r1, r1, #15
9000d05e:	4288      	cmp	r0, r1
9000d060:	d904      	bls.n	9000d06c <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000d062:	69b1      	ldr	r1, [r6, #24]
9000d064:	f021 010f 	bic.w	r1, r1, #15
9000d068:	4301      	orrs	r1, r0
9000d06a:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000d06c:	2a00      	cmp	r2, #0
9000d06e:	d030      	beq.n	9000d0d2 <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000d070:	4a5c      	ldr	r2, [pc, #368]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d072:	68a1      	ldr	r1, [r4, #8]
9000d074:	6993      	ldr	r3, [r2, #24]
9000d076:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000d07a:	430b      	orrs	r3, r1
9000d07c:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000d07e:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d080:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000d082:	2902      	cmp	r1, #2
9000d084:	f000 80a1 	beq.w	9000d1ca <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000d088:	2903      	cmp	r1, #3
9000d08a:	f000 8098 	beq.w	9000d1be <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000d08e:	2901      	cmp	r1, #1
9000d090:	f000 80a1 	beq.w	9000d1d6 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000d094:	075f      	lsls	r7, r3, #29
9000d096:	d59c      	bpl.n	9000cfd2 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000d098:	4e52      	ldr	r6, [pc, #328]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000d09a:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000d09e:	6933      	ldr	r3, [r6, #16]
9000d0a0:	f023 0307 	bic.w	r3, r3, #7
9000d0a4:	430b      	orrs	r3, r1
9000d0a6:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000d0a8:	f7fa ff42 	bl	90007f30 <HAL_GetTick>
9000d0ac:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000d0ae:	e005      	b.n	9000d0bc <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000d0b0:	f7fa ff3e 	bl	90007f30 <HAL_GetTick>
9000d0b4:	1bc0      	subs	r0, r0, r7
9000d0b6:	4540      	cmp	r0, r8
9000d0b8:	f200 808b 	bhi.w	9000d1d2 <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000d0bc:	6933      	ldr	r3, [r6, #16]
9000d0be:	6862      	ldr	r2, [r4, #4]
9000d0c0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d0c4:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000d0c8:	d1f2      	bne.n	9000d0b0 <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000d0ca:	6823      	ldr	r3, [r4, #0]
9000d0cc:	079e      	lsls	r6, r3, #30
9000d0ce:	d506      	bpl.n	9000d0de <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000d0d0:	68e0      	ldr	r0, [r4, #12]
9000d0d2:	4944      	ldr	r1, [pc, #272]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d0d4:	698a      	ldr	r2, [r1, #24]
9000d0d6:	f002 020f 	and.w	r2, r2, #15
9000d0da:	4282      	cmp	r2, r0
9000d0dc:	d869      	bhi.n	9000d1b2 <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000d0de:	4940      	ldr	r1, [pc, #256]	@ (9000d1e0 <HAL_RCC_ClockConfig+0x23c>)
9000d0e0:	680a      	ldr	r2, [r1, #0]
9000d0e2:	f002 020f 	and.w	r2, r2, #15
9000d0e6:	42aa      	cmp	r2, r5
9000d0e8:	d90a      	bls.n	9000d100 <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000d0ea:	680a      	ldr	r2, [r1, #0]
9000d0ec:	f022 020f 	bic.w	r2, r2, #15
9000d0f0:	432a      	orrs	r2, r5
9000d0f2:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000d0f4:	680a      	ldr	r2, [r1, #0]
9000d0f6:	f002 020f 	and.w	r2, r2, #15
9000d0fa:	42aa      	cmp	r2, r5
9000d0fc:	f47f af69 	bne.w	9000cfd2 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000d100:	0758      	lsls	r0, r3, #29
9000d102:	d50b      	bpl.n	9000d11c <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000d104:	4937      	ldr	r1, [pc, #220]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d106:	6920      	ldr	r0, [r4, #16]
9000d108:	698a      	ldr	r2, [r1, #24]
9000d10a:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d10e:	4290      	cmp	r0, r2
9000d110:	d204      	bcs.n	9000d11c <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000d112:	698a      	ldr	r2, [r1, #24]
9000d114:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000d118:	4302      	orrs	r2, r0
9000d11a:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000d11c:	0719      	lsls	r1, r3, #28
9000d11e:	d50b      	bpl.n	9000d138 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000d120:	4930      	ldr	r1, [pc, #192]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d122:	6960      	ldr	r0, [r4, #20]
9000d124:	69ca      	ldr	r2, [r1, #28]
9000d126:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d12a:	4290      	cmp	r0, r2
9000d12c:	d204      	bcs.n	9000d138 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000d12e:	69ca      	ldr	r2, [r1, #28]
9000d130:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000d134:	4302      	orrs	r2, r0
9000d136:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000d138:	06da      	lsls	r2, r3, #27
9000d13a:	d50b      	bpl.n	9000d154 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000d13c:	4929      	ldr	r1, [pc, #164]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d13e:	69a0      	ldr	r0, [r4, #24]
9000d140:	69ca      	ldr	r2, [r1, #28]
9000d142:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000d146:	4290      	cmp	r0, r2
9000d148:	d204      	bcs.n	9000d154 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000d14a:	69ca      	ldr	r2, [r1, #28]
9000d14c:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000d150:	4302      	orrs	r2, r0
9000d152:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000d154:	069b      	lsls	r3, r3, #26
9000d156:	d50b      	bpl.n	9000d170 <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000d158:	4a22      	ldr	r2, [pc, #136]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d15a:	69e1      	ldr	r1, [r4, #28]
9000d15c:	6a13      	ldr	r3, [r2, #32]
9000d15e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000d162:	4299      	cmp	r1, r3
9000d164:	d204      	bcs.n	9000d170 <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000d166:	6a13      	ldr	r3, [r2, #32]
9000d168:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000d16c:	430b      	orrs	r3, r1
9000d16e:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d170:	f7ff fe8a 	bl	9000ce88 <HAL_RCC_GetSysClockFreq>
9000d174:	4a1b      	ldr	r2, [pc, #108]	@ (9000d1e4 <HAL_RCC_ClockConfig+0x240>)
9000d176:	4603      	mov	r3, r0
9000d178:	481b      	ldr	r0, [pc, #108]	@ (9000d1e8 <HAL_RCC_ClockConfig+0x244>)
9000d17a:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d17c:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d17e:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000d182:	4d1a      	ldr	r5, [pc, #104]	@ (9000d1ec <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d184:	f002 020f 	and.w	r2, r2, #15
9000d188:	4c19      	ldr	r4, [pc, #100]	@ (9000d1f0 <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d18a:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d18c:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d18e:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000d192:	4818      	ldr	r0, [pc, #96]	@ (9000d1f4 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d194:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d198:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000d19a:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000d19c:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d19e:	40d3      	lsrs	r3, r2
9000d1a0:	6023      	str	r3, [r4, #0]
}
9000d1a2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000d1a6:	f7f7 bc09 	b.w	900049bc <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000d1aa:	2a00      	cmp	r2, #0
9000d1ac:	f47f af60 	bne.w	9000d070 <HAL_RCC_ClockConfig+0xcc>
9000d1b0:	e795      	b.n	9000d0de <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000d1b2:	698a      	ldr	r2, [r1, #24]
9000d1b4:	f022 020f 	bic.w	r2, r2, #15
9000d1b8:	4302      	orrs	r2, r0
9000d1ba:	618a      	str	r2, [r1, #24]
9000d1bc:	e78f      	b.n	9000d0de <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000d1be:	019a      	lsls	r2, r3, #6
9000d1c0:	f53f af6a 	bmi.w	9000d098 <HAL_RCC_ClockConfig+0xf4>
9000d1c4:	e705      	b.n	9000cfd2 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000d1c6:	2001      	movs	r0, #1
}
9000d1c8:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d1ca:	0398      	lsls	r0, r3, #14
9000d1cc:	f53f af64 	bmi.w	9000d098 <HAL_RCC_ClockConfig+0xf4>
9000d1d0:	e6ff      	b.n	9000cfd2 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000d1d2:	2003      	movs	r0, #3
9000d1d4:	e6fe      	b.n	9000cfd4 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000d1d6:	05db      	lsls	r3, r3, #23
9000d1d8:	f53f af5e 	bmi.w	9000d098 <HAL_RCC_ClockConfig+0xf4>
9000d1dc:	e6f9      	b.n	9000cfd2 <HAL_RCC_ClockConfig+0x2e>
9000d1de:	bf00      	nop
9000d1e0:	52002000 	.word	0x52002000
9000d1e4:	58024400 	.word	0x58024400
9000d1e8:	9002fd40 	.word	0x9002fd40
9000d1ec:	24000134 	.word	0x24000134
9000d1f0:	24000130 	.word	0x24000130
9000d1f4:	2400013c 	.word	0x2400013c

9000d1f8 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d1f8:	4a18      	ldr	r2, [pc, #96]	@ (9000d25c <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000d1fa:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d1fc:	6913      	ldr	r3, [r2, #16]
9000d1fe:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d202:	2b10      	cmp	r3, #16
9000d204:	d019      	beq.n	9000d23a <HAL_RCC_GetHCLKFreq+0x42>
9000d206:	2b18      	cmp	r3, #24
9000d208:	d022      	beq.n	9000d250 <HAL_RCC_GetHCLKFreq+0x58>
9000d20a:	b1c3      	cbz	r3, 9000d23e <HAL_RCC_GetHCLKFreq+0x46>
      sysclockfreq = CSI_VALUE;
9000d20c:	4b14      	ldr	r3, [pc, #80]	@ (9000d260 <HAL_RCC_GetHCLKFreq+0x68>)
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d20e:	4913      	ldr	r1, [pc, #76]	@ (9000d25c <HAL_RCC_GetHCLKFreq+0x64>)
9000d210:	4814      	ldr	r0, [pc, #80]	@ (9000d264 <HAL_RCC_GetHCLKFreq+0x6c>)
9000d212:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d214:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d216:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d21a:	4c13      	ldr	r4, [pc, #76]	@ (9000d268 <HAL_RCC_GetHCLKFreq+0x70>)
9000d21c:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000d220:	4d12      	ldr	r5, [pc, #72]	@ (9000d26c <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d222:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d224:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d226:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d22a:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d22e:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d230:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000d234:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d236:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000d238:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d23a:	4b0d      	ldr	r3, [pc, #52]	@ (9000d270 <HAL_RCC_GetHCLKFreq+0x78>)
9000d23c:	e7e7      	b.n	9000d20e <HAL_RCC_GetHCLKFreq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d23e:	6813      	ldr	r3, [r2, #0]
9000d240:	069b      	lsls	r3, r3, #26
9000d242:	d509      	bpl.n	9000d258 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d244:	6812      	ldr	r2, [r2, #0]
9000d246:	4b0b      	ldr	r3, [pc, #44]	@ (9000d274 <HAL_RCC_GetHCLKFreq+0x7c>)
9000d248:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000d24c:	40d3      	lsrs	r3, r2
9000d24e:	e7de      	b.n	9000d20e <HAL_RCC_GetHCLKFreq+0x16>
9000d250:	f7ff fab6 	bl	9000c7c0 <HAL_RCC_GetSysClockFreq.part.0>
9000d254:	4603      	mov	r3, r0
9000d256:	e7da      	b.n	9000d20e <HAL_RCC_GetHCLKFreq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000d258:	4b06      	ldr	r3, [pc, #24]	@ (9000d274 <HAL_RCC_GetHCLKFreq+0x7c>)
9000d25a:	e7d8      	b.n	9000d20e <HAL_RCC_GetHCLKFreq+0x16>
9000d25c:	58024400 	.word	0x58024400
9000d260:	003d0900 	.word	0x003d0900
9000d264:	9002fd40 	.word	0x9002fd40
9000d268:	24000130 	.word	0x24000130
9000d26c:	24000134 	.word	0x24000134
9000d270:	017d7840 	.word	0x017d7840
9000d274:	03d09000 	.word	0x03d09000

9000d278 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d278:	4a1c      	ldr	r2, [pc, #112]	@ (9000d2ec <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000d27a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d27c:	6913      	ldr	r3, [r2, #16]
9000d27e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d282:	2b10      	cmp	r3, #16
9000d284:	d020      	beq.n	9000d2c8 <HAL_RCC_GetPCLK1Freq+0x50>
9000d286:	2b18      	cmp	r3, #24
9000d288:	d029      	beq.n	9000d2de <HAL_RCC_GetPCLK1Freq+0x66>
9000d28a:	b1fb      	cbz	r3, 9000d2cc <HAL_RCC_GetPCLK1Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000d28c:	4b18      	ldr	r3, [pc, #96]	@ (9000d2f0 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d28e:	4a17      	ldr	r2, [pc, #92]	@ (9000d2ec <HAL_RCC_GetPCLK1Freq+0x74>)
9000d290:	4918      	ldr	r1, [pc, #96]	@ (9000d2f4 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000d292:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000d294:	4d18      	ldr	r5, [pc, #96]	@ (9000d2f8 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d296:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d29a:	4c18      	ldr	r4, [pc, #96]	@ (9000d2fc <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d29c:	5c08      	ldrb	r0, [r1, r0]
9000d29e:	f000 001f 	and.w	r0, r0, #31
9000d2a2:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d2a4:	6990      	ldr	r0, [r2, #24]
9000d2a6:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000d2aa:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d2ac:	5c08      	ldrb	r0, [r1, r0]
9000d2ae:	f000 001f 	and.w	r0, r0, #31
9000d2b2:	40c3      	lsrs	r3, r0
9000d2b4:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000d2b6:	69d2      	ldr	r2, [r2, #28]
9000d2b8:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000d2bc:	5c88      	ldrb	r0, [r1, r2]
9000d2be:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000d2c2:	fa23 f000 	lsr.w	r0, r3, r0
9000d2c6:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d2c8:	4b0d      	ldr	r3, [pc, #52]	@ (9000d300 <HAL_RCC_GetPCLK1Freq+0x88>)
9000d2ca:	e7e0      	b.n	9000d28e <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d2cc:	6813      	ldr	r3, [r2, #0]
9000d2ce:	069b      	lsls	r3, r3, #26
9000d2d0:	d509      	bpl.n	9000d2e6 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d2d2:	6812      	ldr	r2, [r2, #0]
9000d2d4:	4b0b      	ldr	r3, [pc, #44]	@ (9000d304 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000d2d6:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000d2da:	40d3      	lsrs	r3, r2
9000d2dc:	e7d7      	b.n	9000d28e <HAL_RCC_GetPCLK1Freq+0x16>
9000d2de:	f7ff fa6f 	bl	9000c7c0 <HAL_RCC_GetSysClockFreq.part.0>
9000d2e2:	4603      	mov	r3, r0
9000d2e4:	e7d3      	b.n	9000d28e <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000d2e6:	4b07      	ldr	r3, [pc, #28]	@ (9000d304 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000d2e8:	e7d1      	b.n	9000d28e <HAL_RCC_GetPCLK1Freq+0x16>
9000d2ea:	bf00      	nop
9000d2ec:	58024400 	.word	0x58024400
9000d2f0:	003d0900 	.word	0x003d0900
9000d2f4:	9002fd40 	.word	0x9002fd40
9000d2f8:	24000134 	.word	0x24000134
9000d2fc:	24000130 	.word	0x24000130
9000d300:	017d7840 	.word	0x017d7840
9000d304:	03d09000 	.word	0x03d09000

9000d308 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d308:	4a1c      	ldr	r2, [pc, #112]	@ (9000d37c <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000d30a:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d30c:	6913      	ldr	r3, [r2, #16]
9000d30e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d312:	2b10      	cmp	r3, #16
9000d314:	d020      	beq.n	9000d358 <HAL_RCC_GetPCLK2Freq+0x50>
9000d316:	2b18      	cmp	r3, #24
9000d318:	d029      	beq.n	9000d36e <HAL_RCC_GetPCLK2Freq+0x66>
9000d31a:	b1fb      	cbz	r3, 9000d35c <HAL_RCC_GetPCLK2Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000d31c:	4b18      	ldr	r3, [pc, #96]	@ (9000d380 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d31e:	4a17      	ldr	r2, [pc, #92]	@ (9000d37c <HAL_RCC_GetPCLK2Freq+0x74>)
9000d320:	4918      	ldr	r1, [pc, #96]	@ (9000d384 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000d322:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000d324:	4d18      	ldr	r5, [pc, #96]	@ (9000d388 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d326:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d32a:	4c18      	ldr	r4, [pc, #96]	@ (9000d38c <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d32c:	5c08      	ldrb	r0, [r1, r0]
9000d32e:	f000 001f 	and.w	r0, r0, #31
9000d332:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d334:	6990      	ldr	r0, [r2, #24]
9000d336:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000d33a:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d33c:	5c08      	ldrb	r0, [r1, r0]
9000d33e:	f000 001f 	and.w	r0, r0, #31
9000d342:	40c3      	lsrs	r3, r0
9000d344:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000d346:	69d2      	ldr	r2, [r2, #28]
9000d348:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000d34c:	5c88      	ldrb	r0, [r1, r2]
9000d34e:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000d352:	fa23 f000 	lsr.w	r0, r3, r0
9000d356:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d358:	4b0d      	ldr	r3, [pc, #52]	@ (9000d390 <HAL_RCC_GetPCLK2Freq+0x88>)
9000d35a:	e7e0      	b.n	9000d31e <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d35c:	6813      	ldr	r3, [r2, #0]
9000d35e:	069b      	lsls	r3, r3, #26
9000d360:	d509      	bpl.n	9000d376 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d362:	6812      	ldr	r2, [r2, #0]
9000d364:	4b0b      	ldr	r3, [pc, #44]	@ (9000d394 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000d366:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000d36a:	40d3      	lsrs	r3, r2
9000d36c:	e7d7      	b.n	9000d31e <HAL_RCC_GetPCLK2Freq+0x16>
9000d36e:	f7ff fa27 	bl	9000c7c0 <HAL_RCC_GetSysClockFreq.part.0>
9000d372:	4603      	mov	r3, r0
9000d374:	e7d3      	b.n	9000d31e <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000d376:	4b07      	ldr	r3, [pc, #28]	@ (9000d394 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000d378:	e7d1      	b.n	9000d31e <HAL_RCC_GetPCLK2Freq+0x16>
9000d37a:	bf00      	nop
9000d37c:	58024400 	.word	0x58024400
9000d380:	003d0900 	.word	0x003d0900
9000d384:	9002fd40 	.word	0x9002fd40
9000d388:	24000134 	.word	0x24000134
9000d38c:	24000130 	.word	0x24000130
9000d390:	017d7840 	.word	0x017d7840
9000d394:	03d09000 	.word	0x03d09000

9000d398 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000d398:	4b13      	ldr	r3, [pc, #76]	@ (9000d3e8 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000d39a:	223f      	movs	r2, #63	@ 0x3f
9000d39c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000d39e:	691a      	ldr	r2, [r3, #16]
9000d3a0:	f002 0207 	and.w	r2, r2, #7
9000d3a4:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000d3a6:	699a      	ldr	r2, [r3, #24]
9000d3a8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000d3ac:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000d3ae:	699a      	ldr	r2, [r3, #24]
9000d3b0:	f002 020f 	and.w	r2, r2, #15
9000d3b4:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000d3b6:	699a      	ldr	r2, [r3, #24]
9000d3b8:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d3bc:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000d3be:	69da      	ldr	r2, [r3, #28]
9000d3c0:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d3c4:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000d3c6:	69da      	ldr	r2, [r3, #28]
9000d3c8:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000d3cc:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000d3ce:	6a1b      	ldr	r3, [r3, #32]
{
9000d3d0:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000d3d2:	f003 0370 	and.w	r3, r3, #112	@ 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000d3d6:	4c05      	ldr	r4, [pc, #20]	@ (9000d3ec <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000d3d8:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000d3da:	6823      	ldr	r3, [r4, #0]
}
9000d3dc:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000d3e0:	f003 030f 	and.w	r3, r3, #15
9000d3e4:	600b      	str	r3, [r1, #0]
}
9000d3e6:	4770      	bx	lr
9000d3e8:	58024400 	.word	0x58024400
9000d3ec:	52002000 	.word	0x52002000

9000d3f0 <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000d3f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000d3f2:	4c36      	ldr	r4, [pc, #216]	@ (9000d4cc <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000d3f4:	4606      	mov	r6, r0
9000d3f6:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000d3f8:	6823      	ldr	r3, [r4, #0]
9000d3fa:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000d3fe:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d400:	f7fa fd96 	bl	90007f30 <HAL_GetTick>
9000d404:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000d406:	e004      	b.n	9000d412 <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000d408:	f7fa fd92 	bl	90007f30 <HAL_GetTick>
9000d40c:	1b40      	subs	r0, r0, r5
9000d40e:	2802      	cmp	r0, #2
9000d410:	d856      	bhi.n	9000d4c0 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000d412:	6823      	ldr	r3, [r4, #0]
9000d414:	011a      	lsls	r2, r3, #4
9000d416:	d4f7      	bmi.n	9000d408 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000d418:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000d41a:	6832      	ldr	r2, [r6, #0]
9000d41c:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000d420:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000d424:	62a3      	str	r3, [r4, #40]	@ 0x28
9000d426:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000d42a:	3b01      	subs	r3, #1
9000d42c:	3a01      	subs	r2, #1
9000d42e:	025b      	lsls	r3, r3, #9
9000d430:	0412      	lsls	r2, r2, #16
9000d432:	b29b      	uxth	r3, r3
9000d434:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000d438:	4313      	orrs	r3, r2
9000d43a:	6872      	ldr	r2, [r6, #4]
9000d43c:	3a01      	subs	r2, #1
9000d43e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000d442:	4313      	orrs	r3, r2
9000d444:	6932      	ldr	r2, [r6, #16]
9000d446:	3a01      	subs	r2, #1
9000d448:	0612      	lsls	r2, r2, #24
9000d44a:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000d44e:	4313      	orrs	r3, r2
9000d450:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000d452:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d454:	6972      	ldr	r2, [r6, #20]
9000d456:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000d45a:	4313      	orrs	r3, r2
9000d45c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000d45e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d460:	69b3      	ldr	r3, [r6, #24]
9000d462:	f022 0220 	bic.w	r2, r2, #32
9000d466:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000d468:	4b19      	ldr	r3, [pc, #100]	@ (9000d4d0 <RCCEx_PLL2_Config.part.0+0xe0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000d46a:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000d46c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d46e:	f022 0210 	bic.w	r2, r2, #16
9000d472:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000d474:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
9000d476:	69f2      	ldr	r2, [r6, #28]
9000d478:	400b      	ands	r3, r1
9000d47a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000d47e:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000d480:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d482:	f043 0310 	orr.w	r3, r3, #16
9000d486:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000d488:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000d48a:	b1df      	cbz	r7, 9000d4c4 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000d48c:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000d48e:	bf0c      	ite	eq
9000d490:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000d494:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000d498:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000d49a:	4c0c      	ldr	r4, [pc, #48]	@ (9000d4cc <RCCEx_PLL2_Config.part.0+0xdc>)
9000d49c:	6823      	ldr	r3, [r4, #0]
9000d49e:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000d4a2:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d4a4:	f7fa fd44 	bl	90007f30 <HAL_GetTick>
9000d4a8:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000d4aa:	e004      	b.n	9000d4b6 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000d4ac:	f7fa fd40 	bl	90007f30 <HAL_GetTick>
9000d4b0:	1b40      	subs	r0, r0, r5
9000d4b2:	2802      	cmp	r0, #2
9000d4b4:	d804      	bhi.n	9000d4c0 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000d4b6:	6823      	ldr	r3, [r4, #0]
9000d4b8:	011b      	lsls	r3, r3, #4
9000d4ba:	d5f7      	bpl.n	9000d4ac <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000d4bc:	2000      	movs	r0, #0
}
9000d4be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000d4c0:	2003      	movs	r0, #3
}
9000d4c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000d4c4:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000d4c8:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000d4ca:	e7e6      	b.n	9000d49a <RCCEx_PLL2_Config.part.0+0xaa>
9000d4cc:	58024400 	.word	0x58024400
9000d4d0:	ffff0007 	.word	0xffff0007

9000d4d4 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000d4d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000d4d6:	4c36      	ldr	r4, [pc, #216]	@ (9000d5b0 <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000d4d8:	4606      	mov	r6, r0
9000d4da:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000d4dc:	6823      	ldr	r3, [r4, #0]
9000d4de:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000d4e2:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d4e4:	f7fa fd24 	bl	90007f30 <HAL_GetTick>
9000d4e8:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000d4ea:	e004      	b.n	9000d4f6 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000d4ec:	f7fa fd20 	bl	90007f30 <HAL_GetTick>
9000d4f0:	1b40      	subs	r0, r0, r5
9000d4f2:	2802      	cmp	r0, #2
9000d4f4:	d856      	bhi.n	9000d5a4 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000d4f6:	6823      	ldr	r3, [r4, #0]
9000d4f8:	009a      	lsls	r2, r3, #2
9000d4fa:	d4f7      	bmi.n	9000d4ec <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000d4fc:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000d4fe:	6832      	ldr	r2, [r6, #0]
9000d500:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000d504:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000d508:	62a3      	str	r3, [r4, #40]	@ 0x28
9000d50a:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000d50e:	3b01      	subs	r3, #1
9000d510:	3a01      	subs	r2, #1
9000d512:	025b      	lsls	r3, r3, #9
9000d514:	0412      	lsls	r2, r2, #16
9000d516:	b29b      	uxth	r3, r3
9000d518:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000d51c:	4313      	orrs	r3, r2
9000d51e:	6872      	ldr	r2, [r6, #4]
9000d520:	3a01      	subs	r2, #1
9000d522:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000d526:	4313      	orrs	r3, r2
9000d528:	6932      	ldr	r2, [r6, #16]
9000d52a:	3a01      	subs	r2, #1
9000d52c:	0612      	lsls	r2, r2, #24
9000d52e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000d532:	4313      	orrs	r3, r2
9000d534:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000d536:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d538:	6972      	ldr	r2, [r6, #20]
9000d53a:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000d53e:	4313      	orrs	r3, r2
9000d540:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000d542:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d544:	69b3      	ldr	r3, [r6, #24]
9000d546:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000d54a:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000d54c:	4b19      	ldr	r3, [pc, #100]	@ (9000d5b4 <RCCEx_PLL3_Config.part.0+0xe0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000d54e:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000d550:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d552:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000d556:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000d558:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9000d55a:	69f2      	ldr	r2, [r6, #28]
9000d55c:	400b      	ands	r3, r1
9000d55e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000d562:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000d564:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d566:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000d56a:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000d56c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000d56e:	b1df      	cbz	r7, 9000d5a8 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000d570:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000d572:	bf0c      	ite	eq
9000d574:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000d578:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000d57c:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000d57e:	4c0c      	ldr	r4, [pc, #48]	@ (9000d5b0 <RCCEx_PLL3_Config.part.0+0xdc>)
9000d580:	6823      	ldr	r3, [r4, #0]
9000d582:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000d586:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d588:	f7fa fcd2 	bl	90007f30 <HAL_GetTick>
9000d58c:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000d58e:	e004      	b.n	9000d59a <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000d590:	f7fa fcce 	bl	90007f30 <HAL_GetTick>
9000d594:	1b40      	subs	r0, r0, r5
9000d596:	2802      	cmp	r0, #2
9000d598:	d804      	bhi.n	9000d5a4 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000d59a:	6823      	ldr	r3, [r4, #0]
9000d59c:	009b      	lsls	r3, r3, #2
9000d59e:	d5f7      	bpl.n	9000d590 <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000d5a0:	2000      	movs	r0, #0
}
9000d5a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000d5a4:	2003      	movs	r0, #3
}
9000d5a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000d5a8:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000d5ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000d5ae:	e7e6      	b.n	9000d57e <RCCEx_PLL3_Config.part.0+0xaa>
9000d5b0:	58024400 	.word	0x58024400
9000d5b4:	ffff0007 	.word	0xffff0007

9000d5b8 <HAL_RCCEx_PeriphCLKConfig>:
{
9000d5b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000d5bc:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000d5c0:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000d5c2:	011d      	lsls	r5, r3, #4
9000d5c4:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000d5c8:	d525      	bpl.n	9000d616 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d5ca:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000d5cc:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000d5d0:	f000 8660 	beq.w	9000e294 <HAL_RCCEx_PeriphCLKConfig+0xcdc>
9000d5d4:	d814      	bhi.n	9000d600 <HAL_RCCEx_PeriphCLKConfig+0x48>
9000d5d6:	2900      	cmp	r1, #0
9000d5d8:	f000 86fa 	beq.w	9000e3d0 <HAL_RCCEx_PeriphCLKConfig+0xe18>
9000d5dc:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000d5e0:	f040 8466 	bne.w	9000deb0 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d5e4:	49ad      	ldr	r1, [pc, #692]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d5e6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d5e8:	f001 0103 	and.w	r1, r1, #3
9000d5ec:	2903      	cmp	r1, #3
9000d5ee:	f000 845f 	beq.w	9000deb0 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000d5f2:	2102      	movs	r1, #2
9000d5f4:	3008      	adds	r0, #8
9000d5f6:	f7ff fefb 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000d5fa:	4606      	mov	r6, r0
        break;
9000d5fc:	f000 be56 	b.w	9000e2ac <HAL_RCCEx_PeriphCLKConfig+0xcf4>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d600:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000d604:	f040 8454 	bne.w	9000deb0 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000d608:	4da4      	ldr	r5, [pc, #656]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000d60a:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000d60c:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000d60e:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000d612:	4301      	orrs	r1, r0
9000d614:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000d616:	05d8      	lsls	r0, r3, #23
9000d618:	d50a      	bpl.n	9000d630 <HAL_RCCEx_PeriphCLKConfig+0x78>
    switch (PeriphClkInit->Sai1ClockSelection)
9000d61a:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000d61c:	2904      	cmp	r1, #4
9000d61e:	d806      	bhi.n	9000d62e <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d620:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d624:	064c04a8 	.word	0x064c04a8
9000d628:	04ad0661 	.word	0x04ad0661
9000d62c:	04ad      	.short	0x04ad
9000d62e:	2601      	movs	r6, #1
9000d630:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d632:	0599      	lsls	r1, r3, #22
9000d634:	d524      	bpl.n	9000d680 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch (PeriphClkInit->Sai23ClockSelection)
9000d636:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000d638:	2980      	cmp	r1, #128	@ 0x80
9000d63a:	f000 8664 	beq.w	9000e306 <HAL_RCCEx_PeriphCLKConfig+0xd4e>
9000d63e:	f200 8122 	bhi.w	9000d886 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
9000d642:	2900      	cmp	r1, #0
9000d644:	f000 84ac 	beq.w	9000dfa0 <HAL_RCCEx_PeriphCLKConfig+0x9e8>
9000d648:	2940      	cmp	r1, #64	@ 0x40
9000d64a:	f040 8123 	bne.w	9000d894 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d64e:	4993      	ldr	r1, [pc, #588]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d650:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d652:	f001 0103 	and.w	r1, r1, #3
9000d656:	2903      	cmp	r1, #3
9000d658:	f000 811c 	beq.w	9000d894 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000d65c:	2100      	movs	r1, #0
9000d65e:	f104 0008 	add.w	r0, r4, #8
9000d662:	f7ff fec5 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000d666:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d668:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d66c:	2d00      	cmp	r5, #0
9000d66e:	f040 851b 	bne.w	9000e0a8 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000d672:	4f8a      	ldr	r7, [pc, #552]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d674:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000d676:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d678:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000d67c:	4301      	orrs	r1, r0
9000d67e:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d680:	055f      	lsls	r7, r3, #21
9000d682:	d528      	bpl.n	9000d6d6 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4AClockSelection)
9000d684:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000d688:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000d68c:	f000 864f 	beq.w	9000e32e <HAL_RCCEx_PeriphCLKConfig+0xd76>
9000d690:	f200 8106 	bhi.w	9000d8a0 <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000d694:	2900      	cmp	r1, #0
9000d696:	f000 8463 	beq.w	9000df60 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000d69a:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000d69e:	f040 8107 	bne.w	9000d8b0 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d6a2:	497e      	ldr	r1, [pc, #504]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d6a4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d6a6:	f001 0103 	and.w	r1, r1, #3
9000d6aa:	2903      	cmp	r1, #3
9000d6ac:	f000 8100 	beq.w	9000d8b0 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000d6b0:	2100      	movs	r1, #0
9000d6b2:	f104 0008 	add.w	r0, r4, #8
9000d6b6:	f7ff fe9b 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000d6ba:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d6bc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d6c0:	2d00      	cmp	r5, #0
9000d6c2:	f040 84f4 	bne.w	9000e0ae <HAL_RCCEx_PeriphCLKConfig+0xaf6>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000d6c6:	4f75      	ldr	r7, [pc, #468]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d6c8:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000d6cc:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d6ce:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000d6d2:	4301      	orrs	r1, r0
9000d6d4:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d6d6:	0518      	lsls	r0, r3, #20
9000d6d8:	d528      	bpl.n	9000d72c <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d6da:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000d6de:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000d6e2:	f000 85ac 	beq.w	9000e23e <HAL_RCCEx_PeriphCLKConfig+0xc86>
9000d6e6:	f200 80e6 	bhi.w	9000d8b6 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9000d6ea:	2900      	cmp	r1, #0
9000d6ec:	f000 8425 	beq.w	9000df3a <HAL_RCCEx_PeriphCLKConfig+0x982>
9000d6f0:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000d6f4:	f040 80e7 	bne.w	9000d8c6 <HAL_RCCEx_PeriphCLKConfig+0x30e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d6f8:	4968      	ldr	r1, [pc, #416]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d6fa:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d6fc:	f001 0103 	and.w	r1, r1, #3
9000d700:	2903      	cmp	r1, #3
9000d702:	f000 80e0 	beq.w	9000d8c6 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000d706:	2100      	movs	r1, #0
9000d708:	f104 0008 	add.w	r0, r4, #8
9000d70c:	f7ff fe70 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000d710:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d712:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d716:	2d00      	cmp	r5, #0
9000d718:	f040 84cc 	bne.w	9000e0b4 <HAL_RCCEx_PeriphCLKConfig+0xafc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000d71c:	4f5f      	ldr	r7, [pc, #380]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d71e:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000d722:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d724:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000d728:	4301      	orrs	r1, r0
9000d72a:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d72c:	0199      	lsls	r1, r3, #6
9000d72e:	d518      	bpl.n	9000d762 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->QspiClockSelection)
9000d730:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000d732:	2920      	cmp	r1, #32
9000d734:	f000 84ff 	beq.w	9000e136 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
9000d738:	f200 80c8 	bhi.w	9000d8cc <HAL_RCCEx_PeriphCLKConfig+0x314>
9000d73c:	b139      	cbz	r1, 9000d74e <HAL_RCCEx_PeriphCLKConfig+0x196>
9000d73e:	2910      	cmp	r1, #16
9000d740:	f040 80c7 	bne.w	9000d8d2 <HAL_RCCEx_PeriphCLKConfig+0x31a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d744:	4855      	ldr	r0, [pc, #340]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d746:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d748:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d74c:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d74e:	2d00      	cmp	r5, #0
9000d750:	f040 849f 	bne.w	9000e092 <HAL_RCCEx_PeriphCLKConfig+0xada>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000d754:	4f51      	ldr	r7, [pc, #324]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d756:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000d758:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000d75a:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000d75e:	4301      	orrs	r1, r0
9000d760:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d762:	04df      	lsls	r7, r3, #19
9000d764:	d526      	bpl.n	9000d7b4 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d766:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000d768:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000d76c:	f000 857b 	beq.w	9000e266 <HAL_RCCEx_PeriphCLKConfig+0xcae>
9000d770:	f200 80b2 	bhi.w	9000d8d8 <HAL_RCCEx_PeriphCLKConfig+0x320>
9000d774:	2900      	cmp	r1, #0
9000d776:	f000 83ea 	beq.w	9000df4e <HAL_RCCEx_PeriphCLKConfig+0x996>
9000d77a:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000d77e:	f040 80b3 	bne.w	9000d8e8 <HAL_RCCEx_PeriphCLKConfig+0x330>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d782:	4946      	ldr	r1, [pc, #280]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d784:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d786:	f001 0103 	and.w	r1, r1, #3
9000d78a:	2903      	cmp	r1, #3
9000d78c:	f000 80ac 	beq.w	9000d8e8 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000d790:	2100      	movs	r1, #0
9000d792:	f104 0008 	add.w	r0, r4, #8
9000d796:	f7ff fe2b 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000d79a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d79c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d7a0:	2d00      	cmp	r5, #0
9000d7a2:	f040 848a 	bne.w	9000e0ba <HAL_RCCEx_PeriphCLKConfig+0xb02>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000d7a6:	4f3d      	ldr	r7, [pc, #244]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d7a8:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000d7aa:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d7ac:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000d7b0:	4301      	orrs	r1, r0
9000d7b2:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d7b4:	0498      	lsls	r0, r3, #18
9000d7b6:	d524      	bpl.n	9000d802 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d7b8:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000d7ba:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000d7be:	f000 8516 	beq.w	9000e1ee <HAL_RCCEx_PeriphCLKConfig+0xc36>
9000d7c2:	f200 8094 	bhi.w	9000d8ee <HAL_RCCEx_PeriphCLKConfig+0x336>
9000d7c6:	b191      	cbz	r1, 9000d7ee <HAL_RCCEx_PeriphCLKConfig+0x236>
9000d7c8:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000d7cc:	f040 8099 	bne.w	9000d902 <HAL_RCCEx_PeriphCLKConfig+0x34a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d7d0:	4932      	ldr	r1, [pc, #200]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d7d2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d7d4:	f001 0103 	and.w	r1, r1, #3
9000d7d8:	2903      	cmp	r1, #3
9000d7da:	f000 8092 	beq.w	9000d902 <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000d7de:	2101      	movs	r1, #1
9000d7e0:	f104 0008 	add.w	r0, r4, #8
9000d7e4:	f7ff fe04 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000d7e8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d7ea:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d7ee:	2d00      	cmp	r5, #0
9000d7f0:	f040 8476 	bne.w	9000e0e0 <HAL_RCCEx_PeriphCLKConfig+0xb28>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000d7f4:	4f29      	ldr	r7, [pc, #164]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d7f6:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000d7f8:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d7fa:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000d7fe:	4301      	orrs	r1, r0
9000d800:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d802:	0459      	lsls	r1, r3, #17
9000d804:	d523      	bpl.n	9000d84e <HAL_RCCEx_PeriphCLKConfig+0x296>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d806:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000d80a:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000d80e:	f000 8502 	beq.w	9000e216 <HAL_RCCEx_PeriphCLKConfig+0xc5e>
9000d812:	d879      	bhi.n	9000d908 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000d814:	b181      	cbz	r1, 9000d838 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000d816:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000d81a:	d17d      	bne.n	9000d918 <HAL_RCCEx_PeriphCLKConfig+0x360>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d81c:	491f      	ldr	r1, [pc, #124]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d81e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d820:	f001 0103 	and.w	r1, r1, #3
9000d824:	2903      	cmp	r1, #3
9000d826:	d077      	beq.n	9000d918 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000d828:	2101      	movs	r1, #1
9000d82a:	f104 0008 	add.w	r0, r4, #8
9000d82e:	f7ff fddf 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000d832:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d834:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d838:	2d00      	cmp	r5, #0
9000d83a:	f040 8454 	bne.w	9000e0e6 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000d83e:	4f17      	ldr	r7, [pc, #92]	@ (9000d89c <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d840:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000d844:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d846:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000d84a:	4301      	orrs	r1, r0
9000d84c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d84e:	041f      	lsls	r7, r3, #16
9000d850:	d50d      	bpl.n	9000d86e <HAL_RCCEx_PeriphCLKConfig+0x2b6>
    switch (PeriphClkInit->FdcanClockSelection)
9000d852:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000d854:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000d858:	f000 82e2 	beq.w	9000de20 <HAL_RCCEx_PeriphCLKConfig+0x868>
9000d85c:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000d860:	f000 83f0 	beq.w	9000e044 <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9000d864:	2900      	cmp	r1, #0
9000d866:	f000 82e0 	beq.w	9000de2a <HAL_RCCEx_PeriphCLKConfig+0x872>
9000d86a:	2601      	movs	r6, #1
9000d86c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d86e:	01d8      	lsls	r0, r3, #7
9000d870:	d55e      	bpl.n	9000d930 <HAL_RCCEx_PeriphCLKConfig+0x378>
    switch (PeriphClkInit->FmcClockSelection)
9000d872:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000d874:	2903      	cmp	r1, #3
9000d876:	f200 85cd 	bhi.w	9000e414 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000d87a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d87e:	0055      	.short	0x0055
9000d880:	04930050 	.word	0x04930050
9000d884:	0055      	.short	0x0055
    switch (PeriphClkInit->Sai23ClockSelection)
9000d886:	29c0      	cmp	r1, #192	@ 0xc0
9000d888:	f43f aef0 	beq.w	9000d66c <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000d88c:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000d890:	f43f aeec 	beq.w	9000d66c <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000d894:	2601      	movs	r6, #1
9000d896:	4635      	mov	r5, r6
9000d898:	e6f2      	b.n	9000d680 <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000d89a:	bf00      	nop
9000d89c:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Sai4AClockSelection)
9000d8a0:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000d8a4:	f43f af0c 	beq.w	9000d6c0 <HAL_RCCEx_PeriphCLKConfig+0x108>
9000d8a8:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000d8ac:	f43f af08 	beq.w	9000d6c0 <HAL_RCCEx_PeriphCLKConfig+0x108>
9000d8b0:	2601      	movs	r6, #1
9000d8b2:	4635      	mov	r5, r6
9000d8b4:	e70f      	b.n	9000d6d6 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d8b6:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000d8ba:	f43f af2c 	beq.w	9000d716 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000d8be:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000d8c2:	f43f af28 	beq.w	9000d716 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000d8c6:	2601      	movs	r6, #1
9000d8c8:	4635      	mov	r5, r6
9000d8ca:	e72f      	b.n	9000d72c <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->QspiClockSelection)
9000d8cc:	2930      	cmp	r1, #48	@ 0x30
9000d8ce:	f43f af3e 	beq.w	9000d74e <HAL_RCCEx_PeriphCLKConfig+0x196>
9000d8d2:	2601      	movs	r6, #1
9000d8d4:	4635      	mov	r5, r6
9000d8d6:	e744      	b.n	9000d762 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d8d8:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000d8dc:	f43f af60 	beq.w	9000d7a0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000d8e0:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000d8e4:	f43f af5c 	beq.w	9000d7a0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000d8e8:	2601      	movs	r6, #1
9000d8ea:	4635      	mov	r5, r6
9000d8ec:	e762      	b.n	9000d7b4 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d8ee:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000d8f2:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000d8f6:	f43f af7a 	beq.w	9000d7ee <HAL_RCCEx_PeriphCLKConfig+0x236>
9000d8fa:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000d8fe:	f43f af76 	beq.w	9000d7ee <HAL_RCCEx_PeriphCLKConfig+0x236>
9000d902:	2601      	movs	r6, #1
9000d904:	4635      	mov	r5, r6
9000d906:	e77c      	b.n	9000d802 <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d908:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000d90c:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000d910:	d092      	beq.n	9000d838 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000d912:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000d916:	d08f      	beq.n	9000d838 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000d918:	2601      	movs	r6, #1
9000d91a:	4635      	mov	r5, r6
9000d91c:	e797      	b.n	9000d84e <HAL_RCCEx_PeriphCLKConfig+0x296>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d91e:	4837      	ldr	r0, [pc, #220]	@ (9000d9fc <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000d920:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d922:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d926:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d928:	2d00      	cmp	r5, #0
9000d92a:	f000 83b5 	beq.w	9000e098 <HAL_RCCEx_PeriphCLKConfig+0xae0>
9000d92e:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d930:	0259      	lsls	r1, r3, #9
9000d932:	f100 82c0 	bmi.w	9000deb6 <HAL_RCCEx_PeriphCLKConfig+0x8fe>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d936:	07df      	lsls	r7, r3, #31
9000d938:	d52f      	bpl.n	9000d99a <HAL_RCCEx_PeriphCLKConfig+0x3e2>
    switch (PeriphClkInit->Usart16ClockSelection)
9000d93a:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000d93c:	2928      	cmp	r1, #40	@ 0x28
9000d93e:	d82a      	bhi.n	9000d996 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000d940:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d944:	002902ab 	.word	0x002902ab
9000d948:	00290029 	.word	0x00290029
9000d94c:	00290029 	.word	0x00290029
9000d950:	00290029 	.word	0x00290029
9000d954:	0029029c 	.word	0x0029029c
9000d958:	00290029 	.word	0x00290029
9000d95c:	00290029 	.word	0x00290029
9000d960:	00290029 	.word	0x00290029
9000d964:	0029052d 	.word	0x0029052d
9000d968:	00290029 	.word	0x00290029
9000d96c:	00290029 	.word	0x00290029
9000d970:	00290029 	.word	0x00290029
9000d974:	002902ab 	.word	0x002902ab
9000d978:	00290029 	.word	0x00290029
9000d97c:	00290029 	.word	0x00290029
9000d980:	00290029 	.word	0x00290029
9000d984:	002902ab 	.word	0x002902ab
9000d988:	00290029 	.word	0x00290029
9000d98c:	00290029 	.word	0x00290029
9000d990:	00290029 	.word	0x00290029
9000d994:	02ab      	.short	0x02ab
9000d996:	2601      	movs	r6, #1
9000d998:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d99a:	0798      	lsls	r0, r3, #30
9000d99c:	d51e      	bpl.n	9000d9dc <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000d99e:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000d9a0:	2905      	cmp	r1, #5
9000d9a2:	f200 851c 	bhi.w	9000e3de <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000d9a6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d9aa:	0015      	.short	0x0015
9000d9ac:	04e80006 	.word	0x04e80006
9000d9b0:	00150015 	.word	0x00150015
9000d9b4:	0015      	.short	0x0015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d9b6:	4911      	ldr	r1, [pc, #68]	@ (9000d9fc <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000d9b8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d9ba:	f001 0103 	and.w	r1, r1, #3
9000d9be:	2903      	cmp	r1, #3
9000d9c0:	f000 850d 	beq.w	9000e3de <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000d9c4:	2101      	movs	r1, #1
9000d9c6:	f104 0008 	add.w	r0, r4, #8
9000d9ca:	f7ff fd11 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000d9ce:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d9d0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d9d4:	2d00      	cmp	r5, #0
9000d9d6:	f000 837b 	beq.w	9000e0d0 <HAL_RCCEx_PeriphCLKConfig+0xb18>
9000d9da:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d9dc:	0759      	lsls	r1, r3, #29
9000d9de:	d522      	bpl.n	9000da26 <HAL_RCCEx_PeriphCLKConfig+0x46e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000d9e0:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000d9e4:	2905      	cmp	r1, #5
9000d9e6:	f200 84fe 	bhi.w	9000e3e6 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000d9ea:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d9ee:	0018      	.short	0x0018
9000d9f0:	04b40009 	.word	0x04b40009
9000d9f4:	00180018 	.word	0x00180018
9000d9f8:	0018      	.short	0x0018
9000d9fa:	bf00      	nop
9000d9fc:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000da00:	49b0      	ldr	r1, [pc, #704]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000da02:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000da04:	f001 0103 	and.w	r1, r1, #3
9000da08:	2903      	cmp	r1, #3
9000da0a:	f000 84ec 	beq.w	9000e3e6 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000da0e:	2101      	movs	r1, #1
9000da10:	f104 0008 	add.w	r0, r4, #8
9000da14:	f7ff fcec 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000da18:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000da1a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000da1e:	2d00      	cmp	r5, #0
9000da20:	f000 8364 	beq.w	9000e0ec <HAL_RCCEx_PeriphCLKConfig+0xb34>
9000da24:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000da26:	069f      	lsls	r7, r3, #26
9000da28:	d526      	bpl.n	9000da78 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000da2a:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000da2e:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000da32:	f000 836e 	beq.w	9000e112 <HAL_RCCEx_PeriphCLKConfig+0xb5a>
9000da36:	f200 8194 	bhi.w	9000dd62 <HAL_RCCEx_PeriphCLKConfig+0x7aa>
9000da3a:	b191      	cbz	r1, 9000da62 <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000da3c:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000da40:	f040 8199 	bne.w	9000dd76 <HAL_RCCEx_PeriphCLKConfig+0x7be>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000da44:	499f      	ldr	r1, [pc, #636]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000da46:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000da48:	f001 0103 	and.w	r1, r1, #3
9000da4c:	2903      	cmp	r1, #3
9000da4e:	f000 8192 	beq.w	9000dd76 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000da52:	2100      	movs	r1, #0
9000da54:	f104 0008 	add.w	r0, r4, #8
9000da58:	f7ff fcca 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000da5c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000da5e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000da62:	2d00      	cmp	r5, #0
9000da64:	f040 834b 	bne.w	9000e0fe <HAL_RCCEx_PeriphCLKConfig+0xb46>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000da68:	4f96      	ldr	r7, [pc, #600]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000da6a:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000da6e:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000da70:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000da74:	4301      	orrs	r1, r0
9000da76:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000da78:	0658      	lsls	r0, r3, #25
9000da7a:	d526      	bpl.n	9000daca <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000da7c:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000da80:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000da84:	f000 83a1 	beq.w	9000e1ca <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000da88:	f200 8178 	bhi.w	9000dd7c <HAL_RCCEx_PeriphCLKConfig+0x7c4>
9000da8c:	b191      	cbz	r1, 9000dab4 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000da8e:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000da92:	f040 817d 	bne.w	9000dd90 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000da96:	498b      	ldr	r1, [pc, #556]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000da98:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000da9a:	f001 0103 	and.w	r1, r1, #3
9000da9e:	2903      	cmp	r1, #3
9000daa0:	f000 8176 	beq.w	9000dd90 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000daa4:	2100      	movs	r1, #0
9000daa6:	f104 0008 	add.w	r0, r4, #8
9000daaa:	f7ff fca1 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000daae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000dab0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dab4:	2d00      	cmp	r5, #0
9000dab6:	f040 8328 	bne.w	9000e10a <HAL_RCCEx_PeriphCLKConfig+0xb52>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000daba:	4f82      	ldr	r7, [pc, #520]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dabc:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000dac0:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000dac2:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000dac6:	4301      	orrs	r1, r0
9000dac8:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000daca:	0619      	lsls	r1, r3, #24
9000dacc:	d526      	bpl.n	9000db1c <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000dace:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000dad2:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000dad6:	f000 8353 	beq.w	9000e180 <HAL_RCCEx_PeriphCLKConfig+0xbc8>
9000dada:	f200 815c 	bhi.w	9000dd96 <HAL_RCCEx_PeriphCLKConfig+0x7de>
9000dade:	b191      	cbz	r1, 9000db06 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000dae0:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000dae4:	f040 8161 	bne.w	9000ddaa <HAL_RCCEx_PeriphCLKConfig+0x7f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dae8:	4976      	ldr	r1, [pc, #472]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000daea:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000daec:	f001 0103 	and.w	r1, r1, #3
9000daf0:	2903      	cmp	r1, #3
9000daf2:	f000 815a 	beq.w	9000ddaa <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000daf6:	2100      	movs	r1, #0
9000daf8:	f104 0008 	add.w	r0, r4, #8
9000dafc:	f7ff fc78 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000db00:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000db02:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000db06:	2d00      	cmp	r5, #0
9000db08:	f040 82fb 	bne.w	9000e102 <HAL_RCCEx_PeriphCLKConfig+0xb4a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000db0c:	4f6d      	ldr	r7, [pc, #436]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000db0e:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000db12:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000db14:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000db18:	4301      	orrs	r1, r0
9000db1a:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000db1c:	071f      	lsls	r7, r3, #28
9000db1e:	d50b      	bpl.n	9000db38 <HAL_RCCEx_PeriphCLKConfig+0x580>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000db20:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000db24:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000db28:	f000 8250 	beq.w	9000dfcc <HAL_RCCEx_PeriphCLKConfig+0xa14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000db2c:	4f65      	ldr	r7, [pc, #404]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000db2e:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000db30:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000db34:	4301      	orrs	r1, r0
9000db36:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000db38:	06d8      	lsls	r0, r3, #27
9000db3a:	d50b      	bpl.n	9000db54 <HAL_RCCEx_PeriphCLKConfig+0x59c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000db3c:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000db40:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000db44:	f000 8257 	beq.w	9000dff6 <HAL_RCCEx_PeriphCLKConfig+0xa3e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000db48:	4f5e      	ldr	r7, [pc, #376]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000db4a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000db4c:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000db50:	4301      	orrs	r1, r0
9000db52:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000db54:	0319      	lsls	r1, r3, #12
9000db56:	d50e      	bpl.n	9000db76 <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->AdcClockSelection)
9000db58:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000db5c:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000db60:	f000 816e 	beq.w	9000de40 <HAL_RCCEx_PeriphCLKConfig+0x888>
9000db64:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000db68:	f000 8179 	beq.w	9000de5e <HAL_RCCEx_PeriphCLKConfig+0x8a6>
9000db6c:	2900      	cmp	r1, #0
9000db6e:	f000 827a 	beq.w	9000e066 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000db72:	2601      	movs	r6, #1
9000db74:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000db76:	035f      	lsls	r7, r3, #13
9000db78:	d50f      	bpl.n	9000db9a <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    switch (PeriphClkInit->UsbClockSelection)
9000db7a:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000db7e:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000db82:	f000 82eb 	beq.w	9000e15c <HAL_RCCEx_PeriphCLKConfig+0xba4>
9000db86:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000db8a:	f000 813d 	beq.w	9000de08 <HAL_RCCEx_PeriphCLKConfig+0x850>
9000db8e:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000db92:	f000 8134 	beq.w	9000ddfe <HAL_RCCEx_PeriphCLKConfig+0x846>
9000db96:	2601      	movs	r6, #1
9000db98:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000db9a:	03d8      	lsls	r0, r3, #15
9000db9c:	d520      	bpl.n	9000dbe0 <HAL_RCCEx_PeriphCLKConfig+0x628>
    switch (PeriphClkInit->SdmmcClockSelection)
9000db9e:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000dba0:	2900      	cmp	r1, #0
9000dba2:	f000 8245 	beq.w	9000e030 <HAL_RCCEx_PeriphCLKConfig+0xa78>
9000dba6:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000dbaa:	f040 8125 	bne.w	9000ddf8 <HAL_RCCEx_PeriphCLKConfig+0x840>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dbae:	4945      	ldr	r1, [pc, #276]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dbb0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000dbb2:	f001 0103 	and.w	r1, r1, #3
9000dbb6:	2903      	cmp	r1, #3
9000dbb8:	f000 811e 	beq.w	9000ddf8 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000dbbc:	2102      	movs	r1, #2
9000dbbe:	f104 0008 	add.w	r0, r4, #8
9000dbc2:	f7ff fc15 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000dbc6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000dbc8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dbcc:	2d00      	cmp	r5, #0
9000dbce:	f040 8237 	bne.w	9000e040 <HAL_RCCEx_PeriphCLKConfig+0xa88>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000dbd2:	4f3c      	ldr	r7, [pc, #240]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dbd4:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000dbd6:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000dbd8:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000dbdc:	4301      	orrs	r1, r0
9000dbde:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000dbe0:	0099      	lsls	r1, r3, #2
9000dbe2:	d50e      	bpl.n	9000dc02 <HAL_RCCEx_PeriphCLKConfig+0x64a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dbe4:	4937      	ldr	r1, [pc, #220]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dbe6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000dbe8:	f001 0103 	and.w	r1, r1, #3
9000dbec:	2903      	cmp	r1, #3
9000dbee:	d007      	beq.n	9000dc00 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000dbf0:	2102      	movs	r1, #2
9000dbf2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000dbf6:	f7ff fc6d 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000dbfa:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000dbfe:	b100      	cbz	r0, 9000dc02 <HAL_RCCEx_PeriphCLKConfig+0x64a>
      status = HAL_ERROR;
9000dc00:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000dc02:	039f      	lsls	r7, r3, #14
9000dc04:	f140 80e0 	bpl.w	9000ddc8 <HAL_RCCEx_PeriphCLKConfig+0x810>
    switch (PeriphClkInit->RngClockSelection)
9000dc08:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000dc0c:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000dc10:	f000 8205 	beq.w	9000e01e <HAL_RCCEx_PeriphCLKConfig+0xa66>
9000dc14:	f240 80cc 	bls.w	9000ddb0 <HAL_RCCEx_PeriphCLKConfig+0x7f8>
9000dc18:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000dc1c:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000dc20:	f000 80c9 	beq.w	9000ddb6 <HAL_RCCEx_PeriphCLKConfig+0x7fe>
9000dc24:	2501      	movs	r5, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000dc26:	02d8      	lsls	r0, r3, #11
9000dc28:	d506      	bpl.n	9000dc38 <HAL_RCCEx_PeriphCLKConfig+0x680>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000dc2a:	4826      	ldr	r0, [pc, #152]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc2c:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000dc2e:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000dc30:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000dc34:	4331      	orrs	r1, r6
9000dc36:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000dc38:	00d9      	lsls	r1, r3, #3
9000dc3a:	d507      	bpl.n	9000dc4c <HAL_RCCEx_PeriphCLKConfig+0x694>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000dc3c:	4821      	ldr	r0, [pc, #132]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc3e:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000dc42:	6901      	ldr	r1, [r0, #16]
9000dc44:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000dc48:	4331      	orrs	r1, r6
9000dc4a:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000dc4c:	029f      	lsls	r7, r3, #10
9000dc4e:	d506      	bpl.n	9000dc5e <HAL_RCCEx_PeriphCLKConfig+0x6a6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000dc50:	481c      	ldr	r0, [pc, #112]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc52:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000dc54:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000dc56:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000dc5a:	4331      	orrs	r1, r6
9000dc5c:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000dc5e:	005e      	lsls	r6, r3, #1
9000dc60:	d509      	bpl.n	9000dc76 <HAL_RCCEx_PeriphCLKConfig+0x6be>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000dc62:	4918      	ldr	r1, [pc, #96]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc64:	6908      	ldr	r0, [r1, #16]
9000dc66:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000dc6a:	6108      	str	r0, [r1, #16]
9000dc6c:	6908      	ldr	r0, [r1, #16]
9000dc6e:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000dc72:	4330      	orrs	r0, r6
9000dc74:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000dc76:	2b00      	cmp	r3, #0
9000dc78:	da06      	bge.n	9000dc88 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000dc7a:	4812      	ldr	r0, [pc, #72]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc7c:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000dc7e:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000dc80:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000dc84:	4331      	orrs	r1, r6
9000dc86:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000dc88:	0218      	lsls	r0, r3, #8
9000dc8a:	d507      	bpl.n	9000dc9c <HAL_RCCEx_PeriphCLKConfig+0x6e4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000dc8c:	490d      	ldr	r1, [pc, #52]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc8e:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000dc92:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000dc94:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000dc98:	4303      	orrs	r3, r0
9000dc9a:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000dc9c:	07d1      	lsls	r1, r2, #31
9000dc9e:	d513      	bpl.n	9000dcc8 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dca0:	4b08      	ldr	r3, [pc, #32]	@ (9000dcc4 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dca2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dca4:	f003 0303 	and.w	r3, r3, #3
9000dca8:	2b03      	cmp	r3, #3
9000dcaa:	f000 818d 	beq.w	9000dfc8 <HAL_RCCEx_PeriphCLKConfig+0xa10>
9000dcae:	2100      	movs	r1, #0
9000dcb0:	f104 0008 	add.w	r0, r4, #8
9000dcb4:	f7ff fb9c 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000dcb8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000dcba:	2800      	cmp	r0, #0
9000dcbc:	f040 8204 	bne.w	9000e0c8 <HAL_RCCEx_PeriphCLKConfig+0xb10>
9000dcc0:	e002      	b.n	9000dcc8 <HAL_RCCEx_PeriphCLKConfig+0x710>
9000dcc2:	bf00      	nop
9000dcc4:	58024400 	.word	0x58024400
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000dcc8:	0793      	lsls	r3, r2, #30
9000dcca:	d50f      	bpl.n	9000dcec <HAL_RCCEx_PeriphCLKConfig+0x734>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dccc:	4bb2      	ldr	r3, [pc, #712]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dcce:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dcd0:	f003 0303 	and.w	r3, r3, #3
9000dcd4:	2b03      	cmp	r3, #3
9000dcd6:	f000 816c 	beq.w	9000dfb2 <HAL_RCCEx_PeriphCLKConfig+0x9fa>
9000dcda:	2101      	movs	r1, #1
9000dcdc:	f104 0008 	add.w	r0, r4, #8
9000dce0:	f7ff fb86 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000dce4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000dce6:	2800      	cmp	r0, #0
9000dce8:	f040 81f0 	bne.w	9000e0cc <HAL_RCCEx_PeriphCLKConfig+0xb14>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000dcec:	0757      	lsls	r7, r2, #29
9000dcee:	d50f      	bpl.n	9000dd10 <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dcf0:	4ba9      	ldr	r3, [pc, #676]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dcf2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dcf4:	f003 0303 	and.w	r3, r3, #3
9000dcf8:	2b03      	cmp	r3, #3
9000dcfa:	f000 815c 	beq.w	9000dfb6 <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9000dcfe:	2102      	movs	r1, #2
9000dd00:	f104 0008 	add.w	r0, r4, #8
9000dd04:	f7ff fb74 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000dd08:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000dd0a:	2800      	cmp	r0, #0
9000dd0c:	f040 81d8 	bne.w	9000e0c0 <HAL_RCCEx_PeriphCLKConfig+0xb08>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000dd10:	0716      	lsls	r6, r2, #28
9000dd12:	d50f      	bpl.n	9000dd34 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dd14:	4ba0      	ldr	r3, [pc, #640]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dd16:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dd18:	f003 0303 	and.w	r3, r3, #3
9000dd1c:	2b03      	cmp	r3, #3
9000dd1e:	f000 814c 	beq.w	9000dfba <HAL_RCCEx_PeriphCLKConfig+0xa02>
9000dd22:	2100      	movs	r1, #0
9000dd24:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000dd28:	f7ff fbd4 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000dd2c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000dd2e:	2800      	cmp	r0, #0
9000dd30:	f040 81c8 	bne.w	9000e0c4 <HAL_RCCEx_PeriphCLKConfig+0xb0c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000dd34:	06d0      	lsls	r0, r2, #27
9000dd36:	d54a      	bpl.n	9000ddce <HAL_RCCEx_PeriphCLKConfig+0x816>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dd38:	4b97      	ldr	r3, [pc, #604]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000dd3a:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dd3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dd40:	f003 0303 	and.w	r3, r3, #3
9000dd44:	2b03      	cmp	r3, #3
9000dd46:	f000 813a 	beq.w	9000dfbe <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000dd4a:	2101      	movs	r1, #1
9000dd4c:	4630      	mov	r0, r6
9000dd4e:	f7ff fbc1 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000dd52:	2800      	cmp	r0, #0
9000dd54:	d03a      	beq.n	9000ddcc <HAL_RCCEx_PeriphCLKConfig+0x814>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000dd56:	6863      	ldr	r3, [r4, #4]
9000dd58:	069a      	lsls	r2, r3, #26
9000dd5a:	f140 808c 	bpl.w	9000de76 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000dd5e:	4605      	mov	r5, r0
9000dd60:	e039      	b.n	9000ddd6 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000dd62:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000dd66:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000dd6a:	f43f ae7a 	beq.w	9000da62 <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000dd6e:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000dd72:	f43f ae76 	beq.w	9000da62 <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000dd76:	2601      	movs	r6, #1
9000dd78:	4635      	mov	r5, r6
9000dd7a:	e67d      	b.n	9000da78 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000dd7c:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000dd80:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000dd84:	f43f ae96 	beq.w	9000dab4 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000dd88:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000dd8c:	f43f ae92 	beq.w	9000dab4 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000dd90:	2601      	movs	r6, #1
9000dd92:	4635      	mov	r5, r6
9000dd94:	e699      	b.n	9000daca <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000dd96:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000dd9a:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000dd9e:	f43f aeb2 	beq.w	9000db06 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000dda2:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000dda6:	f43f aeae 	beq.w	9000db06 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000ddaa:	2601      	movs	r6, #1
9000ddac:	4635      	mov	r5, r6
9000ddae:	e6b5      	b.n	9000db1c <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->RngClockSelection)
9000ddb0:	2900      	cmp	r1, #0
9000ddb2:	f47f af37 	bne.w	9000dc24 <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if (ret == HAL_OK)
9000ddb6:	2d00      	cmp	r5, #0
9000ddb8:	f47f af35 	bne.w	9000dc26 <HAL_RCCEx_PeriphCLKConfig+0x66e>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000ddbc:	4d76      	ldr	r5, [pc, #472]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ddbe:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000ddc0:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000ddc4:	4301      	orrs	r1, r0
9000ddc6:	6569      	str	r1, [r5, #84]	@ 0x54
      status = HAL_ERROR;
9000ddc8:	4635      	mov	r5, r6
9000ddca:	e72c      	b.n	9000dc26 <HAL_RCCEx_PeriphCLKConfig+0x66e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000ddcc:	6862      	ldr	r2, [r4, #4]
9000ddce:	0693      	lsls	r3, r2, #26
9000ddd0:	d50d      	bpl.n	9000ddee <HAL_RCCEx_PeriphCLKConfig+0x836>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000ddd2:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ddd6:	4b70      	ldr	r3, [pc, #448]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ddd8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000ddda:	f003 0303 	and.w	r3, r3, #3
9000ddde:	2b03      	cmp	r3, #3
9000dde0:	d049      	beq.n	9000de76 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000dde2:	2102      	movs	r1, #2
9000dde4:	4630      	mov	r0, r6
9000dde6:	f7ff fb75 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000ddea:	2800      	cmp	r0, #0
9000ddec:	d143      	bne.n	9000de76 <HAL_RCCEx_PeriphCLKConfig+0x8be>
  if (status == HAL_OK)
9000ddee:	1e28      	subs	r0, r5, #0
9000ddf0:	bf18      	it	ne
9000ddf2:	2001      	movne	r0, #1
}
9000ddf4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000ddf8:	2601      	movs	r6, #1
9000ddfa:	4635      	mov	r5, r6
9000ddfc:	e6f0      	b.n	9000dbe0 <HAL_RCCEx_PeriphCLKConfig+0x628>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ddfe:	4866      	ldr	r0, [pc, #408]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de00:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000de02:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000de06:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000de08:	2d00      	cmp	r5, #0
9000de0a:	f040 8140 	bne.w	9000e08e <HAL_RCCEx_PeriphCLKConfig+0xad6>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000de0e:	4f62      	ldr	r7, [pc, #392]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de10:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000de14:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000de16:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000de1a:	4301      	orrs	r1, r0
9000de1c:	6579      	str	r1, [r7, #84]	@ 0x54
9000de1e:	e6bc      	b.n	9000db9a <HAL_RCCEx_PeriphCLKConfig+0x5e2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000de20:	485d      	ldr	r0, [pc, #372]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de22:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000de24:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000de28:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000de2a:	2d00      	cmp	r5, #0
9000de2c:	f040 812c 	bne.w	9000e088 <HAL_RCCEx_PeriphCLKConfig+0xad0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000de30:	4f59      	ldr	r7, [pc, #356]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de32:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000de34:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000de36:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000de3a:	4301      	orrs	r1, r0
9000de3c:	6539      	str	r1, [r7, #80]	@ 0x50
9000de3e:	e516      	b.n	9000d86e <HAL_RCCEx_PeriphCLKConfig+0x2b6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000de40:	4955      	ldr	r1, [pc, #340]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de42:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000de44:	f001 0103 	and.w	r1, r1, #3
9000de48:	2903      	cmp	r1, #3
9000de4a:	f43f ae92 	beq.w	9000db72 <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000de4e:	2102      	movs	r1, #2
9000de50:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000de54:	f7ff fb3e 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000de58:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000de5a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000de5e:	2d00      	cmp	r5, #0
9000de60:	f040 8151 	bne.w	9000e106 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000de64:	4f4c      	ldr	r7, [pc, #304]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de66:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000de6a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000de6c:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000de70:	4301      	orrs	r1, r0
9000de72:	65b9      	str	r1, [r7, #88]	@ 0x58
9000de74:	e67f      	b.n	9000db76 <HAL_RCCEx_PeriphCLKConfig+0x5be>
  return HAL_ERROR;
9000de76:	2001      	movs	r0, #1
}
9000de78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000de7c:	4946      	ldr	r1, [pc, #280]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de7e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000de80:	f001 0103 	and.w	r1, r1, #3
9000de84:	2903      	cmp	r1, #3
9000de86:	f43f ad86 	beq.w	9000d996 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000de8a:	2101      	movs	r1, #1
9000de8c:	f104 0008 	add.w	r0, r4, #8
9000de90:	f7ff faae 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000de94:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000de96:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000de9a:	2d00      	cmp	r5, #0
9000de9c:	f040 8137 	bne.w	9000e10e <HAL_RCCEx_PeriphCLKConfig+0xb56>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000dea0:	4f3d      	ldr	r7, [pc, #244]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dea2:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000dea4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000dea6:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000deaa:	4301      	orrs	r1, r0
9000deac:	6579      	str	r1, [r7, #84]	@ 0x54
9000deae:	e574      	b.n	9000d99a <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9000deb0:	2601      	movs	r6, #1
9000deb2:	f7ff bbb0 	b.w	9000d616 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000deb6:	4f39      	ldr	r7, [pc, #228]	@ (9000df9c <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9000deb8:	683b      	ldr	r3, [r7, #0]
9000deba:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000debe:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000dec0:	f7fa f836 	bl	90007f30 <HAL_GetTick>
9000dec4:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000dec6:	e006      	b.n	9000ded6 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000dec8:	f7fa f832 	bl	90007f30 <HAL_GetTick>
9000decc:	eba0 0008 	sub.w	r0, r0, r8
9000ded0:	2864      	cmp	r0, #100	@ 0x64
9000ded2:	f200 8277 	bhi.w	9000e3c4 <HAL_RCCEx_PeriphCLKConfig+0xe0c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000ded6:	683b      	ldr	r3, [r7, #0]
9000ded8:	05da      	lsls	r2, r3, #23
9000deda:	d5f5      	bpl.n	9000dec8 <HAL_RCCEx_PeriphCLKConfig+0x910>
    if (ret == HAL_OK)
9000dedc:	2d00      	cmp	r5, #0
9000dede:	f040 8272 	bne.w	9000e3c6 <HAL_RCCEx_PeriphCLKConfig+0xe0e>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000dee2:	4a2d      	ldr	r2, [pc, #180]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dee4:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000dee8:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000deea:	4059      	eors	r1, r3
9000deec:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000def0:	d00b      	beq.n	9000df0a <HAL_RCCEx_PeriphCLKConfig+0x952>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000def2:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000def4:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000def6:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000defa:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000defe:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000df00:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000df02:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000df06:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000df08:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000df0a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000df0e:	f000 8285 	beq.w	9000e41c <HAL_RCCEx_PeriphCLKConfig+0xe64>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000df12:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000df16:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000df1a:	f000 8293 	beq.w	9000e444 <HAL_RCCEx_PeriphCLKConfig+0xe8c>
9000df1e:	491e      	ldr	r1, [pc, #120]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df20:	690a      	ldr	r2, [r1, #16]
9000df22:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000df26:	610a      	str	r2, [r1, #16]
9000df28:	481b      	ldr	r0, [pc, #108]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df2a:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000df2e:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000df30:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000df32:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000df36:	6701      	str	r1, [r0, #112]	@ 0x70
9000df38:	e4fd      	b.n	9000d936 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000df3a:	4817      	ldr	r0, [pc, #92]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df3c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000df3e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000df42:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000df44:	2d00      	cmp	r5, #0
9000df46:	f040 80b5 	bne.w	9000e0b4 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000df4a:	f7ff bbe7 	b.w	9000d71c <HAL_RCCEx_PeriphCLKConfig+0x164>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000df4e:	4812      	ldr	r0, [pc, #72]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df50:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000df52:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000df56:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000df58:	2d00      	cmp	r5, #0
9000df5a:	f040 80ae 	bne.w	9000e0ba <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000df5e:	e422      	b.n	9000d7a6 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000df60:	480d      	ldr	r0, [pc, #52]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df62:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000df64:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000df68:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000df6a:	2d00      	cmp	r5, #0
9000df6c:	f040 809f 	bne.w	9000e0ae <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000df70:	f7ff bba9 	b.w	9000d6c6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000df74:	4808      	ldr	r0, [pc, #32]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df76:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000df78:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000df7c:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000df7e:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000df80:	2d00      	cmp	r5, #0
9000df82:	f040 81ad 	bne.w	9000e2e0 <HAL_RCCEx_PeriphCLKConfig+0xd28>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000df86:	4f04      	ldr	r7, [pc, #16]	@ (9000df98 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df88:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000df8a:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000df8c:	f021 0107 	bic.w	r1, r1, #7
9000df90:	4301      	orrs	r1, r0
9000df92:	6539      	str	r1, [r7, #80]	@ 0x50
9000df94:	f7ff bb4d 	b.w	9000d632 <HAL_RCCEx_PeriphCLKConfig+0x7a>
9000df98:	58024400 	.word	0x58024400
9000df9c:	58024800 	.word	0x58024800
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dfa0:	48bb      	ldr	r0, [pc, #748]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000dfa2:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000dfa4:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000dfa8:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000dfaa:	2d00      	cmp	r5, #0
9000dfac:	d17c      	bne.n	9000e0a8 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000dfae:	f7ff bb60 	b.w	9000d672 <HAL_RCCEx_PeriphCLKConfig+0xba>
    return HAL_ERROR;
9000dfb2:	2501      	movs	r5, #1
9000dfb4:	e69a      	b.n	9000dcec <HAL_RCCEx_PeriphCLKConfig+0x734>
9000dfb6:	2501      	movs	r5, #1
9000dfb8:	e6aa      	b.n	9000dd10 <HAL_RCCEx_PeriphCLKConfig+0x758>
    return HAL_ERROR;
9000dfba:	2501      	movs	r5, #1
9000dfbc:	e6ba      	b.n	9000dd34 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000dfbe:	0691      	lsls	r1, r2, #26
9000dfc0:	f57f af59 	bpl.w	9000de76 <HAL_RCCEx_PeriphCLKConfig+0x8be>
    return HAL_ERROR;
9000dfc4:	2501      	movs	r5, #1
9000dfc6:	e706      	b.n	9000ddd6 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    return HAL_ERROR;
9000dfc8:	2501      	movs	r5, #1
9000dfca:	e67d      	b.n	9000dcc8 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dfcc:	49b0      	ldr	r1, [pc, #704]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000dfce:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000dfd0:	f001 0103 	and.w	r1, r1, #3
9000dfd4:	2903      	cmp	r1, #3
9000dfd6:	f000 820a 	beq.w	9000e3ee <HAL_RCCEx_PeriphCLKConfig+0xe36>
9000dfda:	2102      	movs	r1, #2
9000dfdc:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000dfe0:	f7ff fa78 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000dfe4:	2800      	cmp	r0, #0
9000dfe6:	f000 820f 	beq.w	9000e408 <HAL_RCCEx_PeriphCLKConfig+0xe50>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000dfea:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000dfee:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000dff0:	e9d4 3200 	ldrd	r3, r2, [r4]
9000dff4:	e59a      	b.n	9000db2c <HAL_RCCEx_PeriphCLKConfig+0x574>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dff6:	49a6      	ldr	r1, [pc, #664]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000dff8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000dffa:	f001 0103 	and.w	r1, r1, #3
9000dffe:	2903      	cmp	r1, #3
9000e000:	f000 81f8 	beq.w	9000e3f4 <HAL_RCCEx_PeriphCLKConfig+0xe3c>
9000e004:	2102      	movs	r1, #2
9000e006:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e00a:	f7ff fa63 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000e00e:	2800      	cmp	r0, #0
9000e010:	f040 81f3 	bne.w	9000e3fa <HAL_RCCEx_PeriphCLKConfig+0xe42>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000e014:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000e018:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e01c:	e594      	b.n	9000db48 <HAL_RCCEx_PeriphCLKConfig+0x590>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e01e:	4f9c      	ldr	r7, [pc, #624]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e020:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000e022:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000e026:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000e028:	2d00      	cmp	r5, #0
9000e02a:	f47f adfc 	bne.w	9000dc26 <HAL_RCCEx_PeriphCLKConfig+0x66e>
9000e02e:	e6c5      	b.n	9000ddbc <HAL_RCCEx_PeriphCLKConfig+0x804>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e030:	4897      	ldr	r0, [pc, #604]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e032:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000e034:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000e038:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000e03a:	2d00      	cmp	r5, #0
9000e03c:	f43f adc9 	beq.w	9000dbd2 <HAL_RCCEx_PeriphCLKConfig+0x61a>
9000e040:	462e      	mov	r6, r5
9000e042:	e5cd      	b.n	9000dbe0 <HAL_RCCEx_PeriphCLKConfig+0x628>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e044:	4992      	ldr	r1, [pc, #584]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e046:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e048:	f001 0103 	and.w	r1, r1, #3
9000e04c:	2903      	cmp	r1, #3
9000e04e:	f43f ac0c 	beq.w	9000d86a <HAL_RCCEx_PeriphCLKConfig+0x2b2>
9000e052:	2101      	movs	r1, #1
9000e054:	f104 0008 	add.w	r0, r4, #8
9000e058:	f7ff f9ca 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000e05c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000e05e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e062:	b98d      	cbnz	r5, 9000e088 <HAL_RCCEx_PeriphCLKConfig+0xad0>
9000e064:	e6e4      	b.n	9000de30 <HAL_RCCEx_PeriphCLKConfig+0x878>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e066:	488a      	ldr	r0, [pc, #552]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e068:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000e06a:	f000 0003 	and.w	r0, r0, #3
9000e06e:	2803      	cmp	r0, #3
9000e070:	f43f ad7f 	beq.w	9000db72 <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000e074:	f104 0008 	add.w	r0, r4, #8
9000e078:	f7ff f9ba 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000e07c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000e07e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e082:	2d00      	cmp	r5, #0
9000e084:	d13f      	bne.n	9000e106 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
9000e086:	e6ed      	b.n	9000de64 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
9000e088:	462e      	mov	r6, r5
9000e08a:	f7ff bbf0 	b.w	9000d86e <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000e08e:	462e      	mov	r6, r5
9000e090:	e583      	b.n	9000db9a <HAL_RCCEx_PeriphCLKConfig+0x5e2>
9000e092:	462e      	mov	r6, r5
9000e094:	f7ff bb65 	b.w	9000d762 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000e098:	4f7d      	ldr	r7, [pc, #500]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e09a:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000e09c:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000e09e:	f021 0103 	bic.w	r1, r1, #3
9000e0a2:	4301      	orrs	r1, r0
9000e0a4:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000e0a6:	e443      	b.n	9000d930 <HAL_RCCEx_PeriphCLKConfig+0x378>
9000e0a8:	462e      	mov	r6, r5
9000e0aa:	f7ff bae9 	b.w	9000d680 <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000e0ae:	462e      	mov	r6, r5
9000e0b0:	f7ff bb11 	b.w	9000d6d6 <HAL_RCCEx_PeriphCLKConfig+0x11e>
9000e0b4:	462e      	mov	r6, r5
9000e0b6:	f7ff bb39 	b.w	9000d72c <HAL_RCCEx_PeriphCLKConfig+0x174>
9000e0ba:	462e      	mov	r6, r5
9000e0bc:	f7ff bb7a 	b.w	9000d7b4 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000e0c0:	4605      	mov	r5, r0
9000e0c2:	e625      	b.n	9000dd10 <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000e0c4:	4605      	mov	r5, r0
9000e0c6:	e635      	b.n	9000dd34 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000e0c8:	4605      	mov	r5, r0
9000e0ca:	e5fd      	b.n	9000dcc8 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000e0cc:	4605      	mov	r5, r0
9000e0ce:	e60d      	b.n	9000dcec <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000e0d0:	4f6f      	ldr	r7, [pc, #444]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e0d2:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000e0d4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000e0d6:	f021 0107 	bic.w	r1, r1, #7
9000e0da:	4301      	orrs	r1, r0
9000e0dc:	6579      	str	r1, [r7, #84]	@ 0x54
9000e0de:	e47d      	b.n	9000d9dc <HAL_RCCEx_PeriphCLKConfig+0x424>
9000e0e0:	462e      	mov	r6, r5
9000e0e2:	f7ff bb8e 	b.w	9000d802 <HAL_RCCEx_PeriphCLKConfig+0x24a>
9000e0e6:	462e      	mov	r6, r5
9000e0e8:	f7ff bbb1 	b.w	9000d84e <HAL_RCCEx_PeriphCLKConfig+0x296>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000e0ec:	4f68      	ldr	r7, [pc, #416]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e0ee:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000e0f2:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000e0f4:	f021 0107 	bic.w	r1, r1, #7
9000e0f8:	4301      	orrs	r1, r0
9000e0fa:	65b9      	str	r1, [r7, #88]	@ 0x58
9000e0fc:	e493      	b.n	9000da26 <HAL_RCCEx_PeriphCLKConfig+0x46e>
9000e0fe:	462e      	mov	r6, r5
9000e100:	e4ba      	b.n	9000da78 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
9000e102:	462e      	mov	r6, r5
9000e104:	e50a      	b.n	9000db1c <HAL_RCCEx_PeriphCLKConfig+0x564>
9000e106:	462e      	mov	r6, r5
9000e108:	e535      	b.n	9000db76 <HAL_RCCEx_PeriphCLKConfig+0x5be>
9000e10a:	462e      	mov	r6, r5
9000e10c:	e4dd      	b.n	9000daca <HAL_RCCEx_PeriphCLKConfig+0x512>
9000e10e:	462e      	mov	r6, r5
9000e110:	e443      	b.n	9000d99a <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e112:	495f      	ldr	r1, [pc, #380]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e114:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e116:	f001 0103 	and.w	r1, r1, #3
9000e11a:	2903      	cmp	r1, #3
9000e11c:	f43f ae2b 	beq.w	9000dd76 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000e120:	2102      	movs	r1, #2
9000e122:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e126:	f7ff f9d5 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e12a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000e12c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e130:	2d00      	cmp	r5, #0
9000e132:	d1e4      	bne.n	9000e0fe <HAL_RCCEx_PeriphCLKConfig+0xb46>
9000e134:	e498      	b.n	9000da68 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e136:	4956      	ldr	r1, [pc, #344]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e138:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e13a:	f001 0103 	and.w	r1, r1, #3
9000e13e:	2903      	cmp	r1, #3
9000e140:	f43f abc7 	beq.w	9000d8d2 <HAL_RCCEx_PeriphCLKConfig+0x31a>
9000e144:	2102      	movs	r1, #2
9000e146:	f104 0008 	add.w	r0, r4, #8
9000e14a:	f7ff f951 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000e14e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000e150:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e154:	2d00      	cmp	r5, #0
9000e156:	d19c      	bne.n	9000e092 <HAL_RCCEx_PeriphCLKConfig+0xada>
9000e158:	f7ff bafc 	b.w	9000d754 <HAL_RCCEx_PeriphCLKConfig+0x19c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e15c:	494c      	ldr	r1, [pc, #304]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e15e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e160:	f001 0103 	and.w	r1, r1, #3
9000e164:	2903      	cmp	r1, #3
9000e166:	f43f ad16 	beq.w	9000db96 <HAL_RCCEx_PeriphCLKConfig+0x5de>
9000e16a:	2101      	movs	r1, #1
9000e16c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e170:	f7ff f9b0 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e174:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000e176:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e17a:	2d00      	cmp	r5, #0
9000e17c:	d187      	bne.n	9000e08e <HAL_RCCEx_PeriphCLKConfig+0xad6>
9000e17e:	e646      	b.n	9000de0e <HAL_RCCEx_PeriphCLKConfig+0x856>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e180:	4943      	ldr	r1, [pc, #268]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e182:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e184:	f001 0103 	and.w	r1, r1, #3
9000e188:	2903      	cmp	r1, #3
9000e18a:	f43f ae0e 	beq.w	9000ddaa <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000e18e:	2102      	movs	r1, #2
9000e190:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e194:	f7ff f99e 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e198:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000e19a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e19e:	2d00      	cmp	r5, #0
9000e1a0:	d1af      	bne.n	9000e102 <HAL_RCCEx_PeriphCLKConfig+0xb4a>
9000e1a2:	e4b3      	b.n	9000db0c <HAL_RCCEx_PeriphCLKConfig+0x554>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e1a4:	493a      	ldr	r1, [pc, #232]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e1a6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e1a8:	f001 0103 	and.w	r1, r1, #3
9000e1ac:	2903      	cmp	r1, #3
9000e1ae:	f000 8131 	beq.w	9000e414 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000e1b2:	2102      	movs	r1, #2
9000e1b4:	f104 0008 	add.w	r0, r4, #8
9000e1b8:	f7ff f91a 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000e1bc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000e1be:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e1c2:	2d00      	cmp	r5, #0
9000e1c4:	f47f abb3 	bne.w	9000d92e <HAL_RCCEx_PeriphCLKConfig+0x376>
9000e1c8:	e766      	b.n	9000e098 <HAL_RCCEx_PeriphCLKConfig+0xae0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e1ca:	4931      	ldr	r1, [pc, #196]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e1cc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e1ce:	f001 0103 	and.w	r1, r1, #3
9000e1d2:	2903      	cmp	r1, #3
9000e1d4:	f43f addc 	beq.w	9000dd90 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000e1d8:	2102      	movs	r1, #2
9000e1da:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e1de:	f7ff f979 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e1e2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000e1e4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e1e8:	2d00      	cmp	r5, #0
9000e1ea:	d18e      	bne.n	9000e10a <HAL_RCCEx_PeriphCLKConfig+0xb52>
9000e1ec:	e465      	b.n	9000daba <HAL_RCCEx_PeriphCLKConfig+0x502>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e1ee:	4928      	ldr	r1, [pc, #160]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e1f0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e1f2:	f001 0103 	and.w	r1, r1, #3
9000e1f6:	2903      	cmp	r1, #3
9000e1f8:	f43f ab83 	beq.w	9000d902 <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000e1fc:	2101      	movs	r1, #1
9000e1fe:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e202:	f7ff f967 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e206:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000e208:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e20c:	2d00      	cmp	r5, #0
9000e20e:	f47f af67 	bne.w	9000e0e0 <HAL_RCCEx_PeriphCLKConfig+0xb28>
9000e212:	f7ff baef 	b.w	9000d7f4 <HAL_RCCEx_PeriphCLKConfig+0x23c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e216:	491e      	ldr	r1, [pc, #120]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e218:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e21a:	f001 0103 	and.w	r1, r1, #3
9000e21e:	2903      	cmp	r1, #3
9000e220:	f43f ab7a 	beq.w	9000d918 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000e224:	2101      	movs	r1, #1
9000e226:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e22a:	f7ff f953 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e22e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000e230:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e234:	2d00      	cmp	r5, #0
9000e236:	f47f af56 	bne.w	9000e0e6 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
9000e23a:	f7ff bb00 	b.w	9000d83e <HAL_RCCEx_PeriphCLKConfig+0x286>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e23e:	4914      	ldr	r1, [pc, #80]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e240:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e242:	f001 0103 	and.w	r1, r1, #3
9000e246:	2903      	cmp	r1, #3
9000e248:	f43f ab3d 	beq.w	9000d8c6 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000e24c:	2100      	movs	r1, #0
9000e24e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e252:	f7ff f93f 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e256:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e258:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e25c:	2d00      	cmp	r5, #0
9000e25e:	f47f af29 	bne.w	9000e0b4 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000e262:	f7ff ba5b 	b.w	9000d71c <HAL_RCCEx_PeriphCLKConfig+0x164>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e266:	490a      	ldr	r1, [pc, #40]	@ (9000e290 <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e268:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e26a:	f001 0103 	and.w	r1, r1, #3
9000e26e:	2903      	cmp	r1, #3
9000e270:	f43f ab3a 	beq.w	9000d8e8 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000e274:	2100      	movs	r1, #0
9000e276:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e27a:	f7ff f92b 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e27e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000e280:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e284:	2d00      	cmp	r5, #0
9000e286:	f47f af18 	bne.w	9000e0ba <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000e28a:	f7ff ba8c 	b.w	9000d7a6 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
9000e28e:	bf00      	nop
9000e290:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e294:	4973      	ldr	r1, [pc, #460]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e296:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e298:	f001 0103 	and.w	r1, r1, #3
9000e29c:	2903      	cmp	r1, #3
9000e29e:	f43f ae07 	beq.w	9000deb0 <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000e2a2:	2102      	movs	r1, #2
9000e2a4:	3028      	adds	r0, #40	@ 0x28
9000e2a6:	f7ff f915 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e2aa:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e2ac:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e2b0:	2e00      	cmp	r6, #0
9000e2b2:	f47f a9b0 	bne.w	9000d616 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e2b6:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000e2b8:	f7ff b9a6 	b.w	9000d608 <HAL_RCCEx_PeriphCLKConfig+0x50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e2bc:	4969      	ldr	r1, [pc, #420]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e2be:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e2c0:	f001 0103 	and.w	r1, r1, #3
9000e2c4:	2903      	cmp	r1, #3
9000e2c6:	f43f a9b2 	beq.w	9000d62e <HAL_RCCEx_PeriphCLKConfig+0x76>
9000e2ca:	2100      	movs	r1, #0
9000e2cc:	f104 0008 	add.w	r0, r4, #8
9000e2d0:	f7ff f88e 	bl	9000d3f0 <RCCEx_PLL2_Config.part.0>
9000e2d4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000e2d6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e2da:	2d00      	cmp	r5, #0
9000e2dc:	f43f ae53 	beq.w	9000df86 <HAL_RCCEx_PeriphCLKConfig+0x9ce>
9000e2e0:	462e      	mov	r6, r5
9000e2e2:	f7ff b9a6 	b.w	9000d632 <HAL_RCCEx_PeriphCLKConfig+0x7a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e2e6:	495f      	ldr	r1, [pc, #380]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e2e8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e2ea:	f001 0103 	and.w	r1, r1, #3
9000e2ee:	2903      	cmp	r1, #3
9000e2f0:	f43f a99d 	beq.w	9000d62e <HAL_RCCEx_PeriphCLKConfig+0x76>
9000e2f4:	2100      	movs	r1, #0
9000e2f6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e2fa:	f7ff f8eb 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e2fe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000e300:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000e304:	e63c      	b.n	9000df80 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e306:	4957      	ldr	r1, [pc, #348]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e308:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e30a:	f001 0103 	and.w	r1, r1, #3
9000e30e:	2903      	cmp	r1, #3
9000e310:	f43f aac0 	beq.w	9000d894 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000e314:	2100      	movs	r1, #0
9000e316:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e31a:	f7ff f8db 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e31e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e320:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e324:	2d00      	cmp	r5, #0
9000e326:	f47f aebf 	bne.w	9000e0a8 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000e32a:	f7ff b9a2 	b.w	9000d672 <HAL_RCCEx_PeriphCLKConfig+0xba>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e32e:	494d      	ldr	r1, [pc, #308]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e330:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e332:	f001 0103 	and.w	r1, r1, #3
9000e336:	2903      	cmp	r1, #3
9000e338:	f43f aaba 	beq.w	9000d8b0 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000e33c:	2100      	movs	r1, #0
9000e33e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e342:	f7ff f8c7 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e346:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e348:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e34c:	2d00      	cmp	r5, #0
9000e34e:	f47f aeae 	bne.w	9000e0ae <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000e352:	f7ff b9b8 	b.w	9000d6c6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e356:	4943      	ldr	r1, [pc, #268]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e358:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e35a:	f001 0103 	and.w	r1, r1, #3
9000e35e:	2903      	cmp	r1, #3
9000e360:	d041      	beq.n	9000e3e6 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000e362:	2101      	movs	r1, #1
9000e364:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e368:	f7ff f8b4 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e36c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000e36e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e372:	2d00      	cmp	r5, #0
9000e374:	f47f ab56 	bne.w	9000da24 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000e378:	e6b8      	b.n	9000e0ec <HAL_RCCEx_PeriphCLKConfig+0xb34>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e37a:	493a      	ldr	r1, [pc, #232]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e37c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e37e:	f001 0103 	and.w	r1, r1, #3
9000e382:	2903      	cmp	r1, #3
9000e384:	d02b      	beq.n	9000e3de <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000e386:	2101      	movs	r1, #1
9000e388:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e38c:	f7ff f8a2 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e390:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000e392:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e396:	2d00      	cmp	r5, #0
9000e398:	f47f ab1f 	bne.w	9000d9da <HAL_RCCEx_PeriphCLKConfig+0x422>
9000e39c:	e698      	b.n	9000e0d0 <HAL_RCCEx_PeriphCLKConfig+0xb18>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e39e:	4931      	ldr	r1, [pc, #196]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e3a0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e3a2:	f001 0103 	and.w	r1, r1, #3
9000e3a6:	2903      	cmp	r1, #3
9000e3a8:	f43f aaf5 	beq.w	9000d996 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000e3ac:	2101      	movs	r1, #1
9000e3ae:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e3b2:	f7ff f88f 	bl	9000d4d4 <RCCEx_PLL3_Config.part.0>
9000e3b6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000e3b8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e3bc:	2d00      	cmp	r5, #0
9000e3be:	f47f aea6 	bne.w	9000e10e <HAL_RCCEx_PeriphCLKConfig+0xb56>
9000e3c2:	e56d      	b.n	9000dea0 <HAL_RCCEx_PeriphCLKConfig+0x8e8>
        ret = HAL_TIMEOUT;
9000e3c4:	2503      	movs	r5, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000e3c6:	462e      	mov	r6, r5
9000e3c8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e3cc:	f7ff bab3 	b.w	9000d936 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e3d0:	4d24      	ldr	r5, [pc, #144]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e3d2:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000e3d4:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000e3d8:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000e3da:	f7ff b915 	b.w	9000d608 <HAL_RCCEx_PeriphCLKConfig+0x50>
9000e3de:	2601      	movs	r6, #1
9000e3e0:	4635      	mov	r5, r6
9000e3e2:	f7ff bafb 	b.w	9000d9dc <HAL_RCCEx_PeriphCLKConfig+0x424>
9000e3e6:	2601      	movs	r6, #1
9000e3e8:	4635      	mov	r5, r6
9000e3ea:	f7ff bb1c 	b.w	9000da26 <HAL_RCCEx_PeriphCLKConfig+0x46e>
        status = HAL_ERROR;
9000e3ee:	2601      	movs	r6, #1
9000e3f0:	f7ff bb9c 	b.w	9000db2c <HAL_RCCEx_PeriphCLKConfig+0x574>
        status = HAL_ERROR;
9000e3f4:	2601      	movs	r6, #1
9000e3f6:	f7ff bba7 	b.w	9000db48 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000e3fa:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000e3fe:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000e400:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e404:	f7ff bba0 	b.w	9000db48 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000e408:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000e40c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e410:	f7ff bb8c 	b.w	9000db2c <HAL_RCCEx_PeriphCLKConfig+0x574>
9000e414:	2601      	movs	r6, #1
9000e416:	4635      	mov	r5, r6
9000e418:	f7ff ba8a 	b.w	9000d930 <HAL_RCCEx_PeriphCLKConfig+0x378>
        tickstart = HAL_GetTick();
9000e41c:	f7f9 fd88 	bl	90007f30 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e420:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>
        tickstart = HAL_GetTick();
9000e424:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e426:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e42a:	e004      	b.n	9000e436 <HAL_RCCEx_PeriphCLKConfig+0xe7e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e42c:	f7f9 fd80 	bl	90007f30 <HAL_GetTick>
9000e430:	1bc0      	subs	r0, r0, r7
9000e432:	4548      	cmp	r0, r9
9000e434:	d810      	bhi.n	9000e458 <HAL_RCCEx_PeriphCLKConfig+0xea0>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e436:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000e43a:	079b      	lsls	r3, r3, #30
9000e43c:	d5f6      	bpl.n	9000e42c <HAL_RCCEx_PeriphCLKConfig+0xe74>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000e43e:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000e442:	e566      	b.n	9000df12 <HAL_RCCEx_PeriphCLKConfig+0x95a>
9000e444:	4807      	ldr	r0, [pc, #28]	@ (9000e464 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e446:	4a08      	ldr	r2, [pc, #32]	@ (9000e468 <HAL_RCCEx_PeriphCLKConfig+0xeb0>)
9000e448:	6901      	ldr	r1, [r0, #16]
9000e44a:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000e44e:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000e452:	430a      	orrs	r2, r1
9000e454:	6102      	str	r2, [r0, #16]
9000e456:	e567      	b.n	9000df28 <HAL_RCCEx_PeriphCLKConfig+0x970>
        status = ret;
9000e458:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000e45a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e45e:	4635      	mov	r5, r6
9000e460:	f7ff ba69 	b.w	9000d936 <HAL_RCCEx_PeriphCLKConfig+0x37e>
9000e464:	58024400 	.word	0x58024400
9000e468:	00ffffcf 	.word	0x00ffffcf

9000e46c <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000e46c:	b318      	cbz	r0, 9000e4b6 <HAL_SDRAM_Init+0x4a>
{
9000e46e:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000e470:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000e474:	4604      	mov	r4, r0
9000e476:	460d      	mov	r5, r1
9000e478:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000e47c:	b1b3      	cbz	r3, 9000e4ac <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000e47e:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e480:	2302      	movs	r3, #2
9000e482:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000e486:	f851 0b04 	ldr.w	r0, [r1], #4
9000e48a:	f000 fa13 	bl	9000e8b4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000e48e:	6862      	ldr	r2, [r4, #4]
9000e490:	4629      	mov	r1, r5
9000e492:	6820      	ldr	r0, [r4, #0]
9000e494:	f000 fa46 	bl	9000e924 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000e498:	4a08      	ldr	r2, [pc, #32]	@ (9000e4bc <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000e49a:	2101      	movs	r1, #1

  return HAL_OK;
9000e49c:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000e49e:	6813      	ldr	r3, [r2, #0]
9000e4a0:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000e4a4:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000e4a6:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000e4aa:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000e4ac:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000e4b0:	f7f6 f9d2 	bl	90004858 <HAL_SDRAM_MspInit>
9000e4b4:	e7e3      	b.n	9000e47e <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000e4b6:	2001      	movs	r0, #1
}
9000e4b8:	4770      	bx	lr
9000e4ba:	bf00      	nop
9000e4bc:	52004000 	.word	0x52004000

9000e4c0 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000e4c0:	b510      	push	{r4, lr}
9000e4c2:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000e4c4:	f7f6 fa44 	bl	90004950 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000e4c8:	e9d4 0100 	ldrd	r0, r1, [r4]
9000e4cc:	f000 fa68 	bl	9000e9a0 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000e4d0:	2000      	movs	r0, #0
9000e4d2:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000e4d6:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000e4da:	bd10      	pop	{r4, pc}

9000e4dc <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000e4dc:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000e4de:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000e4e2:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000e4e4:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000e4e6:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000e4e8:	d004      	beq.n	9000e4f4 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000e4ea:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000e4ee:	2c01      	cmp	r4, #1
9000e4f0:	d001      	beq.n	9000e4f6 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000e4f2:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000e4f4:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e4f6:	2302      	movs	r3, #2
9000e4f8:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000e4fa:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e4fc:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000e500:	f000 fa62 	bl	9000e9c8 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000e504:	6833      	ldr	r3, [r6, #0]
9000e506:	2b02      	cmp	r3, #2
9000e508:	d003      	beq.n	9000e512 <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000e50a:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000e50e:	2000      	movs	r0, #0
}
9000e510:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000e512:	2305      	movs	r3, #5
9000e514:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000e518:	e7f9      	b.n	9000e50e <HAL_SDRAM_SendCommand+0x32>
9000e51a:	bf00      	nop

9000e51c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000e51c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000e51e:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000e522:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000e524:	2b02      	cmp	r3, #2
9000e526:	b2d8      	uxtb	r0, r3
9000e528:	d005      	beq.n	9000e536 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000e52a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000e52e:	2b01      	cmp	r3, #1
9000e530:	b2dd      	uxtb	r5, r3
9000e532:	d001      	beq.n	9000e538 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000e534:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000e536:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e538:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000e53a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e53c:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000e540:	f000 fa5a 	bl	9000e9f8 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000e544:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000e546:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000e54a:	bd38      	pop	{r3, r4, r5, pc}

9000e54c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000e54c:	4770      	bx	lr
9000e54e:	bf00      	nop

9000e550 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000e550:	2800      	cmp	r0, #0
9000e552:	f000 8094 	beq.w	9000e67e <HAL_TIM_Base_Init+0x12e>
{
9000e556:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000e558:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000e55c:	4604      	mov	r4, r0
9000e55e:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000e562:	2b00      	cmp	r3, #0
9000e564:	d07b      	beq.n	9000e65e <HAL_TIM_Base_Init+0x10e>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000e566:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000e568:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e56a:	4946      	ldr	r1, [pc, #280]	@ (9000e684 <HAL_TIM_Base_Init+0x134>)
9000e56c:	4846      	ldr	r0, [pc, #280]	@ (9000e688 <HAL_TIM_Base_Init+0x138>)
9000e56e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000e572:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000e576:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e57a:	eba3 0e00 	sub.w	lr, r3, r0
  tmpcr1 = TIMx->CR1;
9000e57e:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e580:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e584:	69a7      	ldr	r7, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e586:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000e58a:	6865      	ldr	r5, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e58c:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e590:	68e6      	ldr	r6, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e592:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000e596:	d020      	beq.n	9000e5da <HAL_TIM_Base_Init+0x8a>
9000e598:	b9f9      	cbnz	r1, 9000e5da <HAL_TIM_Base_Init+0x8a>
9000e59a:	f8df c0fc 	ldr.w	ip, [pc, #252]	@ 9000e698 <HAL_TIM_Base_Init+0x148>
9000e59e:	4563      	cmp	r3, ip
9000e5a0:	d01b      	beq.n	9000e5da <HAL_TIM_Base_Init+0x8a>
9000e5a2:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000e5a6:	4563      	cmp	r3, ip
9000e5a8:	d017      	beq.n	9000e5da <HAL_TIM_Base_Init+0x8a>
9000e5aa:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000e5ae:	4563      	cmp	r3, ip
9000e5b0:	d013      	beq.n	9000e5da <HAL_TIM_Base_Init+0x8a>
9000e5b2:	f1be 0f00 	cmp.w	lr, #0
9000e5b6:	d110      	bne.n	9000e5da <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e5b8:	4834      	ldr	r0, [pc, #208]	@ (9000e68c <HAL_TIM_Base_Init+0x13c>)
9000e5ba:	4935      	ldr	r1, [pc, #212]	@ (9000e690 <HAL_TIM_Base_Init+0x140>)
9000e5bc:	428b      	cmp	r3, r1
9000e5be:	bf18      	it	ne
9000e5c0:	4283      	cmpne	r3, r0
9000e5c2:	d051      	beq.n	9000e668 <HAL_TIM_Base_Init+0x118>
9000e5c4:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000e5c8:	428b      	cmp	r3, r1
9000e5ca:	d04d      	beq.n	9000e668 <HAL_TIM_Base_Init+0x118>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e5cc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000e5d0:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000e5d2:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e5d4:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e5d6:	629d      	str	r5, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e5d8:	e01d      	b.n	9000e616 <HAL_TIM_Base_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
9000e5da:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000e5dc:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000e5e0:	4302      	orrs	r2, r0
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e5e2:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e5e4:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e5e8:	4302      	orrs	r2, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e5ea:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000e5ee:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000e5f0:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e5f2:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e5f4:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e5f6:	b961      	cbnz	r1, 9000e612 <HAL_TIM_Base_Init+0xc2>
9000e5f8:	f1be 0f00 	cmp.w	lr, #0
9000e5fc:	d109      	bne.n	9000e612 <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e5fe:	4925      	ldr	r1, [pc, #148]	@ (9000e694 <HAL_TIM_Base_Init+0x144>)
9000e600:	4a22      	ldr	r2, [pc, #136]	@ (9000e68c <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e602:	4293      	cmp	r3, r2
9000e604:	bf18      	it	ne
9000e606:	428b      	cmpne	r3, r1
9000e608:	d003      	beq.n	9000e612 <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e60a:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e60e:	4293      	cmp	r3, r2
9000e610:	d101      	bne.n	9000e616 <HAL_TIM_Base_Init+0xc6>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000e612:	6962      	ldr	r2, [r4, #20]
9000e614:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000e616:	2201      	movs	r2, #1
9000e618:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
9000e61a:	691a      	ldr	r2, [r3, #16]
9000e61c:	07d2      	lsls	r2, r2, #31
9000e61e:	d503      	bpl.n	9000e628 <HAL_TIM_Base_Init+0xd8>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
9000e620:	691a      	ldr	r2, [r3, #16]
9000e622:	f022 0201 	bic.w	r2, r2, #1
9000e626:	611a      	str	r2, [r3, #16]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000e628:	2301      	movs	r3, #1
  return HAL_OK;
9000e62a:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000e62c:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e630:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9000e634:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
9000e638:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000e63c:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
9000e640:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000e644:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e648:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000e64c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000e650:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9000e654:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000e658:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
9000e65c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
9000e65e:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000e662:	f7ff ff73 	bl	9000e54c <HAL_TIM_Base_MspInit>
9000e666:	e77e      	b.n	9000e566 <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e668:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e66a:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e66e:	430a      	orrs	r2, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e670:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000e674:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000e676:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e678:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e67a:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e67c:	e7bf      	b.n	9000e5fe <HAL_TIM_Base_Init+0xae>
    return HAL_ERROR;
9000e67e:	2001      	movs	r0, #1
}
9000e680:	4770      	bx	lr
9000e682:	bf00      	nop
9000e684:	40010000 	.word	0x40010000
9000e688:	40010400 	.word	0x40010400
9000e68c:	40014000 	.word	0x40014000
9000e690:	40014400 	.word	0x40014400
9000e694:	40014800 	.word	0x40014800
9000e698:	40000400 	.word	0x40000400

9000e69c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000e69c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000e6a0:	2b01      	cmp	r3, #1
9000e6a2:	d13d      	bne.n	9000e720 <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e6a4:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000e6a6:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e6a8:	4b1e      	ldr	r3, [pc, #120]	@ (9000e724 <HAL_TIM_Base_Start_IT+0x88>)
9000e6aa:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000e6ae:	bf18      	it	ne
9000e6b0:	429a      	cmpne	r2, r3
{
9000e6b2:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e6b4:	bf0c      	ite	eq
9000e6b6:	2301      	moveq	r3, #1
9000e6b8:	2300      	movne	r3, #0
9000e6ba:	4d1b      	ldr	r5, [pc, #108]	@ (9000e728 <HAL_TIM_Base_Start_IT+0x8c>)
9000e6bc:	4c1b      	ldr	r4, [pc, #108]	@ (9000e72c <HAL_TIM_Base_Start_IT+0x90>)
9000e6be:	42aa      	cmp	r2, r5
9000e6c0:	bf08      	it	eq
9000e6c2:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000e6c6:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e6ca:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e6cc:	42a2      	cmp	r2, r4
9000e6ce:	bf08      	it	eq
9000e6d0:	f043 0301 	orreq.w	r3, r3, #1
9000e6d4:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e6d8:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e6dc:	4814      	ldr	r0, [pc, #80]	@ (9000e730 <HAL_TIM_Base_Start_IT+0x94>)
9000e6de:	42a2      	cmp	r2, r4
9000e6e0:	bf08      	it	eq
9000e6e2:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e6e6:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e6e8:	4282      	cmp	r2, r0
9000e6ea:	bf08      	it	eq
9000e6ec:	f043 0301 	orreq.w	r3, r3, #1
9000e6f0:	4910      	ldr	r1, [pc, #64]	@ (9000e734 <HAL_TIM_Base_Start_IT+0x98>)
9000e6f2:	428a      	cmp	r2, r1
9000e6f4:	bf08      	it	eq
9000e6f6:	f043 0301 	orreq.w	r3, r3, #1
9000e6fa:	b913      	cbnz	r3, 9000e702 <HAL_TIM_Base_Start_IT+0x66>
9000e6fc:	4b0e      	ldr	r3, [pc, #56]	@ (9000e738 <HAL_TIM_Base_Start_IT+0x9c>)
9000e6fe:	429a      	cmp	r2, r3
9000e700:	d107      	bne.n	9000e712 <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000e702:	6891      	ldr	r1, [r2, #8]
9000e704:	4b0d      	ldr	r3, [pc, #52]	@ (9000e73c <HAL_TIM_Base_Start_IT+0xa0>)
9000e706:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000e708:	2b06      	cmp	r3, #6
9000e70a:	d006      	beq.n	9000e71a <HAL_TIM_Base_Start_IT+0x7e>
9000e70c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000e710:	d003      	beq.n	9000e71a <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000e712:	6813      	ldr	r3, [r2, #0]
9000e714:	f043 0301 	orr.w	r3, r3, #1
9000e718:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000e71a:	2000      	movs	r0, #0
}
9000e71c:	bc30      	pop	{r4, r5}
9000e71e:	4770      	bx	lr
    return HAL_ERROR;
9000e720:	2001      	movs	r0, #1
}
9000e722:	4770      	bx	lr
9000e724:	40010000 	.word	0x40010000
9000e728:	40000400 	.word	0x40000400
9000e72c:	40000800 	.word	0x40000800
9000e730:	40010400 	.word	0x40010400
9000e734:	40001800 	.word	0x40001800
9000e738:	40014000 	.word	0x40014000
9000e73c:	00010007 	.word	0x00010007

9000e740 <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000e740:	4770      	bx	lr
9000e742:	bf00      	nop

9000e744 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000e744:	4770      	bx	lr
9000e746:	bf00      	nop

9000e748 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000e748:	4770      	bx	lr
9000e74a:	bf00      	nop

9000e74c <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000e74c:	4770      	bx	lr
9000e74e:	bf00      	nop

9000e750 <HAL_TIM_IRQHandler>:
{
9000e750:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t itsource = htim->Instance->DIER;
9000e752:	6803      	ldr	r3, [r0, #0]
{
9000e754:	4605      	mov	r5, r0
  uint32_t itsource = htim->Instance->DIER;
9000e756:	68de      	ldr	r6, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
9000e758:	691c      	ldr	r4, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000e75a:	07a1      	lsls	r1, r4, #30
9000e75c:	d501      	bpl.n	9000e762 <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000e75e:	07b2      	lsls	r2, r6, #30
9000e760:	d457      	bmi.n	9000e812 <HAL_TIM_IRQHandler+0xc2>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000e762:	0767      	lsls	r7, r4, #29
9000e764:	d501      	bpl.n	9000e76a <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000e766:	0770      	lsls	r0, r6, #29
9000e768:	d440      	bmi.n	9000e7ec <HAL_TIM_IRQHandler+0x9c>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000e76a:	0721      	lsls	r1, r4, #28
9000e76c:	d501      	bpl.n	9000e772 <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000e76e:	0732      	lsls	r2, r6, #28
9000e770:	d42a      	bmi.n	9000e7c8 <HAL_TIM_IRQHandler+0x78>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000e772:	06e7      	lsls	r7, r4, #27
9000e774:	d501      	bpl.n	9000e77a <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000e776:	06f0      	lsls	r0, r6, #27
9000e778:	d413      	bmi.n	9000e7a2 <HAL_TIM_IRQHandler+0x52>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000e77a:	07e1      	lsls	r1, r4, #31
9000e77c:	d501      	bpl.n	9000e782 <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000e77e:	07f2      	lsls	r2, r6, #31
9000e780:	d465      	bmi.n	9000e84e <HAL_TIM_IRQHandler+0xfe>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000e782:	f414 5f02 	tst.w	r4, #8320	@ 0x2080
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000e786:	f404 7780 	and.w	r7, r4, #256	@ 0x100
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000e78a:	d052      	beq.n	9000e832 <HAL_TIM_IRQHandler+0xe2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000e78c:	0633      	lsls	r3, r6, #24
9000e78e:	d466      	bmi.n	9000e85e <HAL_TIM_IRQHandler+0x10e>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000e790:	0660      	lsls	r0, r4, #25
9000e792:	d501      	bpl.n	9000e798 <HAL_TIM_IRQHandler+0x48>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000e794:	0671      	lsls	r1, r6, #25
9000e796:	d473      	bmi.n	9000e880 <HAL_TIM_IRQHandler+0x130>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000e798:	06a2      	lsls	r2, r4, #26
9000e79a:	d501      	bpl.n	9000e7a0 <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000e79c:	06b3      	lsls	r3, r6, #26
9000e79e:	d44d      	bmi.n	9000e83c <HAL_TIM_IRQHandler+0xec>
}
9000e7a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000e7a2:	682b      	ldr	r3, [r5, #0]
9000e7a4:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000e7a8:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000e7aa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000e7ac:	2208      	movs	r2, #8
9000e7ae:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000e7b0:	69db      	ldr	r3, [r3, #28]
9000e7b2:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000e7b6:	d174      	bne.n	9000e8a2 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e7b8:	f7ff ffc2 	bl	9000e740 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e7bc:	4628      	mov	r0, r5
9000e7be:	f7ff ffc3 	bl	9000e748 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e7c2:	2300      	movs	r3, #0
9000e7c4:	772b      	strb	r3, [r5, #28]
9000e7c6:	e7d8      	b.n	9000e77a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000e7c8:	682b      	ldr	r3, [r5, #0]
9000e7ca:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000e7ce:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000e7d0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000e7d2:	2204      	movs	r2, #4
9000e7d4:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000e7d6:	69db      	ldr	r3, [r3, #28]
9000e7d8:	079b      	lsls	r3, r3, #30
9000e7da:	d15f      	bne.n	9000e89c <HAL_TIM_IRQHandler+0x14c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e7dc:	f7ff ffb0 	bl	9000e740 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e7e0:	4628      	mov	r0, r5
9000e7e2:	f7ff ffb1 	bl	9000e748 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e7e6:	2300      	movs	r3, #0
9000e7e8:	772b      	strb	r3, [r5, #28]
9000e7ea:	e7c2      	b.n	9000e772 <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000e7ec:	682b      	ldr	r3, [r5, #0]
9000e7ee:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000e7f2:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000e7f4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000e7f6:	2202      	movs	r2, #2
9000e7f8:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000e7fa:	699b      	ldr	r3, [r3, #24]
9000e7fc:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000e800:	d149      	bne.n	9000e896 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e802:	f7ff ff9d 	bl	9000e740 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e806:	4628      	mov	r0, r5
9000e808:	f7ff ff9e 	bl	9000e748 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e80c:	2300      	movs	r3, #0
9000e80e:	772b      	strb	r3, [r5, #28]
9000e810:	e7ab      	b.n	9000e76a <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000e812:	f06f 0202 	mvn.w	r2, #2
9000e816:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000e818:	2201      	movs	r2, #1
9000e81a:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000e81c:	699b      	ldr	r3, [r3, #24]
9000e81e:	079b      	lsls	r3, r3, #30
9000e820:	d136      	bne.n	9000e890 <HAL_TIM_IRQHandler+0x140>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000e822:	f7ff ff8d 	bl	9000e740 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e826:	4628      	mov	r0, r5
9000e828:	f7ff ff8e 	bl	9000e748 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e82c:	2300      	movs	r3, #0
9000e82e:	772b      	strb	r3, [r5, #28]
9000e830:	e797      	b.n	9000e762 <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000e832:	2f00      	cmp	r7, #0
9000e834:	d0ac      	beq.n	9000e790 <HAL_TIM_IRQHandler+0x40>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000e836:	0637      	lsls	r7, r6, #24
9000e838:	d41a      	bmi.n	9000e870 <HAL_TIM_IRQHandler+0x120>
9000e83a:	e7a9      	b.n	9000e790 <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000e83c:	682b      	ldr	r3, [r5, #0]
9000e83e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000e842:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000e844:	611a      	str	r2, [r3, #16]
}
9000e846:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
      HAL_TIMEx_CommutCallback(htim);
9000e84a:	f000 b82d 	b.w	9000e8a8 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000e84e:	682b      	ldr	r3, [r5, #0]
9000e850:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000e854:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000e856:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000e858:	f7f5 fe62 	bl	90004520 <HAL_TIM_PeriodElapsedCallback>
9000e85c:	e791      	b.n	9000e782 <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000e85e:	682b      	ldr	r3, [r5, #0]
9000e860:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000e864:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000e866:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000e868:	f000 f820 	bl	9000e8ac <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000e86c:	2f00      	cmp	r7, #0
9000e86e:	d08f      	beq.n	9000e790 <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000e870:	682b      	ldr	r3, [r5, #0]
9000e872:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000e876:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000e878:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000e87a:	f000 f819 	bl	9000e8b0 <HAL_TIMEx_Break2Callback>
9000e87e:	e787      	b.n	9000e790 <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000e880:	682b      	ldr	r3, [r5, #0]
9000e882:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000e886:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000e888:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000e88a:	f7ff ff5f 	bl	9000e74c <HAL_TIM_TriggerCallback>
9000e88e:	e783      	b.n	9000e798 <HAL_TIM_IRQHandler+0x48>
          HAL_TIM_IC_CaptureCallback(htim);
9000e890:	f7ff ff58 	bl	9000e744 <HAL_TIM_IC_CaptureCallback>
9000e894:	e7ca      	b.n	9000e82c <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000e896:	f7ff ff55 	bl	9000e744 <HAL_TIM_IC_CaptureCallback>
9000e89a:	e7b7      	b.n	9000e80c <HAL_TIM_IRQHandler+0xbc>
        HAL_TIM_IC_CaptureCallback(htim);
9000e89c:	f7ff ff52 	bl	9000e744 <HAL_TIM_IC_CaptureCallback>
9000e8a0:	e7a1      	b.n	9000e7e6 <HAL_TIM_IRQHandler+0x96>
        HAL_TIM_IC_CaptureCallback(htim);
9000e8a2:	f7ff ff4f 	bl	9000e744 <HAL_TIM_IC_CaptureCallback>
9000e8a6:	e78c      	b.n	9000e7c2 <HAL_TIM_IRQHandler+0x72>

9000e8a8 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000e8a8:	4770      	bx	lr
9000e8aa:	bf00      	nop

9000e8ac <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000e8ac:	4770      	bx	lr
9000e8ae:	bf00      	nop

9000e8b0 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000e8b0:	4770      	bx	lr
9000e8b2:	bf00      	nop

9000e8b4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
9000e8b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e8b8:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000e8bc:	e9d1 8200 	ldrd	r8, r2, [r1]
9000e8c0:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000e8c2:	ea43 030e 	orr.w	r3, r3, lr
9000e8c6:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000e8ca:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000e8ce:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000e8d0:	f1b8 0f00 	cmp.w	r8, #0
9000e8d4:	d10f      	bne.n	9000e8f6 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e8d6:	433b      	orrs	r3, r7
9000e8d8:	4313      	orrs	r3, r2
9000e8da:	4a11      	ldr	r2, [pc, #68]	@ (9000e920 <FMC_SDRAM_Init+0x6c>)
9000e8dc:	ea43 030c 	orr.w	r3, r3, ip
9000e8e0:	4333      	orrs	r3, r6
9000e8e2:	432b      	orrs	r3, r5
9000e8e4:	4323      	orrs	r3, r4
9000e8e6:	430b      	orrs	r3, r1
9000e8e8:	6801      	ldr	r1, [r0, #0]
9000e8ea:	400a      	ands	r2, r1
9000e8ec:	4313      	orrs	r3, r2
9000e8ee:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000e8f0:	2000      	movs	r0, #0
9000e8f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e8f6:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e8fa:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e8fc:	4332      	orrs	r2, r6
9000e8fe:	432a      	orrs	r2, r5
9000e900:	4322      	orrs	r2, r4
9000e902:	4c07      	ldr	r4, [pc, #28]	@ (9000e920 <FMC_SDRAM_Init+0x6c>)
9000e904:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e906:	6801      	ldr	r1, [r0, #0]
9000e908:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000e90c:	430b      	orrs	r3, r1
9000e90e:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e910:	6843      	ldr	r3, [r0, #4]
9000e912:	401c      	ands	r4, r3
9000e914:	4322      	orrs	r2, r4
9000e916:	6042      	str	r2, [r0, #4]
}
9000e918:	2000      	movs	r0, #0
9000e91a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e91e:	bf00      	nop
9000e920:	ffff8000 	.word	0xffff8000

9000e924 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000e924:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e926:	68cc      	ldr	r4, [r1, #12]
9000e928:	694b      	ldr	r3, [r1, #20]
9000e92a:	3c01      	subs	r4, #1
9000e92c:	688d      	ldr	r5, [r1, #8]
9000e92e:	698f      	ldr	r7, [r1, #24]
9000e930:	3b01      	subs	r3, #1
9000e932:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000e936:	684c      	ldr	r4, [r1, #4]
9000e938:	680e      	ldr	r6, [r1, #0]
9000e93a:	3d01      	subs	r5, #1
9000e93c:	3c01      	subs	r4, #1
9000e93e:	051b      	lsls	r3, r3, #20
9000e940:	022d      	lsls	r5, r5, #8
9000e942:	3e01      	subs	r6, #1
9000e944:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000e948:	690c      	ldr	r4, [r1, #16]
9000e94a:	1e79      	subs	r1, r7, #1
9000e94c:	3c01      	subs	r4, #1
9000e94e:	0609      	lsls	r1, r1, #24
9000e950:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000e952:	b972      	cbnz	r2, 9000e972 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e954:	ea4e 0303 	orr.w	r3, lr, r3
9000e958:	6882      	ldr	r2, [r0, #8]
9000e95a:	4333      	orrs	r3, r6
9000e95c:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000e960:	ea43 030c 	orr.w	r3, r3, ip
9000e964:	432b      	orrs	r3, r5
9000e966:	4323      	orrs	r3, r4
9000e968:	430b      	orrs	r3, r1
9000e96a:	4313      	orrs	r3, r2
9000e96c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000e96e:	2000      	movs	r0, #0
9000e970:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e972:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e976:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e97a:	4a08      	ldr	r2, [pc, #32]	@ (9000e99c <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e97c:	4333      	orrs	r3, r6
9000e97e:	4323      	orrs	r3, r4
9000e980:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e982:	6881      	ldr	r1, [r0, #8]
9000e984:	400a      	ands	r2, r1
9000e986:	ea42 020e 	orr.w	r2, r2, lr
9000e98a:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e98c:	68c2      	ldr	r2, [r0, #12]
9000e98e:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000e992:	4313      	orrs	r3, r2
9000e994:	60c3      	str	r3, [r0, #12]
}
9000e996:	2000      	movs	r0, #0
9000e998:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000e99a:	bf00      	nop
9000e99c:	ff0f0fff 	.word	0xff0f0fff

9000e9a0 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000e9a0:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000e9a2:	2200      	movs	r2, #0
{
9000e9a4:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000e9a6:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e9aa:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000e9ae:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000e9b2:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000e9b6:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e9b8:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000e9bc:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000e9be:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000e9c0:	619a      	str	r2, [r3, #24]
}
9000e9c2:	bc30      	pop	{r4, r5}
9000e9c4:	4770      	bx	lr
9000e9c6:	bf00      	nop

9000e9c8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000e9c8:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e9ca:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000e9ce:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e9d0:	6900      	ldr	r0, [r0, #16]
9000e9d2:	4323      	orrs	r3, r4
9000e9d4:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000e9d8:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000e9dc:	4c05      	ldr	r4, [pc, #20]	@ (9000e9f4 <FMC_SDRAM_SendCommand+0x2c>)
9000e9de:	3901      	subs	r1, #1
9000e9e0:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000e9e2:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e9e4:	4323      	orrs	r3, r4
}
9000e9e6:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e9ea:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000e9ee:	6113      	str	r3, [r2, #16]
}
9000e9f0:	4770      	bx	lr
9000e9f2:	bf00      	nop
9000e9f4:	ffc00000 	.word	0xffc00000

9000e9f8 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000e9f8:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e9fa:	4b05      	ldr	r3, [pc, #20]	@ (9000ea10 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000e9fc:	2000      	movs	r0, #0
{
9000e9fe:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000ea00:	6954      	ldr	r4, [r2, #20]
9000ea02:	4023      	ands	r3, r4
}
9000ea04:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000ea08:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000ea0c:	6153      	str	r3, [r2, #20]
}
9000ea0e:	4770      	bx	lr
9000ea10:	ffffc001 	.word	0xffffc001

9000ea14 <USB_CoreInit>:
  * @param  cfg pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_CoreInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
9000ea14:	b084      	sub	sp, #16
9000ea16:	b082      	sub	sp, #8
9000ea18:	f10d 0c0c 	add.w	ip, sp, #12
9000ea1c:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
  HAL_StatusTypeDef ret;
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
9000ea20:	f89d 2011 	ldrb.w	r2, [sp, #17]
{
9000ea24:	4603      	mov	r3, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
9000ea26:	2a01      	cmp	r2, #1
9000ea28:	d135      	bne.n	9000ea96 <USB_CoreInit+0x82>
  {
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000ea2a:	6b81      	ldr	r1, [r0, #56]	@ 0x38

    /* Init The ULPI Interface */
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
9000ea2c:	f1a2 1242 	sub.w	r2, r2, #4325442	@ 0x420042

    /* Select vbus source */
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
    if (cfg.use_external_vbus == 1U)
9000ea30:	f89d 0018 	ldrb.w	r0, [sp, #24]
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000ea34:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
    if (cfg.use_external_vbus == 1U)
9000ea38:	2801      	cmp	r0, #1
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000ea3a:	6399      	str	r1, [r3, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
9000ea3c:	68d9      	ldr	r1, [r3, #12]
9000ea3e:	ea02 0201 	and.w	r2, r2, r1
9000ea42:	60da      	str	r2, [r3, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
9000ea44:	68da      	ldr	r2, [r3, #12]
9000ea46:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
9000ea4a:	60da      	str	r2, [r3, #12]
    if (cfg.use_external_vbus == 1U)
9000ea4c:	d068      	beq.n	9000eb20 <USB_CoreInit+0x10c>
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
  __IO uint32_t count = 0U;
9000ea4e:	2200      	movs	r2, #0
9000ea50:	9200      	str	r2, [sp, #0]
9000ea52:	e002      	b.n	9000ea5a <USB_CoreInit+0x46>

    if (count > HAL_USB_TIMEOUT)
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000ea54:	691a      	ldr	r2, [r3, #16]
9000ea56:	2a00      	cmp	r2, #0
9000ea58:	db37      	blt.n	9000eaca <USB_CoreInit+0xb6>
    count++;
9000ea5a:	9a00      	ldr	r2, [sp, #0]
9000ea5c:	3201      	adds	r2, #1
9000ea5e:	9200      	str	r2, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000ea60:	9a00      	ldr	r2, [sp, #0]
9000ea62:	f1b2 6f70 	cmp.w	r2, #251658240	@ 0xf000000
9000ea66:	d9f5      	bls.n	9000ea54 <USB_CoreInit+0x40>
      return HAL_TIMEOUT;
9000ea68:	2003      	movs	r0, #3
  if (cfg.dma_enable == 1U)
9000ea6a:	f89d 200e 	ldrb.w	r2, [sp, #14]
9000ea6e:	2a01      	cmp	r2, #1
9000ea70:	d10e      	bne.n	9000ea90 <USB_CoreInit+0x7c>
    USBx->GDFIFOCFG &= ~(0xFFFFU << 16);
9000ea72:	6dd9      	ldr	r1, [r3, #92]	@ 0x5c
    USBx->GDFIFOCFG |= 0x3EEU << 16;
9000ea74:	4a2d      	ldr	r2, [pc, #180]	@ (9000eb2c <USB_CoreInit+0x118>)
    USBx->GDFIFOCFG &= ~(0xFFFFU << 16);
9000ea76:	b289      	uxth	r1, r1
9000ea78:	65d9      	str	r1, [r3, #92]	@ 0x5c
    USBx->GDFIFOCFG |= 0x3EEU << 16;
9000ea7a:	6dd9      	ldr	r1, [r3, #92]	@ 0x5c
9000ea7c:	430a      	orrs	r2, r1
9000ea7e:	65da      	str	r2, [r3, #92]	@ 0x5c
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
9000ea80:	689a      	ldr	r2, [r3, #8]
9000ea82:	f042 0206 	orr.w	r2, r2, #6
9000ea86:	609a      	str	r2, [r3, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
9000ea88:	689a      	ldr	r2, [r3, #8]
9000ea8a:	f042 0220 	orr.w	r2, r2, #32
9000ea8e:	609a      	str	r2, [r3, #8]
}
9000ea90:	b002      	add	sp, #8
9000ea92:	b004      	add	sp, #16
9000ea94:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
9000ea96:	68c2      	ldr	r2, [r0, #12]
  __IO uint32_t count = 0U;
9000ea98:	2100      	movs	r1, #0
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
9000ea9a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000ea9e:	60c2      	str	r2, [r0, #12]
  __IO uint32_t count = 0U;
9000eaa0:	9101      	str	r1, [sp, #4]
9000eaa2:	e002      	b.n	9000eaaa <USB_CoreInit+0x96>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000eaa4:	691a      	ldr	r2, [r3, #16]
9000eaa6:	2a00      	cmp	r2, #0
9000eaa8:	db27      	blt.n	9000eafa <USB_CoreInit+0xe6>
    count++;
9000eaaa:	9a01      	ldr	r2, [sp, #4]
9000eaac:	3201      	adds	r2, #1
9000eaae:	9201      	str	r2, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000eab0:	9a01      	ldr	r2, [sp, #4]
9000eab2:	f1b2 6f70 	cmp.w	r2, #251658240	@ 0xf000000
9000eab6:	d9f5      	bls.n	9000eaa4 <USB_CoreInit+0x90>
      return HAL_TIMEOUT;
9000eab8:	2003      	movs	r0, #3
    if (cfg.battery_charging_enable == 0U)
9000eaba:	f89d 2015 	ldrb.w	r2, [sp, #21]
9000eabe:	b9ba      	cbnz	r2, 9000eaf0 <USB_CoreInit+0xdc>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
9000eac0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000eac2:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000eac6:	639a      	str	r2, [r3, #56]	@ 0x38
9000eac8:	e7cf      	b.n	9000ea6a <USB_CoreInit+0x56>

  /* Core Soft Reset */
  count = 0U;
9000eaca:	2200      	movs	r2, #0
9000eacc:	9200      	str	r2, [sp, #0]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
9000eace:	691a      	ldr	r2, [r3, #16]
9000ead0:	f042 0201 	orr.w	r2, r2, #1
9000ead4:	611a      	str	r2, [r3, #16]
9000ead6:	e003      	b.n	9000eae0 <USB_CoreInit+0xcc>

    if (count > HAL_USB_TIMEOUT)
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
9000ead8:	6918      	ldr	r0, [r3, #16]
9000eada:	f010 0001 	ands.w	r0, r0, #1
9000eade:	d0c4      	beq.n	9000ea6a <USB_CoreInit+0x56>
    count++;
9000eae0:	9a00      	ldr	r2, [sp, #0]
9000eae2:	3201      	adds	r2, #1
9000eae4:	9200      	str	r2, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000eae6:	9a00      	ldr	r2, [sp, #0]
9000eae8:	f1b2 6f70 	cmp.w	r2, #251658240	@ 0xf000000
9000eaec:	d9f4      	bls.n	9000ead8 <USB_CoreInit+0xc4>
9000eaee:	e7bb      	b.n	9000ea68 <USB_CoreInit+0x54>
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000eaf0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000eaf2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000eaf6:	639a      	str	r2, [r3, #56]	@ 0x38
9000eaf8:	e7b7      	b.n	9000ea6a <USB_CoreInit+0x56>
  count = 0U;
9000eafa:	2200      	movs	r2, #0
9000eafc:	9201      	str	r2, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
9000eafe:	691a      	ldr	r2, [r3, #16]
9000eb00:	f042 0201 	orr.w	r2, r2, #1
9000eb04:	611a      	str	r2, [r3, #16]
9000eb06:	e003      	b.n	9000eb10 <USB_CoreInit+0xfc>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
9000eb08:	6918      	ldr	r0, [r3, #16]
9000eb0a:	f010 0001 	ands.w	r0, r0, #1
9000eb0e:	d0d4      	beq.n	9000eaba <USB_CoreInit+0xa6>
    count++;
9000eb10:	9a01      	ldr	r2, [sp, #4]
9000eb12:	3201      	adds	r2, #1
9000eb14:	9201      	str	r2, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000eb16:	9a01      	ldr	r2, [sp, #4]
9000eb18:	f1b2 6f70 	cmp.w	r2, #251658240	@ 0xf000000
9000eb1c:	d9f4      	bls.n	9000eb08 <USB_CoreInit+0xf4>
9000eb1e:	e7cb      	b.n	9000eab8 <USB_CoreInit+0xa4>
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
9000eb20:	68da      	ldr	r2, [r3, #12]
9000eb22:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
9000eb26:	60da      	str	r2, [r3, #12]
9000eb28:	e791      	b.n	9000ea4e <USB_CoreInit+0x3a>
9000eb2a:	bf00      	nop
9000eb2c:	03ee0000 	.word	0x03ee0000

9000eb30 <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
9000eb30:	2a02      	cmp	r2, #2
{
9000eb32:	4603      	mov	r3, r0
  if (speed == USBD_FS_SPEED)
9000eb34:	d00a      	beq.n	9000eb4c <USB_SetTurnaroundTime+0x1c>
9000eb36:	f44f 5110 	mov.w	r1, #9216	@ 0x2400
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
9000eb3a:	68da      	ldr	r2, [r3, #12]
}
9000eb3c:	2000      	movs	r0, #0
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
9000eb3e:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
9000eb42:	60da      	str	r2, [r3, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
9000eb44:	68da      	ldr	r2, [r3, #12]
9000eb46:	430a      	orrs	r2, r1
9000eb48:	60da      	str	r2, [r3, #12]
}
9000eb4a:	4770      	bx	lr
    if ((hclk >= 14200000U) && (hclk < 15000000U))
9000eb4c:	4a23      	ldr	r2, [pc, #140]	@ (9000ebdc <USB_SetTurnaroundTime+0xac>)
9000eb4e:	4824      	ldr	r0, [pc, #144]	@ (9000ebe0 <USB_SetTurnaroundTime+0xb0>)
9000eb50:	440a      	add	r2, r1
9000eb52:	4282      	cmp	r2, r0
9000eb54:	d92c      	bls.n	9000ebb0 <USB_SetTurnaroundTime+0x80>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
9000eb56:	4a23      	ldr	r2, [pc, #140]	@ (9000ebe4 <USB_SetTurnaroundTime+0xb4>)
9000eb58:	4823      	ldr	r0, [pc, #140]	@ (9000ebe8 <USB_SetTurnaroundTime+0xb8>)
9000eb5a:	440a      	add	r2, r1
9000eb5c:	4282      	cmp	r2, r0
9000eb5e:	d92a      	bls.n	9000ebb6 <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
9000eb60:	4a22      	ldr	r2, [pc, #136]	@ (9000ebec <USB_SetTurnaroundTime+0xbc>)
9000eb62:	4823      	ldr	r0, [pc, #140]	@ (9000ebf0 <USB_SetTurnaroundTime+0xc0>)
9000eb64:	440a      	add	r2, r1
9000eb66:	4282      	cmp	r2, r0
9000eb68:	d928      	bls.n	9000ebbc <USB_SetTurnaroundTime+0x8c>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
9000eb6a:	4a22      	ldr	r2, [pc, #136]	@ (9000ebf4 <USB_SetTurnaroundTime+0xc4>)
9000eb6c:	4822      	ldr	r0, [pc, #136]	@ (9000ebf8 <USB_SetTurnaroundTime+0xc8>)
9000eb6e:	440a      	add	r2, r1
9000eb70:	4282      	cmp	r2, r0
9000eb72:	d326      	bcc.n	9000ebc2 <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
9000eb74:	4a21      	ldr	r2, [pc, #132]	@ (9000ebfc <USB_SetTurnaroundTime+0xcc>)
9000eb76:	4822      	ldr	r0, [pc, #136]	@ (9000ec00 <USB_SetTurnaroundTime+0xd0>)
9000eb78:	440a      	add	r2, r1
9000eb7a:	4282      	cmp	r2, r0
9000eb7c:	d924      	bls.n	9000ebc8 <USB_SetTurnaroundTime+0x98>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
9000eb7e:	4a21      	ldr	r2, [pc, #132]	@ (9000ec04 <USB_SetTurnaroundTime+0xd4>)
9000eb80:	4821      	ldr	r0, [pc, #132]	@ (9000ec08 <USB_SetTurnaroundTime+0xd8>)
9000eb82:	440a      	add	r2, r1
9000eb84:	4282      	cmp	r2, r0
9000eb86:	d322      	bcc.n	9000ebce <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
9000eb88:	4a20      	ldr	r2, [pc, #128]	@ (9000ec0c <USB_SetTurnaroundTime+0xdc>)
9000eb8a:	4821      	ldr	r0, [pc, #132]	@ (9000ec10 <USB_SetTurnaroundTime+0xe0>)
9000eb8c:	440a      	add	r2, r1
9000eb8e:	4282      	cmp	r2, r0
9000eb90:	d3d1      	bcc.n	9000eb36 <USB_SetTurnaroundTime+0x6>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
9000eb92:	4a20      	ldr	r2, [pc, #128]	@ (9000ec14 <USB_SetTurnaroundTime+0xe4>)
9000eb94:	4820      	ldr	r0, [pc, #128]	@ (9000ec18 <USB_SetTurnaroundTime+0xe8>)
9000eb96:	440a      	add	r2, r1
9000eb98:	4282      	cmp	r2, r0
9000eb9a:	d31b      	bcc.n	9000ebd4 <USB_SetTurnaroundTime+0xa4>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
9000eb9c:	4a1f      	ldr	r2, [pc, #124]	@ (9000ec1c <USB_SetTurnaroundTime+0xec>)
9000eb9e:	4820      	ldr	r0, [pc, #128]	@ (9000ec20 <USB_SetTurnaroundTime+0xf0>)
9000eba0:	440a      	add	r2, r1
9000eba2:	4282      	cmp	r2, r0
9000eba4:	bf2c      	ite	cs
9000eba6:	f44f 51c0 	movcs.w	r1, #6144	@ 0x1800
9000ebaa:	f44f 51e0 	movcc.w	r1, #7168	@ 0x1c00
9000ebae:	e7c4      	b.n	9000eb3a <USB_SetTurnaroundTime+0xa>
9000ebb0:	f44f 5170 	mov.w	r1, #15360	@ 0x3c00
9000ebb4:	e7c1      	b.n	9000eb3a <USB_SetTurnaroundTime+0xa>
9000ebb6:	f44f 5160 	mov.w	r1, #14336	@ 0x3800
9000ebba:	e7be      	b.n	9000eb3a <USB_SetTurnaroundTime+0xa>
9000ebbc:	f44f 5150 	mov.w	r1, #13312	@ 0x3400
9000ebc0:	e7bb      	b.n	9000eb3a <USB_SetTurnaroundTime+0xa>
9000ebc2:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
9000ebc6:	e7b8      	b.n	9000eb3a <USB_SetTurnaroundTime+0xa>
9000ebc8:	f44f 5130 	mov.w	r1, #11264	@ 0x2c00
9000ebcc:	e7b5      	b.n	9000eb3a <USB_SetTurnaroundTime+0xa>
9000ebce:	f44f 5120 	mov.w	r1, #10240	@ 0x2800
9000ebd2:	e7b2      	b.n	9000eb3a <USB_SetTurnaroundTime+0xa>
9000ebd4:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
9000ebd8:	e7af      	b.n	9000eb3a <USB_SetTurnaroundTime+0xa>
9000ebda:	bf00      	nop
9000ebdc:	ff275340 	.word	0xff275340
9000ebe0:	000c34ff 	.word	0x000c34ff
9000ebe4:	ff1b1e40 	.word	0xff1b1e40
9000ebe8:	000f423f 	.word	0x000f423f
9000ebec:	ff0bdc00 	.word	0xff0bdc00
9000ebf0:	00124f7f 	.word	0x00124f7f
9000ebf4:	fef98c80 	.word	0xfef98c80
9000ebf8:	0013d620 	.word	0x0013d620
9000ebfc:	fee5b660 	.word	0xfee5b660
9000ec00:	0016e35f 	.word	0x0016e35f
9000ec04:	feced300 	.word	0xfeced300
9000ec08:	001b7740 	.word	0x001b7740
9000ec0c:	feb35bc0 	.word	0xfeb35bc0
9000ec10:	002191c0 	.word	0x002191c0
9000ec14:	fe91ca00 	.word	0xfe91ca00
9000ec18:	00387520 	.word	0x00387520
9000ec1c:	fe5954e0 	.word	0xfe5954e0
9000ec20:	00419ce0 	.word	0x00419ce0

9000ec24 <USB_EnableGlobalInt>:
{
9000ec24:	4603      	mov	r3, r0
}
9000ec26:	2000      	movs	r0, #0
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
9000ec28:	689a      	ldr	r2, [r3, #8]
9000ec2a:	f042 0201 	orr.w	r2, r2, #1
9000ec2e:	609a      	str	r2, [r3, #8]
}
9000ec30:	4770      	bx	lr
9000ec32:	bf00      	nop

9000ec34 <USB_DisableGlobalInt>:
{
9000ec34:	4603      	mov	r3, r0
}
9000ec36:	2000      	movs	r0, #0
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
9000ec38:	689a      	ldr	r2, [r3, #8]
9000ec3a:	f022 0201 	bic.w	r2, r2, #1
9000ec3e:	609a      	str	r2, [r3, #8]
}
9000ec40:	4770      	bx	lr
9000ec42:	bf00      	nop

9000ec44 <USB_SetCurrentMode>:
{
9000ec44:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
9000ec46:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
9000ec48:	2901      	cmp	r1, #1
{
9000ec4a:	4605      	mov	r5, r0
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
9000ec4c:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
9000ec50:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
9000ec52:	d017      	beq.n	9000ec84 <USB_SetCurrentMode+0x40>
  else if (mode == USB_DEVICE_MODE)
9000ec54:	b9a1      	cbnz	r1, 9000ec80 <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
9000ec56:	68c3      	ldr	r3, [r0, #12]
  uint32_t ms = 0U;
9000ec58:	460c      	mov	r4, r1
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
9000ec5a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000ec5e:	60c3      	str	r3, [r0, #12]
9000ec60:	e001      	b.n	9000ec66 <USB_SetCurrentMode+0x22>
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
9000ec62:	2cc8      	cmp	r4, #200	@ 0xc8
9000ec64:	d00c      	beq.n	9000ec80 <USB_SetCurrentMode+0x3c>
      HAL_Delay(10U);
9000ec66:	200a      	movs	r0, #10
      ms += 10U;
9000ec68:	4404      	add	r4, r0
      HAL_Delay(10U);
9000ec6a:	f7f9 f967 	bl	90007f3c <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
9000ec6e:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
9000ec70:	07db      	lsls	r3, r3, #31
9000ec72:	d4f6      	bmi.n	9000ec62 <USB_SetCurrentMode+0x1e>
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
9000ec74:	f1a4 00c8 	sub.w	r0, r4, #200	@ 0xc8
9000ec78:	fab0 f080 	clz	r0, r0
9000ec7c:	0940      	lsrs	r0, r0, #5
}
9000ec7e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000ec80:	2001      	movs	r0, #1
}
9000ec82:	bd38      	pop	{r3, r4, r5, pc}
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
9000ec84:	68c3      	ldr	r3, [r0, #12]
  uint32_t ms = 0U;
9000ec86:	2400      	movs	r4, #0
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
9000ec88:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
9000ec8c:	60c3      	str	r3, [r0, #12]
9000ec8e:	e001      	b.n	9000ec94 <USB_SetCurrentMode+0x50>
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
9000ec90:	2cc8      	cmp	r4, #200	@ 0xc8
9000ec92:	d0f5      	beq.n	9000ec80 <USB_SetCurrentMode+0x3c>
      HAL_Delay(10U);
9000ec94:	200a      	movs	r0, #10
      ms += 10U;
9000ec96:	4404      	add	r4, r0
      HAL_Delay(10U);
9000ec98:	f7f9 f950 	bl	90007f3c <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
9000ec9c:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
9000ec9e:	07da      	lsls	r2, r3, #31
9000eca0:	d5f6      	bpl.n	9000ec90 <USB_SetCurrentMode+0x4c>
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
9000eca2:	f1a4 00c8 	sub.w	r0, r4, #200	@ 0xc8
9000eca6:	fab0 f080 	clz	r0, r0
9000ecaa:	0940      	lsrs	r0, r0, #5
9000ecac:	e7e7      	b.n	9000ec7e <USB_SetCurrentMode+0x3a>
9000ecae:	bf00      	nop

9000ecb0 <USB_DevInit>:
{
9000ecb0:	b084      	sub	sp, #16
9000ecb2:	4684      	mov	ip, r0
9000ecb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ecb8:	b082      	sub	sp, #8
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
9000ecba:	f500 6e00 	add.w	lr, r0, #2048	@ 0x800
{
9000ecbe:	ac09      	add	r4, sp, #36	@ 0x24
9000ecc0:	e884 000e 	stmia.w	r4, {r1, r2, r3}
    USBx->DIEPTXF[i] = 0U;
9000ecc4:	2300      	movs	r3, #0
9000ecc6:	f89d 402e 	ldrb.w	r4, [sp, #46]	@ 0x2e
9000ecca:	f89d 5024 	ldrb.w	r5, [sp, #36]	@ 0x24
9000ecce:	f8c0 3104 	str.w	r3, [r0, #260]	@ 0x104
9000ecd2:	f8c0 3108 	str.w	r3, [r0, #264]	@ 0x108
9000ecd6:	f8c0 310c 	str.w	r3, [r0, #268]	@ 0x10c
9000ecda:	f8c0 3110 	str.w	r3, [r0, #272]	@ 0x110
9000ecde:	f8c0 3114 	str.w	r3, [r0, #276]	@ 0x114
9000ece2:	f8c0 3118 	str.w	r3, [r0, #280]	@ 0x118
9000ece6:	f8c0 311c 	str.w	r3, [r0, #284]	@ 0x11c
9000ecea:	f8c0 3120 	str.w	r3, [r0, #288]	@ 0x120
9000ecee:	f8c0 3124 	str.w	r3, [r0, #292]	@ 0x124
9000ecf2:	f8c0 3128 	str.w	r3, [r0, #296]	@ 0x128
9000ecf6:	f8c0 312c 	str.w	r3, [r0, #300]	@ 0x12c
9000ecfa:	f8c0 3130 	str.w	r3, [r0, #304]	@ 0x130
9000ecfe:	f8c0 3134 	str.w	r3, [r0, #308]	@ 0x134
9000ed02:	f8c0 3138 	str.w	r3, [r0, #312]	@ 0x138
9000ed06:	f8c0 313c 	str.w	r3, [r0, #316]	@ 0x13c
  if (cfg.vbus_sensing_enable == 0U)
9000ed0a:	2c00      	cmp	r4, #0
9000ed0c:	f040 80bf 	bne.w	9000ee8e <USB_DevInit+0x1de>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
9000ed10:	f8de 3004 	ldr.w	r3, [lr, #4]
9000ed14:	f043 0302 	orr.w	r3, r3, #2
9000ed18:	f8ce 3004 	str.w	r3, [lr, #4]
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBDEN;
9000ed1c:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9000ed1e:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
9000ed22:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOEN;
9000ed24:	6803      	ldr	r3, [r0, #0]
9000ed26:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9000ed2a:	6003      	str	r3, [r0, #0]
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOVAL;
9000ed2c:	6803      	ldr	r3, [r0, #0]
9000ed2e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000ed32:	6003      	str	r3, [r0, #0]
  USBx_PCGCCTL = 0U;
9000ed34:	2300      	movs	r3, #0
9000ed36:	f8cc 3e00 	str.w	r3, [ip, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
9000ed3a:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
9000ed3e:	2b01      	cmp	r3, #1
9000ed40:	f000 80b1 	beq.w	9000eea6 <USB_DevInit+0x1f6>
  USBx_DEVICE->DCFG |= speed;
9000ed44:	f8dc 3800 	ldr.w	r3, [ip, #2048]	@ 0x800
9000ed48:	f043 0303 	orr.w	r3, r3, #3
9000ed4c:	f8cc 3800 	str.w	r3, [ip, #2048]	@ 0x800
  __IO uint32_t count = 0U;
9000ed50:	2300      	movs	r3, #0
9000ed52:	9300      	str	r3, [sp, #0]
9000ed54:	e004      	b.n	9000ed60 <USB_DevInit+0xb0>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000ed56:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000ed5a:	2b00      	cmp	r3, #0
9000ed5c:	f2c0 80be 	blt.w	9000eedc <USB_DevInit+0x22c>
    count++;
9000ed60:	9b00      	ldr	r3, [sp, #0]
9000ed62:	3301      	adds	r3, #1
9000ed64:	9300      	str	r3, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000ed66:	9b00      	ldr	r3, [sp, #0]
9000ed68:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000ed6c:	d9f3      	bls.n	9000ed56 <USB_DevInit+0xa6>
9000ed6e:	2001      	movs	r0, #1
  __IO uint32_t count = 0U;
9000ed70:	2300      	movs	r3, #0
9000ed72:	9301      	str	r3, [sp, #4]
9000ed74:	e004      	b.n	9000ed80 <USB_DevInit+0xd0>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000ed76:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000ed7a:	2b00      	cmp	r3, #0
9000ed7c:	f2c0 809b 	blt.w	9000eeb6 <USB_DevInit+0x206>
    count++;
9000ed80:	9b01      	ldr	r3, [sp, #4]
9000ed82:	3301      	adds	r3, #1
9000ed84:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000ed86:	9b01      	ldr	r3, [sp, #4]
9000ed88:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000ed8c:	d9f3      	bls.n	9000ed76 <USB_DevInit+0xc6>
    ret = HAL_ERROR;
9000ed8e:	2001      	movs	r0, #1
  USBx_DEVICE->DIEPMSK = 0U;
9000ed90:	2200      	movs	r2, #0
9000ed92:	f8ce 2010 	str.w	r2, [lr, #16]
  USBx_DEVICE->DOEPMSK = 0U;
9000ed96:	f8ce 2014 	str.w	r2, [lr, #20]
  USBx_DEVICE->DAINTMSK = 0U;
9000ed9a:	f8ce 201c 	str.w	r2, [lr, #28]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ed9e:	b305      	cbz	r5, 9000ede2 <USB_DevInit+0x132>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000eda0:	f8dc 1900 	ldr.w	r1, [ip, #2304]	@ 0x900
9000eda4:	f50c 6310 	add.w	r3, ip, #2304	@ 0x900
9000eda8:	2900      	cmp	r1, #0
9000edaa:	db14      	blt.n	9000edd6 <USB_DevInit+0x126>
      USBx_INEP(i)->DIEPCTL = 0U;
9000edac:	2600      	movs	r6, #0
9000edae:	4611      	mov	r1, r2
9000edb0:	601e      	str	r6, [r3, #0]
    USBx_INEP(i)->DIEPTSIZ = 0U;
9000edb2:	2700      	movs	r7, #0
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
9000edb4:	f64f 367f 	movw	r6, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000edb8:	1c4a      	adds	r2, r1, #1
    USBx_INEP(i)->DIEPTSIZ = 0U;
9000edba:	611f      	str	r7, [r3, #16]
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
9000edbc:	609e      	str	r6, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000edbe:	3320      	adds	r3, #32
9000edc0:	4295      	cmp	r5, r2
9000edc2:	d040      	beq.n	9000ee46 <USB_DevInit+0x196>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000edc4:	6819      	ldr	r1, [r3, #0]
9000edc6:	2900      	cmp	r1, #0
9000edc8:	daf0      	bge.n	9000edac <USB_DevInit+0xfc>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
9000edca:	f04f 4890 	mov.w	r8, #1207959552	@ 0x48000000
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000edce:	4611      	mov	r1, r2
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
9000edd0:	f8c3 8000 	str.w	r8, [r3]
9000edd4:	e7f0      	b.n	9000edb8 <USB_DevInit+0x108>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
9000edd6:	f04f 6600 	mov.w	r6, #134217728	@ 0x8000000
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000edda:	4611      	mov	r1, r2
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
9000eddc:	f8cc 6900 	str.w	r6, [ip, #2304]	@ 0x900
9000ede0:	e7e7      	b.n	9000edb2 <USB_DevInit+0x102>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
9000ede2:	f8de 3010 	ldr.w	r3, [lr, #16]
  USBx->GINTMSK = 0U;
9000ede6:	2200      	movs	r2, #0
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
9000ede8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000edec:	f8ce 3010 	str.w	r3, [lr, #16]
  USBx->GINTSTS = 0xBFFFFFFFU;
9000edf0:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
  USBx->GINTMSK = 0U;
9000edf4:	f8cc 2018 	str.w	r2, [ip, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
9000edf8:	f8cc 3014 	str.w	r3, [ip, #20]
  if (cfg.dma_enable == 0U)
9000edfc:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
9000ee00:	b92b      	cbnz	r3, 9000ee0e <USB_DevInit+0x15e>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
9000ee02:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000ee06:	f043 0310 	orr.w	r3, r3, #16
9000ee0a:	f8cc 3018 	str.w	r3, [ip, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
9000ee0e:	f8dc 2018 	ldr.w	r2, [ip, #24]
9000ee12:	4b40      	ldr	r3, [pc, #256]	@ (9000ef14 <USB_DevInit+0x264>)
9000ee14:	4313      	orrs	r3, r2
  if (cfg.Sof_enable != 0U)
9000ee16:	f89d 202a 	ldrb.w	r2, [sp, #42]	@ 0x2a
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
9000ee1a:	f8cc 3018 	str.w	r3, [ip, #24]
  if (cfg.Sof_enable != 0U)
9000ee1e:	b12a      	cbz	r2, 9000ee2c <USB_DevInit+0x17c>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
9000ee20:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000ee24:	f043 0308 	orr.w	r3, r3, #8
9000ee28:	f8cc 3018 	str.w	r3, [ip, #24]
  if (cfg.vbus_sensing_enable == 1U)
9000ee2c:	2c01      	cmp	r4, #1
9000ee2e:	d105      	bne.n	9000ee3c <USB_DevInit+0x18c>
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
9000ee30:	f8dc 2018 	ldr.w	r2, [ip, #24]
9000ee34:	4b38      	ldr	r3, [pc, #224]	@ (9000ef18 <USB_DevInit+0x268>)
9000ee36:	4313      	orrs	r3, r2
9000ee38:	f8cc 3018 	str.w	r3, [ip, #24]
}
9000ee3c:	b002      	add	sp, #8
9000ee3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9000ee42:	b004      	add	sp, #16
9000ee44:	4770      	bx	lr
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000ee46:	f8dc 2b00 	ldr.w	r2, [ip, #2816]	@ 0xb00
9000ee4a:	f50c 6330 	add.w	r3, ip, #2816	@ 0xb00
9000ee4e:	2a00      	cmp	r2, #0
9000ee50:	db17      	blt.n	9000ee82 <USB_DevInit+0x1d2>
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee52:	2500      	movs	r5, #0
      USBx_OUTEP(i)->DOEPCTL = 0U;
9000ee54:	2600      	movs	r6, #0
9000ee56:	462a      	mov	r2, r5
9000ee58:	601e      	str	r6, [r3, #0]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
9000ee5a:	2700      	movs	r7, #0
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
9000ee5c:	f64f 367f 	movw	r6, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee60:	4291      	cmp	r1, r2
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
9000ee62:	611f      	str	r7, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee64:	f102 0501 	add.w	r5, r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
9000ee68:	609e      	str	r6, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee6a:	f103 0320 	add.w	r3, r3, #32
9000ee6e:	d0b8      	beq.n	9000ede2 <USB_DevInit+0x132>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000ee70:	681a      	ldr	r2, [r3, #0]
9000ee72:	2a00      	cmp	r2, #0
9000ee74:	daee      	bge.n	9000ee54 <USB_DevInit+0x1a4>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
9000ee76:	f04f 4890 	mov.w	r8, #1207959552	@ 0x48000000
9000ee7a:	462a      	mov	r2, r5
9000ee7c:	f8c3 8000 	str.w	r8, [r3]
9000ee80:	e7ee      	b.n	9000ee60 <USB_DevInit+0x1b0>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
9000ee82:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
9000ee86:	f8cc 2b00 	str.w	r2, [ip, #2816]	@ 0xb00
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee8a:	2200      	movs	r2, #0
9000ee8c:	e7e5      	b.n	9000ee5a <USB_DevInit+0x1aa>
    USBx->GCCFG |= USB_OTG_GCCFG_VBDEN;
9000ee8e:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9000ee90:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
9000ee94:	6383      	str	r3, [r0, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
9000ee96:	2300      	movs	r3, #0
9000ee98:	f8cc 3e00 	str.w	r3, [ip, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
9000ee9c:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
9000eea0:	2b01      	cmp	r3, #1
9000eea2:	f47f af4f 	bne.w	9000ed44 <USB_DevInit+0x94>
    if (cfg.speed == USBD_HS_SPEED)
9000eea6:	f89d 3027 	ldrb.w	r3, [sp, #39]	@ 0x27
9000eeaa:	bb63      	cbnz	r3, 9000ef06 <USB_DevInit+0x256>
  USBx_DEVICE->DCFG |= speed;
9000eeac:	f8dc 3800 	ldr.w	r3, [ip, #2048]	@ 0x800
9000eeb0:	f8cc 3800 	str.w	r3, [ip, #2048]	@ 0x800
  return HAL_OK;
9000eeb4:	e74c      	b.n	9000ed50 <USB_DevInit+0xa0>
  count = 0U;
9000eeb6:	2300      	movs	r3, #0
9000eeb8:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
9000eeba:	2310      	movs	r3, #16
9000eebc:	f8cc 3010 	str.w	r3, [ip, #16]
9000eec0:	e004      	b.n	9000eecc <USB_DevInit+0x21c>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
9000eec2:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000eec6:	06db      	lsls	r3, r3, #27
9000eec8:	f57f af62 	bpl.w	9000ed90 <USB_DevInit+0xe0>
    count++;
9000eecc:	9b01      	ldr	r3, [sp, #4]
9000eece:	3301      	adds	r3, #1
9000eed0:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000eed2:	9b01      	ldr	r3, [sp, #4]
9000eed4:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000eed8:	d9f3      	bls.n	9000eec2 <USB_DevInit+0x212>
9000eeda:	e758      	b.n	9000ed8e <USB_DevInit+0xde>
  count = 0U;
9000eedc:	2300      	movs	r3, #0
9000eede:	9300      	str	r3, [sp, #0]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000eee0:	f44f 6384 	mov.w	r3, #1056	@ 0x420
9000eee4:	f8cc 3010 	str.w	r3, [ip, #16]
9000eee8:	e005      	b.n	9000eef6 <USB_DevInit+0x246>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
9000eeea:	f8dc 0010 	ldr.w	r0, [ip, #16]
9000eeee:	f010 0020 	ands.w	r0, r0, #32
9000eef2:	f43f af3d 	beq.w	9000ed70 <USB_DevInit+0xc0>
    count++;
9000eef6:	9b00      	ldr	r3, [sp, #0]
9000eef8:	3301      	adds	r3, #1
9000eefa:	9300      	str	r3, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000eefc:	9b00      	ldr	r3, [sp, #0]
9000eefe:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000ef02:	d9f2      	bls.n	9000eeea <USB_DevInit+0x23a>
9000ef04:	e733      	b.n	9000ed6e <USB_DevInit+0xbe>
  USBx_DEVICE->DCFG |= speed;
9000ef06:	f8dc 3800 	ldr.w	r3, [ip, #2048]	@ 0x800
9000ef0a:	f043 0301 	orr.w	r3, r3, #1
9000ef0e:	f8cc 3800 	str.w	r3, [ip, #2048]	@ 0x800
  return HAL_OK;
9000ef12:	e71d      	b.n	9000ed50 <USB_DevInit+0xa0>
9000ef14:	803c3800 	.word	0x803c3800
9000ef18:	40000004 	.word	0x40000004

9000ef1c <USB_FlushTxFifo>:
{
9000ef1c:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
9000ef1e:	2300      	movs	r3, #0
9000ef20:	9301      	str	r3, [sp, #4]
9000ef22:	e002      	b.n	9000ef2a <USB_FlushTxFifo+0xe>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000ef24:	6903      	ldr	r3, [r0, #16]
9000ef26:	2b00      	cmp	r3, #0
9000ef28:	db09      	blt.n	9000ef3e <USB_FlushTxFifo+0x22>
    count++;
9000ef2a:	9b01      	ldr	r3, [sp, #4]
9000ef2c:	3301      	adds	r3, #1
9000ef2e:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000ef30:	9b01      	ldr	r3, [sp, #4]
9000ef32:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000ef36:	d9f5      	bls.n	9000ef24 <USB_FlushTxFifo+0x8>
      return HAL_TIMEOUT;
9000ef38:	2003      	movs	r0, #3
}
9000ef3a:	b002      	add	sp, #8
9000ef3c:	4770      	bx	lr
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000ef3e:	0189      	lsls	r1, r1, #6
  count = 0U;
9000ef40:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000ef42:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
9000ef46:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000ef48:	6101      	str	r1, [r0, #16]
9000ef4a:	e003      	b.n	9000ef54 <USB_FlushTxFifo+0x38>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
9000ef4c:	6903      	ldr	r3, [r0, #16]
9000ef4e:	f013 0320 	ands.w	r3, r3, #32
9000ef52:	d007      	beq.n	9000ef64 <USB_FlushTxFifo+0x48>
    count++;
9000ef54:	9b01      	ldr	r3, [sp, #4]
9000ef56:	3301      	adds	r3, #1
9000ef58:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000ef5a:	9b01      	ldr	r3, [sp, #4]
9000ef5c:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000ef60:	d9f4      	bls.n	9000ef4c <USB_FlushTxFifo+0x30>
9000ef62:	e7e9      	b.n	9000ef38 <USB_FlushTxFifo+0x1c>
  return HAL_OK;
9000ef64:	4618      	mov	r0, r3
}
9000ef66:	b002      	add	sp, #8
9000ef68:	4770      	bx	lr
9000ef6a:	bf00      	nop

9000ef6c <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
9000ef6c:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
9000ef70:	f013 0006 	ands.w	r0, r3, #6
9000ef74:	d004      	beq.n	9000ef80 <USB_GetDevSpeed+0x14>
    speed = USBD_FS_SPEED;
9000ef76:	f013 0f02 	tst.w	r3, #2
9000ef7a:	bf0c      	ite	eq
9000ef7c:	200f      	moveq	r0, #15
9000ef7e:	2002      	movne	r0, #2
}
9000ef80:	4770      	bx	lr
9000ef82:	bf00      	nop

9000ef84 <USB_ActivateEndpoint>:
{
9000ef84:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
9000ef86:	780a      	ldrb	r2, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
9000ef88:	2301      	movs	r3, #1
9000ef8a:	f500 6c00 	add.w	ip, r0, #2048	@ 0x800
9000ef8e:	f002 0e0f 	and.w	lr, r2, #15
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
9000ef92:	eb00 1042 	add.w	r0, r0, r2, lsl #5
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
9000ef96:	fa03 f30e 	lsl.w	r3, r3, lr
  if (ep->is_in == 1U)
9000ef9a:	f891 e001 	ldrb.w	lr, [r1, #1]
9000ef9e:	f1be 0f01 	cmp.w	lr, #1
9000efa2:	d018      	beq.n	9000efd6 <USB_ActivateEndpoint+0x52>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
9000efa4:	f8dc 201c 	ldr.w	r2, [ip, #28]
9000efa8:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
9000efac:	f8cc 301c 	str.w	r3, [ip, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
9000efb0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000efb4:	041b      	lsls	r3, r3, #16
9000efb6:	d40c      	bmi.n	9000efd2 <USB_ActivateEndpoint+0x4e>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
9000efb8:	688b      	ldr	r3, [r1, #8]
9000efba:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
9000efbe:	f3c3 030a 	ubfx	r3, r3, #0, #11
                                    ((uint32_t)ep->type << 18) |
9000efc2:	7909      	ldrb	r1, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
9000efc4:	4a11      	ldr	r2, [pc, #68]	@ (9000f00c <USB_ActivateEndpoint+0x88>)
9000efc6:	4323      	orrs	r3, r4
9000efc8:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
9000efcc:	431a      	orrs	r2, r3
9000efce:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
}
9000efd2:	2000      	movs	r0, #0
9000efd4:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
9000efd6:	f8dc 401c 	ldr.w	r4, [ip, #28]
9000efda:	4323      	orrs	r3, r4
9000efdc:	f8cc 301c 	str.w	r3, [ip, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
9000efe0:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000efe4:	041c      	lsls	r4, r3, #16
9000efe6:	d4f4      	bmi.n	9000efd2 <USB_ActivateEndpoint+0x4e>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
9000efe8:	688b      	ldr	r3, [r1, #8]
9000efea:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
9000efee:	f3c3 030a 	ubfx	r3, r3, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
9000eff2:	790c      	ldrb	r4, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
9000eff4:	4905      	ldr	r1, [pc, #20]	@ (9000f00c <USB_ActivateEndpoint+0x88>)
9000eff6:	432b      	orrs	r3, r5
9000eff8:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
9000effc:	ea43 5382 	orr.w	r3, r3, r2, lsl #22
9000f000:	4319      	orrs	r1, r3
9000f002:	f8c0 1900 	str.w	r1, [r0, #2304]	@ 0x900
}
9000f006:	2000      	movs	r0, #0
9000f008:	bd30      	pop	{r4, r5, pc}
9000f00a:	bf00      	nop
9000f00c:	10008000 	.word	0x10008000

9000f010 <USB_DeactivateEndpoint>:
  if (ep->is_in == 1U)
9000f010:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
9000f012:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
9000f014:	2a01      	cmp	r2, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000f016:	eb00 1c43 	add.w	ip, r0, r3, lsl #5
  if (ep->is_in == 1U)
9000f01a:	d02a      	beq.n	9000f072 <USB_DeactivateEndpoint+0x62>
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000f01c:	f8dc 2b00 	ldr.w	r2, [ip, #2816]	@ 0xb00
9000f020:	2a00      	cmp	r2, #0
9000f022:	db19      	blt.n	9000f058 <USB_DeactivateEndpoint+0x48>
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
9000f024:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
9000f028:	f003 030f 	and.w	r3, r3, #15
9000f02c:	f8d0 183c 	ldr.w	r1, [r0, #2108]	@ 0x83c
9000f030:	fa02 f303 	lsl.w	r3, r2, r3
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
9000f034:	4a23      	ldr	r2, [pc, #140]	@ (9000f0c4 <USB_DeactivateEndpoint+0xb4>)
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
9000f036:	ea21 0103 	bic.w	r1, r1, r3
9000f03a:	f8c0 183c 	str.w	r1, [r0, #2108]	@ 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
9000f03e:	f8d0 181c 	ldr.w	r1, [r0, #2076]	@ 0x81c
9000f042:	ea21 0303 	bic.w	r3, r1, r3
9000f046:	f8c0 381c 	str.w	r3, [r0, #2076]	@ 0x81c
}
9000f04a:	2000      	movs	r0, #0
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
9000f04c:	f8dc 3b00 	ldr.w	r3, [ip, #2816]	@ 0xb00
9000f050:	401a      	ands	r2, r3
9000f052:	f8cc 2b00 	str.w	r2, [ip, #2816]	@ 0xb00
}
9000f056:	4770      	bx	lr
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
9000f058:	f8dc 2b00 	ldr.w	r2, [ip, #2816]	@ 0xb00
9000f05c:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
9000f060:	f8cc 2b00 	str.w	r2, [ip, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
9000f064:	f8dc 2b00 	ldr.w	r2, [ip, #2816]	@ 0xb00
9000f068:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
9000f06c:	f8cc 2b00 	str.w	r2, [ip, #2816]	@ 0xb00
9000f070:	e7d8      	b.n	9000f024 <USB_DeactivateEndpoint+0x14>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000f072:	f8dc 2900 	ldr.w	r2, [ip, #2304]	@ 0x900
9000f076:	2a00      	cmp	r2, #0
9000f078:	da0b      	bge.n	9000f092 <USB_DeactivateEndpoint+0x82>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
9000f07a:	f8dc 2900 	ldr.w	r2, [ip, #2304]	@ 0x900
9000f07e:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
9000f082:	f8cc 2900 	str.w	r2, [ip, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
9000f086:	f8dc 2900 	ldr.w	r2, [ip, #2304]	@ 0x900
9000f08a:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
9000f08e:	f8cc 2900 	str.w	r2, [ip, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
9000f092:	f003 020f 	and.w	r2, r3, #15
9000f096:	2301      	movs	r3, #1
9000f098:	f8d0 183c 	ldr.w	r1, [r0, #2108]	@ 0x83c
9000f09c:	4093      	lsls	r3, r2
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
9000f09e:	4a0a      	ldr	r2, [pc, #40]	@ (9000f0c8 <USB_DeactivateEndpoint+0xb8>)
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
9000f0a0:	ea21 0103 	bic.w	r1, r1, r3
9000f0a4:	f8c0 183c 	str.w	r1, [r0, #2108]	@ 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
9000f0a8:	f8d0 181c 	ldr.w	r1, [r0, #2076]	@ 0x81c
9000f0ac:	ea21 0303 	bic.w	r3, r1, r3
9000f0b0:	f8c0 381c 	str.w	r3, [r0, #2076]	@ 0x81c
}
9000f0b4:	2000      	movs	r0, #0
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
9000f0b6:	f8dc 3900 	ldr.w	r3, [ip, #2304]	@ 0x900
9000f0ba:	401a      	ands	r2, r3
9000f0bc:	f8cc 2900 	str.w	r2, [ip, #2304]	@ 0x900
}
9000f0c0:	4770      	bx	lr
9000f0c2:	bf00      	nop
9000f0c4:	eff37800 	.word	0xeff37800
9000f0c8:	ec337800 	.word	0xec337800

9000f0cc <USB_EPStartXfer>:
{
9000f0cc:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (ep->is_in == 1U)
9000f0ce:	784c      	ldrb	r4, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
9000f0d0:	780e      	ldrb	r6, [r1, #0]
  if (ep->is_in == 1U)
9000f0d2:	2c01      	cmp	r4, #1
    if (ep->xfer_len == 0U)
9000f0d4:	690d      	ldr	r5, [r1, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f0d6:	eb00 1346 	add.w	r3, r0, r6, lsl #5
      if (ep->type == EP_TYPE_ISOC)
9000f0da:	f891 e004 	ldrb.w	lr, [r1, #4]
  if (ep->is_in == 1U)
9000f0de:	d05e      	beq.n	9000f19e <USB_EPStartXfer+0xd2>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
9000f0e0:	f8d3 7b10 	ldr.w	r7, [r3, #2832]	@ 0xb10
9000f0e4:	f503 6c30 	add.w	ip, r3, #2816	@ 0xb00
9000f0e8:	4c88      	ldr	r4, [pc, #544]	@ (9000f30c <USB_EPStartXfer+0x240>)
9000f0ea:	403c      	ands	r4, r7
9000f0ec:	f8c3 4b10 	str.w	r4, [r3, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
9000f0f0:	4c87      	ldr	r4, [pc, #540]	@ (9000f310 <USB_EPStartXfer+0x244>)
9000f0f2:	f8d3 7b10 	ldr.w	r7, [r3, #2832]	@ 0xb10
9000f0f6:	403c      	ands	r4, r7
9000f0f8:	f8c3 4b10 	str.w	r4, [r3, #2832]	@ 0xb10
        ep->xfer_len = ep->maxpacket;
9000f0fc:	688c      	ldr	r4, [r1, #8]
    if (epnum == 0U)
9000f0fe:	bb56      	cbnz	r6, 9000f156 <USB_EPStartXfer+0x8a>
      if (ep->xfer_len > 0U)
9000f100:	b105      	cbz	r5, 9000f104 <USB_EPStartXfer+0x38>
        ep->xfer_len = ep->maxpacket;
9000f102:	610c      	str	r4, [r1, #16]
      ep->xfer_size = ep->maxpacket;
9000f104:	620c      	str	r4, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
9000f106:	f8dc 5010 	ldr.w	r5, [ip, #16]
9000f10a:	f3c4 0412 	ubfx	r4, r4, #0, #19
    if (dma == 1U)
9000f10e:	2a01      	cmp	r2, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
9000f110:	ea44 0405 	orr.w	r4, r4, r5
9000f114:	f8cc 4010 	str.w	r4, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
9000f118:	f8dc 4010 	ldr.w	r4, [ip, #16]
9000f11c:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
9000f120:	f8cc 4010 	str.w	r4, [ip, #16]
    if (dma == 1U)
9000f124:	d035      	beq.n	9000f192 <USB_EPStartXfer+0xc6>
    if (ep->type == EP_TYPE_ISOC)
9000f126:	f1be 0f01 	cmp.w	lr, #1
9000f12a:	d10c      	bne.n	9000f146 <USB_EPStartXfer+0x7a>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
9000f12c:	f8d0 2808 	ldr.w	r2, [r0, #2056]	@ 0x808
9000f130:	f412 7f80 	tst.w	r2, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
9000f134:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	@ 0xb00
9000f138:	bf0c      	ite	eq
9000f13a:	f042 5200 	orreq.w	r2, r2, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
9000f13e:	f042 5280 	orrne.w	r2, r2, #268435456	@ 0x10000000
9000f142:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
9000f146:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	@ 0xb00
9000f14a:	f042 4204 	orr.w	r2, r2, #2214592512	@ 0x84000000
9000f14e:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
}
9000f152:	2000      	movs	r0, #0
9000f154:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (ep->xfer_len == 0U)
9000f156:	2d00      	cmp	r5, #0
9000f158:	d0d5      	beq.n	9000f106 <USB_EPStartXfer+0x3a>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
9000f15a:	4425      	add	r5, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
9000f15c:	4e6d      	ldr	r6, [pc, #436]	@ (9000f314 <USB_EPStartXfer+0x248>)
    if (dma == 1U)
9000f15e:	2a01      	cmp	r2, #1
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
9000f160:	f105 35ff 	add.w	r5, r5, #4294967295
9000f164:	fbb5 f5f4 	udiv	r5, r5, r4
9000f168:	b2ad      	uxth	r5, r5
        ep->xfer_size = ep->maxpacket * pktcnt;
9000f16a:	fb05 f404 	mul.w	r4, r5, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
9000f16e:	ea06 45c5 	and.w	r5, r6, r5, lsl #19
9000f172:	f8dc 6010 	ldr.w	r6, [ip, #16]
        ep->xfer_size = ep->maxpacket * pktcnt;
9000f176:	620c      	str	r4, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
9000f178:	f3c4 0412 	ubfx	r4, r4, #0, #19
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
9000f17c:	ea45 0506 	orr.w	r5, r5, r6
9000f180:	f8cc 5010 	str.w	r5, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
9000f184:	f8dc 5010 	ldr.w	r5, [ip, #16]
9000f188:	ea44 0405 	orr.w	r4, r4, r5
9000f18c:	f8cc 4010 	str.w	r4, [ip, #16]
    if (dma == 1U)
9000f190:	d1c9      	bne.n	9000f126 <USB_EPStartXfer+0x5a>
      if ((uint32_t)ep->xfer_buff != 0U)
9000f192:	68ca      	ldr	r2, [r1, #12]
9000f194:	2a00      	cmp	r2, #0
9000f196:	d0c6      	beq.n	9000f126 <USB_EPStartXfer+0x5a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
9000f198:	f8cc 2014 	str.w	r2, [ip, #20]
9000f19c:	e7c3      	b.n	9000f126 <USB_EPStartXfer+0x5a>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f19e:	f503 6410 	add.w	r4, r3, #2304	@ 0x900
9000f1a2:	f8d4 c010 	ldr.w	ip, [r4, #16]
    if (ep->xfer_len == 0U)
9000f1a6:	2d00      	cmp	r5, #0
9000f1a8:	d138      	bne.n	9000f21c <USB_EPStartXfer+0x150>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f1aa:	4f59      	ldr	r7, [pc, #356]	@ (9000f310 <USB_EPStartXfer+0x244>)
    if (dma == 1U)
9000f1ac:	2a01      	cmp	r2, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f1ae:	ea0c 0707 	and.w	r7, ip, r7
9000f1b2:	6127      	str	r7, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
9000f1b4:	6927      	ldr	r7, [r4, #16]
9000f1b6:	f447 2700 	orr.w	r7, r7, #524288	@ 0x80000
9000f1ba:	6127      	str	r7, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
9000f1bc:	4f53      	ldr	r7, [pc, #332]	@ (9000f30c <USB_EPStartXfer+0x240>)
9000f1be:	f8d4 c010 	ldr.w	ip, [r4, #16]
9000f1c2:	ea0c 0707 	and.w	r7, ip, r7
9000f1c6:	6127      	str	r7, [r4, #16]
    if (dma == 1U)
9000f1c8:	d068      	beq.n	9000f29c <USB_EPStartXfer+0x1d0>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f1ca:	f8d3 4900 	ldr.w	r4, [r3, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
9000f1ce:	f1be 0f01 	cmp.w	lr, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f1d2:	f044 4404 	orr.w	r4, r4, #2214592512	@ 0x84000000
9000f1d6:	f8c3 4900 	str.w	r4, [r3, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
9000f1da:	d1ba      	bne.n	9000f152 <USB_EPStartXfer+0x86>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
9000f1dc:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
9000f1e0:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
9000f1e4:	f8d3 4900 	ldr.w	r4, [r3, #2304]	@ 0x900
9000f1e8:	bf0c      	ite	eq
9000f1ea:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
9000f1ee:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
9000f1f2:	f8c3 4900 	str.w	r4, [r3, #2304]	@ 0x900
  if (dma == 0U)
9000f1f6:	2a00      	cmp	r2, #0
9000f1f8:	d1ab      	bne.n	9000f152 <USB_EPStartXfer+0x86>
    count32b = ((uint32_t)len + 3U) / 4U;
9000f1fa:	b2ad      	uxth	r5, r5
9000f1fc:	3503      	adds	r5, #3
    for (i = 0U; i < count32b; i++)
9000f1fe:	08ad      	lsrs	r5, r5, #2
9000f200:	d0a7      	beq.n	9000f152 <USB_EPStartXfer+0x86>
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
9000f202:	68cb      	ldr	r3, [r1, #12]
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
9000f204:	eb00 3606 	add.w	r6, r0, r6, lsl #12
9000f208:	eb03 0185 	add.w	r1, r3, r5, lsl #2
9000f20c:	f506 5680 	add.w	r6, r6, #4096	@ 0x1000
9000f210:	f853 2b04 	ldr.w	r2, [r3], #4
    for (i = 0U; i < count32b; i++)
9000f214:	4299      	cmp	r1, r3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
9000f216:	6032      	str	r2, [r6, #0]
    for (i = 0U; i < count32b; i++)
9000f218:	d1fa      	bne.n	9000f210 <USB_EPStartXfer+0x144>
9000f21a:	e79a      	b.n	9000f152 <USB_EPStartXfer+0x86>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
9000f21c:	4f3b      	ldr	r7, [pc, #236]	@ (9000f30c <USB_EPStartXfer+0x240>)
9000f21e:	ea0c 0707 	and.w	r7, ip, r7
9000f222:	6127      	str	r7, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f224:	4f3a      	ldr	r7, [pc, #232]	@ (9000f310 <USB_EPStartXfer+0x244>)
9000f226:	f8d4 c010 	ldr.w	ip, [r4, #16]
9000f22a:	ea0c 0707 	and.w	r7, ip, r7
9000f22e:	6127      	str	r7, [r4, #16]
        if (ep->xfer_len > ep->maxpacket)
9000f230:	688f      	ldr	r7, [r1, #8]
      if (epnum == 0U)
9000f232:	bb26      	cbnz	r6, 9000f27e <USB_EPStartXfer+0x1b2>
        if (ep->xfer_len > ep->maxpacket)
9000f234:	42bd      	cmp	r5, r7
9000f236:	d850      	bhi.n	9000f2da <USB_EPStartXfer+0x20e>
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
9000f238:	6927      	ldr	r7, [r4, #16]
9000f23a:	f447 2700 	orr.w	r7, r7, #524288	@ 0x80000
9000f23e:	6127      	str	r7, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
9000f240:	f8d4 c010 	ldr.w	ip, [r4, #16]
9000f244:	f3c5 0712 	ubfx	r7, r5, #0, #19
      if (ep->type == EP_TYPE_ISOC)
9000f248:	f1be 0f01 	cmp.w	lr, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
9000f24c:	ea47 070c 	orr.w	r7, r7, ip
9000f250:	6127      	str	r7, [r4, #16]
      if (ep->type == EP_TYPE_ISOC)
9000f252:	d031      	beq.n	9000f2b8 <USB_EPStartXfer+0x1ec>
    if (dma == 1U)
9000f254:	2a01      	cmp	r2, #1
9000f256:	d054      	beq.n	9000f302 <USB_EPStartXfer+0x236>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f258:	f8d3 2900 	ldr.w	r2, [r3, #2304]	@ 0x900
9000f25c:	f042 4204 	orr.w	r2, r2, #2214592512	@ 0x84000000
9000f260:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
9000f264:	2d00      	cmp	r5, #0
9000f266:	f43f af74 	beq.w	9000f152 <USB_EPStartXfer+0x86>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
9000f26a:	f006 060f 	and.w	r6, r6, #15
9000f26e:	2301      	movs	r3, #1
9000f270:	f8d0 2834 	ldr.w	r2, [r0, #2100]	@ 0x834
9000f274:	40b3      	lsls	r3, r6
9000f276:	4313      	orrs	r3, r2
9000f278:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
9000f27c:	e769      	b.n	9000f152 <USB_EPStartXfer+0x86>
                                       (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
9000f27e:	eb05 0c07 	add.w	ip, r5, r7
9000f282:	f10c 3cff 	add.w	ip, ip, #4294967295
9000f286:	fbbc fcf7 	udiv	ip, ip, r7
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
9000f28a:	4f22      	ldr	r7, [pc, #136]	@ (9000f314 <USB_EPStartXfer+0x248>)
9000f28c:	ea07 47cc 	and.w	r7, r7, ip, lsl #19
9000f290:	f8d4 c010 	ldr.w	ip, [r4, #16]
9000f294:	ea47 070c 	orr.w	r7, r7, ip
9000f298:	6127      	str	r7, [r4, #16]
9000f29a:	e7d1      	b.n	9000f240 <USB_EPStartXfer+0x174>
      if ((uint32_t)ep->dma_addr != 0U)
9000f29c:	69ca      	ldr	r2, [r1, #28]
9000f29e:	b102      	cbz	r2, 9000f2a2 <USB_EPStartXfer+0x1d6>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
9000f2a0:	6162      	str	r2, [r4, #20]
      if (ep->type == EP_TYPE_ISOC)
9000f2a2:	f1be 0f01 	cmp.w	lr, #1
9000f2a6:	d01e      	beq.n	9000f2e6 <USB_EPStartXfer+0x21a>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f2a8:	f8d3 2900 	ldr.w	r2, [r3, #2304]	@ 0x900
}
9000f2ac:	2000      	movs	r0, #0
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f2ae:	f042 4204 	orr.w	r2, r2, #2214592512	@ 0x84000000
9000f2b2:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
9000f2b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
9000f2b8:	6927      	ldr	r7, [r4, #16]
    if (dma == 1U)
9000f2ba:	2a01      	cmp	r2, #1
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
9000f2bc:	f027 47c0 	bic.w	r7, r7, #1610612736	@ 0x60000000
9000f2c0:	6127      	str	r7, [r4, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
9000f2c2:	6927      	ldr	r7, [r4, #16]
9000f2c4:	f047 5700 	orr.w	r7, r7, #536870912	@ 0x20000000
9000f2c8:	6127      	str	r7, [r4, #16]
    if (dma == 1U)
9000f2ca:	d009      	beq.n	9000f2e0 <USB_EPStartXfer+0x214>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f2cc:	f8d3 4900 	ldr.w	r4, [r3, #2304]	@ 0x900
9000f2d0:	f044 4404 	orr.w	r4, r4, #2214592512	@ 0x84000000
9000f2d4:	f8c3 4900 	str.w	r4, [r3, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
9000f2d8:	e780      	b.n	9000f1dc <USB_EPStartXfer+0x110>
          ep->xfer_len = ep->maxpacket;
9000f2da:	463d      	mov	r5, r7
9000f2dc:	610f      	str	r7, [r1, #16]
9000f2de:	e7ab      	b.n	9000f238 <USB_EPStartXfer+0x16c>
      if ((uint32_t)ep->dma_addr != 0U)
9000f2e0:	69ca      	ldr	r2, [r1, #28]
9000f2e2:	b102      	cbz	r2, 9000f2e6 <USB_EPStartXfer+0x21a>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
9000f2e4:	6162      	str	r2, [r4, #20]
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
9000f2e6:	f8d0 2808 	ldr.w	r2, [r0, #2056]	@ 0x808
9000f2ea:	f412 7f80 	tst.w	r2, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
9000f2ee:	f8d3 2900 	ldr.w	r2, [r3, #2304]	@ 0x900
9000f2f2:	bf0c      	ite	eq
9000f2f4:	f042 5200 	orreq.w	r2, r2, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
9000f2f8:	f042 5280 	orrne.w	r2, r2, #268435456	@ 0x10000000
9000f2fc:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
9000f300:	e7d2      	b.n	9000f2a8 <USB_EPStartXfer+0x1dc>
      if ((uint32_t)ep->dma_addr != 0U)
9000f302:	69ca      	ldr	r2, [r1, #28]
9000f304:	2a00      	cmp	r2, #0
9000f306:	d0cf      	beq.n	9000f2a8 <USB_EPStartXfer+0x1dc>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
9000f308:	6162      	str	r2, [r4, #20]
      if (ep->type == EP_TYPE_ISOC)
9000f30a:	e7cd      	b.n	9000f2a8 <USB_EPStartXfer+0x1dc>
9000f30c:	fff80000 	.word	0xfff80000
9000f310:	e007ffff 	.word	0xe007ffff
9000f314:	1ff80000 	.word	0x1ff80000

9000f318 <USB_EPStopXfer>:
{
9000f318:	b410      	push	{r4}
  __IO uint32_t count = 0U;
9000f31a:	2300      	movs	r3, #0
{
9000f31c:	b083      	sub	sp, #12
  if (ep->is_in == 1U)
9000f31e:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
9000f320:	9301      	str	r3, [sp, #4]
  if (ep->is_in == 1U)
9000f322:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000f324:	780b      	ldrb	r3, [r1, #0]
9000f326:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
9000f32a:	d023      	beq.n	9000f374 <USB_EPStopXfer+0x5c>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000f32c:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
9000f330:	58c1      	ldr	r1, [r0, r3]
9000f332:	18c2      	adds	r2, r0, r3
9000f334:	2900      	cmp	r1, #0
9000f336:	db04      	blt.n	9000f342 <USB_EPStopXfer+0x2a>
  HAL_StatusTypeDef ret = HAL_OK;
9000f338:	2000      	movs	r0, #0
}
9000f33a:	b003      	add	sp, #12
9000f33c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f340:	4770      	bx	lr
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
9000f342:	58c4      	ldr	r4, [r0, r3]
        if (count > 10000U)
9000f344:	f242 7110 	movw	r1, #10000	@ 0x2710
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
9000f348:	f044 6400 	orr.w	r4, r4, #134217728	@ 0x8000000
9000f34c:	50c4      	str	r4, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
9000f34e:	58c4      	ldr	r4, [r0, r3]
9000f350:	f044 4480 	orr.w	r4, r4, #1073741824	@ 0x40000000
9000f354:	50c4      	str	r4, [r0, r3]
9000f356:	e002      	b.n	9000f35e <USB_EPStopXfer+0x46>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
9000f358:	6813      	ldr	r3, [r2, #0]
9000f35a:	2b00      	cmp	r3, #0
9000f35c:	daec      	bge.n	9000f338 <USB_EPStopXfer+0x20>
        count++;
9000f35e:	9b01      	ldr	r3, [sp, #4]
9000f360:	3301      	adds	r3, #1
9000f362:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
9000f364:	9b01      	ldr	r3, [sp, #4]
9000f366:	428b      	cmp	r3, r1
9000f368:	d9f6      	bls.n	9000f358 <USB_EPStopXfer+0x40>
          ret = HAL_ERROR;
9000f36a:	2001      	movs	r0, #1
}
9000f36c:	b003      	add	sp, #12
9000f36e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f372:	4770      	bx	lr
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000f374:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
9000f378:	58c1      	ldr	r1, [r0, r3]
9000f37a:	18c2      	adds	r2, r0, r3
9000f37c:	2900      	cmp	r1, #0
9000f37e:	dadb      	bge.n	9000f338 <USB_EPStopXfer+0x20>
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
9000f380:	58c4      	ldr	r4, [r0, r3]
        if (count > 10000U)
9000f382:	f242 7110 	movw	r1, #10000	@ 0x2710
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
9000f386:	f044 6400 	orr.w	r4, r4, #134217728	@ 0x8000000
9000f38a:	50c4      	str	r4, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
9000f38c:	58c4      	ldr	r4, [r0, r3]
9000f38e:	f044 4480 	orr.w	r4, r4, #1073741824	@ 0x40000000
9000f392:	50c4      	str	r4, [r0, r3]
9000f394:	e002      	b.n	9000f39c <USB_EPStopXfer+0x84>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
9000f396:	6813      	ldr	r3, [r2, #0]
9000f398:	2b00      	cmp	r3, #0
9000f39a:	dacd      	bge.n	9000f338 <USB_EPStopXfer+0x20>
        count++;
9000f39c:	9b01      	ldr	r3, [sp, #4]
9000f39e:	3301      	adds	r3, #1
9000f3a0:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
9000f3a2:	9b01      	ldr	r3, [sp, #4]
9000f3a4:	428b      	cmp	r3, r1
9000f3a6:	d9f6      	bls.n	9000f396 <USB_EPStopXfer+0x7e>
9000f3a8:	e7df      	b.n	9000f36a <USB_EPStopXfer+0x52>
9000f3aa:	bf00      	nop

9000f3ac <USB_WritePacket>:
{
9000f3ac:	b410      	push	{r4}
9000f3ae:	f89d 4004 	ldrb.w	r4, [sp, #4]
  if (dma == 0U)
9000f3b2:	b964      	cbnz	r4, 9000f3ce <USB_WritePacket+0x22>
    count32b = ((uint32_t)len + 3U) / 4U;
9000f3b4:	3303      	adds	r3, #3
    for (i = 0U; i < count32b; i++)
9000f3b6:	089b      	lsrs	r3, r3, #2
9000f3b8:	d009      	beq.n	9000f3ce <USB_WritePacket+0x22>
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
9000f3ba:	3201      	adds	r2, #1
9000f3bc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9000f3c0:	eb00 3002 	add.w	r0, r0, r2, lsl #12
9000f3c4:	f851 2b04 	ldr.w	r2, [r1], #4
    for (i = 0U; i < count32b; i++)
9000f3c8:	428b      	cmp	r3, r1
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
9000f3ca:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
9000f3cc:	d1fa      	bne.n	9000f3c4 <USB_WritePacket+0x18>
}
9000f3ce:	2000      	movs	r0, #0
9000f3d0:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f3d4:	4770      	bx	lr
9000f3d6:	bf00      	nop

9000f3d8 <USB_ReadPacket>:
{
9000f3d8:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
9000f3da:	ea5f 0e92 	movs.w	lr, r2, lsr #2
{
9000f3de:	4605      	mov	r5, r0
  uint16_t remaining_bytes = len % 4U;
9000f3e0:	f002 0603 	and.w	r6, r2, #3
  for (i = 0U; i < count32b; i++)
9000f3e4:	d01a      	beq.n	9000f41c <USB_ReadPacket+0x44>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
9000f3e6:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
  uint8_t *pDest = dest;
9000f3ea:	468c      	mov	ip, r1
  for (i = 0U; i < count32b; i++)
9000f3ec:	2300      	movs	r3, #0
9000f3ee:	3301      	adds	r3, #1
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
9000f3f0:	6822      	ldr	r2, [r4, #0]
  for (i = 0U; i < count32b; i++)
9000f3f2:	459e      	cmp	lr, r3
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
9000f3f4:	f84c 2b04 	str.w	r2, [ip], #4
  for (i = 0U; i < count32b; i++)
9000f3f8:	d1f9      	bne.n	9000f3ee <USB_ReadPacket+0x16>
    pDest++;
9000f3fa:	eb01 008e 	add.w	r0, r1, lr, lsl #2
  if (remaining_bytes != 0U)
9000f3fe:	b166      	cbz	r6, 9000f41a <USB_ReadPacket+0x42>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
9000f400:	f505 5580 	add.w	r5, r5, #4096	@ 0x1000
    } while (remaining_bytes != 0U);
9000f404:	2e01      	cmp	r6, #1
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
9000f406:	682b      	ldr	r3, [r5, #0]
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
9000f408:	7003      	strb	r3, [r0, #0]
    } while (remaining_bytes != 0U);
9000f40a:	d005      	beq.n	9000f418 <USB_ReadPacket+0x40>
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
9000f40c:	0a1a      	lsrs	r2, r3, #8
    } while (remaining_bytes != 0U);
9000f40e:	2e02      	cmp	r6, #2
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
9000f410:	7042      	strb	r2, [r0, #1]
    } while (remaining_bytes != 0U);
9000f412:	d001      	beq.n	9000f418 <USB_ReadPacket+0x40>
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
9000f414:	0c1b      	lsrs	r3, r3, #16
9000f416:	7083      	strb	r3, [r0, #2]
      pDest++;
9000f418:	4430      	add	r0, r6
}
9000f41a:	bd70      	pop	{r4, r5, r6, pc}
  uint8_t *pDest = dest;
9000f41c:	4608      	mov	r0, r1
9000f41e:	e7ee      	b.n	9000f3fe <USB_ReadPacket+0x26>

9000f420 <USB_EPSetStall>:
  uint32_t epnum = (uint32_t)ep->num;
9000f420:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
9000f422:	784a      	ldrb	r2, [r1, #1]
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
9000f424:	eb00 1043 	add.w	r0, r0, r3, lsl #5
9000f428:	3b00      	subs	r3, #0
9000f42a:	bf18      	it	ne
9000f42c:	2301      	movne	r3, #1
  if (ep->is_in == 1U)
9000f42e:	2a01      	cmp	r2, #1
9000f430:	d00c      	beq.n	9000f44c <USB_EPSetStall+0x2c>
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
9000f432:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
9000f436:	2a00      	cmp	r2, #0
9000f438:	db00      	blt.n	9000f43c <USB_EPSetStall+0x1c>
9000f43a:	b9a3      	cbnz	r3, 9000f466 <USB_EPSetStall+0x46>
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
9000f43c:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000f440:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
9000f444:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
}
9000f448:	2000      	movs	r0, #0
9000f44a:	4770      	bx	lr
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
9000f44c:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
9000f450:	2a00      	cmp	r2, #0
9000f452:	db00      	blt.n	9000f456 <USB_EPSetStall+0x36>
9000f454:	b973      	cbnz	r3, 9000f474 <USB_EPSetStall+0x54>
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
9000f456:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000f45a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
9000f45e:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
9000f462:	2000      	movs	r0, #0
9000f464:	4770      	bx	lr
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
9000f466:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000f46a:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
9000f46e:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
9000f472:	e7e3      	b.n	9000f43c <USB_EPSetStall+0x1c>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
9000f474:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000f478:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
9000f47c:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
9000f480:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000f484:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
9000f488:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
9000f48c:	e7e9      	b.n	9000f462 <USB_EPSetStall+0x42>
9000f48e:	bf00      	nop

9000f490 <USB_EPClearStall>:
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f490:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
9000f492:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000f494:	f891 c000 	ldrb.w	ip, [r1]
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f498:	3b02      	subs	r3, #2
  if (ep->is_in == 1U)
9000f49a:	2a01      	cmp	r2, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000f49c:	eb00 104c 	add.w	r0, r0, ip, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f4a0:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
9000f4a2:	d011      	beq.n	9000f4c8 <USB_EPClearStall+0x38>
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
9000f4a4:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f4a8:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
9000f4aa:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
9000f4ae:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f4b2:	d901      	bls.n	9000f4b8 <USB_EPClearStall+0x28>
}
9000f4b4:	2000      	movs	r0, #0
9000f4b6:	4770      	bx	lr
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
9000f4b8:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000f4bc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000f4c0:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
}
9000f4c4:	2000      	movs	r0, #0
9000f4c6:	4770      	bx	lr
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000f4c8:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f4cc:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000f4ce:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
9000f4d2:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f4d6:	d8ed      	bhi.n	9000f4b4 <USB_EPClearStall+0x24>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
9000f4d8:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000f4dc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000f4e0:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
9000f4e4:	2000      	movs	r0, #0
9000f4e6:	4770      	bx	lr

9000f4e8 <USB_StopDevice>:
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4e8:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
  USBx_DEVICE->DIEPMSK  = 0U;
9000f4ec:	2200      	movs	r2, #0
{
9000f4ee:	b082      	sub	sp, #8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4f0:	f8c0 3908 	str.w	r3, [r0, #2312]	@ 0x908
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4f4:	f8c0 3b08 	str.w	r3, [r0, #2824]	@ 0xb08
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4f8:	f8c0 3928 	str.w	r3, [r0, #2344]	@ 0x928
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4fc:	f8c0 3b28 	str.w	r3, [r0, #2856]	@ 0xb28
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f500:	f8c0 3948 	str.w	r3, [r0, #2376]	@ 0x948
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f504:	f8c0 3b48 	str.w	r3, [r0, #2888]	@ 0xb48
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f508:	f8c0 3968 	str.w	r3, [r0, #2408]	@ 0x968
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f50c:	f8c0 3b68 	str.w	r3, [r0, #2920]	@ 0xb68
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f510:	f8c0 3988 	str.w	r3, [r0, #2440]	@ 0x988
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f514:	f8c0 3b88 	str.w	r3, [r0, #2952]	@ 0xb88
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f518:	f8c0 39a8 	str.w	r3, [r0, #2472]	@ 0x9a8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f51c:	f8c0 3ba8 	str.w	r3, [r0, #2984]	@ 0xba8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f520:	f8c0 39c8 	str.w	r3, [r0, #2504]	@ 0x9c8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f524:	f8c0 3bc8 	str.w	r3, [r0, #3016]	@ 0xbc8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f528:	f8c0 39e8 	str.w	r3, [r0, #2536]	@ 0x9e8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f52c:	f8c0 3be8 	str.w	r3, [r0, #3048]	@ 0xbe8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f530:	f8c0 3a08 	str.w	r3, [r0, #2568]	@ 0xa08
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f534:	f8c0 3c08 	str.w	r3, [r0, #3080]	@ 0xc08
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f538:	f8c0 3a28 	str.w	r3, [r0, #2600]	@ 0xa28
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f53c:	f8c0 3c28 	str.w	r3, [r0, #3112]	@ 0xc28
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f540:	f8c0 3a48 	str.w	r3, [r0, #2632]	@ 0xa48
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f544:	f8c0 3c48 	str.w	r3, [r0, #3144]	@ 0xc48
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f548:	f8c0 3a68 	str.w	r3, [r0, #2664]	@ 0xa68
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f54c:	f8c0 3c68 	str.w	r3, [r0, #3176]	@ 0xc68
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f550:	f8c0 3a88 	str.w	r3, [r0, #2696]	@ 0xa88
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f554:	f8c0 3c88 	str.w	r3, [r0, #3208]	@ 0xc88
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f558:	f8c0 3aa8 	str.w	r3, [r0, #2728]	@ 0xaa8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f55c:	f8c0 3ca8 	str.w	r3, [r0, #3240]	@ 0xca8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f560:	f8c0 3ac8 	str.w	r3, [r0, #2760]	@ 0xac8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f564:	f8c0 3cc8 	str.w	r3, [r0, #3272]	@ 0xcc8
  USBx_DEVICE->DIEPMSK  = 0U;
9000f568:	f8c0 2810 	str.w	r2, [r0, #2064]	@ 0x810
  USBx_DEVICE->DOEPMSK  = 0U;
9000f56c:	f8c0 2814 	str.w	r2, [r0, #2068]	@ 0x814
  USBx_DEVICE->DAINTMSK = 0U;
9000f570:	f8c0 281c 	str.w	r2, [r0, #2076]	@ 0x81c
  __IO uint32_t count = 0U;
9000f574:	9200      	str	r2, [sp, #0]
9000f576:	e002      	b.n	9000f57e <USB_StopDevice+0x96>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000f578:	6903      	ldr	r3, [r0, #16]
9000f57a:	2b00      	cmp	r3, #0
9000f57c:	db09      	blt.n	9000f592 <USB_StopDevice+0xaa>
    count++;
9000f57e:	9b00      	ldr	r3, [sp, #0]
9000f580:	3301      	adds	r3, #1
9000f582:	9300      	str	r3, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000f584:	9b00      	ldr	r3, [sp, #0]
9000f586:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000f58a:	d9f5      	bls.n	9000f578 <USB_StopDevice+0x90>
      return HAL_TIMEOUT;
9000f58c:	2003      	movs	r0, #3
}
9000f58e:	b002      	add	sp, #8
9000f590:	4770      	bx	lr
  count = 0U;
9000f592:	2200      	movs	r2, #0
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
9000f594:	2310      	movs	r3, #16
  count = 0U;
9000f596:	9200      	str	r2, [sp, #0]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
9000f598:	6103      	str	r3, [r0, #16]
9000f59a:	e003      	b.n	9000f5a4 <USB_StopDevice+0xbc>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
9000f59c:	6903      	ldr	r3, [r0, #16]
9000f59e:	f013 0310 	ands.w	r3, r3, #16
9000f5a2:	d007      	beq.n	9000f5b4 <USB_StopDevice+0xcc>
    count++;
9000f5a4:	9b00      	ldr	r3, [sp, #0]
9000f5a6:	3301      	adds	r3, #1
9000f5a8:	9300      	str	r3, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000f5aa:	9b00      	ldr	r3, [sp, #0]
9000f5ac:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000f5b0:	d9f4      	bls.n	9000f59c <USB_StopDevice+0xb4>
9000f5b2:	e7eb      	b.n	9000f58c <USB_StopDevice+0xa4>
  __IO uint32_t count = 0U;
9000f5b4:	9301      	str	r3, [sp, #4]
9000f5b6:	e002      	b.n	9000f5be <USB_StopDevice+0xd6>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000f5b8:	6903      	ldr	r3, [r0, #16]
9000f5ba:	2b00      	cmp	r3, #0
9000f5bc:	db07      	blt.n	9000f5ce <USB_StopDevice+0xe6>
    count++;
9000f5be:	9b01      	ldr	r3, [sp, #4]
9000f5c0:	3301      	adds	r3, #1
9000f5c2:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000f5c4:	9b01      	ldr	r3, [sp, #4]
9000f5c6:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000f5ca:	d9f5      	bls.n	9000f5b8 <USB_StopDevice+0xd0>
9000f5cc:	e7de      	b.n	9000f58c <USB_StopDevice+0xa4>
  count = 0U;
9000f5ce:	2200      	movs	r2, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000f5d0:	f44f 6384 	mov.w	r3, #1056	@ 0x420
  count = 0U;
9000f5d4:	9201      	str	r2, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000f5d6:	6103      	str	r3, [r0, #16]
9000f5d8:	e003      	b.n	9000f5e2 <USB_StopDevice+0xfa>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
9000f5da:	6903      	ldr	r3, [r0, #16]
9000f5dc:	f013 0320 	ands.w	r3, r3, #32
9000f5e0:	d007      	beq.n	9000f5f2 <USB_StopDevice+0x10a>
    count++;
9000f5e2:	9b01      	ldr	r3, [sp, #4]
9000f5e4:	3301      	adds	r3, #1
9000f5e6:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000f5e8:	9b01      	ldr	r3, [sp, #4]
9000f5ea:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000f5ee:	d9f4      	bls.n	9000f5da <USB_StopDevice+0xf2>
9000f5f0:	e7cc      	b.n	9000f58c <USB_StopDevice+0xa4>
  return HAL_OK;
9000f5f2:	4618      	mov	r0, r3
}
9000f5f4:	b002      	add	sp, #8
9000f5f6:	4770      	bx	lr

9000f5f8 <USB_SetDevAddress>:
{
9000f5f8:	4603      	mov	r3, r0
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
9000f5fa:	0109      	lsls	r1, r1, #4
}
9000f5fc:	2000      	movs	r0, #0
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
9000f5fe:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
9000f602:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
9000f606:	f422 62fe 	bic.w	r2, r2, #2032	@ 0x7f0
9000f60a:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
9000f60e:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
9000f612:	4311      	orrs	r1, r2
9000f614:	f8c3 1800 	str.w	r1, [r3, #2048]	@ 0x800
}
9000f618:	4770      	bx	lr
9000f61a:	bf00      	nop

9000f61c <USB_DevConnect>:
{
9000f61c:	4603      	mov	r3, r0
}
9000f61e:	2000      	movs	r0, #0
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
9000f620:	f8d3 2e00 	ldr.w	r2, [r3, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
9000f624:	f503 6100 	add.w	r1, r3, #2048	@ 0x800
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
9000f628:	f022 0203 	bic.w	r2, r2, #3
9000f62c:	f8c3 2e00 	str.w	r2, [r3, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
9000f630:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
9000f634:	f023 0302 	bic.w	r3, r3, #2
9000f638:	604b      	str	r3, [r1, #4]
}
9000f63a:	4770      	bx	lr

9000f63c <USB_DevDisconnect>:
{
9000f63c:	4603      	mov	r3, r0
}
9000f63e:	2000      	movs	r0, #0
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
9000f640:	f8d3 2e00 	ldr.w	r2, [r3, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
9000f644:	f503 6100 	add.w	r1, r3, #2048	@ 0x800
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
9000f648:	f022 0203 	bic.w	r2, r2, #3
9000f64c:	f8c3 2e00 	str.w	r2, [r3, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
9000f650:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
9000f654:	f043 0302 	orr.w	r3, r3, #2
9000f658:	604b      	str	r3, [r1, #4]
}
9000f65a:	4770      	bx	lr

9000f65c <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
9000f65c:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
9000f65e:	6980      	ldr	r0, [r0, #24]
}
9000f660:	4010      	ands	r0, r2
9000f662:	4770      	bx	lr

9000f664 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
9000f664:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
  tmpreg &= USBx_DEVICE->DAINTMSK;
9000f668:	f8d0 081c 	ldr.w	r0, [r0, #2076]	@ 0x81c
9000f66c:	4018      	ands	r0, r3
}
9000f66e:	0c00      	lsrs	r0, r0, #16
9000f670:	4770      	bx	lr
9000f672:	bf00      	nop

9000f674 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
9000f674:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
  tmpreg &= USBx_DEVICE->DAINTMSK;
9000f678:	f8d0 081c 	ldr.w	r0, [r0, #2076]	@ 0x81c
9000f67c:	4018      	ands	r0, r3
}
9000f67e:	b280      	uxth	r0, r0
9000f680:	4770      	bx	lr
9000f682:	bf00      	nop

9000f684 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
9000f684:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
9000f688:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
9000f68c:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
9000f690:	6940      	ldr	r0, [r0, #20]
}
9000f692:	4010      	ands	r0, r2
9000f694:	4770      	bx	lr
9000f696:	bf00      	nop

9000f698 <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
9000f698:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
9000f69c:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
9000f6a0:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
9000f6a4:	f001 010f 	and.w	r1, r1, #15
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
9000f6a8:	f8d0 0908 	ldr.w	r0, [r0, #2312]	@ 0x908
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
9000f6ac:	40cb      	lsrs	r3, r1
9000f6ae:	01db      	lsls	r3, r3, #7
9000f6b0:	b2db      	uxtb	r3, r3
9000f6b2:	4313      	orrs	r3, r2
}
9000f6b4:	4018      	ands	r0, r3
9000f6b6:	4770      	bx	lr

9000f6b8 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
9000f6b8:	6940      	ldr	r0, [r0, #20]
}
9000f6ba:	f000 0001 	and.w	r0, r0, #1
9000f6be:	4770      	bx	lr

9000f6c0 <USB_ActivateSetup>:
{
9000f6c0:	4603      	mov	r3, r0
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
9000f6c2:	4a09      	ldr	r2, [pc, #36]	@ (9000f6e8 <USB_ActivateSetup+0x28>)
}
9000f6c4:	2000      	movs	r0, #0
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
9000f6c6:	f503 6100 	add.w	r1, r3, #2048	@ 0x800
{
9000f6ca:	b410      	push	{r4}
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
9000f6cc:	f8d3 4900 	ldr.w	r4, [r3, #2304]	@ 0x900
9000f6d0:	4022      	ands	r2, r4
}
9000f6d2:	f85d 4b04 	ldr.w	r4, [sp], #4
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
9000f6d6:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
9000f6da:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
9000f6de:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000f6e2:	604b      	str	r3, [r1, #4]
}
9000f6e4:	4770      	bx	lr
9000f6e6:	bf00      	nop
9000f6e8:	fffff800 	.word	0xfffff800

9000f6ec <USB_EP0_OutStart>:
{
9000f6ec:	b430      	push	{r4, r5}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
9000f6ee:	6c05      	ldr	r5, [r0, #64]	@ 0x40
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000f6f0:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
9000f6f4:	4c10      	ldr	r4, [pc, #64]	@ (9000f738 <USB_EP0_OutStart+0x4c>)
9000f6f6:	42a5      	cmp	r5, r4
9000f6f8:	d903      	bls.n	9000f702 <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000f6fa:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
9000f6fe:	2c00      	cmp	r4, #0
9000f700:	db16      	blt.n	9000f730 <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
9000f702:	2400      	movs	r4, #0
  if (dma == 1U)
9000f704:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
9000f706:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
9000f708:	691c      	ldr	r4, [r3, #16]
9000f70a:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
9000f70e:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
9000f710:	691c      	ldr	r4, [r3, #16]
9000f712:	f044 0418 	orr.w	r4, r4, #24
9000f716:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
9000f718:	691c      	ldr	r4, [r3, #16]
9000f71a:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
9000f71e:	611c      	str	r4, [r3, #16]
  if (dma == 1U)
9000f720:	d106      	bne.n	9000f730 <USB_EP0_OutStart+0x44>
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
9000f722:	615a      	str	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
9000f724:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000f728:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
9000f72c:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
}
9000f730:	2000      	movs	r0, #0
9000f732:	bc30      	pop	{r4, r5}
9000f734:	4770      	bx	lr
9000f736:	bf00      	nop
9000f738:	4f54300a 	.word	0x4f54300a

9000f73c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000f73c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000f73e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f742:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000f744:	f002 fb50 	bl	90011de8 <xTaskGetSchedulerState>
9000f748:	2801      	cmp	r0, #1
9000f74a:	d100      	bne.n	9000f74e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000f74c:	bd08      	pop	{r3, pc}
9000f74e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000f752:	f000 bc37 	b.w	9000ffc4 <xPortSysTickHandler>
9000f756:	bf00      	nop

9000f758 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000f758:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f75c:	b92b      	cbnz	r3, 9000f76a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000f75e:	4b06      	ldr	r3, [pc, #24]	@ (9000f778 <osKernelInitialize+0x20>)
9000f760:	6818      	ldr	r0, [r3, #0]
9000f762:	b928      	cbnz	r0, 9000f770 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000f764:	2201      	movs	r2, #1
9000f766:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000f768:	4770      	bx	lr
    stat = osErrorISR;
9000f76a:	f06f 0005 	mvn.w	r0, #5
9000f76e:	4770      	bx	lr
    } else {
      stat = osError;
9000f770:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000f774:	4770      	bx	lr
9000f776:	bf00      	nop
9000f778:	2400b85c 	.word	0x2400b85c

9000f77c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000f77c:	b510      	push	{r4, lr}
9000f77e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000f782:	b974      	cbnz	r4, 9000f7a2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000f784:	4b08      	ldr	r3, [pc, #32]	@ (9000f7a8 <osKernelStart+0x2c>)
9000f786:	681a      	ldr	r2, [r3, #0]
9000f788:	2a01      	cmp	r2, #1
9000f78a:	d107      	bne.n	9000f79c <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000f78c:	4907      	ldr	r1, [pc, #28]	@ (9000f7ac <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000f78e:	2202      	movs	r2, #2
9000f790:	77cc      	strb	r4, [r1, #31]
9000f792:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000f794:	f002 f8c6 	bl	90011924 <vTaskStartScheduler>
      stat = osOK;
9000f798:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000f79a:	bd10      	pop	{r4, pc}
      stat = osError;
9000f79c:	f04f 30ff 	mov.w	r0, #4294967295
}
9000f7a0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000f7a2:	f06f 0005 	mvn.w	r0, #5
}
9000f7a6:	bd10      	pop	{r4, pc}
9000f7a8:	2400b85c 	.word	0x2400b85c
9000f7ac:	e000ed00 	.word	0xe000ed00

9000f7b0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f7b0:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000f7b2:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f7b4:	b087      	sub	sp, #28
  hTask = NULL;
9000f7b6:	9505      	str	r5, [sp, #20]
9000f7b8:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000f7bc:	b300      	cbz	r0, 9000f800 <osThreadNew+0x50>
9000f7be:	b9fb      	cbnz	r3, 9000f800 <osThreadNew+0x50>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000f7c0:	4614      	mov	r4, r2
9000f7c2:	b302      	cbz	r2, 9000f806 <osThreadNew+0x56>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000f7c4:	6996      	ldr	r6, [r2, #24]
9000f7c6:	b9c6      	cbnz	r6, 9000f7fa <osThreadNew+0x4a>
9000f7c8:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f7ca:	6863      	ldr	r3, [r4, #4]
9000f7cc:	07db      	lsls	r3, r3, #31
9000f7ce:	d417      	bmi.n	9000f800 <osThreadNew+0x50>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000f7d0:	6963      	ldr	r3, [r4, #20]
9000f7d2:	b32b      	cbz	r3, 9000f820 <osThreadNew+0x70>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000f7d4:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f7d6:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000f7d8:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f7dc:	68e7      	ldr	r7, [r4, #12]
9000f7de:	b30d      	cbz	r5, 9000f824 <osThreadNew+0x74>
9000f7e0:	2f5f      	cmp	r7, #95	@ 0x5f
9000f7e2:	d90d      	bls.n	9000f800 <osThreadNew+0x50>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000f7e4:	6924      	ldr	r4, [r4, #16]
9000f7e6:	b15b      	cbz	r3, 9000f800 <osThreadNew+0x50>
9000f7e8:	b154      	cbz	r4, 9000f800 <osThreadNew+0x50>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000f7ea:	460b      	mov	r3, r1
9000f7ec:	9600      	str	r6, [sp, #0]
9000f7ee:	4661      	mov	r1, ip
9000f7f0:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000f7f4:	f001 ff04 	bl	90011600 <xTaskCreateStatic>
9000f7f8:	e003      	b.n	9000f802 <osThreadNew+0x52>
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f7fa:	1e72      	subs	r2, r6, #1
9000f7fc:	2a37      	cmp	r2, #55	@ 0x37
9000f7fe:	d9e4      	bls.n	9000f7ca <osThreadNew+0x1a>
        return (NULL);
9000f800:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000f802:	b007      	add	sp, #28
9000f804:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000f806:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000f808:	2618      	movs	r6, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f80a:	460b      	mov	r3, r1
9000f80c:	4621      	mov	r1, r4
9000f80e:	ac05      	add	r4, sp, #20
9000f810:	9600      	str	r6, [sp, #0]
9000f812:	9401      	str	r4, [sp, #4]
9000f814:	f001 ff9e 	bl	90011754 <xTaskCreate>
9000f818:	2801      	cmp	r0, #1
9000f81a:	d1f1      	bne.n	9000f800 <osThreadNew+0x50>
  return ((osThreadId_t)hTask);
9000f81c:	9805      	ldr	r0, [sp, #20]
9000f81e:	e7f0      	b.n	9000f802 <osThreadNew+0x52>
    stack = configMINIMAL_STACK_SIZE;
9000f820:	2280      	movs	r2, #128	@ 0x80
9000f822:	e7d8      	b.n	9000f7d6 <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000f824:	2f00      	cmp	r7, #0
9000f826:	d1eb      	bne.n	9000f800 <osThreadNew+0x50>
9000f828:	6923      	ldr	r3, [r4, #16]
9000f82a:	2b00      	cmp	r3, #0
9000f82c:	d1e8      	bne.n	9000f800 <osThreadNew+0x50>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f82e:	b292      	uxth	r2, r2
9000f830:	4664      	mov	r4, ip
9000f832:	e7ea      	b.n	9000f80a <osThreadNew+0x5a>

9000f834 <osDelay>:
9000f834:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f838:	b93a      	cbnz	r2, 9000f84a <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000f83a:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000f83c:	b908      	cbnz	r0, 9000f842 <osDelay+0xe>
    stat = osOK;
9000f83e:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000f840:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000f842:	f002 f819 	bl	90011878 <vTaskDelay>
    stat = osOK;
9000f846:	2000      	movs	r0, #0
}
9000f848:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000f84a:	f06f 0005 	mvn.w	r0, #5
}
9000f84e:	4770      	bx	lr

9000f850 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000f850:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f852:	b083      	sub	sp, #12
9000f854:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000f858:	b98e      	cbnz	r6, 9000f87e <osSemaphoreNew+0x2e>
9000f85a:	4605      	mov	r5, r0
9000f85c:	b178      	cbz	r0, 9000f87e <osSemaphoreNew+0x2e>
9000f85e:	4288      	cmp	r0, r1
9000f860:	460f      	mov	r7, r1
9000f862:	d30c      	bcc.n	9000f87e <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000f864:	4614      	mov	r4, r2
9000f866:	b172      	cbz	r2, 9000f886 <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000f868:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000f86c:	b14a      	cbz	r2, 9000f882 <osSemaphoreNew+0x32>
9000f86e:	2b4f      	cmp	r3, #79	@ 0x4f
9000f870:	d905      	bls.n	9000f87e <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000f872:	2801      	cmp	r0, #1
9000f874:	d02f      	beq.n	9000f8d6 <osSemaphoreNew+0x86>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000f876:	f000 fd83 	bl	90010380 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000f87a:	4605      	mov	r5, r0
9000f87c:	b968      	cbnz	r0, 9000f89a <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000f87e:	2500      	movs	r5, #0
9000f880:	e010      	b.n	9000f8a4 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000f882:	2b00      	cmp	r3, #0
9000f884:	d1fb      	bne.n	9000f87e <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000f886:	2d01      	cmp	r5, #1
9000f888:	d00f      	beq.n	9000f8aa <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000f88a:	4628      	mov	r0, r5
9000f88c:	4639      	mov	r1, r7
9000f88e:	f000 fdd7 	bl	90010440 <xQueueCreateCountingSemaphore>
9000f892:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000f894:	2d00      	cmp	r5, #0
9000f896:	d0f2      	beq.n	9000f87e <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000f898:	b104      	cbz	r4, 9000f89c <osSemaphoreNew+0x4c>
          name = attr->name;
9000f89a:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000f89c:	4621      	mov	r1, r4
9000f89e:	4628      	mov	r0, r5
9000f8a0:	f001 fc08 	bl	900110b4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000f8a4:	4628      	mov	r0, r5
9000f8a6:	b003      	add	sp, #12
9000f8a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000f8aa:	4628      	mov	r0, r5
9000f8ac:	2203      	movs	r2, #3
9000f8ae:	2100      	movs	r1, #0
9000f8b0:	f000 fd24 	bl	900102fc <xQueueGenericCreate>
9000f8b4:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000f8b6:	2d00      	cmp	r5, #0
9000f8b8:	d0e1      	beq.n	9000f87e <osSemaphoreNew+0x2e>
9000f8ba:	2f00      	cmp	r7, #0
9000f8bc:	d0ea      	beq.n	9000f894 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000f8be:	2300      	movs	r3, #0
9000f8c0:	4628      	mov	r0, r5
9000f8c2:	461a      	mov	r2, r3
9000f8c4:	4619      	mov	r1, r3
9000f8c6:	f000 fe01 	bl	900104cc <xQueueGenericSend>
9000f8ca:	2801      	cmp	r0, #1
9000f8cc:	d0e4      	beq.n	9000f898 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000f8ce:	4628      	mov	r0, r5
9000f8d0:	f001 fbaa 	bl	90011028 <vQueueDelete>
      if (hSemaphore != NULL) {
9000f8d4:	e7d3      	b.n	9000f87e <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000f8d6:	4613      	mov	r3, r2
9000f8d8:	2203      	movs	r2, #3
9000f8da:	4631      	mov	r1, r6
9000f8dc:	9200      	str	r2, [sp, #0]
9000f8de:	4632      	mov	r2, r6
9000f8e0:	f000 fca0 	bl	90010224 <xQueueGenericCreateStatic>
9000f8e4:	4605      	mov	r5, r0
9000f8e6:	e7e6      	b.n	9000f8b6 <osSemaphoreNew+0x66>

9000f8e8 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000f8e8:	b360      	cbz	r0, 9000f944 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000f8ea:	b510      	push	{r4, lr}
9000f8ec:	460c      	mov	r4, r1
9000f8ee:	b082      	sub	sp, #8
9000f8f0:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000f8f4:	b1b3      	cbz	r3, 9000f924 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000f8f6:	bb11      	cbnz	r1, 9000f93e <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000f8f8:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000f8fa:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000f8fc:	f001 fb36 	bl	90010f6c <xQueueReceiveFromISR>
9000f900:	2801      	cmp	r0, #1
9000f902:	d118      	bne.n	9000f936 <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000f904:	9b01      	ldr	r3, [sp, #4]
9000f906:	b913      	cbnz	r3, 9000f90e <osSemaphoreAcquire+0x26>
  stat = osOK;
9000f908:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000f90a:	b002      	add	sp, #8
9000f90c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000f90e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f912:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f916:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f91a:	f3bf 8f4f 	dsb	sy
9000f91e:	f3bf 8f6f 	isb	sy
9000f922:	e7f1      	b.n	9000f908 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000f924:	f001 f996 	bl	90010c54 <xQueueSemaphoreTake>
9000f928:	2801      	cmp	r0, #1
9000f92a:	d0ed      	beq.n	9000f908 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000f92c:	b11c      	cbz	r4, 9000f936 <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000f92e:	f06f 0001 	mvn.w	r0, #1
}
9000f932:	b002      	add	sp, #8
9000f934:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000f936:	f06f 0002 	mvn.w	r0, #2
}
9000f93a:	b002      	add	sp, #8
9000f93c:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000f93e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000f942:	e7e2      	b.n	9000f90a <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000f944:	f06f 0003 	mvn.w	r0, #3
}
9000f948:	4770      	bx	lr
9000f94a:	bf00      	nop

9000f94c <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000f94c:	b328      	cbz	r0, 9000f99a <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000f94e:	b500      	push	{lr}
9000f950:	b083      	sub	sp, #12
9000f952:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000f956:	b19b      	cbz	r3, 9000f980 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000f958:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000f95a:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000f95c:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000f95e:	f000 ff9d 	bl	9001089c <xQueueGiveFromISR>
9000f962:	2801      	cmp	r0, #1
9000f964:	d116      	bne.n	9000f994 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000f966:	9b01      	ldr	r3, [sp, #4]
9000f968:	b183      	cbz	r3, 9000f98c <osSemaphoreRelease+0x40>
9000f96a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f96e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f972:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f976:	f3bf 8f4f 	dsb	sy
9000f97a:	f3bf 8f6f 	isb	sy
9000f97e:	e005      	b.n	9000f98c <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000f980:	461a      	mov	r2, r3
9000f982:	4619      	mov	r1, r3
9000f984:	f000 fda2 	bl	900104cc <xQueueGenericSend>
9000f988:	2801      	cmp	r0, #1
9000f98a:	d103      	bne.n	9000f994 <osSemaphoreRelease+0x48>
  stat = osOK;
9000f98c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000f98e:	b003      	add	sp, #12
9000f990:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000f994:	f06f 0002 	mvn.w	r0, #2
9000f998:	e7f9      	b.n	9000f98e <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000f99a:	f06f 0003 	mvn.w	r0, #3
}
9000f99e:	4770      	bx	lr

9000f9a0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000f9a0:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f9a2:	b083      	sub	sp, #12
9000f9a4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000f9a8:	b987      	cbnz	r7, 9000f9cc <osMessageQueueNew+0x2c>
9000f9aa:	4605      	mov	r5, r0
9000f9ac:	b170      	cbz	r0, 9000f9cc <osMessageQueueNew+0x2c>
9000f9ae:	b169      	cbz	r1, 9000f9cc <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000f9b0:	4614      	mov	r4, r2
9000f9b2:	b17a      	cbz	r2, 9000f9d4 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000f9b4:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000f9b8:	b1c3      	cbz	r3, 9000f9ec <osMessageQueueNew+0x4c>
9000f9ba:	2a4f      	cmp	r2, #79	@ 0x4f
9000f9bc:	d906      	bls.n	9000f9cc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000f9be:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000f9c0:	b122      	cbz	r2, 9000f9cc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000f9c2:	fb01 f505 	mul.w	r5, r1, r5
9000f9c6:	6966      	ldr	r6, [r4, #20]
9000f9c8:	42ae      	cmp	r6, r5
9000f9ca:	d21e      	bcs.n	9000fa0a <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000f9cc:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000f9ce:	4628      	mov	r0, r5
9000f9d0:	b003      	add	sp, #12
9000f9d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000f9d4:	f000 fc92 	bl	900102fc <xQueueGenericCreate>
    if (hQueue != NULL) {
9000f9d8:	4605      	mov	r5, r0
9000f9da:	2800      	cmp	r0, #0
9000f9dc:	d0f6      	beq.n	9000f9cc <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000f9de:	4628      	mov	r0, r5
9000f9e0:	4621      	mov	r1, r4
9000f9e2:	f001 fb67 	bl	900110b4 <vQueueAddToRegistry>
}
9000f9e6:	4628      	mov	r0, r5
9000f9e8:	b003      	add	sp, #12
9000f9ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000f9ec:	2a00      	cmp	r2, #0
9000f9ee:	d1ed      	bne.n	9000f9cc <osMessageQueueNew+0x2c>
9000f9f0:	6923      	ldr	r3, [r4, #16]
9000f9f2:	2b00      	cmp	r3, #0
9000f9f4:	d1ea      	bne.n	9000f9cc <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000f9f6:	6962      	ldr	r2, [r4, #20]
9000f9f8:	2a00      	cmp	r2, #0
9000f9fa:	d1e7      	bne.n	9000f9cc <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000f9fc:	f000 fc7e 	bl	900102fc <xQueueGenericCreate>
    if (hQueue != NULL) {
9000fa00:	4605      	mov	r5, r0
9000fa02:	2800      	cmp	r0, #0
9000fa04:	d0e2      	beq.n	9000f9cc <osMessageQueueNew+0x2c>
        name = attr->name;
9000fa06:	6824      	ldr	r4, [r4, #0]
9000fa08:	e7e9      	b.n	9000f9de <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000fa0a:	9700      	str	r7, [sp, #0]
9000fa0c:	f000 fc0a 	bl	90010224 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000fa10:	4605      	mov	r5, r0
9000fa12:	2800      	cmp	r0, #0
9000fa14:	d1f7      	bne.n	9000fa06 <osMessageQueueNew+0x66>
9000fa16:	e7d9      	b.n	9000f9cc <osMessageQueueNew+0x2c>

9000fa18 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000fa18:	b560      	push	{r5, r6, lr}
9000fa1a:	461e      	mov	r6, r3
9000fa1c:	b083      	sub	sp, #12
9000fa1e:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fa22:	fab0 f580 	clz	r5, r0
9000fa26:	fab1 f381 	clz	r3, r1
9000fa2a:	096d      	lsrs	r5, r5, #5
9000fa2c:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000fa2e:	b1da      	cbz	r2, 9000fa68 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fa30:	2e00      	cmp	r6, #0
9000fa32:	bf18      	it	ne
9000fa34:	f043 0301 	orrne.w	r3, r3, #1
9000fa38:	bb33      	cbnz	r3, 9000fa88 <osMessageQueuePut+0x70>
9000fa3a:	bb2d      	cbnz	r5, 9000fa88 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fa3c:	462b      	mov	r3, r5
9000fa3e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fa40:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fa42:	f000 fec5 	bl	900107d0 <xQueueGenericSendFromISR>
9000fa46:	2801      	cmp	r0, #1
9000fa48:	d11a      	bne.n	9000fa80 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fa4a:	9b01      	ldr	r3, [sp, #4]
9000fa4c:	b14b      	cbz	r3, 9000fa62 <osMessageQueuePut+0x4a>
9000fa4e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fa52:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fa56:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fa5a:	f3bf 8f4f 	dsb	sy
9000fa5e:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fa62:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fa64:	b003      	add	sp, #12
9000fa66:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000fa68:	b975      	cbnz	r5, 9000fa88 <osMessageQueuePut+0x70>
9000fa6a:	b96b      	cbnz	r3, 9000fa88 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000fa6c:	4632      	mov	r2, r6
9000fa6e:	f000 fd2d 	bl	900104cc <xQueueGenericSend>
9000fa72:	2801      	cmp	r0, #1
9000fa74:	d0f5      	beq.n	9000fa62 <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000fa76:	b11e      	cbz	r6, 9000fa80 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000fa78:	f06f 0001 	mvn.w	r0, #1
}
9000fa7c:	b003      	add	sp, #12
9000fa7e:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000fa80:	f06f 0002 	mvn.w	r0, #2
}
9000fa84:	b003      	add	sp, #12
9000fa86:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000fa88:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000fa8c:	e7ea      	b.n	9000fa64 <osMessageQueuePut+0x4c>
9000fa8e:	bf00      	nop

9000fa90 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000fa90:	b570      	push	{r4, r5, r6, lr}
9000fa92:	461e      	mov	r6, r3
9000fa94:	b082      	sub	sp, #8
9000fa96:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fa9a:	fab0 f580 	clz	r5, r0
9000fa9e:	fab1 f481 	clz	r4, r1
9000faa2:	096d      	lsrs	r5, r5, #5
9000faa4:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000faa6:	b1d3      	cbz	r3, 9000fade <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000faa8:	2e00      	cmp	r6, #0
9000faaa:	bf18      	it	ne
9000faac:	f044 0401 	orrne.w	r4, r4, #1
9000fab0:	bb2c      	cbnz	r4, 9000fafe <osMessageQueueGet+0x6e>
9000fab2:	bb25      	cbnz	r5, 9000fafe <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fab4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fab6:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fab8:	f001 fa58 	bl	90010f6c <xQueueReceiveFromISR>
9000fabc:	2801      	cmp	r0, #1
9000fabe:	d11a      	bne.n	9000faf6 <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fac0:	9b01      	ldr	r3, [sp, #4]
9000fac2:	b14b      	cbz	r3, 9000fad8 <osMessageQueueGet+0x48>
9000fac4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fac8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000facc:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fad0:	f3bf 8f4f 	dsb	sy
9000fad4:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fad8:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fada:	b002      	add	sp, #8
9000fadc:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000fade:	b975      	cbnz	r5, 9000fafe <osMessageQueueGet+0x6e>
9000fae0:	b96c      	cbnz	r4, 9000fafe <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000fae2:	4632      	mov	r2, r6
9000fae4:	f000 ff30 	bl	90010948 <xQueueReceive>
9000fae8:	2801      	cmp	r0, #1
9000faea:	d0f5      	beq.n	9000fad8 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000faec:	b11e      	cbz	r6, 9000faf6 <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000faee:	f06f 0001 	mvn.w	r0, #1
}
9000faf2:	b002      	add	sp, #8
9000faf4:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000faf6:	f06f 0002 	mvn.w	r0, #2
}
9000fafa:	b002      	add	sp, #8
9000fafc:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000fafe:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000fb02:	e7ea      	b.n	9000fada <osMessageQueueGet+0x4a>

9000fb04 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fb04:	4b04      	ldr	r3, [pc, #16]	@ (9000fb18 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000fb06:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fb08:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fb0a:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000fb0c:	4c03      	ldr	r4, [pc, #12]	@ (9000fb1c <vApplicationGetIdleTaskMemory+0x18>)
9000fb0e:	600c      	str	r4, [r1, #0]
}
9000fb10:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fb14:	6013      	str	r3, [r2, #0]
}
9000fb16:	4770      	bx	lr
9000fb18:	2400b7fc 	.word	0x2400b7fc
9000fb1c:	2400b5fc 	.word	0x2400b5fc

9000fb20 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000fb20:	4b05      	ldr	r3, [pc, #20]	@ (9000fb38 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000fb22:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000fb24:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000fb26:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000fb2a:	4c04      	ldr	r4, [pc, #16]	@ (9000fb3c <vApplicationGetTimerTaskMemory+0x1c>)
9000fb2c:	600c      	str	r4, [r1, #0]
}
9000fb2e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000fb32:	6013      	str	r3, [r2, #0]
}
9000fb34:	4770      	bx	lr
9000fb36:	bf00      	nop
9000fb38:	2400b59c 	.word	0x2400b59c
9000fb3c:	2400b19c 	.word	0x2400b19c

9000fb40 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000fb40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000fb44:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000fb46:	f001 ff89 	bl	90011a5c <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000fb4a:	4a53      	ldr	r2, [pc, #332]	@ (9000fc98 <pvPortMalloc+0x158>)
9000fb4c:	6815      	ldr	r5, [r2, #0]
9000fb4e:	2d00      	cmp	r5, #0
9000fb50:	d035      	beq.n	9000fbbe <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000fb52:	4b52      	ldr	r3, [pc, #328]	@ (9000fc9c <pvPortMalloc+0x15c>)
9000fb54:	681e      	ldr	r6, [r3, #0]
9000fb56:	4234      	tst	r4, r6
9000fb58:	d12b      	bne.n	9000fbb2 <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000fb5a:	b354      	cbz	r4, 9000fbb2 <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000fb5c:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000fb60:	0764      	lsls	r4, r4, #29
9000fb62:	d002      	beq.n	9000fb6a <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000fb64:	f020 0007 	bic.w	r0, r0, #7
9000fb68:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000fb6a:	b310      	cbz	r0, 9000fbb2 <pvPortMalloc+0x72>
9000fb6c:	f8df e140 	ldr.w	lr, [pc, #320]	@ 9000fcb0 <pvPortMalloc+0x170>
9000fb70:	f8de c000 	ldr.w	ip, [lr]
9000fb74:	4584      	cmp	ip, r0
9000fb76:	d31c      	bcc.n	9000fbb2 <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000fb78:	4c49      	ldr	r4, [pc, #292]	@ (9000fca0 <pvPortMalloc+0x160>)
9000fb7a:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000fb7c:	e003      	b.n	9000fb86 <pvPortMalloc+0x46>
9000fb7e:	681a      	ldr	r2, [r3, #0]
9000fb80:	b122      	cbz	r2, 9000fb8c <pvPortMalloc+0x4c>
9000fb82:	461c      	mov	r4, r3
9000fb84:	4613      	mov	r3, r2
9000fb86:	6859      	ldr	r1, [r3, #4]
9000fb88:	4281      	cmp	r1, r0
9000fb8a:	d3f8      	bcc.n	9000fb7e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000fb8c:	42ab      	cmp	r3, r5
9000fb8e:	d010      	beq.n	9000fbb2 <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000fb90:	681a      	ldr	r2, [r3, #0]
9000fb92:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000fb94:	1a0a      	subs	r2, r1, r0
9000fb96:	2a10      	cmp	r2, #16
9000fb98:	d947      	bls.n	9000fc2a <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000fb9a:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000fb9c:	0761      	lsls	r1, r4, #29
9000fb9e:	d02d      	beq.n	9000fbfc <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000fba0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fba4:	f383 8811 	msr	BASEPRI, r3
9000fba8:	f3bf 8f6f 	isb	sy
9000fbac:	f3bf 8f4f 	dsb	sy
9000fbb0:	e7fe      	b.n	9000fbb0 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000fbb2:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000fbb4:	f001 ff5a 	bl	90011a6c <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000fbb8:	4620      	mov	r0, r4
9000fbba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000fbbe:	4b39      	ldr	r3, [pc, #228]	@ (9000fca4 <pvPortMalloc+0x164>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000fbc0:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000fbc4:	4e36      	ldr	r6, [pc, #216]	@ (9000fca0 <pvPortMalloc+0x160>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000fbc6:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000fbc8:	4d37      	ldr	r5, [pc, #220]	@ (9000fca8 <pvPortMalloc+0x168>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000fbca:	bf18      	it	ne
9000fbcc:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000fbce:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000fbd2:	bf18      	it	ne
9000fbd4:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000fbd8:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000fbda:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000fbdc:	6033      	str	r3, [r6, #0]
9000fbde:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000fbe0:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000fbe2:	1aeb      	subs	r3, r5, r3
}
9000fbe4:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000fbe6:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fbea:	4a30      	ldr	r2, [pc, #192]	@ (9000fcac <pvPortMalloc+0x16c>)
9000fbec:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fbee:	4a30      	ldr	r2, [pc, #192]	@ (9000fcb0 <pvPortMalloc+0x170>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000fbf0:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fbf4:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000fbf6:	4b29      	ldr	r3, [pc, #164]	@ (9000fc9c <pvPortMalloc+0x15c>)
9000fbf8:	6018      	str	r0, [r3, #0]
}
9000fbfa:	e7ac      	b.n	9000fb56 <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000fbfc:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fbfe:	4a28      	ldr	r2, [pc, #160]	@ (9000fca0 <pvPortMalloc+0x160>)
						pxBlock->xBlockSize = xWantedSize;
9000fc00:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fc02:	4617      	mov	r7, r2
9000fc04:	6812      	ldr	r2, [r2, #0]
9000fc06:	4294      	cmp	r4, r2
9000fc08:	d8fb      	bhi.n	9000fc02 <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fc0a:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fc0c:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fc10:	eb07 0901 	add.w	r9, r7, r1
9000fc14:	454c      	cmp	r4, r9
9000fc16:	d028      	beq.n	9000fc6a <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc18:	eb04 0108 	add.w	r1, r4, r8
9000fc1c:	428a      	cmp	r2, r1
9000fc1e:	d02e      	beq.n	9000fc7e <pvPortMalloc+0x13e>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000fc20:	4601      	mov	r1, r0
9000fc22:	6022      	str	r2, [r4, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000fc24:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000fc26:	bf18      	it	ne
9000fc28:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fc2a:	4820      	ldr	r0, [pc, #128]	@ (9000fcac <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc2c:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->pxNextFreeBlock = NULL;
9000fc30:	2500      	movs	r5, #0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000fc32:	4331      	orrs	r1, r6
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fc34:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc36:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fc3a:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000fc3c:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000fc40:	6059      	str	r1, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000fc42:	bf38      	it	cc
9000fc44:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000fc46:	481b      	ldr	r0, [pc, #108]	@ (9000fcb4 <pvPortMalloc+0x174>)
					pxBlock->pxNextFreeBlock = NULL;
9000fc48:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000fc4a:	6802      	ldr	r2, [r0, #0]
9000fc4c:	3201      	adds	r2, #1
9000fc4e:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000fc50:	f001 ff0c 	bl	90011a6c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000fc54:	0763      	lsls	r3, r4, #29
9000fc56:	d0af      	beq.n	9000fbb8 <pvPortMalloc+0x78>
9000fc58:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fc5c:	f383 8811 	msr	BASEPRI, r3
9000fc60:	f3bf 8f6f 	isb	sy
9000fc64:	f3bf 8f4f 	dsb	sy
9000fc68:	e7fe      	b.n	9000fc68 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fc6a:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc6c:	eb07 0108 	add.w	r1, r7, r8
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fc70:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc74:	428a      	cmp	r2, r1
9000fc76:	d001      	beq.n	9000fc7c <pvPortMalloc+0x13c>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc78:	6859      	ldr	r1, [r3, #4]
9000fc7a:	e7d6      	b.n	9000fc2a <pvPortMalloc+0xea>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc7c:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000fc7e:	42aa      	cmp	r2, r5
9000fc80:	d006      	beq.n	9000fc90 <pvPortMalloc+0x150>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc82:	6851      	ldr	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fc84:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc86:	4441      	add	r1, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fc88:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc8a:	6061      	str	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc8c:	6859      	ldr	r1, [r3, #4]
9000fc8e:	e7c9      	b.n	9000fc24 <pvPortMalloc+0xe4>
9000fc90:	6859      	ldr	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000fc92:	6022      	str	r2, [r4, #0]
9000fc94:	e7c6      	b.n	9000fc24 <pvPortMalloc+0xe4>
9000fc96:	bf00      	nop
9000fc98:	2400b874 	.word	0x2400b874
9000fc9c:	2400b860 	.word	0x2400b860
9000fca0:	2400b878 	.word	0x2400b878
9000fca4:	2400b880 	.word	0x2400b880
9000fca8:	24023f18 	.word	0x24023f18
9000fcac:	2400b86c 	.word	0x2400b86c
9000fcb0:	2400b870 	.word	0x2400b870
9000fcb4:	2400b868 	.word	0x2400b868

9000fcb8 <vPortFree>:
	if( pv != NULL )
9000fcb8:	b1d0      	cbz	r0, 9000fcf0 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000fcba:	4a2d      	ldr	r2, [pc, #180]	@ (9000fd70 <vPortFree+0xb8>)
9000fcbc:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000fcc0:	6812      	ldr	r2, [r2, #0]
9000fcc2:	4213      	tst	r3, r2
9000fcc4:	d00b      	beq.n	9000fcde <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000fcc6:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000fcca:	b191      	cbz	r1, 9000fcf2 <vPortFree+0x3a>
9000fccc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fcd0:	f383 8811 	msr	BASEPRI, r3
9000fcd4:	f3bf 8f6f 	isb	sy
9000fcd8:	f3bf 8f4f 	dsb	sy
9000fcdc:	e7fe      	b.n	9000fcdc <vPortFree+0x24>
9000fcde:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fce2:	f383 8811 	msr	BASEPRI, r3
9000fce6:	f3bf 8f6f 	isb	sy
9000fcea:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000fcee:	e7fe      	b.n	9000fcee <vPortFree+0x36>
9000fcf0:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000fcf2:	ea23 0302 	bic.w	r3, r3, r2
{
9000fcf6:	b530      	push	{r4, r5, lr}
9000fcf8:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000fcfa:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000fcfe:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000fd02:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000fd04:	f001 feaa 	bl	90011a5c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000fd08:	4a1a      	ldr	r2, [pc, #104]	@ (9000fd74 <vPortFree+0xbc>)
9000fd0a:	9801      	ldr	r0, [sp, #4]
9000fd0c:	6813      	ldr	r3, [r2, #0]
9000fd0e:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000fd12:	440b      	add	r3, r1
9000fd14:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fd16:	4b18      	ldr	r3, [pc, #96]	@ (9000fd78 <vPortFree+0xc0>)
9000fd18:	461a      	mov	r2, r3
9000fd1a:	681b      	ldr	r3, [r3, #0]
9000fd1c:	429c      	cmp	r4, r3
9000fd1e:	d8fb      	bhi.n	9000fd18 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fd20:	6855      	ldr	r5, [r2, #4]
9000fd22:	eb02 0e05 	add.w	lr, r2, r5
9000fd26:	4574      	cmp	r4, lr
9000fd28:	d011      	beq.n	9000fd4e <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fd2a:	eb04 0c01 	add.w	ip, r4, r1
9000fd2e:	4563      	cmp	r3, ip
9000fd30:	d013      	beq.n	9000fd5a <vPortFree+0xa2>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000fd32:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000fd36:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000fd38:	bf18      	it	ne
9000fd3a:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000fd3c:	4a0f      	ldr	r2, [pc, #60]	@ (9000fd7c <vPortFree+0xc4>)
9000fd3e:	6813      	ldr	r3, [r2, #0]
9000fd40:	3301      	adds	r3, #1
9000fd42:	6013      	str	r3, [r2, #0]
}
9000fd44:	b003      	add	sp, #12
9000fd46:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000fd4a:	f001 be8f 	b.w	90011a6c <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fd4e:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fd50:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fd52:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fd54:	4283      	cmp	r3, r0
9000fd56:	d1f1      	bne.n	9000fd3c <vPortFree+0x84>
9000fd58:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000fd5a:	4809      	ldr	r0, [pc, #36]	@ (9000fd80 <vPortFree+0xc8>)
9000fd5c:	6800      	ldr	r0, [r0, #0]
9000fd5e:	4283      	cmp	r3, r0
9000fd60:	d003      	beq.n	9000fd6a <vPortFree+0xb2>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fd62:	e9d3 0500 	ldrd	r0, r5, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fd66:	4429      	add	r1, r5
9000fd68:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fd6a:	6020      	str	r0, [r4, #0]
9000fd6c:	e7e3      	b.n	9000fd36 <vPortFree+0x7e>
9000fd6e:	bf00      	nop
9000fd70:	2400b860 	.word	0x2400b860
9000fd74:	2400b870 	.word	0x2400b870
9000fd78:	2400b878 	.word	0x2400b878
9000fd7c:	2400b864 	.word	0x2400b864
9000fd80:	2400b874 	.word	0x2400b874

9000fd84 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000fd84:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000fd88:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000fd8c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000fd8e:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000fd90:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000fd92:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000fd94:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000fd98:	4770      	bx	lr
9000fd9a:	bf00      	nop

9000fd9c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000fd9c:	2300      	movs	r3, #0
9000fd9e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000fda0:	4770      	bx	lr
9000fda2:	bf00      	nop

9000fda4 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000fda4:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000fda6:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000fda8:	3301      	adds	r3, #1
{
9000fdaa:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000fdac:	6894      	ldr	r4, [r2, #8]
9000fdae:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000fdb2:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000fdb4:	6091      	str	r1, [r2, #8]
}
9000fdb6:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000fdba:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000fdbc:	6003      	str	r3, [r0, #0]
}
9000fdbe:	4770      	bx	lr

9000fdc0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000fdc0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000fdc2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000fdc4:	1c6b      	adds	r3, r5, #1
9000fdc6:	d010      	beq.n	9000fdea <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000fdc8:	f100 0308 	add.w	r3, r0, #8
9000fdcc:	461c      	mov	r4, r3
9000fdce:	685b      	ldr	r3, [r3, #4]
9000fdd0:	681a      	ldr	r2, [r3, #0]
9000fdd2:	42aa      	cmp	r2, r5
9000fdd4:	d9fa      	bls.n	9000fdcc <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000fdd6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000fdd8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000fdda:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000fddc:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000fdde:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000fde0:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000fde2:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000fde4:	6002      	str	r2, [r0, #0]
}
9000fde6:	bc30      	pop	{r4, r5}
9000fde8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000fdea:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000fdec:	6863      	ldr	r3, [r4, #4]
9000fdee:	e7f2      	b.n	9000fdd6 <vListInsert+0x16>

9000fdf0 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000fdf0:	6903      	ldr	r3, [r0, #16]
{
9000fdf2:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000fdf4:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000fdf6:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000fdfa:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000fdfc:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000fe00:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000fe02:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000fe04:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000fe08:	bf08      	it	eq
9000fe0a:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000fe0c:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000fe0e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000fe10:	3a01      	subs	r2, #1
9000fe12:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000fe14:	6818      	ldr	r0, [r3, #0]
}
9000fe16:	4770      	bx	lr

9000fe18 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000fe18:	4808      	ldr	r0, [pc, #32]	@ (9000fe3c <prvPortStartFirstTask+0x24>)
9000fe1a:	6800      	ldr	r0, [r0, #0]
9000fe1c:	6800      	ldr	r0, [r0, #0]
9000fe1e:	f380 8808 	msr	MSP, r0
9000fe22:	f04f 0000 	mov.w	r0, #0
9000fe26:	f380 8814 	msr	CONTROL, r0
9000fe2a:	b662      	cpsie	i
9000fe2c:	b661      	cpsie	f
9000fe2e:	f3bf 8f4f 	dsb	sy
9000fe32:	f3bf 8f6f 	isb	sy
9000fe36:	df00      	svc	0
9000fe38:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000fe3a:	0000      	.short	0x0000
9000fe3c:	e000ed08 	.word	0xe000ed08

9000fe40 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000fe40:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000fe50 <vPortEnableVFP+0x10>
9000fe44:	6801      	ldr	r1, [r0, #0]
9000fe46:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000fe4a:	6001      	str	r1, [r0, #0]
9000fe4c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000fe4e:	0000      	.short	0x0000
9000fe50:	e000ed88 	.word	0xe000ed88

9000fe54 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000fe54:	4b0e      	ldr	r3, [pc, #56]	@ (9000fe90 <prvTaskExitError+0x3c>)
{
9000fe56:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000fe58:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000fe5a:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000fe5c:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000fe5e:	3301      	adds	r3, #1
9000fe60:	d008      	beq.n	9000fe74 <prvTaskExitError+0x20>
9000fe62:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe66:	f383 8811 	msr	BASEPRI, r3
9000fe6a:	f3bf 8f6f 	isb	sy
9000fe6e:	f3bf 8f4f 	dsb	sy
9000fe72:	e7fe      	b.n	9000fe72 <prvTaskExitError+0x1e>
9000fe74:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe78:	f383 8811 	msr	BASEPRI, r3
9000fe7c:	f3bf 8f6f 	isb	sy
9000fe80:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000fe84:	9b01      	ldr	r3, [sp, #4]
9000fe86:	2b00      	cmp	r3, #0
9000fe88:	d0fc      	beq.n	9000fe84 <prvTaskExitError+0x30>
}
9000fe8a:	b002      	add	sp, #8
9000fe8c:	4770      	bx	lr
9000fe8e:	bf00      	nop
9000fe90:	24000140 	.word	0x24000140

9000fe94 <pxPortInitialiseStack>:
{
9000fe94:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000fe96:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000fe9a:	4809      	ldr	r0, [pc, #36]	@ (9000fec0 <pxPortInitialiseStack+0x2c>)
{
9000fe9c:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000fe9e:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000fea2:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000fea6:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000feaa:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000feae:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000feb2:	f06f 0102 	mvn.w	r1, #2
}
9000feb6:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000feba:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000febe:	4770      	bx	lr
9000fec0:	9000fe55 	.word	0x9000fe55
	...

9000fed0 <SVC_Handler>:
	__asm volatile (
9000fed0:	4b07      	ldr	r3, [pc, #28]	@ (9000fef0 <pxCurrentTCBConst2>)
9000fed2:	6819      	ldr	r1, [r3, #0]
9000fed4:	6808      	ldr	r0, [r1, #0]
9000fed6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000feda:	f380 8809 	msr	PSP, r0
9000fede:	f3bf 8f6f 	isb	sy
9000fee2:	f04f 0000 	mov.w	r0, #0
9000fee6:	f380 8811 	msr	BASEPRI, r0
9000feea:	4770      	bx	lr
9000feec:	f3af 8000 	nop.w

9000fef0 <pxCurrentTCBConst2>:
9000fef0:	24024460 	.word	0x24024460

9000fef4 <vPortEnterCritical>:
9000fef4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fef8:	f383 8811 	msr	BASEPRI, r3
9000fefc:	f3bf 8f6f 	isb	sy
9000ff00:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000ff04:	4a0b      	ldr	r2, [pc, #44]	@ (9000ff34 <vPortEnterCritical+0x40>)
9000ff06:	6813      	ldr	r3, [r2, #0]
9000ff08:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000ff0a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000ff0c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000ff0e:	d000      	beq.n	9000ff12 <vPortEnterCritical+0x1e>
}
9000ff10:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000ff12:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ff16:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000ff1a:	b2db      	uxtb	r3, r3
9000ff1c:	2b00      	cmp	r3, #0
9000ff1e:	d0f7      	beq.n	9000ff10 <vPortEnterCritical+0x1c>
9000ff20:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff24:	f383 8811 	msr	BASEPRI, r3
9000ff28:	f3bf 8f6f 	isb	sy
9000ff2c:	f3bf 8f4f 	dsb	sy
9000ff30:	e7fe      	b.n	9000ff30 <vPortEnterCritical+0x3c>
9000ff32:	bf00      	nop
9000ff34:	24000140 	.word	0x24000140

9000ff38 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000ff38:	4a08      	ldr	r2, [pc, #32]	@ (9000ff5c <vPortExitCritical+0x24>)
9000ff3a:	6813      	ldr	r3, [r2, #0]
9000ff3c:	b943      	cbnz	r3, 9000ff50 <vPortExitCritical+0x18>
9000ff3e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff42:	f383 8811 	msr	BASEPRI, r3
9000ff46:	f3bf 8f6f 	isb	sy
9000ff4a:	f3bf 8f4f 	dsb	sy
9000ff4e:	e7fe      	b.n	9000ff4e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000ff50:	3b01      	subs	r3, #1
9000ff52:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000ff54:	b90b      	cbnz	r3, 9000ff5a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000ff56:	f383 8811 	msr	BASEPRI, r3
}
9000ff5a:	4770      	bx	lr
9000ff5c:	24000140 	.word	0x24000140

9000ff60 <PendSV_Handler>:
	__asm volatile
9000ff60:	f3ef 8009 	mrs	r0, PSP
9000ff64:	f3bf 8f6f 	isb	sy
9000ff68:	4b15      	ldr	r3, [pc, #84]	@ (9000ffc0 <pxCurrentTCBConst>)
9000ff6a:	681a      	ldr	r2, [r3, #0]
9000ff6c:	f01e 0f10 	tst.w	lr, #16
9000ff70:	bf08      	it	eq
9000ff72:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000ff76:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ff7a:	6010      	str	r0, [r2, #0]
9000ff7c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000ff80:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000ff84:	f380 8811 	msr	BASEPRI, r0
9000ff88:	f3bf 8f4f 	dsb	sy
9000ff8c:	f3bf 8f6f 	isb	sy
9000ff90:	f001 fda8 	bl	90011ae4 <vTaskSwitchContext>
9000ff94:	f04f 0000 	mov.w	r0, #0
9000ff98:	f380 8811 	msr	BASEPRI, r0
9000ff9c:	bc09      	pop	{r0, r3}
9000ff9e:	6819      	ldr	r1, [r3, #0]
9000ffa0:	6808      	ldr	r0, [r1, #0]
9000ffa2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ffa6:	f01e 0f10 	tst.w	lr, #16
9000ffaa:	bf08      	it	eq
9000ffac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000ffb0:	f380 8809 	msr	PSP, r0
9000ffb4:	f3bf 8f6f 	isb	sy
9000ffb8:	4770      	bx	lr
9000ffba:	bf00      	nop
9000ffbc:	f3af 8000 	nop.w

9000ffc0 <pxCurrentTCBConst>:
9000ffc0:	24024460 	.word	0x24024460

9000ffc4 <xPortSysTickHandler>:
{
9000ffc4:	b508      	push	{r3, lr}
	__asm volatile
9000ffc6:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ffca:	f383 8811 	msr	BASEPRI, r3
9000ffce:	f3bf 8f6f 	isb	sy
9000ffd2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000ffd6:	f001 fd5f 	bl	90011a98 <xTaskIncrementTick>
9000ffda:	b128      	cbz	r0, 9000ffe8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000ffdc:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ffe0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ffe4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000ffe8:	2300      	movs	r3, #0
9000ffea:	f383 8811 	msr	BASEPRI, r3
}
9000ffee:	bd08      	pop	{r3, pc}

9000fff0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000fff0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000fff4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000fff6:	4806      	ldr	r0, [pc, #24]	@ (90010010 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000fff8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000fffa:	4906      	ldr	r1, [pc, #24]	@ (90010014 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000fffc:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000fffe:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
90010000:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
90010002:	fba1 1303 	umull	r1, r3, r1, r3
90010006:	099b      	lsrs	r3, r3, #6
90010008:	3b01      	subs	r3, #1
9001000a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9001000c:	6110      	str	r0, [r2, #16]
}
9001000e:	4770      	bx	lr
90010010:	24000134 	.word	0x24000134
90010014:	10624dd3 	.word	0x10624dd3

90010018 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
90010018:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001001c:	4a48      	ldr	r2, [pc, #288]	@ (90010140 <xPortStartScheduler+0x128>)
9001001e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
90010022:	4291      	cmp	r1, r2
90010024:	d041      	beq.n	900100aa <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
90010026:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9001002a:	4b46      	ldr	r3, [pc, #280]	@ (90010144 <xPortStartScheduler+0x12c>)
9001002c:	429a      	cmp	r2, r3
9001002e:	d033      	beq.n	90010098 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90010030:	4b45      	ldr	r3, [pc, #276]	@ (90010148 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90010032:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90010036:	4845      	ldr	r0, [pc, #276]	@ (9001014c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010038:	4945      	ldr	r1, [pc, #276]	@ (90010150 <xPortStartScheduler+0x138>)
{
9001003a:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9001003c:	781a      	ldrb	r2, [r3, #0]
{
9001003e:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90010040:	b2d2      	uxtb	r2, r2
90010042:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90010044:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90010046:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001004a:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9001004c:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001004e:	b2db      	uxtb	r3, r3
90010050:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010054:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010058:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9001005c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010060:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010062:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010064:	d50f      	bpl.n	90010086 <xPortStartScheduler+0x6e>
90010066:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90010068:	f89d 3007 	ldrb.w	r3, [sp, #7]
9001006c:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001006e:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90010070:	005b      	lsls	r3, r3, #1
90010072:	b2db      	uxtb	r3, r3
90010074:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010078:	f89d 3007 	ldrb.w	r3, [sp, #7]
9001007c:	061b      	lsls	r3, r3, #24
9001007e:	d4f3      	bmi.n	90010068 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
90010080:	2903      	cmp	r1, #3
90010082:	d01b      	beq.n	900100bc <xPortStartScheduler+0xa4>
90010084:	6001      	str	r1, [r0, #0]
	__asm volatile
90010086:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001008a:	f383 8811 	msr	BASEPRI, r3
9001008e:	f3bf 8f6f 	isb	sy
90010092:	f3bf 8f4f 	dsb	sy
90010096:	e7fe      	b.n	90010096 <xPortStartScheduler+0x7e>
90010098:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001009c:	f383 8811 	msr	BASEPRI, r3
900100a0:	f3bf 8f6f 	isb	sy
900100a4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
900100a8:	e7fe      	b.n	900100a8 <xPortStartScheduler+0x90>
900100aa:	f04f 0350 	mov.w	r3, #80	@ 0x50
900100ae:	f383 8811 	msr	BASEPRI, r3
900100b2:	f3bf 8f6f 	isb	sy
900100b6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
900100ba:	e7fe      	b.n	900100ba <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900100bc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
900100be:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900100c2:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900100c6:	4a20      	ldr	r2, [pc, #128]	@ (90010148 <xPortStartScheduler+0x130>)
900100c8:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
900100ca:	4e22      	ldr	r6, [pc, #136]	@ (90010154 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
900100cc:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
900100ce:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
900100d0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
900100d2:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
900100d6:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
900100da:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
900100de:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
900100e2:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
900100e6:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
900100ea:	f7ff ff81 	bl	9000fff0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
900100ee:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
900100f0:	f7ff fea6 	bl	9000fe40 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
900100f4:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
900100f8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
900100fc:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
90010100:	f7ff fe8a 	bl	9000fe18 <prvPortStartFirstTask>
	vTaskSwitchContext();
90010104:	f001 fcee 	bl	90011ae4 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
90010108:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9001010a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9001010c:	3301      	adds	r3, #1
9001010e:	d008      	beq.n	90010122 <xPortStartScheduler+0x10a>
90010110:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010114:	f383 8811 	msr	BASEPRI, r3
90010118:	f3bf 8f6f 	isb	sy
9001011c:	f3bf 8f4f 	dsb	sy
90010120:	e7fe      	b.n	90010120 <xPortStartScheduler+0x108>
90010122:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010126:	f383 8811 	msr	BASEPRI, r3
9001012a:	f3bf 8f6f 	isb	sy
9001012e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
90010132:	9b03      	ldr	r3, [sp, #12]
90010134:	2b00      	cmp	r3, #0
90010136:	d0fc      	beq.n	90010132 <xPortStartScheduler+0x11a>
}
90010138:	2000      	movs	r0, #0
9001013a:	b004      	add	sp, #16
9001013c:	bd70      	pop	{r4, r5, r6, pc}
9001013e:	bf00      	nop
90010140:	410fc271 	.word	0x410fc271
90010144:	410fc270 	.word	0x410fc270
90010148:	e000e400 	.word	0xe000e400
9001014c:	24023f20 	.word	0x24023f20
90010150:	24023f24 	.word	0x24023f24
90010154:	24000140 	.word	0x24000140

90010158 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
90010158:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9001015c:	2b0f      	cmp	r3, #15
9001015e:	d90e      	bls.n	9001017e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010160:	4911      	ldr	r1, [pc, #68]	@ (900101a8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010162:	4a12      	ldr	r2, [pc, #72]	@ (900101ac <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010164:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010166:	7812      	ldrb	r2, [r2, #0]
90010168:	429a      	cmp	r2, r3
9001016a:	d908      	bls.n	9001017e <vPortValidateInterruptPriority+0x26>
9001016c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010170:	f383 8811 	msr	BASEPRI, r3
90010174:	f3bf 8f6f 	isb	sy
90010178:	f3bf 8f4f 	dsb	sy
9001017c:	e7fe      	b.n	9001017c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9001017e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010182:	4a0b      	ldr	r2, [pc, #44]	@ (900101b0 <vPortValidateInterruptPriority+0x58>)
90010184:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
90010188:	6812      	ldr	r2, [r2, #0]
9001018a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9001018e:	4293      	cmp	r3, r2
90010190:	d908      	bls.n	900101a4 <vPortValidateInterruptPriority+0x4c>
90010192:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010196:	f383 8811 	msr	BASEPRI, r3
9001019a:	f3bf 8f6f 	isb	sy
9001019e:	f3bf 8f4f 	dsb	sy
900101a2:	e7fe      	b.n	900101a2 <vPortValidateInterruptPriority+0x4a>
	}
900101a4:	4770      	bx	lr
900101a6:	bf00      	nop
900101a8:	e000e3f0 	.word	0xe000e3f0
900101ac:	24023f24 	.word	0x24023f24
900101b0:	24023f20 	.word	0x24023f20

900101b4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
900101b4:	b570      	push	{r4, r5, r6, lr}
900101b6:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900101b8:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
900101ba:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900101bc:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
900101be:	b92a      	cbnz	r2, 900101cc <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900101c0:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101c2:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
900101c4:	b34e      	cbz	r6, 9001021a <prvCopyDataToQueue+0x66>
BaseType_t xReturn = pdFALSE;
900101c6:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101c8:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
900101ca:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
900101cc:	b97e      	cbnz	r6, 900101ee <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
900101ce:	6840      	ldr	r0, [r0, #4]
900101d0:	f01c fbd7 	bl	9002c982 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900101d4:	6863      	ldr	r3, [r4, #4]
900101d6:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900101d8:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900101da:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900101dc:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
900101de:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
900101e0:	bf24      	itt	cs
900101e2:	6823      	ldrcs	r3, [r4, #0]
900101e4:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101e6:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
900101e8:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101ea:	63a5      	str	r5, [r4, #56]	@ 0x38
}
900101ec:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
900101ee:	68c0      	ldr	r0, [r0, #12]
900101f0:	f01c fbc7 	bl	9002c982 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
900101f4:	6c22      	ldr	r2, [r4, #64]	@ 0x40
900101f6:	68e3      	ldr	r3, [r4, #12]
900101f8:	4251      	negs	r1, r2
900101fa:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900101fc:	6822      	ldr	r2, [r4, #0]
900101fe:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
90010200:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90010202:	d202      	bcs.n	9001020a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
90010204:	68a3      	ldr	r3, [r4, #8]
90010206:	440b      	add	r3, r1
90010208:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9001020a:	2e02      	cmp	r6, #2
9001020c:	d1eb      	bne.n	900101e6 <prvCopyDataToQueue+0x32>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9001020e:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
90010210:	f04f 0000 	mov.w	r0, #0
90010214:	bf38      	it	cc
90010216:	2501      	movcc	r5, #1
90010218:	e7d6      	b.n	900101c8 <prvCopyDataToQueue+0x14>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9001021a:	6880      	ldr	r0, [r0, #8]
9001021c:	f001 fe34 	bl	90011e88 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
90010220:	60a6      	str	r6, [r4, #8]
90010222:	e7d1      	b.n	900101c8 <prvCopyDataToQueue+0x14>

90010224 <xQueueGenericCreateStatic>:
	{
90010224:	b530      	push	{r4, r5, lr}
90010226:	b083      	sub	sp, #12
90010228:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9001022c:	b940      	cbnz	r0, 90010240 <xQueueGenericCreateStatic+0x1c>
9001022e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010232:	f383 8811 	msr	BASEPRI, r3
90010236:	f3bf 8f6f 	isb	sy
9001023a:	f3bf 8f4f 	dsb	sy
9001023e:	e7fe      	b.n	9001023e <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
90010240:	461c      	mov	r4, r3
90010242:	b153      	cbz	r3, 9001025a <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
90010244:	b30a      	cbz	r2, 9001028a <xQueueGenericCreateStatic+0x66>
90010246:	b989      	cbnz	r1, 9001026c <xQueueGenericCreateStatic+0x48>
90010248:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001024c:	f383 8811 	msr	BASEPRI, r3
90010250:	f3bf 8f6f 	isb	sy
90010254:	f3bf 8f4f 	dsb	sy
90010258:	e7fe      	b.n	90010258 <xQueueGenericCreateStatic+0x34>
9001025a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001025e:	f383 8811 	msr	BASEPRI, r3
90010262:	f3bf 8f6f 	isb	sy
90010266:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9001026a:	e7fe      	b.n	9001026a <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9001026c:	b16a      	cbz	r2, 9001028a <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9001026e:	2350      	movs	r3, #80	@ 0x50
90010270:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90010272:	9b01      	ldr	r3, [sp, #4]
90010274:	2b50      	cmp	r3, #80	@ 0x50
90010276:	d013      	beq.n	900102a0 <xQueueGenericCreateStatic+0x7c>
90010278:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001027c:	f383 8811 	msr	BASEPRI, r3
90010280:	f3bf 8f6f 	isb	sy
90010284:	f3bf 8f4f 	dsb	sy
90010288:	e7fe      	b.n	90010288 <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9001028a:	2900      	cmp	r1, #0
9001028c:	d0ef      	beq.n	9001026e <xQueueGenericCreateStatic+0x4a>
9001028e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010292:	f383 8811 	msr	BASEPRI, r3
90010296:	f3bf 8f6f 	isb	sy
9001029a:	f3bf 8f4f 	dsb	sy
9001029e:	e7fe      	b.n	9001029e <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900102a0:	2900      	cmp	r1, #0
900102a2:	bf08      	it	eq
900102a4:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
900102a6:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900102a8:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
900102aa:	63e0      	str	r0, [r4, #60]	@ 0x3c
900102ac:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
900102ae:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900102b0:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
900102b4:	f7ff fe1e 	bl	9000fef4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102b8:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900102ba:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
900102be:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102c0:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
900102c4:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102c8:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102ca:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102cc:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102ce:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900102d0:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
900102d2:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102d4:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900102d6:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
900102d8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900102dc:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900102e0:	f7ff fd50 	bl	9000fd84 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900102e4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900102e8:	f7ff fd4c 	bl	9000fd84 <vListInitialise>
	taskEXIT_CRITICAL();
900102ec:	f7ff fe24 	bl	9000ff38 <vPortExitCritical>
	}
900102f0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
900102f2:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
900102f6:	b003      	add	sp, #12
900102f8:	bd30      	pop	{r4, r5, pc}
900102fa:	bf00      	nop

900102fc <xQueueGenericCreate>:
	{
900102fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
900102fe:	b940      	cbnz	r0, 90010312 <xQueueGenericCreate+0x16>
90010300:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010304:	f383 8811 	msr	BASEPRI, r3
90010308:	f3bf 8f6f 	isb	sy
9001030c:	f3bf 8f4f 	dsb	sy
90010310:	e7fe      	b.n	90010310 <xQueueGenericCreate+0x14>
90010312:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90010314:	fb01 f000 	mul.w	r0, r1, r0
90010318:	460e      	mov	r6, r1
9001031a:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9001031c:	3050      	adds	r0, #80	@ 0x50
9001031e:	f7ff fc0f 	bl	9000fb40 <pvPortMalloc>
		if( pxNewQueue != NULL )
90010322:	4604      	mov	r4, r0
90010324:	b340      	cbz	r0, 90010378 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010326:	2300      	movs	r3, #0
90010328:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9001032c:	b336      	cbz	r6, 9001037c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001032e:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
90010332:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
90010334:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
90010338:	f7ff fddc 	bl	9000fef4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001033c:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9001033e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010342:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010344:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
90010348:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001034c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001034e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010350:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010352:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010354:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
90010356:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010358:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001035a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9001035c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010360:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010364:	f7ff fd0e 	bl	9000fd84 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010368:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9001036c:	f7ff fd0a 	bl	9000fd84 <vListInitialise>
	taskEXIT_CRITICAL();
90010370:	f7ff fde2 	bl	9000ff38 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010374:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
90010378:	4620      	mov	r0, r4
9001037a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9001037c:	4603      	mov	r3, r0
9001037e:	e7d8      	b.n	90010332 <xQueueGenericCreate+0x36>

90010380 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
90010380:	b940      	cbnz	r0, 90010394 <xQueueCreateCountingSemaphoreStatic+0x14>
90010382:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010386:	f383 8811 	msr	BASEPRI, r3
9001038a:	f3bf 8f6f 	isb	sy
9001038e:	f3bf 8f4f 	dsb	sy
90010392:	e7fe      	b.n	90010392 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
90010394:	4288      	cmp	r0, r1
90010396:	d208      	bcs.n	900103aa <xQueueCreateCountingSemaphoreStatic+0x2a>
90010398:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001039c:	f383 8811 	msr	BASEPRI, r3
900103a0:	f3bf 8f6f 	isb	sy
900103a4:	f3bf 8f4f 	dsb	sy
900103a8:	e7fe      	b.n	900103a8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
900103aa:	b530      	push	{r4, r5, lr}
900103ac:	4614      	mov	r4, r2
900103ae:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
900103b0:	2a00      	cmp	r2, #0
900103b2:	d03b      	beq.n	9001042c <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
900103b4:	2350      	movs	r3, #80	@ 0x50
900103b6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
900103b8:	9b03      	ldr	r3, [sp, #12]
900103ba:	2b50      	cmp	r3, #80	@ 0x50
900103bc:	d008      	beq.n	900103d0 <xQueueCreateCountingSemaphoreStatic+0x50>
900103be:	f04f 0350 	mov.w	r3, #80	@ 0x50
900103c2:	f383 8811 	msr	BASEPRI, r3
900103c6:	f3bf 8f6f 	isb	sy
900103ca:	f3bf 8f4f 	dsb	sy
900103ce:	e7fe      	b.n	900103ce <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
900103d0:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900103d2:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
900103d4:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
900103d6:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
900103d8:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
900103dc:	6415      	str	r5, [r2, #64]	@ 0x40
900103de:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
900103e0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
900103e2:	f7ff fd87 	bl	9000fef4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103e6:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900103e8:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
900103ea:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103ec:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
900103f0:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103f4:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103f6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103f8:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103fa:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900103fc:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900103fe:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010402:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
90010404:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010408:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9001040c:	f7ff fcba 	bl	9000fd84 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010410:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010414:	f7ff fcb6 	bl	9000fd84 <vListInitialise>
	taskEXIT_CRITICAL();
90010418:	f7ff fd8e 	bl	9000ff38 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9001041c:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9001041e:	9901      	ldr	r1, [sp, #4]
	}
90010420:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
90010422:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90010426:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
90010428:	b005      	add	sp, #20
9001042a:	bd30      	pop	{r4, r5, pc}
9001042c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010430:	f383 8811 	msr	BASEPRI, r3
90010434:	f3bf 8f6f 	isb	sy
90010438:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9001043c:	e7fe      	b.n	9001043c <xQueueCreateCountingSemaphoreStatic+0xbc>
9001043e:	bf00      	nop

90010440 <xQueueCreateCountingSemaphore>:
	{
90010440:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
90010442:	b940      	cbnz	r0, 90010456 <xQueueCreateCountingSemaphore+0x16>
90010444:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010448:	f383 8811 	msr	BASEPRI, r3
9001044c:	f3bf 8f6f 	isb	sy
90010450:	f3bf 8f4f 	dsb	sy
90010454:	e7fe      	b.n	90010454 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
90010456:	4288      	cmp	r0, r1
90010458:	4604      	mov	r4, r0
9001045a:	460e      	mov	r6, r1
9001045c:	d208      	bcs.n	90010470 <xQueueCreateCountingSemaphore+0x30>
9001045e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010462:	f383 8811 	msr	BASEPRI, r3
90010466:	f3bf 8f6f 	isb	sy
9001046a:	f3bf 8f4f 	dsb	sy
9001046e:	e7fe      	b.n	9001046e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010470:	2050      	movs	r0, #80	@ 0x50
90010472:	f7ff fb65 	bl	9000fb40 <pvPortMalloc>
		if( pxNewQueue != NULL )
90010476:	4605      	mov	r5, r0
90010478:	b330      	cbz	r0, 900104c8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9001047a:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9001047c:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9001047e:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010480:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90010484:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
90010486:	f7ff fd35 	bl	9000fef4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001048a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001048c:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9001048e:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010492:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010494:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
90010498:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001049c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001049e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104a0:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104a2:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900104a4:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900104a6:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
900104a8:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900104ac:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900104b0:	f7ff fc68 	bl	9000fd84 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900104b4:	f105 0024 	add.w	r0, r5, #36	@ 0x24
900104b8:	f7ff fc64 	bl	9000fd84 <vListInitialise>
	taskEXIT_CRITICAL();
900104bc:	f7ff fd3c 	bl	9000ff38 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
900104c0:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900104c2:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
900104c4:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
900104c8:	4628      	mov	r0, r5
900104ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900104cc <xQueueGenericSend>:
{
900104cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900104d0:	b084      	sub	sp, #16
900104d2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
900104d4:	2800      	cmp	r0, #0
900104d6:	f000 8103 	beq.w	900106e0 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900104da:	4688      	mov	r8, r1
900104dc:	4604      	mov	r4, r0
900104de:	461f      	mov	r7, r3
900104e0:	2900      	cmp	r1, #0
900104e2:	f000 8097 	beq.w	90010614 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
900104e6:	2f02      	cmp	r7, #2
900104e8:	d10b      	bne.n	90010502 <xQueueGenericSend+0x36>
900104ea:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900104ec:	2b01      	cmp	r3, #1
900104ee:	d008      	beq.n	90010502 <xQueueGenericSend+0x36>
900104f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900104f4:	f383 8811 	msr	BASEPRI, r3
900104f8:	f3bf 8f6f 	isb	sy
900104fc:	f3bf 8f4f 	dsb	sy
90010500:	e7fe      	b.n	90010500 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010502:	f001 fc71 	bl	90011de8 <xTaskGetSchedulerState>
90010506:	2800      	cmp	r0, #0
90010508:	f000 80f3 	beq.w	900106f2 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9001050c:	f1a7 0902 	sub.w	r9, r7, #2
90010510:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010512:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010516:	fab9 f989 	clz	r9, r9
9001051a:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9001051e:	f7ff fce9 	bl	9000fef4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010522:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90010524:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010526:	429a      	cmp	r2, r3
90010528:	f0c0 80f0 	bcc.w	9001070c <xQueueGenericSend+0x240>
9001052c:	f1b9 0f00 	cmp.w	r9, #0
90010530:	f040 80ec 	bne.w	9001070c <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
90010534:	9b01      	ldr	r3, [sp, #4]
90010536:	2b00      	cmp	r3, #0
90010538:	f000 8101 	beq.w	9001073e <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9001053c:	2d00      	cmp	r5, #0
9001053e:	f000 80cb 	beq.w	900106d8 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
90010542:	f7ff fcf9 	bl	9000ff38 <vPortExitCritical>
		vTaskSuspendAll();
90010546:	f001 fa89 	bl	90011a5c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9001054a:	f7ff fcd3 	bl	9000fef4 <vPortEnterCritical>
9001054e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010552:	2bff      	cmp	r3, #255	@ 0xff
90010554:	d102      	bne.n	9001055c <xQueueGenericSend+0x90>
90010556:	2300      	movs	r3, #0
90010558:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9001055c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010560:	2bff      	cmp	r3, #255	@ 0xff
90010562:	d102      	bne.n	9001056a <xQueueGenericSend+0x9e>
90010564:	2300      	movs	r3, #0
90010566:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9001056a:	f7ff fce5 	bl	9000ff38 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9001056e:	a901      	add	r1, sp, #4
90010570:	a802      	add	r0, sp, #8
90010572:	f001 fbf1 	bl	90011d58 <xTaskCheckForTimeOut>
90010576:	2800      	cmp	r0, #0
90010578:	f040 80e5 	bne.w	90010746 <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9001057c:	f7ff fcba 	bl	9000fef4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
90010580:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90010582:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010584:	429a      	cmp	r2, r3
90010586:	d052      	beq.n	9001062e <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
90010588:	f7ff fcd6 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
9001058c:	f7ff fcb2 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010590:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
90010594:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010596:	2d00      	cmp	r5, #0
90010598:	dc04      	bgt.n	900105a4 <xQueueGenericSend+0xd8>
9001059a:	e011      	b.n	900105c0 <xQueueGenericSend+0xf4>
			--cTxLock;
9001059c:	1e6a      	subs	r2, r5, #1
9001059e:	b2d3      	uxtb	r3, r2
900105a0:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900105a2:	b16b      	cbz	r3, 900105c0 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900105a4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900105a6:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900105a8:	b153      	cbz	r3, 900105c0 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900105aa:	f001 fb83 	bl	90011cb4 <xTaskRemoveFromEventList>
900105ae:	2800      	cmp	r0, #0
900105b0:	d0f4      	beq.n	9001059c <xQueueGenericSend+0xd0>
						vTaskMissedYield();
900105b2:	f001 fc13 	bl	90011ddc <vTaskMissedYield>
			--cTxLock;
900105b6:	1e6a      	subs	r2, r5, #1
900105b8:	b2d3      	uxtb	r3, r2
900105ba:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
900105bc:	2b00      	cmp	r3, #0
900105be:	d1f1      	bne.n	900105a4 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
900105c0:	23ff      	movs	r3, #255	@ 0xff
900105c2:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900105c6:	f7ff fcb7 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
900105ca:	f7ff fc93 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900105ce:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
900105d2:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
900105d4:	2d00      	cmp	r5, #0
900105d6:	dd14      	ble.n	90010602 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900105d8:	f104 0a10 	add.w	sl, r4, #16
900105dc:	e003      	b.n	900105e6 <xQueueGenericSend+0x11a>
				--cRxLock;
900105de:	1e6a      	subs	r2, r5, #1
900105e0:	b2d3      	uxtb	r3, r2
900105e2:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
900105e4:	b16b      	cbz	r3, 90010602 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900105e6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900105e8:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900105ea:	b153      	cbz	r3, 90010602 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900105ec:	f001 fb62 	bl	90011cb4 <xTaskRemoveFromEventList>
900105f0:	2800      	cmp	r0, #0
900105f2:	d0f4      	beq.n	900105de <xQueueGenericSend+0x112>
					vTaskMissedYield();
900105f4:	f001 fbf2 	bl	90011ddc <vTaskMissedYield>
				--cRxLock;
900105f8:	1e6a      	subs	r2, r5, #1
900105fa:	b2d3      	uxtb	r3, r2
900105fc:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
900105fe:	2b00      	cmp	r3, #0
90010600:	d1f1      	bne.n	900105e6 <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
90010602:	23ff      	movs	r3, #255	@ 0xff
90010604:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010608:	f7ff fc96 	bl	9000ff38 <vPortExitCritical>
				( void ) xTaskResumeAll();
9001060c:	f001 fa2e 	bl	90011a6c <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010610:	2501      	movs	r5, #1
90010612:	e784      	b.n	9001051e <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010614:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010616:	2b00      	cmp	r3, #0
90010618:	f43f af65 	beq.w	900104e6 <xQueueGenericSend+0x1a>
9001061c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010620:	f383 8811 	msr	BASEPRI, r3
90010624:	f3bf 8f6f 	isb	sy
90010628:	f3bf 8f4f 	dsb	sy
9001062c:	e7fe      	b.n	9001062c <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9001062e:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
90010632:	f7ff fc81 	bl	9000ff38 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
90010636:	9901      	ldr	r1, [sp, #4]
90010638:	4650      	mov	r0, sl
9001063a:	f001 faad 	bl	90011b98 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9001063e:	f7ff fc59 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010642:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010646:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010648:	2d00      	cmp	r5, #0
9001064a:	dc04      	bgt.n	90010656 <xQueueGenericSend+0x18a>
9001064c:	e011      	b.n	90010672 <xQueueGenericSend+0x1a6>
			--cTxLock;
9001064e:	1e6b      	subs	r3, r5, #1
90010650:	b2da      	uxtb	r2, r3
90010652:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010654:	b16a      	cbz	r2, 90010672 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010656:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010658:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001065a:	b153      	cbz	r3, 90010672 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001065c:	f001 fb2a 	bl	90011cb4 <xTaskRemoveFromEventList>
90010660:	2800      	cmp	r0, #0
90010662:	d0f4      	beq.n	9001064e <xQueueGenericSend+0x182>
						vTaskMissedYield();
90010664:	f001 fbba 	bl	90011ddc <vTaskMissedYield>
			--cTxLock;
90010668:	1e6b      	subs	r3, r5, #1
9001066a:	b2da      	uxtb	r2, r3
9001066c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001066e:	2a00      	cmp	r2, #0
90010670:	d1f1      	bne.n	90010656 <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
90010672:	23ff      	movs	r3, #255	@ 0xff
90010674:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010678:	f7ff fc5e 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
9001067c:	f7ff fc3a 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010680:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010684:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010686:	2d00      	cmp	r5, #0
90010688:	dc04      	bgt.n	90010694 <xQueueGenericSend+0x1c8>
9001068a:	e011      	b.n	900106b0 <xQueueGenericSend+0x1e4>
				--cRxLock;
9001068c:	1e6b      	subs	r3, r5, #1
9001068e:	b2da      	uxtb	r2, r3
90010690:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010692:	b16a      	cbz	r2, 900106b0 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010694:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010696:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010698:	b153      	cbz	r3, 900106b0 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001069a:	f001 fb0b 	bl	90011cb4 <xTaskRemoveFromEventList>
9001069e:	2800      	cmp	r0, #0
900106a0:	d0f4      	beq.n	9001068c <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
900106a2:	f001 fb9b 	bl	90011ddc <vTaskMissedYield>
				--cRxLock;
900106a6:	1e6b      	subs	r3, r5, #1
900106a8:	b2da      	uxtb	r2, r3
900106aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900106ac:	2a00      	cmp	r2, #0
900106ae:	d1f1      	bne.n	90010694 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
900106b0:	23ff      	movs	r3, #255	@ 0xff
900106b2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
900106b6:	f7ff fc3f 	bl	9000ff38 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
900106ba:	f001 f9d7 	bl	90011a6c <xTaskResumeAll>
900106be:	2800      	cmp	r0, #0
900106c0:	d1a6      	bne.n	90010610 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
900106c2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900106c6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900106ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900106ce:	f3bf 8f4f 	dsb	sy
900106d2:	f3bf 8f6f 	isb	sy
900106d6:	e79b      	b.n	90010610 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
900106d8:	a802      	add	r0, sp, #8
900106da:	f001 fb31 	bl	90011d40 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
900106de:	e730      	b.n	90010542 <xQueueGenericSend+0x76>
900106e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900106e4:	f383 8811 	msr	BASEPRI, r3
900106e8:	f3bf 8f6f 	isb	sy
900106ec:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900106f0:	e7fe      	b.n	900106f0 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900106f2:	9b01      	ldr	r3, [sp, #4]
900106f4:	2b00      	cmp	r3, #0
900106f6:	f43f af09 	beq.w	9001050c <xQueueGenericSend+0x40>
900106fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
900106fe:	f383 8811 	msr	BASEPRI, r3
90010702:	f3bf 8f6f 	isb	sy
90010706:	f3bf 8f4f 	dsb	sy
9001070a:	e7fe      	b.n	9001070a <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9001070c:	463a      	mov	r2, r7
9001070e:	4641      	mov	r1, r8
90010710:	4620      	mov	r0, r4
90010712:	f7ff fd4f 	bl	900101b4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010716:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90010718:	2b00      	cmp	r3, #0
9001071a:	d151      	bne.n	900107c0 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9001071c:	b148      	cbz	r0, 90010732 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9001071e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010722:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010726:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001072a:	f3bf 8f4f 	dsb	sy
9001072e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
90010732:	f7ff fc01 	bl	9000ff38 <vPortExitCritical>
				return pdPASS;
90010736:	2001      	movs	r0, #1
}
90010738:	b004      	add	sp, #16
9001073a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9001073e:	f7ff fbfb 	bl	9000ff38 <vPortExitCritical>
					return errQUEUE_FULL;
90010742:	2000      	movs	r0, #0
90010744:	e7f8      	b.n	90010738 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
90010746:	f7ff fbd5 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001074a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9001074e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010750:	2d00      	cmp	r5, #0
90010752:	dd10      	ble.n	90010776 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010754:	f104 0624 	add.w	r6, r4, #36	@ 0x24
90010758:	e003      	b.n	90010762 <xQueueGenericSend+0x296>
			--cTxLock;
9001075a:	1e6b      	subs	r3, r5, #1
9001075c:	b2da      	uxtb	r2, r3
9001075e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010760:	b14a      	cbz	r2, 90010776 <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010762:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010764:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010766:	b133      	cbz	r3, 90010776 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010768:	f001 faa4 	bl	90011cb4 <xTaskRemoveFromEventList>
9001076c:	2800      	cmp	r0, #0
9001076e:	d0f4      	beq.n	9001075a <xQueueGenericSend+0x28e>
						vTaskMissedYield();
90010770:	f001 fb34 	bl	90011ddc <vTaskMissedYield>
90010774:	e7f1      	b.n	9001075a <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
90010776:	23ff      	movs	r3, #255	@ 0xff
90010778:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001077c:	f7ff fbdc 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
90010780:	f7ff fbb8 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010784:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010788:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001078a:	2d00      	cmp	r5, #0
9001078c:	dd10      	ble.n	900107b0 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001078e:	f104 0610 	add.w	r6, r4, #16
90010792:	e003      	b.n	9001079c <xQueueGenericSend+0x2d0>
				--cRxLock;
90010794:	1e6b      	subs	r3, r5, #1
90010796:	b2da      	uxtb	r2, r3
90010798:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001079a:	b14a      	cbz	r2, 900107b0 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001079c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001079e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900107a0:	b133      	cbz	r3, 900107b0 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900107a2:	f001 fa87 	bl	90011cb4 <xTaskRemoveFromEventList>
900107a6:	2800      	cmp	r0, #0
900107a8:	d0f4      	beq.n	90010794 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
900107aa:	f001 fb17 	bl	90011ddc <vTaskMissedYield>
900107ae:	e7f1      	b.n	90010794 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
900107b0:	23ff      	movs	r3, #255	@ 0xff
900107b2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
900107b6:	f7ff fbbf 	bl	9000ff38 <vPortExitCritical>
			( void ) xTaskResumeAll();
900107ba:	f001 f957 	bl	90011a6c <xTaskResumeAll>
			return errQUEUE_FULL;
900107be:	e7c0      	b.n	90010742 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900107c0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900107c4:	f001 fa76 	bl	90011cb4 <xTaskRemoveFromEventList>
900107c8:	2800      	cmp	r0, #0
900107ca:	d0b2      	beq.n	90010732 <xQueueGenericSend+0x266>
900107cc:	e7a7      	b.n	9001071e <xQueueGenericSend+0x252>
900107ce:	bf00      	nop

900107d0 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
900107d0:	2800      	cmp	r0, #0
900107d2:	d04b      	beq.n	9001086c <xQueueGenericSendFromISR+0x9c>
{
900107d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900107d8:	460e      	mov	r6, r1
900107da:	4604      	mov	r4, r0
900107dc:	4617      	mov	r7, r2
900107de:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900107e0:	b339      	cbz	r1, 90010832 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
900107e2:	2d02      	cmp	r5, #2
900107e4:	d10b      	bne.n	900107fe <xQueueGenericSendFromISR+0x2e>
900107e6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900107e8:	2b01      	cmp	r3, #1
900107ea:	d008      	beq.n	900107fe <xQueueGenericSendFromISR+0x2e>
900107ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
900107f0:	f383 8811 	msr	BASEPRI, r3
900107f4:	f3bf 8f6f 	isb	sy
900107f8:	f3bf 8f4f 	dsb	sy
900107fc:	e7fe      	b.n	900107fc <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900107fe:	f7ff fcab 	bl	90010158 <vPortValidateInterruptPriority>
	__asm volatile
90010802:	f3ef 8811 	mrs	r8, BASEPRI
90010806:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001080a:	f383 8811 	msr	BASEPRI, r3
9001080e:	f3bf 8f6f 	isb	sy
90010812:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
90010816:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90010818:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9001081a:	429a      	cmp	r2, r3
9001081c:	d315      	bcc.n	9001084a <xQueueGenericSendFromISR+0x7a>
9001081e:	f1a5 0002 	sub.w	r0, r5, #2
90010822:	fab0 f080 	clz	r0, r0
90010826:	0940      	lsrs	r0, r0, #5
90010828:	b978      	cbnz	r0, 9001084a <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9001082a:	f388 8811 	msr	BASEPRI, r8
}
9001082e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010832:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010834:	2b00      	cmp	r3, #0
90010836:	d0d4      	beq.n	900107e2 <xQueueGenericSendFromISR+0x12>
	__asm volatile
90010838:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001083c:	f383 8811 	msr	BASEPRI, r3
90010840:	f3bf 8f6f 	isb	sy
90010844:	f3bf 8f4f 	dsb	sy
90010848:	e7fe      	b.n	90010848 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9001084a:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9001084c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010850:	4631      	mov	r1, r6
90010852:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
90010854:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
90010856:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010858:	f7ff fcac 	bl	900101b4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9001085c:	1c6b      	adds	r3, r5, #1
9001085e:	d00e      	beq.n	9001087e <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010860:	1c6b      	adds	r3, r5, #1
90010862:	b25b      	sxtb	r3, r3
90010864:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
90010868:	2001      	movs	r0, #1
9001086a:	e7de      	b.n	9001082a <xQueueGenericSendFromISR+0x5a>
9001086c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010870:	f383 8811 	msr	BASEPRI, r3
90010874:	f3bf 8f6f 	isb	sy
90010878:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9001087c:	e7fe      	b.n	9001087c <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001087e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90010880:	2b00      	cmp	r3, #0
90010882:	d0f1      	beq.n	90010868 <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010884:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010888:	f001 fa14 	bl	90011cb4 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9001088c:	2800      	cmp	r0, #0
9001088e:	d0eb      	beq.n	90010868 <xQueueGenericSendFromISR+0x98>
90010890:	2f00      	cmp	r7, #0
90010892:	d0e9      	beq.n	90010868 <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010894:	2301      	movs	r3, #1
90010896:	603b      	str	r3, [r7, #0]
90010898:	e7e6      	b.n	90010868 <xQueueGenericSendFromISR+0x98>
9001089a:	bf00      	nop

9001089c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9001089c:	b360      	cbz	r0, 900108f8 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9001089e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
900108a0:	b570      	push	{r4, r5, r6, lr}
900108a2:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
900108a4:	b143      	cbz	r3, 900108b8 <xQueueGiveFromISR+0x1c>
900108a6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108aa:	f383 8811 	msr	BASEPRI, r3
900108ae:	f3bf 8f6f 	isb	sy
900108b2:	f3bf 8f4f 	dsb	sy
900108b6:	e7fe      	b.n	900108b6 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
900108b8:	6803      	ldr	r3, [r0, #0]
900108ba:	460d      	mov	r5, r1
900108bc:	b32b      	cbz	r3, 9001090a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900108be:	f7ff fc4b 	bl	90010158 <vPortValidateInterruptPriority>
	__asm volatile
900108c2:	f3ef 8611 	mrs	r6, BASEPRI
900108c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108ca:	f383 8811 	msr	BASEPRI, r3
900108ce:	f3bf 8f6f 	isb	sy
900108d2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
900108d6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
900108d8:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
900108da:	429a      	cmp	r2, r3
900108dc:	d921      	bls.n	90010922 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
900108de:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900108e2:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
900108e4:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900108e6:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
900108e8:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
900108ea:	d01e      	beq.n	9001092a <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
900108ec:	3301      	adds	r3, #1
900108ee:	b25b      	sxtb	r3, r3
900108f0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
900108f4:	2001      	movs	r0, #1
900108f6:	e015      	b.n	90010924 <xQueueGiveFromISR+0x88>
	__asm volatile
900108f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108fc:	f383 8811 	msr	BASEPRI, r3
90010900:	f3bf 8f6f 	isb	sy
90010904:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010908:	e7fe      	b.n	90010908 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9001090a:	6883      	ldr	r3, [r0, #8]
9001090c:	2b00      	cmp	r3, #0
9001090e:	d0d6      	beq.n	900108be <xQueueGiveFromISR+0x22>
90010910:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010914:	f383 8811 	msr	BASEPRI, r3
90010918:	f3bf 8f6f 	isb	sy
9001091c:	f3bf 8f4f 	dsb	sy
90010920:	e7fe      	b.n	90010920 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
90010922:	2000      	movs	r0, #0
	__asm volatile
90010924:	f386 8811 	msr	BASEPRI, r6
}
90010928:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001092a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001092c:	2b00      	cmp	r3, #0
9001092e:	d0e1      	beq.n	900108f4 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010930:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010934:	f001 f9be 	bl	90011cb4 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
90010938:	2d00      	cmp	r5, #0
9001093a:	d0db      	beq.n	900108f4 <xQueueGiveFromISR+0x58>
9001093c:	2800      	cmp	r0, #0
9001093e:	d0d9      	beq.n	900108f4 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010940:	2301      	movs	r3, #1
90010942:	602b      	str	r3, [r5, #0]
90010944:	e7d6      	b.n	900108f4 <xQueueGiveFromISR+0x58>
90010946:	bf00      	nop

90010948 <xQueueReceive>:
{
90010948:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001094c:	b085      	sub	sp, #20
9001094e:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90010950:	2800      	cmp	r0, #0
90010952:	f000 8164 	beq.w	90010c1e <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010956:	460f      	mov	r7, r1
90010958:	4604      	mov	r4, r0
9001095a:	2900      	cmp	r1, #0
9001095c:	f000 8097 	beq.w	90010a8e <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010960:	f001 fa42 	bl	90011de8 <xTaskGetSchedulerState>
90010964:	2800      	cmp	r0, #0
90010966:	f000 809f 	beq.w	90010aa8 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
9001096a:	f7ff fac3 	bl	9000fef4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001096e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010970:	2d00      	cmp	r5, #0
90010972:	d175      	bne.n	90010a60 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
90010974:	9b01      	ldr	r3, [sp, #4]
90010976:	2b00      	cmp	r3, #0
90010978:	f000 80f4 	beq.w	90010b64 <xQueueReceive+0x21c>
		prvLockQueue( pxQueue );
9001097c:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001097e:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
90010982:	a802      	add	r0, sp, #8
90010984:	f001 f9dc 	bl	90011d40 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90010988:	f7ff fad6 	bl	9000ff38 <vPortExitCritical>
		vTaskSuspendAll();
9001098c:	f001 f866 	bl	90011a5c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010990:	f7ff fab0 	bl	9000fef4 <vPortEnterCritical>
90010994:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010998:	2bff      	cmp	r3, #255	@ 0xff
9001099a:	d101      	bne.n	900109a0 <xQueueReceive+0x58>
9001099c:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
900109a0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900109a4:	2bff      	cmp	r3, #255	@ 0xff
900109a6:	d101      	bne.n	900109ac <xQueueReceive+0x64>
900109a8:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
900109ac:	f7ff fac4 	bl	9000ff38 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
900109b0:	a901      	add	r1, sp, #4
900109b2:	a802      	add	r0, sp, #8
900109b4:	f001 f9d0 	bl	90011d58 <xTaskCheckForTimeOut>
900109b8:	2800      	cmp	r0, #0
900109ba:	f040 8082 	bne.w	90010ac2 <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
900109be:	f7ff fa99 	bl	9000fef4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
900109c2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900109c4:	2b00      	cmp	r3, #0
900109c6:	f000 80d3 	beq.w	90010b70 <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
900109ca:	f7ff fab5 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
900109ce:	f7ff fa91 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900109d2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
900109d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900109d8:	2d00      	cmp	r5, #0
900109da:	dd14      	ble.n	90010a06 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109dc:	f104 0924 	add.w	r9, r4, #36	@ 0x24
900109e0:	e003      	b.n	900109ea <xQueueReceive+0xa2>
			--cTxLock;
900109e2:	1e6b      	subs	r3, r5, #1
900109e4:	b2da      	uxtb	r2, r3
900109e6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900109e8:	b16a      	cbz	r2, 90010a06 <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900109ea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109ec:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900109ee:	b153      	cbz	r3, 90010a06 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109f0:	f001 f960 	bl	90011cb4 <xTaskRemoveFromEventList>
900109f4:	2800      	cmp	r0, #0
900109f6:	d0f4      	beq.n	900109e2 <xQueueReceive+0x9a>
						vTaskMissedYield();
900109f8:	f001 f9f0 	bl	90011ddc <vTaskMissedYield>
			--cTxLock;
900109fc:	1e6b      	subs	r3, r5, #1
900109fe:	b2da      	uxtb	r2, r3
90010a00:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a02:	2a00      	cmp	r2, #0
90010a04:	d1f1      	bne.n	900109ea <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
90010a06:	23ff      	movs	r3, #255	@ 0xff
90010a08:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010a0c:	f7ff fa94 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
90010a10:	f7ff fa70 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010a14:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010a18:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010a1a:	2d00      	cmp	r5, #0
90010a1c:	dd14      	ble.n	90010a48 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010a1e:	f104 0910 	add.w	r9, r4, #16
90010a22:	e003      	b.n	90010a2c <xQueueReceive+0xe4>
				--cRxLock;
90010a24:	1e6b      	subs	r3, r5, #1
90010a26:	b2da      	uxtb	r2, r3
90010a28:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010a2a:	b16a      	cbz	r2, 90010a48 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010a2c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010a2e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010a30:	b153      	cbz	r3, 90010a48 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010a32:	f001 f93f 	bl	90011cb4 <xTaskRemoveFromEventList>
90010a36:	2800      	cmp	r0, #0
90010a38:	d0f4      	beq.n	90010a24 <xQueueReceive+0xdc>
					vTaskMissedYield();
90010a3a:	f001 f9cf 	bl	90011ddc <vTaskMissedYield>
				--cRxLock;
90010a3e:	1e6b      	subs	r3, r5, #1
90010a40:	b2da      	uxtb	r2, r3
90010a42:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010a44:	2a00      	cmp	r2, #0
90010a46:	d1f1      	bne.n	90010a2c <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
90010a48:	23ff      	movs	r3, #255	@ 0xff
90010a4a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010a4e:	f7ff fa73 	bl	9000ff38 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010a52:	f001 f80b 	bl	90011a6c <xTaskResumeAll>
		taskENTER_CRITICAL();
90010a56:	f7ff fa4d 	bl	9000fef4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010a5a:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010a5c:	2d00      	cmp	r5, #0
90010a5e:	d07d      	beq.n	90010b5c <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010a60:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90010a62:	b152      	cbz	r2, 90010a7a <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010a64:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010a66:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010a68:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010a6a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010a6c:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010a6e:	d301      	bcc.n	90010a74 <xQueueReceive+0x12c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90010a70:	6821      	ldr	r1, [r4, #0]
90010a72:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90010a74:	4638      	mov	r0, r7
90010a76:	f01b ff84 	bl	9002c982 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010a7a:	3d01      	subs	r5, #1
90010a7c:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010a7e:	6923      	ldr	r3, [r4, #16]
90010a80:	2b00      	cmp	r3, #0
90010a82:	f040 80d5 	bne.w	90010c30 <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
90010a86:	f7ff fa57 	bl	9000ff38 <vPortExitCritical>
				return pdPASS;
90010a8a:	2001      	movs	r0, #1
90010a8c:	e06d      	b.n	90010b6a <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010a8e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010a90:	2b00      	cmp	r3, #0
90010a92:	f43f af65 	beq.w	90010960 <xQueueReceive+0x18>
	__asm volatile
90010a96:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010a9a:	f383 8811 	msr	BASEPRI, r3
90010a9e:	f3bf 8f6f 	isb	sy
90010aa2:	f3bf 8f4f 	dsb	sy
90010aa6:	e7fe      	b.n	90010aa6 <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010aa8:	9b01      	ldr	r3, [sp, #4]
90010aaa:	2b00      	cmp	r3, #0
90010aac:	f43f af5d 	beq.w	9001096a <xQueueReceive+0x22>
90010ab0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010ab4:	f383 8811 	msr	BASEPRI, r3
90010ab8:	f3bf 8f6f 	isb	sy
90010abc:	f3bf 8f4f 	dsb	sy
90010ac0:	e7fe      	b.n	90010ac0 <xQueueReceive+0x178>
	taskENTER_CRITICAL();
90010ac2:	f7ff fa17 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010ac6:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010aca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010acc:	2d00      	cmp	r5, #0
90010ace:	dc04      	bgt.n	90010ada <xQueueReceive+0x192>
90010ad0:	e011      	b.n	90010af6 <xQueueReceive+0x1ae>
			--cTxLock;
90010ad2:	1e6b      	subs	r3, r5, #1
90010ad4:	b2da      	uxtb	r2, r3
90010ad6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010ad8:	b16a      	cbz	r2, 90010af6 <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010ada:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010adc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010ade:	b153      	cbz	r3, 90010af6 <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010ae0:	f001 f8e8 	bl	90011cb4 <xTaskRemoveFromEventList>
90010ae4:	2800      	cmp	r0, #0
90010ae6:	d0f4      	beq.n	90010ad2 <xQueueReceive+0x18a>
						vTaskMissedYield();
90010ae8:	f001 f978 	bl	90011ddc <vTaskMissedYield>
			--cTxLock;
90010aec:	1e6b      	subs	r3, r5, #1
90010aee:	b2da      	uxtb	r2, r3
90010af0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010af2:	2a00      	cmp	r2, #0
90010af4:	d1f1      	bne.n	90010ada <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
90010af6:	23ff      	movs	r3, #255	@ 0xff
90010af8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010afc:	f7ff fa1c 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
90010b00:	f7ff f9f8 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010b04:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010b08:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010b0a:	2d00      	cmp	r5, #0
90010b0c:	dd14      	ble.n	90010b38 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010b0e:	f104 0910 	add.w	r9, r4, #16
90010b12:	e003      	b.n	90010b1c <xQueueReceive+0x1d4>
				--cRxLock;
90010b14:	1e6b      	subs	r3, r5, #1
90010b16:	b2da      	uxtb	r2, r3
90010b18:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010b1a:	b16a      	cbz	r2, 90010b38 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010b1c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010b1e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010b20:	b153      	cbz	r3, 90010b38 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010b22:	f001 f8c7 	bl	90011cb4 <xTaskRemoveFromEventList>
90010b26:	2800      	cmp	r0, #0
90010b28:	d0f4      	beq.n	90010b14 <xQueueReceive+0x1cc>
					vTaskMissedYield();
90010b2a:	f001 f957 	bl	90011ddc <vTaskMissedYield>
				--cRxLock;
90010b2e:	1e6b      	subs	r3, r5, #1
90010b30:	b2da      	uxtb	r2, r3
90010b32:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010b34:	2a00      	cmp	r2, #0
90010b36:	d1f1      	bne.n	90010b1c <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
90010b38:	23ff      	movs	r3, #255	@ 0xff
90010b3a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010b3e:	f7ff f9fb 	bl	9000ff38 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010b42:	f000 ff93 	bl	90011a6c <xTaskResumeAll>
	taskENTER_CRITICAL();
90010b46:	f7ff f9d5 	bl	9000fef4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010b4a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010b4c:	b153      	cbz	r3, 90010b64 <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
90010b4e:	f7ff f9f3 	bl	9000ff38 <vPortExitCritical>
		taskENTER_CRITICAL();
90010b52:	f7ff f9cf 	bl	9000fef4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010b56:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010b58:	2d00      	cmp	r5, #0
90010b5a:	d181      	bne.n	90010a60 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
90010b5c:	9b01      	ldr	r3, [sp, #4]
90010b5e:	2b00      	cmp	r3, #0
90010b60:	f47f af12 	bne.w	90010988 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
90010b64:	f7ff f9e8 	bl	9000ff38 <vPortExitCritical>
					return errQUEUE_EMPTY;
90010b68:	2000      	movs	r0, #0
}
90010b6a:	b005      	add	sp, #20
90010b6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010b70:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
90010b74:	f7ff f9e0 	bl	9000ff38 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010b78:	9901      	ldr	r1, [sp, #4]
90010b7a:	4648      	mov	r0, r9
90010b7c:	f001 f80c 	bl	90011b98 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010b80:	f7ff f9b8 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010b84:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010b88:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b8a:	2d00      	cmp	r5, #0
90010b8c:	dc04      	bgt.n	90010b98 <xQueueReceive+0x250>
90010b8e:	e011      	b.n	90010bb4 <xQueueReceive+0x26c>
			--cTxLock;
90010b90:	1e6b      	subs	r3, r5, #1
90010b92:	b2da      	uxtb	r2, r3
90010b94:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b96:	b16a      	cbz	r2, 90010bb4 <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010b98:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010b9a:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010b9c:	b153      	cbz	r3, 90010bb4 <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010b9e:	f001 f889 	bl	90011cb4 <xTaskRemoveFromEventList>
90010ba2:	2800      	cmp	r0, #0
90010ba4:	d0f4      	beq.n	90010b90 <xQueueReceive+0x248>
						vTaskMissedYield();
90010ba6:	f001 f919 	bl	90011ddc <vTaskMissedYield>
			--cTxLock;
90010baa:	1e6b      	subs	r3, r5, #1
90010bac:	b2da      	uxtb	r2, r3
90010bae:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010bb0:	2a00      	cmp	r2, #0
90010bb2:	d1f1      	bne.n	90010b98 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
90010bb4:	23ff      	movs	r3, #255	@ 0xff
90010bb6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010bba:	f7ff f9bd 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
90010bbe:	f7ff f999 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010bc2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010bc6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010bc8:	2d00      	cmp	r5, #0
90010bca:	dd14      	ble.n	90010bf6 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010bcc:	f104 0910 	add.w	r9, r4, #16
90010bd0:	e003      	b.n	90010bda <xQueueReceive+0x292>
				--cRxLock;
90010bd2:	1e6b      	subs	r3, r5, #1
90010bd4:	b2da      	uxtb	r2, r3
90010bd6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010bd8:	b16a      	cbz	r2, 90010bf6 <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010bda:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010bdc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010bde:	b153      	cbz	r3, 90010bf6 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010be0:	f001 f868 	bl	90011cb4 <xTaskRemoveFromEventList>
90010be4:	2800      	cmp	r0, #0
90010be6:	d0f4      	beq.n	90010bd2 <xQueueReceive+0x28a>
					vTaskMissedYield();
90010be8:	f001 f8f8 	bl	90011ddc <vTaskMissedYield>
				--cRxLock;
90010bec:	1e6b      	subs	r3, r5, #1
90010bee:	b2da      	uxtb	r2, r3
90010bf0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010bf2:	2a00      	cmp	r2, #0
90010bf4:	d1f1      	bne.n	90010bda <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
90010bf6:	23ff      	movs	r3, #255	@ 0xff
90010bf8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010bfc:	f7ff f99c 	bl	9000ff38 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010c00:	f000 ff34 	bl	90011a6c <xTaskResumeAll>
90010c04:	2800      	cmp	r0, #0
90010c06:	d1a4      	bne.n	90010b52 <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
90010c08:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010c0c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010c10:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010c14:	f3bf 8f4f 	dsb	sy
90010c18:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
90010c1c:	e799      	b.n	90010b52 <xQueueReceive+0x20a>
90010c1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010c22:	f383 8811 	msr	BASEPRI, r3
90010c26:	f3bf 8f6f 	isb	sy
90010c2a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90010c2e:	e7fe      	b.n	90010c2e <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010c30:	f104 0010 	add.w	r0, r4, #16
90010c34:	f001 f83e 	bl	90011cb4 <xTaskRemoveFromEventList>
90010c38:	2800      	cmp	r0, #0
90010c3a:	f43f af24 	beq.w	90010a86 <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
90010c3e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010c42:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010c46:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010c4a:	f3bf 8f4f 	dsb	sy
90010c4e:	f3bf 8f6f 	isb	sy
90010c52:	e718      	b.n	90010a86 <xQueueReceive+0x13e>

90010c54 <xQueueSemaphoreTake>:
{
90010c54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c58:	b084      	sub	sp, #16
90010c5a:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
90010c5c:	2800      	cmp	r0, #0
90010c5e:	d05e      	beq.n	90010d1e <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
90010c60:	6c07      	ldr	r7, [r0, #64]	@ 0x40
90010c62:	4604      	mov	r4, r0
90010c64:	b147      	cbz	r7, 90010c78 <xQueueSemaphoreTake+0x24>
90010c66:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010c6a:	f383 8811 	msr	BASEPRI, r3
90010c6e:	f3bf 8f6f 	isb	sy
90010c72:	f3bf 8f4f 	dsb	sy
90010c76:	e7fe      	b.n	90010c76 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010c78:	f001 f8b6 	bl	90011de8 <xTaskGetSchedulerState>
90010c7c:	4605      	mov	r5, r0
90010c7e:	2800      	cmp	r0, #0
90010c80:	d056      	beq.n	90010d30 <xQueueSemaphoreTake+0xdc>
90010c82:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010c84:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
90010c88:	f7ff f934 	bl	9000fef4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90010c8c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90010c8e:	2b00      	cmp	r3, #0
90010c90:	f040 814d 	bne.w	90010f2e <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
90010c94:	9b01      	ldr	r3, [sp, #4]
90010c96:	2b00      	cmp	r3, #0
90010c98:	f000 813e 	beq.w	90010f18 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
90010c9c:	2d00      	cmp	r5, #0
90010c9e:	f000 80a3 	beq.w	90010de8 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
90010ca2:	f7ff f949 	bl	9000ff38 <vPortExitCritical>
		vTaskSuspendAll();
90010ca6:	f000 fed9 	bl	90011a5c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010caa:	f7ff f923 	bl	9000fef4 <vPortEnterCritical>
90010cae:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010cb2:	2bff      	cmp	r3, #255	@ 0xff
90010cb4:	d102      	bne.n	90010cbc <xQueueSemaphoreTake+0x68>
90010cb6:	2300      	movs	r3, #0
90010cb8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
90010cbc:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010cc0:	2bff      	cmp	r3, #255	@ 0xff
90010cc2:	d102      	bne.n	90010cca <xQueueSemaphoreTake+0x76>
90010cc4:	2300      	movs	r3, #0
90010cc6:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
90010cca:	f7ff f935 	bl	9000ff38 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010cce:	a901      	add	r1, sp, #4
90010cd0:	a802      	add	r0, sp, #8
90010cd2:	f001 f841 	bl	90011d58 <xTaskCheckForTimeOut>
90010cd6:	2800      	cmp	r0, #0
90010cd8:	d137      	bne.n	90010d4a <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
90010cda:	f7ff f90b 	bl	9000fef4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010cde:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010ce0:	2b00      	cmp	r3, #0
90010ce2:	f000 80ae 	beq.w	90010e42 <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
90010ce6:	f7ff f927 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
90010cea:	f7ff f903 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010cee:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010cf2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010cf4:	2d00      	cmp	r5, #0
90010cf6:	dd7f      	ble.n	90010df8 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010cf8:	f104 0824 	add.w	r8, r4, #36	@ 0x24
90010cfc:	e004      	b.n	90010d08 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
90010cfe:	1e6b      	subs	r3, r5, #1
90010d00:	b2da      	uxtb	r2, r3
90010d02:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d04:	2a00      	cmp	r2, #0
90010d06:	d077      	beq.n	90010df8 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d08:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d0a:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d0c:	2b00      	cmp	r3, #0
90010d0e:	d073      	beq.n	90010df8 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d10:	f000 ffd0 	bl	90011cb4 <xTaskRemoveFromEventList>
90010d14:	2800      	cmp	r0, #0
90010d16:	d0f2      	beq.n	90010cfe <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
90010d18:	f001 f860 	bl	90011ddc <vTaskMissedYield>
90010d1c:	e7ef      	b.n	90010cfe <xQueueSemaphoreTake+0xaa>
90010d1e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010d22:	f383 8811 	msr	BASEPRI, r3
90010d26:	f3bf 8f6f 	isb	sy
90010d2a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90010d2e:	e7fe      	b.n	90010d2e <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010d30:	9b01      	ldr	r3, [sp, #4]
90010d32:	2b00      	cmp	r3, #0
90010d34:	f000 80d7 	beq.w	90010ee6 <xQueueSemaphoreTake+0x292>
90010d38:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010d3c:	f383 8811 	msr	BASEPRI, r3
90010d40:	f3bf 8f6f 	isb	sy
90010d44:	f3bf 8f4f 	dsb	sy
90010d48:	e7fe      	b.n	90010d48 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
90010d4a:	f7ff f8d3 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010d4e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010d52:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d54:	2d00      	cmp	r5, #0
90010d56:	dc04      	bgt.n	90010d62 <xQueueSemaphoreTake+0x10e>
90010d58:	e011      	b.n	90010d7e <xQueueSemaphoreTake+0x12a>
			--cTxLock;
90010d5a:	1e6b      	subs	r3, r5, #1
90010d5c:	b2da      	uxtb	r2, r3
90010d5e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d60:	b16a      	cbz	r2, 90010d7e <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d62:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d64:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d66:	b153      	cbz	r3, 90010d7e <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d68:	f000 ffa4 	bl	90011cb4 <xTaskRemoveFromEventList>
90010d6c:	2800      	cmp	r0, #0
90010d6e:	d0f4      	beq.n	90010d5a <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
90010d70:	f001 f834 	bl	90011ddc <vTaskMissedYield>
			--cTxLock;
90010d74:	1e6b      	subs	r3, r5, #1
90010d76:	b2da      	uxtb	r2, r3
90010d78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d7a:	2a00      	cmp	r2, #0
90010d7c:	d1f1      	bne.n	90010d62 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
90010d7e:	23ff      	movs	r3, #255	@ 0xff
90010d80:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010d84:	f7ff f8d8 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
90010d88:	f7ff f8b4 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010d8c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010d90:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010d92:	2d00      	cmp	r5, #0
90010d94:	dd14      	ble.n	90010dc0 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010d96:	f104 0810 	add.w	r8, r4, #16
90010d9a:	e003      	b.n	90010da4 <xQueueSemaphoreTake+0x150>
				--cRxLock;
90010d9c:	1e6b      	subs	r3, r5, #1
90010d9e:	b2da      	uxtb	r2, r3
90010da0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010da2:	b16a      	cbz	r2, 90010dc0 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010da4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010da6:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010da8:	b153      	cbz	r3, 90010dc0 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010daa:	f000 ff83 	bl	90011cb4 <xTaskRemoveFromEventList>
90010dae:	2800      	cmp	r0, #0
90010db0:	d0f4      	beq.n	90010d9c <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
90010db2:	f001 f813 	bl	90011ddc <vTaskMissedYield>
				--cRxLock;
90010db6:	1e6b      	subs	r3, r5, #1
90010db8:	b2da      	uxtb	r2, r3
90010dba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010dbc:	2a00      	cmp	r2, #0
90010dbe:	d1f1      	bne.n	90010da4 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
90010dc0:	23ff      	movs	r3, #255	@ 0xff
90010dc2:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010dc6:	f7ff f8b7 	bl	9000ff38 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010dca:	f000 fe4f 	bl	90011a6c <xTaskResumeAll>
	taskENTER_CRITICAL();
90010dce:	f7ff f891 	bl	9000fef4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010dd2:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010dd4:	b963      	cbnz	r3, 90010df0 <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
90010dd6:	f7ff f8af 	bl	9000ff38 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
90010dda:	2f00      	cmp	r7, #0
90010ddc:	f040 8085 	bne.w	90010eea <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
90010de0:	2000      	movs	r0, #0
}
90010de2:	b004      	add	sp, #16
90010de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
90010de8:	a802      	add	r0, sp, #8
90010dea:	f000 ffa9 	bl	90011d40 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90010dee:	e758      	b.n	90010ca2 <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
90010df0:	f7ff f8a2 	bl	9000ff38 <vPortExitCritical>
	return xReturn;
90010df4:	2501      	movs	r5, #1
90010df6:	e747      	b.n	90010c88 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
90010df8:	23ff      	movs	r3, #255	@ 0xff
90010dfa:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010dfe:	f7ff f89b 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
90010e02:	f7ff f877 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010e06:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010e0a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e0c:	2d00      	cmp	r5, #0
90010e0e:	dd10      	ble.n	90010e32 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e10:	f104 0810 	add.w	r8, r4, #16
90010e14:	e003      	b.n	90010e1e <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
90010e16:	1e6b      	subs	r3, r5, #1
90010e18:	b2da      	uxtb	r2, r3
90010e1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e1c:	b14a      	cbz	r2, 90010e32 <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010e1e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e20:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010e22:	b133      	cbz	r3, 90010e32 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e24:	f000 ff46 	bl	90011cb4 <xTaskRemoveFromEventList>
90010e28:	2800      	cmp	r0, #0
90010e2a:	d0f4      	beq.n	90010e16 <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
90010e2c:	f000 ffd6 	bl	90011ddc <vTaskMissedYield>
90010e30:	e7f1      	b.n	90010e16 <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
90010e32:	23ff      	movs	r3, #255	@ 0xff
90010e34:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010e38:	f7ff f87e 	bl	9000ff38 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010e3c:	f000 fe16 	bl	90011a6c <xTaskResumeAll>
90010e40:	e7d8      	b.n	90010df4 <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
90010e42:	f7ff f879 	bl	9000ff38 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010e46:	6823      	ldr	r3, [r4, #0]
90010e48:	2b00      	cmp	r3, #0
90010e4a:	d05c      	beq.n	90010f06 <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010e4c:	f104 0824 	add.w	r8, r4, #36	@ 0x24
90010e50:	9901      	ldr	r1, [sp, #4]
90010e52:	4640      	mov	r0, r8
90010e54:	f000 fea0 	bl	90011b98 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010e58:	f7ff f84c 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010e5c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010e60:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e62:	2d00      	cmp	r5, #0
90010e64:	dc04      	bgt.n	90010e70 <xQueueSemaphoreTake+0x21c>
90010e66:	e00d      	b.n	90010e84 <xQueueSemaphoreTake+0x230>
			--cTxLock;
90010e68:	1e6b      	subs	r3, r5, #1
90010e6a:	b2da      	uxtb	r2, r3
90010e6c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e6e:	b14a      	cbz	r2, 90010e84 <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e70:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e72:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e74:	b133      	cbz	r3, 90010e84 <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e76:	f000 ff1d 	bl	90011cb4 <xTaskRemoveFromEventList>
90010e7a:	2800      	cmp	r0, #0
90010e7c:	d0f4      	beq.n	90010e68 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
90010e7e:	f000 ffad 	bl	90011ddc <vTaskMissedYield>
90010e82:	e7f1      	b.n	90010e68 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
90010e84:	23ff      	movs	r3, #255	@ 0xff
90010e86:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010e8a:	f7ff f855 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
90010e8e:	f7ff f831 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010e92:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010e96:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e98:	2d00      	cmp	r5, #0
90010e9a:	dd10      	ble.n	90010ebe <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e9c:	f104 0810 	add.w	r8, r4, #16
90010ea0:	e003      	b.n	90010eaa <xQueueSemaphoreTake+0x256>
				--cRxLock;
90010ea2:	1e6b      	subs	r3, r5, #1
90010ea4:	b2da      	uxtb	r2, r3
90010ea6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ea8:	b14a      	cbz	r2, 90010ebe <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010eaa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010eac:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010eae:	b133      	cbz	r3, 90010ebe <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010eb0:	f000 ff00 	bl	90011cb4 <xTaskRemoveFromEventList>
90010eb4:	2800      	cmp	r0, #0
90010eb6:	d0f4      	beq.n	90010ea2 <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
90010eb8:	f000 ff90 	bl	90011ddc <vTaskMissedYield>
90010ebc:	e7f1      	b.n	90010ea2 <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
90010ebe:	23ff      	movs	r3, #255	@ 0xff
90010ec0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010ec4:	f7ff f838 	bl	9000ff38 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010ec8:	f000 fdd0 	bl	90011a6c <xTaskResumeAll>
90010ecc:	2800      	cmp	r0, #0
90010ece:	d191      	bne.n	90010df4 <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
90010ed0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010ed4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010ed8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010edc:	f3bf 8f4f 	dsb	sy
90010ee0:	f3bf 8f6f 	isb	sy
90010ee4:	e786      	b.n	90010df4 <xQueueSemaphoreTake+0x1a0>
90010ee6:	462f      	mov	r7, r5
90010ee8:	e6cc      	b.n	90010c84 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
90010eea:	f7ff f803 	bl	9000fef4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90010eee:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90010ef0:	b119      	cbz	r1, 90010efa <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
90010ef2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90010ef4:	6819      	ldr	r1, [r3, #0]
90010ef6:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90010efa:	68a0      	ldr	r0, [r4, #8]
90010efc:	f001 f808 	bl	90011f10 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
90010f00:	f7ff f81a 	bl	9000ff38 <vPortExitCritical>
90010f04:	e76c      	b.n	90010de0 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
90010f06:	f7fe fff5 	bl	9000fef4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
90010f0a:	68a0      	ldr	r0, [r4, #8]
90010f0c:	f000 ff7c 	bl	90011e08 <xTaskPriorityInherit>
90010f10:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
90010f12:	f7ff f811 	bl	9000ff38 <vPortExitCritical>
90010f16:	e799      	b.n	90010e4c <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
90010f18:	2f00      	cmp	r7, #0
90010f1a:	d0f1      	beq.n	90010f00 <xQueueSemaphoreTake+0x2ac>
90010f1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f20:	f383 8811 	msr	BASEPRI, r3
90010f24:	f3bf 8f6f 	isb	sy
90010f28:	f3bf 8f4f 	dsb	sy
90010f2c:	e7fe      	b.n	90010f2c <xQueueSemaphoreTake+0x2d8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90010f2e:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010f30:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90010f32:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010f34:	b12a      	cbz	r2, 90010f42 <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010f36:	6923      	ldr	r3, [r4, #16]
90010f38:	b93b      	cbnz	r3, 90010f4a <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
90010f3a:	f7fe fffd 	bl	9000ff38 <vPortExitCritical>
				return pdPASS;
90010f3e:	2001      	movs	r0, #1
90010f40:	e74f      	b.n	90010de2 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
90010f42:	f001 f835 	bl	90011fb0 <pvTaskIncrementMutexHeldCount>
90010f46:	60a0      	str	r0, [r4, #8]
90010f48:	e7f5      	b.n	90010f36 <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010f4a:	f104 0010 	add.w	r0, r4, #16
90010f4e:	f000 feb1 	bl	90011cb4 <xTaskRemoveFromEventList>
90010f52:	2800      	cmp	r0, #0
90010f54:	d0f1      	beq.n	90010f3a <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
90010f56:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010f5a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010f5e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010f62:	f3bf 8f4f 	dsb	sy
90010f66:	f3bf 8f6f 	isb	sy
90010f6a:	e7e6      	b.n	90010f3a <xQueueSemaphoreTake+0x2e6>

90010f6c <xQueueReceiveFromISR>:
{
90010f6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
90010f70:	b310      	cbz	r0, 90010fb8 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010f72:	460f      	mov	r7, r1
90010f74:	4604      	mov	r4, r0
90010f76:	4616      	mov	r6, r2
90010f78:	b191      	cbz	r1, 90010fa0 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010f7a:	f7ff f8ed 	bl	90010158 <vPortValidateInterruptPriority>
	__asm volatile
90010f7e:	f3ef 8911 	mrs	r9, BASEPRI
90010f82:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f86:	f383 8811 	msr	BASEPRI, r3
90010f8a:	f3bf 8f6f 	isb	sy
90010f8e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010f92:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010f94:	b9cd      	cbnz	r5, 90010fca <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
90010f96:	4628      	mov	r0, r5
	__asm volatile
90010f98:	f389 8811 	msr	BASEPRI, r9
}
90010f9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010fa0:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010fa2:	2b00      	cmp	r3, #0
90010fa4:	d0e9      	beq.n	90010f7a <xQueueReceiveFromISR+0xe>
	__asm volatile
90010fa6:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010faa:	f383 8811 	msr	BASEPRI, r3
90010fae:	f3bf 8f6f 	isb	sy
90010fb2:	f3bf 8f4f 	dsb	sy
90010fb6:	e7fe      	b.n	90010fb6 <xQueueReceiveFromISR+0x4a>
90010fb8:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010fbc:	f383 8811 	msr	BASEPRI, r3
90010fc0:	f3bf 8f6f 	isb	sy
90010fc4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010fc8:	e7fe      	b.n	90010fc8 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90010fca:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010fce:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
90010fd0:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010fd4:	b142      	cbz	r2, 90010fe8 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010fd6:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010fd8:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010fda:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010fdc:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010fde:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010fe0:	d21c      	bcs.n	9001101c <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90010fe2:	4638      	mov	r0, r7
90010fe4:	f01b fccd 	bl	9002c982 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010fe8:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
90010fea:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010fee:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
90010ff0:	d006      	beq.n	90011000 <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
90010ff2:	f108 0301 	add.w	r3, r8, #1
90010ff6:	b25b      	sxtb	r3, r3
90010ff8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
90010ffc:	2001      	movs	r0, #1
90010ffe:	e7cb      	b.n	90010f98 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011000:	6923      	ldr	r3, [r4, #16]
90011002:	2b00      	cmp	r3, #0
90011004:	d0fa      	beq.n	90010ffc <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011006:	f104 0010 	add.w	r0, r4, #16
9001100a:	f000 fe53 	bl	90011cb4 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9001100e:	2e00      	cmp	r6, #0
90011010:	d0f4      	beq.n	90010ffc <xQueueReceiveFromISR+0x90>
90011012:	2800      	cmp	r0, #0
90011014:	d0f2      	beq.n	90010ffc <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
90011016:	2301      	movs	r3, #1
90011018:	6033      	str	r3, [r6, #0]
9001101a:	e7ef      	b.n	90010ffc <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9001101c:	6821      	ldr	r1, [r4, #0]
9001101e:	60e1      	str	r1, [r4, #12]
90011020:	e7df      	b.n	90010fe2 <xQueueReceiveFromISR+0x76>
90011022:	bf00      	nop
90011024:	0000      	movs	r0, r0
	...

90011028 <vQueueDelete>:
	configASSERT( pxQueue );
90011028:	b1e0      	cbz	r0, 90011064 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9001102a:	4b21      	ldr	r3, [pc, #132]	@ (900110b0 <vQueueDelete+0x88>)
9001102c:	685a      	ldr	r2, [r3, #4]
9001102e:	4290      	cmp	r0, r2
90011030:	d02b      	beq.n	9001108a <vQueueDelete+0x62>
90011032:	68da      	ldr	r2, [r3, #12]
90011034:	4290      	cmp	r0, r2
90011036:	d02a      	beq.n	9001108e <vQueueDelete+0x66>
90011038:	695a      	ldr	r2, [r3, #20]
9001103a:	4290      	cmp	r0, r2
9001103c:	d029      	beq.n	90011092 <vQueueDelete+0x6a>
9001103e:	69da      	ldr	r2, [r3, #28]
90011040:	4290      	cmp	r0, r2
90011042:	d028      	beq.n	90011096 <vQueueDelete+0x6e>
90011044:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90011046:	4290      	cmp	r0, r2
90011048:	d027      	beq.n	9001109a <vQueueDelete+0x72>
9001104a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9001104c:	4290      	cmp	r0, r2
9001104e:	d014      	beq.n	9001107a <vQueueDelete+0x52>
90011050:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90011052:	4290      	cmp	r0, r2
90011054:	d023      	beq.n	9001109e <vQueueDelete+0x76>
90011056:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90011058:	4290      	cmp	r0, r2
9001105a:	d022      	beq.n	900110a2 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9001105c:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
90011060:	b14b      	cbz	r3, 90011076 <vQueueDelete+0x4e>
}
90011062:	4770      	bx	lr
90011064:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011068:	f383 8811 	msr	BASEPRI, r3
9001106c:	f3bf 8f6f 	isb	sy
90011070:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011074:	e7fe      	b.n	90011074 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
90011076:	f7fe be1f 	b.w	9000fcb8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001107a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9001107c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90011080:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 900110a8 <vQueueDelete+0x80>
90011084:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
90011088:	e7e8      	b.n	9001105c <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001108a:	2200      	movs	r2, #0
9001108c:	e7f6      	b.n	9001107c <vQueueDelete+0x54>
9001108e:	2201      	movs	r2, #1
90011090:	e7f4      	b.n	9001107c <vQueueDelete+0x54>
90011092:	2202      	movs	r2, #2
90011094:	e7f2      	b.n	9001107c <vQueueDelete+0x54>
90011096:	2203      	movs	r2, #3
90011098:	e7f0      	b.n	9001107c <vQueueDelete+0x54>
9001109a:	2204      	movs	r2, #4
9001109c:	e7ee      	b.n	9001107c <vQueueDelete+0x54>
9001109e:	2206      	movs	r2, #6
900110a0:	e7ec      	b.n	9001107c <vQueueDelete+0x54>
900110a2:	2207      	movs	r2, #7
900110a4:	e7ea      	b.n	9001107c <vQueueDelete+0x54>
900110a6:	bf00      	nop
	...
900110b0:	24023f28 	.word	0x24023f28

900110b4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
900110b4:	4b12      	ldr	r3, [pc, #72]	@ (90011100 <vQueueAddToRegistry+0x4c>)
900110b6:	681a      	ldr	r2, [r3, #0]
900110b8:	b17a      	cbz	r2, 900110da <vQueueAddToRegistry+0x26>
900110ba:	689a      	ldr	r2, [r3, #8]
900110bc:	b162      	cbz	r2, 900110d8 <vQueueAddToRegistry+0x24>
900110be:	691a      	ldr	r2, [r3, #16]
900110c0:	b192      	cbz	r2, 900110e8 <vQueueAddToRegistry+0x34>
900110c2:	699a      	ldr	r2, [r3, #24]
900110c4:	b192      	cbz	r2, 900110ec <vQueueAddToRegistry+0x38>
900110c6:	6a1a      	ldr	r2, [r3, #32]
900110c8:	b192      	cbz	r2, 900110f0 <vQueueAddToRegistry+0x3c>
900110ca:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
900110cc:	b192      	cbz	r2, 900110f4 <vQueueAddToRegistry+0x40>
900110ce:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900110d0:	b192      	cbz	r2, 900110f8 <vQueueAddToRegistry+0x44>
900110d2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900110d4:	b192      	cbz	r2, 900110fc <vQueueAddToRegistry+0x48>
	}
900110d6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900110d8:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
900110da:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
900110de:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
900110e2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
900110e6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900110e8:	2202      	movs	r2, #2
900110ea:	e7f6      	b.n	900110da <vQueueAddToRegistry+0x26>
900110ec:	2203      	movs	r2, #3
900110ee:	e7f4      	b.n	900110da <vQueueAddToRegistry+0x26>
900110f0:	2204      	movs	r2, #4
900110f2:	e7f2      	b.n	900110da <vQueueAddToRegistry+0x26>
900110f4:	2205      	movs	r2, #5
900110f6:	e7f0      	b.n	900110da <vQueueAddToRegistry+0x26>
900110f8:	2206      	movs	r2, #6
900110fa:	e7ee      	b.n	900110da <vQueueAddToRegistry+0x26>
900110fc:	2207      	movs	r2, #7
900110fe:	e7ec      	b.n	900110da <vQueueAddToRegistry+0x26>
90011100:	24023f28 	.word	0x24023f28

90011104 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
90011104:	b570      	push	{r4, r5, r6, lr}
90011106:	4605      	mov	r5, r0
90011108:	460e      	mov	r6, r1
9001110a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9001110c:	f7fe fef2 	bl	9000fef4 <vPortEnterCritical>
90011110:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
90011114:	2bff      	cmp	r3, #255	@ 0xff
90011116:	d102      	bne.n	9001111e <vQueueWaitForMessageRestricted+0x1a>
90011118:	2300      	movs	r3, #0
9001111a:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9001111e:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
90011122:	2bff      	cmp	r3, #255	@ 0xff
90011124:	d102      	bne.n	9001112c <vQueueWaitForMessageRestricted+0x28>
90011126:	2300      	movs	r3, #0
90011128:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9001112c:	f7fe ff04 	bl	9000ff38 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
90011130:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90011132:	2b00      	cmp	r3, #0
90011134:	d043      	beq.n	900111be <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
90011136:	f7fe fedd 	bl	9000fef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001113a:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9001113e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011140:	2c00      	cmp	r4, #0
90011142:	dd14      	ble.n	9001116e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011144:	f105 0624 	add.w	r6, r5, #36	@ 0x24
90011148:	e003      	b.n	90011152 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9001114a:	1e63      	subs	r3, r4, #1
9001114c:	b2da      	uxtb	r2, r3
9001114e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011150:	b16a      	cbz	r2, 9001116e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011152:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011154:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011156:	b153      	cbz	r3, 9001116e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011158:	f000 fdac 	bl	90011cb4 <xTaskRemoveFromEventList>
9001115c:	2800      	cmp	r0, #0
9001115e:	d0f4      	beq.n	9001114a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
90011160:	f000 fe3c 	bl	90011ddc <vTaskMissedYield>
			--cTxLock;
90011164:	1e63      	subs	r3, r4, #1
90011166:	b2da      	uxtb	r2, r3
90011168:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001116a:	2a00      	cmp	r2, #0
9001116c:	d1f1      	bne.n	90011152 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9001116e:	23ff      	movs	r3, #255	@ 0xff
90011170:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
90011174:	f7fe fee0 	bl	9000ff38 <vPortExitCritical>
	taskENTER_CRITICAL();
90011178:	f7fe febc 	bl	9000fef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001117c:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
90011180:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011182:	2c00      	cmp	r4, #0
90011184:	dd14      	ble.n	900111b0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011186:	f105 0610 	add.w	r6, r5, #16
9001118a:	e003      	b.n	90011194 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9001118c:	1e63      	subs	r3, r4, #1
9001118e:	b2da      	uxtb	r2, r3
90011190:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011192:	b16a      	cbz	r2, 900111b0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011194:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011196:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011198:	b153      	cbz	r3, 900111b0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001119a:	f000 fd8b 	bl	90011cb4 <xTaskRemoveFromEventList>
9001119e:	2800      	cmp	r0, #0
900111a0:	d0f4      	beq.n	9001118c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
900111a2:	f000 fe1b 	bl	90011ddc <vTaskMissedYield>
				--cRxLock;
900111a6:	1e63      	subs	r3, r4, #1
900111a8:	b2da      	uxtb	r2, r3
900111aa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900111ac:	2a00      	cmp	r2, #0
900111ae:	d1f1      	bne.n	90011194 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
900111b0:	23ff      	movs	r3, #255	@ 0xff
900111b2:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
900111b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
900111ba:	f7fe bebd 	b.w	9000ff38 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
900111be:	4622      	mov	r2, r4
900111c0:	4631      	mov	r1, r6
900111c2:	f105 0024 	add.w	r0, r5, #36	@ 0x24
900111c6:	f000 fd2b 	bl	90011c20 <vTaskPlaceOnEventListRestricted>
900111ca:	e7b4      	b.n	90011136 <vQueueWaitForMessageRestricted+0x32>

900111cc <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
900111cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900111d0:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
900111d2:	f7fe fe8f 	bl	9000fef4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
900111d6:	4a34      	ldr	r2, [pc, #208]	@ (900112a8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
900111d8:	4e34      	ldr	r6, [pc, #208]	@ (900112ac <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
900111da:	6813      	ldr	r3, [r2, #0]
900111dc:	3301      	adds	r3, #1
900111de:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
900111e0:	6833      	ldr	r3, [r6, #0]
900111e2:	2b00      	cmp	r3, #0
900111e4:	d031      	beq.n	9001124a <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
900111e6:	4c32      	ldr	r4, [pc, #200]	@ (900112b0 <prvAddNewTaskToReadyList+0xe4>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900111e8:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
900111ea:	6823      	ldr	r3, [r4, #0]
900111ec:	b333      	cbz	r3, 9001123c <prvAddNewTaskToReadyList+0x70>
900111ee:	4f31      	ldr	r7, [pc, #196]	@ (900112b4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
900111f0:	4a31      	ldr	r2, [pc, #196]	@ (900112b8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
900111f2:	4932      	ldr	r1, [pc, #200]	@ (900112bc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
900111f4:	6813      	ldr	r3, [r2, #0]
900111f6:	3301      	adds	r3, #1
900111f8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
900111fa:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
900111fc:	680b      	ldr	r3, [r1, #0]
900111fe:	4283      	cmp	r3, r0
90011200:	d200      	bcs.n	90011204 <prvAddNewTaskToReadyList+0x38>
90011202:	6008      	str	r0, [r1, #0]
90011204:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011208:	1d29      	adds	r1, r5, #4
9001120a:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9001120e:	f7fe fdc9 	bl	9000fda4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
90011212:	f7fe fe91 	bl	9000ff38 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
90011216:	6823      	ldr	r3, [r4, #0]
90011218:	b173      	cbz	r3, 90011238 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9001121a:	6832      	ldr	r2, [r6, #0]
9001121c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9001121e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90011220:	429a      	cmp	r2, r3
90011222:	d209      	bcs.n	90011238 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
90011224:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011228:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001122c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011230:	f3bf 8f4f 	dsb	sy
90011234:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
90011238:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9001123c:	6833      	ldr	r3, [r6, #0]
9001123e:	4f1d      	ldr	r7, [pc, #116]	@ (900112b4 <prvAddNewTaskToReadyList+0xe8>)
90011240:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011242:	4283      	cmp	r3, r0
90011244:	d8d4      	bhi.n	900111f0 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
90011246:	6035      	str	r5, [r6, #0]
90011248:	e7d2      	b.n	900111f0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9001124a:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9001124c:	6813      	ldr	r3, [r2, #0]
9001124e:	2b01      	cmp	r3, #1
90011250:	d003      	beq.n	9001125a <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90011252:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
90011254:	4f17      	ldr	r7, [pc, #92]	@ (900112b4 <prvAddNewTaskToReadyList+0xe8>)
90011256:	4c16      	ldr	r4, [pc, #88]	@ (900112b0 <prvAddNewTaskToReadyList+0xe4>)
90011258:	e7ca      	b.n	900111f0 <prvAddNewTaskToReadyList+0x24>
9001125a:	4f16      	ldr	r7, [pc, #88]	@ (900112b4 <prvAddNewTaskToReadyList+0xe8>)
9001125c:	463c      	mov	r4, r7
9001125e:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90011262:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90011264:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90011266:	f7fe fd8d 	bl	9000fd84 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9001126a:	45a0      	cmp	r8, r4
9001126c:	d1f9      	bne.n	90011262 <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9001126e:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 900112d4 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
90011272:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 900112d8 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
90011276:	4648      	mov	r0, r9
90011278:	4c0d      	ldr	r4, [pc, #52]	@ (900112b0 <prvAddNewTaskToReadyList+0xe4>)
9001127a:	f7fe fd83 	bl	9000fd84 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9001127e:	4640      	mov	r0, r8
90011280:	f7fe fd80 	bl	9000fd84 <vListInitialise>
	vListInitialise( &xPendingReadyList );
90011284:	480e      	ldr	r0, [pc, #56]	@ (900112c0 <prvAddNewTaskToReadyList+0xf4>)
90011286:	f7fe fd7d 	bl	9000fd84 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9001128a:	480e      	ldr	r0, [pc, #56]	@ (900112c4 <prvAddNewTaskToReadyList+0xf8>)
9001128c:	f7fe fd7a 	bl	9000fd84 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90011290:	480d      	ldr	r0, [pc, #52]	@ (900112c8 <prvAddNewTaskToReadyList+0xfc>)
90011292:	f7fe fd77 	bl	9000fd84 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
90011296:	4b0d      	ldr	r3, [pc, #52]	@ (900112cc <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
90011298:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9001129a:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9001129e:	4b0c      	ldr	r3, [pc, #48]	@ (900112d0 <prvAddNewTaskToReadyList+0x104>)
900112a0:	f8c3 8000 	str.w	r8, [r3]
}
900112a4:	e7a4      	b.n	900111f0 <prvAddNewTaskToReadyList+0x24>
900112a6:	bf00      	nop
900112a8:	24023f8c 	.word	0x24023f8c
900112ac:	24024460 	.word	0x24024460
900112b0:	24023f80 	.word	0x24023f80
900112b4:	24024000 	.word	0x24024000
900112b8:	24023f70 	.word	0x24023f70
900112bc:	24023f84 	.word	0x24023f84
900112c0:	24023fbc 	.word	0x24023fbc
900112c4:	24023fa8 	.word	0x24023fa8
900112c8:	24023f90 	.word	0x24023f90
900112cc:	24023fd4 	.word	0x24023fd4
900112d0:	24023fd0 	.word	0x24023fd0
900112d4:	24023fec 	.word	0x24023fec
900112d8:	24023fd8 	.word	0x24023fd8

900112dc <prvIdleTask>:
{
900112dc:	b580      	push	{r7, lr}
900112de:	4c22      	ldr	r4, [pc, #136]	@ (90011368 <prvIdleTask+0x8c>)
900112e0:	4e22      	ldr	r6, [pc, #136]	@ (9001136c <prvIdleTask+0x90>)
900112e2:	4d23      	ldr	r5, [pc, #140]	@ (90011370 <prvIdleTask+0x94>)
900112e4:	4f23      	ldr	r7, [pc, #140]	@ (90011374 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
900112e6:	6823      	ldr	r3, [r4, #0]
900112e8:	b353      	cbz	r3, 90011340 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
900112ea:	f7fe fe03 	bl	9000fef4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900112ee:	68f3      	ldr	r3, [r6, #12]
900112f0:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900112f4:	f108 0004 	add.w	r0, r8, #4
900112f8:	f7fe fd7a 	bl	9000fdf0 <uxListRemove>
				--uxCurrentNumberOfTasks;
900112fc:	682b      	ldr	r3, [r5, #0]
900112fe:	3b01      	subs	r3, #1
90011300:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
90011302:	6823      	ldr	r3, [r4, #0]
90011304:	3b01      	subs	r3, #1
90011306:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
90011308:	f7fe fe16 	bl	9000ff38 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9001130c:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
90011310:	b163      	cbz	r3, 9001132c <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
90011312:	2b01      	cmp	r3, #1
90011314:	d024      	beq.n	90011360 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
90011316:	2b02      	cmp	r3, #2
90011318:	d0e5      	beq.n	900112e6 <prvIdleTask+0xa>
9001131a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001131e:	f383 8811 	msr	BASEPRI, r3
90011322:	f3bf 8f6f 	isb	sy
90011326:	f3bf 8f4f 	dsb	sy
9001132a:	e7fe      	b.n	9001132a <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
9001132c:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
90011330:	f7fe fcc2 	bl	9000fcb8 <vPortFree>
				vPortFree( pxTCB );
90011334:	4640      	mov	r0, r8
90011336:	f7fe fcbf 	bl	9000fcb8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9001133a:	6823      	ldr	r3, [r4, #0]
9001133c:	2b00      	cmp	r3, #0
9001133e:	d1d4      	bne.n	900112ea <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90011340:	683b      	ldr	r3, [r7, #0]
90011342:	2b01      	cmp	r3, #1
90011344:	d909      	bls.n	9001135a <prvIdleTask+0x7e>
				taskYIELD();
90011346:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001134a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001134e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011352:	f3bf 8f4f 	dsb	sy
90011356:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9001135a:	f7f2 fd11 	bl	90003d80 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9001135e:	e7c2      	b.n	900112e6 <prvIdleTask+0xa>
				vPortFree( pxTCB );
90011360:	4640      	mov	r0, r8
90011362:	f7fe fca9 	bl	9000fcb8 <vPortFree>
90011366:	e7be      	b.n	900112e6 <prvIdleTask+0xa>
90011368:	24023fa4 	.word	0x24023fa4
9001136c:	24023fa8 	.word	0x24023fa8
90011370:	24023f8c 	.word	0x24023f8c
90011374:	24024000 	.word	0x24024000

90011378 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90011378:	4b49      	ldr	r3, [pc, #292]	@ (900114a0 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9001137a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9001137e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90011380:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90011382:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
90011384:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90011386:	2e00      	cmp	r6, #0
90011388:	d03e      	beq.n	90011408 <xTaskIncrementTick.part.0+0x90>
9001138a:	4b46      	ldr	r3, [pc, #280]	@ (900114a4 <xTaskIncrementTick.part.0+0x12c>)
9001138c:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9001138e:	681b      	ldr	r3, [r3, #0]
90011390:	429e      	cmp	r6, r3
90011392:	d346      	bcc.n	90011422 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011394:	4f44      	ldr	r7, [pc, #272]	@ (900114a8 <xTaskIncrementTick.part.0+0x130>)
90011396:	683b      	ldr	r3, [r7, #0]
90011398:	681d      	ldr	r5, [r3, #0]
9001139a:	2d00      	cmp	r5, #0
9001139c:	d077      	beq.n	9001148e <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9001139e:	2500      	movs	r5, #0
900113a0:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 900114b8 <xTaskIncrementTick.part.0+0x140>
900113a4:	f8df a114 	ldr.w	sl, [pc, #276]	@ 900114bc <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
900113a8:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 900114c0 <xTaskIncrementTick.part.0+0x148>
900113ac:	e020      	b.n	900113f0 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900113ae:	f7fe fd1f 	bl	9000fdf0 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
900113b2:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900113b4:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
900113b8:	b10b      	cbz	r3, 900113be <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900113ba:	f7fe fd19 	bl	9000fdf0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900113be:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900113c0:	4659      	mov	r1, fp
900113c2:	f8d8 2000 	ldr.w	r2, [r8]
900113c6:	eb03 0083 	add.w	r0, r3, r3, lsl #2
900113ca:	4293      	cmp	r3, r2
900113cc:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900113d0:	d901      	bls.n	900113d6 <xTaskIncrementTick.part.0+0x5e>
900113d2:	f8c8 3000 	str.w	r3, [r8]
900113d6:	f7fe fce5 	bl	9000fda4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900113da:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900113de:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900113e0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900113e2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900113e4:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
900113e6:	4291      	cmp	r1, r2
900113e8:	bf28      	it	cs
900113ea:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900113ec:	2b00      	cmp	r3, #0
900113ee:	d052      	beq.n	90011496 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900113f0:	683b      	ldr	r3, [r7, #0]
900113f2:	68db      	ldr	r3, [r3, #12]
900113f4:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
900113f6:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900113f8:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
900113fc:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900113fe:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
90011400:	d2d5      	bcs.n	900113ae <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
90011402:	9a01      	ldr	r2, [sp, #4]
90011404:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
90011406:	e011      	b.n	9001142c <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
90011408:	4b27      	ldr	r3, [pc, #156]	@ (900114a8 <xTaskIncrementTick.part.0+0x130>)
9001140a:	681a      	ldr	r2, [r3, #0]
9001140c:	6812      	ldr	r2, [r2, #0]
9001140e:	b30a      	cbz	r2, 90011454 <xTaskIncrementTick.part.0+0xdc>
90011410:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011414:	f383 8811 	msr	BASEPRI, r3
90011418:	f3bf 8f6f 	isb	sy
9001141c:	f3bf 8f4f 	dsb	sy
90011420:	e7fe      	b.n	90011420 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
90011422:	2500      	movs	r5, #0
90011424:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 900114b8 <xTaskIncrementTick.part.0+0x140>
90011428:	f8df a090 	ldr.w	sl, [pc, #144]	@ 900114bc <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9001142c:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
90011430:	491e      	ldr	r1, [pc, #120]	@ (900114ac <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
90011432:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011434:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90011438:	009b      	lsls	r3, r3, #2
9001143a:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9001143e:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90011440:	2a02      	cmp	r2, #2
90011442:	bf28      	it	cs
90011444:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
90011446:	2b00      	cmp	r3, #0
}
90011448:	bf0c      	ite	eq
9001144a:	4628      	moveq	r0, r5
9001144c:	2001      	movne	r0, #1
9001144e:	b003      	add	sp, #12
90011450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90011454:	4a16      	ldr	r2, [pc, #88]	@ (900114b0 <xTaskIncrementTick.part.0+0x138>)
90011456:	6818      	ldr	r0, [r3, #0]
90011458:	6811      	ldr	r1, [r2, #0]
9001145a:	6019      	str	r1, [r3, #0]
9001145c:	4915      	ldr	r1, [pc, #84]	@ (900114b4 <xTaskIncrementTick.part.0+0x13c>)
9001145e:	6010      	str	r0, [r2, #0]
90011460:	680a      	ldr	r2, [r1, #0]
90011462:	3201      	adds	r2, #1
90011464:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011466:	681a      	ldr	r2, [r3, #0]
90011468:	6812      	ldr	r2, [r2, #0]
9001146a:	b93a      	cbnz	r2, 9001147c <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9001146c:	4b0d      	ldr	r3, [pc, #52]	@ (900114a4 <xTaskIncrementTick.part.0+0x12c>)
9001146e:	461a      	mov	r2, r3
90011470:	9301      	str	r3, [sp, #4]
90011472:	f04f 33ff 	mov.w	r3, #4294967295
90011476:	6013      	str	r3, [r2, #0]
90011478:	4613      	mov	r3, r2
9001147a:	e788      	b.n	9001138e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001147c:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001147e:	4a09      	ldr	r2, [pc, #36]	@ (900114a4 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011480:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011482:	9201      	str	r2, [sp, #4]
90011484:	68db      	ldr	r3, [r3, #12]
90011486:	685b      	ldr	r3, [r3, #4]
90011488:	6013      	str	r3, [r2, #0]
9001148a:	4613      	mov	r3, r2
	}
}
9001148c:	e77f      	b.n	9001138e <xTaskIncrementTick.part.0+0x16>
9001148e:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 900114b8 <xTaskIncrementTick.part.0+0x140>
90011492:	f8df a028 	ldr.w	sl, [pc, #40]	@ 900114bc <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011496:	f04f 33ff 	mov.w	r3, #4294967295
9001149a:	9a01      	ldr	r2, [sp, #4]
9001149c:	6013      	str	r3, [r2, #0]
					break;
9001149e:	e7c5      	b.n	9001142c <xTaskIncrementTick.part.0+0xb4>
900114a0:	24023f88 	.word	0x24023f88
900114a4:	24023f6c 	.word	0x24023f6c
900114a8:	24023fd4 	.word	0x24023fd4
900114ac:	24023f78 	.word	0x24023f78
900114b0:	24023fd0 	.word	0x24023fd0
900114b4:	24023f74 	.word	0x24023f74
900114b8:	24024000 	.word	0x24024000
900114bc:	24024460 	.word	0x24024460
900114c0:	24023f84 	.word	0x24023f84

900114c4 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
900114c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
900114c8:	4d43      	ldr	r5, [pc, #268]	@ (900115d8 <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
900114ca:	f7fe fd13 	bl	9000fef4 <vPortEnterCritical>
		--uxSchedulerSuspended;
900114ce:	682b      	ldr	r3, [r5, #0]
900114d0:	3b01      	subs	r3, #1
900114d2:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
900114d4:	682b      	ldr	r3, [r5, #0]
900114d6:	2b00      	cmp	r3, #0
900114d8:	d168      	bne.n	900115ac <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
900114da:	4b40      	ldr	r3, [pc, #256]	@ (900115dc <xTaskResumeAll.part.0+0x118>)
900114dc:	681b      	ldr	r3, [r3, #0]
900114de:	2b00      	cmp	r3, #0
900114e0:	d064      	beq.n	900115ac <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900114e2:	4e3f      	ldr	r6, [pc, #252]	@ (900115e0 <xTaskResumeAll.part.0+0x11c>)
900114e4:	6833      	ldr	r3, [r6, #0]
900114e6:	2b00      	cmp	r3, #0
900114e8:	d073      	beq.n	900115d2 <xTaskResumeAll.part.0+0x10e>
900114ea:	4f3e      	ldr	r7, [pc, #248]	@ (900115e4 <xTaskResumeAll.part.0+0x120>)
900114ec:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 900115f4 <xTaskResumeAll.part.0+0x130>
900114f0:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 900115f8 <xTaskResumeAll.part.0+0x134>
900114f4:	f8df a104 	ldr.w	sl, [pc, #260]	@ 900115fc <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900114f8:	68f3      	ldr	r3, [r6, #12]
900114fa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900114fe:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011502:	f10b 0018 	add.w	r0, fp, #24
90011506:	f7fe fc73 	bl	9000fdf0 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001150a:	4620      	mov	r0, r4
9001150c:	f7fe fc70 	bl	9000fdf0 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
90011510:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
90011514:	4621      	mov	r1, r4
90011516:	683c      	ldr	r4, [r7, #0]
90011518:	eb02 0082 	add.w	r0, r2, r2, lsl #2
9001151c:	42a2      	cmp	r2, r4
9001151e:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90011522:	d900      	bls.n	90011526 <xTaskResumeAll.part.0+0x62>
90011524:	603a      	str	r2, [r7, #0]
90011526:	f7fe fc3d 	bl	9000fda4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9001152a:	f8d8 1000 	ldr.w	r1, [r8]
9001152e:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
90011532:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
90011534:	429a      	cmp	r2, r3
90011536:	d33f      	bcc.n	900115b8 <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
90011538:	2301      	movs	r3, #1
9001153a:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9001153e:	6833      	ldr	r3, [r6, #0]
90011540:	2b00      	cmp	r3, #0
90011542:	d1d9      	bne.n	900114f8 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011544:	4b28      	ldr	r3, [pc, #160]	@ (900115e8 <xTaskResumeAll.part.0+0x124>)
90011546:	681a      	ldr	r2, [r3, #0]
90011548:	6812      	ldr	r2, [r2, #0]
9001154a:	2a00      	cmp	r2, #0
9001154c:	d03c      	beq.n	900115c8 <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001154e:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011550:	4b26      	ldr	r3, [pc, #152]	@ (900115ec <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011552:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011554:	68d2      	ldr	r2, [r2, #12]
90011556:	6852      	ldr	r2, [r2, #4]
90011558:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9001155a:	4e25      	ldr	r6, [pc, #148]	@ (900115f0 <xTaskResumeAll.part.0+0x12c>)
9001155c:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9001155e:	b194      	cbz	r4, 90011586 <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
90011560:	2701      	movs	r7, #1
90011562:	e006      	b.n	90011572 <xTaskResumeAll.part.0+0xae>
90011564:	f7ff ff08 	bl	90011378 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90011568:	b108      	cbz	r0, 9001156e <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
9001156a:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001156e:	3c01      	subs	r4, #1
90011570:	d008      	beq.n	90011584 <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011572:	682b      	ldr	r3, [r5, #0]
90011574:	2b00      	cmp	r3, #0
90011576:	d0f5      	beq.n	90011564 <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
90011578:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001157a:	3c01      	subs	r4, #1
		++xPendedTicks;
9001157c:	f103 0301 	add.w	r3, r3, #1
90011580:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011582:	d1f6      	bne.n	90011572 <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
90011584:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90011586:	f8da 3000 	ldr.w	r3, [sl]
9001158a:	b17b      	cbz	r3, 900115ac <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
9001158c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011590:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90011594:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011598:	f3bf 8f4f 	dsb	sy
9001159c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
900115a0:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
900115a2:	f7fe fcc9 	bl	9000ff38 <vPortExitCritical>
}
900115a6:	4620      	mov	r0, r4
900115a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
900115ac:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
900115ae:	f7fe fcc3 	bl	9000ff38 <vPortExitCritical>
}
900115b2:	4620      	mov	r0, r4
900115b4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900115b8:	6833      	ldr	r3, [r6, #0]
900115ba:	2b00      	cmp	r3, #0
900115bc:	d19c      	bne.n	900114f8 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900115be:	4b0a      	ldr	r3, [pc, #40]	@ (900115e8 <xTaskResumeAll.part.0+0x124>)
900115c0:	681a      	ldr	r2, [r3, #0]
900115c2:	6812      	ldr	r2, [r2, #0]
900115c4:	2a00      	cmp	r2, #0
900115c6:	d1c2      	bne.n	9001154e <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
900115c8:	4b08      	ldr	r3, [pc, #32]	@ (900115ec <xTaskResumeAll.part.0+0x128>)
900115ca:	f04f 32ff 	mov.w	r2, #4294967295
900115ce:	601a      	str	r2, [r3, #0]
900115d0:	e7c3      	b.n	9001155a <xTaskResumeAll.part.0+0x96>
900115d2:	f8df a028 	ldr.w	sl, [pc, #40]	@ 900115fc <xTaskResumeAll.part.0+0x138>
900115d6:	e7c0      	b.n	9001155a <xTaskResumeAll.part.0+0x96>
900115d8:	24023f68 	.word	0x24023f68
900115dc:	24023f8c 	.word	0x24023f8c
900115e0:	24023fbc 	.word	0x24023fbc
900115e4:	24023f84 	.word	0x24023f84
900115e8:	24023fd4 	.word	0x24023fd4
900115ec:	24023f6c 	.word	0x24023f6c
900115f0:	24023f7c 	.word	0x24023f7c
900115f4:	24024000 	.word	0x24024000
900115f8:	24024460 	.word	0x24024460
900115fc:	24023f78 	.word	0x24023f78

90011600 <xTaskCreateStatic>:
	{
90011600:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011604:	b083      	sub	sp, #12
90011606:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
90011608:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
9001160c:	b1bb      	cbz	r3, 9001163e <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9001160e:	b16c      	cbz	r4, 9001162c <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
90011610:	2360      	movs	r3, #96	@ 0x60
90011612:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
90011614:	9b01      	ldr	r3, [sp, #4]
90011616:	2b60      	cmp	r3, #96	@ 0x60
90011618:	d01a      	beq.n	90011650 <xTaskCreateStatic+0x50>
9001161a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001161e:	f383 8811 	msr	BASEPRI, r3
90011622:	f3bf 8f6f 	isb	sy
90011626:	f3bf 8f4f 	dsb	sy
9001162a:	e7fe      	b.n	9001162a <xTaskCreateStatic+0x2a>
9001162c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011630:	f383 8811 	msr	BASEPRI, r3
90011634:	f3bf 8f6f 	isb	sy
90011638:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9001163c:	e7fe      	b.n	9001163c <xTaskCreateStatic+0x3c>
9001163e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011642:	f383 8811 	msr	BASEPRI, r3
90011646:	f3bf 8f6f 	isb	sy
9001164a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9001164e:	e7fe      	b.n	9001164e <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011650:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011652:	0096      	lsls	r6, r2, #2
90011654:	4607      	mov	r7, r0
90011656:	460d      	mov	r5, r1
90011658:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9001165a:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9001165c:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001165e:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011660:	4632      	mov	r2, r6
90011662:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011664:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011668:	f01b f8aa 	bl	9002c7c0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001166c:	1f32      	subs	r2, r6, #4
9001166e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90011670:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011672:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
90011676:	2d00      	cmp	r5, #0
90011678:	d068      	beq.n	9001174c <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001167a:	782b      	ldrb	r3, [r5, #0]
9001167c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90011680:	2b00      	cmp	r3, #0
90011682:	d036      	beq.n	900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011684:	786b      	ldrb	r3, [r5, #1]
90011686:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9001168a:	b393      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001168c:	78ab      	ldrb	r3, [r5, #2]
9001168e:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011692:	b373      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011694:	78eb      	ldrb	r3, [r5, #3]
90011696:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9001169a:	b353      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001169c:	792b      	ldrb	r3, [r5, #4]
9001169e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
900116a2:	b333      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116a4:	796b      	ldrb	r3, [r5, #5]
900116a6:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
900116aa:	b313      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116ac:	79ab      	ldrb	r3, [r5, #6]
900116ae:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
900116b2:	b1f3      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116b4:	79eb      	ldrb	r3, [r5, #7]
900116b6:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
900116ba:	b1d3      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116bc:	7a2b      	ldrb	r3, [r5, #8]
900116be:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
900116c2:	b1b3      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116c4:	7a6b      	ldrb	r3, [r5, #9]
900116c6:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
900116ca:	b193      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116cc:	7aab      	ldrb	r3, [r5, #10]
900116ce:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
900116d2:	b173      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116d4:	7aeb      	ldrb	r3, [r5, #11]
900116d6:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
900116da:	b153      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116dc:	7b2b      	ldrb	r3, [r5, #12]
900116de:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
900116e2:	b133      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116e4:	7b6b      	ldrb	r3, [r5, #13]
900116e6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
900116ea:	b113      	cbz	r3, 900116f2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116ec:	7bab      	ldrb	r3, [r5, #14]
900116ee:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
900116f2:	2300      	movs	r3, #0
900116f4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900116f8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
900116fa:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900116fe:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011700:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
90011702:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011706:	bf28      	it	cs
90011708:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9001170a:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9001170c:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001170e:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011712:	f7fe fb43 	bl	9000fd9c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011716:	f104 0018 	add.w	r0, r4, #24
9001171a:	f7fe fb3f 	bl	9000fd9c <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001171e:	4642      	mov	r2, r8
90011720:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
90011722:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011726:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011728:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9001172a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9001172c:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9001172e:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011732:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011736:	f7fe fbad 	bl	9000fe94 <pxPortInitialiseStack>
9001173a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9001173c:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001173e:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011740:	f7ff fd44 	bl	900111cc <prvAddNewTaskToReadyList>
	}
90011744:	4620      	mov	r0, r4
90011746:	b003      	add	sp, #12
90011748:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9001174c:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
90011750:	e7d2      	b.n	900116f8 <xTaskCreateStatic+0xf8>
90011752:	bf00      	nop

90011754 <xTaskCreate>:
	{
90011754:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011758:	0096      	lsls	r6, r2, #2
	{
9001175a:	4680      	mov	r8, r0
9001175c:	460d      	mov	r5, r1
9001175e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011760:	4630      	mov	r0, r6
90011762:	f7fe f9ed 	bl	9000fb40 <pvPortMalloc>
			if( pxStack != NULL )
90011766:	2800      	cmp	r0, #0
90011768:	d07f      	beq.n	9001186a <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9001176a:	4607      	mov	r7, r0
9001176c:	2060      	movs	r0, #96	@ 0x60
9001176e:	f7fe f9e7 	bl	9000fb40 <pvPortMalloc>
				if( pxNewTCB != NULL )
90011772:	4604      	mov	r4, r0
90011774:	2800      	cmp	r0, #0
90011776:	d075      	beq.n	90011864 <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011778:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9001177a:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001177c:	4632      	mov	r2, r6
9001177e:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011780:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011784:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011786:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011788:	f01b f81a 	bl	9002c7c0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001178c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9001178e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011790:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
90011794:	2d00      	cmp	r5, #0
90011796:	d06c      	beq.n	90011872 <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011798:	782b      	ldrb	r3, [r5, #0]
9001179a:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9001179e:	2b00      	cmp	r3, #0
900117a0:	d036      	beq.n	90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117a2:	786b      	ldrb	r3, [r5, #1]
900117a4:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
900117a8:	b393      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117aa:	78ab      	ldrb	r3, [r5, #2]
900117ac:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
900117b0:	b373      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117b2:	78eb      	ldrb	r3, [r5, #3]
900117b4:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
900117b8:	b353      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117ba:	792b      	ldrb	r3, [r5, #4]
900117bc:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
900117c0:	b333      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117c2:	796b      	ldrb	r3, [r5, #5]
900117c4:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
900117c8:	b313      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117ca:	79ab      	ldrb	r3, [r5, #6]
900117cc:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
900117d0:	b1f3      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117d2:	79eb      	ldrb	r3, [r5, #7]
900117d4:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
900117d8:	b1d3      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117da:	7a2b      	ldrb	r3, [r5, #8]
900117dc:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
900117e0:	b1b3      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117e2:	7a6b      	ldrb	r3, [r5, #9]
900117e4:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
900117e8:	b193      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117ea:	7aab      	ldrb	r3, [r5, #10]
900117ec:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
900117f0:	b173      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117f2:	7aeb      	ldrb	r3, [r5, #11]
900117f4:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
900117f8:	b153      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117fa:	7b2b      	ldrb	r3, [r5, #12]
900117fc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
90011800:	b133      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011802:	7b6b      	ldrb	r3, [r5, #13]
90011804:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
90011808:	b113      	cbz	r3, 90011810 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001180a:	7bab      	ldrb	r3, [r5, #14]
9001180c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011810:	2300      	movs	r3, #0
90011812:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011816:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
90011818:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001181a:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9001181c:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9001181e:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
90011820:	bf28      	it	cs
90011822:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
90011824:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
90011826:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011828:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001182c:	f7fe fab6 	bl	9000fd9c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011830:	f104 0018 	add.w	r0, r4, #24
90011834:	f7fe fab2 	bl	9000fd9c <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
90011838:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001183a:	464a      	mov	r2, r9
9001183c:	4641      	mov	r1, r8
9001183e:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011840:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011842:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011844:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
90011846:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011848:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001184c:	f7fe fb22 	bl	9000fe94 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
90011850:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011852:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90011854:	b103      	cbz	r3, 90011858 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90011856:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011858:	4620      	mov	r0, r4
9001185a:	f7ff fcb7 	bl	900111cc <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9001185e:	2001      	movs	r0, #1
	}
90011860:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
90011864:	4638      	mov	r0, r7
90011866:	f7fe fa27 	bl	9000fcb8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9001186a:	f04f 30ff 	mov.w	r0, #4294967295
	}
9001186e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90011872:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
90011876:	e7ce      	b.n	90011816 <xTaskCreate+0xc2>

90011878 <vTaskDelay>:
	{
90011878:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9001187a:	b950      	cbnz	r0, 90011892 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9001187c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011880:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90011884:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011888:	f3bf 8f4f 	dsb	sy
9001188c:	f3bf 8f6f 	isb	sy
	}
90011890:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90011892:	4d1e      	ldr	r5, [pc, #120]	@ (9001190c <vTaskDelay+0x94>)
90011894:	682b      	ldr	r3, [r5, #0]
90011896:	b143      	cbz	r3, 900118aa <vTaskDelay+0x32>
90011898:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001189c:	f383 8811 	msr	BASEPRI, r3
900118a0:	f3bf 8f6f 	isb	sy
900118a4:	f3bf 8f4f 	dsb	sy
900118a8:	e7fe      	b.n	900118a8 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
900118aa:	682b      	ldr	r3, [r5, #0]
900118ac:	4604      	mov	r4, r0
900118ae:	3301      	adds	r3, #1
900118b0:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
900118b2:	4b17      	ldr	r3, [pc, #92]	@ (90011910 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900118b4:	4e17      	ldr	r6, [pc, #92]	@ (90011914 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
900118b6:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
900118b8:	6830      	ldr	r0, [r6, #0]
900118ba:	3004      	adds	r0, #4
900118bc:	f7fe fa98 	bl	9000fdf0 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
900118c0:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
900118c2:	6833      	ldr	r3, [r6, #0]
900118c4:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
900118c6:	d315      	bcc.n	900118f4 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900118c8:	4b13      	ldr	r3, [pc, #76]	@ (90011918 <vTaskDelay+0xa0>)
900118ca:	6818      	ldr	r0, [r3, #0]
900118cc:	6831      	ldr	r1, [r6, #0]
900118ce:	3104      	adds	r1, #4
900118d0:	f7fe fa76 	bl	9000fdc0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
900118d4:	682b      	ldr	r3, [r5, #0]
900118d6:	b943      	cbnz	r3, 900118ea <vTaskDelay+0x72>
900118d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900118dc:	f383 8811 	msr	BASEPRI, r3
900118e0:	f3bf 8f6f 	isb	sy
900118e4:	f3bf 8f4f 	dsb	sy
900118e8:	e7fe      	b.n	900118e8 <vTaskDelay+0x70>
900118ea:	f7ff fdeb 	bl	900114c4 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
900118ee:	2800      	cmp	r0, #0
900118f0:	d0c4      	beq.n	9001187c <vTaskDelay+0x4>
	}
900118f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900118f4:	4b09      	ldr	r3, [pc, #36]	@ (9001191c <vTaskDelay+0xa4>)
900118f6:	6818      	ldr	r0, [r3, #0]
900118f8:	6831      	ldr	r1, [r6, #0]
900118fa:	3104      	adds	r1, #4
900118fc:	f7fe fa60 	bl	9000fdc0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
90011900:	4b07      	ldr	r3, [pc, #28]	@ (90011920 <vTaskDelay+0xa8>)
90011902:	681a      	ldr	r2, [r3, #0]
90011904:	4294      	cmp	r4, r2
90011906:	d2e5      	bcs.n	900118d4 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
90011908:	601c      	str	r4, [r3, #0]
9001190a:	e7e3      	b.n	900118d4 <vTaskDelay+0x5c>
9001190c:	24023f68 	.word	0x24023f68
90011910:	24023f88 	.word	0x24023f88
90011914:	24024460 	.word	0x24024460
90011918:	24023fd0 	.word	0x24023fd0
9001191c:	24023fd4 	.word	0x24023fd4
90011920:	24023f6c 	.word	0x24023f6c

90011924 <vTaskStartScheduler>:
{
90011924:	b570      	push	{r4, r5, r6, lr}
90011926:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
90011928:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9001192a:	4668      	mov	r0, sp
9001192c:	aa02      	add	r2, sp, #8
9001192e:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
90011930:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
90011934:	f7fe f8e6 	bl	9000fb04 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
90011938:	9d00      	ldr	r5, [sp, #0]
9001193a:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9001193e:	b1b8      	cbz	r0, 90011970 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90011940:	b16d      	cbz	r5, 9001195e <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90011942:	2260      	movs	r2, #96	@ 0x60
90011944:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
90011946:	9a03      	ldr	r2, [sp, #12]
90011948:	2a60      	cmp	r2, #96	@ 0x60
9001194a:	d01a      	beq.n	90011982 <vTaskStartScheduler+0x5e>
9001194c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011950:	f383 8811 	msr	BASEPRI, r3
90011954:	f3bf 8f6f 	isb	sy
90011958:	f3bf 8f4f 	dsb	sy
9001195c:	e7fe      	b.n	9001195c <vTaskStartScheduler+0x38>
9001195e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011962:	f383 8811 	msr	BASEPRI, r3
90011966:	f3bf 8f6f 	isb	sy
9001196a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9001196e:	e7fe      	b.n	9001196e <vTaskStartScheduler+0x4a>
90011970:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011974:	f383 8811 	msr	BASEPRI, r3
90011978:	f3bf 8f6f 	isb	sy
9001197c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011980:	e7fe      	b.n	90011980 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011982:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011984:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011986:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011988:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001198a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001198c:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011990:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011992:	f01a ff15 	bl	9002c7c0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011996:	1f33      	subs	r3, r6, #4
90011998:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001199a:	492a      	ldr	r1, [pc, #168]	@ (90011a44 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001199c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001199e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900119a0:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
900119a4:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
900119a6:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
900119aa:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
900119ae:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
900119b0:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900119b4:	f7fe f9f2 	bl	9000fd9c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900119b8:	f105 0018 	add.w	r0, r5, #24
900119bc:	f7fe f9ee 	bl	9000fd9c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900119c0:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900119c2:	4622      	mov	r2, r4
900119c4:	4920      	ldr	r1, [pc, #128]	@ (90011a48 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
900119c6:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900119c8:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900119ca:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
900119cc:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
900119ce:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
900119d0:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900119d2:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900119d6:	f7fe fa5d 	bl	9000fe94 <pxPortInitialiseStack>
900119da:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
900119dc:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900119de:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
900119e0:	f7ff fbf4 	bl	900111cc <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
900119e4:	f000 fc86 	bl	900122f4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
900119e8:	2801      	cmp	r0, #1
900119ea:	d00c      	beq.n	90011a06 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900119ec:	3001      	adds	r0, #1
900119ee:	d001      	beq.n	900119f4 <vTaskStartScheduler+0xd0>
}
900119f0:	b004      	add	sp, #16
900119f2:	bd70      	pop	{r4, r5, r6, pc}
900119f4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900119f8:	f383 8811 	msr	BASEPRI, r3
900119fc:	f3bf 8f6f 	isb	sy
90011a00:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
90011a04:	e7fe      	b.n	90011a04 <vTaskStartScheduler+0xe0>
90011a06:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011a0a:	f383 8811 	msr	BASEPRI, r3
90011a0e:	f3bf 8f6f 	isb	sy
90011a12:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
90011a16:	4b0d      	ldr	r3, [pc, #52]	@ (90011a4c <vTaskStartScheduler+0x128>)
90011a18:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
90011a1c:	490c      	ldr	r1, [pc, #48]	@ (90011a50 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
90011a1e:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90011a20:	4b0c      	ldr	r3, [pc, #48]	@ (90011a54 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
90011a22:	4a0d      	ldr	r2, [pc, #52]	@ (90011a58 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
90011a24:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
90011a26:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
90011a28:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
90011a2a:	b143      	cbz	r3, 90011a3e <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
90011a2c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011a2e:	b10b      	cbz	r3, 90011a34 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011a30:	2000      	movs	r0, #0
90011a32:	4798      	blx	r3
}
90011a34:	b004      	add	sp, #16
90011a36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
90011a3a:	f7fe baed 	b.w	90010018 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
90011a3e:	6813      	ldr	r3, [r2, #0]
90011a40:	e7f4      	b.n	90011a2c <vTaskStartScheduler+0x108>
90011a42:	bf00      	nop
90011a44:	454c4449 	.word	0x454c4449
90011a48:	900112dd 	.word	0x900112dd
90011a4c:	24023f6c 	.word	0x24023f6c
90011a50:	24023f80 	.word	0x24023f80
90011a54:	24023f88 	.word	0x24023f88
90011a58:	24024460 	.word	0x24024460

90011a5c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90011a5c:	4a02      	ldr	r2, [pc, #8]	@ (90011a68 <vTaskSuspendAll+0xc>)
90011a5e:	6813      	ldr	r3, [r2, #0]
90011a60:	3301      	adds	r3, #1
90011a62:	6013      	str	r3, [r2, #0]
}
90011a64:	4770      	bx	lr
90011a66:	bf00      	nop
90011a68:	24023f68 	.word	0x24023f68

90011a6c <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90011a6c:	4b06      	ldr	r3, [pc, #24]	@ (90011a88 <xTaskResumeAll+0x1c>)
90011a6e:	681b      	ldr	r3, [r3, #0]
90011a70:	b943      	cbnz	r3, 90011a84 <xTaskResumeAll+0x18>
90011a72:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011a76:	f383 8811 	msr	BASEPRI, r3
90011a7a:	f3bf 8f6f 	isb	sy
90011a7e:	f3bf 8f4f 	dsb	sy
90011a82:	e7fe      	b.n	90011a82 <xTaskResumeAll+0x16>
90011a84:	f7ff bd1e 	b.w	900114c4 <xTaskResumeAll.part.0>
90011a88:	24023f68 	.word	0x24023f68

90011a8c <xTaskGetTickCount>:
		xTicks = xTickCount;
90011a8c:	4b01      	ldr	r3, [pc, #4]	@ (90011a94 <xTaskGetTickCount+0x8>)
90011a8e:	6818      	ldr	r0, [r3, #0]
}
90011a90:	4770      	bx	lr
90011a92:	bf00      	nop
90011a94:	24023f88 	.word	0x24023f88

90011a98 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011a98:	4b05      	ldr	r3, [pc, #20]	@ (90011ab0 <xTaskIncrementTick+0x18>)
90011a9a:	681b      	ldr	r3, [r3, #0]
90011a9c:	b90b      	cbnz	r3, 90011aa2 <xTaskIncrementTick+0xa>
90011a9e:	f7ff bc6b 	b.w	90011378 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90011aa2:	4a04      	ldr	r2, [pc, #16]	@ (90011ab4 <xTaskIncrementTick+0x1c>)
}
90011aa4:	2000      	movs	r0, #0
		++xPendedTicks;
90011aa6:	6813      	ldr	r3, [r2, #0]
90011aa8:	3301      	adds	r3, #1
90011aaa:	6013      	str	r3, [r2, #0]
}
90011aac:	4770      	bx	lr
90011aae:	bf00      	nop
90011ab0:	24023f68 	.word	0x24023f68
90011ab4:	24023f7c 	.word	0x24023f7c

90011ab8 <vTaskSetApplicationTaskTag>:
	{
90011ab8:	b538      	push	{r3, r4, r5, lr}
90011aba:	460d      	mov	r5, r1
		if( xTask == NULL )
90011abc:	b138      	cbz	r0, 90011ace <vTaskSetApplicationTaskTag+0x16>
90011abe:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90011ac0:	f7fe fa18 	bl	9000fef4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011ac4:	6565      	str	r5, [r4, #84]	@ 0x54
	}
90011ac6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011aca:	f7fe ba35 	b.w	9000ff38 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90011ace:	4b04      	ldr	r3, [pc, #16]	@ (90011ae0 <vTaskSetApplicationTaskTag+0x28>)
90011ad0:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90011ad2:	f7fe fa0f 	bl	9000fef4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011ad6:	6565      	str	r5, [r4, #84]	@ 0x54
	}
90011ad8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011adc:	f7fe ba2c 	b.w	9000ff38 <vPortExitCritical>
90011ae0:	24024460 	.word	0x24024460

90011ae4 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90011ae4:	4b27      	ldr	r3, [pc, #156]	@ (90011b84 <vTaskSwitchContext+0xa0>)
90011ae6:	681b      	ldr	r3, [r3, #0]
90011ae8:	b11b      	cbz	r3, 90011af2 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
90011aea:	4b27      	ldr	r3, [pc, #156]	@ (90011b88 <vTaskSwitchContext+0xa4>)
90011aec:	2201      	movs	r2, #1
90011aee:	601a      	str	r2, [r3, #0]
90011af0:	4770      	bx	lr
{
90011af2:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90011af4:	4a24      	ldr	r2, [pc, #144]	@ (90011b88 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
90011af6:	4c25      	ldr	r4, [pc, #148]	@ (90011b8c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
90011af8:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
90011afa:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011afc:	2b00      	cmp	r3, #0
90011afe:	d036      	beq.n	90011b6e <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90011b00:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011b02:	b10b      	cbz	r3, 90011b08 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011b04:	2001      	movs	r0, #1
90011b06:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011b08:	4d21      	ldr	r5, [pc, #132]	@ (90011b90 <vTaskSwitchContext+0xac>)
90011b0a:	4922      	ldr	r1, [pc, #136]	@ (90011b94 <vTaskSwitchContext+0xb0>)
90011b0c:	682b      	ldr	r3, [r5, #0]
90011b0e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90011b12:	0098      	lsls	r0, r3, #2
90011b14:	0092      	lsls	r2, r2, #2
90011b16:	588a      	ldr	r2, [r1, r2]
90011b18:	b942      	cbnz	r2, 90011b2c <vTaskSwitchContext+0x48>
90011b1a:	b1fb      	cbz	r3, 90011b5c <vTaskSwitchContext+0x78>
90011b1c:	3b01      	subs	r3, #1
90011b1e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90011b22:	0098      	lsls	r0, r3, #2
90011b24:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90011b28:	2a00      	cmp	r2, #0
90011b2a:	d0f6      	beq.n	90011b1a <vTaskSwitchContext+0x36>
90011b2c:	4418      	add	r0, r3
90011b2e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90011b32:	f8dc 1004 	ldr.w	r1, [ip, #4]
90011b36:	4662      	mov	r2, ip
90011b38:	6849      	ldr	r1, [r1, #4]
90011b3a:	3208      	adds	r2, #8
90011b3c:	4291      	cmp	r1, r2
90011b3e:	f8cc 1004 	str.w	r1, [ip, #4]
90011b42:	d01b      	beq.n	90011b7c <vTaskSwitchContext+0x98>
90011b44:	68ca      	ldr	r2, [r1, #12]
90011b46:	6022      	str	r2, [r4, #0]
90011b48:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
90011b4a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011b4c:	b1a3      	cbz	r3, 90011b78 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
90011b4e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011b50:	b11b      	cbz	r3, 90011b5a <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011b52:	2000      	movs	r0, #0
}
90011b54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90011b58:	4718      	bx	r3
}
90011b5a:	bd70      	pop	{r4, r5, r6, pc}
90011b5c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011b60:	f383 8811 	msr	BASEPRI, r3
90011b64:	f3bf 8f6f 	isb	sy
90011b68:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011b6c:	e7fe      	b.n	90011b6c <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
90011b6e:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90011b70:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011b72:	2b00      	cmp	r3, #0
90011b74:	d1c6      	bne.n	90011b04 <vTaskSwitchContext+0x20>
90011b76:	e7c7      	b.n	90011b08 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90011b78:	6823      	ldr	r3, [r4, #0]
90011b7a:	e7e8      	b.n	90011b4e <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011b7c:	6849      	ldr	r1, [r1, #4]
90011b7e:	f8cc 1004 	str.w	r1, [ip, #4]
90011b82:	e7df      	b.n	90011b44 <vTaskSwitchContext+0x60>
90011b84:	24023f68 	.word	0x24023f68
90011b88:	24023f78 	.word	0x24023f78
90011b8c:	24024460 	.word	0x24024460
90011b90:	24023f84 	.word	0x24023f84
90011b94:	24024000 	.word	0x24024000

90011b98 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90011b98:	b1f0      	cbz	r0, 90011bd8 <vTaskPlaceOnEventList+0x40>
{
90011b9a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90011b9c:	4d1a      	ldr	r5, [pc, #104]	@ (90011c08 <vTaskPlaceOnEventList+0x70>)
90011b9e:	460c      	mov	r4, r1
90011ba0:	6829      	ldr	r1, [r5, #0]
90011ba2:	3118      	adds	r1, #24
90011ba4:	f7fe f90c 	bl	9000fdc0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90011ba8:	4b18      	ldr	r3, [pc, #96]	@ (90011c0c <vTaskPlaceOnEventList+0x74>)
90011baa:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011bac:	6828      	ldr	r0, [r5, #0]
90011bae:	3004      	adds	r0, #4
90011bb0:	f7fe f91e 	bl	9000fdf0 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90011bb4:	1c63      	adds	r3, r4, #1
90011bb6:	d020      	beq.n	90011bfa <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011bb8:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011bba:	682b      	ldr	r3, [r5, #0]
90011bbc:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90011bbe:	d214      	bcs.n	90011bea <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011bc0:	4b13      	ldr	r3, [pc, #76]	@ (90011c10 <vTaskPlaceOnEventList+0x78>)
90011bc2:	6818      	ldr	r0, [r3, #0]
90011bc4:	6829      	ldr	r1, [r5, #0]
90011bc6:	3104      	adds	r1, #4
90011bc8:	f7fe f8fa 	bl	9000fdc0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011bcc:	4b11      	ldr	r3, [pc, #68]	@ (90011c14 <vTaskPlaceOnEventList+0x7c>)
90011bce:	681a      	ldr	r2, [r3, #0]
90011bd0:	4294      	cmp	r4, r2
90011bd2:	d200      	bcs.n	90011bd6 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90011bd4:	601c      	str	r4, [r3, #0]
}
90011bd6:	bd70      	pop	{r4, r5, r6, pc}
90011bd8:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011bdc:	f383 8811 	msr	BASEPRI, r3
90011be0:	f3bf 8f6f 	isb	sy
90011be4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90011be8:	e7fe      	b.n	90011be8 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011bea:	4b0b      	ldr	r3, [pc, #44]	@ (90011c18 <vTaskPlaceOnEventList+0x80>)
90011bec:	6818      	ldr	r0, [r3, #0]
90011bee:	6829      	ldr	r1, [r5, #0]
}
90011bf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011bf4:	3104      	adds	r1, #4
90011bf6:	f7fe b8e3 	b.w	9000fdc0 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011bfa:	6829      	ldr	r1, [r5, #0]
90011bfc:	4807      	ldr	r0, [pc, #28]	@ (90011c1c <vTaskPlaceOnEventList+0x84>)
90011bfe:	3104      	adds	r1, #4
}
90011c00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c04:	f7fe b8ce 	b.w	9000fda4 <vListInsertEnd>
90011c08:	24024460 	.word	0x24024460
90011c0c:	24023f88 	.word	0x24023f88
90011c10:	24023fd4 	.word	0x24023fd4
90011c14:	24023f6c 	.word	0x24023f6c
90011c18:	24023fd0 	.word	0x24023fd0
90011c1c:	24023f90 	.word	0x24023f90

90011c20 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90011c20:	b358      	cbz	r0, 90011c7a <vTaskPlaceOnEventListRestricted+0x5a>
	{
90011c22:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90011c24:	4e1d      	ldr	r6, [pc, #116]	@ (90011c9c <vTaskPlaceOnEventListRestricted+0x7c>)
90011c26:	460c      	mov	r4, r1
90011c28:	4615      	mov	r5, r2
90011c2a:	6831      	ldr	r1, [r6, #0]
90011c2c:	3118      	adds	r1, #24
90011c2e:	f7fe f8b9 	bl	9000fda4 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90011c32:	b165      	cbz	r5, 90011c4e <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90011c34:	4b1a      	ldr	r3, [pc, #104]	@ (90011ca0 <vTaskPlaceOnEventListRestricted+0x80>)
90011c36:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011c38:	6830      	ldr	r0, [r6, #0]
90011c3a:	3004      	adds	r0, #4
90011c3c:	f7fe f8d8 	bl	9000fdf0 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c40:	6831      	ldr	r1, [r6, #0]
90011c42:	4818      	ldr	r0, [pc, #96]	@ (90011ca4 <vTaskPlaceOnEventListRestricted+0x84>)
90011c44:	3104      	adds	r1, #4
	}
90011c46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c4a:	f7fe b8ab 	b.w	9000fda4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90011c4e:	4b14      	ldr	r3, [pc, #80]	@ (90011ca0 <vTaskPlaceOnEventListRestricted+0x80>)
90011c50:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011c52:	6830      	ldr	r0, [r6, #0]
90011c54:	3004      	adds	r0, #4
90011c56:	f7fe f8cb 	bl	9000fdf0 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011c5a:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011c5c:	6833      	ldr	r3, [r6, #0]
90011c5e:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90011c60:	d214      	bcs.n	90011c8c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c62:	4b11      	ldr	r3, [pc, #68]	@ (90011ca8 <vTaskPlaceOnEventListRestricted+0x88>)
90011c64:	6818      	ldr	r0, [r3, #0]
90011c66:	6831      	ldr	r1, [r6, #0]
90011c68:	3104      	adds	r1, #4
90011c6a:	f7fe f8a9 	bl	9000fdc0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011c6e:	4b0f      	ldr	r3, [pc, #60]	@ (90011cac <vTaskPlaceOnEventListRestricted+0x8c>)
90011c70:	681a      	ldr	r2, [r3, #0]
90011c72:	4294      	cmp	r4, r2
90011c74:	d200      	bcs.n	90011c78 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
90011c76:	601c      	str	r4, [r3, #0]
	}
90011c78:	bd70      	pop	{r4, r5, r6, pc}
90011c7a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011c7e:	f383 8811 	msr	BASEPRI, r3
90011c82:	f3bf 8f6f 	isb	sy
90011c86:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
90011c8a:	e7fe      	b.n	90011c8a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c8c:	4b08      	ldr	r3, [pc, #32]	@ (90011cb0 <vTaskPlaceOnEventListRestricted+0x90>)
90011c8e:	6818      	ldr	r0, [r3, #0]
90011c90:	6831      	ldr	r1, [r6, #0]
	}
90011c92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c96:	3104      	adds	r1, #4
90011c98:	f7fe b892 	b.w	9000fdc0 <vListInsert>
90011c9c:	24024460 	.word	0x24024460
90011ca0:	24023f88 	.word	0x24023f88
90011ca4:	24023f90 	.word	0x24023f90
90011ca8:	24023fd4 	.word	0x24023fd4
90011cac:	24023f6c 	.word	0x24023f6c
90011cb0:	24023fd0 	.word	0x24023fd0

90011cb4 <xTaskRemoveFromEventList>:
{
90011cb4:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011cb6:	68c3      	ldr	r3, [r0, #12]
90011cb8:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
90011cba:	b34c      	cbz	r4, 90011d10 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
90011cbc:	f104 0518 	add.w	r5, r4, #24
90011cc0:	4628      	mov	r0, r5
90011cc2:	f7fe f895 	bl	9000fdf0 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011cc6:	4b18      	ldr	r3, [pc, #96]	@ (90011d28 <xTaskRemoveFromEventList+0x74>)
90011cc8:	681b      	ldr	r3, [r3, #0]
90011cca:	b173      	cbz	r3, 90011cea <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
90011ccc:	4629      	mov	r1, r5
90011cce:	4817      	ldr	r0, [pc, #92]	@ (90011d2c <xTaskRemoveFromEventList+0x78>)
90011cd0:	f7fe f868 	bl	9000fda4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90011cd4:	4b16      	ldr	r3, [pc, #88]	@ (90011d30 <xTaskRemoveFromEventList+0x7c>)
90011cd6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90011cd8:	681b      	ldr	r3, [r3, #0]
90011cda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011cdc:	429a      	cmp	r2, r3
90011cde:	d920      	bls.n	90011d22 <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
90011ce0:	2301      	movs	r3, #1
90011ce2:	4a14      	ldr	r2, [pc, #80]	@ (90011d34 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
90011ce4:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90011ce6:	6013      	str	r3, [r2, #0]
}
90011ce8:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
90011cea:	1d25      	adds	r5, r4, #4
90011cec:	4628      	mov	r0, r5
90011cee:	f7fe f87f 	bl	9000fdf0 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
90011cf2:	4b11      	ldr	r3, [pc, #68]	@ (90011d38 <xTaskRemoveFromEventList+0x84>)
90011cf4:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90011cf6:	681a      	ldr	r2, [r3, #0]
90011cf8:	4290      	cmp	r0, r2
90011cfa:	d900      	bls.n	90011cfe <xTaskRemoveFromEventList+0x4a>
90011cfc:	6018      	str	r0, [r3, #0]
90011cfe:	4b0f      	ldr	r3, [pc, #60]	@ (90011d3c <xTaskRemoveFromEventList+0x88>)
90011d00:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011d04:	4629      	mov	r1, r5
90011d06:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90011d0a:	f7fe f84b 	bl	9000fda4 <vListInsertEnd>
90011d0e:	e7e1      	b.n	90011cd4 <xTaskRemoveFromEventList+0x20>
90011d10:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011d14:	f383 8811 	msr	BASEPRI, r3
90011d18:	f3bf 8f6f 	isb	sy
90011d1c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90011d20:	e7fe      	b.n	90011d20 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
90011d22:	2000      	movs	r0, #0
}
90011d24:	bd38      	pop	{r3, r4, r5, pc}
90011d26:	bf00      	nop
90011d28:	24023f68 	.word	0x24023f68
90011d2c:	24023fbc 	.word	0x24023fbc
90011d30:	24024460 	.word	0x24024460
90011d34:	24023f78 	.word	0x24023f78
90011d38:	24023f84 	.word	0x24023f84
90011d3c:	24024000 	.word	0x24024000

90011d40 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011d40:	4a03      	ldr	r2, [pc, #12]	@ (90011d50 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
90011d42:	4b04      	ldr	r3, [pc, #16]	@ (90011d54 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011d44:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011d46:	681b      	ldr	r3, [r3, #0]
90011d48:	e9c0 2300 	strd	r2, r3, [r0]
}
90011d4c:	4770      	bx	lr
90011d4e:	bf00      	nop
90011d50:	24023f74 	.word	0x24023f74
90011d54:	24023f88 	.word	0x24023f88

90011d58 <xTaskCheckForTimeOut>:
{
90011d58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
90011d5a:	b308      	cbz	r0, 90011da0 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
90011d5c:	460d      	mov	r5, r1
90011d5e:	b1b1      	cbz	r1, 90011d8e <xTaskCheckForTimeOut+0x36>
90011d60:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
90011d62:	f7fe f8c7 	bl	9000fef4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90011d66:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90011d68:	4a1a      	ldr	r2, [pc, #104]	@ (90011dd4 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
90011d6a:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90011d6c:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90011d6e:	d02c      	beq.n	90011dca <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90011d70:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90011dd8 <xTaskCheckForTimeOut+0x80>
90011d74:	6826      	ldr	r6, [r4, #0]
90011d76:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90011d7a:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90011d7c:	42be      	cmp	r6, r7
90011d7e:	d018      	beq.n	90011db2 <xTaskCheckForTimeOut+0x5a>
90011d80:	4288      	cmp	r0, r1
90011d82:	d816      	bhi.n	90011db2 <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
90011d84:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90011d86:	f7fe f8d7 	bl	9000ff38 <vPortExitCritical>
}
90011d8a:	4620      	mov	r0, r4
90011d8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90011d8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011d92:	f383 8811 	msr	BASEPRI, r3
90011d96:	f3bf 8f6f 	isb	sy
90011d9a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
90011d9e:	e7fe      	b.n	90011d9e <xTaskCheckForTimeOut+0x46>
90011da0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011da4:	f383 8811 	msr	BASEPRI, r3
90011da8:	f3bf 8f6f 	isb	sy
90011dac:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
90011db0:	e7fe      	b.n	90011db0 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90011db2:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90011db6:	4573      	cmp	r3, lr
90011db8:	d909      	bls.n	90011dce <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
90011dba:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011dbc:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011dc0:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
90011dc2:	4403      	add	r3, r0
90011dc4:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011dc6:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
90011dca:	2400      	movs	r4, #0
90011dcc:	e7db      	b.n	90011d86 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
90011dce:	2300      	movs	r3, #0
90011dd0:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
90011dd2:	e7d7      	b.n	90011d84 <xTaskCheckForTimeOut+0x2c>
90011dd4:	24023f88 	.word	0x24023f88
90011dd8:	24023f74 	.word	0x24023f74

90011ddc <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90011ddc:	4b01      	ldr	r3, [pc, #4]	@ (90011de4 <vTaskMissedYield+0x8>)
90011dde:	2201      	movs	r2, #1
90011de0:	601a      	str	r2, [r3, #0]
}
90011de2:	4770      	bx	lr
90011de4:	24023f78 	.word	0x24023f78

90011de8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90011de8:	4b05      	ldr	r3, [pc, #20]	@ (90011e00 <xTaskGetSchedulerState+0x18>)
90011dea:	681b      	ldr	r3, [r3, #0]
90011dec:	b133      	cbz	r3, 90011dfc <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011dee:	4b05      	ldr	r3, [pc, #20]	@ (90011e04 <xTaskGetSchedulerState+0x1c>)
90011df0:	6818      	ldr	r0, [r3, #0]
90011df2:	fab0 f080 	clz	r0, r0
90011df6:	0940      	lsrs	r0, r0, #5
90011df8:	0040      	lsls	r0, r0, #1
90011dfa:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90011dfc:	2001      	movs	r0, #1
	}
90011dfe:	4770      	bx	lr
90011e00:	24023f80 	.word	0x24023f80
90011e04:	24023f68 	.word	0x24023f68

90011e08 <xTaskPriorityInherit>:
	{
90011e08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
90011e0a:	4604      	mov	r4, r0
90011e0c:	b1c8      	cbz	r0, 90011e42 <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90011e0e:	4d1b      	ldr	r5, [pc, #108]	@ (90011e7c <xTaskPriorityInherit+0x74>)
90011e10:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90011e12:	682a      	ldr	r2, [r5, #0]
90011e14:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90011e16:	4293      	cmp	r3, r2
90011e18:	d214      	bcs.n	90011e44 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011e1a:	6982      	ldr	r2, [r0, #24]
90011e1c:	2a00      	cmp	r2, #0
90011e1e:	db04      	blt.n	90011e2a <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011e20:	682a      	ldr	r2, [r5, #0]
90011e22:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90011e24:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
90011e28:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90011e2a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90011e2e:	4e14      	ldr	r6, [pc, #80]	@ (90011e80 <xTaskPriorityInherit+0x78>)
90011e30:	6962      	ldr	r2, [r4, #20]
90011e32:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90011e36:	429a      	cmp	r2, r3
90011e38:	d00c      	beq.n	90011e54 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011e3a:	682b      	ldr	r3, [r5, #0]
90011e3c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011e3e:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
90011e40:	2001      	movs	r0, #1
	}
90011e42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90011e44:	682b      	ldr	r3, [r5, #0]
90011e46:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
90011e48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011e4a:	4298      	cmp	r0, r3
90011e4c:	bf2c      	ite	cs
90011e4e:	2000      	movcs	r0, #0
90011e50:	2001      	movcc	r0, #1
	}
90011e52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011e54:	1d27      	adds	r7, r4, #4
90011e56:	4638      	mov	r0, r7
90011e58:	f7fd ffca 	bl	9000fdf0 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011e5c:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011e5e:	4b09      	ldr	r3, [pc, #36]	@ (90011e84 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011e60:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011e62:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011e64:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011e66:	4290      	cmp	r0, r2
90011e68:	d900      	bls.n	90011e6c <xTaskPriorityInherit+0x64>
90011e6a:	6018      	str	r0, [r3, #0]
90011e6c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011e70:	4639      	mov	r1, r7
90011e72:	eb06 0080 	add.w	r0, r6, r0, lsl #2
90011e76:	f7fd ff95 	bl	9000fda4 <vListInsertEnd>
90011e7a:	e7e1      	b.n	90011e40 <xTaskPriorityInherit+0x38>
90011e7c:	24024460 	.word	0x24024460
90011e80:	24024000 	.word	0x24024000
90011e84:	24023f84 	.word	0x24023f84

90011e88 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90011e88:	b308      	cbz	r0, 90011ece <xTaskPriorityDisinherit+0x46>
	{
90011e8a:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90011e8c:	4b1d      	ldr	r3, [pc, #116]	@ (90011f04 <xTaskPriorityDisinherit+0x7c>)
90011e8e:	681c      	ldr	r4, [r3, #0]
90011e90:	4284      	cmp	r4, r0
90011e92:	d008      	beq.n	90011ea6 <xTaskPriorityDisinherit+0x1e>
90011e94:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011e98:	f383 8811 	msr	BASEPRI, r3
90011e9c:	f3bf 8f6f 	isb	sy
90011ea0:	f3bf 8f4f 	dsb	sy
90011ea4:	e7fe      	b.n	90011ea4 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
90011ea6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90011ea8:	b143      	cbz	r3, 90011ebc <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90011eaa:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
90011eac:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90011eae:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
90011eb0:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
90011eb2:	4291      	cmp	r1, r2
90011eb4:	d000      	beq.n	90011eb8 <xTaskPriorityDisinherit+0x30>
90011eb6:	b163      	cbz	r3, 90011ed2 <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
90011eb8:	2000      	movs	r0, #0
	}
90011eba:	bd38      	pop	{r3, r4, r5, pc}
90011ebc:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011ec0:	f383 8811 	msr	BASEPRI, r3
90011ec4:	f3bf 8f6f 	isb	sy
90011ec8:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90011ecc:	e7fe      	b.n	90011ecc <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
90011ece:	2000      	movs	r0, #0
	}
90011ed0:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011ed2:	1d25      	adds	r5, r4, #4
90011ed4:	4628      	mov	r0, r5
90011ed6:	f7fd ff8b 	bl	9000fdf0 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90011eda:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
90011edc:	4b0a      	ldr	r3, [pc, #40]	@ (90011f08 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011ede:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90011ee2:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011ee4:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
90011ee6:	681a      	ldr	r2, [r3, #0]
90011ee8:	4290      	cmp	r0, r2
90011eea:	d900      	bls.n	90011eee <xTaskPriorityDisinherit+0x66>
90011eec:	6018      	str	r0, [r3, #0]
90011eee:	4b07      	ldr	r3, [pc, #28]	@ (90011f0c <xTaskPriorityDisinherit+0x84>)
90011ef0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011ef4:	4629      	mov	r1, r5
90011ef6:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90011efa:	f7fd ff53 	bl	9000fda4 <vListInsertEnd>
					xReturn = pdTRUE;
90011efe:	2001      	movs	r0, #1
	}
90011f00:	bd38      	pop	{r3, r4, r5, pc}
90011f02:	bf00      	nop
90011f04:	24024460 	.word	0x24024460
90011f08:	24023f84 	.word	0x24023f84
90011f0c:	24024000 	.word	0x24024000

90011f10 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90011f10:	2800      	cmp	r0, #0
90011f12:	d03c      	beq.n	90011f8e <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
90011f14:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
90011f16:	b570      	push	{r4, r5, r6, lr}
90011f18:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
90011f1a:	b14b      	cbz	r3, 90011f30 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90011f1c:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90011f1e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90011f20:	4281      	cmp	r1, r0
90011f22:	bf38      	it	cc
90011f24:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90011f26:	2b01      	cmp	r3, #1
90011f28:	d101      	bne.n	90011f2e <vTaskPriorityDisinheritAfterTimeout+0x1e>
90011f2a:	428a      	cmp	r2, r1
90011f2c:	d109      	bne.n	90011f42 <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
90011f2e:	bd70      	pop	{r4, r5, r6, pc}
90011f30:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011f34:	f383 8811 	msr	BASEPRI, r3
90011f38:	f3bf 8f6f 	isb	sy
90011f3c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90011f40:	e7fe      	b.n	90011f40 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
90011f42:	4b18      	ldr	r3, [pc, #96]	@ (90011fa4 <vTaskPriorityDisinheritAfterTimeout+0x94>)
90011f44:	681b      	ldr	r3, [r3, #0]
90011f46:	42a3      	cmp	r3, r4
90011f48:	d022      	beq.n	90011f90 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011f4a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90011f4c:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011f4e:	2b00      	cmp	r3, #0
90011f50:	db02      	blt.n	90011f58 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011f52:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
90011f56:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90011f58:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90011f5c:	4d12      	ldr	r5, [pc, #72]	@ (90011fa8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
90011f5e:	6961      	ldr	r1, [r4, #20]
90011f60:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90011f64:	4299      	cmp	r1, r3
90011f66:	d1e2      	bne.n	90011f2e <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011f68:	1d26      	adds	r6, r4, #4
90011f6a:	4630      	mov	r0, r6
90011f6c:	f7fd ff40 	bl	9000fdf0 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90011f70:	4b0e      	ldr	r3, [pc, #56]	@ (90011fac <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90011f72:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90011f74:	681a      	ldr	r2, [r3, #0]
90011f76:	4290      	cmp	r0, r2
90011f78:	d900      	bls.n	90011f7c <vTaskPriorityDisinheritAfterTimeout+0x6c>
90011f7a:	6018      	str	r0, [r3, #0]
90011f7c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011f80:	4631      	mov	r1, r6
90011f82:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
90011f86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90011f8a:	f7fd bf0b 	b.w	9000fda4 <vListInsertEnd>
90011f8e:	4770      	bx	lr
90011f90:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011f94:	f383 8811 	msr	BASEPRI, r3
90011f98:	f3bf 8f6f 	isb	sy
90011f9c:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90011fa0:	e7fe      	b.n	90011fa0 <vTaskPriorityDisinheritAfterTimeout+0x90>
90011fa2:	bf00      	nop
90011fa4:	24024460 	.word	0x24024460
90011fa8:	24024000 	.word	0x24024000
90011fac:	24023f84 	.word	0x24023f84

90011fb0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90011fb0:	4b04      	ldr	r3, [pc, #16]	@ (90011fc4 <pvTaskIncrementMutexHeldCount+0x14>)
90011fb2:	681a      	ldr	r2, [r3, #0]
90011fb4:	b11a      	cbz	r2, 90011fbe <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
90011fb6:	6819      	ldr	r1, [r3, #0]
90011fb8:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
90011fba:	3201      	adds	r2, #1
90011fbc:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
90011fbe:	6818      	ldr	r0, [r3, #0]
	}
90011fc0:	4770      	bx	lr
90011fc2:	bf00      	nop
90011fc4:	24024460 	.word	0x24024460

90011fc8 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90011fc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011fcc:	4e21      	ldr	r6, [pc, #132]	@ (90012054 <prvSwitchTimerLists+0x8c>)
90011fce:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90011fd0:	e00d      	b.n	90011fee <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011fd2:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011fd4:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011fd6:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011fd8:	1d25      	adds	r5, r4, #4
90011fda:	4628      	mov	r0, r5
90011fdc:	f7fd ff08 	bl	9000fdf0 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90011fe0:	6a23      	ldr	r3, [r4, #32]
90011fe2:	4620      	mov	r0, r4
90011fe4:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90011fe6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90011fea:	075b      	lsls	r3, r3, #29
90011fec:	d40a      	bmi.n	90012004 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90011fee:	6833      	ldr	r3, [r6, #0]
90011ff0:	681a      	ldr	r2, [r3, #0]
90011ff2:	2a00      	cmp	r2, #0
90011ff4:	d1ed      	bne.n	90011fd2 <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90011ff6:	4a18      	ldr	r2, [pc, #96]	@ (90012058 <prvSwitchTimerLists+0x90>)
90011ff8:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
90011ffa:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
90011ffc:	6031      	str	r1, [r6, #0]
}
90011ffe:	b004      	add	sp, #16
90012000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90012004:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012006:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
90012008:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 9001205c <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9001200c:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9001200e:	429f      	cmp	r7, r3
90012010:	d205      	bcs.n	9001201e <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012012:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90012014:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90012016:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012018:	f7fd fed2 	bl	9000fdc0 <vListInsert>
9001201c:	e7e7      	b.n	90011fee <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
9001201e:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
90012022:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
90012024:	b16b      	cbz	r3, 90012042 <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90012026:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
90012028:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001202c:	f7ff fedc 	bl	90011de8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90012030:	462b      	mov	r3, r5
90012032:	462a      	mov	r2, r5
90012034:	4669      	mov	r1, sp
90012036:	f8d8 0000 	ldr.w	r0, [r8]
9001203a:	f7fe fa47 	bl	900104cc <xQueueGenericSend>
				configASSERT( xResult );
9001203e:	2800      	cmp	r0, #0
90012040:	d1d5      	bne.n	90011fee <prvSwitchTimerLists+0x26>
90012042:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012046:	f383 8811 	msr	BASEPRI, r3
9001204a:	f3bf 8f6f 	isb	sy
9001204e:	f3bf 8f4f 	dsb	sy
90012052:	e7fe      	b.n	90012052 <prvSwitchTimerLists+0x8a>
90012054:	24024564 	.word	0x24024564
90012058:	24024560 	.word	0x24024560
9001205c:	2402455c 	.word	0x2402455c

90012060 <prvTimerTask>:
{
90012060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012064:	4e9f      	ldr	r6, [pc, #636]	@ (900122e4 <prvTimerTask+0x284>)
90012066:	b089      	sub	sp, #36	@ 0x24
90012068:	4d9f      	ldr	r5, [pc, #636]	@ (900122e8 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9001206a:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9001206e:	4c9f      	ldr	r4, [pc, #636]	@ (900122ec <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90012070:	6833      	ldr	r3, [r6, #0]
90012072:	681f      	ldr	r7, [r3, #0]
90012074:	2f00      	cmp	r7, #0
90012076:	f000 80b2 	beq.w	900121de <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9001207a:	68db      	ldr	r3, [r3, #12]
9001207c:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001207e:	f7ff fced 	bl	90011a5c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90012082:	f7ff fd03 	bl	90011a8c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012086:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90012088:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9001208a:	4298      	cmp	r0, r3
9001208c:	f0c0 80af 	bcc.w	900121ee <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90012090:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
90012092:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90012094:	f200 80d0 	bhi.w	90012238 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90012098:	f7ff fce8 	bl	90011a6c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001209c:	6833      	ldr	r3, [r6, #0]
9001209e:	68db      	ldr	r3, [r3, #12]
900120a0:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900120a4:	f10b 0804 	add.w	r8, fp, #4
900120a8:	4640      	mov	r0, r8
900120aa:	f7fd fea1 	bl	9000fdf0 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
900120ae:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
900120b2:	0758      	lsls	r0, r3, #29
900120b4:	f100 80d0 	bmi.w	90012258 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900120b8:	f023 0301 	bic.w	r3, r3, #1
900120bc:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900120c0:	f8db 3020 	ldr.w	r3, [fp, #32]
900120c4:	4658      	mov	r0, fp
900120c6:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
900120c8:	2200      	movs	r2, #0
900120ca:	4669      	mov	r1, sp
900120cc:	6820      	ldr	r0, [r4, #0]
900120ce:	f7fe fc3b 	bl	90010948 <xQueueReceive>
900120d2:	2800      	cmp	r0, #0
900120d4:	d0cc      	beq.n	90012070 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900120d6:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900120d8:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
900120da:	2b00      	cmp	r3, #0
900120dc:	db77      	blt.n	900121ce <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
900120de:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
900120e0:	697b      	ldr	r3, [r7, #20]
900120e2:	b113      	cbz	r3, 900120ea <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900120e4:	1d38      	adds	r0, r7, #4
900120e6:	f7fd fe83 	bl	9000fdf0 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
900120ea:	f7ff fccf 	bl	90011a8c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900120ee:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900120f0:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
900120f2:	4298      	cmp	r0, r3
900120f4:	f0c0 8082 	bcc.w	900121fc <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
900120f8:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
900120fa:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
900120fe:	2b09      	cmp	r3, #9
90012100:	d8e2      	bhi.n	900120c8 <prvTimerTask+0x68>
90012102:	e8df f003 	tbb	[pc, r3]
90012106:	0505      	.short	0x0505
90012108:	5b3e5405 	.word	0x5b3e5405
9001210c:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012110:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90012114:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012116:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001211a:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001211c:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
90012120:	69ba      	ldr	r2, [r7, #24]
90012122:	1899      	adds	r1, r3, r2
90012124:	bf2c      	ite	cs
90012126:	2001      	movcs	r0, #1
90012128:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9001212a:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9001212c:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9001212e:	f200 8085 	bhi.w	9001223c <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90012132:	ebab 0303 	sub.w	r3, fp, r3
90012136:	429a      	cmp	r2, r3
90012138:	f200 80be 	bhi.w	900122b8 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9001213c:	6a3b      	ldr	r3, [r7, #32]
9001213e:	4638      	mov	r0, r7
90012140:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90012142:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90012146:	0759      	lsls	r1, r3, #29
90012148:	d5be      	bpl.n	900120c8 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9001214a:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001214c:	9b01      	ldr	r3, [sp, #4]
9001214e:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
90012150:	b171      	cbz	r1, 90012170 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90012152:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90012154:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90012158:	2700      	movs	r7, #0
9001215a:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001215c:	f7ff fe44 	bl	90011de8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90012160:	463b      	mov	r3, r7
90012162:	463a      	mov	r2, r7
90012164:	a904      	add	r1, sp, #16
90012166:	6820      	ldr	r0, [r4, #0]
90012168:	f7fe f9b0 	bl	900104cc <xQueueGenericSend>
							configASSERT( xResult );
9001216c:	2800      	cmp	r0, #0
9001216e:	d1ab      	bne.n	900120c8 <prvTimerTask+0x68>
90012170:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012174:	f383 8811 	msr	BASEPRI, r3
90012178:	f3bf 8f6f 	isb	sy
9001217c:	f3bf 8f4f 	dsb	sy
90012180:	e7fe      	b.n	90012180 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012182:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90012186:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012188:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9001218c:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001218e:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90012192:	2b00      	cmp	r3, #0
90012194:	f000 809c 	beq.w	900122d0 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90012198:	445b      	add	r3, fp
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9001219a:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001219c:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9001219e:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900121a0:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900121a2:	d855      	bhi.n	90012250 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900121a4:	4b52      	ldr	r3, [pc, #328]	@ (900122f0 <prvTimerTask+0x290>)
900121a6:	6818      	ldr	r0, [r3, #0]
900121a8:	f7fd fe0a 	bl	9000fdc0 <vListInsert>
900121ac:	e78c      	b.n	900120c8 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900121ae:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
900121b2:	f023 0301 	bic.w	r3, r3, #1
900121b6:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
900121ba:	e785      	b.n	900120c8 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
900121bc:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
900121c0:	079a      	lsls	r2, r3, #30
900121c2:	d570      	bpl.n	900122a6 <prvTimerTask+0x246>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
900121c4:	f023 0301 	bic.w	r3, r3, #1
900121c8:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
900121cc:	e77c      	b.n	900120c8 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
900121ce:	9b01      	ldr	r3, [sp, #4]
900121d0:	9903      	ldr	r1, [sp, #12]
900121d2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
900121d4:	9b00      	ldr	r3, [sp, #0]
900121d6:	2b00      	cmp	r3, #0
900121d8:	f6ff af76 	blt.w	900120c8 <prvTimerTask+0x68>
900121dc:	e77f      	b.n	900120de <prvTimerTask+0x7e>
	vTaskSuspendAll();
900121de:	f7ff fc3d 	bl	90011a5c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900121e2:	f7ff fc53 	bl	90011a8c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900121e6:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900121e8:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900121ea:	4298      	cmp	r0, r3
900121ec:	d209      	bcs.n	90012202 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
900121ee:	f7ff feeb 	bl	90011fc8 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
900121f2:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
900121f6:	f7ff fc39 	bl	90011a6c <xTaskResumeAll>
900121fa:	e765      	b.n	900120c8 <prvTimerTask+0x68>
		prvSwitchTimerLists();
900121fc:	f7ff fee4 	bl	90011fc8 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
90012200:	e77a      	b.n	900120f8 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90012202:	4b3b      	ldr	r3, [pc, #236]	@ (900122f0 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
90012204:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
90012208:	681b      	ldr	r3, [r3, #0]
9001220a:	681a      	ldr	r2, [r3, #0]
9001220c:	fab2 f282 	clz	r2, r2
90012210:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
90012212:	eba7 010a 	sub.w	r1, r7, sl
90012216:	6820      	ldr	r0, [r4, #0]
90012218:	f7fe ff74 	bl	90011104 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9001221c:	f7ff fc26 	bl	90011a6c <xTaskResumeAll>
90012220:	2800      	cmp	r0, #0
90012222:	f47f af51 	bne.w	900120c8 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
90012226:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
9001222a:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
9001222e:	f3bf 8f4f 	dsb	sy
90012232:	f3bf 8f6f 	isb	sy
90012236:	e747      	b.n	900120c8 <prvTimerTask+0x68>
90012238:	2200      	movs	r2, #0
9001223a:	e7ea      	b.n	90012212 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9001223c:	455b      	cmp	r3, fp
9001223e:	d902      	bls.n	90012246 <prvTimerTask+0x1e6>
90012240:	2800      	cmp	r0, #0
90012242:	f43f af7b 	beq.w	9001213c <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012246:	1d39      	adds	r1, r7, #4
90012248:	6830      	ldr	r0, [r6, #0]
9001224a:	f7fd fdb9 	bl	9000fdc0 <vListInsert>
	return xProcessTimerNow;
9001224e:	e73b      	b.n	900120c8 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012250:	6830      	ldr	r0, [r6, #0]
90012252:	f7fd fdb5 	bl	9000fdc0 <vListInsert>
90012256:	e737      	b.n	900120c8 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90012258:	f8db 0018 	ldr.w	r0, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001225c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90012260:	183b      	adds	r3, r7, r0
	if( xNextExpiryTime <= xTimeNow )
90012262:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012264:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90012268:	d321      	bcc.n	900122ae <prvTimerTask+0x24e>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001226a:	ebaa 0a07 	sub.w	sl, sl, r7
9001226e:	4550      	cmp	r0, sl
90012270:	d828      	bhi.n	900122c4 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
90012272:	6823      	ldr	r3, [r4, #0]
90012274:	b173      	cbz	r3, 90012294 <prvTimerTask+0x234>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90012276:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
9001227a:	2700      	movs	r7, #0
9001227c:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001227e:	f7ff fdb3 	bl	90011de8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90012282:	463b      	mov	r3, r7
90012284:	463a      	mov	r2, r7
90012286:	a904      	add	r1, sp, #16
90012288:	6820      	ldr	r0, [r4, #0]
9001228a:	f7fe f91f 	bl	900104cc <xQueueGenericSend>
			configASSERT( xResult );
9001228e:	2800      	cmp	r0, #0
90012290:	f47f af16 	bne.w	900120c0 <prvTimerTask+0x60>
90012294:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012298:	f383 8811 	msr	BASEPRI, r3
9001229c:	f3bf 8f6f 	isb	sy
900122a0:	f3bf 8f4f 	dsb	sy
900122a4:	e7fe      	b.n	900122a4 <prvTimerTask+0x244>
							vPortFree( pxTimer );
900122a6:	4638      	mov	r0, r7
900122a8:	f7fd fd06 	bl	9000fcb8 <vPortFree>
900122ac:	e70c      	b.n	900120c8 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
900122ae:	4641      	mov	r1, r8
900122b0:	6830      	ldr	r0, [r6, #0]
900122b2:	f7fd fd85 	bl	9000fdc0 <vListInsert>
	return xProcessTimerNow;
900122b6:	e703      	b.n	900120c0 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900122b8:	4b0d      	ldr	r3, [pc, #52]	@ (900122f0 <prvTimerTask+0x290>)
900122ba:	1d39      	adds	r1, r7, #4
900122bc:	6818      	ldr	r0, [r3, #0]
900122be:	f7fd fd7f 	bl	9000fdc0 <vListInsert>
	return xProcessTimerNow;
900122c2:	e701      	b.n	900120c8 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
900122c4:	4b0a      	ldr	r3, [pc, #40]	@ (900122f0 <prvTimerTask+0x290>)
900122c6:	4641      	mov	r1, r8
900122c8:	6818      	ldr	r0, [r3, #0]
900122ca:	f7fd fd79 	bl	9000fdc0 <vListInsert>
	return xProcessTimerNow;
900122ce:	e6f7      	b.n	900120c0 <prvTimerTask+0x60>
900122d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900122d4:	f383 8811 	msr	BASEPRI, r3
900122d8:	f3bf 8f6f 	isb	sy
900122dc:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900122e0:	e7fe      	b.n	900122e0 <prvTimerTask+0x280>
900122e2:	bf00      	nop
900122e4:	24024564 	.word	0x24024564
900122e8:	24024554 	.word	0x24024554
900122ec:	2402455c 	.word	0x2402455c
900122f0:	24024560 	.word	0x24024560

900122f4 <xTimerCreateTimerTask>:
{
900122f4:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
900122f6:	4c23      	ldr	r4, [pc, #140]	@ (90012384 <xTimerCreateTimerTask+0x90>)
{
900122f8:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
900122fa:	f7fd fdfb 	bl	9000fef4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
900122fe:	6825      	ldr	r5, [r4, #0]
90012300:	b335      	cbz	r5, 90012350 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
90012302:	f7fd fe19 	bl	9000ff38 <vPortExitCritical>
	if( xTimerQueue != NULL )
90012306:	6823      	ldr	r3, [r4, #0]
90012308:	b1cb      	cbz	r3, 9001233e <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9001230a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9001230c:	aa07      	add	r2, sp, #28
9001230e:	a906      	add	r1, sp, #24
90012310:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
90012312:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
90012314:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
90012318:	f7fd fc02 	bl	9000fb20 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9001231c:	4623      	mov	r3, r4
9001231e:	9a07      	ldr	r2, [sp, #28]
90012320:	9500      	str	r5, [sp, #0]
90012322:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
90012326:	e9cd 1001 	strd	r1, r0, [sp, #4]
9001232a:	4917      	ldr	r1, [pc, #92]	@ (90012388 <xTimerCreateTimerTask+0x94>)
9001232c:	4817      	ldr	r0, [pc, #92]	@ (9001238c <xTimerCreateTimerTask+0x98>)
9001232e:	f7ff f967 	bl	90011600 <xTaskCreateStatic>
90012332:	4b17      	ldr	r3, [pc, #92]	@ (90012390 <xTimerCreateTimerTask+0x9c>)
90012334:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
90012336:	b110      	cbz	r0, 9001233e <xTimerCreateTimerTask+0x4a>
}
90012338:	2001      	movs	r0, #1
9001233a:	b009      	add	sp, #36	@ 0x24
9001233c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001233e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012342:	f383 8811 	msr	BASEPRI, r3
90012346:	f3bf 8f6f 	isb	sy
9001234a:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9001234e:	e7fe      	b.n	9001234e <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90012350:	4f10      	ldr	r7, [pc, #64]	@ (90012394 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90012352:	4e11      	ldr	r6, [pc, #68]	@ (90012398 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90012354:	4638      	mov	r0, r7
90012356:	f7fd fd15 	bl	9000fd84 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9001235a:	4630      	mov	r0, r6
9001235c:	f7fd fd12 	bl	9000fd84 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90012360:	4a0e      	ldr	r2, [pc, #56]	@ (9001239c <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012362:	9500      	str	r5, [sp, #0]
90012364:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90012366:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012368:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9001236a:	4a0d      	ldr	r2, [pc, #52]	@ (900123a0 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001236c:	4b0d      	ldr	r3, [pc, #52]	@ (900123a4 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9001236e:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012370:	4a0d      	ldr	r2, [pc, #52]	@ (900123a8 <xTimerCreateTimerTask+0xb4>)
90012372:	f7fd ff57 	bl	90010224 <xQueueGenericCreateStatic>
90012376:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90012378:	2800      	cmp	r0, #0
9001237a:	d0c2      	beq.n	90012302 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9001237c:	490b      	ldr	r1, [pc, #44]	@ (900123ac <xTimerCreateTimerTask+0xb8>)
9001237e:	f7fe fe99 	bl	900110b4 <vQueueAddToRegistry>
90012382:	e7be      	b.n	90012302 <xTimerCreateTimerTask+0xe>
90012384:	2402455c 	.word	0x2402455c
90012388:	9002ffb8 	.word	0x9002ffb8
9001238c:	90012061 	.word	0x90012061
90012390:	24024558 	.word	0x24024558
90012394:	2402457c 	.word	0x2402457c
90012398:	24024568 	.word	0x24024568
9001239c:	24024564 	.word	0x24024564
900123a0:	24024560 	.word	0x24024560
900123a4:	24024464 	.word	0x24024464
900123a8:	240244b4 	.word	0x240244b4
900123ac:	9002ffb0 	.word	0x9002ffb0

900123b0 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
900123b0:	b178      	cbz	r0, 900123d2 <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
900123b2:	2300      	movs	r3, #0
900123b4:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
900123b8:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
900123bc:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
900123c0:	b109      	cbz	r1, 900123c6 <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
900123c2:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
900123c6:	2301      	movs	r3, #1
  pdev->id = id;
900123c8:	7002      	strb	r2, [r0, #0]
  pdev->dev_state = USBD_STATE_DEFAULT;
900123ca:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
900123ce:	f7f1 bc0f 	b.w	90003bf0 <USBD_LL_Init>

  return ret;
}
900123d2:	2003      	movs	r0, #3
900123d4:	4770      	bx	lr
900123d6:	bf00      	nop

900123d8 <USBD_DeInit>:
  *         De-Initialize the device library
  * @param  pdev: device instance
  * @retval status: USBD Status
  */
USBD_StatusTypeDef USBD_DeInit(USBD_HandleTypeDef *pdev)
{
900123d8:	b510      	push	{r4, lr}
900123da:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  /* Disconnect the USB Device */
  (void)USBD_LL_Stop(pdev);
900123dc:	f7f1 fc54 	bl	90003c88 <USBD_LL_Stop>

  /* Set Default State */
  pdev->dev_state = USBD_STATE_DEFAULT;
900123e0:	2201      	movs	r2, #1
      }
    }
  }
#else
  /* Free Class Resources */
  if (pdev->pClass[0] != NULL)
900123e2:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
  pdev->dev_state = USBD_STATE_DEFAULT;
900123e6:	f884 229c 	strb.w	r2, [r4, #668]	@ 0x29c
  if (pdev->pClass[0] != NULL)
900123ea:	b11b      	cbz	r3, 900123f4 <USBD_DeInit+0x1c>
  {
    pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config);
900123ec:	685b      	ldr	r3, [r3, #4]
900123ee:	4620      	mov	r0, r4
900123f0:	7921      	ldrb	r1, [r4, #4]
900123f2:	4798      	blx	r3
  }

  pdev->pUserData[0] = NULL;
900123f4:	2300      	movs	r3, #0
  /* Free Device descriptors resources */
  pdev->pDesc = NULL;
  pdev->pConfDesc = NULL;

  /* DeInitialize low level driver */
  ret = USBD_LL_DeInit(pdev);
900123f6:	4620      	mov	r0, r4
  pdev->pUserData[0] = NULL;
900123f8:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
  pdev->pDesc = NULL;
900123fc:	f8c4 32b4 	str.w	r3, [r4, #692]	@ 0x2b4
  pdev->pConfDesc = NULL;
90012400:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0

  return ret;
}
90012404:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  ret = USBD_LL_DeInit(pdev);
90012408:	f7f1 bc26 	b.w	90003c58 <USBD_LL_DeInit>

9001240c <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
9001240c:	b510      	push	{r4, lr}
  uint16_t len = 0U;
9001240e:	2300      	movs	r3, #0
{
90012410:	b082      	sub	sp, #8
  uint16_t len = 0U;
90012412:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
90012416:	b189      	cbz	r1, 9001243c <USBD_RegisterClass+0x30>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
90012418:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
9001241a:	4604      	mov	r4, r0
  pdev->pClass[0] = pclass;
9001241c:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
90012420:	b123      	cbz	r3, 9001242c <USBD_RegisterClass+0x20>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
90012422:	f10d 0006 	add.w	r0, sp, #6
90012426:	4798      	blx	r3
90012428:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
9001242c:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
90012430:	2000      	movs	r0, #0
  pdev->NumClasses++;
90012432:	3301      	adds	r3, #1
90012434:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
}
90012438:	b002      	add	sp, #8
9001243a:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
9001243c:	2003      	movs	r0, #3
}
9001243e:	b002      	add	sp, #8
90012440:	bd10      	pop	{r4, pc}
90012442:	bf00      	nop

90012444 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
90012444:	f7f1 bc14 	b.w	90003c70 <USBD_LL_Start>

90012448 <USBD_Stop>:
  *         Stop the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_Stop(USBD_HandleTypeDef *pdev)
{
90012448:	b510      	push	{r4, lr}
9001244a:	4604      	mov	r4, r0
  /* Disconnect USB Device */
  (void)USBD_LL_Stop(pdev);
9001244c:	f7f1 fc1c 	bl	90003c88 <USBD_LL_Stop>
  }

  /* Reset the class ID */
  pdev->classId = 0U;
#else
  if (pdev->pClass[0] != NULL)
90012450:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
90012454:	b11b      	cbz	r3, 9001245e <USBD_Stop+0x16>
  {
    (void)pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config);
90012456:	685b      	ldr	r3, [r3, #4]
90012458:	4620      	mov	r0, r4
9001245a:	7921      	ldrb	r1, [r4, #4]
9001245c:	4798      	blx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return USBD_OK;
}
9001245e:	2000      	movs	r0, #0
90012460:	bd10      	pop	{r4, pc}
90012462:	bf00      	nop

90012464 <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
90012464:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
90012468:	b10b      	cbz	r3, 9001246e <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
9001246a:	681b      	ldr	r3, [r3, #0]
9001246c:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
9001246e:	4618      	mov	r0, r3
90012470:	4770      	bx	lr
90012472:	bf00      	nop

90012474 <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
90012474:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
90012476:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9001247a:	685b      	ldr	r3, [r3, #4]
9001247c:	4798      	blx	r3
  {
    ret = USBD_FAIL;
9001247e:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
90012480:	bf18      	it	ne
90012482:	2003      	movne	r0, #3
90012484:	bd08      	pop	{r3, pc}
90012486:	bf00      	nop

90012488 <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
90012488:	b538      	push	{r3, r4, r5, lr}
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
9001248a:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
{
9001248e:	4604      	mov	r4, r0
  USBD_ParseSetupRequest(&pdev->request, psetup);
90012490:	4628      	mov	r0, r5
90012492:	f000 fc25 	bl	90012ce0 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;

  pdev->ep0_data_len = pdev->request.wLength;
90012496:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0

  switch (pdev->request.bmRequest & 0x1FU)
9001249a:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
9001249e:	2201      	movs	r2, #1
  pdev->ep0_data_len = pdev->request.wLength;
900124a0:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
900124a4:	f001 031f 	and.w	r3, r1, #31
  pdev->ep0_state = USBD_EP0_SETUP;
900124a8:	f8c4 2294 	str.w	r2, [r4, #660]	@ 0x294
  switch (pdev->request.bmRequest & 0x1FU)
900124ac:	4293      	cmp	r3, r2
900124ae:	d009      	beq.n	900124c4 <USBD_LL_SetupStage+0x3c>
900124b0:	2b02      	cmp	r3, #2
900124b2:	d013      	beq.n	900124dc <USBD_LL_SetupStage+0x54>
900124b4:	b163      	cbz	r3, 900124d0 <USBD_LL_SetupStage+0x48>
    case USB_REQ_RECIPIENT_ENDPOINT:
      ret = USBD_StdEPReq(pdev, &pdev->request);
      break;

    default:
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
900124b6:	4620      	mov	r0, r4
900124b8:	f001 0180 	and.w	r1, r1, #128	@ 0x80
      break;
  }

  return ret;
}
900124bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
900124c0:	f7f1 bc08 	b.w	90003cd4 <USBD_LL_StallEP>
      ret = USBD_StdItfReq(pdev, &pdev->request);
900124c4:	4629      	mov	r1, r5
900124c6:	4620      	mov	r0, r4
}
900124c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
900124cc:	f000 bb1c 	b.w	90012b08 <USBD_StdItfReq>
      ret = USBD_StdDevReq(pdev, &pdev->request);
900124d0:	4629      	mov	r1, r5
900124d2:	4620      	mov	r0, r4
}
900124d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
900124d8:	f000 b958 	b.w	9001278c <USBD_StdDevReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
900124dc:	4629      	mov	r1, r5
900124de:	4620      	mov	r0, r4
}
900124e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
900124e4:	f000 bb4c 	b.w	90012b80 <USBD_StdEPReq>

900124e8 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
900124e8:	b570      	push	{r4, r5, r6, lr}
900124ea:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  if (epnum == 0U)
900124ec:	b931      	cbnz	r1, 900124fc <USBD_LL_DataOutStage+0x14>
900124ee:	460b      	mov	r3, r1
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
900124f0:	f8d0 1294 	ldr.w	r1, [r0, #660]	@ 0x294
900124f4:	2903      	cmp	r1, #3
900124f6:	d010      	beq.n	9001251a <USBD_LL_DataOutStage+0x32>
      }
    }
  }

  return USBD_OK;
}
900124f8:	2000      	movs	r0, #0
900124fa:	bd70      	pop	{r4, r5, r6, pc}
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
900124fc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012500:	2b03      	cmp	r3, #3
90012502:	d1f9      	bne.n	900124f8 <USBD_LL_DataOutStage+0x10>
        if (pdev->pClass[idx]->DataOut != NULL)
90012504:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
90012508:	699b      	ldr	r3, [r3, #24]
9001250a:	2b00      	cmp	r3, #0
9001250c:	d0f4      	beq.n	900124f8 <USBD_LL_DataOutStage+0x10>
          pdev->classId = idx;
9001250e:	2200      	movs	r2, #0
}
90012510:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
90012514:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
90012518:	4718      	bx	r3
      if (pep->rem_length > pep->maxpacket)
9001251a:	e9d0 1557 	ldrd	r1, r5, [r0, #348]	@ 0x15c
9001251e:	42a9      	cmp	r1, r5
90012520:	d808      	bhi.n	90012534 <USBD_LL_DataOutStage+0x4c>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012522:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
90012526:	2a03      	cmp	r2, #3
90012528:	d00f      	beq.n	9001254a <USBD_LL_DataOutStage+0x62>
        (void)USBD_CtlSendStatus(pdev);
9001252a:	4620      	mov	r0, r4
9001252c:	f000 fe28 	bl	90013180 <USBD_CtlSendStatus>
}
90012530:	2000      	movs	r0, #0
90012532:	bd70      	pop	{r4, r5, r6, pc}
        pep->rem_length -= pep->maxpacket;
90012534:	1b4b      	subs	r3, r1, r5
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
90012536:	4611      	mov	r1, r2
90012538:	462a      	mov	r2, r5
9001253a:	429d      	cmp	r5, r3
        pep->rem_length -= pep->maxpacket;
9001253c:	f8c0 315c 	str.w	r3, [r0, #348]	@ 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
90012540:	bf28      	it	cs
90012542:	461a      	movcs	r2, r3
90012544:	f000 fe12 	bl	9001316c <USBD_CtlContinueRx>
90012548:	e7d6      	b.n	900124f8 <USBD_LL_DataOutStage+0x10>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
9001254a:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
9001254e:	6912      	ldr	r2, [r2, #16]
90012550:	2a00      	cmp	r2, #0
90012552:	d0ea      	beq.n	9001252a <USBD_LL_DataOutStage+0x42>
              pdev->classId = idx;
90012554:	f8c0 32d4 	str.w	r3, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
90012558:	4790      	blx	r2
9001255a:	e7e6      	b.n	9001252a <USBD_LL_DataOutStage+0x42>

9001255c <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
9001255c:	b570      	push	{r4, r5, r6, lr}
9001255e:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
90012560:	b959      	cbnz	r1, 9001257a <USBD_LL_DataInStage+0x1e>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
90012562:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
90012566:	2b02      	cmp	r3, #2
90012568:	d016      	beq.n	90012598 <USBD_LL_DataInStage+0x3c>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
9001256a:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
9001256e:	b113      	cbz	r3, 90012576 <USBD_LL_DataInStage+0x1a>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
90012570:	2300      	movs	r3, #0
90012572:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
90012576:	2000      	movs	r0, #0
90012578:	bd70      	pop	{r4, r5, r6, pc}
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
9001257a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001257e:	2b03      	cmp	r3, #3
90012580:	d1f9      	bne.n	90012576 <USBD_LL_DataInStage+0x1a>
        if (pdev->pClass[idx]->DataIn != NULL)
90012582:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
90012586:	695b      	ldr	r3, [r3, #20]
90012588:	2b00      	cmp	r3, #0
9001258a:	d0f4      	beq.n	90012576 <USBD_LL_DataInStage+0x1a>
          pdev->classId = idx;
9001258c:	2200      	movs	r2, #0
}
9001258e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
90012592:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
90012596:	4718      	bx	r3
      if (pep->rem_length > pep->maxpacket)
90012598:	e9d0 3607 	ldrd	r3, r6, [r0, #28]
9001259c:	460d      	mov	r5, r1
9001259e:	42b3      	cmp	r3, r6
900125a0:	d810      	bhi.n	900125c4 <USBD_LL_DataInStage+0x68>
        if ((pep->maxpacket == pep->rem_length) &&
900125a2:	d01c      	beq.n	900125de <USBD_LL_DataInStage+0x82>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
900125a4:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
900125a8:	2b03      	cmp	r3, #3
900125aa:	d02b      	beq.n	90012604 <USBD_LL_DataInStage+0xa8>
          (void)USBD_LL_StallEP(pdev, 0x80U);
900125ac:	2180      	movs	r1, #128	@ 0x80
900125ae:	4620      	mov	r0, r4
900125b0:	f7f1 fb90 	bl	90003cd4 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
900125b4:	4620      	mov	r0, r4
900125b6:	f000 fdef 	bl	90013198 <USBD_CtlReceiveStatus>
    if (pdev->dev_test_mode != 0U)
900125ba:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
900125be:	2b00      	cmp	r3, #0
900125c0:	d0d9      	beq.n	90012576 <USBD_LL_DataInStage+0x1a>
900125c2:	e7d5      	b.n	90012570 <USBD_LL_DataInStage+0x14>
        pep->rem_length -= pep->maxpacket;
900125c4:	1b9b      	subs	r3, r3, r6
        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
900125c6:	4611      	mov	r1, r2
        pep->rem_length -= pep->maxpacket;
900125c8:	61c3      	str	r3, [r0, #28]
        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
900125ca:	461a      	mov	r2, r3
900125cc:	f000 fdc4 	bl	90013158 <USBD_CtlContinueSendData>
        (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
900125d0:	462b      	mov	r3, r5
900125d2:	462a      	mov	r2, r5
900125d4:	4629      	mov	r1, r5
900125d6:	4620      	mov	r0, r4
900125d8:	f7f1 fbc0 	bl	90003d5c <USBD_LL_PrepareReceive>
900125dc:	e7c5      	b.n	9001256a <USBD_LL_DataInStage+0xe>
            (pep->total_length >= pep->maxpacket) &&
900125de:	6982      	ldr	r2, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
900125e0:	4293      	cmp	r3, r2
900125e2:	d8df      	bhi.n	900125a4 <USBD_LL_DataInStage+0x48>
            (pep->total_length >= pep->maxpacket) &&
900125e4:	f8d0 3298 	ldr.w	r3, [r0, #664]	@ 0x298
900125e8:	429a      	cmp	r2, r3
900125ea:	d2db      	bcs.n	900125a4 <USBD_LL_DataInStage+0x48>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
900125ec:	460a      	mov	r2, r1
900125ee:	f000 fdb3 	bl	90013158 <USBD_CtlContinueSendData>
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
900125f2:	462b      	mov	r3, r5
900125f4:	462a      	mov	r2, r5
900125f6:	4629      	mov	r1, r5
900125f8:	4620      	mov	r0, r4
          pdev->ep0_data_len = 0U;
900125fa:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
900125fe:	f7f1 fbad 	bl	90003d5c <USBD_LL_PrepareReceive>
90012602:	e7b2      	b.n	9001256a <USBD_LL_DataInStage+0xe>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
90012604:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
90012608:	68db      	ldr	r3, [r3, #12]
9001260a:	2b00      	cmp	r3, #0
9001260c:	d0ce      	beq.n	900125ac <USBD_LL_DataInStage+0x50>
              pdev->classId = 0U;
9001260e:	2200      	movs	r2, #0
              pdev->pClass[0]->EP0_TxSent(pdev);
90012610:	4620      	mov	r0, r4
              pdev->classId = 0U;
90012612:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
90012616:	4798      	blx	r3
90012618:	e7c8      	b.n	900125ac <USBD_LL_DataInStage+0x50>
9001261a:	bf00      	nop

9001261c <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
9001261c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
  pdev->ep0_state = USBD_EP0_IDLE;
9001261e:	2100      	movs	r1, #0
  pdev->dev_state = USBD_STATE_DEFAULT;
90012620:	2201      	movs	r2, #1
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
90012622:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
{
90012626:	4604      	mov	r4, r0
  pdev->dev_state = USBD_STATE_DEFAULT;
90012628:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
  pdev->dev_config = 0U;
9001262c:	6041      	str	r1, [r0, #4]
  pdev->ep0_state = USBD_EP0_IDLE;
9001262e:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_remote_wakeup = 0U;
90012632:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
90012636:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
9001263a:	b11b      	cbz	r3, 90012644 <USBD_LL_Reset+0x28>
  {
    if (pdev->pClass[0]->DeInit != NULL)
9001263c:	685b      	ldr	r3, [r3, #4]
9001263e:	b10b      	cbz	r3, 90012644 <USBD_LL_Reset+0x28>
    {
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
90012640:	4798      	blx	r3
90012642:	b9b0      	cbnz	r0, 90012672 <USBD_LL_Reset+0x56>
  USBD_StatusTypeDef ret = USBD_OK;
90012644:	2700      	movs	r7, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
90012646:	2340      	movs	r3, #64	@ 0x40
90012648:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
9001264a:	2601      	movs	r6, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
9001264c:	4620      	mov	r0, r4

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
9001264e:	461d      	mov	r5, r3
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
90012650:	4611      	mov	r1, r2
90012652:	f7f1 fb25 	bl	90003ca0 <USBD_LL_OpenEP>

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
90012656:	2200      	movs	r2, #0
90012658:	462b      	mov	r3, r5
9001265a:	2180      	movs	r1, #128	@ 0x80
9001265c:	4620      	mov	r0, r4
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
9001265e:	f8a4 6164 	strh.w	r6, [r4, #356]	@ 0x164
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
90012662:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
90012666:	f7f1 fb1b 	bl	90003ca0 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;

  return ret;
}
9001266a:	4638      	mov	r0, r7
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
9001266c:	84a6      	strh	r6, [r4, #36]	@ 0x24
  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
9001266e:	6225      	str	r5, [r4, #32]
}
90012670:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        ret = USBD_FAIL;
90012672:	2703      	movs	r7, #3
90012674:	e7e7      	b.n	90012646 <USBD_LL_Reset+0x2a>
90012676:	bf00      	nop

90012678 <USBD_LL_SetSpeed>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
90012678:	4603      	mov	r3, r0
  pdev->dev_speed = speed;

  return USBD_OK;
}
9001267a:	2000      	movs	r0, #0
  pdev->dev_speed = speed;
9001267c:	7419      	strb	r1, [r3, #16]
}
9001267e:	4770      	bx	lr

90012680 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
90012680:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
{
90012684:	4603      	mov	r3, r0
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
90012686:	2a04      	cmp	r2, #4
90012688:	d004      	beq.n	90012694 <USBD_LL_Suspend+0x14>
  {
    pdev->dev_old_state = pdev->dev_state;
9001268a:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
9001268e:	b2d2      	uxtb	r2, r2
90012690:	f880 229d 	strb.w	r2, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
90012694:	2204      	movs	r2, #4

  return USBD_OK;
}
90012696:	2000      	movs	r0, #0
  pdev->dev_state = USBD_STATE_SUSPENDED;
90012698:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
}
9001269c:	4770      	bx	lr
9001269e:	bf00      	nop

900126a0 <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
900126a0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
900126a4:	2b04      	cmp	r3, #4
900126a6:	d104      	bne.n	900126b2 <USBD_LL_Resume+0x12>
  {
    pdev->dev_state = pdev->dev_old_state;
900126a8:	f890 329d 	ldrb.w	r3, [r0, #669]	@ 0x29d
900126ac:	b2db      	uxtb	r3, r3
900126ae:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
900126b2:	2000      	movs	r0, #0
900126b4:	4770      	bx	lr
900126b6:	bf00      	nop

900126b8 <USBD_LL_SOF>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
900126b8:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
900126bc:	2a03      	cmp	r2, #3
900126be:	d001      	beq.n	900126c4 <USBD_LL_SOF+0xc>
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
900126c0:	2000      	movs	r0, #0
900126c2:	4770      	bx	lr
{
900126c4:	b508      	push	{r3, lr}
    if (pdev->pClass[0] != NULL)
900126c6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
900126ca:	b113      	cbz	r3, 900126d2 <USBD_LL_SOF+0x1a>
      if (pdev->pClass[0]->SOF != NULL)
900126cc:	69db      	ldr	r3, [r3, #28]
900126ce:	b103      	cbz	r3, 900126d2 <USBD_LL_SOF+0x1a>
        (void)pdev->pClass[0]->SOF(pdev);
900126d0:	4798      	blx	r3
}
900126d2:	2000      	movs	r0, #0
900126d4:	bd08      	pop	{r3, pc}
900126d6:	bf00      	nop

900126d8 <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
900126d8:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
900126dc:	32ae      	adds	r2, #174	@ 0xae
900126de:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
900126e2:	b162      	cbz	r2, 900126fe <USBD_LL_IsoINIncomplete+0x26>
{
900126e4:	b508      	push	{r3, lr}
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
900126e6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
900126ea:	2b03      	cmp	r3, #3
900126ec:	d001      	beq.n	900126f2 <USBD_LL_IsoINIncomplete+0x1a>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
900126ee:	2000      	movs	r0, #0
}
900126f0:	bd08      	pop	{r3, pc}
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
900126f2:	6a13      	ldr	r3, [r2, #32]
900126f4:	2b00      	cmp	r3, #0
900126f6:	d0fa      	beq.n	900126ee <USBD_LL_IsoINIncomplete+0x16>
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
900126f8:	4798      	blx	r3
  return USBD_OK;
900126fa:	2000      	movs	r0, #0
}
900126fc:	bd08      	pop	{r3, pc}
    return USBD_FAIL;
900126fe:	2003      	movs	r0, #3
}
90012700:	4770      	bx	lr
90012702:	bf00      	nop

90012704 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
90012704:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
90012708:	32ae      	adds	r2, #174	@ 0xae
9001270a:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
9001270e:	b162      	cbz	r2, 9001272a <USBD_LL_IsoOUTIncomplete+0x26>
{
90012710:	b508      	push	{r3, lr}
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012712:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012716:	2b03      	cmp	r3, #3
90012718:	d001      	beq.n	9001271e <USBD_LL_IsoOUTIncomplete+0x1a>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
9001271a:	2000      	movs	r0, #0
}
9001271c:	bd08      	pop	{r3, pc}
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
9001271e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
90012720:	2b00      	cmp	r3, #0
90012722:	d0fa      	beq.n	9001271a <USBD_LL_IsoOUTIncomplete+0x16>
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
90012724:	4798      	blx	r3
  return USBD_OK;
90012726:	2000      	movs	r0, #0
}
90012728:	bd08      	pop	{r3, pc}
    return USBD_FAIL;
9001272a:	2003      	movs	r0, #3
}
9001272c:	4770      	bx	lr
9001272e:	bf00      	nop

90012730 <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
90012730:	2000      	movs	r0, #0
90012732:	4770      	bx	lr

90012734 <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
90012734:	2101      	movs	r1, #1
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
90012736:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
  pdev->dev_state = USBD_STATE_DEFAULT;
9001273a:	f880 129c 	strb.w	r1, [r0, #668]	@ 0x29c
  if (pdev->pClass[0] != NULL)
9001273e:	b142      	cbz	r2, 90012752 <USBD_LL_DevDisconnected+0x1e>
  {
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
90012740:	6852      	ldr	r2, [r2, #4]
90012742:	7901      	ldrb	r1, [r0, #4]
{
90012744:	b508      	push	{r3, lr}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
90012746:	4790      	blx	r2
90012748:	b908      	cbnz	r0, 9001274e <USBD_LL_DevDisconnected+0x1a>
  USBD_StatusTypeDef   ret = USBD_OK;
9001274a:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
9001274c:	bd08      	pop	{r3, pc}
      ret = USBD_FAIL;
9001274e:	2003      	movs	r0, #3
}
90012750:	bd08      	pop	{r3, pc}
  USBD_StatusTypeDef   ret = USBD_OK;
90012752:	2000      	movs	r0, #0
}
90012754:	4770      	bx	lr
90012756:	bf00      	nop

90012758 <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
90012758:	2000      	movs	r0, #0
9001275a:	4770      	bx	lr

9001275c <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
9001275c:	2000      	movs	r0, #0
9001275e:	4770      	bx	lr

90012760 <USBD_GetEpDesc>:
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
90012760:	7802      	ldrb	r2, [r0, #0]
90012762:	f8b0 c002 	ldrh.w	ip, [r0, #2]
90012766:	4613      	mov	r3, r2
90012768:	4594      	cmp	ip, r2
9001276a:	d803      	bhi.n	90012774 <USBD_GetEpDesc+0x14>
9001276c:	e00c      	b.n	90012788 <USBD_GetEpDesc+0x28>
  {
    ptr = desc->bLength;

    while (ptr < desc->wTotalLength)
9001276e:	459c      	cmp	ip, r3
90012770:	d90a      	bls.n	90012788 <USBD_GetEpDesc+0x28>
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
90012772:	7802      	ldrb	r2, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
90012774:	4410      	add	r0, r2
  *ptr += pnext->bLength;
90012776:	4413      	add	r3, r2
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
90012778:	7842      	ldrb	r2, [r0, #1]
  *ptr += pnext->bLength;
9001277a:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
9001277c:	2a05      	cmp	r2, #5
9001277e:	d1f6      	bne.n	9001276e <USBD_GetEpDesc+0xe>
        if (pEpDesc->bEndpointAddress == EpAddr)
90012780:	7882      	ldrb	r2, [r0, #2]
90012782:	428a      	cmp	r2, r1
90012784:	d1f3      	bne.n	9001276e <USBD_GetEpDesc+0xe>
}
90012786:	4770      	bx	lr
  USBD_EpDescTypeDef *pEpDesc = NULL;
90012788:	2000      	movs	r0, #0
}
9001278a:	4770      	bx	lr

9001278c <USBD_StdDevReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdDevReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
9001278c:	b570      	push	{r4, r5, r6, lr}
9001278e:	780b      	ldrb	r3, [r1, #0]
90012790:	b082      	sub	sp, #8
90012792:	460d      	mov	r5, r1
90012794:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret = USBD_OK;

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012796:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001279a:	2b20      	cmp	r3, #32
9001279c:	d00e      	beq.n	900127bc <USBD_StdDevReq+0x30>
9001279e:	2b40      	cmp	r3, #64	@ 0x40
900127a0:	d00c      	beq.n	900127bc <USBD_StdDevReq+0x30>
900127a2:	b1bb      	cbz	r3, 900127d4 <USBD_StdDevReq+0x48>
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
900127a4:	2180      	movs	r1, #128	@ 0x80
900127a6:	4620      	mov	r0, r4
900127a8:	f7f1 fa94 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
900127ac:	2100      	movs	r1, #0
900127ae:	4620      	mov	r0, r4
900127b0:	f7f1 fa90 	bl	90003cd4 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
900127b4:	2500      	movs	r5, #0
}
900127b6:	4628      	mov	r0, r5
900127b8:	b002      	add	sp, #8
900127ba:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
900127bc:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
900127c0:	4629      	mov	r1, r5
900127c2:	4620      	mov	r0, r4
900127c4:	33ae      	adds	r3, #174	@ 0xae
900127c6:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
900127ca:	689b      	ldr	r3, [r3, #8]
}
900127cc:	b002      	add	sp, #8
900127ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
900127d2:	4718      	bx	r3
      switch (req->bRequest)
900127d4:	784b      	ldrb	r3, [r1, #1]
900127d6:	2b09      	cmp	r3, #9
900127d8:	d8e4      	bhi.n	900127a4 <USBD_StdDevReq+0x18>
900127da:	a201      	add	r2, pc, #4	@ (adr r2, 900127e0 <USBD_StdDevReq+0x54>)
900127dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
900127e0:	90012841 	.word	0x90012841
900127e4:	90012869 	.word	0x90012869
900127e8:	900127a5 	.word	0x900127a5
900127ec:	90012887 	.word	0x90012887
900127f0:	900127a5 	.word	0x900127a5
900127f4:	9001289f 	.word	0x9001289f
900127f8:	900128df 	.word	0x900128df
900127fc:	900127a5 	.word	0x900127a5
90012800:	90012935 	.word	0x90012935
90012804:	90012809 	.word	0x90012809
  cfgidx = (uint8_t)(req->wValue);
90012808:	7889      	ldrb	r1, [r1, #2]
9001280a:	4db5      	ldr	r5, [pc, #724]	@ (90012ae0 <USBD_StdDevReq+0x354>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
9001280c:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
9001280e:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
90012810:	f200 815e 	bhi.w	90012ad0 <USBD_StdDevReq+0x344>
  switch (pdev->dev_state)
90012814:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012818:	2b02      	cmp	r3, #2
9001281a:	b2de      	uxtb	r6, r3
9001281c:	f000 8145 	beq.w	90012aaa <USBD_StdDevReq+0x31e>
90012820:	2e03      	cmp	r6, #3
90012822:	f000 8122 	beq.w	90012a6a <USBD_StdDevReq+0x2de>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012826:	2180      	movs	r1, #128	@ 0x80
90012828:	f7f1 fa54 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
9001282c:	2100      	movs	r1, #0
9001282e:	4620      	mov	r0, r4
90012830:	f7f1 fa50 	bl	90003cd4 <USBD_LL_StallEP>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
90012834:	7829      	ldrb	r1, [r5, #0]
90012836:	4620      	mov	r0, r4
90012838:	f7ff fe1c 	bl	90012474 <USBD_ClrClassConfig>
    return USBD_FAIL;
9001283c:	2503      	movs	r5, #3
9001283e:	e7ba      	b.n	900127b6 <USBD_StdDevReq+0x2a>
  switch (pdev->dev_state)
90012840:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012844:	3b01      	subs	r3, #1
90012846:	2b02      	cmp	r3, #2
90012848:	d8ac      	bhi.n	900127a4 <USBD_StdDevReq+0x18>
      if (req->wLength != 0x2U)
9001284a:	88ca      	ldrh	r2, [r1, #6]
9001284c:	2a02      	cmp	r2, #2
9001284e:	d1a9      	bne.n	900127a4 <USBD_StdDevReq+0x18>
      if (pdev->dev_remote_wakeup != 0U)
90012850:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
90012854:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
90012856:	2b00      	cmp	r3, #0
90012858:	bf0c      	ite	eq
9001285a:	2301      	moveq	r3, #1
9001285c:	2303      	movne	r3, #3
9001285e:	f841 3f0c 	str.w	r3, [r1, #12]!
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
90012862:	f000 fc6b 	bl	9001313c <USBD_CtlSendData>
      break;
90012866:	e7a5      	b.n	900127b4 <USBD_StdDevReq+0x28>
  switch (pdev->dev_state)
90012868:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001286c:	3b01      	subs	r3, #1
9001286e:	2b02      	cmp	r3, #2
90012870:	d898      	bhi.n	900127a4 <USBD_StdDevReq+0x18>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
90012872:	884b      	ldrh	r3, [r1, #2]
90012874:	2b01      	cmp	r3, #1
90012876:	d19d      	bne.n	900127b4 <USBD_StdDevReq+0x28>
        pdev->dev_remote_wakeup = 0U;
90012878:	2300      	movs	r3, #0
        (void)USBD_CtlSendStatus(pdev);
9001287a:	4620      	mov	r0, r4
        pdev->dev_remote_wakeup = 0U;
9001287c:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
        (void)USBD_CtlSendStatus(pdev);
90012880:	f000 fc7e 	bl	90013180 <USBD_CtlSendStatus>
90012884:	e796      	b.n	900127b4 <USBD_StdDevReq+0x28>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
90012886:	884b      	ldrh	r3, [r1, #2]
90012888:	2b01      	cmp	r3, #1
9001288a:	d0f6      	beq.n	9001287a <USBD_StdDevReq+0xee>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
9001288c:	2b02      	cmp	r3, #2
9001288e:	d189      	bne.n	900127a4 <USBD_StdDevReq+0x18>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
90012890:	888b      	ldrh	r3, [r1, #4]
90012892:	0a1b      	lsrs	r3, r3, #8
90012894:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
90012898:	f000 fc72 	bl	90013180 <USBD_CtlSendStatus>
9001289c:	e78a      	b.n	900127b4 <USBD_StdDevReq+0x28>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
9001289e:	888b      	ldrh	r3, [r1, #4]
900128a0:	2b00      	cmp	r3, #0
900128a2:	f47f af7f 	bne.w	900127a4 <USBD_StdDevReq+0x18>
900128a6:	88cb      	ldrh	r3, [r1, #6]
900128a8:	2b00      	cmp	r3, #0
900128aa:	f47f af7b 	bne.w	900127a4 <USBD_StdDevReq+0x18>
900128ae:	884d      	ldrh	r5, [r1, #2]
900128b0:	2d7f      	cmp	r5, #127	@ 0x7f
900128b2:	f63f af77 	bhi.w	900127a4 <USBD_StdDevReq+0x18>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
900128b6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
900128ba:	2b03      	cmp	r3, #3
900128bc:	f43f af72 	beq.w	900127a4 <USBD_StdDevReq+0x18>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
900128c0:	b2e9      	uxtb	r1, r5
      pdev->dev_address = dev_addr;
900128c2:	f880 129e 	strb.w	r1, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
900128c6:	f7f1 fa31 	bl	90003d2c <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
900128ca:	4620      	mov	r0, r4
900128cc:	f000 fc58 	bl	90013180 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
900128d0:	2d00      	cmp	r5, #0
900128d2:	f000 8115 	beq.w	90012b00 <USBD_StdDevReq+0x374>
        pdev->dev_state = USBD_STATE_ADDRESSED;
900128d6:	2302      	movs	r3, #2
900128d8:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
900128dc:	e76a      	b.n	900127b4 <USBD_StdDevReq+0x28>
  switch (req->wValue >> 8)
900128de:	884a      	ldrh	r2, [r1, #2]
  uint16_t len = 0U;
900128e0:	2100      	movs	r1, #0
  switch (req->wValue >> 8)
900128e2:	0a13      	lsrs	r3, r2, #8
  uint16_t len = 0U;
900128e4:	f8ad 1006 	strh.w	r1, [sp, #6]
  switch (req->wValue >> 8)
900128e8:	3b01      	subs	r3, #1
900128ea:	2b0e      	cmp	r3, #14
900128ec:	f63f af5a 	bhi.w	900127a4 <USBD_StdDevReq+0x18>
900128f0:	a101      	add	r1, pc, #4	@ (adr r1, 900128f8 <USBD_StdDevReq+0x16c>)
900128f2:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
900128f6:	bf00      	nop
900128f8:	900129df 	.word	0x900129df
900128fc:	900129c5 	.word	0x900129c5
90012900:	900129ef 	.word	0x900129ef
90012904:	900127a5 	.word	0x900127a5
90012908:	900127a5 	.word	0x900127a5
9001290c:	90012995 	.word	0x90012995
90012910:	900129ab 	.word	0x900129ab
90012914:	900127a5 	.word	0x900127a5
90012918:	900127a5 	.word	0x900127a5
9001291c:	900127a5 	.word	0x900127a5
90012920:	900127a5 	.word	0x900127a5
90012924:	900127a5 	.word	0x900127a5
90012928:	900127a5 	.word	0x900127a5
9001292c:	900127a5 	.word	0x900127a5
90012930:	9001295d 	.word	0x9001295d
  if (req->wLength != 1U)
90012934:	88ca      	ldrh	r2, [r1, #6]
90012936:	2a01      	cmp	r2, #1
90012938:	f47f af34 	bne.w	900127a4 <USBD_StdDevReq+0x18>
    switch (pdev->dev_state)
9001293c:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
90012940:	2902      	cmp	r1, #2
90012942:	b2cb      	uxtb	r3, r1
90012944:	f200 808a 	bhi.w	90012a5c <USBD_StdDevReq+0x2d0>
90012948:	2b00      	cmp	r3, #0
9001294a:	f43f af2b 	beq.w	900127a4 <USBD_StdDevReq+0x18>
        pdev->dev_default_config = 0U;
9001294e:	4601      	mov	r1, r0
90012950:	2300      	movs	r3, #0
90012952:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
90012956:	f000 fbf1 	bl	9001313c <USBD_CtlSendData>
        break;
9001295a:	e72b      	b.n	900127b4 <USBD_StdDevReq+0x28>
      if (pdev->pDesc->GetBOSDescriptor != NULL)
9001295c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
90012960:	69db      	ldr	r3, [r3, #28]
90012962:	2b00      	cmp	r3, #0
90012964:	f43f af1e 	beq.w	900127a4 <USBD_StdDevReq+0x18>
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
90012968:	f10d 0106 	add.w	r1, sp, #6
9001296c:	7c20      	ldrb	r0, [r4, #16]
9001296e:	4798      	blx	r3
  if (req->wLength != 0U)
90012970:	88eb      	ldrh	r3, [r5, #6]
90012972:	2b00      	cmp	r3, #0
90012974:	d06e      	beq.n	90012a54 <USBD_StdDevReq+0x2c8>
    if (len != 0U)
90012976:	f8bd 2006 	ldrh.w	r2, [sp, #6]
9001297a:	2a00      	cmp	r2, #0
9001297c:	f43f af12 	beq.w	900127a4 <USBD_StdDevReq+0x18>
      len = MIN(len, req->wLength);
90012980:	429a      	cmp	r2, r3
      (void)USBD_CtlSendData(pdev, pbuf, len);
90012982:	4601      	mov	r1, r0
90012984:	4620      	mov	r0, r4
      len = MIN(len, req->wLength);
90012986:	bf28      	it	cs
90012988:	461a      	movcs	r2, r3
9001298a:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
9001298e:	f000 fbd5 	bl	9001313c <USBD_CtlSendData>
90012992:	e70f      	b.n	900127b4 <USBD_StdDevReq+0x28>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
90012994:	7c03      	ldrb	r3, [r0, #16]
90012996:	2b00      	cmp	r3, #0
90012998:	f47f af04 	bne.w	900127a4 <USBD_StdDevReq+0x18>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
9001299c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
900129a0:	f10d 0006 	add.w	r0, sp, #6
900129a4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900129a6:	4798      	blx	r3
  if (err != 0U)
900129a8:	e7e2      	b.n	90012970 <USBD_StdDevReq+0x1e4>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
900129aa:	7c03      	ldrb	r3, [r0, #16]
900129ac:	2b00      	cmp	r3, #0
900129ae:	f47f aef9 	bne.w	900127a4 <USBD_StdDevReq+0x18>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
900129b2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
900129b6:	f10d 0006 	add.w	r0, sp, #6
900129ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900129bc:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
900129be:	2307      	movs	r3, #7
900129c0:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
900129c2:	e7d5      	b.n	90012970 <USBD_StdDevReq+0x1e4>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
900129c4:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
900129c6:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
900129ca:	2a00      	cmp	r2, #0
900129cc:	f040 808a 	bne.w	90012ae4 <USBD_StdDevReq+0x358>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
900129d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900129d2:	f10d 0006 	add.w	r0, sp, #6
900129d6:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
900129d8:	2302      	movs	r3, #2
900129da:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
900129dc:	e7c8      	b.n	90012970 <USBD_StdDevReq+0x1e4>
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
900129de:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
900129e2:	f10d 0106 	add.w	r1, sp, #6
900129e6:	7c00      	ldrb	r0, [r0, #16]
900129e8:	681b      	ldr	r3, [r3, #0]
900129ea:	4798      	blx	r3
  if (err != 0U)
900129ec:	e7c0      	b.n	90012970 <USBD_StdDevReq+0x1e4>
      switch ((uint8_t)(req->wValue))
900129ee:	b2d2      	uxtb	r2, r2
900129f0:	2a05      	cmp	r2, #5
900129f2:	f63f aed7 	bhi.w	900127a4 <USBD_StdDevReq+0x18>
900129f6:	e8df f002 	tbb	[pc, r2]
900129fa:	1b21      	.short	0x1b21
900129fc:	03090f15 	.word	0x03090f15
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
90012a00:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
90012a04:	699b      	ldr	r3, [r3, #24]
90012a06:	2b00      	cmp	r3, #0
90012a08:	d1ae      	bne.n	90012968 <USBD_StdDevReq+0x1dc>
90012a0a:	e6cb      	b.n	900127a4 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
90012a0c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
90012a10:	695b      	ldr	r3, [r3, #20]
90012a12:	2b00      	cmp	r3, #0
90012a14:	d1a8      	bne.n	90012968 <USBD_StdDevReq+0x1dc>
90012a16:	e6c5      	b.n	900127a4 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
90012a18:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
90012a1c:	691b      	ldr	r3, [r3, #16]
90012a1e:	2b00      	cmp	r3, #0
90012a20:	d1a2      	bne.n	90012968 <USBD_StdDevReq+0x1dc>
90012a22:	e6bf      	b.n	900127a4 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
90012a24:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
90012a28:	68db      	ldr	r3, [r3, #12]
90012a2a:	2b00      	cmp	r3, #0
90012a2c:	d19c      	bne.n	90012968 <USBD_StdDevReq+0x1dc>
90012a2e:	e6b9      	b.n	900127a4 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
90012a30:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
90012a34:	689b      	ldr	r3, [r3, #8]
90012a36:	2b00      	cmp	r3, #0
90012a38:	d196      	bne.n	90012968 <USBD_StdDevReq+0x1dc>
90012a3a:	e6b3      	b.n	900127a4 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
90012a3c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
90012a40:	685b      	ldr	r3, [r3, #4]
90012a42:	2b00      	cmp	r3, #0
90012a44:	d190      	bne.n	90012968 <USBD_StdDevReq+0x1dc>
90012a46:	e6ad      	b.n	900127a4 <USBD_StdDevReq+0x18>
        pdev->dev_state = USBD_STATE_ADDRESSED;
90012a48:	2302      	movs	r3, #2
        pdev->dev_config = cfgidx;
90012a4a:	6041      	str	r1, [r0, #4]
        pdev->dev_state = USBD_STATE_ADDRESSED;
90012a4c:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        (void)USBD_ClrClassConfig(pdev, cfgidx);
90012a50:	f7ff fd10 	bl	90012474 <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
90012a54:	4620      	mov	r0, r4
90012a56:	f000 fb93 	bl	90013180 <USBD_CtlSendStatus>
90012a5a:	e6ab      	b.n	900127b4 <USBD_StdDevReq+0x28>
    switch (pdev->dev_state)
90012a5c:	2b03      	cmp	r3, #3
90012a5e:	f47f aea1 	bne.w	900127a4 <USBD_StdDevReq+0x18>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
90012a62:	1d01      	adds	r1, r0, #4
90012a64:	f000 fb6a 	bl	9001313c <USBD_CtlSendData>
        break;
90012a68:	e6a4      	b.n	900127b4 <USBD_StdDevReq+0x28>
      if (cfgidx == 0U)
90012a6a:	2900      	cmp	r1, #0
90012a6c:	d0ec      	beq.n	90012a48 <USBD_StdDevReq+0x2bc>
      else if (cfgidx != pdev->dev_config)
90012a6e:	6841      	ldr	r1, [r0, #4]
90012a70:	2901      	cmp	r1, #1
90012a72:	d0ef      	beq.n	90012a54 <USBD_StdDevReq+0x2c8>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
90012a74:	b2c9      	uxtb	r1, r1
90012a76:	f7ff fcfd 	bl	90012474 <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
90012a7a:	7829      	ldrb	r1, [r5, #0]
        ret = USBD_SetClassConfig(pdev, cfgidx);
90012a7c:	4620      	mov	r0, r4
        pdev->dev_config = cfgidx;
90012a7e:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
90012a80:	f7ff fcf0 	bl	90012464 <USBD_SetClassConfig>
        if (ret != USBD_OK)
90012a84:	4605      	mov	r5, r0
90012a86:	2800      	cmp	r0, #0
90012a88:	d0e4      	beq.n	90012a54 <USBD_StdDevReq+0x2c8>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012a8a:	2180      	movs	r1, #128	@ 0x80
90012a8c:	4620      	mov	r0, r4
90012a8e:	f7f1 f921 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012a92:	2100      	movs	r1, #0
90012a94:	4620      	mov	r0, r4
90012a96:	f7f1 f91d 	bl	90003cd4 <USBD_LL_StallEP>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
90012a9a:	7921      	ldrb	r1, [r4, #4]
90012a9c:	4620      	mov	r0, r4
90012a9e:	f7ff fce9 	bl	90012474 <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
90012aa2:	2302      	movs	r3, #2
90012aa4:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
90012aa8:	e685      	b.n	900127b6 <USBD_StdDevReq+0x2a>
      if (cfgidx != 0U)
90012aaa:	2900      	cmp	r1, #0
90012aac:	d0d2      	beq.n	90012a54 <USBD_StdDevReq+0x2c8>
        pdev->dev_config = cfgidx;
90012aae:	2101      	movs	r1, #1
90012ab0:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
90012ab2:	f7ff fcd7 	bl	90012464 <USBD_SetClassConfig>
        if (ret != USBD_OK)
90012ab6:	4605      	mov	r5, r0
90012ab8:	b1d8      	cbz	r0, 90012af2 <USBD_StdDevReq+0x366>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012aba:	2180      	movs	r1, #128	@ 0x80
90012abc:	4620      	mov	r0, r4
90012abe:	f7f1 f909 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012ac2:	2100      	movs	r1, #0
90012ac4:	4620      	mov	r0, r4
90012ac6:	f7f1 f905 	bl	90003cd4 <USBD_LL_StallEP>
          pdev->dev_state = USBD_STATE_ADDRESSED;
90012aca:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
90012ace:	e672      	b.n	900127b6 <USBD_StdDevReq+0x2a>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012ad0:	2180      	movs	r1, #128	@ 0x80
90012ad2:	f7f1 f8ff 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012ad6:	2100      	movs	r1, #0
90012ad8:	4620      	mov	r0, r4
90012ada:	f7f1 f8fb 	bl	90003cd4 <USBD_LL_StallEP>
    return USBD_FAIL;
90012ade:	e6ad      	b.n	9001283c <USBD_StdDevReq+0xb0>
90012ae0:	24024590 	.word	0x24024590
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
90012ae4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012ae6:	f10d 0006 	add.w	r0, sp, #6
90012aea:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
90012aec:	2302      	movs	r3, #2
90012aee:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
90012af0:	e73e      	b.n	90012970 <USBD_StdDevReq+0x1e4>
          (void)USBD_CtlSendStatus(pdev);
90012af2:	4620      	mov	r0, r4
90012af4:	f000 fb44 	bl	90013180 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
90012af8:	2303      	movs	r3, #3
90012afa:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
90012afe:	e659      	b.n	900127b4 <USBD_StdDevReq+0x28>
        pdev->dev_state = USBD_STATE_DEFAULT;
90012b00:	2301      	movs	r3, #1
90012b02:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
90012b06:	e655      	b.n	900127b4 <USBD_StdDevReq+0x28>

90012b08 <USBD_StdItfReq>:
{
90012b08:	b538      	push	{r3, r4, r5, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012b0a:	780b      	ldrb	r3, [r1, #0]
{
90012b0c:	460d      	mov	r5, r1
90012b0e:	4604      	mov	r4, r0
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012b10:	065a      	lsls	r2, r3, #25
90012b12:	d50c      	bpl.n	90012b2e <USBD_StdItfReq+0x26>
90012b14:	f003 0260 	and.w	r2, r3, #96	@ 0x60
90012b18:	2a40      	cmp	r2, #64	@ 0x40
90012b1a:	d008      	beq.n	90012b2e <USBD_StdItfReq+0x26>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012b1c:	2180      	movs	r1, #128	@ 0x80
90012b1e:	f7f1 f8d9 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012b22:	2100      	movs	r1, #0
90012b24:	4620      	mov	r0, r4
90012b26:	f7f1 f8d5 	bl	90003cd4 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
90012b2a:	2000      	movs	r0, #0
}
90012b2c:	bd38      	pop	{r3, r4, r5, pc}
      switch (pdev->dev_state)
90012b2e:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
90012b32:	3b01      	subs	r3, #1
90012b34:	2b02      	cmp	r3, #2
90012b36:	d802      	bhi.n	90012b3e <USBD_StdItfReq+0x36>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
90012b38:	7929      	ldrb	r1, [r5, #4]
90012b3a:	2901      	cmp	r1, #1
90012b3c:	d908      	bls.n	90012b50 <USBD_StdItfReq+0x48>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012b3e:	2180      	movs	r1, #128	@ 0x80
90012b40:	4620      	mov	r0, r4
90012b42:	f7f1 f8c7 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012b46:	2100      	movs	r1, #0
90012b48:	4620      	mov	r0, r4
90012b4a:	f7f1 f8c3 	bl	90003cd4 <USBD_LL_StallEP>
}
90012b4e:	e7ec      	b.n	90012b2a <USBD_StdItfReq+0x22>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
90012b50:	4620      	mov	r0, r4
90012b52:	f7ff fe01 	bl	90012758 <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
90012b56:	b988      	cbnz	r0, 90012b7c <USBD_StdItfReq+0x74>
              if (pdev->pClass[idx]->Setup != NULL)
90012b58:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
90012b5c:	689b      	ldr	r3, [r3, #8]
90012b5e:	b16b      	cbz	r3, 90012b7c <USBD_StdItfReq+0x74>
                pdev->classId = idx;
90012b60:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
90012b64:	4629      	mov	r1, r5
90012b66:	4620      	mov	r0, r4
90012b68:	4798      	blx	r3
            if ((req->wLength == 0U) && (ret == USBD_OK))
90012b6a:	88ea      	ldrh	r2, [r5, #6]
90012b6c:	2a00      	cmp	r2, #0
90012b6e:	d1dd      	bne.n	90012b2c <USBD_StdItfReq+0x24>
90012b70:	2800      	cmp	r0, #0
90012b72:	d1db      	bne.n	90012b2c <USBD_StdItfReq+0x24>
              (void)USBD_CtlSendStatus(pdev);
90012b74:	4620      	mov	r0, r4
90012b76:	f000 fb03 	bl	90013180 <USBD_CtlSendStatus>
90012b7a:	e7d6      	b.n	90012b2a <USBD_StdItfReq+0x22>
                ret = USBD_FAIL;
90012b7c:	2003      	movs	r0, #3
}
90012b7e:	bd38      	pop	{r3, r4, r5, pc}

90012b80 <USBD_StdEPReq>:
{
90012b80:	b530      	push	{r4, r5, lr}
90012b82:	460c      	mov	r4, r1
  ep_addr = LOBYTE(req->wIndex);
90012b84:	888a      	ldrh	r2, [r1, #4]
{
90012b86:	b083      	sub	sp, #12
90012b88:	4605      	mov	r5, r0
  ep_addr = LOBYTE(req->wIndex);
90012b8a:	7823      	ldrb	r3, [r4, #0]
90012b8c:	b2d1      	uxtb	r1, r2
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012b8e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90012b92:	2b20      	cmp	r3, #32
90012b94:	d01f      	beq.n	90012bd6 <USBD_StdEPReq+0x56>
90012b96:	2b40      	cmp	r3, #64	@ 0x40
90012b98:	d01d      	beq.n	90012bd6 <USBD_StdEPReq+0x56>
90012b9a:	b373      	cbz	r3, 90012bfa <USBD_StdEPReq+0x7a>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012b9c:	2180      	movs	r1, #128	@ 0x80
90012b9e:	4628      	mov	r0, r5
90012ba0:	f7f1 f898 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012ba4:	2100      	movs	r1, #0
90012ba6:	4628      	mov	r0, r5
90012ba8:	f7f1 f894 	bl	90003cd4 <USBD_LL_StallEP>
}
90012bac:	2000      	movs	r0, #0
90012bae:	b003      	add	sp, #12
90012bb0:	bd30      	pop	{r4, r5, pc}
          switch (pdev->dev_state)
90012bb2:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012bb6:	2b02      	cmp	r3, #2
90012bb8:	b2da      	uxtb	r2, r3
90012bba:	d05b      	beq.n	90012c74 <USBD_StdEPReq+0xf4>
90012bbc:	2a03      	cmp	r2, #3
90012bbe:	d1ed      	bne.n	90012b9c <USBD_StdEPReq+0x1c>
              if (req->wValue == USB_FEATURE_EP_HALT)
90012bc0:	8863      	ldrh	r3, [r4, #2]
90012bc2:	2b00      	cmp	r3, #0
90012bc4:	d1f2      	bne.n	90012bac <USBD_StdEPReq+0x2c>
                if ((ep_addr & 0x7FU) != 0x00U)
90012bc6:	064b      	lsls	r3, r1, #25
90012bc8:	f040 8081 	bne.w	90012cce <USBD_StdEPReq+0x14e>
                (void)USBD_CtlSendStatus(pdev);
90012bcc:	4628      	mov	r0, r5
90012bce:	9101      	str	r1, [sp, #4]
90012bd0:	f000 fad6 	bl	90013180 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
90012bd4:	9901      	ldr	r1, [sp, #4]
90012bd6:	4628      	mov	r0, r5
90012bd8:	f7ff fdc0 	bl	9001275c <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
90012bdc:	2800      	cmp	r0, #0
90012bde:	d1e5      	bne.n	90012bac <USBD_StdEPReq+0x2c>
                  if (pdev->pClass[idx]->Setup != NULL)
90012be0:	f8d5 32b8 	ldr.w	r3, [r5, #696]	@ 0x2b8
                  pdev->classId = idx;
90012be4:	f8c5 02d4 	str.w	r0, [r5, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
90012be8:	689b      	ldr	r3, [r3, #8]
90012bea:	2b00      	cmp	r3, #0
90012bec:	d0de      	beq.n	90012bac <USBD_StdEPReq+0x2c>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
90012bee:	4621      	mov	r1, r4
90012bf0:	4628      	mov	r0, r5
}
90012bf2:	b003      	add	sp, #12
90012bf4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
90012bf8:	4718      	bx	r3
      switch (req->bRequest)
90012bfa:	7863      	ldrb	r3, [r4, #1]
90012bfc:	2b01      	cmp	r3, #1
90012bfe:	d0d8      	beq.n	90012bb2 <USBD_StdEPReq+0x32>
90012c00:	2b03      	cmp	r3, #3
90012c02:	d025      	beq.n	90012c50 <USBD_StdEPReq+0xd0>
90012c04:	2b00      	cmp	r3, #0
90012c06:	d1c9      	bne.n	90012b9c <USBD_StdEPReq+0x1c>
          switch (pdev->dev_state)
90012c08:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012c0c:	2b02      	cmp	r3, #2
90012c0e:	b2d8      	uxtb	r0, r3
90012c10:	d039      	beq.n	90012c86 <USBD_StdEPReq+0x106>
90012c12:	2803      	cmp	r0, #3
90012c14:	d1c2      	bne.n	90012b9c <USBD_StdEPReq+0x1c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
90012c16:	f001 030f 	and.w	r3, r1, #15
              if ((ep_addr & 0x80U) == 0x80U)
90012c1a:	0612      	lsls	r2, r2, #24
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
90012c1c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90012c20:	eb05 0383 	add.w	r3, r5, r3, lsl #2
              if ((ep_addr & 0x80U) == 0x80U)
90012c24:	d440      	bmi.n	90012ca8 <USBD_StdEPReq+0x128>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
90012c26:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
90012c2a:	2b00      	cmp	r3, #0
90012c2c:	d0b6      	beq.n	90012b9c <USBD_StdEPReq+0x1c>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90012c2e:	f001 037f 	and.w	r3, r1, #127	@ 0x7f
90012c32:	2414      	movs	r4, #20
90012c34:	fb04 5403 	mla	r4, r4, r3, r5
90012c38:	f504 74aa 	add.w	r4, r4, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
90012c3c:	2b00      	cmp	r3, #0
90012c3e:	d13f      	bne.n	90012cc0 <USBD_StdEPReq+0x140>
{
90012c40:	2300      	movs	r3, #0
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
90012c42:	2202      	movs	r2, #2
90012c44:	4621      	mov	r1, r4
90012c46:	4628      	mov	r0, r5
                pep->status = 0x0000U;
90012c48:	6023      	str	r3, [r4, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
90012c4a:	f000 fa77 	bl	9001313c <USBD_CtlSendData>
              break;
90012c4e:	e7ad      	b.n	90012bac <USBD_StdEPReq+0x2c>
          switch (pdev->dev_state)
90012c50:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012c54:	2b02      	cmp	r3, #2
90012c56:	b2da      	uxtb	r2, r3
90012c58:	d00c      	beq.n	90012c74 <USBD_StdEPReq+0xf4>
90012c5a:	2a03      	cmp	r2, #3
90012c5c:	d19e      	bne.n	90012b9c <USBD_StdEPReq+0x1c>
              if (req->wValue == USB_FEATURE_EP_HALT)
90012c5e:	8863      	ldrh	r3, [r4, #2]
90012c60:	b923      	cbnz	r3, 90012c6c <USBD_StdEPReq+0xec>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
90012c62:	0648      	lsls	r0, r1, #25
90012c64:	d002      	beq.n	90012c6c <USBD_StdEPReq+0xec>
90012c66:	88e3      	ldrh	r3, [r4, #6]
90012c68:	2b00      	cmp	r3, #0
90012c6a:	d035      	beq.n	90012cd8 <USBD_StdEPReq+0x158>
              (void)USBD_CtlSendStatus(pdev);
90012c6c:	4628      	mov	r0, r5
90012c6e:	f000 fa87 	bl	90013180 <USBD_CtlSendStatus>
              break;
90012c72:	e79b      	b.n	90012bac <USBD_StdEPReq+0x2c>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
90012c74:	064a      	lsls	r2, r1, #25
90012c76:	d091      	beq.n	90012b9c <USBD_StdEPReq+0x1c>
                (void)USBD_LL_StallEP(pdev, ep_addr);
90012c78:	f7f1 f82c 	bl	90003cd4 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
90012c7c:	2180      	movs	r1, #128	@ 0x80
90012c7e:	4628      	mov	r0, r5
90012c80:	f7f1 f828 	bl	90003cd4 <USBD_LL_StallEP>
90012c84:	e792      	b.n	90012bac <USBD_StdEPReq+0x2c>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
90012c86:	0648      	lsls	r0, r1, #25
90012c88:	d188      	bne.n	90012b9c <USBD_StdEPReq+0x1c>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90012c8a:	0611      	lsls	r1, r2, #24
              pep->status = 0x0000U;
90012c8c:	f04f 0300 	mov.w	r3, #0
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
90012c90:	f04f 0202 	mov.w	r2, #2
90012c94:	4628      	mov	r0, r5
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90012c96:	bf4c      	ite	mi
90012c98:	f105 0114 	addmi.w	r1, r5, #20
90012c9c:	f505 71aa 	addpl.w	r1, r5, #340	@ 0x154
              pep->status = 0x0000U;
90012ca0:	600b      	str	r3, [r1, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
90012ca2:	f000 fa4b 	bl	9001313c <USBD_CtlSendData>
              break;
90012ca6:	e781      	b.n	90012bac <USBD_StdEPReq+0x2c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
90012ca8:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
90012caa:	2b00      	cmp	r3, #0
90012cac:	f43f af76 	beq.w	90012b9c <USBD_StdEPReq+0x1c>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90012cb0:	f001 037f 	and.w	r3, r1, #127	@ 0x7f
90012cb4:	1c5c      	adds	r4, r3, #1
90012cb6:	eb04 0484 	add.w	r4, r4, r4, lsl #2
90012cba:	eb05 0484 	add.w	r4, r5, r4, lsl #2
90012cbe:	e7bd      	b.n	90012c3c <USBD_StdEPReq+0xbc>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
90012cc0:	4628      	mov	r0, r5
90012cc2:	f7f1 f81f 	bl	90003d04 <USBD_LL_IsStallEP>
90012cc6:	2800      	cmp	r0, #0
90012cc8:	d0ba      	beq.n	90012c40 <USBD_StdEPReq+0xc0>
90012cca:	2301      	movs	r3, #1
90012ccc:	e7b9      	b.n	90012c42 <USBD_StdEPReq+0xc2>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
90012cce:	9101      	str	r1, [sp, #4]
90012cd0:	f7f1 f80c 	bl	90003cec <USBD_LL_ClearStallEP>
90012cd4:	9901      	ldr	r1, [sp, #4]
90012cd6:	e779      	b.n	90012bcc <USBD_StdEPReq+0x4c>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
90012cd8:	4628      	mov	r0, r5
90012cda:	f7f0 fffb 	bl	90003cd4 <USBD_LL_StallEP>
90012cde:	e7c5      	b.n	90012c6c <USBD_StdEPReq+0xec>

90012ce0 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
90012ce0:	780b      	ldrb	r3, [r1, #0]
90012ce2:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
90012ce4:	784b      	ldrb	r3, [r1, #1]
90012ce6:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
90012ce8:	884b      	ldrh	r3, [r1, #2]
90012cea:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
90012cec:	888b      	ldrh	r3, [r1, #4]
90012cee:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
90012cf0:	88cb      	ldrh	r3, [r1, #6]
90012cf2:	80c3      	strh	r3, [r0, #6]
}
90012cf4:	4770      	bx	lr
90012cf6:	bf00      	nop

90012cf8 <USBD_CtlError>:
{
90012cf8:	b510      	push	{r4, lr}
90012cfa:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012cfc:	2180      	movs	r1, #128	@ 0x80
90012cfe:	f7f0 ffe9 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012d02:	2100      	movs	r1, #0
90012d04:	4620      	mov	r0, r4
}
90012d06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
90012d0a:	f7f0 bfe3 	b.w	90003cd4 <USBD_LL_StallEP>
90012d0e:	bf00      	nop

90012d10 <USBD_GetString>:
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
90012d10:	b330      	cbz	r0, 90012d60 <USBD_GetString+0x50>
{
90012d12:	b570      	push	{r4, r5, r6, lr}
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
90012d14:	7803      	ldrb	r3, [r0, #0]
90012d16:	460e      	mov	r6, r1
90012d18:	4605      	mov	r5, r0
90012d1a:	4614      	mov	r4, r2
90012d1c:	b30b      	cbz	r3, 90012d62 <USBD_GetString+0x52>
90012d1e:	4603      	mov	r3, r0
90012d20:	f813 1f01 	ldrb.w	r1, [r3, #1]!
90012d24:	2900      	cmp	r1, #0
90012d26:	d1fb      	bne.n	90012d20 <USBD_GetString+0x10>
90012d28:	1c68      	adds	r0, r5, #1
90012d2a:	f7ed fad9 	bl	900002e0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
90012d2e:	1c43      	adds	r3, r0, #1
90012d30:	b2db      	uxtb	r3, r3
90012d32:	3301      	adds	r3, #1
90012d34:	005b      	lsls	r3, r3, #1
90012d36:	b2da      	uxtb	r2, r3
90012d38:	8023      	strh	r3, [r4, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
90012d3a:	2303      	movs	r3, #3
  unicode[idx] = *(uint8_t *)len;
90012d3c:	7032      	strb	r2, [r6, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
90012d3e:	7073      	strb	r3, [r6, #1]
  while (*pdesc != (uint8_t)'\0')
90012d40:	782c      	ldrb	r4, [r5, #0]
90012d42:	b164      	cbz	r4, 90012d5e <USBD_GetString+0x4e>
90012d44:	4628      	mov	r0, r5
  idx++;
90012d46:	2302      	movs	r3, #2
    unicode[idx] = 0U;
90012d48:	2100      	movs	r1, #0
    idx++;
90012d4a:	1c5a      	adds	r2, r3, #1
    unicode[idx] = *pdesc;
90012d4c:	54f4      	strb	r4, [r6, r3]
    idx++;
90012d4e:	3302      	adds	r3, #2
    unicode[idx] = 0U;
90012d50:	b2d2      	uxtb	r2, r2
    idx++;
90012d52:	b2db      	uxtb	r3, r3
    unicode[idx] = 0U;
90012d54:	54b1      	strb	r1, [r6, r2]
  while (*pdesc != (uint8_t)'\0')
90012d56:	f810 4f01 	ldrb.w	r4, [r0, #1]!
90012d5a:	2c00      	cmp	r4, #0
90012d5c:	d1f5      	bne.n	90012d4a <USBD_GetString+0x3a>
}
90012d5e:	bd70      	pop	{r4, r5, r6, pc}
90012d60:	4770      	bx	lr
  while (*pbuff != (uint8_t)'\0')
90012d62:	2202      	movs	r2, #2
90012d64:	4613      	mov	r3, r2
90012d66:	e7e7      	b.n	90012d38 <USBD_GetString+0x28>

90012d68 <USBD_HID_DataIn>:
  * @param  pdev: device instance
  * @param  epnum: endpoint index
  * @retval status
  */
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
90012d68:	4603      	mov	r3, r0
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
90012d6a:	2100      	movs	r1, #0
90012d6c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4

  return (uint8_t)USBD_OK;
}
90012d70:	4608      	mov	r0, r1
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
90012d72:	32b0      	adds	r2, #176	@ 0xb0
90012d74:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
90012d78:	7319      	strb	r1, [r3, #12]
}
90012d7a:	4770      	bx	lr

90012d7c <USBD_HID_GetDeviceQualifierDesc>:
  *         return Device Qualifier descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
90012d7c:	4603      	mov	r3, r0
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
90012d7e:	220a      	movs	r2, #10

  return USBD_HID_DeviceQualifierDesc;
}
90012d80:	4801      	ldr	r0, [pc, #4]	@ (90012d88 <USBD_HID_GetDeviceQualifierDesc+0xc>)
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
90012d82:	801a      	strh	r2, [r3, #0]
}
90012d84:	4770      	bx	lr
90012d86:	bf00      	nop
90012d88:	240001d0 	.word	0x240001d0

90012d8c <USBD_HID_GetFSCfgDescKeyboard>:
{
90012d8c:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescKeyboard, HID_EPIN_ADDR);
90012d8e:	2181      	movs	r1, #129	@ 0x81
{
90012d90:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescKeyboard, HID_EPIN_ADDR);
90012d92:	4805      	ldr	r0, [pc, #20]	@ (90012da8 <USBD_HID_GetFSCfgDescKeyboard+0x1c>)
90012d94:	f7ff fce4 	bl	90012760 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
90012d98:	b108      	cbz	r0, 90012d9e <USBD_HID_GetFSCfgDescKeyboard+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
90012d9a:	230a      	movs	r3, #10
90012d9c:	7183      	strb	r3, [r0, #6]
    *length = (uint16_t)sizeof(USBD_HID_CfgDescKeyboard);
90012d9e:	2322      	movs	r3, #34	@ 0x22
}
90012da0:	4801      	ldr	r0, [pc, #4]	@ (90012da8 <USBD_HID_GetFSCfgDescKeyboard+0x1c>)
    *length = (uint16_t)sizeof(USBD_HID_CfgDescKeyboard);
90012da2:	8023      	strh	r3, [r4, #0]
}
90012da4:	bd10      	pop	{r4, pc}
90012da6:	bf00      	nop
90012da8:	240001f4 	.word	0x240001f4

90012dac <USBD_HID_GetHSCfgDescKeyboard>:
{
90012dac:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescKeyboard, HID_EPIN_ADDR);
90012dae:	2181      	movs	r1, #129	@ 0x81
{
90012db0:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescKeyboard, HID_EPIN_ADDR);
90012db2:	4805      	ldr	r0, [pc, #20]	@ (90012dc8 <USBD_HID_GetHSCfgDescKeyboard+0x1c>)
90012db4:	f7ff fcd4 	bl	90012760 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
90012db8:	b108      	cbz	r0, 90012dbe <USBD_HID_GetHSCfgDescKeyboard+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
90012dba:	2307      	movs	r3, #7
90012dbc:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDescKeyboard);
90012dbe:	2322      	movs	r3, #34	@ 0x22
}
90012dc0:	4801      	ldr	r0, [pc, #4]	@ (90012dc8 <USBD_HID_GetHSCfgDescKeyboard+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDescKeyboard);
90012dc2:	8023      	strh	r3, [r4, #0]
}
90012dc4:	bd10      	pop	{r4, pc}
90012dc6:	bf00      	nop
90012dc8:	240001f4 	.word	0x240001f4

90012dcc <USBD_HID_GetFSCfgDescMouse>:
{
90012dcc:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescMouse, HID_EPIN_ADDR);
90012dce:	2181      	movs	r1, #129	@ 0x81
{
90012dd0:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescMouse, HID_EPIN_ADDR);
90012dd2:	4805      	ldr	r0, [pc, #20]	@ (90012de8 <USBD_HID_GetFSCfgDescMouse+0x1c>)
90012dd4:	f7ff fcc4 	bl	90012760 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
90012dd8:	b108      	cbz	r0, 90012dde <USBD_HID_GetFSCfgDescMouse+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
90012dda:	230a      	movs	r3, #10
90012ddc:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDescMouse);
90012dde:	2322      	movs	r3, #34	@ 0x22
}
90012de0:	4801      	ldr	r0, [pc, #4]	@ (90012de8 <USBD_HID_GetFSCfgDescMouse+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDescMouse);
90012de2:	8023      	strh	r3, [r4, #0]
}
90012de4:	bd10      	pop	{r4, pc}
90012de6:	bf00      	nop
90012de8:	24000218 	.word	0x24000218

90012dec <USBD_HID_GetHSCfgDescMouse>:
{
90012dec:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescMouse, HID_EPIN_ADDR);
90012dee:	2181      	movs	r1, #129	@ 0x81
{
90012df0:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescMouse, HID_EPIN_ADDR);
90012df2:	4805      	ldr	r0, [pc, #20]	@ (90012e08 <USBD_HID_GetHSCfgDescMouse+0x1c>)
90012df4:	f7ff fcb4 	bl	90012760 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
90012df8:	b108      	cbz	r0, 90012dfe <USBD_HID_GetHSCfgDescMouse+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
90012dfa:	2307      	movs	r3, #7
90012dfc:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDescMouse);
90012dfe:	2322      	movs	r3, #34	@ 0x22
}
90012e00:	4801      	ldr	r0, [pc, #4]	@ (90012e08 <USBD_HID_GetHSCfgDescMouse+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDescMouse);
90012e02:	8023      	strh	r3, [r4, #0]
}
90012e04:	bd10      	pop	{r4, pc}
90012e06:	bf00      	nop
90012e08:	24000218 	.word	0x24000218

90012e0c <USBD_HID_SetupKeyboard>:
{
90012e0c:	b510      	push	{r4, lr}
  uint16_t status_info = 0U;
90012e0e:	2300      	movs	r3, #0
{
90012e10:	b082      	sub	sp, #8
  uint16_t status_info = 0U;
90012e12:	f8ad 3006 	strh.w	r3, [sp, #6]
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
90012e16:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
90012e1a:	33b0      	adds	r3, #176	@ 0xb0
90012e1c:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
  if (hhid == NULL)
90012e20:	b13c      	cbz	r4, 90012e32 <USBD_HID_SetupKeyboard+0x26>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012e22:	780b      	ldrb	r3, [r1, #0]
90012e24:	f013 0360 	ands.w	r3, r3, #96	@ 0x60
90012e28:	d022      	beq.n	90012e70 <USBD_HID_SetupKeyboard+0x64>
90012e2a:	2b20      	cmp	r3, #32
90012e2c:	d004      	beq.n	90012e38 <USBD_HID_SetupKeyboard+0x2c>
            USBD_CtlError(pdev, req);
90012e2e:	f7ff ff63 	bl	90012cf8 <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
90012e32:	2003      	movs	r0, #3
}
90012e34:	b002      	add	sp, #8
90012e36:	bd10      	pop	{r4, pc}
      switch (req->bRequest)
90012e38:	784b      	ldrb	r3, [r1, #1]
90012e3a:	3b02      	subs	r3, #2
90012e3c:	2b09      	cmp	r3, #9
90012e3e:	d8f6      	bhi.n	90012e2e <USBD_HID_SetupKeyboard+0x22>
90012e40:	a201      	add	r2, pc, #4	@ (adr r2, 90012e48 <USBD_HID_SetupKeyboard+0x3c>)
90012e42:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012e46:	bf00      	nop
90012e48:	90012ec7 	.word	0x90012ec7
90012e4c:	90012ebd 	.word	0x90012ebd
90012e50:	90012e2f 	.word	0x90012e2f
90012e54:	90012e2f 	.word	0x90012e2f
90012e58:	90012e2f 	.word	0x90012e2f
90012e5c:	90012e2f 	.word	0x90012e2f
90012e60:	90012e2f 	.word	0x90012e2f
90012e64:	90012e2f 	.word	0x90012e2f
90012e68:	90012eb5 	.word	0x90012eb5
90012e6c:	90012ead 	.word	0x90012ead
      switch (req->bRequest)
90012e70:	784b      	ldrb	r3, [r1, #1]
90012e72:	2b0b      	cmp	r3, #11
90012e74:	d8db      	bhi.n	90012e2e <USBD_HID_SetupKeyboard+0x22>
90012e76:	a201      	add	r2, pc, #4	@ (adr r2, 90012e7c <USBD_HID_SetupKeyboard+0x70>)
90012e78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012e7c:	90012efb 	.word	0x90012efb
90012e80:	90012eb1 	.word	0x90012eb1
90012e84:	90012e2f 	.word	0x90012e2f
90012e88:	90012e2f 	.word	0x90012e2f
90012e8c:	90012e2f 	.word	0x90012e2f
90012e90:	90012e2f 	.word	0x90012e2f
90012e94:	90012edf 	.word	0x90012edf
90012e98:	90012e2f 	.word	0x90012e2f
90012e9c:	90012e2f 	.word	0x90012e2f
90012ea0:	90012e2f 	.word	0x90012e2f
90012ea4:	90012f0f 	.word	0x90012f0f
90012ea8:	90012ed1 	.word	0x90012ed1
          hhid->Protocol = (uint8_t)(req->wValue);
90012eac:	788b      	ldrb	r3, [r1, #2]
90012eae:	6023      	str	r3, [r4, #0]
  USBD_StatusTypeDef ret = USBD_OK;
90012eb0:	2000      	movs	r0, #0
90012eb2:	e7bf      	b.n	90012e34 <USBD_HID_SetupKeyboard+0x28>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
90012eb4:	884b      	ldrh	r3, [r1, #2]
90012eb6:	0a1b      	lsrs	r3, r3, #8
90012eb8:	6063      	str	r3, [r4, #4]
          break;
90012eba:	e7f9      	b.n	90012eb0 <USBD_HID_SetupKeyboard+0xa4>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
90012ebc:	2201      	movs	r2, #1
90012ebe:	4621      	mov	r1, r4
90012ec0:	f000 f93c 	bl	9001313c <USBD_CtlSendData>
          break;
90012ec4:	e7f4      	b.n	90012eb0 <USBD_HID_SetupKeyboard+0xa4>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
90012ec6:	2201      	movs	r2, #1
90012ec8:	1d21      	adds	r1, r4, #4
90012eca:	f000 f937 	bl	9001313c <USBD_CtlSendData>
          break;
90012ece:	e7ef      	b.n	90012eb0 <USBD_HID_SetupKeyboard+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012ed0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012ed4:	2b03      	cmp	r3, #3
90012ed6:	d1aa      	bne.n	90012e2e <USBD_HID_SetupKeyboard+0x22>
            hhid->AltSetting = (uint8_t)(req->wValue);
90012ed8:	788b      	ldrb	r3, [r1, #2]
90012eda:	60a3      	str	r3, [r4, #8]
90012edc:	e7e8      	b.n	90012eb0 <USBD_HID_SetupKeyboard+0xa4>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
90012ede:	884b      	ldrh	r3, [r1, #2]
90012ee0:	0a1b      	lsrs	r3, r3, #8
90012ee2:	2b22      	cmp	r3, #34	@ 0x22
90012ee4:	d01d      	beq.n	90012f22 <USBD_HID_SetupKeyboard+0x116>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
90012ee6:	2b21      	cmp	r3, #33	@ 0x21
90012ee8:	d1a1      	bne.n	90012e2e <USBD_HID_SetupKeyboard+0x22>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
90012eea:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_DescKeyboard;
90012eec:	4910      	ldr	r1, [pc, #64]	@ (90012f30 <USBD_HID_SetupKeyboard+0x124>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
90012eee:	2a09      	cmp	r2, #9
90012ef0:	bf28      	it	cs
90012ef2:	2209      	movcs	r2, #9
          (void)USBD_CtlSendData(pdev, pbuf, len);
90012ef4:	f000 f922 	bl	9001313c <USBD_CtlSendData>
          break;
90012ef8:	e7da      	b.n	90012eb0 <USBD_HID_SetupKeyboard+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012efa:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012efe:	2b03      	cmp	r3, #3
90012f00:	d195      	bne.n	90012e2e <USBD_HID_SetupKeyboard+0x22>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
90012f02:	2202      	movs	r2, #2
90012f04:	f10d 0106 	add.w	r1, sp, #6
90012f08:	f000 f918 	bl	9001313c <USBD_CtlSendData>
90012f0c:	e7d0      	b.n	90012eb0 <USBD_HID_SetupKeyboard+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012f0e:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012f12:	2b03      	cmp	r3, #3
90012f14:	d18b      	bne.n	90012e2e <USBD_HID_SetupKeyboard+0x22>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
90012f16:	2201      	movs	r2, #1
90012f18:	f104 0108 	add.w	r1, r4, #8
90012f1c:	f000 f90e 	bl	9001313c <USBD_CtlSendData>
90012f20:	e7c6      	b.n	90012eb0 <USBD_HID_SetupKeyboard+0xa4>
            len = MIN(HID_KEYBOARD_REPORT_DESC_SIZE, req->wLength);
90012f22:	88ca      	ldrh	r2, [r1, #6]
        	pbuf = HID_KEYBOARD_ReportDesc;
90012f24:	4903      	ldr	r1, [pc, #12]	@ (90012f34 <USBD_HID_SetupKeyboard+0x128>)
            len = MIN(HID_KEYBOARD_REPORT_DESC_SIZE, req->wLength);
90012f26:	2a3f      	cmp	r2, #63	@ 0x3f
90012f28:	bf28      	it	cs
90012f2a:	223f      	movcs	r2, #63	@ 0x3f
        	pbuf = HID_KEYBOARD_ReportDesc;
90012f2c:	e7e2      	b.n	90012ef4 <USBD_HID_SetupKeyboard+0xe8>
90012f2e:	bf00      	nop
90012f30:	240001dc 	.word	0x240001dc
90012f34:	24000144 	.word	0x24000144

90012f38 <USBD_HID_SetupMouse>:
{
90012f38:	b510      	push	{r4, lr}
  uint16_t status_info = 0U;
90012f3a:	2300      	movs	r3, #0
{
90012f3c:	b082      	sub	sp, #8
  uint16_t status_info = 0U;
90012f3e:	f8ad 3006 	strh.w	r3, [sp, #6]
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
90012f42:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
90012f46:	33b0      	adds	r3, #176	@ 0xb0
90012f48:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
  if (hhid == NULL)
90012f4c:	b13c      	cbz	r4, 90012f5e <USBD_HID_SetupMouse+0x26>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012f4e:	780b      	ldrb	r3, [r1, #0]
90012f50:	f013 0360 	ands.w	r3, r3, #96	@ 0x60
90012f54:	d022      	beq.n	90012f9c <USBD_HID_SetupMouse+0x64>
90012f56:	2b20      	cmp	r3, #32
90012f58:	d004      	beq.n	90012f64 <USBD_HID_SetupMouse+0x2c>
            USBD_CtlError(pdev, req);
90012f5a:	f7ff fecd 	bl	90012cf8 <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
90012f5e:	2003      	movs	r0, #3
}
90012f60:	b002      	add	sp, #8
90012f62:	bd10      	pop	{r4, pc}
      switch (req->bRequest)
90012f64:	784b      	ldrb	r3, [r1, #1]
90012f66:	3b02      	subs	r3, #2
90012f68:	2b09      	cmp	r3, #9
90012f6a:	d8f6      	bhi.n	90012f5a <USBD_HID_SetupMouse+0x22>
90012f6c:	a201      	add	r2, pc, #4	@ (adr r2, 90012f74 <USBD_HID_SetupMouse+0x3c>)
90012f6e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012f72:	bf00      	nop
90012f74:	90012ff3 	.word	0x90012ff3
90012f78:	90012fe9 	.word	0x90012fe9
90012f7c:	90012f5b 	.word	0x90012f5b
90012f80:	90012f5b 	.word	0x90012f5b
90012f84:	90012f5b 	.word	0x90012f5b
90012f88:	90012f5b 	.word	0x90012f5b
90012f8c:	90012f5b 	.word	0x90012f5b
90012f90:	90012f5b 	.word	0x90012f5b
90012f94:	90012fe1 	.word	0x90012fe1
90012f98:	90012fd9 	.word	0x90012fd9
      switch (req->bRequest)
90012f9c:	784b      	ldrb	r3, [r1, #1]
90012f9e:	2b0b      	cmp	r3, #11
90012fa0:	d8db      	bhi.n	90012f5a <USBD_HID_SetupMouse+0x22>
90012fa2:	a201      	add	r2, pc, #4	@ (adr r2, 90012fa8 <USBD_HID_SetupMouse+0x70>)
90012fa4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012fa8:	90013027 	.word	0x90013027
90012fac:	90012fdd 	.word	0x90012fdd
90012fb0:	90012f5b 	.word	0x90012f5b
90012fb4:	90012f5b 	.word	0x90012f5b
90012fb8:	90012f5b 	.word	0x90012f5b
90012fbc:	90012f5b 	.word	0x90012f5b
90012fc0:	9001300b 	.word	0x9001300b
90012fc4:	90012f5b 	.word	0x90012f5b
90012fc8:	90012f5b 	.word	0x90012f5b
90012fcc:	90012f5b 	.word	0x90012f5b
90012fd0:	9001303b 	.word	0x9001303b
90012fd4:	90012ffd 	.word	0x90012ffd
          hhid->Protocol = (uint8_t)(req->wValue);
90012fd8:	788b      	ldrb	r3, [r1, #2]
90012fda:	6023      	str	r3, [r4, #0]
  USBD_StatusTypeDef ret = USBD_OK;
90012fdc:	2000      	movs	r0, #0
90012fde:	e7bf      	b.n	90012f60 <USBD_HID_SetupMouse+0x28>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
90012fe0:	884b      	ldrh	r3, [r1, #2]
90012fe2:	0a1b      	lsrs	r3, r3, #8
90012fe4:	6063      	str	r3, [r4, #4]
          break;
90012fe6:	e7f9      	b.n	90012fdc <USBD_HID_SetupMouse+0xa4>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
90012fe8:	2201      	movs	r2, #1
90012fea:	4621      	mov	r1, r4
90012fec:	f000 f8a6 	bl	9001313c <USBD_CtlSendData>
          break;
90012ff0:	e7f4      	b.n	90012fdc <USBD_HID_SetupMouse+0xa4>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
90012ff2:	2201      	movs	r2, #1
90012ff4:	1d21      	adds	r1, r4, #4
90012ff6:	f000 f8a1 	bl	9001313c <USBD_CtlSendData>
          break;
90012ffa:	e7ef      	b.n	90012fdc <USBD_HID_SetupMouse+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012ffc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90013000:	2b03      	cmp	r3, #3
90013002:	d1aa      	bne.n	90012f5a <USBD_HID_SetupMouse+0x22>
            hhid->AltSetting = (uint8_t)(req->wValue);
90013004:	788b      	ldrb	r3, [r1, #2]
90013006:	60a3      	str	r3, [r4, #8]
90013008:	e7e8      	b.n	90012fdc <USBD_HID_SetupMouse+0xa4>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
9001300a:	884b      	ldrh	r3, [r1, #2]
9001300c:	0a1b      	lsrs	r3, r3, #8
9001300e:	2b22      	cmp	r3, #34	@ 0x22
90013010:	d01d      	beq.n	9001304e <USBD_HID_SetupMouse+0x116>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
90013012:	2b21      	cmp	r3, #33	@ 0x21
90013014:	d1a1      	bne.n	90012f5a <USBD_HID_SetupMouse+0x22>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
90013016:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_DescMouse;
90013018:	4910      	ldr	r1, [pc, #64]	@ (9001305c <USBD_HID_SetupMouse+0x124>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
9001301a:	2a09      	cmp	r2, #9
9001301c:	bf28      	it	cs
9001301e:	2209      	movcs	r2, #9
          (void)USBD_CtlSendData(pdev, pbuf, len);
90013020:	f000 f88c 	bl	9001313c <USBD_CtlSendData>
          break;
90013024:	e7da      	b.n	90012fdc <USBD_HID_SetupMouse+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90013026:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001302a:	2b03      	cmp	r3, #3
9001302c:	d195      	bne.n	90012f5a <USBD_HID_SetupMouse+0x22>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
9001302e:	2202      	movs	r2, #2
90013030:	f10d 0106 	add.w	r1, sp, #6
90013034:	f000 f882 	bl	9001313c <USBD_CtlSendData>
90013038:	e7d0      	b.n	90012fdc <USBD_HID_SetupMouse+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
9001303a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001303e:	2b03      	cmp	r3, #3
90013040:	d18b      	bne.n	90012f5a <USBD_HID_SetupMouse+0x22>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
90013042:	2201      	movs	r2, #1
90013044:	f104 0108 	add.w	r1, r4, #8
90013048:	f000 f878 	bl	9001313c <USBD_CtlSendData>
9001304c:	e7c6      	b.n	90012fdc <USBD_HID_SetupMouse+0xa4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
9001304e:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
90013050:	4903      	ldr	r1, [pc, #12]	@ (90013060 <USBD_HID_SetupMouse+0x128>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
90013052:	2a4a      	cmp	r2, #74	@ 0x4a
90013054:	bf28      	it	cs
90013056:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
90013058:	e7e2      	b.n	90013020 <USBD_HID_SetupMouse+0xe8>
9001305a:	bf00      	nop
9001305c:	240001e8 	.word	0x240001e8
90013060:	24000184 	.word	0x24000184

90013064 <USBD_HID_DeInit>:
{
90013064:	b538      	push	{r3, r4, r5, lr}
90013066:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
90013068:	2181      	movs	r1, #129	@ 0x81
9001306a:	f7f0 fe27 	bl	90003cbc <USBD_LL_CloseEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
9001306e:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
90013070:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
90013074:	63a5      	str	r5, [r4, #56]	@ 0x38
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
90013076:	33b0      	adds	r3, #176	@ 0xb0
90013078:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001307c:	b130      	cbz	r0, 9001308c <USBD_HID_DeInit+0x28>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
9001307e:	f7f0 fe7d 	bl	90003d7c <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
90013082:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
90013086:	33b0      	adds	r3, #176	@ 0xb0
90013088:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
9001308c:	2000      	movs	r0, #0
9001308e:	bd38      	pop	{r3, r4, r5, pc}

90013090 <USBD_HID_Init>:
{
90013090:	b538      	push	{r3, r4, r5, lr}
90013092:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
90013094:	2010      	movs	r0, #16
90013096:	f7f0 fe6d 	bl	90003d74 <USBD_static_malloc>
  if (hhid == NULL)
9001309a:	4605      	mov	r5, r0
9001309c:	b1c0      	cbz	r0, 900130d0 <USBD_HID_Init+0x40>
  pdev->pClassDataCmsit[pdev->classId] = (void *)hhid;
9001309e:	f8d4 12d4 	ldr.w	r1, [r4, #724]	@ 0x2d4
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
900130a2:	2304      	movs	r3, #4
900130a4:	2203      	movs	r2, #3
  pdev->pClassDataCmsit[pdev->classId] = (void *)hhid;
900130a6:	31b0      	adds	r1, #176	@ 0xb0
900130a8:	f844 0021 	str.w	r0, [r4, r1, lsl #2]
  if (pdev->dev_speed == USBD_SPEED_HIGH)
900130ac:	7c21      	ldrb	r1, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
900130ae:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
900130b2:	4620      	mov	r0, r4
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
900130b4:	2900      	cmp	r1, #0
900130b6:	bf14      	ite	ne
900130b8:	210a      	movne	r1, #10
900130ba:	2107      	moveq	r1, #7
900130bc:	8761      	strh	r1, [r4, #58]	@ 0x3a
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
900130be:	2181      	movs	r1, #129	@ 0x81
900130c0:	f7f0 fdee 	bl	90003ca0 <USBD_LL_OpenEP>
  hhid->state = USBD_HID_IDLE;
900130c4:	2300      	movs	r3, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
900130c6:	2201      	movs	r2, #1
  return (uint8_t)USBD_OK;
900130c8:	4618      	mov	r0, r3
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
900130ca:	8722      	strh	r2, [r4, #56]	@ 0x38
  hhid->state = USBD_HID_IDLE;
900130cc:	732b      	strb	r3, [r5, #12]
}
900130ce:	bd38      	pop	{r3, r4, r5, pc}
    pdev->pClassDataCmsit[pdev->classId] = NULL;
900130d0:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    return (uint8_t)USBD_EMEM;
900130d4:	2002      	movs	r0, #2
    pdev->pClassDataCmsit[pdev->classId] = NULL;
900130d6:	33b0      	adds	r3, #176	@ 0xb0
900130d8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
900130dc:	bd38      	pop	{r3, r4, r5, pc}
900130de:	bf00      	nop

900130e0 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
900130e0:	b510      	push	{r4, lr}
900130e2:	2181      	movs	r1, #129	@ 0x81
900130e4:	4604      	mov	r4, r0
900130e6:	4805      	ldr	r0, [pc, #20]	@ (900130fc <USBD_HID_GetOtherSpeedCfgDesc+0x1c>)
900130e8:	f7ff fb3a 	bl	90012760 <USBD_GetEpDesc>
900130ec:	b108      	cbz	r0, 900130f2 <USBD_HID_GetOtherSpeedCfgDesc+0x12>
900130ee:	230a      	movs	r3, #10
900130f0:	7183      	strb	r3, [r0, #6]
900130f2:	2322      	movs	r3, #34	@ 0x22
900130f4:	4801      	ldr	r0, [pc, #4]	@ (900130fc <USBD_HID_GetOtherSpeedCfgDesc+0x1c>)
900130f6:	8023      	strh	r3, [r4, #0]
900130f8:	bd10      	pop	{r4, pc}
900130fa:	bf00      	nop
900130fc:	240001f4 	.word	0x240001f4

90013100 <USBD_HID_SendReport>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
90013100:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
90013104:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
90013106:	f103 0eb0 	add.w	lr, r3, #176	@ 0xb0
9001310a:	f850 402e 	ldr.w	r4, [r0, lr, lsl #2]
  if (hhid == NULL)
9001310e:	b194      	cbz	r4, 90013136 <USBD_HID_SendReport+0x36>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
90013110:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90013114:	2b03      	cmp	r3, #3
90013116:	d001      	beq.n	9001311c <USBD_HID_SendReport+0x1c>
  return (uint8_t)USBD_OK;
90013118:	2000      	movs	r0, #0
}
9001311a:	bd10      	pop	{r4, pc}
    if (hhid->state == USBD_HID_IDLE)
9001311c:	7b23      	ldrb	r3, [r4, #12]
9001311e:	2b00      	cmp	r3, #0
90013120:	d1fa      	bne.n	90013118 <USBD_HID_SendReport+0x18>
      hhid->state = USBD_HID_BUSY;
90013122:	f04f 0c01 	mov.w	ip, #1
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
90013126:	4613      	mov	r3, r2
90013128:	460a      	mov	r2, r1
9001312a:	2181      	movs	r1, #129	@ 0x81
      hhid->state = USBD_HID_BUSY;
9001312c:	f884 c00c 	strb.w	ip, [r4, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
90013130:	f7f0 fe08 	bl	90003d44 <USBD_LL_Transmit>
90013134:	e7f0      	b.n	90013118 <USBD_HID_SendReport+0x18>
    return (uint8_t)USBD_FAIL;
90013136:	2003      	movs	r0, #3
}
90013138:	bd10      	pop	{r4, pc}
9001313a:	bf00      	nop

9001313c <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
9001313c:	b510      	push	{r4, lr}
9001313e:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
90013140:	2402      	movs	r4, #2
{
90013142:	460a      	mov	r2, r1
#else
  pdev->ep_in[0].rem_length = len;
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
90013144:	2100      	movs	r1, #0
  pdev->ep0_state = USBD_EP0_DATA_IN;
90013146:	f8c0 4294 	str.w	r4, [r0, #660]	@ 0x294
  pdev->ep_in[0].total_length = len;
9001314a:	e9c0 3306 	strd	r3, r3, [r0, #24]
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
9001314e:	f7f0 fdf9 	bl	90003d44 <USBD_LL_Transmit>

  return USBD_OK;
}
90013152:	2000      	movs	r0, #0
90013154:	bd10      	pop	{r4, pc}
90013156:	bf00      	nop

90013158 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
90013158:	468c      	mov	ip, r1
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
9001315a:	2100      	movs	r1, #0
{
9001315c:	b508      	push	{r3, lr}
9001315e:	4613      	mov	r3, r2
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
90013160:	4662      	mov	r2, ip
90013162:	f7f0 fdef 	bl	90003d44 <USBD_LL_Transmit>

  return USBD_OK;
}
90013166:	2000      	movs	r0, #0
90013168:	bd08      	pop	{r3, pc}
9001316a:	bf00      	nop

9001316c <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
9001316c:	468c      	mov	ip, r1
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
9001316e:	2100      	movs	r1, #0
{
90013170:	b508      	push	{r3, lr}
90013172:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
90013174:	4662      	mov	r2, ip
90013176:	f7f0 fdf1 	bl	90003d5c <USBD_LL_PrepareReceive>

  return USBD_OK;
}
9001317a:	2000      	movs	r0, #0
9001317c:	bd08      	pop	{r3, pc}
9001317e:	bf00      	nop

90013180 <USBD_CtlSendStatus>:
{
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
90013180:	2300      	movs	r3, #0
{
90013182:	b510      	push	{r4, lr}
  pdev->ep0_state = USBD_EP0_STATUS_IN;
90013184:	2404      	movs	r4, #4
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
90013186:	461a      	mov	r2, r3
90013188:	4619      	mov	r1, r3
  pdev->ep0_state = USBD_EP0_STATUS_IN;
9001318a:	f8c0 4294 	str.w	r4, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
9001318e:	f7f0 fdd9 	bl	90003d44 <USBD_LL_Transmit>

  return USBD_OK;
}
90013192:	2000      	movs	r0, #0
90013194:	bd10      	pop	{r4, pc}
90013196:	bf00      	nop

90013198 <USBD_CtlReceiveStatus>:
{
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
90013198:	2300      	movs	r3, #0
{
9001319a:	b510      	push	{r4, lr}
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
9001319c:	2405      	movs	r4, #5
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
9001319e:	461a      	mov	r2, r3
900131a0:	4619      	mov	r1, r3
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
900131a2:	f8c0 4294 	str.w	r4, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
900131a6:	f7f0 fdd9 	bl	90003d5c <USBD_LL_PrepareReceive>

  return USBD_OK;
}
900131aa:	2000      	movs	r0, #0
900131ac:	bd10      	pop	{r4, pc}
900131ae:	bf00      	nop

900131b0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
900131b0:	8880      	ldrh	r0, [r0, #4]
900131b2:	4770      	bx	lr

900131b4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
900131b4:	b570      	push	{r4, r5, r6, lr}
900131b6:	6803      	ldr	r3, [r0, #0]
900131b8:	460c      	mov	r4, r1
900131ba:	2100      	movs	r1, #0
900131bc:	4605      	mov	r5, r0
900131be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900131c0:	4798      	blx	r3
900131c2:	4606      	mov	r6, r0
900131c4:	682b      	ldr	r3, [r5, #0]
900131c6:	4628      	mov	r0, r5
900131c8:	1ba4      	subs	r4, r4, r6
900131ca:	6a1b      	ldr	r3, [r3, #32]
900131cc:	b2a4      	uxth	r4, r4
900131ce:	4798      	blx	r3
900131d0:	fbb4 f0f0 	udiv	r0, r4, r0
900131d4:	bd70      	pop	{r4, r5, r6, pc}

900131d6 <_ZN8touchgfx17AbstractPartition5clearEv>:
900131d6:	2300      	movs	r3, #0
900131d8:	8083      	strh	r3, [r0, #4]
900131da:	4770      	bx	lr

900131dc <_ZN8touchgfx17AbstractPartition8allocateEt>:
900131dc:	b510      	push	{r4, lr}
900131de:	6803      	ldr	r3, [r0, #0]
900131e0:	4604      	mov	r4, r0
900131e2:	8881      	ldrh	r1, [r0, #4]
900131e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900131e6:	4798      	blx	r3
900131e8:	88a3      	ldrh	r3, [r4, #4]
900131ea:	3301      	adds	r3, #1
900131ec:	80a3      	strh	r3, [r4, #4]
900131ee:	bd10      	pop	{r4, pc}

900131f0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
900131f0:	6803      	ldr	r3, [r0, #0]
900131f2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900131f4:	4718      	bx	r3

900131f6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
900131f6:	4770      	bx	lr

900131f8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
900131f8:	4a02      	ldr	r2, [pc, #8]	@ (90013204 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
900131fa:	6002      	str	r2, [r0, #0]
900131fc:	2200      	movs	r2, #0
900131fe:	8082      	strh	r2, [r0, #4]
90013200:	4770      	bx	lr
90013202:	bf00      	nop
90013204:	9002ffc8 	.word	0x9002ffc8

90013208 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
90013208:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001320a:	2000      	movs	r0, #0
9001320c:	b12b      	cbz	r3, 9001321a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9001320e:	b920      	cbnz	r0, 9001321a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
90013210:	1a5a      	subs	r2, r3, r1
90013212:	699b      	ldr	r3, [r3, #24]
90013214:	4250      	negs	r0, r2
90013216:	4150      	adcs	r0, r2
90013218:	e7f8      	b.n	9001320c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9001321a:	4770      	bx	lr

9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9001321c:	2300      	movs	r3, #0
9001321e:	6148      	str	r0, [r1, #20]
90013220:	618b      	str	r3, [r1, #24]
90013222:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90013224:	b913      	cbnz	r3, 9001322c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
90013226:	6281      	str	r1, [r0, #40]	@ 0x28
90013228:	4770      	bx	lr
9001322a:	4613      	mov	r3, r2
9001322c:	699a      	ldr	r2, [r3, #24]
9001322e:	2a00      	cmp	r2, #0
90013230:	d1fb      	bne.n	9001322a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
90013232:	6199      	str	r1, [r3, #24]
90013234:	4770      	bx	lr

90013236 <_ZN8touchgfx9Container9removeAllEv>:
90013236:	2200      	movs	r2, #0
90013238:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001323a:	b123      	cbz	r3, 90013246 <_ZN8touchgfx9Container9removeAllEv+0x10>
9001323c:	6999      	ldr	r1, [r3, #24]
9001323e:	6281      	str	r1, [r0, #40]	@ 0x28
90013240:	e9c3 2205 	strd	r2, r2, [r3, #20]
90013244:	e7f8      	b.n	90013238 <_ZN8touchgfx9Container9removeAllEv+0x2>
90013246:	4770      	bx	lr

90013248 <_ZN8touchgfx9Container6unlinkEv>:
90013248:	2300      	movs	r3, #0
9001324a:	6283      	str	r3, [r0, #40]	@ 0x28
9001324c:	4770      	bx	lr

9001324e <_ZNK8touchgfx9Container12getSolidRectEv>:
9001324e:	2200      	movs	r2, #0
90013250:	8002      	strh	r2, [r0, #0]
90013252:	8042      	strh	r2, [r0, #2]
90013254:	8082      	strh	r2, [r0, #4]
90013256:	80c2      	strh	r2, [r0, #6]
90013258:	4770      	bx	lr

9001325a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9001325a:	b570      	push	{r4, r5, r6, lr}
9001325c:	460d      	mov	r5, r1
9001325e:	4616      	mov	r6, r2
90013260:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90013262:	b13c      	cbz	r4, 90013274 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90013264:	6823      	ldr	r3, [r4, #0]
90013266:	4620      	mov	r0, r4
90013268:	4632      	mov	r2, r6
9001326a:	4629      	mov	r1, r5
9001326c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001326e:	4798      	blx	r3
90013270:	69a4      	ldr	r4, [r4, #24]
90013272:	e7f6      	b.n	90013262 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90013274:	bd70      	pop	{r4, r5, r6, pc}

90013276 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90013276:	b538      	push	{r3, r4, r5, lr}
90013278:	460d      	mov	r5, r1
9001327a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001327c:	b134      	cbz	r4, 9001328c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9001327e:	682b      	ldr	r3, [r5, #0]
90013280:	4621      	mov	r1, r4
90013282:	4628      	mov	r0, r5
90013284:	689b      	ldr	r3, [r3, #8]
90013286:	4798      	blx	r3
90013288:	69a4      	ldr	r4, [r4, #24]
9001328a:	e7f7      	b.n	9001327c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9001328c:	bd38      	pop	{r3, r4, r5, pc}

9001328e <_ZN8touchgfx9ContainerD1Ev>:
9001328e:	4770      	bx	lr

90013290 <_ZN8touchgfx9ContainerD0Ev>:
90013290:	b510      	push	{r4, lr}
90013292:	4604      	mov	r4, r0
90013294:	212c      	movs	r1, #44	@ 0x2c
90013296:	f018 fc80 	bl	9002bb9a <_ZdlPvj>
9001329a:	4620      	mov	r0, r4
9001329c:	bd10      	pop	{r4, pc}

9001329e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9001329e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900132a0:	b19b      	cbz	r3, 900132ca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900132a2:	428b      	cmp	r3, r1
900132a4:	d109      	bne.n	900132ba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
900132a6:	699a      	ldr	r2, [r3, #24]
900132a8:	2100      	movs	r1, #0
900132aa:	6159      	str	r1, [r3, #20]
900132ac:	6282      	str	r2, [r0, #40]	@ 0x28
900132ae:	b902      	cbnz	r2, 900132b2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
900132b0:	4770      	bx	lr
900132b2:	6199      	str	r1, [r3, #24]
900132b4:	4770      	bx	lr
900132b6:	4613      	mov	r3, r2
900132b8:	b13a      	cbz	r2, 900132ca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
900132ba:	699a      	ldr	r2, [r3, #24]
900132bc:	428a      	cmp	r2, r1
900132be:	d1fa      	bne.n	900132b6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
900132c0:	698a      	ldr	r2, [r1, #24]
900132c2:	619a      	str	r2, [r3, #24]
900132c4:	2300      	movs	r3, #0
900132c6:	e9c1 3305 	strd	r3, r3, [r1, #20]
900132ca:	4770      	bx	lr

900132cc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
900132cc:	b410      	push	{r4}
900132ce:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900132d0:	4604      	mov	r4, r0
900132d2:	b92b      	cbnz	r3, 900132e0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
900132d4:	6803      	ldr	r3, [r0, #0]
900132d6:	4611      	mov	r1, r2
900132d8:	f85d 4b04 	ldr.w	r4, [sp], #4
900132dc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
900132de:	4718      	bx	r3
900132e0:	b941      	cbnz	r1, 900132f4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
900132e2:	6193      	str	r3, [r2, #24]
900132e4:	6282      	str	r2, [r0, #40]	@ 0x28
900132e6:	6154      	str	r4, [r2, #20]
900132e8:	f85d 4b04 	ldr.w	r4, [sp], #4
900132ec:	4770      	bx	lr
900132ee:	4603      	mov	r3, r0
900132f0:	2800      	cmp	r0, #0
900132f2:	d0f9      	beq.n	900132e8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
900132f4:	4299      	cmp	r1, r3
900132f6:	6998      	ldr	r0, [r3, #24]
900132f8:	d1f9      	bne.n	900132ee <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
900132fa:	6190      	str	r0, [r2, #24]
900132fc:	618a      	str	r2, [r1, #24]
900132fe:	e7f2      	b.n	900132e6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

90013300 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
90013300:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013304:	461f      	mov	r7, r3
90013306:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9001330a:	460d      	mov	r5, r1
9001330c:	4616      	mov	r6, r2
9001330e:	b103      	cbz	r3, 90013312 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
90013310:	6038      	str	r0, [r7, #0]
90013312:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90013314:	b314      	cbz	r4, 9001335c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
90013316:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001331a:	b1eb      	cbz	r3, 90013358 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9001331c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90013320:	428d      	cmp	r5, r1
90013322:	db19      	blt.n	90013358 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90013324:	b289      	uxth	r1, r1
90013326:	8923      	ldrh	r3, [r4, #8]
90013328:	440b      	add	r3, r1
9001332a:	b21b      	sxth	r3, r3
9001332c:	429d      	cmp	r5, r3
9001332e:	da13      	bge.n	90013358 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90013330:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90013334:	4296      	cmp	r6, r2
90013336:	db0f      	blt.n	90013358 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90013338:	b292      	uxth	r2, r2
9001333a:	8963      	ldrh	r3, [r4, #10]
9001333c:	4413      	add	r3, r2
9001333e:	b21b      	sxth	r3, r3
90013340:	429e      	cmp	r6, r3
90013342:	da09      	bge.n	90013358 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90013344:	6823      	ldr	r3, [r4, #0]
90013346:	1ab2      	subs	r2, r6, r2
90013348:	1a69      	subs	r1, r5, r1
9001334a:	4620      	mov	r0, r4
9001334c:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
90013350:	b212      	sxth	r2, r2
90013352:	463b      	mov	r3, r7
90013354:	b209      	sxth	r1, r1
90013356:	47c0      	blx	r8
90013358:	69a4      	ldr	r4, [r4, #24]
9001335a:	e7db      	b.n	90013314 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9001335c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013360 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90013360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013364:	4c6d      	ldr	r4, [pc, #436]	@ (9001351c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90013366:	b0a1      	sub	sp, #132	@ 0x84
90013368:	4606      	mov	r6, r0
9001336a:	6824      	ldr	r4, [r4, #0]
9001336c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
9001336e:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
90013372:	2400      	movs	r4, #0
90013374:	9303      	str	r3, [sp, #12]
90013376:	802c      	strh	r4, [r5, #0]
90013378:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
9001337a:	802c      	strh	r4, [r5, #0]
9001337c:	601c      	str	r4, [r3, #0]
9001337e:	e9cd 1201 	strd	r1, r2, [sp, #4]
90013382:	f7ff ffbd 	bl	90013300 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90013386:	f1b9 0f03 	cmp.w	r9, #3
9001338a:	f340 80c1 	ble.w	90013510 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9001338e:	4631      	mov	r1, r6
90013390:	a80c      	add	r0, sp, #48	@ 0x30
90013392:	f007 facf 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013396:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001339a:	9306      	str	r3, [sp, #24]
9001339c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
900133a0:	9307      	str	r3, [sp, #28]
900133a2:	9b03      	ldr	r3, [sp, #12]
900133a4:	f8d3 a000 	ldr.w	sl, [r3]
900133a8:	f1ba 0f00 	cmp.w	sl, #0
900133ac:	f000 80b3 	beq.w	90013516 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
900133b0:	4651      	mov	r1, sl
900133b2:	a810      	add	r0, sp, #64	@ 0x40
900133b4:	f007 fabe 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900133b8:	2002      	movs	r0, #2
900133ba:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
900133be:	9b01      	ldr	r3, [sp, #4]
900133c0:	9a06      	ldr	r2, [sp, #24]
900133c2:	fb91 f1f0 	sdiv	r1, r1, r0
900133c6:	189d      	adds	r5, r3, r2
900133c8:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
900133cc:	9a07      	ldr	r2, [sp, #28]
900133ce:	4419      	add	r1, r3
900133d0:	9b02      	ldr	r3, [sp, #8]
900133d2:	4413      	add	r3, r2
900133d4:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
900133d8:	1a6d      	subs	r5, r5, r1
900133da:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
900133de:	fb92 f2f0 	sdiv	r2, r2, r0
900133e2:	440a      	add	r2, r1
900133e4:	1a9b      	subs	r3, r3, r2
900133e6:	435b      	muls	r3, r3
900133e8:	fb05 3505 	mla	r5, r5, r5, r3
900133ec:	4f4c      	ldr	r7, [pc, #304]	@ (90013520 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
900133ee:	ac10      	add	r4, sp, #64	@ 0x40
900133f0:	f1b9 0f0c 	cmp.w	r9, #12
900133f4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900133f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900133f8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900133fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900133fc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900133fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90013400:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90013404:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90013408:	f04f 0303 	mov.w	r3, #3
9001340c:	bfd8      	it	le
9001340e:	f109 32ff 	addle.w	r2, r9, #4294967295
90013412:	f04f 0400 	mov.w	r4, #0
90013416:	f8cd 9000 	str.w	r9, [sp]
9001341a:	bfcc      	ite	gt
9001341c:	4698      	movgt	r8, r3
9001341e:	fb92 f8f3 	sdivle	r8, r2, r3
90013422:	1c63      	adds	r3, r4, #1
90013424:	aa10      	add	r2, sp, #64	@ 0x40
90013426:	f004 0401 	and.w	r4, r4, #1
9001342a:	f04f 0b00 	mov.w	fp, #0
9001342e:	9308      	str	r3, [sp, #32]
90013430:	9b00      	ldr	r3, [sp, #0]
90013432:	eb02 1444 	add.w	r4, r2, r4, lsl #5
90013436:	fb93 f3f8 	sdiv	r3, r3, r8
9001343a:	3404      	adds	r4, #4
9001343c:	b29b      	uxth	r3, r3
9001343e:	9304      	str	r3, [sp, #16]
90013440:	9a04      	ldr	r2, [sp, #16]
90013442:	f854 3c04 	ldr.w	r3, [r4, #-4]
90013446:	fb13 f302 	smulbb	r3, r3, r2
9001344a:	9a01      	ldr	r2, [sp, #4]
9001344c:	b29b      	uxth	r3, r3
9001344e:	1899      	adds	r1, r3, r2
90013450:	9305      	str	r3, [sp, #20]
90013452:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90013456:	b209      	sxth	r1, r1
90013458:	4299      	cmp	r1, r3
9001345a:	db4d      	blt.n	900134f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001345c:	8932      	ldrh	r2, [r6, #8]
9001345e:	4413      	add	r3, r2
90013460:	b21b      	sxth	r3, r3
90013462:	4299      	cmp	r1, r3
90013464:	da48      	bge.n	900134f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013466:	9b04      	ldr	r3, [sp, #16]
90013468:	6827      	ldr	r7, [r4, #0]
9001346a:	fb17 f703 	smulbb	r7, r7, r3
9001346e:	9b02      	ldr	r3, [sp, #8]
90013470:	b2bf      	uxth	r7, r7
90013472:	18fa      	adds	r2, r7, r3
90013474:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90013478:	b212      	sxth	r2, r2
9001347a:	429a      	cmp	r2, r3
9001347c:	db3c      	blt.n	900134f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001347e:	8970      	ldrh	r0, [r6, #10]
90013480:	4403      	add	r3, r0
90013482:	b21b      	sxth	r3, r3
90013484:	429a      	cmp	r2, r3
90013486:	da37      	bge.n	900134f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013488:	2300      	movs	r3, #0
9001348a:	4630      	mov	r0, r6
9001348c:	930b      	str	r3, [sp, #44]	@ 0x2c
9001348e:	ab0b      	add	r3, sp, #44	@ 0x2c
90013490:	f7ff ff36 	bl	90013300 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90013494:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90013496:	b37a      	cbz	r2, 900134f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013498:	4552      	cmp	r2, sl
9001349a:	d02d      	beq.n	900134f8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001349c:	4611      	mov	r1, r2
9001349e:	a80e      	add	r0, sp, #56	@ 0x38
900134a0:	9209      	str	r2, [sp, #36]	@ 0x24
900134a2:	f007 fa47 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900134a6:	f04f 0e02 	mov.w	lr, #2
900134aa:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
900134ae:	9a06      	ldr	r2, [sp, #24]
900134b0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
900134b4:	9b01      	ldr	r3, [sp, #4]
900134b6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
900134ba:	4413      	add	r3, r2
900134bc:	9a07      	ldr	r2, [sp, #28]
900134be:	fb91 f1fe 	sdiv	r1, r1, lr
900134c2:	fb9c fcfe 	sdiv	ip, ip, lr
900134c6:	4401      	add	r1, r0
900134c8:	1a58      	subs	r0, r3, r1
900134ca:	9b02      	ldr	r3, [sp, #8]
900134cc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
900134d0:	4413      	add	r3, r2
900134d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900134d4:	448c      	add	ip, r1
900134d6:	eba3 030c 	sub.w	r3, r3, ip
900134da:	435b      	muls	r3, r3
900134dc:	fb00 3300 	mla	r3, r0, r0, r3
900134e0:	42ab      	cmp	r3, r5
900134e2:	d208      	bcs.n	900134f6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
900134e4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
900134e6:	461d      	mov	r5, r3
900134e8:	9803      	ldr	r0, [sp, #12]
900134ea:	6001      	str	r1, [r0, #0]
900134ec:	992a      	ldr	r1, [sp, #168]	@ 0xa8
900134ee:	9805      	ldr	r0, [sp, #20]
900134f0:	8008      	strh	r0, [r1, #0]
900134f2:	992b      	ldr	r1, [sp, #172]	@ 0xac
900134f4:	800f      	strh	r7, [r1, #0]
900134f6:	4692      	mov	sl, r2
900134f8:	f10b 0b01 	add.w	fp, fp, #1
900134fc:	3408      	adds	r4, #8
900134fe:	f1bb 0f04 	cmp.w	fp, #4
90013502:	d19d      	bne.n	90013440 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90013504:	9b00      	ldr	r3, [sp, #0]
90013506:	9c08      	ldr	r4, [sp, #32]
90013508:	444b      	add	r3, r9
9001350a:	4544      	cmp	r4, r8
9001350c:	9300      	str	r3, [sp, #0]
9001350e:	d188      	bne.n	90013422 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90013510:	b021      	add	sp, #132	@ 0x84
90013512:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013516:	f04f 35ff 	mov.w	r5, #4294967295
9001351a:	e767      	b.n	900133ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
9001351c:	240245a0 	.word	0x240245a0
90013520:	9002d308 	.word	0x9002d308

90013524 <_ZN8touchgfx4RectaNERKS0_>:
90013524:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013528:	f9b1 7000 	ldrsh.w	r7, [r1]
9001352c:	888c      	ldrh	r4, [r1, #4]
9001352e:	f9b0 9000 	ldrsh.w	r9, [r0]
90013532:	443c      	add	r4, r7
90013534:	b2a4      	uxth	r4, r4
90013536:	fa0f f884 	sxth.w	r8, r4
9001353a:	45c1      	cmp	r9, r8
9001353c:	da2f      	bge.n	9001359e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001353e:	8882      	ldrh	r2, [r0, #4]
90013540:	444a      	add	r2, r9
90013542:	b292      	uxth	r2, r2
90013544:	fa0f fe82 	sxth.w	lr, r2
90013548:	4577      	cmp	r7, lr
9001354a:	da28      	bge.n	9001359e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001354c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90013550:	88cb      	ldrh	r3, [r1, #6]
90013552:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013556:	442b      	add	r3, r5
90013558:	b21b      	sxth	r3, r3
9001355a:	429e      	cmp	r6, r3
9001355c:	da1f      	bge.n	9001359e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001355e:	88c3      	ldrh	r3, [r0, #6]
90013560:	4433      	add	r3, r6
90013562:	b29b      	uxth	r3, r3
90013564:	fa0f fc83 	sxth.w	ip, r3
90013568:	4565      	cmp	r5, ip
9001356a:	da18      	bge.n	9001359e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001356c:	454f      	cmp	r7, r9
9001356e:	bfb8      	it	lt
90013570:	464f      	movlt	r7, r9
90013572:	42b5      	cmp	r5, r6
90013574:	bfb8      	it	lt
90013576:	4635      	movlt	r5, r6
90013578:	45f0      	cmp	r8, lr
9001357a:	bfd8      	it	le
9001357c:	4622      	movle	r2, r4
9001357e:	1bd2      	subs	r2, r2, r7
90013580:	8082      	strh	r2, [r0, #4]
90013582:	884a      	ldrh	r2, [r1, #2]
90013584:	88c9      	ldrh	r1, [r1, #6]
90013586:	8007      	strh	r7, [r0, #0]
90013588:	440a      	add	r2, r1
9001358a:	8045      	strh	r5, [r0, #2]
9001358c:	b292      	uxth	r2, r2
9001358e:	b211      	sxth	r1, r2
90013590:	458c      	cmp	ip, r1
90013592:	bfa8      	it	ge
90013594:	4613      	movge	r3, r2
90013596:	1b5b      	subs	r3, r3, r5
90013598:	80c3      	strh	r3, [r0, #6]
9001359a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001359e:	2300      	movs	r3, #0
900135a0:	8003      	strh	r3, [r0, #0]
900135a2:	8043      	strh	r3, [r0, #2]
900135a4:	8083      	strh	r3, [r0, #4]
900135a6:	80c3      	strh	r3, [r0, #6]
900135a8:	e7f7      	b.n	9001359a <_ZN8touchgfx4RectaNERKS0_+0x76>

900135aa <_ZNK8touchgfx4Rect7isEmptyEv>:
900135aa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900135ae:	2b00      	cmp	r3, #0
900135b0:	dd06      	ble.n	900135c0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
900135b2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
900135b6:	2800      	cmp	r0, #0
900135b8:	bfcc      	ite	gt
900135ba:	2000      	movgt	r0, #0
900135bc:	2001      	movle	r0, #1
900135be:	4770      	bx	lr
900135c0:	2001      	movs	r0, #1
900135c2:	4770      	bx	lr

900135c4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
900135c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900135c8:	2300      	movs	r3, #0
900135ca:	4604      	mov	r4, r0
900135cc:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
900135ce:	8003      	strh	r3, [r0, #0]
900135d0:	8043      	strh	r3, [r0, #2]
900135d2:	8083      	strh	r3, [r0, #4]
900135d4:	80c3      	strh	r3, [r0, #6]
900135d6:	2d00      	cmp	r5, #0
900135d8:	d040      	beq.n	9001365c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
900135da:	1d28      	adds	r0, r5, #4
900135dc:	f7ff ffe5 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
900135e0:	b988      	cbnz	r0, 90013606 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900135e2:	4620      	mov	r0, r4
900135e4:	f7ff ffe1 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
900135e8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900135ec:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900135f0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
900135f4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
900135f8:	b138      	cbz	r0, 9001360a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
900135fa:	8022      	strh	r2, [r4, #0]
900135fc:	8063      	strh	r3, [r4, #2]
900135fe:	f8a4 e004 	strh.w	lr, [r4, #4]
90013602:	f8a4 c006 	strh.w	ip, [r4, #6]
90013606:	69ad      	ldr	r5, [r5, #24]
90013608:	e7e5      	b.n	900135d6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9001360a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001360e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90013612:	4290      	cmp	r0, r2
90013614:	4607      	mov	r7, r0
90013616:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9001361a:	460e      	mov	r6, r1
9001361c:	bfa8      	it	ge
9001361e:	4617      	movge	r7, r2
90013620:	4299      	cmp	r1, r3
90013622:	4472      	add	r2, lr
90013624:	f8b4 e006 	ldrh.w	lr, [r4, #6]
90013628:	bfa8      	it	ge
9001362a:	461e      	movge	r6, r3
9001362c:	4440      	add	r0, r8
9001362e:	4471      	add	r1, lr
90013630:	4463      	add	r3, ip
90013632:	b200      	sxth	r0, r0
90013634:	8027      	strh	r7, [r4, #0]
90013636:	b212      	sxth	r2, r2
90013638:	8066      	strh	r6, [r4, #2]
9001363a:	b209      	sxth	r1, r1
9001363c:	b21b      	sxth	r3, r3
9001363e:	4290      	cmp	r0, r2
90013640:	bfac      	ite	ge
90013642:	ebc7 0200 	rsbge	r2, r7, r0
90013646:	ebc7 0202 	rsblt	r2, r7, r2
9001364a:	4299      	cmp	r1, r3
9001364c:	bfac      	ite	ge
9001364e:	ebc6 0301 	rsbge	r3, r6, r1
90013652:	ebc6 0303 	rsblt	r3, r6, r3
90013656:	80a2      	strh	r2, [r4, #4]
90013658:	80e3      	strh	r3, [r4, #6]
9001365a:	e7d4      	b.n	90013606 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001365c:	4620      	mov	r0, r4
9001365e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013662 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90013662:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90013666:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001366a:	b383      	cbz	r3, 900136ce <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9001366c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001366e:	b374      	cbz	r4, 900136ce <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90013670:	f9b1 5000 	ldrsh.w	r5, [r1]
90013674:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90013678:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
9001367c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90013680:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90013684:	b303      	cbz	r3, 900136c8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90013686:	4668      	mov	r0, sp
90013688:	1d21      	adds	r1, r4, #4
9001368a:	f8ad 5000 	strh.w	r5, [sp]
9001368e:	f8ad 6002 	strh.w	r6, [sp, #2]
90013692:	f8ad 7004 	strh.w	r7, [sp, #4]
90013696:	f8ad 8006 	strh.w	r8, [sp, #6]
9001369a:	f7ff ff43 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
9001369e:	4668      	mov	r0, sp
900136a0:	f7ff ff83 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
900136a4:	b980      	cbnz	r0, 900136c8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900136a6:	f8bd 3000 	ldrh.w	r3, [sp]
900136aa:	4669      	mov	r1, sp
900136ac:	88a2      	ldrh	r2, [r4, #4]
900136ae:	4620      	mov	r0, r4
900136b0:	1a9b      	subs	r3, r3, r2
900136b2:	88e2      	ldrh	r2, [r4, #6]
900136b4:	f8ad 3000 	strh.w	r3, [sp]
900136b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900136bc:	1a9b      	subs	r3, r3, r2
900136be:	f8ad 3002 	strh.w	r3, [sp, #2]
900136c2:	6823      	ldr	r3, [r4, #0]
900136c4:	689b      	ldr	r3, [r3, #8]
900136c6:	4798      	blx	r3
900136c8:	69a4      	ldr	r4, [r4, #24]
900136ca:	2c00      	cmp	r4, #0
900136cc:	d1d8      	bne.n	90013680 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
900136ce:	b002      	add	sp, #8
900136d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900136d4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
900136d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
900136d6:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900136da:	460d      	mov	r5, r1
900136dc:	4616      	mov	r6, r2
900136de:	b323      	cbz	r3, 9001372a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
900136e0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900136e2:	b314      	cbz	r4, 9001372a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
900136e4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900136e8:	b1eb      	cbz	r3, 90013726 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900136ea:	6828      	ldr	r0, [r5, #0]
900136ec:	466b      	mov	r3, sp
900136ee:	6869      	ldr	r1, [r5, #4]
900136f0:	c303      	stmia	r3!, {r0, r1}
900136f2:	4668      	mov	r0, sp
900136f4:	1d21      	adds	r1, r4, #4
900136f6:	f7ff ff15 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
900136fa:	4668      	mov	r0, sp
900136fc:	f7ff ff55 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
90013700:	b988      	cbnz	r0, 90013726 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90013702:	f8bd 3000 	ldrh.w	r3, [sp]
90013706:	4669      	mov	r1, sp
90013708:	88a2      	ldrh	r2, [r4, #4]
9001370a:	4620      	mov	r0, r4
9001370c:	1a9b      	subs	r3, r3, r2
9001370e:	88e2      	ldrh	r2, [r4, #6]
90013710:	f8ad 3000 	strh.w	r3, [sp]
90013714:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90013718:	1a9b      	subs	r3, r3, r2
9001371a:	4632      	mov	r2, r6
9001371c:	f8ad 3002 	strh.w	r3, [sp, #2]
90013720:	6823      	ldr	r3, [r4, #0]
90013722:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90013724:	4798      	blx	r3
90013726:	69a4      	ldr	r4, [r4, #24]
90013728:	e7db      	b.n	900136e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001372a:	b002      	add	sp, #8
9001372c:	bd70      	pop	{r4, r5, r6, pc}

9001372e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
9001372e:	6803      	ldr	r3, [r0, #0]
90013730:	b513      	push	{r0, r1, r4, lr}
90013732:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
90013736:	2300      	movs	r3, #0
90013738:	e9cd 3300 	strd	r3, r3, [sp]
9001373c:	466b      	mov	r3, sp
9001373e:	47a0      	blx	r4
90013740:	b002      	add	sp, #8
90013742:	bd10      	pop	{r4, pc}

90013744 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90013744:	2301      	movs	r3, #1
90013746:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9001374a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9001374e:	4770      	bx	lr

90013750 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90013750:	2301      	movs	r3, #1
90013752:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90013756:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9001375a:	4770      	bx	lr

9001375c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
9001375c:	6843      	ldr	r3, [r0, #4]
9001375e:	2201      	movs	r2, #1
90013760:	725a      	strb	r2, [r3, #9]
90013762:	6840      	ldr	r0, [r0, #4]
90013764:	6803      	ldr	r3, [r0, #0]
90013766:	691b      	ldr	r3, [r3, #16]
90013768:	4718      	bx	r3

9001376a <_ZN8touchgfx3HAL8flushDMAEv>:
9001376a:	6840      	ldr	r0, [r0, #4]
9001376c:	6803      	ldr	r3, [r0, #0]
9001376e:	689b      	ldr	r3, [r3, #8]
90013770:	4718      	bx	r3

90013772 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90013772:	b530      	push	{r4, r5, lr}
90013774:	b08b      	sub	sp, #44	@ 0x2c
90013776:	6804      	ldr	r4, [r0, #0]
90013778:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
9001377c:	9509      	str	r5, [sp, #36]	@ 0x24
9001377e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
90013782:	9508      	str	r5, [sp, #32]
90013784:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
90013788:	9507      	str	r5, [sp, #28]
9001378a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
9001378e:	9506      	str	r5, [sp, #24]
90013790:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90013794:	9505      	str	r5, [sp, #20]
90013796:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
9001379a:	9504      	str	r5, [sp, #16]
9001379c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
900137a0:	9503      	str	r5, [sp, #12]
900137a2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
900137a6:	9502      	str	r5, [sp, #8]
900137a8:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
900137ac:	e9cd 3500 	strd	r3, r5, [sp]
900137b0:	4613      	mov	r3, r2
900137b2:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
900137b4:	2200      	movs	r2, #0
900137b6:	47a0      	blx	r4
900137b8:	b00b      	add	sp, #44	@ 0x2c
900137ba:	bd30      	pop	{r4, r5, pc}

900137bc <_ZN8touchgfx3HAL10beginFrameEv>:
900137bc:	4b04      	ldr	r3, [pc, #16]	@ (900137d0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
900137be:	781b      	ldrb	r3, [r3, #0]
900137c0:	b123      	cbz	r3, 900137cc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
900137c2:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
900137c6:	f080 0001 	eor.w	r0, r0, #1
900137ca:	4770      	bx	lr
900137cc:	2001      	movs	r0, #1
900137ce:	4770      	bx	lr
900137d0:	2402459c 	.word	0x2402459c

900137d4 <_ZN8touchgfx3HAL8endFrameEv>:
900137d4:	b510      	push	{r4, lr}
900137d6:	4604      	mov	r4, r0
900137d8:	6840      	ldr	r0, [r0, #4]
900137da:	6803      	ldr	r3, [r0, #0]
900137dc:	689b      	ldr	r3, [r3, #8]
900137de:	4798      	blx	r3
900137e0:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
900137e4:	b113      	cbz	r3, 900137ec <_ZN8touchgfx3HAL8endFrameEv+0x18>
900137e6:	2301      	movs	r3, #1
900137e8:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
900137ec:	bd10      	pop	{r4, pc}

900137ee <_ZN8touchgfx3HAL10initializeEv>:
900137ee:	b510      	push	{r4, lr}
900137f0:	4604      	mov	r4, r0
900137f2:	f7ee fd79 	bl	900022e8 <_ZN8touchgfx10OSWrappers10initializeEv>
900137f6:	f7ed f9f7 	bl	90000be8 <_ZN8touchgfx4GPIO4initEv>
900137fa:	6860      	ldr	r0, [r4, #4]
900137fc:	6803      	ldr	r3, [r0, #0]
900137fe:	68db      	ldr	r3, [r3, #12]
90013800:	4798      	blx	r3
90013802:	68e0      	ldr	r0, [r4, #12]
90013804:	6803      	ldr	r3, [r0, #0]
90013806:	689b      	ldr	r3, [r3, #8]
90013808:	4798      	blx	r3
9001380a:	6823      	ldr	r3, [r4, #0]
9001380c:	4620      	mov	r0, r4
9001380e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90013810:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90013814:	4718      	bx	r3
	...

90013818 <_ZN8touchgfx3HAL4tickEv>:
90013818:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001381a:	6803      	ldr	r3, [r0, #0]
9001381c:	4604      	mov	r4, r0
9001381e:	4d5b      	ldr	r5, [pc, #364]	@ (9001398c <_ZN8touchgfx3HAL4tickEv+0x174>)
90013820:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
90013824:	4798      	blx	r3
90013826:	2800      	cmp	r0, #0
90013828:	f000 8095 	beq.w	90013956 <_ZN8touchgfx3HAL4tickEv+0x13e>
9001382c:	2001      	movs	r0, #1
9001382e:	2600      	movs	r6, #0
90013830:	f7ed fa14 	bl	90000c5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90013834:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
90013838:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
9001383c:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90013840:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
90013844:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
90013848:	b133      	cbz	r3, 90013858 <_ZN8touchgfx3HAL4tickEv+0x40>
9001384a:	6823      	ldr	r3, [r4, #0]
9001384c:	4620      	mov	r0, r4
9001384e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
90013852:	4798      	blx	r3
90013854:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90013858:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
9001385c:	2601      	movs	r6, #1
9001385e:	6862      	ldr	r2, [r4, #4]
90013860:	f083 0301 	eor.w	r3, r3, #1
90013864:	702e      	strb	r6, [r5, #0]
90013866:	7253      	strb	r3, [r2, #9]
90013868:	f005 ff50 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
9001386c:	6803      	ldr	r3, [r0, #0]
9001386e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90013870:	4798      	blx	r3
90013872:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90013876:	b90b      	cbnz	r3, 9001387c <_ZN8touchgfx3HAL4tickEv+0x64>
90013878:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
9001387c:	f005 ff46 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
90013880:	6803      	ldr	r3, [r0, #0]
90013882:	695b      	ldr	r3, [r3, #20]
90013884:	4798      	blx	r3
90013886:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90013888:	6803      	ldr	r3, [r0, #0]
9001388a:	691b      	ldr	r3, [r3, #16]
9001388c:	4798      	blx	r3
9001388e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90013892:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
90013896:	3b01      	subs	r3, #1
90013898:	b2db      	uxtb	r3, r3
9001389a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
9001389e:	b10a      	cbz	r2, 900138a4 <_ZN8touchgfx3HAL4tickEv+0x8c>
900138a0:	2b00      	cmp	r3, #0
900138a2:	d1eb      	bne.n	9001387c <_ZN8touchgfx3HAL4tickEv+0x64>
900138a4:	4a3a      	ldr	r2, [pc, #232]	@ (90013990 <_ZN8touchgfx3HAL4tickEv+0x178>)
900138a6:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
900138aa:	7813      	ldrb	r3, [r2, #0]
900138ac:	3301      	adds	r3, #1
900138ae:	b25b      	sxtb	r3, r3
900138b0:	4299      	cmp	r1, r3
900138b2:	7013      	strb	r3, [r2, #0]
900138b4:	dc10      	bgt.n	900138d8 <_ZN8touchgfx3HAL4tickEv+0xc0>
900138b6:	2300      	movs	r3, #0
900138b8:	68e0      	ldr	r0, [r4, #12]
900138ba:	a902      	add	r1, sp, #8
900138bc:	7013      	strb	r3, [r2, #0]
900138be:	aa03      	add	r2, sp, #12
900138c0:	6803      	ldr	r3, [r0, #0]
900138c2:	68db      	ldr	r3, [r3, #12]
900138c4:	4798      	blx	r3
900138c6:	6823      	ldr	r3, [r4, #0]
900138c8:	2800      	cmp	r0, #0
900138ca:	d050      	beq.n	9001396e <_ZN8touchgfx3HAL4tickEv+0x156>
900138cc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
900138d0:	4620      	mov	r0, r4
900138d2:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
900138d6:	4798      	blx	r3
900138d8:	2300      	movs	r3, #0
900138da:	6960      	ldr	r0, [r4, #20]
900138dc:	f88d 3007 	strb.w	r3, [sp, #7]
900138e0:	b158      	cbz	r0, 900138fa <_ZN8touchgfx3HAL4tickEv+0xe2>
900138e2:	6803      	ldr	r3, [r0, #0]
900138e4:	f10d 0107 	add.w	r1, sp, #7
900138e8:	68db      	ldr	r3, [r3, #12]
900138ea:	4798      	blx	r3
900138ec:	b128      	cbz	r0, 900138fa <_ZN8touchgfx3HAL4tickEv+0xe2>
900138ee:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900138f0:	f89d 1007 	ldrb.w	r1, [sp, #7]
900138f4:	6803      	ldr	r3, [r0, #0]
900138f6:	68db      	ldr	r3, [r3, #12]
900138f8:	4798      	blx	r3
900138fa:	f104 001c 	add.w	r0, r4, #28
900138fe:	f017 f9c9 	bl	9002ac94 <_ZN8touchgfx8Gestures4tickEv>
90013902:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
90013906:	b30b      	cbz	r3, 9001394c <_ZN8touchgfx3HAL4tickEv+0x134>
90013908:	6920      	ldr	r0, [r4, #16]
9001390a:	6803      	ldr	r3, [r0, #0]
9001390c:	691b      	ldr	r3, [r3, #16]
9001390e:	4798      	blx	r3
90013910:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90013912:	4606      	mov	r6, r0
90013914:	b903      	cbnz	r3, 90013918 <_ZN8touchgfx3HAL4tickEv+0x100>
90013916:	6760      	str	r0, [r4, #116]	@ 0x74
90013918:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001391a:	4a1e      	ldr	r2, [pc, #120]	@ (90013994 <_ZN8touchgfx3HAL4tickEv+0x17c>)
9001391c:	1af3      	subs	r3, r6, r3
9001391e:	4293      	cmp	r3, r2
90013920:	d914      	bls.n	9001394c <_ZN8touchgfx3HAL4tickEv+0x134>
90013922:	6920      	ldr	r0, [r4, #16]
90013924:	6803      	ldr	r3, [r0, #0]
90013926:	699b      	ldr	r3, [r3, #24]
90013928:	4798      	blx	r3
9001392a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001392c:	2264      	movs	r2, #100	@ 0x64
9001392e:	1af3      	subs	r3, r6, r3
90013930:	fbb3 f3f2 	udiv	r3, r3, r2
90013934:	fbb0 f0f3 	udiv	r0, r0, r3
90013938:	2800      	cmp	r0, #0
9001393a:	dc1d      	bgt.n	90013978 <_ZN8touchgfx3HAL4tickEv+0x160>
9001393c:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90013940:	6920      	ldr	r0, [r4, #16]
90013942:	2100      	movs	r1, #0
90013944:	6803      	ldr	r3, [r0, #0]
90013946:	69db      	ldr	r3, [r3, #28]
90013948:	4798      	blx	r3
9001394a:	6766      	str	r6, [r4, #116]	@ 0x74
9001394c:	f005 fede 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
90013950:	6803      	ldr	r3, [r0, #0]
90013952:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013954:	4798      	blx	r3
90013956:	6823      	ldr	r3, [r4, #0]
90013958:	4620      	mov	r0, r4
9001395a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
9001395e:	4798      	blx	r3
90013960:	2001      	movs	r0, #1
90013962:	f7ed f9af 	bl	90000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90013966:	2300      	movs	r3, #0
90013968:	702b      	strb	r3, [r5, #0]
9001396a:	b004      	add	sp, #16
9001396c:	bd70      	pop	{r4, r5, r6, pc}
9001396e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90013972:	4620      	mov	r0, r4
90013974:	4798      	blx	r3
90013976:	e7af      	b.n	900138d8 <_ZN8touchgfx3HAL4tickEv+0xc0>
90013978:	2863      	cmp	r0, #99	@ 0x63
9001397a:	bfcb      	itete	gt
9001397c:	2300      	movgt	r3, #0
9001397e:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90013982:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
90013986:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
9001398a:	e7d9      	b.n	90013940 <_ZN8touchgfx3HAL4tickEv+0x128>
9001398c:	240245a4 	.word	0x240245a4
90013990:	240245a5 	.word	0x240245a5
90013994:	05f5e100 	.word	0x05f5e100

90013998 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90013998:	b510      	push	{r4, lr}
9001399a:	4604      	mov	r4, r0
9001399c:	f7ee fcd6 	bl	9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
900139a0:	2200      	movs	r2, #0
900139a2:	6863      	ldr	r3, [r4, #4]
900139a4:	729a      	strb	r2, [r3, #10]
900139a6:	bd10      	pop	{r4, pc}

900139a8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
900139a8:	65c1      	str	r1, [r0, #92]	@ 0x5c
900139aa:	301c      	adds	r0, #28
900139ac:	f017 b970 	b.w	9002ac90 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

900139b0 <_ZN8touchgfx3HAL5touchEll>:
900139b0:	b530      	push	{r4, r5, lr}
900139b2:	b087      	sub	sp, #28
900139b4:	4604      	mov	r4, r0
900139b6:	a804      	add	r0, sp, #16
900139b8:	e9cd 1204 	strd	r1, r2, [sp, #16]
900139bc:	f005 fcae 	bl	9001931c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
900139c0:	9b04      	ldr	r3, [sp, #16]
900139c2:	a906      	add	r1, sp, #24
900139c4:	a803      	add	r0, sp, #12
900139c6:	f8ad 300c 	strh.w	r3, [sp, #12]
900139ca:	9b05      	ldr	r3, [sp, #20]
900139cc:	f821 3d0a 	strh.w	r3, [r1, #-10]!
900139d0:	f005 fcf6 	bl	900193c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
900139d4:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
900139d8:	f104 001c 	add.w	r0, r4, #28
900139dc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900139e0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
900139e4:	b189      	cbz	r1, 90013a0a <_ZN8touchgfx3HAL5touchEll+0x5a>
900139e6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
900139ea:	9300      	str	r3, [sp, #0]
900139ec:	4613      	mov	r3, r2
900139ee:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
900139f2:	462a      	mov	r2, r5
900139f4:	f017 f95c 	bl	9002acb0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900139f8:	b128      	cbz	r0, 90013a06 <_ZN8touchgfx3HAL5touchEll+0x56>
900139fa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900139fe:	6623      	str	r3, [r4, #96]	@ 0x60
90013a00:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90013a04:	6663      	str	r3, [r4, #100]	@ 0x64
90013a06:	b007      	add	sp, #28
90013a08:	bd30      	pop	{r4, r5, pc}
90013a0a:	f017 f991 	bl	9002ad30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90013a0e:	2301      	movs	r3, #1
90013a10:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90013a14:	e7f1      	b.n	900139fa <_ZN8touchgfx3HAL5touchEll+0x4a>

90013a16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
90013a16:	b510      	push	{r4, lr}
90013a18:	2b00      	cmp	r3, #0
90013a1a:	d046      	beq.n	90013aaa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90013a1c:	ea81 0002 	eor.w	r0, r1, r2
90013a20:	07c4      	lsls	r4, r0, #31
90013a22:	d508      	bpl.n	90013a36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90013a24:	440b      	add	r3, r1
90013a26:	3a01      	subs	r2, #1
90013a28:	428b      	cmp	r3, r1
90013a2a:	d93e      	bls.n	90013aaa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90013a2c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90013a30:	f801 0b01 	strb.w	r0, [r1], #1
90013a34:	e7f8      	b.n	90013a28 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
90013a36:	07d0      	lsls	r0, r2, #31
90013a38:	bf42      	ittt	mi
90013a3a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90013a3e:	f103 33ff 	addmi.w	r3, r3, #4294967295
90013a42:	f801 0b01 	strbmi.w	r0, [r1], #1
90013a46:	2b01      	cmp	r3, #1
90013a48:	d911      	bls.n	90013a6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90013a4a:	ea81 0402 	eor.w	r4, r1, r2
90013a4e:	4610      	mov	r0, r2
90013a50:	07a4      	lsls	r4, r4, #30
90013a52:	d022      	beq.n	90013a9a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90013a54:	f023 0401 	bic.w	r4, r3, #1
90013a58:	440c      	add	r4, r1
90013a5a:	428c      	cmp	r4, r1
90013a5c:	4602      	mov	r2, r0
90013a5e:	d904      	bls.n	90013a6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90013a60:	8812      	ldrh	r2, [r2, #0]
90013a62:	3002      	adds	r0, #2
90013a64:	f821 2b02 	strh.w	r2, [r1], #2
90013a68:	e7f7      	b.n	90013a5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90013a6a:	f003 0301 	and.w	r3, r3, #1
90013a6e:	f023 0003 	bic.w	r0, r3, #3
90013a72:	4408      	add	r0, r1
90013a74:	4288      	cmp	r0, r1
90013a76:	4614      	mov	r4, r2
90013a78:	d904      	bls.n	90013a84 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90013a7a:	6824      	ldr	r4, [r4, #0]
90013a7c:	3204      	adds	r2, #4
90013a7e:	f841 4b04 	str.w	r4, [r1], #4
90013a82:	e7f7      	b.n	90013a74 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90013a84:	f003 0303 	and.w	r3, r3, #3
90013a88:	3a01      	subs	r2, #1
90013a8a:	440b      	add	r3, r1
90013a8c:	428b      	cmp	r3, r1
90013a8e:	d90c      	bls.n	90013aaa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90013a90:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90013a94:	f801 0b01 	strb.w	r0, [r1], #1
90013a98:	e7f8      	b.n	90013a8c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90013a9a:	0790      	lsls	r0, r2, #30
90013a9c:	d0e7      	beq.n	90013a6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90013a9e:	f832 0b02 	ldrh.w	r0, [r2], #2
90013aa2:	3b02      	subs	r3, #2
90013aa4:	f821 0b02 	strh.w	r0, [r1], #2
90013aa8:	e7e1      	b.n	90013a6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90013aaa:	2001      	movs	r0, #1
90013aac:	bd10      	pop	{r4, pc}

90013aae <_ZN8touchgfx3HAL7noTouchEv>:
90013aae:	b510      	push	{r4, lr}
90013ab0:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90013ab4:	4604      	mov	r4, r0
90013ab6:	b153      	cbz	r3, 90013ace <_ZN8touchgfx3HAL7noTouchEv+0x20>
90013ab8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90013abc:	2101      	movs	r1, #1
90013abe:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90013ac2:	301c      	adds	r0, #28
90013ac4:	f017 f934 	bl	9002ad30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90013ac8:	2300      	movs	r3, #0
90013aca:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90013ace:	bd10      	pop	{r4, pc}

90013ad0 <_ZN8touchgfx8Drawable5setXYEss>:
90013ad0:	b570      	push	{r4, r5, r6, lr}
90013ad2:	6803      	ldr	r3, [r0, #0]
90013ad4:	4604      	mov	r4, r0
90013ad6:	4615      	mov	r5, r2
90013ad8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90013ada:	4798      	blx	r3
90013adc:	6823      	ldr	r3, [r4, #0]
90013ade:	4629      	mov	r1, r5
90013ae0:	4620      	mov	r0, r4
90013ae2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90013ae4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013ae8:	4718      	bx	r3
	...

90013aec <_ZN8touchgfx3HAL3lcdEv>:
90013aec:	4b04      	ldr	r3, [pc, #16]	@ (90013b00 <_ZN8touchgfx3HAL3lcdEv+0x14>)
90013aee:	681b      	ldr	r3, [r3, #0]
90013af0:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90013af4:	b10a      	cbz	r2, 90013afa <_ZN8touchgfx3HAL3lcdEv+0xe>
90013af6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90013af8:	b900      	cbnz	r0, 90013afc <_ZN8touchgfx3HAL3lcdEv+0x10>
90013afa:	6898      	ldr	r0, [r3, #8]
90013afc:	4770      	bx	lr
90013afe:	bf00      	nop
90013b00:	240245a0 	.word	0x240245a0

90013b04 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90013b04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013b08:	b085      	sub	sp, #20
90013b0a:	4604      	mov	r4, r0
90013b0c:	2000      	movs	r0, #0
90013b0e:	4699      	mov	r9, r3
90013b10:	ad04      	add	r5, sp, #16
90013b12:	460f      	mov	r7, r1
90013b14:	4690      	mov	r8, r2
90013b16:	f845 0d04 	str.w	r0, [r5, #-4]!
90013b1a:	69a0      	ldr	r0, [r4, #24]
90013b1c:	6806      	ldr	r6, [r0, #0]
90013b1e:	9501      	str	r5, [sp, #4]
90013b20:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90013b24:	9500      	str	r5, [sp, #0]
90013b26:	6835      	ldr	r5, [r6, #0]
90013b28:	47a8      	blx	r5
90013b2a:	4d10      	ldr	r5, [pc, #64]	@ (90013b6c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90013b2c:	4606      	mov	r6, r0
90013b2e:	f8a5 9000 	strh.w	r9, [r5]
90013b32:	f7ff ffdb 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
90013b36:	6803      	ldr	r3, [r0, #0]
90013b38:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013b3a:	4798      	blx	r3
90013b3c:	b128      	cbz	r0, 90013b4a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90013b3e:	2801      	cmp	r0, #1
90013b40:	d00b      	beq.n	90013b5a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90013b42:	4630      	mov	r0, r6
90013b44:	b005      	add	sp, #20
90013b46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013b4a:	882b      	ldrh	r3, [r5, #0]
90013b4c:	fb08 7203 	mla	r2, r8, r3, r7
90013b50:	9b03      	ldr	r3, [sp, #12]
90013b52:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90013b56:	63e3      	str	r3, [r4, #60]	@ 0x3c
90013b58:	e7f3      	b.n	90013b42 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90013b5a:	882a      	ldrh	r2, [r5, #0]
90013b5c:	9b03      	ldr	r3, [sp, #12]
90013b5e:	fb08 7202 	mla	r2, r8, r2, r7
90013b62:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90013b66:	1a9a      	subs	r2, r3, r2
90013b68:	63e2      	str	r2, [r4, #60]	@ 0x3c
90013b6a:	e7ea      	b.n	90013b42 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90013b6c:	24024598 	.word	0x24024598

90013b70 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90013b70:	b5f0      	push	{r4, r5, r6, r7, lr}
90013b72:	b08b      	sub	sp, #44	@ 0x2c
90013b74:	4617      	mov	r7, r2
90013b76:	4604      	mov	r4, r0
90013b78:	460e      	mov	r6, r1
90013b7a:	461d      	mov	r5, r3
90013b7c:	f7ff ffb6 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
90013b80:	6803      	ldr	r3, [r0, #0]
90013b82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013b84:	4798      	blx	r3
90013b86:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90013b8a:	9007      	str	r0, [sp, #28]
90013b8c:	4631      	mov	r1, r6
90013b8e:	6822      	ldr	r2, [r4, #0]
90013b90:	e9cd 0308 	strd	r0, r3, [sp, #32]
90013b94:	4b0c      	ldr	r3, [pc, #48]	@ (90013bc8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90013b96:	4620      	mov	r0, r4
90013b98:	881b      	ldrh	r3, [r3, #0]
90013b9a:	9306      	str	r3, [sp, #24]
90013b9c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90013ba0:	9305      	str	r3, [sp, #20]
90013ba2:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90013ba6:	9304      	str	r3, [sp, #16]
90013ba8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013bac:	9303      	str	r3, [sp, #12]
90013bae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90013bb2:	9302      	str	r3, [sp, #8]
90013bb4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90013bb8:	e9cd 5300 	strd	r5, r3, [sp]
90013bbc:	463b      	mov	r3, r7
90013bbe:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
90013bc0:	2200      	movs	r2, #0
90013bc2:	47a8      	blx	r5
90013bc4:	b00b      	add	sp, #44	@ 0x2c
90013bc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013bc8:	24024598 	.word	0x24024598

90013bcc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90013bcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013bd0:	4698      	mov	r8, r3
90013bd2:	6803      	ldr	r3, [r0, #0]
90013bd4:	b08b      	sub	sp, #44	@ 0x2c
90013bd6:	4617      	mov	r7, r2
90013bd8:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
90013bda:	460e      	mov	r6, r1
90013bdc:	4b13      	ldr	r3, [pc, #76]	@ (90013c2c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90013bde:	4604      	mov	r4, r0
90013be0:	f8b3 9000 	ldrh.w	r9, [r3]
90013be4:	f7ff ff82 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
90013be8:	6803      	ldr	r3, [r0, #0]
90013bea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013bec:	4798      	blx	r3
90013bee:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90013bf2:	2200      	movs	r2, #0
90013bf4:	4631      	mov	r1, r6
90013bf6:	e9cd 0308 	strd	r0, r3, [sp, #32]
90013bfa:	2302      	movs	r3, #2
90013bfc:	4620      	mov	r0, r4
90013bfe:	e9cd 9306 	strd	r9, r3, [sp, #24]
90013c02:	2301      	movs	r3, #1
90013c04:	9305      	str	r3, [sp, #20]
90013c06:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90013c0a:	9304      	str	r3, [sp, #16]
90013c0c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90013c10:	9303      	str	r3, [sp, #12]
90013c12:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90013c16:	9302      	str	r3, [sp, #8]
90013c18:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013c1c:	e9cd 8300 	strd	r8, r3, [sp]
90013c20:	463b      	mov	r3, r7
90013c22:	47a8      	blx	r5
90013c24:	b00b      	add	sp, #44	@ 0x2c
90013c26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013c2a:	bf00      	nop
90013c2c:	24024598 	.word	0x24024598

90013c30 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90013c30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013c34:	4698      	mov	r8, r3
90013c36:	6803      	ldr	r3, [r0, #0]
90013c38:	b087      	sub	sp, #28
90013c3a:	460e      	mov	r6, r1
90013c3c:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
90013c3e:	4617      	mov	r7, r2
90013c40:	4b0f      	ldr	r3, [pc, #60]	@ (90013c80 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90013c42:	4604      	mov	r4, r0
90013c44:	f8b3 9000 	ldrh.w	r9, [r3]
90013c48:	f7ff ff50 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
90013c4c:	6803      	ldr	r3, [r0, #0]
90013c4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013c50:	4798      	blx	r3
90013c52:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90013c56:	463a      	mov	r2, r7
90013c58:	4631      	mov	r1, r6
90013c5a:	f8cd 900c 	str.w	r9, [sp, #12]
90013c5e:	e9cd 0304 	strd	r0, r3, [sp, #16]
90013c62:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90013c66:	4620      	mov	r0, r4
90013c68:	9302      	str	r3, [sp, #8]
90013c6a:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90013c6e:	9301      	str	r3, [sp, #4]
90013c70:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90013c74:	9300      	str	r3, [sp, #0]
90013c76:	4643      	mov	r3, r8
90013c78:	47a8      	blx	r5
90013c7a:	b007      	add	sp, #28
90013c7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013c80:	24024598 	.word	0x24024598

90013c84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90013c84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013c88:	4604      	mov	r4, r0
90013c8a:	b08f      	sub	sp, #60	@ 0x3c
90013c8c:	4610      	mov	r0, r2
90013c8e:	460d      	mov	r5, r1
90013c90:	4691      	mov	r9, r2
90013c92:	461e      	mov	r6, r3
90013c94:	f008 fd30 	bl	9001c6f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90013c98:	2800      	cmp	r0, #0
90013c9a:	f000 809d 	beq.w	90013dd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90013c9e:	6823      	ldr	r3, [r4, #0]
90013ca0:	4620      	mov	r0, r4
90013ca2:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90013e3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90013ca6:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90013caa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90013cac:	4798      	blx	r3
90013cae:	6823      	ldr	r3, [r4, #0]
90013cb0:	4620      	mov	r0, r4
90013cb2:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90013e40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90013cb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013cb8:	4798      	blx	r3
90013cba:	f8bb 3000 	ldrh.w	r3, [fp]
90013cbe:	4f5c      	ldr	r7, [pc, #368]	@ (90013e30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90013cc0:	9301      	str	r3, [sp, #4]
90013cc2:	f8ba 3000 	ldrh.w	r3, [sl]
90013cc6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90013cca:	4640      	mov	r0, r8
90013ccc:	9302      	str	r3, [sp, #8]
90013cce:	883b      	ldrh	r3, [r7, #0]
90013cd0:	9303      	str	r3, [sp, #12]
90013cd2:	4b58      	ldr	r3, [pc, #352]	@ (90013e34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90013cd4:	881a      	ldrh	r2, [r3, #0]
90013cd6:	9305      	str	r3, [sp, #20]
90013cd8:	9204      	str	r2, [sp, #16]
90013cda:	f008 fda1 	bl	9001c820 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013cde:	8038      	strh	r0, [r7, #0]
90013ce0:	4640      	mov	r0, r8
90013ce2:	f008 fdd1 	bl	9001c888 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013ce6:	9b05      	ldr	r3, [sp, #20]
90013ce8:	b280      	uxth	r0, r0
90013cea:	8018      	strh	r0, [r3, #0]
90013cec:	4b52      	ldr	r3, [pc, #328]	@ (90013e38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90013cee:	781b      	ldrb	r3, [r3, #0]
90013cf0:	2b00      	cmp	r3, #0
90013cf2:	d174      	bne.n	90013dde <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90013cf4:	883b      	ldrh	r3, [r7, #0]
90013cf6:	f8aa 0000 	strh.w	r0, [sl]
90013cfa:	f8ab 3000 	strh.w	r3, [fp]
90013cfe:	4648      	mov	r0, r9
90013d00:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90013d04:	f008 fcf8 	bl	9001c6f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90013d08:	2200      	movs	r2, #0
90013d0a:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
90013d0e:	4611      	mov	r1, r2
90013d10:	4628      	mov	r0, r5
90013d12:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90013d16:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90013d1a:	f7ff fed9 	bl	90013ad0 <_ZN8touchgfx8Drawable5setXYEss>
90013d1e:	2301      	movs	r3, #1
90013d20:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90013d24:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90013d28:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90013d2c:	2b00      	cmp	r3, #0
90013d2e:	dd5c      	ble.n	90013dea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90013d30:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90013d34:	2b00      	cmp	r3, #0
90013d36:	dd58      	ble.n	90013dea <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90013d38:	462a      	mov	r2, r5
90013d3a:	ab0a      	add	r3, sp, #40	@ 0x28
90013d3c:	f852 0f04 	ldr.w	r0, [r2, #4]!
90013d40:	6851      	ldr	r1, [r2, #4]
90013d42:	c303      	stmia	r3!, {r0, r1}
90013d44:	4631      	mov	r1, r6
90013d46:	a80a      	add	r0, sp, #40	@ 0x28
90013d48:	f7ff fbec 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
90013d4c:	4b38      	ldr	r3, [pc, #224]	@ (90013e30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90013d4e:	2100      	movs	r1, #0
90013d50:	f9b3 2000 	ldrsh.w	r2, [r3]
90013d54:	4b37      	ldr	r3, [pc, #220]	@ (90013e34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90013d56:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90013d5a:	aa0a      	add	r2, sp, #40	@ 0x28
90013d5c:	f9b3 3000 	ldrsh.w	r3, [r3]
90013d60:	910c      	str	r1, [sp, #48]	@ 0x30
90013d62:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90013d66:	ab08      	add	r3, sp, #32
90013d68:	e892 0003 	ldmia.w	r2, {r0, r1}
90013d6c:	e883 0003 	stmia.w	r3, {r0, r1}
90013d70:	4618      	mov	r0, r3
90013d72:	a90c      	add	r1, sp, #48	@ 0x30
90013d74:	f7ff fbd6 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
90013d78:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90013d7a:	2b00      	cmp	r3, #0
90013d7c:	d13c      	bne.n	90013df8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90013d7e:	2000      	movs	r0, #0
90013d80:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90013d84:	2600      	movs	r6, #0
90013d86:	696b      	ldr	r3, [r5, #20]
90013d88:	a908      	add	r1, sp, #32
90013d8a:	682a      	ldr	r2, [r5, #0]
90013d8c:	4628      	mov	r0, r5
90013d8e:	9305      	str	r3, [sp, #20]
90013d90:	616e      	str	r6, [r5, #20]
90013d92:	6892      	ldr	r2, [r2, #8]
90013d94:	4790      	blx	r2
90013d96:	9b05      	ldr	r3, [sp, #20]
90013d98:	4652      	mov	r2, sl
90013d9a:	4649      	mov	r1, r9
90013d9c:	616b      	str	r3, [r5, #20]
90013d9e:	4628      	mov	r0, r5
90013da0:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90013da4:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90013da8:	f7ff fe92 	bl	90013ad0 <_ZN8touchgfx8Drawable5setXYEss>
90013dac:	9a01      	ldr	r2, [sp, #4]
90013dae:	4b23      	ldr	r3, [pc, #140]	@ (90013e3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90013db0:	4620      	mov	r0, r4
90013db2:	801a      	strh	r2, [r3, #0]
90013db4:	9a02      	ldr	r2, [sp, #8]
90013db6:	4b22      	ldr	r3, [pc, #136]	@ (90013e40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90013db8:	801a      	strh	r2, [r3, #0]
90013dba:	9a03      	ldr	r2, [sp, #12]
90013dbc:	4b1c      	ldr	r3, [pc, #112]	@ (90013e30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90013dbe:	801a      	strh	r2, [r3, #0]
90013dc0:	4b1c      	ldr	r3, [pc, #112]	@ (90013e34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90013dc2:	9a04      	ldr	r2, [sp, #16]
90013dc4:	801a      	strh	r2, [r3, #0]
90013dc6:	6823      	ldr	r3, [r4, #0]
90013dc8:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90013dcc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90013dce:	4798      	blx	r3
90013dd0:	6823      	ldr	r3, [r4, #0]
90013dd2:	4620      	mov	r0, r4
90013dd4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013dd6:	4798      	blx	r3
90013dd8:	b00f      	add	sp, #60	@ 0x3c
90013dda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013dde:	883b      	ldrh	r3, [r7, #0]
90013de0:	f8ab 0000 	strh.w	r0, [fp]
90013de4:	f8aa 3000 	strh.w	r3, [sl]
90013de8:	e789      	b.n	90013cfe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90013dea:	462a      	mov	r2, r5
90013dec:	ab0a      	add	r3, sp, #40	@ 0x28
90013dee:	f852 0f04 	ldr.w	r0, [r2, #4]!
90013df2:	6851      	ldr	r1, [r2, #4]
90013df4:	c303      	stmia	r3!, {r0, r1}
90013df6:	e7a9      	b.n	90013d4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90013df8:	a807      	add	r0, sp, #28
90013dfa:	f008 fe87 	bl	9001cb0c <_ZNK8touchgfx6Bitmap9getFormatEv>
90013dfe:	4606      	mov	r6, r0
90013e00:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90013e02:	6803      	ldr	r3, [r0, #0]
90013e04:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013e06:	4798      	blx	r3
90013e08:	4286      	cmp	r6, r0
90013e0a:	d1b8      	bne.n	90013d7e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90013e0c:	f7ff fe6e 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
90013e10:	6803      	ldr	r3, [r0, #0]
90013e12:	4606      	mov	r6, r0
90013e14:	a807      	add	r0, sp, #28
90013e16:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90013e18:	9305      	str	r3, [sp, #20]
90013e1a:	f008 fe77 	bl	9001cb0c <_ZNK8touchgfx6Bitmap9getFormatEv>
90013e1e:	9b05      	ldr	r3, [sp, #20]
90013e20:	4601      	mov	r1, r0
90013e22:	4630      	mov	r0, r6
90013e24:	4798      	blx	r3
90013e26:	f080 0001 	eor.w	r0, r0, #1
90013e2a:	b2c0      	uxtb	r0, r0
90013e2c:	e7a8      	b.n	90013d80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90013e2e:	bf00      	nop
90013e30:	24024592 	.word	0x24024592
90013e34:	24024594 	.word	0x24024594
90013e38:	24024596 	.word	0x24024596
90013e3c:	24024598 	.word	0x24024598
90013e40:	2402459a 	.word	0x2402459a

90013e44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90013e44:	4b07      	ldr	r3, [pc, #28]	@ (90013e64 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90013e46:	b510      	push	{r4, lr}
90013e48:	781b      	ldrb	r3, [r3, #0]
90013e4a:	4604      	mov	r4, r0
90013e4c:	b13b      	cbz	r3, 90013e5e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90013e4e:	6803      	ldr	r3, [r0, #0]
90013e50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90013e52:	4798      	blx	r3
90013e54:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90013e56:	4283      	cmp	r3, r0
90013e58:	d101      	bne.n	90013e5e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90013e5a:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90013e5c:	bd10      	pop	{r4, pc}
90013e5e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90013e60:	e7fc      	b.n	90013e5c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90013e62:	bf00      	nop
90013e64:	2402459c 	.word	0x2402459c

90013e68 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90013e68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013e6c:	461d      	mov	r5, r3
90013e6e:	b08a      	sub	sp, #40	@ 0x28
90013e70:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90013e74:	4690      	mov	r8, r2
90013e76:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90013e7a:	2400      	movs	r4, #0
90013e7c:	4607      	mov	r7, r0
90013e7e:	fb06 8505 	mla	r5, r6, r5, r8
90013e82:	9404      	str	r4, [sp, #16]
90013e84:	f88d 4020 	strb.w	r4, [sp, #32]
90013e88:	e9cd 3101 	strd	r3, r1, [sp, #4]
90013e8c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90013e90:	f8ad 3018 	strh.w	r3, [sp, #24]
90013e94:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90013e98:	f8ad 301a 	strh.w	r3, [sp, #26]
90013e9c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013ea0:	f8ad 301c 	strh.w	r3, [sp, #28]
90013ea4:	f7ff ffce 	bl	90013e44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013ea8:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90013eac:	6878      	ldr	r0, [r7, #4]
90013eae:	f8ad 601e 	strh.w	r6, [sp, #30]
90013eb2:	a901      	add	r1, sp, #4
90013eb4:	9505      	str	r5, [sp, #20]
90013eb6:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90013eba:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90013ebe:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90013ec2:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90013ec6:	6803      	ldr	r3, [r0, #0]
90013ec8:	685b      	ldr	r3, [r3, #4]
90013eca:	4798      	blx	r3
90013ecc:	b00a      	add	sp, #40	@ 0x28
90013ece:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013ed2 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90013ed2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013ed6:	b08b      	sub	sp, #44	@ 0x2c
90013ed8:	2400      	movs	r4, #0
90013eda:	4691      	mov	r9, r2
90013edc:	461d      	mov	r5, r3
90013ede:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90013ee2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90013ee6:	4688      	mov	r8, r1
90013ee8:	4607      	mov	r7, r0
90013eea:	9404      	str	r4, [sp, #16]
90013eec:	fb06 9505 	mla	r5, r6, r5, r9
90013ef0:	e9cd 3401 	strd	r3, r4, [sp, #4]
90013ef4:	f7ff ffa6 	bl	90013e44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013ef8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013efc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90013f00:	6878      	ldr	r0, [r7, #4]
90013f02:	f8ad 3018 	strh.w	r3, [sp, #24]
90013f06:	a901      	add	r1, sp, #4
90013f08:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90013f0c:	9505      	str	r5, [sp, #20]
90013f0e:	f8ad 301a 	strh.w	r3, [sp, #26]
90013f12:	f8ad 401c 	strh.w	r4, [sp, #28]
90013f16:	f8ad 601e 	strh.w	r6, [sp, #30]
90013f1a:	f8cd 8010 	str.w	r8, [sp, #16]
90013f1e:	f8ad 4020 	strh.w	r4, [sp, #32]
90013f22:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90013f26:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90013f2a:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90013f2e:	6803      	ldr	r3, [r0, #0]
90013f30:	685b      	ldr	r3, [r3, #4]
90013f32:	4798      	blx	r3
90013f34:	b00b      	add	sp, #44	@ 0x2c
90013f36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90013f3c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90013f3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013f40:	b08a      	sub	sp, #40	@ 0x28
90013f42:	4698      	mov	r8, r3
90013f44:	2300      	movs	r3, #0
90013f46:	4606      	mov	r6, r0
90013f48:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90013f4c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90013f50:	2d0b      	cmp	r5, #11
90013f52:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
90013f56:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90013f5a:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90013f5e:	9304      	str	r3, [sp, #16]
90013f60:	d137      	bne.n	90013fd2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90013f62:	2380      	movs	r3, #128	@ 0x80
90013f64:	f88d 0020 	strb.w	r0, [sp, #32]
90013f68:	4630      	mov	r0, r6
90013f6a:	9203      	str	r2, [sp, #12]
90013f6c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90013f70:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90013f74:	f8ad 3018 	strh.w	r3, [sp, #24]
90013f78:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013f7c:	f8ad 301a 	strh.w	r3, [sp, #26]
90013f80:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90013f84:	f8ad 301c 	strh.w	r3, [sp, #28]
90013f88:	f7ff ff5c 	bl	90013e44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013f8c:	2c0b      	cmp	r4, #11
90013f8e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90013f92:	f8ad 701e 	strh.w	r7, [sp, #30]
90013f96:	bf94      	ite	ls
90013f98:	4b19      	ldrls	r3, [pc, #100]	@ (90014000 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90013f9a:	2100      	movhi	r1, #0
90013f9c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90013fa0:	bf98      	it	ls
90013fa2:	5d19      	ldrbls	r1, [r3, r4]
90013fa4:	fb02 8307 	mla	r3, r2, r7, r8
90013fa8:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90013fac:	10c9      	asrs	r1, r1, #3
90013fae:	fb01 0003 	mla	r0, r1, r3, r0
90013fb2:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90013fb6:	a901      	add	r1, sp, #4
90013fb8:	9005      	str	r0, [sp, #20]
90013fba:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90013fbe:	2300      	movs	r3, #0
90013fc0:	6870      	ldr	r0, [r6, #4]
90013fc2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90013fc6:	6803      	ldr	r3, [r0, #0]
90013fc8:	685b      	ldr	r3, [r3, #4]
90013fca:	4798      	blx	r3
90013fcc:	b00a      	add	sp, #40	@ 0x28
90013fce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013fd2:	2d02      	cmp	r5, #2
90013fd4:	d109      	bne.n	90013fea <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90013fd6:	28ff      	cmp	r0, #255	@ 0xff
90013fd8:	d105      	bne.n	90013fe6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90013fda:	f1bc 0f00 	cmp.w	ip, #0
90013fde:	bf14      	ite	ne
90013fe0:	2340      	movne	r3, #64	@ 0x40
90013fe2:	2320      	moveq	r3, #32
90013fe4:	e7be      	b.n	90013f64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013fe6:	2340      	movs	r3, #64	@ 0x40
90013fe8:	e7bc      	b.n	90013f64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013fea:	28ff      	cmp	r0, #255	@ 0xff
90013fec:	d105      	bne.n	90013ffa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90013fee:	f1bc 0f00 	cmp.w	ip, #0
90013ff2:	bf14      	ite	ne
90013ff4:	2304      	movne	r3, #4
90013ff6:	2301      	moveq	r3, #1
90013ff8:	e7b4      	b.n	90013f64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013ffa:	2304      	movs	r3, #4
90013ffc:	e7b2      	b.n	90013f64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013ffe:	bf00      	nop
90014000:	90030084 	.word	0x90030084

90014004 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90014004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014008:	b08b      	sub	sp, #44	@ 0x2c
9001400a:	461d      	mov	r5, r3
9001400c:	2400      	movs	r4, #0
9001400e:	4688      	mov	r8, r1
90014010:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90014014:	4693      	mov	fp, r2
90014016:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
9001401a:	4607      	mov	r7, r0
9001401c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90014020:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90014024:	9404      	str	r4, [sp, #16]
90014026:	bf14      	ite	ne
90014028:	2308      	movne	r3, #8
9001402a:	2302      	moveq	r3, #2
9001402c:	fb05 b50a 	mla	r5, r5, sl, fp
90014030:	e9cd 3401 	strd	r3, r4, [sp, #4]
90014034:	f7ff ff06 	bl	90013e44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90014038:	2e0b      	cmp	r6, #11
9001403a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001403e:	a901      	add	r1, sp, #4
90014040:	bf98      	it	ls
90014042:	4b13      	ldrls	r3, [pc, #76]	@ (90014090 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90014044:	f8ad a01e 	strh.w	sl, [sp, #30]
90014048:	bf98      	it	ls
9001404a:	5d9c      	ldrbls	r4, [r3, r6]
9001404c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90014050:	10e4      	asrs	r4, r4, #3
90014052:	f8cd 8010 	str.w	r8, [sp, #16]
90014056:	f8ad 3018 	strh.w	r3, [sp, #24]
9001405a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001405e:	fb04 0405 	mla	r4, r4, r5, r0
90014062:	6878      	ldr	r0, [r7, #4]
90014064:	f8ad 301a 	strh.w	r3, [sp, #26]
90014068:	2300      	movs	r3, #0
9001406a:	9405      	str	r4, [sp, #20]
9001406c:	f8ad 301c 	strh.w	r3, [sp, #28]
90014070:	f88d 9020 	strb.w	r9, [sp, #32]
90014074:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90014078:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
9001407c:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90014080:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90014084:	6803      	ldr	r3, [r0, #0]
90014086:	685b      	ldr	r3, [r3, #4]
90014088:	4798      	blx	r3
9001408a:	b00b      	add	sp, #44	@ 0x2c
9001408c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014090:	90030084 	.word	0x90030084

90014094 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90014094:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014098:	461e      	mov	r6, r3
9001409a:	4b0a      	ldr	r3, [pc, #40]	@ (900140c4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
9001409c:	460f      	mov	r7, r1
9001409e:	4690      	mov	r8, r2
900140a0:	881d      	ldrh	r5, [r3, #0]
900140a2:	f7ff fd23 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
900140a6:	6803      	ldr	r3, [r0, #0]
900140a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900140aa:	4798      	blx	r3
900140ac:	280b      	cmp	r0, #11
900140ae:	bf96      	itet	ls
900140b0:	4b05      	ldrls	r3, [pc, #20]	@ (900140c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
900140b2:	2400      	movhi	r4, #0
900140b4:	5c1c      	ldrbls	r4, [r3, r0]
900140b6:	fb08 7005 	mla	r0, r8, r5, r7
900140ba:	10e4      	asrs	r4, r4, #3
900140bc:	fb04 6000 	mla	r0, r4, r0, r6
900140c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900140c4:	24024598 	.word	0x24024598
900140c8:	90030084 	.word	0x90030084

900140cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
900140cc:	b5f0      	push	{r4, r5, r6, r7, lr}
900140ce:	b08b      	sub	sp, #44	@ 0x2c
900140d0:	461f      	mov	r7, r3
900140d2:	4604      	mov	r4, r0
900140d4:	4616      	mov	r6, r2
900140d6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
900140da:	2500      	movs	r5, #0
900140dc:	e9cd 3101 	strd	r3, r1, [sp, #4]
900140e0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900140e4:	9504      	str	r5, [sp, #16]
900140e6:	f8ad 3018 	strh.w	r3, [sp, #24]
900140ea:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900140ee:	f8ad 301a 	strh.w	r3, [sp, #26]
900140f2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900140f6:	f8ad 301c 	strh.w	r3, [sp, #28]
900140fa:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900140fe:	f88d 3020 	strb.w	r3, [sp, #32]
90014102:	f7ff fe9f 	bl	90013e44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90014106:	463a      	mov	r2, r7
90014108:	4631      	mov	r1, r6
9001410a:	4603      	mov	r3, r0
9001410c:	4620      	mov	r0, r4
9001410e:	f7ff ffc1 	bl	90014094 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90014112:	4b0e      	ldr	r3, [pc, #56]	@ (9001414c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90014114:	9005      	str	r0, [sp, #20]
90014116:	881b      	ldrh	r3, [r3, #0]
90014118:	f8ad 301e 	strh.w	r3, [sp, #30]
9001411c:	f7ff fce6 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
90014120:	6803      	ldr	r3, [r0, #0]
90014122:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014124:	4798      	blx	r3
90014126:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90014128:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
9001412c:	a901      	add	r1, sp, #4
9001412e:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90014132:	9304      	str	r3, [sp, #16]
90014134:	6860      	ldr	r0, [r4, #4]
90014136:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
9001413a:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
9001413e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90014142:	6803      	ldr	r3, [r0, #0]
90014144:	685b      	ldr	r3, [r3, #4]
90014146:	4798      	blx	r3
90014148:	b00b      	add	sp, #44	@ 0x2c
9001414a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001414c:	24024598 	.word	0x24024598

90014150 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90014150:	b5f0      	push	{r4, r5, r6, r7, lr}
90014152:	b08d      	sub	sp, #52	@ 0x34
90014154:	2501      	movs	r5, #1
90014156:	4604      	mov	r4, r0
90014158:	466b      	mov	r3, sp
9001415a:	9503      	str	r5, [sp, #12]
9001415c:	e883 0006 	stmia.w	r3, {r1, r2}
90014160:	2300      	movs	r3, #0
90014162:	f8bd 6000 	ldrh.w	r6, [sp]
90014166:	f8bd 7002 	ldrh.w	r7, [sp, #2]
9001416a:	9306      	str	r3, [sp, #24]
9001416c:	6803      	ldr	r3, [r0, #0]
9001416e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90014170:	4798      	blx	r3
90014172:	463a      	mov	r2, r7
90014174:	4631      	mov	r1, r6
90014176:	4603      	mov	r3, r0
90014178:	4620      	mov	r0, r4
9001417a:	f7ff ff8b 	bl	90014094 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001417e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90014180:	9004      	str	r0, [sp, #16]
90014182:	9307      	str	r3, [sp, #28]
90014184:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90014188:	f8ad 3020 	strh.w	r3, [sp, #32]
9001418c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90014190:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90014194:	4b0e      	ldr	r3, [pc, #56]	@ (900141d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90014196:	881b      	ldrh	r3, [r3, #0]
90014198:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
9001419c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
900141a0:	f7ff fca4 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
900141a4:	6803      	ldr	r3, [r0, #0]
900141a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900141a8:	4798      	blx	r3
900141aa:	23ff      	movs	r3, #255	@ 0xff
900141ac:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
900141b0:	a903      	add	r1, sp, #12
900141b2:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900141b6:	6860      	ldr	r0, [r4, #4]
900141b8:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
900141bc:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
900141c0:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
900141c4:	6803      	ldr	r3, [r0, #0]
900141c6:	685b      	ldr	r3, [r3, #4]
900141c8:	4798      	blx	r3
900141ca:	6c60      	ldr	r0, [r4, #68]	@ 0x44
900141cc:	b00d      	add	sp, #52	@ 0x34
900141ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
900141d0:	24024598 	.word	0x24024598

900141d4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
900141d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900141d8:	b08c      	sub	sp, #48	@ 0x30
900141da:	461e      	mov	r6, r3
900141dc:	2300      	movs	r3, #0
900141de:	4604      	mov	r4, r0
900141e0:	466d      	mov	r5, sp
900141e2:	9306      	str	r3, [sp, #24]
900141e4:	6803      	ldr	r3, [r0, #0]
900141e6:	e885 0006 	stmia.w	r5, {r1, r2}
900141ea:	2501      	movs	r5, #1
900141ec:	f8bd 7000 	ldrh.w	r7, [sp]
900141f0:	f8bd 8002 	ldrh.w	r8, [sp, #2]
900141f4:	9503      	str	r5, [sp, #12]
900141f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900141f8:	4798      	blx	r3
900141fa:	4642      	mov	r2, r8
900141fc:	4639      	mov	r1, r7
900141fe:	4603      	mov	r3, r0
90014200:	4620      	mov	r0, r4
90014202:	f7ff ff47 	bl	90014094 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90014206:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001420a:	9004      	str	r0, [sp, #16]
9001420c:	f8ad 3020 	strh.w	r3, [sp, #32]
90014210:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90014214:	9607      	str	r6, [sp, #28]
90014216:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001421a:	4b10      	ldr	r3, [pc, #64]	@ (9001425c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
9001421c:	881b      	ldrh	r3, [r3, #0]
9001421e:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90014222:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90014224:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90014228:	f7ff fc60 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
9001422c:	6803      	ldr	r3, [r0, #0]
9001422e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014230:	4798      	blx	r3
90014232:	23ff      	movs	r3, #255	@ 0xff
90014234:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90014238:	a903      	add	r1, sp, #12
9001423a:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
9001423e:	6860      	ldr	r0, [r4, #4]
90014240:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90014244:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90014248:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
9001424c:	6803      	ldr	r3, [r0, #0]
9001424e:	685b      	ldr	r3, [r3, #4]
90014250:	4798      	blx	r3
90014252:	4630      	mov	r0, r6
90014254:	b00c      	add	sp, #48	@ 0x30
90014256:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001425a:	bf00      	nop
9001425c:	24024598 	.word	0x24024598

90014260 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90014260:	b5f0      	push	{r4, r5, r6, r7, lr}
90014262:	b085      	sub	sp, #20
90014264:	4605      	mov	r5, r0
90014266:	ac02      	add	r4, sp, #8
90014268:	e884 0006 	stmia.w	r4, {r1, r2}
9001426c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90014270:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90014274:	f7ff fde6 	bl	90013e44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90014278:	4631      	mov	r1, r6
9001427a:	4603      	mov	r3, r0
9001427c:	463a      	mov	r2, r7
9001427e:	4628      	mov	r0, r5
90014280:	f7ff ff08 	bl	90014094 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90014284:	4a05      	ldr	r2, [pc, #20]	@ (9001429c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90014286:	682b      	ldr	r3, [r5, #0]
90014288:	8812      	ldrh	r2, [r2, #0]
9001428a:	9200      	str	r2, [sp, #0]
9001428c:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
9001428e:	4603      	mov	r3, r0
90014290:	4628      	mov	r0, r5
90014292:	e894 0006 	ldmia.w	r4, {r1, r2}
90014296:	47b0      	blx	r6
90014298:	b005      	add	sp, #20
9001429a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001429c:	24024598 	.word	0x24024598

900142a0 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
900142a0:	b570      	push	{r4, r5, r6, lr}
900142a2:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
900142a6:	4604      	mov	r4, r0
900142a8:	b19b      	cbz	r3, 900142d2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
900142aa:	2002      	movs	r0, #2
900142ac:	f7ec fd3e 	bl	90000d2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
900142b0:	2300      	movs	r3, #0
900142b2:	4620      	mov	r0, r4
900142b4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
900142b8:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
900142bc:	6823      	ldr	r3, [r4, #0]
900142be:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
900142c2:	f7ff fdbf 	bl	90013e44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900142c6:	4601      	mov	r1, r0
900142c8:	4620      	mov	r0, r4
900142ca:	462b      	mov	r3, r5
900142cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900142d0:	4718      	bx	r3
900142d2:	bd70      	pop	{r4, r5, r6, pc}

900142d4 <_ZN8touchgfx3HAL12setMCUActiveEb>:
900142d4:	b570      	push	{r4, r5, r6, lr}
900142d6:	4605      	mov	r5, r0
900142d8:	460c      	mov	r4, r1
900142da:	2003      	movs	r0, #3
900142dc:	b149      	cbz	r1, 900142f2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
900142de:	f7ec fcbd 	bl	90000c5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900142e2:	6928      	ldr	r0, [r5, #16]
900142e4:	b168      	cbz	r0, 90014302 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900142e6:	6803      	ldr	r3, [r0, #0]
900142e8:	2101      	movs	r1, #1
900142ea:	695b      	ldr	r3, [r3, #20]
900142ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900142f0:	4718      	bx	r3
900142f2:	f7ec fce7 	bl	90000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900142f6:	6928      	ldr	r0, [r5, #16]
900142f8:	b118      	cbz	r0, 90014302 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900142fa:	6803      	ldr	r3, [r0, #0]
900142fc:	4621      	mov	r1, r4
900142fe:	695b      	ldr	r3, [r3, #20]
90014300:	e7f4      	b.n	900142ec <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90014302:	bd70      	pop	{r4, r5, r6, pc}

90014304 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90014304:	b538      	push	{r3, r4, r5, lr}
90014306:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
9001430a:	4604      	mov	r4, r0
9001430c:	460d      	mov	r5, r1
9001430e:	428b      	cmp	r3, r1
90014310:	d006      	beq.n	90014320 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90014312:	6803      	ldr	r3, [r0, #0]
90014314:	b929      	cbnz	r1, 90014322 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90014316:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
9001431a:	4798      	blx	r3
9001431c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90014320:	bd38      	pop	{r3, r4, r5, pc}
90014322:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
90014326:	e7f8      	b.n	9001431a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90014328 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90014328:	4b0d      	ldr	r3, [pc, #52]	@ (90014360 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
9001432a:	b510      	push	{r4, lr}
9001432c:	781b      	ldrb	r3, [r3, #0]
9001432e:	4604      	mov	r4, r0
90014330:	b95b      	cbnz	r3, 9001434a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90014332:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90014336:	2b02      	cmp	r3, #2
90014338:	d007      	beq.n	9001434a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
9001433a:	6840      	ldr	r0, [r0, #4]
9001433c:	f000 f91a 	bl	90014574 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90014340:	b118      	cbz	r0, 9001434a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90014342:	6862      	ldr	r2, [r4, #4]
90014344:	7a53      	ldrb	r3, [r2, #9]
90014346:	2b00      	cmp	r3, #0
90014348:	d0fc      	beq.n	90014344 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
9001434a:	f7ed fff7 	bl	9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001434e:	4620      	mov	r0, r4
90014350:	2100      	movs	r1, #0
90014352:	f7ff ffd7 	bl	90014304 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90014356:	4620      	mov	r0, r4
90014358:	f7ff fd74 	bl	90013e44 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001435c:	bd10      	pop	{r4, pc}
9001435e:	bf00      	nop
90014360:	2402459c 	.word	0x2402459c

90014364 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90014364:	b570      	push	{r4, r5, r6, lr}
90014366:	4604      	mov	r4, r0
90014368:	6803      	ldr	r3, [r0, #0]
9001436a:	b919      	cbnz	r1, 90014374 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
9001436c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001436e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014372:	4718      	bx	r3
90014374:	2200      	movs	r2, #0
90014376:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
9001437a:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
9001437e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90014380:	4798      	blx	r3
90014382:	6863      	ldr	r3, [r4, #4]
90014384:	2101      	movs	r1, #1
90014386:	4605      	mov	r5, r0
90014388:	4620      	mov	r0, r4
9001438a:	7299      	strb	r1, [r3, #10]
9001438c:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90014390:	f7ff ffb8 	bl	90014304 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90014394:	4628      	mov	r0, r5
90014396:	bd70      	pop	{r4, r5, r6, pc}

90014398 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90014398:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
9001439c:	1a13      	subs	r3, r2, r0
9001439e:	4258      	negs	r0, r3
900143a0:	4158      	adcs	r0, r3
900143a2:	4770      	bx	lr

900143a4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
900143a4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
900143a8:	1a9b      	subs	r3, r3, r2
900143aa:	2b00      	cmp	r3, #0
900143ac:	bfdc      	itt	le
900143ae:	6882      	ldrle	r2, [r0, #8]
900143b0:	189b      	addle	r3, r3, r2
900143b2:	2b01      	cmp	r3, #1
900143b4:	bfcc      	ite	gt
900143b6:	2000      	movgt	r0, #0
900143b8:	2001      	movle	r0, #1
900143ba:	4770      	bx	lr

900143bc <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
900143bc:	6902      	ldr	r2, [r0, #16]
900143be:	6843      	ldr	r3, [r0, #4]
900143c0:	2024      	movs	r0, #36	@ 0x24
900143c2:	fb00 3002 	mla	r0, r0, r2, r3
900143c6:	4770      	bx	lr

900143c8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
900143c8:	6803      	ldr	r3, [r0, #0]
900143ca:	691b      	ldr	r3, [r3, #16]
900143cc:	4718      	bx	r3

900143ce <_ZN8touchgfx13DMA_Interface7executeEv>:
900143ce:	2301      	movs	r3, #1
900143d0:	b570      	push	{r4, r5, r6, lr}
900143d2:	7203      	strb	r3, [r0, #8]
900143d4:	4604      	mov	r4, r0
900143d6:	6840      	ldr	r0, [r0, #4]
900143d8:	6803      	ldr	r3, [r0, #0]
900143da:	699b      	ldr	r3, [r3, #24]
900143dc:	4798      	blx	r3
900143de:	6803      	ldr	r3, [r0, #0]
900143e0:	4605      	mov	r5, r0
900143e2:	2b40      	cmp	r3, #64	@ 0x40
900143e4:	d00c      	beq.n	90014400 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900143e6:	d810      	bhi.n	9001440a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
900143e8:	2b04      	cmp	r3, #4
900143ea:	d01d      	beq.n	90014428 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
900143ec:	d804      	bhi.n	900143f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
900143ee:	2b01      	cmp	r3, #1
900143f0:	d006      	beq.n	90014400 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900143f2:	2b02      	cmp	r3, #2
900143f4:	d02c      	beq.n	90014450 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
900143f6:	bd70      	pop	{r4, r5, r6, pc}
900143f8:	2b08      	cmp	r3, #8
900143fa:	d01d      	beq.n	90014438 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900143fc:	2b20      	cmp	r3, #32
900143fe:	d1fa      	bne.n	900143f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90014400:	6823      	ldr	r3, [r4, #0]
90014402:	4620      	mov	r0, r4
90014404:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014406:	4798      	blx	r3
90014408:	e013      	b.n	90014432 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
9001440a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9001440e:	d0f7      	beq.n	90014400 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90014410:	d804      	bhi.n	9001441c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90014412:	2b80      	cmp	r3, #128	@ 0x80
90014414:	d0f4      	beq.n	90014400 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90014416:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9001441a:	e7f0      	b.n	900143fe <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
9001441c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90014420:	d0ee      	beq.n	90014400 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90014422:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90014426:	e7e5      	b.n	900143f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90014428:	6823      	ldr	r3, [r4, #0]
9001442a:	7f01      	ldrb	r1, [r0, #28]
9001442c:	4620      	mov	r0, r4
9001442e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014430:	4798      	blx	r3
90014432:	6823      	ldr	r3, [r4, #0]
90014434:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90014436:	e006      	b.n	90014446 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90014438:	6823      	ldr	r3, [r4, #0]
9001443a:	7f01      	ldrb	r1, [r0, #28]
9001443c:	4620      	mov	r0, r4
9001443e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014440:	4798      	blx	r3
90014442:	6823      	ldr	r3, [r4, #0]
90014444:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90014446:	4629      	mov	r1, r5
90014448:	4620      	mov	r0, r4
9001444a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001444e:	4718      	bx	r3
90014450:	6823      	ldr	r3, [r4, #0]
90014452:	4620      	mov	r0, r4
90014454:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014456:	4798      	blx	r3
90014458:	e7f3      	b.n	90014442 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

9001445a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
9001445a:	4770      	bx	lr

9001445c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
9001445c:	4770      	bx	lr

9001445e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
9001445e:	4770      	bx	lr

90014460 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90014460:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90014464:	b510      	push	{r4, lr}
90014466:	1ad2      	subs	r2, r2, r3
90014468:	2a00      	cmp	r2, #0
9001446a:	bfdc      	itt	le
9001446c:	6884      	ldrle	r4, [r0, #8]
9001446e:	1912      	addle	r2, r2, r4
90014470:	2a01      	cmp	r2, #1
90014472:	dd16      	ble.n	900144a2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90014474:	6842      	ldr	r2, [r0, #4]
90014476:	2424      	movs	r4, #36	@ 0x24
90014478:	fb04 2303 	mla	r3, r4, r3, r2
9001447c:	f101 0220 	add.w	r2, r1, #32
90014480:	f851 4b04 	ldr.w	r4, [r1], #4
90014484:	4291      	cmp	r1, r2
90014486:	f843 4b04 	str.w	r4, [r3], #4
9001448a:	d1f9      	bne.n	90014480 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
9001448c:	780a      	ldrb	r2, [r1, #0]
9001448e:	701a      	strb	r2, [r3, #0]
90014490:	68c3      	ldr	r3, [r0, #12]
90014492:	6882      	ldr	r2, [r0, #8]
90014494:	f3bf 8f5b 	dmb	ish
90014498:	3301      	adds	r3, #1
9001449a:	429a      	cmp	r2, r3
9001449c:	bfd8      	it	le
9001449e:	1a9b      	suble	r3, r3, r2
900144a0:	60c3      	str	r3, [r0, #12]
900144a2:	bd10      	pop	{r4, pc}

900144a4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
900144a4:	6903      	ldr	r3, [r0, #16]
900144a6:	6882      	ldr	r2, [r0, #8]
900144a8:	f3bf 8f5b 	dmb	ish
900144ac:	3301      	adds	r3, #1
900144ae:	429a      	cmp	r2, r3
900144b0:	bfd8      	it	le
900144b2:	1a9b      	suble	r3, r3, r2
900144b4:	6103      	str	r3, [r0, #16]
900144b6:	4770      	bx	lr

900144b8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
900144b8:	b570      	push	{r4, r5, r6, lr}
900144ba:	4604      	mov	r4, r0
900144bc:	460e      	mov	r6, r1
900144be:	6860      	ldr	r0, [r4, #4]
900144c0:	6803      	ldr	r3, [r0, #0]
900144c2:	685b      	ldr	r3, [r3, #4]
900144c4:	4798      	blx	r3
900144c6:	2800      	cmp	r0, #0
900144c8:	d1f9      	bne.n	900144be <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
900144ca:	4d0d      	ldr	r5, [pc, #52]	@ (90014500 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
900144cc:	6828      	ldr	r0, [r5, #0]
900144ce:	6803      	ldr	r3, [r0, #0]
900144d0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900144d2:	4798      	blx	r3
900144d4:	f7ed ff40 	bl	90002358 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
900144d8:	6828      	ldr	r0, [r5, #0]
900144da:	2101      	movs	r1, #1
900144dc:	f7ff ff12 	bl	90014304 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900144e0:	6860      	ldr	r0, [r4, #4]
900144e2:	4631      	mov	r1, r6
900144e4:	6803      	ldr	r3, [r0, #0]
900144e6:	689b      	ldr	r3, [r3, #8]
900144e8:	4798      	blx	r3
900144ea:	6823      	ldr	r3, [r4, #0]
900144ec:	4620      	mov	r0, r4
900144ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900144f0:	4798      	blx	r3
900144f2:	6828      	ldr	r0, [r5, #0]
900144f4:	6803      	ldr	r3, [r0, #0]
900144f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900144fa:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
900144fc:	4718      	bx	r3
900144fe:	bf00      	nop
90014500:	240245a0 	.word	0x240245a0

90014504 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90014504:	b508      	push	{r3, lr}
90014506:	f7ed ff19 	bl	9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001450a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
9001450e:	f7ed bf1d 	b.w	9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90014512 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90014512:	b510      	push	{r4, lr}
90014514:	4604      	mov	r4, r0
90014516:	2114      	movs	r1, #20
90014518:	f017 fb3f 	bl	9002bb9a <_ZdlPvj>
9001451c:	4620      	mov	r0, r4
9001451e:	bd10      	pop	{r4, pc}

90014520 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90014520:	b570      	push	{r4, r5, r6, lr}
90014522:	4604      	mov	r4, r0
90014524:	6840      	ldr	r0, [r0, #4]
90014526:	6803      	ldr	r3, [r0, #0]
90014528:	681b      	ldr	r3, [r3, #0]
9001452a:	4798      	blx	r3
9001452c:	4605      	mov	r5, r0
9001452e:	b930      	cbnz	r0, 9001453e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90014530:	7a23      	ldrb	r3, [r4, #8]
90014532:	b123      	cbz	r3, 9001453e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90014534:	6860      	ldr	r0, [r4, #4]
90014536:	6803      	ldr	r3, [r0, #0]
90014538:	695b      	ldr	r3, [r3, #20]
9001453a:	4798      	blx	r3
9001453c:	7225      	strb	r5, [r4, #8]
9001453e:	6860      	ldr	r0, [r4, #4]
90014540:	6803      	ldr	r3, [r0, #0]
90014542:	681b      	ldr	r3, [r3, #0]
90014544:	4798      	blx	r3
90014546:	b928      	cbnz	r0, 90014554 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90014548:	6823      	ldr	r3, [r4, #0]
9001454a:	4620      	mov	r0, r4
9001454c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001454e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014552:	4718      	bx	r3
90014554:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014558:	f7ed bf06 	b.w	90002368 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

9001455c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
9001455c:	b510      	push	{r4, lr}
9001455e:	6082      	str	r2, [r0, #8]
90014560:	2200      	movs	r2, #0
90014562:	4c03      	ldr	r4, [pc, #12]	@ (90014570 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90014564:	e9c0 2203 	strd	r2, r2, [r0, #12]
90014568:	e9c0 4100 	strd	r4, r1, [r0]
9001456c:	bd10      	pop	{r4, pc}
9001456e:	bf00      	nop
90014570:	90030098 	.word	0x90030098

90014574 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90014574:	6840      	ldr	r0, [r0, #4]
90014576:	6803      	ldr	r3, [r0, #0]
90014578:	681b      	ldr	r3, [r3, #0]
9001457a:	4718      	bx	r3
9001457c:	0000      	movs	r0, r0
	...

90014580 <_ZN8touchgfxL10applyNoiseEiihhh>:
90014580:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90014584:	fb80 0101 	smull	r0, r1, r0, r1
90014588:	4f21      	ldr	r7, [pc, #132]	@ (90014610 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
9001458a:	461c      	mov	r4, r3
9001458c:	4616      	mov	r6, r2
9001458e:	fba0 bc07 	umull	fp, ip, r0, r7
90014592:	f89d 5018 	ldrb.w	r5, [sp, #24]
90014596:	fb07 cc01 	mla	ip, r7, r1, ip
9001459a:	fbab 010b 	umull	r0, r1, fp, fp
9001459e:	fb0b f70c 	mul.w	r7, fp, ip
900145a2:	fb00 f30c 	mul.w	r3, r0, ip
900145a6:	eb01 0147 	add.w	r1, r1, r7, lsl #1
900145aa:	fb0b 3301 	mla	r3, fp, r1, r3
900145ae:	fba0 010b 	umull	r0, r1, r0, fp
900145b2:	4419      	add	r1, r3
900145b4:	a314      	add	r3, pc, #80	@ (adr r3, 90014608 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
900145b6:	e9d3 2300 	ldrd	r2, r3, [r3]
900145ba:	f7ec f8a5 	bl	90000708 <__aeabi_ldivmod>
900145be:	2ef7      	cmp	r6, #247	@ 0xf7
900145c0:	b290      	uxth	r0, r2
900145c2:	bf9e      	ittt	ls
900145c4:	f002 0207 	andls.w	r2, r2, #7
900145c8:	18b6      	addls	r6, r6, r2
900145ca:	b2f6      	uxtbls	r6, r6
900145cc:	2cfb      	cmp	r4, #251	@ 0xfb
900145ce:	bf9e      	ittt	ls
900145d0:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
900145d4:	18e4      	addls	r4, r4, r3
900145d6:	b2e4      	uxtbls	r4, r4
900145d8:	2df7      	cmp	r5, #247	@ 0xf7
900145da:	bf98      	it	ls
900145dc:	f3c0 1042 	ubfxls	r0, r0, #5, #3
900145e0:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900145e4:	bf98      	it	ls
900145e6:	182d      	addls	r5, r5, r0
900145e8:	480a      	ldr	r0, [pc, #40]	@ (90014614 <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
900145ea:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900145ee:	ea00 2006 	and.w	r0, r0, r6, lsl #8
900145f2:	bf98      	it	ls
900145f4:	b2ed      	uxtbls	r5, r5
900145f6:	4304      	orrs	r4, r0
900145f8:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
900145fc:	b280      	uxth	r0, r0
900145fe:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
90014602:	bf00      	nop
90014604:	f3af 8000 	nop.w
90014608:	797a8d77 	.word	0x797a8d77
9001460c:	00000000 	.word	0x00000000
90014610:	00ec4ba7 	.word	0x00ec4ba7
90014614:	fffff800 	.word	0xfffff800

90014618 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
90014618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001461c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90014620:	4605      	mov	r5, r0
90014622:	ed2d 8b02 	vpush	{d8}
90014626:	b087      	sub	sp, #28
90014628:	7c41      	ldrb	r1, [r0, #17]
9001462a:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
9001462e:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
90014632:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
90014636:	2900      	cmp	r1, #0
90014638:	f000 809a 	beq.w	90014770 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
9001463c:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90014640:	ed90 7a08 	vldr	s14, [r0, #32]
90014644:	454a      	cmp	r2, r9
90014646:	68c0      	ldr	r0, [r0, #12]
90014648:	db25      	blt.n	90014696 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
9001464a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001464e:	f640 72fc 	movw	r2, #4092	@ 0xffc
90014652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014656:	bfc8      	it	gt
90014658:	2200      	movgt	r2, #0
9001465a:	5882      	ldr	r2, [r0, r2]
9001465c:	2100      	movs	r1, #0
9001465e:	ea4f 2812 	mov.w	r8, r2, lsr #8
90014662:	7c2d      	ldrb	r5, [r5, #16]
90014664:	0950      	lsrs	r0, r2, #5
90014666:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
9001466a:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
9001466e:	eb04 0746 	add.w	r7, r4, r6, lsl #1
90014672:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90014676:	2d00      	cmp	r5, #0
90014678:	d044      	beq.n	90014704 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
9001467a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001467e:	d141      	bne.n	90014704 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90014680:	bb61      	cbnz	r1, 900146dc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
90014682:	ea4e 0000 	orr.w	r0, lr, r0
90014686:	ea4c 0500 	orr.w	r5, ip, r0
9001468a:	42bc      	cmp	r4, r7
9001468c:	f080 8214 	bcs.w	90014ab8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90014690:	f824 5b02 	strh.w	r5, [r4], #2
90014694:	e7f9      	b.n	9001468a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
90014696:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
9001469a:	454f      	cmp	r7, r9
9001469c:	dc08      	bgt.n	900146b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
9001469e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900146a2:	f640 72fc 	movw	r2, #4092	@ 0xffc
900146a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900146aa:	bfd8      	it	le
900146ac:	2200      	movle	r2, #0
900146ae:	e7d4      	b.n	9001465a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
900146b0:	eba9 0202 	sub.w	r2, r9, r2
900146b4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900146b8:	ee07 2a90 	vmov	s15, r2
900146bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900146c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900146c4:	ee67 7a87 	vmul.f32	s15, s15, s14
900146c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900146cc:	ee17 2a90 	vmov	r2, s15
900146d0:	bfd8      	it	le
900146d2:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
900146d6:	0092      	lsls	r2, r2, #2
900146d8:	5882      	ldr	r2, [r0, r2]
900146da:	e7c0      	b.n	9001465e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
900146dc:	b2d5      	uxtb	r5, r2
900146de:	f3c2 4a07 	ubfx	sl, r2, #16, #8
900146e2:	fa5f f888 	uxtb.w	r8, r8
900146e6:	461e      	mov	r6, r3
900146e8:	42bc      	cmp	r4, r7
900146ea:	f080 81e5 	bcs.w	90014ab8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900146ee:	4630      	mov	r0, r6
900146f0:	9500      	str	r5, [sp, #0]
900146f2:	4643      	mov	r3, r8
900146f4:	4652      	mov	r2, sl
900146f6:	4649      	mov	r1, r9
900146f8:	3601      	adds	r6, #1
900146fa:	f7ff ff41 	bl	90014580 <_ZN8touchgfxL10applyNoiseEiihhh>
900146fe:	f824 0b02 	strh.w	r0, [r4], #2
90014702:	e7f1      	b.n	900146e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
90014704:	0e12      	lsrs	r2, r2, #24
90014706:	26ff      	movs	r6, #255	@ 0xff
90014708:	fb02 f20a 	mul.w	r2, r2, sl
9001470c:	1c53      	adds	r3, r2, #1
9001470e:	eb03 2222 	add.w	r2, r3, r2, asr #8
90014712:	1212      	asrs	r2, r2, #8
90014714:	fb02 f50c 	mul.w	r5, r2, ip
90014718:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90014acc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001471c:	fb02 f10e 	mul.w	r1, r2, lr
90014720:	4350      	muls	r0, r2
90014722:	43d2      	mvns	r2, r2
90014724:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90014728:	42bc      	cmp	r4, r7
9001472a:	f080 81c5 	bcs.w	90014ab8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001472e:	f8b4 e000 	ldrh.w	lr, [r4]
90014732:	ea0e 030c 	and.w	r3, lr, ip
90014736:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
9001473a:	f00e 0e1f 	and.w	lr, lr, #31
9001473e:	fb02 1303 	mla	r3, r2, r3, r1
90014742:	fb02 0808 	mla	r8, r2, r8, r0
90014746:	fb02 5e0e 	mla	lr, r2, lr, r5
9001474a:	fb93 f3f6 	sdiv	r3, r3, r6
9001474e:	fb98 f8f6 	sdiv	r8, r8, r6
90014752:	fb9e fef6 	sdiv	lr, lr, r6
90014756:	ea03 030c 	and.w	r3, r3, ip
9001475a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001475e:	f00e 0e1f 	and.w	lr, lr, #31
90014762:	ea43 0308 	orr.w	r3, r3, r8
90014766:	ea43 030e 	orr.w	r3, r3, lr
9001476a:	f824 3b02 	strh.w	r3, [r4], #2
9001476e:	e7db      	b.n	90014728 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90014770:	7c82      	ldrb	r2, [r0, #18]
90014772:	2a00      	cmp	r2, #0
90014774:	d04f      	beq.n	90014816 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
90014776:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9001477a:	ee07 2a90 	vmov	s15, r2
9001477e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90014782:	ee07 3a10 	vmov	s14, r3
90014786:	461f      	mov	r7, r3
90014788:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9001478c:	eef4 6ae7 	vcmpe.f32	s13, s15
90014790:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014794:	f200 8095 	bhi.w	900148c2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90014798:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001479c:	f640 71fc 	movw	r1, #4092	@ 0xffc
900147a0:	68ea      	ldr	r2, [r5, #12]
900147a2:	f895 c010 	ldrb.w	ip, [r5, #16]
900147a6:	ee37 7a87 	vadd.f32	s14, s15, s14
900147aa:	ee37 7a66 	vsub.f32	s14, s14, s13
900147ae:	ee06 6a90 	vmov	s13, r6
900147b2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900147b6:	eeb4 7ae6 	vcmpe.f32	s14, s13
900147ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900147be:	bf4a      	itet	mi
900147c0:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
900147c4:	9602      	strpl	r6, [sp, #8]
900147c6:	ed8d 7a02 	vstrmi	s14, [sp, #8]
900147ca:	ed95 7a08 	vldr	s14, [r5, #32]
900147ce:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900147d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900147d6:	bfc8      	it	gt
900147d8:	2100      	movgt	r1, #0
900147da:	5852      	ldr	r2, [r2, r1]
900147dc:	9902      	ldr	r1, [sp, #8]
900147de:	ea4f 2b12 	mov.w	fp, r2, lsr #8
900147e2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900147e6:	0950      	lsrs	r0, r2, #5
900147e8:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
900147ec:	9103      	str	r1, [sp, #12]
900147ee:	f3c2 01c4 	ubfx	r1, r2, #3, #5
900147f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900147f6:	f1bc 0f00 	cmp.w	ip, #0
900147fa:	d024      	beq.n	90014846 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900147fc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90014800:	d121      	bne.n	90014846 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
90014802:	ea4b 0b00 	orr.w	fp, fp, r0
90014806:	ea41 010b 	orr.w	r1, r1, fp
9001480a:	9a03      	ldr	r2, [sp, #12]
9001480c:	4294      	cmp	r4, r2
9001480e:	d255      	bcs.n	900148bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90014810:	f824 1b02 	strh.w	r1, [r4], #2
90014814:	e7f9      	b.n	9001480a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
90014816:	ee07 9a10 	vmov	s14, r9
9001481a:	edd0 7a06 	vldr	s15, [r0, #24]
9001481e:	edd0 6a05 	vldr	s13, [r0, #20]
90014822:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90014826:	ee37 7a67 	vsub.f32	s14, s14, s15
9001482a:	eec7 7a26 	vdiv.f32	s15, s14, s13
9001482e:	ed90 7a08 	vldr	s14, [r0, #32]
90014832:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90014836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001483a:	bf44      	itt	mi
9001483c:	ed90 7a07 	vldrmi	s14, [r0, #28]
90014840:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
90014844:	e79d      	b.n	90014782 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
90014846:	0e12      	lsrs	r2, r2, #24
90014848:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90014acc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001484c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90014850:	fb02 f20a 	mul.w	r2, r2, sl
90014854:	f102 0c01 	add.w	ip, r2, #1
90014858:	eb0c 2222 	add.w	r2, ip, r2, asr #8
9001485c:	1212      	asrs	r2, r2, #8
9001485e:	4350      	muls	r0, r2
90014860:	4351      	muls	r1, r2
90014862:	fb02 fb0b 	mul.w	fp, r2, fp
90014866:	43d2      	mvns	r2, r2
90014868:	9004      	str	r0, [sp, #16]
9001486a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001486e:	9105      	str	r1, [sp, #20]
90014870:	9903      	ldr	r1, [sp, #12]
90014872:	428c      	cmp	r4, r1
90014874:	d222      	bcs.n	900148bc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90014876:	8820      	ldrh	r0, [r4, #0]
90014878:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
9001487c:	ea00 0c08 	and.w	ip, r0, r8
90014880:	460f      	mov	r7, r1
90014882:	9904      	ldr	r1, [sp, #16]
90014884:	fb02 bc0c 	mla	ip, r2, ip, fp
90014888:	fb02 1107 	mla	r1, r2, r7, r1
9001488c:	fb9c fcfe 	sdiv	ip, ip, lr
90014890:	fb91 f1fe 	sdiv	r1, r1, lr
90014894:	ea0c 0c08 	and.w	ip, ip, r8
90014898:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001489c:	ea4c 0101 	orr.w	r1, ip, r1
900148a0:	f000 0c1f 	and.w	ip, r0, #31
900148a4:	9805      	ldr	r0, [sp, #20]
900148a6:	fb02 0c0c 	mla	ip, r2, ip, r0
900148aa:	fb9c fcfe 	sdiv	ip, ip, lr
900148ae:	f00c 0c1f 	and.w	ip, ip, #31
900148b2:	ea41 010c 	orr.w	r1, r1, ip
900148b6:	f824 1b02 	strh.w	r1, [r4], #2
900148ba:	e7d9      	b.n	90014870 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
900148bc:	9a02      	ldr	r2, [sp, #8]
900148be:	441a      	add	r2, r3
900148c0:	4617      	mov	r7, r2
900148c2:	441e      	add	r6, r3
900148c4:	b236      	sxth	r6, r6
900148c6:	42be      	cmp	r6, r7
900148c8:	f340 80f6 	ble.w	90014ab8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900148cc:	ed95 7a07 	vldr	s14, [r5, #28]
900148d0:	ee06 7a90 	vmov	s13, r7
900148d4:	ee37 7a87 	vadd.f32	s14, s15, s14
900148d8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900148dc:	eeb4 7ae6 	vcmpe.f32	s14, s13
900148e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900148e4:	f340 80b2 	ble.w	90014a4c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
900148e8:	ee06 6a10 	vmov	s12, r6
900148ec:	ee76 7ae7 	vsub.f32	s15, s13, s15
900148f0:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 90014ac4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
900148f4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900148f8:	7c2b      	ldrb	r3, [r5, #16]
900148fa:	eeb4 7ac6 	vcmpe.f32	s14, s12
900148fe:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90014ac8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
90014902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014906:	bfd6      	itet	le
90014908:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
9001490c:	46b0      	movgt	r8, r6
9001490e:	ee17 8a10 	vmovle	r8, s14
90014912:	ed95 7a08 	vldr	s14, [r5, #32]
90014916:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001491a:	eba8 0707 	sub.w	r7, r8, r7
9001491e:	eb04 0747 	add.w	r7, r4, r7, lsl #1
90014922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014926:	fe38 8a06 	vselgt.f32	s16, s16, s12
9001492a:	eea7 8a27 	vfma.f32	s16, s14, s15
9001492e:	b1db      	cbz	r3, 90014968 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90014930:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90014934:	d118      	bne.n	90014968 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90014936:	42bc      	cmp	r4, r7
90014938:	d262      	bcs.n	90014a00 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
9001493a:	eefd 7ac8 	vcvt.s32.f32	s15, s16
9001493e:	68eb      	ldr	r3, [r5, #12]
90014940:	4649      	mov	r1, r9
90014942:	ee17 0a90 	vmov	r0, s15
90014946:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
9001494a:	b2d3      	uxtb	r3, r2
9001494c:	9300      	str	r3, [sp, #0]
9001494e:	f3c2 2307 	ubfx	r3, r2, #8, #8
90014952:	f3c2 4207 	ubfx	r2, r2, #16, #8
90014956:	f7ff fe13 	bl	90014580 <_ZN8touchgfxL10applyNoiseEiihhh>
9001495a:	f824 0b02 	strh.w	r0, [r4], #2
9001495e:	edd5 7a08 	vldr	s15, [r5, #32]
90014962:	ee38 8a27 	vadd.f32	s16, s16, s15
90014966:	e7e6      	b.n	90014936 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90014968:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90014acc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001496c:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90014970:	42bc      	cmp	r4, r7
90014972:	d245      	bcs.n	90014a00 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90014974:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90014978:	68eb      	ldr	r3, [r5, #12]
9001497a:	f8b4 e000 	ldrh.w	lr, [r4]
9001497e:	ee17 2a90 	vmov	r2, s15
90014982:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90014986:	0e13      	lsrs	r3, r2, #24
90014988:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
9001498c:	fb03 f30a 	mul.w	r3, r3, sl
90014990:	b289      	uxth	r1, r1
90014992:	1c58      	adds	r0, r3, #1
90014994:	eb00 2023 	add.w	r0, r0, r3, asr #8
90014998:	ea0e 030b 	and.w	r3, lr, fp
9001499c:	1200      	asrs	r0, r0, #8
9001499e:	ea6f 0c00 	mvn.w	ip, r0
900149a2:	fa5f fc8c 	uxtb.w	ip, ip
900149a6:	fb0c f303 	mul.w	r3, ip, r3
900149aa:	fb00 3101 	mla	r1, r0, r1, r3
900149ae:	fb91 f1f9 	sdiv	r1, r1, r9
900149b2:	ea01 030b 	and.w	r3, r1, fp
900149b6:	9302      	str	r3, [sp, #8]
900149b8:	0953      	lsrs	r3, r2, #5
900149ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900149be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900149c2:	4619      	mov	r1, r3
900149c4:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
900149c8:	f00e 0e1f 	and.w	lr, lr, #31
900149cc:	fb0c f303 	mul.w	r3, ip, r3
900149d0:	fb0c fc0e 	mul.w	ip, ip, lr
900149d4:	fb00 3301 	mla	r3, r0, r1, r3
900149d8:	9902      	ldr	r1, [sp, #8]
900149da:	fb00 c002 	mla	r0, r0, r2, ip
900149de:	fb93 f3f9 	sdiv	r3, r3, r9
900149e2:	fb90 f0f9 	sdiv	r0, r0, r9
900149e6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900149ea:	f000 001f 	and.w	r0, r0, #31
900149ee:	4319      	orrs	r1, r3
900149f0:	4301      	orrs	r1, r0
900149f2:	f824 1b02 	strh.w	r1, [r4], #2
900149f6:	edd5 7a08 	vldr	s15, [r5, #32]
900149fa:	ee38 8a27 	vadd.f32	s16, s16, s15
900149fe:	e7b7      	b.n	90014970 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
90014a00:	4546      	cmp	r6, r8
90014a02:	dd59      	ble.n	90014ab8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90014a04:	edd5 7a08 	vldr	s15, [r5, #32]
90014a08:	f640 73fc 	movw	r3, #4092	@ 0xffc
90014a0c:	68ea      	ldr	r2, [r5, #12]
90014a0e:	eba6 0608 	sub.w	r6, r6, r8
90014a12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90014a16:	7c29      	ldrb	r1, [r5, #16]
90014a18:	eb04 0646 	add.w	r6, r4, r6, lsl #1
90014a1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014a20:	bfd8      	it	le
90014a22:	2300      	movle	r3, #0
90014a24:	58d2      	ldr	r2, [r2, r3]
90014a26:	0a10      	lsrs	r0, r2, #8
90014a28:	f3c2 07c4 	ubfx	r7, r2, #3, #5
90014a2c:	0953      	lsrs	r3, r2, #5
90014a2e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90014a32:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90014a36:	b159      	cbz	r1, 90014a50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90014a38:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90014a3c:	d108      	bne.n	90014a50 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90014a3e:	4318      	orrs	r0, r3
90014a40:	4338      	orrs	r0, r7
90014a42:	42b4      	cmp	r4, r6
90014a44:	d238      	bcs.n	90014ab8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90014a46:	f824 0b02 	strh.w	r0, [r4], #2
90014a4a:	e7fa      	b.n	90014a42 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90014a4c:	46b8      	mov	r8, r7
90014a4e:	e7d9      	b.n	90014a04 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90014a50:	0e12      	lsrs	r2, r2, #24
90014a52:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90014acc <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90014a56:	fb02 f10a 	mul.w	r1, r2, sl
90014a5a:	1c4a      	adds	r2, r1, #1
90014a5c:	eb02 2221 	add.w	r2, r2, r1, asr #8
90014a60:	1212      	asrs	r2, r2, #8
90014a62:	fb02 f507 	mul.w	r5, r2, r7
90014a66:	27ff      	movs	r7, #255	@ 0xff
90014a68:	4350      	muls	r0, r2
90014a6a:	4353      	muls	r3, r2
90014a6c:	43d2      	mvns	r2, r2
90014a6e:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90014a72:	42b4      	cmp	r4, r6
90014a74:	d220      	bcs.n	90014ab8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90014a76:	f8b4 e000 	ldrh.w	lr, [r4]
90014a7a:	ea0e 010c 	and.w	r1, lr, ip
90014a7e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90014a82:	f00e 0e1f 	and.w	lr, lr, #31
90014a86:	fb02 0101 	mla	r1, r2, r1, r0
90014a8a:	fb02 3808 	mla	r8, r2, r8, r3
90014a8e:	fb02 5e0e 	mla	lr, r2, lr, r5
90014a92:	fb91 f1f7 	sdiv	r1, r1, r7
90014a96:	fb98 f8f7 	sdiv	r8, r8, r7
90014a9a:	fb9e fef7 	sdiv	lr, lr, r7
90014a9e:	ea01 010c 	and.w	r1, r1, ip
90014aa2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90014aa6:	f00e 0e1f 	and.w	lr, lr, #31
90014aaa:	ea41 0108 	orr.w	r1, r1, r8
90014aae:	ea41 010e 	orr.w	r1, r1, lr
90014ab2:	f824 1b02 	strh.w	r1, [r4], #2
90014ab6:	e7dc      	b.n	90014a72 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90014ab8:	b007      	add	sp, #28
90014aba:	ecbd 8b02 	vpop	{d8}
90014abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014ac2:	bf00      	nop
90014ac4:	00000000 	.word	0x00000000
90014ac8:	447ffffe 	.word	0x447ffffe
90014acc:	fffff800 	.word	0xfffff800

90014ad0 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90014ad0:	4770      	bx	lr

90014ad2 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
90014ad2:	4770      	bx	lr

90014ad4 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
90014ad4:	b510      	push	{r4, lr}
90014ad6:	4604      	mov	r4, r0
90014ad8:	2124      	movs	r1, #36	@ 0x24
90014ada:	f017 f85e 	bl	9002bb9a <_ZdlPvj>
90014ade:	4620      	mov	r0, r4
90014ae0:	bd10      	pop	{r4, pc}
	...

90014ae4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90014ae4:	094a      	lsrs	r2, r1, #5
90014ae6:	4b06      	ldr	r3, [pc, #24]	@ (90014b00 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90014ae8:	60c1      	str	r1, [r0, #12]
90014aea:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90014aee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90014af2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90014af6:	4313      	orrs	r3, r2
90014af8:	4319      	orrs	r1, r3
90014afa:	8201      	strh	r1, [r0, #16]
90014afc:	4770      	bx	lr
90014afe:	bf00      	nop
90014b00:	fffff800 	.word	0xfffff800

90014b04 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90014b04:	f1a0 0008 	sub.w	r0, r0, #8
90014b08:	e7ec      	b.n	90014ae4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90014b0a:	bf00      	nop

90014b0c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90014b0c:	b508      	push	{r3, lr}
90014b0e:	4b05      	ldr	r3, [pc, #20]	@ (90014b24 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90014b10:	6818      	ldr	r0, [r3, #0]
90014b12:	6803      	ldr	r3, [r0, #0]
90014b14:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
90014b18:	4798      	blx	r3
90014b1a:	1e43      	subs	r3, r0, #1
90014b1c:	4258      	negs	r0, r3
90014b1e:	4158      	adcs	r0, r3
90014b20:	bd08      	pop	{r3, pc}
90014b22:	bf00      	nop
90014b24:	240245a0 	.word	0x240245a0

90014b28 <_ZN8touchgfx13PainterRGB565D1Ev>:
90014b28:	4770      	bx	lr

90014b2a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90014b2a:	3808      	subs	r0, #8
90014b2c:	4770      	bx	lr

90014b2e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90014b2e:	b430      	push	{r4, r5}
90014b30:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90014b34:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90014b38:	8a02      	ldrh	r2, [r0, #16]
90014b3a:	f89d 3010 	ldrb.w	r3, [sp, #16]
90014b3e:	4629      	mov	r1, r5
90014b40:	9202      	str	r2, [sp, #8]
90014b42:	68c2      	ldr	r2, [r0, #12]
90014b44:	4620      	mov	r0, r4
90014b46:	bc30      	pop	{r4, r5}
90014b48:	f7ed bf04 	b.w	90002954 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90014b4c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90014b4c:	f7ed bede 	b.w	9000290c <_ZN8touchgfx5paint8tearDownEv>

90014b50 <_ZN8touchgfx13PainterRGB565D0Ev>:
90014b50:	b510      	push	{r4, lr}
90014b52:	4604      	mov	r4, r0
90014b54:	2114      	movs	r1, #20
90014b56:	f017 f820 	bl	9002bb9a <_ZdlPvj>
90014b5a:	4620      	mov	r0, r4
90014b5c:	bd10      	pop	{r4, pc}

90014b5e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90014b5e:	f1a0 0008 	sub.w	r0, r0, #8
90014b62:	e7f5      	b.n	90014b50 <_ZN8touchgfx13PainterRGB565D0Ev>

90014b64 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
90014b64:	2300      	movs	r3, #0
90014b66:	84c3      	strh	r3, [r0, #38]	@ 0x26
90014b68:	8503      	strh	r3, [r0, #40]	@ 0x28
90014b6a:	8543      	strh	r3, [r0, #42]	@ 0x2a
90014b6c:	8583      	strh	r3, [r0, #44]	@ 0x2c
90014b6e:	6980      	ldr	r0, [r0, #24]
90014b70:	b110      	cbz	r0, 90014b78 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
90014b72:	6803      	ldr	r3, [r0, #0]
90014b74:	691b      	ldr	r3, [r3, #16]
90014b76:	4718      	bx	r3
90014b78:	4770      	bx	lr

90014b7a <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90014b7a:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90014b7e:	4770      	bx	lr

90014b80 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90014b80:	b538      	push	{r3, r4, r5, lr}
90014b82:	0e0b      	lsrs	r3, r1, #24
90014b84:	4604      	mov	r4, r0
90014b86:	460d      	mov	r5, r1
90014b88:	7783      	strb	r3, [r0, #30]
90014b8a:	6803      	ldr	r3, [r0, #0]
90014b8c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014b8e:	4798      	blx	r3
90014b90:	6803      	ldr	r3, [r0, #0]
90014b92:	4629      	mov	r1, r5
90014b94:	689b      	ldr	r3, [r3, #8]
90014b96:	4798      	blx	r3
90014b98:	6823      	ldr	r3, [r4, #0]
90014b9a:	4620      	mov	r0, r4
90014b9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90014b9e:	4798      	blx	r3
90014ba0:	61a0      	str	r0, [r4, #24]
90014ba2:	bd38      	pop	{r3, r4, r5, pc}

90014ba4 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
90014ba4:	7741      	strb	r1, [r0, #29]
90014ba6:	4770      	bx	lr

90014ba8 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90014ba8:	b530      	push	{r4, r5, lr}
90014baa:	460d      	mov	r5, r1
90014bac:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90014bb0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90014bb2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90014bb4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90014bb6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90014bb8:	682b      	ldr	r3, [r5, #0]
90014bba:	6023      	str	r3, [r4, #0]
90014bbc:	bd30      	pop	{r4, r5, pc}

90014bbe <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90014bbe:	b538      	push	{r3, r4, r5, lr}
90014bc0:	4604      	mov	r4, r0
90014bc2:	1d03      	adds	r3, r0, #4
90014bc4:	6808      	ldr	r0, [r1, #0]
90014bc6:	2500      	movs	r5, #0
90014bc8:	6849      	ldr	r1, [r1, #4]
90014bca:	c303      	stmia	r3!, {r0, r1}
90014bcc:	6813      	ldr	r3, [r2, #0]
90014bce:	f104 0034 	add.w	r0, r4, #52	@ 0x34
90014bd2:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
90014bd6:	6853      	ldr	r3, [r2, #4]
90014bd8:	61a5      	str	r5, [r4, #24]
90014bda:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
90014bde:	f006 f915 	bl	9001ae0c <_ZN8touchgfx9Matrix3x35resetEv>
90014be2:	23ff      	movs	r3, #255	@ 0xff
90014be4:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90014be8:	7763      	strb	r3, [r4, #29]
90014bea:	77a3      	strb	r3, [r4, #30]
90014bec:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90014bf0:	6323      	str	r3, [r4, #48]	@ 0x30
90014bf2:	2301      	movs	r3, #1
90014bf4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90014bf8:	bd38      	pop	{r3, r4, r5, pc}
	...

90014bfc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
90014bfc:	ee70 7a41 	vsub.f32	s15, s0, s2
90014c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014c04:	eef5 7a40 	vcmp.f32	s15, #0.0
90014c08:	4605      	mov	r5, r0
90014c0a:	ed2d 8b0a 	vpush	{d8-d12}
90014c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014c12:	b086      	sub	sp, #24
90014c14:	eeb0 ba40 	vmov.f32	s22, s0
90014c18:	6802      	ldr	r2, [r0, #0]
90014c1a:	eef0 ba60 	vmov.f32	s23, s1
90014c1e:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
90014c22:	eef0 aa41 	vmov.f32	s21, s2
90014c26:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
90014c28:	eeb0 aa61 	vmov.f32	s20, s3
90014c2c:	eeb0 ca42 	vmov.f32	s24, s4
90014c30:	eef0 ca62 	vmov.f32	s25, s5
90014c34:	d112      	bne.n	90014c5c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90014c36:	ee70 7ae1 	vsub.f32	s15, s1, s3
90014c3a:	eef5 7a40 	vcmp.f32	s15, #0.0
90014c3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014c42:	d10b      	bne.n	90014c5c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90014c44:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90014c48:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90014c4a:	3901      	subs	r1, #1
90014c4c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90014c50:	b006      	add	sp, #24
90014c52:	ecbd 8b0a 	vpop	{d8-d12}
90014c56:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90014c5a:	4710      	bx	r2
90014c5c:	23ff      	movs	r3, #255	@ 0xff
90014c5e:	4628      	mov	r0, r5
90014c60:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90014c64:	77ab      	strb	r3, [r5, #30]
90014c66:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90014c68:	4798      	blx	r3
90014c6a:	eeb0 0a4b 	vmov.f32	s0, s22
90014c6e:	eef0 0a6b 	vmov.f32	s1, s23
90014c72:	4604      	mov	r4, r0
90014c74:	4640      	mov	r0, r8
90014c76:	f006 f978 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014c7a:	eef0 8a40 	vmov.f32	s17, s0
90014c7e:	ed8d 0a00 	vstr	s0, [sp]
90014c82:	eeb0 0a6a 	vmov.f32	s0, s21
90014c86:	eef0 9a60 	vmov.f32	s19, s1
90014c8a:	edcd 0a01 	vstr	s1, [sp, #4]
90014c8e:	4640      	mov	r0, r8
90014c90:	eef0 0a4a 	vmov.f32	s1, s20
90014c94:	f006 f969 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014c98:	eef4 8a40 	vcmp.f32	s17, s0
90014c9c:	eeb0 8a40 	vmov.f32	s16, s0
90014ca0:	ed8d 0a02 	vstr	s0, [sp, #8]
90014ca4:	eeb0 9a60 	vmov.f32	s18, s1
90014ca8:	edcd 0a03 	vstr	s1, [sp, #12]
90014cac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014cb0:	eef4 9a60 	vcmp.f32	s19, s1
90014cb4:	bf0c      	ite	eq
90014cb6:	2301      	moveq	r3, #1
90014cb8:	2300      	movne	r3, #0
90014cba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014cbe:	eef4 8a40 	vcmp.f32	s17, s0
90014cc2:	7463      	strb	r3, [r4, #17]
90014cc4:	bf0c      	ite	eq
90014cc6:	2301      	moveq	r3, #1
90014cc8:	2300      	movne	r3, #0
90014cca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014cce:	74a3      	strb	r3, [r4, #18]
90014cd0:	d024      	beq.n	90014d1c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90014cd2:	eef4 9a60 	vcmp.f32	s19, s1
90014cd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014cda:	d01f      	beq.n	90014d1c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90014cdc:	ee3a aa6b 	vsub.f32	s20, s20, s23
90014ce0:	4640      	mov	r0, r8
90014ce2:	ee7a aacb 	vsub.f32	s21, s21, s22
90014ce6:	eeb0 0a4b 	vmov.f32	s0, s22
90014cea:	eeca 7a2c 	vdiv.f32	s15, s20, s25
90014cee:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
90014cf2:	eef0 0a6b 	vmov.f32	s1, s23
90014cf6:	eea7 0acc 	vfms.f32	s0, s15, s24
90014cfa:	eeec 0a87 	vfma.f32	s1, s25, s14
90014cfe:	f006 f934 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014d02:	ed8d 0a04 	vstr	s0, [sp, #16]
90014d06:	ee30 0a68 	vsub.f32	s0, s0, s17
90014d0a:	eeb5 0a40 	vcmp.f32	s0, #0.0
90014d0e:	edcd 0a05 	vstr	s1, [sp, #20]
90014d12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014d16:	d121      	bne.n	90014d5c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x160>
90014d18:	2301      	movs	r3, #1
90014d1a:	74a3      	strb	r3, [r4, #18]
90014d1c:	7c63      	ldrb	r3, [r4, #17]
90014d1e:	2b00      	cmp	r3, #0
90014d20:	d051      	beq.n	90014dc6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ca>
90014d22:	ee39 7a69 	vsub.f32	s14, s18, s19
90014d26:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 90014e1c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90014d2a:	eef4 9ac9 	vcmpe.f32	s19, s18
90014d2e:	eec6 7a87 	vdiv.f32	s15, s13, s14
90014d32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014d36:	edc4 7a08 	vstr	s15, [r4, #32]
90014d3a:	eefd 7ac9 	vcvt.s32.f32	s15, s18
90014d3e:	ee17 3a90 	vmov	r3, s15
90014d42:	eefd 7ae9 	vcvt.s32.f32	s15, s19
90014d46:	b21a      	sxth	r2, r3
90014d48:	ee17 3a90 	vmov	r3, s15
90014d4c:	bf48      	it	mi
90014d4e:	8122      	strhmi	r2, [r4, #8]
90014d50:	b21b      	sxth	r3, r3
90014d52:	bf56      	itet	pl
90014d54:	80e2      	strhpl	r2, [r4, #6]
90014d56:	80e3      	strhmi	r3, [r4, #6]
90014d58:	8123      	strhpl	r3, [r4, #8]
90014d5a:	e02c      	b.n	90014db6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90014d5c:	ee70 0ae9 	vsub.f32	s1, s1, s19
90014d60:	eec0 7a80 	vdiv.f32	s15, s1, s0
90014d64:	eef5 7a40 	vcmp.f32	s15, #0.0
90014d68:	edc4 7a05 	vstr	s15, [r4, #20]
90014d6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014d70:	d102      	bne.n	90014d78 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17c>
90014d72:	2301      	movs	r3, #1
90014d74:	7463      	strb	r3, [r4, #17]
90014d76:	e7d1      	b.n	90014d1c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90014d78:	eeb0 7a69 	vmov.f32	s14, s19
90014d7c:	ee39 9a69 	vsub.f32	s18, s18, s19
90014d80:	ee38 8a68 	vsub.f32	s16, s16, s17
90014d84:	eea8 7ae7 	vfms.f32	s14, s17, s15
90014d88:	ed84 7a06 	vstr	s14, [r4, #24]
90014d8c:	ee89 7a27 	vdiv.f32	s14, s18, s15
90014d90:	ee38 8a47 	vsub.f32	s16, s16, s14
90014d94:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 90014e20 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x224>
90014d98:	eec7 7a08 	vdiv.f32	s15, s14, s16
90014d9c:	ed84 8a07 	vstr	s16, [r4, #28]
90014da0:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90014da4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014da8:	edc4 7a08 	vstr	s15, [r4, #32]
90014dac:	d503      	bpl.n	90014db6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90014dae:	eeb1 8a48 	vneg.f32	s16, s16
90014db2:	ed84 8a07 	vstr	s16, [r4, #28]
90014db6:	60e7      	str	r7, [r4, #12]
90014db8:	7426      	strb	r6, [r4, #16]
90014dba:	61ac      	str	r4, [r5, #24]
90014dbc:	b006      	add	sp, #24
90014dbe:	ecbd 8b0a 	vpop	{d8-d12}
90014dc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014dc6:	7ca3      	ldrb	r3, [r4, #18]
90014dc8:	2b00      	cmp	r3, #0
90014dca:	d0f4      	beq.n	90014db6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90014dcc:	ee38 7a68 	vsub.f32	s14, s16, s17
90014dd0:	eddf 6a12 	vldr	s13, [pc, #72]	@ 90014e1c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90014dd4:	eef4 8ac8 	vcmpe.f32	s17, s16
90014dd8:	eec6 7a87 	vdiv.f32	s15, s13, s14
90014ddc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014de0:	edc4 7a08 	vstr	s15, [r4, #32]
90014de4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90014de8:	ee17 3a90 	vmov	r3, s15
90014dec:	eefd 7ae8 	vcvt.s32.f32	s15, s17
90014df0:	b21a      	sxth	r2, r3
90014df2:	ee17 3a90 	vmov	r3, s15
90014df6:	bf48      	it	mi
90014df8:	8122      	strhmi	r2, [r4, #8]
90014dfa:	b21b      	sxth	r3, r3
90014dfc:	bf56      	itet	pl
90014dfe:	80e2      	strhpl	r2, [r4, #6]
90014e00:	80e3      	strhmi	r3, [r4, #6]
90014e02:	8123      	strhpl	r3, [r4, #8]
90014e04:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90014e08:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
90014e0c:	1a9b      	subs	r3, r3, r2
90014e0e:	ee07 3a90 	vmov	s15, r3
90014e12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90014e16:	edc4 7a07 	vstr	s15, [r4, #28]
90014e1a:	e7cc      	b.n	90014db6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90014e1c:	447ffffe 	.word	0x447ffffe
90014e20:	44800000 	.word	0x44800000

90014e24 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90014e24:	b510      	push	{r4, lr}
90014e26:	ed2d 8b02 	vpush	{d8}
90014e2a:	eef0 8a62 	vmov.f32	s17, s5
90014e2e:	2100      	movs	r1, #0
90014e30:	4604      	mov	r4, r0
90014e32:	eeb0 8a42 	vmov.f32	s16, s4
90014e36:	f016 fabb 	bl	9002b3b0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90014e3a:	eef0 7a68 	vmov.f32	s15, s17
90014e3e:	6823      	ldr	r3, [r4, #0]
90014e40:	4620      	mov	r0, r4
90014e42:	689b      	ldr	r3, [r3, #8]
90014e44:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e48:	ee17 2a90 	vmov	r2, s15
90014e4c:	eef0 7a48 	vmov.f32	s15, s16
90014e50:	ecbd 8b02 	vpop	{d8}
90014e54:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014e5c:	ee17 1a90 	vmov	r1, s15
90014e60:	4718      	bx	r3

90014e62 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90014e62:	b510      	push	{r4, lr}
90014e64:	ed2d 8b02 	vpush	{d8}
90014e68:	eef0 8a63 	vmov.f32	s17, s7
90014e6c:	2100      	movs	r1, #0
90014e6e:	4604      	mov	r4, r0
90014e70:	eeb0 8a43 	vmov.f32	s16, s6
90014e74:	f016 fb5e 	bl	9002b534 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90014e78:	eef0 7a68 	vmov.f32	s15, s17
90014e7c:	6823      	ldr	r3, [r4, #0]
90014e7e:	4620      	mov	r0, r4
90014e80:	689b      	ldr	r3, [r3, #8]
90014e82:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e86:	ee17 2a90 	vmov	r2, s15
90014e8a:	eef0 7a48 	vmov.f32	s15, s16
90014e8e:	ecbd 8b02 	vpop	{d8}
90014e92:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014e9a:	ee17 1a90 	vmov	r1, s15
90014e9e:	4718      	bx	r3

90014ea0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90014ea0:	b513      	push	{r0, r1, r4, lr}
90014ea2:	4604      	mov	r4, r0
90014ea4:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90014ea6:	f006 f860 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014eaa:	eef0 7a60 	vmov.f32	s15, s1
90014eae:	4620      	mov	r0, r4
90014eb0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014eb4:	ee17 2a90 	vmov	r2, s15
90014eb8:	eef0 7a40 	vmov.f32	s15, s0
90014ebc:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014ec0:	ee17 1a90 	vmov	r1, s15
90014ec4:	b002      	add	sp, #8
90014ec6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014eca:	f016 b9cb 	b.w	9002b264 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
90014ece:	b513      	push	{r0, r1, r4, lr}
90014ed0:	4604      	mov	r4, r0
90014ed2:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90014ed4:	f006 f849 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014ed8:	eef0 7a60 	vmov.f32	s15, s1
90014edc:	4620      	mov	r0, r4
90014ede:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014ee2:	ee17 2a90 	vmov	r2, s15
90014ee6:	eef0 7a40 	vmov.f32	s15, s0
90014eea:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014eee:	ee17 1a90 	vmov	r1, s15
90014ef2:	b002      	add	sp, #8
90014ef4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014ef8:	f016 ba01 	b.w	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

90014efc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
90014efc:	b5f0      	push	{r4, r5, r6, r7, lr}
90014efe:	2400      	movs	r4, #0
90014f00:	9f07      	ldr	r7, [sp, #28]
90014f02:	f04f 0e01 	mov.w	lr, #1
90014f06:	4626      	mov	r6, r4
90014f08:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
90014f0c:	4463      	add	r3, ip
90014f0e:	4563      	cmp	r3, ip
90014f10:	d02d      	beq.n	90014f6e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90014f12:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90014f16:	2d06      	cmp	r5, #6
90014f18:	d8f9      	bhi.n	90014f0e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90014f1a:	fa0e f505 	lsl.w	r5, lr, r5
90014f1e:	f015 0f66 	tst.w	r5, #102	@ 0x66
90014f22:	d10d      	bne.n	90014f40 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90014f24:	f015 0f10 	tst.w	r5, #16
90014f28:	d117      	bne.n	90014f5a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90014f2a:	072d      	lsls	r5, r5, #28
90014f2c:	d5ef      	bpl.n	90014f0e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90014f2e:	3801      	subs	r0, #1
90014f30:	b91e      	cbnz	r6, 90014f3a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90014f32:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90014f36:	682d      	ldr	r5, [r5, #0]
90014f38:	600d      	str	r5, [r1, #0]
90014f3a:	b96c      	cbnz	r4, 90014f58 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014f3c:	2601      	movs	r6, #1
90014f3e:	e7e6      	b.n	90014f0e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90014f40:	b926      	cbnz	r6, 90014f4c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90014f42:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90014f46:	f853 3c08 	ldr.w	r3, [r3, #-8]
90014f4a:	600b      	str	r3, [r1, #0]
90014f4c:	b924      	cbnz	r4, 90014f58 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014f4e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90014f52:	f850 3c04 	ldr.w	r3, [r0, #-4]
90014f56:	6013      	str	r3, [r2, #0]
90014f58:	bdf0      	pop	{r4, r5, r6, r7, pc}
90014f5a:	3801      	subs	r0, #1
90014f5c:	b91c      	cbnz	r4, 90014f66 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90014f5e:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90014f62:	6824      	ldr	r4, [r4, #0]
90014f64:	6014      	str	r4, [r2, #0]
90014f66:	2e00      	cmp	r6, #0
90014f68:	d1f6      	bne.n	90014f58 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014f6a:	2401      	movs	r4, #1
90014f6c:	e7cf      	b.n	90014f0e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90014f6e:	b90e      	cbnz	r6, 90014f74 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90014f70:	2300      	movs	r3, #0
90014f72:	600b      	str	r3, [r1, #0]
90014f74:	2c00      	cmp	r4, #0
90014f76:	d1ef      	bne.n	90014f58 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014f78:	2300      	movs	r3, #0
90014f7a:	e7ec      	b.n	90014f56 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90014f7c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90014f7c:	b538      	push	{r3, r4, r5, lr}
90014f7e:	ed2d 8b0a 	vpush	{d8-d12}
90014f82:	eef0 ba40 	vmov.f32	s23, s0
90014f86:	4604      	mov	r4, r0
90014f88:	eeb0 ca60 	vmov.f32	s24, s1
90014f8c:	460d      	mov	r5, r1
90014f8e:	eef0 aa41 	vmov.f32	s21, s2
90014f92:	eeb0 ba61 	vmov.f32	s22, s3
90014f96:	eeb0 9a42 	vmov.f32	s18, s4
90014f9a:	eef0 9a62 	vmov.f32	s19, s5
90014f9e:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90014fa2:	ee7b 8a29 	vadd.f32	s17, s22, s19
90014fa6:	ee3a 8a89 	vadd.f32	s16, s21, s18
90014faa:	ee68 8a8a 	vmul.f32	s17, s17, s20
90014fae:	ee28 8a0a 	vmul.f32	s16, s16, s20
90014fb2:	ee3c 0a68 	vsub.f32	s0, s24, s17
90014fb6:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90014fba:	ee20 0a00 	vmul.f32	s0, s0, s0
90014fbe:	eea7 0aa7 	vfma.f32	s0, s15, s15
90014fc2:	f016 fe15 	bl	9002bbf0 <sqrtf>
90014fc6:	eeb5 0a40 	vcmp.f32	s0, #0.0
90014fca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014fce:	d12e      	bne.n	9001502e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90014fd0:	ee79 7a6a 	vsub.f32	s15, s18, s21
90014fd4:	ee39 7acb 	vsub.f32	s14, s19, s22
90014fd8:	eeb0 8a6a 	vmov.f32	s16, s21
90014fdc:	eef0 8a4b 	vmov.f32	s17, s22
90014fe0:	eea7 8a8a 	vfma.f32	s16, s15, s20
90014fe4:	eee7 8a0a 	vfma.f32	s17, s14, s20
90014fe8:	eea7 8a0a 	vfma.f32	s16, s14, s20
90014fec:	eee7 8aca 	vfms.f32	s17, s15, s20
90014ff0:	2d02      	cmp	r5, #2
90014ff2:	dc2f      	bgt.n	90015054 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90014ff4:	3501      	adds	r5, #1
90014ff6:	eef0 1a4b 	vmov.f32	s3, s22
90014ffa:	eeb0 1a6a 	vmov.f32	s2, s21
90014ffe:	4620      	mov	r0, r4
90015000:	4629      	mov	r1, r5
90015002:	eef0 2a68 	vmov.f32	s5, s17
90015006:	eeb0 2a48 	vmov.f32	s4, s16
9001500a:	eef0 0a4c 	vmov.f32	s1, s24
9001500e:	eeb0 0a6b 	vmov.f32	s0, s23
90015012:	f7ff ffb3 	bl	90014f7c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90015016:	eef0 0a68 	vmov.f32	s1, s17
9001501a:	eeb0 0a48 	vmov.f32	s0, s16
9001501e:	4620      	mov	r0, r4
90015020:	f7ff ff55 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015024:	eeb0 ba68 	vmov.f32	s22, s17
90015028:	eef0 aa48 	vmov.f32	s21, s16
9001502c:	e7b9      	b.n	90014fa2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
9001502e:	ee38 8a6b 	vsub.f32	s16, s16, s23
90015032:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90015036:	ee78 8acc 	vsub.f32	s17, s17, s24
9001503a:	ee28 7a27 	vmul.f32	s14, s16, s15
9001503e:	ee68 7aa7 	vmul.f32	s15, s17, s15
90015042:	ee87 8a00 	vdiv.f32	s16, s14, s0
90015046:	eec7 8a80 	vdiv.f32	s17, s15, s0
9001504a:	ee3b 8a88 	vadd.f32	s16, s23, s16
9001504e:	ee7c 8a28 	vadd.f32	s17, s24, s17
90015052:	e7cd      	b.n	90014ff0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90015054:	eef0 0a68 	vmov.f32	s1, s17
90015058:	4620      	mov	r0, r4
9001505a:	eeb0 0a48 	vmov.f32	s0, s16
9001505e:	f7ff ff36 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015062:	ecbd 8b0a 	vpop	{d8-d12}
90015066:	bd38      	pop	{r3, r4, r5, pc}

90015068 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90015068:	b510      	push	{r4, lr}
9001506a:	ed2d 8b0a 	vpush	{d8-d12}
9001506e:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90015072:	4604      	mov	r4, r0
90015074:	eeb0 ca40 	vmov.f32	s24, s0
90015078:	2b02      	cmp	r3, #2
9001507a:	eeb0 9a60 	vmov.f32	s18, s1
9001507e:	eef0 9a41 	vmov.f32	s19, s2
90015082:	eef0 8a61 	vmov.f32	s17, s3
90015086:	eeb0 ba42 	vmov.f32	s22, s4
9001508a:	eef0 ba62 	vmov.f32	s23, s5
9001508e:	eeb0 aa43 	vmov.f32	s20, s6
90015092:	eef0 aa63 	vmov.f32	s21, s7
90015096:	eeb0 8a44 	vmov.f32	s16, s8
9001509a:	eef0 ca64 	vmov.f32	s25, s9
9001509e:	d12c      	bne.n	900150fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
900150a0:	eef0 0a62 	vmov.f32	s1, s5
900150a4:	eeb0 0a42 	vmov.f32	s0, s4
900150a8:	f7ff ff11 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900150ac:	ee79 9acb 	vsub.f32	s19, s19, s22
900150b0:	ee7a caec 	vsub.f32	s25, s21, s25
900150b4:	ee78 8aeb 	vsub.f32	s17, s17, s23
900150b8:	ee3a 8a48 	vsub.f32	s16, s20, s16
900150bc:	ee69 9aac 	vmul.f32	s19, s19, s25
900150c0:	ee28 8a88 	vmul.f32	s16, s17, s16
900150c4:	eef4 9ac8 	vcmpe.f32	s19, s16
900150c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900150cc:	db0f      	blt.n	900150ee <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
900150ce:	2101      	movs	r1, #1
900150d0:	eef0 2a6a 	vmov.f32	s5, s21
900150d4:	eeb0 2a4a 	vmov.f32	s4, s20
900150d8:	4620      	mov	r0, r4
900150da:	eef0 1a6b 	vmov.f32	s3, s23
900150de:	eeb0 1a4b 	vmov.f32	s2, s22
900150e2:	eef0 0a49 	vmov.f32	s1, s18
900150e6:	eeb0 0a4c 	vmov.f32	s0, s24
900150ea:	f7ff ff47 	bl	90014f7c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900150ee:	eef0 0a6a 	vmov.f32	s1, s21
900150f2:	4620      	mov	r0, r4
900150f4:	eeb0 0a4a 	vmov.f32	s0, s20
900150f8:	e035      	b.n	90015166 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
900150fa:	2b01      	cmp	r3, #1
900150fc:	d138      	bne.n	90015170 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900150fe:	ee31 4ae2 	vsub.f32	s8, s3, s5
90015102:	ee33 6a48 	vsub.f32	s12, s6, s16
90015106:	ee71 7a42 	vsub.f32	s15, s2, s4
9001510a:	ee73 6ae4 	vsub.f32	s13, s7, s9
9001510e:	ee26 7a44 	vnmul.f32	s14, s12, s8
90015112:	eea7 7aa6 	vfma.f32	s14, s15, s13
90015116:	eeb5 7a40 	vcmp.f32	s14, #0.0
9001511a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001511e:	d027      	beq.n	90015170 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90015120:	ee28 8a63 	vnmul.f32	s16, s16, s7
90015124:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90015128:	eea4 8a83 	vfma.f32	s16, s9, s6
9001512c:	eee1 8a22 	vfma.f32	s17, s2, s5
90015130:	ee68 7a67 	vnmul.f32	s15, s16, s15
90015134:	ee28 8a44 	vnmul.f32	s16, s16, s8
90015138:	eee6 7a28 	vfma.f32	s15, s12, s17
9001513c:	eea6 8aa8 	vfma.f32	s16, s13, s17
90015140:	ee87 0a87 	vdiv.f32	s0, s15, s14
90015144:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90015148:	eec8 0a07 	vdiv.f32	s1, s16, s14
9001514c:	ee3c ca40 	vsub.f32	s24, s24, s0
90015150:	ee39 9a60 	vsub.f32	s18, s18, s1
90015154:	ee29 9a09 	vmul.f32	s18, s18, s18
90015158:	eeac 9a0c 	vfma.f32	s18, s24, s24
9001515c:	eef4 7ac9 	vcmpe.f32	s15, s18
90015160:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015164:	db04      	blt.n	90015170 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90015166:	f7ff feb2 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001516a:	ecbd 8b0a 	vpop	{d8-d12}
9001516e:	bd10      	pop	{r4, pc}
90015170:	eef0 0a6b 	vmov.f32	s1, s23
90015174:	4620      	mov	r0, r4
90015176:	eeb0 0a4b 	vmov.f32	s0, s22
9001517a:	f7ff fea8 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001517e:	e7b6      	b.n	900150ee <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90015180 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90015180:	b510      	push	{r4, lr}
90015182:	ed2d 8b0c 	vpush	{d8-d13}
90015186:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
9001518a:	4604      	mov	r4, r0
9001518c:	eeb0 9a40 	vmov.f32	s18, s0
90015190:	eef0 9a60 	vmov.f32	s19, s1
90015194:	eef0 aa41 	vmov.f32	s21, s2
90015198:	eeb0 ba61 	vmov.f32	s22, s3
9001519c:	b933      	cbnz	r3, 900151ac <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
9001519e:	f7ff fe96 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900151a2:	eef0 0a4b 	vmov.f32	s1, s22
900151a6:	eeb0 0a6a 	vmov.f32	s0, s21
900151aa:	e015      	b.n	900151d8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
900151ac:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
900151b0:	2b02      	cmp	r3, #2
900151b2:	ee71 8a40 	vsub.f32	s17, s2, s0
900151b6:	ee31 8ae0 	vsub.f32	s16, s3, s1
900151ba:	ee68 8aa7 	vmul.f32	s17, s17, s15
900151be:	ee28 8a27 	vmul.f32	s16, s16, s15
900151c2:	d10f      	bne.n	900151e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
900151c4:	ee70 0ae8 	vsub.f32	s1, s1, s17
900151c8:	ee30 0a08 	vadd.f32	s0, s0, s16
900151cc:	f7ff fe7f 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900151d0:	ee7b 0a68 	vsub.f32	s1, s22, s17
900151d4:	ee3a 0a88 	vadd.f32	s0, s21, s16
900151d8:	4620      	mov	r0, r4
900151da:	f7ff fe78 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900151de:	ecbd 8b0c 	vpop	{d8-d13}
900151e2:	bd10      	pop	{r4, pc}
900151e4:	f7ff fe73 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900151e8:	eef0 0a69 	vmov.f32	s1, s19
900151ec:	eeb0 0a49 	vmov.f32	s0, s18
900151f0:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 90015320 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
900151f4:	eeb1 aa68 	vneg.f32	s20, s17
900151f8:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90015324 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
900151fc:	eee8 0a27 	vfma.f32	s1, s16, s15
90015200:	4620      	mov	r0, r4
90015202:	eea8 0aa7 	vfma.f32	s0, s17, s15
90015206:	ed9f ca48 	vldr	s24, [pc, #288]	@ 90015328 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
9001520a:	eddf ca48 	vldr	s25, [pc, #288]	@ 9001532c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
9001520e:	ed9f da48 	vldr	s26, [pc, #288]	@ 90015330 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
90015212:	eeea 0a2b 	vfma.f32	s1, s20, s23
90015216:	eea8 0a2b 	vfma.f32	s0, s16, s23
9001521a:	f7ff fe58 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001521e:	eef0 0a69 	vmov.f32	s1, s19
90015222:	eeb0 0a49 	vmov.f32	s0, s18
90015226:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90015334 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
9001522a:	4620      	mov	r0, r4
9001522c:	eee8 0a27 	vfma.f32	s1, s16, s15
90015230:	eea8 0aa7 	vfma.f32	s0, s17, s15
90015234:	eeea 0a0c 	vfma.f32	s1, s20, s24
90015238:	eea8 0a0c 	vfma.f32	s0, s16, s24
9001523c:	f7ff fe47 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015240:	eef0 0a69 	vmov.f32	s1, s19
90015244:	eeb0 0a49 	vmov.f32	s0, s18
90015248:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90015338 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
9001524c:	4620      	mov	r0, r4
9001524e:	eee8 0a27 	vfma.f32	s1, s16, s15
90015252:	eea8 0aa7 	vfma.f32	s0, s17, s15
90015256:	eeea 0a2c 	vfma.f32	s1, s20, s25
9001525a:	eea8 0a2c 	vfma.f32	s0, s16, s25
9001525e:	f7ff fe36 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015262:	eef0 0a69 	vmov.f32	s1, s19
90015266:	eeb0 0a49 	vmov.f32	s0, s18
9001526a:	eddf 7a34 	vldr	s15, [pc, #208]	@ 9001533c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
9001526e:	4620      	mov	r0, r4
90015270:	eee8 0a27 	vfma.f32	s1, s16, s15
90015274:	eea8 0aa7 	vfma.f32	s0, s17, s15
90015278:	eeea 0a0d 	vfma.f32	s1, s20, s26
9001527c:	eea8 0a0d 	vfma.f32	s0, s16, s26
90015280:	f7ff fe25 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015284:	ee79 0a88 	vadd.f32	s1, s19, s16
90015288:	ee39 0a28 	vadd.f32	s0, s18, s17
9001528c:	4620      	mov	r0, r4
9001528e:	ee70 0ae8 	vsub.f32	s1, s1, s17
90015292:	ee30 0a08 	vadd.f32	s0, s0, s16
90015296:	f7ff fe1a 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001529a:	eef0 0a69 	vmov.f32	s1, s19
9001529e:	eeb0 0a49 	vmov.f32	s0, s18
900152a2:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90015340 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
900152a6:	4620      	mov	r0, r4
900152a8:	eee8 0a27 	vfma.f32	s1, s16, s15
900152ac:	eea8 0aa7 	vfma.f32	s0, s17, s15
900152b0:	eeea 0a0d 	vfma.f32	s1, s20, s26
900152b4:	eea8 0a0d 	vfma.f32	s0, s16, s26
900152b8:	f7ff fe09 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900152bc:	eef0 0a69 	vmov.f32	s1, s19
900152c0:	eeb0 0a49 	vmov.f32	s0, s18
900152c4:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90015344 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
900152c8:	4620      	mov	r0, r4
900152ca:	eee8 0a27 	vfma.f32	s1, s16, s15
900152ce:	eea8 0aa7 	vfma.f32	s0, s17, s15
900152d2:	eeea 0a2c 	vfma.f32	s1, s20, s25
900152d6:	eea8 0a2c 	vfma.f32	s0, s16, s25
900152da:	f7ff fdf8 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900152de:	eef0 0a69 	vmov.f32	s1, s19
900152e2:	eeb0 0a49 	vmov.f32	s0, s18
900152e6:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90015348 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
900152ea:	4620      	mov	r0, r4
900152ec:	eee8 0a27 	vfma.f32	s1, s16, s15
900152f0:	eea8 0aa7 	vfma.f32	s0, s17, s15
900152f4:	eeea 0a0c 	vfma.f32	s1, s20, s24
900152f8:	eea8 0a0c 	vfma.f32	s0, s16, s24
900152fc:	f7ff fde7 	bl	90014ece <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015300:	eef0 0a69 	vmov.f32	s1, s19
90015304:	eeb0 0a49 	vmov.f32	s0, s18
90015308:	eddf 7a10 	vldr	s15, [pc, #64]	@ 9001534c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
9001530c:	4620      	mov	r0, r4
9001530e:	eee8 0a27 	vfma.f32	s1, s16, s15
90015312:	eea8 0aa7 	vfma.f32	s0, s17, s15
90015316:	eeea 0a2b 	vfma.f32	s1, s20, s23
9001531a:	eea8 0a2b 	vfma.f32	s0, s16, s23
9001531e:	e73e      	b.n	9001519e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
90015320:	3d23d70a 	.word	0x3d23d70a
90015324:	3e8f5c29 	.word	0x3e8f5c29
90015328:	3f19999a 	.word	0x3f19999a
9001532c:	3f4ccccd 	.word	0x3f4ccccd
90015330:	3f75c28f 	.word	0x3f75c28f
90015334:	3e4ccccd 	.word	0x3e4ccccd
90015338:	3ecccccd 	.word	0x3ecccccd
9001533c:	3f3851ec 	.word	0x3f3851ec
90015340:	3fa3d70a 	.word	0x3fa3d70a
90015344:	3fcccccd 	.word	0x3fcccccd
90015348:	3fe66666 	.word	0x3fe66666
9001534c:	3ffae148 	.word	0x3ffae148

90015350 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90015350:	b570      	push	{r4, r5, r6, lr}
90015352:	ed2d 8b06 	vpush	{d8-d10}
90015356:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001535a:	eef0 aa40 	vmov.f32	s21, s0
9001535e:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90015362:	4604      	mov	r4, r0
90015364:	ee30 8ac8 	vsub.f32	s16, s1, s16
90015368:	ee30 9a49 	vsub.f32	s18, s0, s18
9001536c:	eeb0 aa60 	vmov.f32	s20, s1
90015370:	ee28 0a08 	vmul.f32	s0, s16, s16
90015374:	eea9 0a09 	vfma.f32	s0, s18, s18
90015378:	f016 fc3a 	bl	9002bbf0 <sqrtf>
9001537c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90015380:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015384:	dd36      	ble.n	900153f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90015386:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
9001538a:	2600      	movs	r6, #0
9001538c:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90015390:	eec0 6a27 	vdiv.f32	s13, s0, s15
90015394:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90015398:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
9001539c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
900153a0:	eec8 8a26 	vdiv.f32	s17, s16, s13
900153a4:	ee89 8a26 	vdiv.f32	s16, s18, s13
900153a8:	ee70 9a28 	vadd.f32	s19, s0, s17
900153ac:	ee78 8aaa 	vadd.f32	s17, s17, s21
900153b0:	ee30 9ac8 	vsub.f32	s18, s1, s16
900153b4:	ee3a 8a48 	vsub.f32	s16, s20, s16
900153b8:	b1fd      	cbz	r5, 900153fa <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
900153ba:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
900153be:	eef0 0a49 	vmov.f32	s1, s18
900153c2:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
900153c6:	eeb0 0a69 	vmov.f32	s0, s19
900153ca:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
900153ce:	4620      	mov	r0, r4
900153d0:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
900153d4:	f7ff fd64 	bl	90014ea0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
900153d8:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
900153dc:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
900153e0:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
900153e4:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
900153e8:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
900153ec:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
900153f0:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
900153f4:	ecbd 8b06 	vpop	{d8-d10}
900153f8:	bd70      	pop	{r4, r5, r6, pc}
900153fa:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
900153fe:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
90015402:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
90015406:	b16b      	cbz	r3, 90015424 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
90015408:	eef0 1a49 	vmov.f32	s3, s18
9001540c:	4620      	mov	r0, r4
9001540e:	eeb0 1a69 	vmov.f32	s2, s19
90015412:	eef0 0a62 	vmov.f32	s1, s5
90015416:	eeb0 0a42 	vmov.f32	s0, s4
9001541a:	f7ff feb1 	bl	90015180 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001541e:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
90015422:	e7db      	b.n	900153dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90015424:	eef0 4a48 	vmov.f32	s9, s16
90015428:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
9001542c:	eeb0 4a68 	vmov.f32	s8, s17
90015430:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90015434:	eef0 3a49 	vmov.f32	s7, s18
90015438:	4620      	mov	r0, r4
9001543a:	eeb0 3a69 	vmov.f32	s6, s19
9001543e:	f7ff fe13 	bl	90015068 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90015442:	e7cb      	b.n	900153dc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90015444 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90015444:	ee07 2a90 	vmov	s15, r2
90015448:	ee07 1a10 	vmov	s14, r1
9001544c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90015450:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90015464 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90015454:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90015458:	ee60 0aa7 	vmul.f32	s1, s1, s15
9001545c:	ee20 0a27 	vmul.f32	s0, s0, s15
90015460:	f7ff bf76 	b.w	90015350 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90015464:	3d000000 	.word	0x3d000000

90015468 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90015468:	b538      	push	{r3, r4, r5, lr}
9001546a:	ed2d 8b02 	vpush	{d8}
9001546e:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90015472:	4604      	mov	r4, r0
90015474:	b31d      	cbz	r5, 900154be <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90015476:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
9001547a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001547e:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90015482:	ee78 8a67 	vsub.f32	s17, s16, s15
90015486:	ee38 8a27 	vadd.f32	s16, s16, s15
9001548a:	eef0 0a68 	vmov.f32	s1, s17
9001548e:	f7ff fd07 	bl	90014ea0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90015492:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90015496:	eef0 1a48 	vmov.f32	s3, s16
9001549a:	4620      	mov	r0, r4
9001549c:	eeb0 0a41 	vmov.f32	s0, s2
900154a0:	eef0 0a68 	vmov.f32	s1, s17
900154a4:	f7ff fe6c 	bl	90015180 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900154a8:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
900154ac:	eef0 1a68 	vmov.f32	s3, s17
900154b0:	4620      	mov	r0, r4
900154b2:	eef0 0a48 	vmov.f32	s1, s16
900154b6:	eeb0 0a41 	vmov.f32	s0, s2
900154ba:	f7ff fe61 	bl	90015180 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900154be:	4628      	mov	r0, r5
900154c0:	ecbd 8b02 	vpop	{d8}
900154c4:	bd38      	pop	{r3, r4, r5, pc}

900154c6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
900154c6:	b510      	push	{r4, lr}
900154c8:	ed2d 8b02 	vpush	{d8}
900154cc:	4604      	mov	r4, r0
900154ce:	eeb0 8a40 	vmov.f32	s16, s0
900154d2:	eef0 8a60 	vmov.f32	s17, s1
900154d6:	f7ff ffc7 	bl	90015468 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900154da:	b9d0      	cbnz	r0, 90015512 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
900154dc:	4620      	mov	r0, r4
900154de:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
900154e2:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
900154e6:	eef0 0a68 	vmov.f32	s1, s17
900154ea:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
900154ee:	eeb0 0a48 	vmov.f32	s0, s16
900154f2:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
900154f6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900154fa:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900154fe:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90015502:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90015506:	f7ff fdaf 	bl	90015068 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
9001550a:	2001      	movs	r0, #1
9001550c:	ecbd 8b02 	vpop	{d8}
90015510:	bd10      	pop	{r4, pc}
90015512:	2000      	movs	r0, #0
90015514:	e7fa      	b.n	9001550c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

90015516 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
90015516:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
9001551a:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
9001551e:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
90015522:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
90015526:	f7ff be2b 	b.w	90015180 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

9001552c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
9001552c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015530:	b089      	sub	sp, #36	@ 0x24
90015532:	461c      	mov	r4, r3
90015534:	4682      	mov	sl, r0
90015536:	4615      	mov	r5, r2
90015538:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
9001553c:	f10d 0820 	add.w	r8, sp, #32
90015540:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90015542:	9304      	str	r3, [sp, #16]
90015544:	2300      	movs	r3, #0
90015546:	9105      	str	r1, [sp, #20]
90015548:	9306      	str	r3, [sp, #24]
9001554a:	f848 3d04 	str.w	r3, [r8, #-4]!
9001554e:	9b04      	ldr	r3, [sp, #16]
90015550:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90015554:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
90015558:	9b05      	ldr	r3, [sp, #20]
9001555a:	429d      	cmp	r5, r3
9001555c:	d96d      	bls.n	9001563a <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
9001555e:	3d01      	subs	r5, #1
90015560:	f819 3005 	ldrb.w	r3, [r9, r5]
90015564:	2b06      	cmp	r3, #6
90015566:	d8f7      	bhi.n	90015558 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90015568:	a201      	add	r2, pc, #4	@ (adr r2, 90015570 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
9001556a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9001556e:	bf00      	nop
90015570:	9001558f 	.word	0x9001558f
90015574:	90015559 	.word	0x90015559
90015578:	9001558d 	.word	0x9001558d
9001557c:	900155b1 	.word	0x900155b1
90015580:	900155b1 	.word	0x900155b1
90015584:	900155b5 	.word	0x900155b5
90015588:	900155f5 	.word	0x900155f5
9001558c:	3c02      	subs	r4, #2
9001558e:	4650      	mov	r0, sl
90015590:	9400      	str	r4, [sp, #0]
90015592:	462b      	mov	r3, r5
90015594:	4642      	mov	r2, r8
90015596:	a906      	add	r1, sp, #24
90015598:	e9cd 9701 	strd	r9, r7, [sp, #4]
9001559c:	f7ff fcae 	bl	90014efc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900155a0:	eddd 0a07 	vldr	s1, [sp, #28]
900155a4:	ed9d 0a06 	vldr	s0, [sp, #24]
900155a8:	4630      	mov	r0, r6
900155aa:	f7ff fed1 	bl	90015350 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900155ae:	e7d3      	b.n	90015558 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900155b0:	3c01      	subs	r4, #1
900155b2:	e7ec      	b.n	9001558e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
900155b4:	f1a4 0b04 	sub.w	fp, r4, #4
900155b8:	3c02      	subs	r4, #2
900155ba:	4650      	mov	r0, sl
900155bc:	462b      	mov	r3, r5
900155be:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900155c2:	f8cd b000 	str.w	fp, [sp]
900155c6:	4642      	mov	r2, r8
900155c8:	a906      	add	r1, sp, #24
900155ca:	e9cd 9701 	strd	r9, r7, [sp, #4]
900155ce:	f7ff fc95 	bl	90014efc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900155d2:	eddd 2a07 	vldr	s5, [sp, #28]
900155d6:	ed9d 2a06 	vldr	s4, [sp, #24]
900155da:	4630      	mov	r0, r6
900155dc:	ed54 1a01 	vldr	s3, [r4, #-4]
900155e0:	ed14 1a02 	vldr	s2, [r4, #-8]
900155e4:	edd4 0a01 	vldr	s1, [r4, #4]
900155e8:	ed94 0a00 	vldr	s0, [r4]
900155ec:	f7ff fc1a 	bl	90014e24 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900155f0:	465c      	mov	r4, fp
900155f2:	e7b1      	b.n	90015558 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900155f4:	f1a4 0b06 	sub.w	fp, r4, #6
900155f8:	3c02      	subs	r4, #2
900155fa:	4650      	mov	r0, sl
900155fc:	462b      	mov	r3, r5
900155fe:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90015602:	f8cd b000 	str.w	fp, [sp]
90015606:	4642      	mov	r2, r8
90015608:	a906      	add	r1, sp, #24
9001560a:	e9cd 9701 	strd	r9, r7, [sp, #4]
9001560e:	f7ff fc75 	bl	90014efc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90015612:	eddd 3a07 	vldr	s7, [sp, #28]
90015616:	ed9d 3a06 	vldr	s6, [sp, #24]
9001561a:	4630      	mov	r0, r6
9001561c:	ed54 2a03 	vldr	s5, [r4, #-12]
90015620:	ed14 2a04 	vldr	s4, [r4, #-16]
90015624:	ed54 1a01 	vldr	s3, [r4, #-4]
90015628:	ed14 1a02 	vldr	s2, [r4, #-8]
9001562c:	edd4 0a01 	vldr	s1, [r4, #4]
90015630:	ed94 0a00 	vldr	s0, [r4]
90015634:	f7ff fc15 	bl	90014e62 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90015638:	e7da      	b.n	900155f0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
9001563a:	9b04      	ldr	r3, [sp, #16]
9001563c:	b113      	cbz	r3, 90015644 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
9001563e:	4630      	mov	r0, r6
90015640:	f7ff ff69 	bl	90015516 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90015644:	b009      	add	sp, #36	@ 0x24
90015646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001564a:	bf00      	nop

9001564c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
9001564c:	eef0 7a60 	vmov.f32	s15, s1
90015650:	6803      	ldr	r3, [r0, #0]
90015652:	689b      	ldr	r3, [r3, #8]
90015654:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90015658:	ee17 2a90 	vmov	r2, s15
9001565c:	eef0 7a40 	vmov.f32	s15, s0
90015660:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90015664:	ee17 1a90 	vmov	r1, s15
90015668:	4718      	bx	r3
	...

9001566c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
9001566c:	4b04      	ldr	r3, [pc, #16]	@ (90015680 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
9001566e:	b510      	push	{r4, lr}
90015670:	4604      	mov	r4, r0
90015672:	f840 3b14 	str.w	r3, [r0], #20
90015676:	f001 fcea 	bl	9001704e <_ZN8touchgfx7OutlineD1Ev>
9001567a:	4620      	mov	r0, r4
9001567c:	bd10      	pop	{r4, pc}
9001567e:	bf00      	nop
90015680:	900309bc 	.word	0x900309bc

90015684 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90015684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015688:	ed2d 8b04 	vpush	{d8-d9}
9001568c:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90015690:	b0b5      	sub	sp, #212	@ 0xd4
90015692:	4605      	mov	r5, r0
90015694:	468b      	mov	fp, r1
90015696:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001569a:	9206      	str	r2, [sp, #24]
9001569c:	461e      	mov	r6, r3
9001569e:	2400      	movs	r4, #0
900156a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900156a4:	f240 814f 	bls.w	90015946 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
900156a8:	23ff      	movs	r3, #255	@ 0xff
900156aa:	1d02      	adds	r2, r0, #4
900156ac:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 9001594c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
900156b0:	f04f 0800 	mov.w	r8, #0
900156b4:	9300      	str	r3, [sp, #0]
900156b6:	af08      	add	r7, sp, #32
900156b8:	6981      	ldr	r1, [r0, #24]
900156ba:	a808      	add	r0, sp, #32
900156bc:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
900156be:	eef0 9a49 	vmov.f32	s19, s18
900156c2:	f015 fc83 	bl	9002afcc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
900156c6:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
900156ca:	4ba1      	ldr	r3, [pc, #644]	@ (90015950 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
900156cc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
900156d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900156d4:	2201      	movs	r2, #1
900156d6:	9308      	str	r3, [sp, #32]
900156d8:	f105 0334 	add.w	r3, r5, #52	@ 0x34
900156dc:	edd5 6a08 	vldr	s13, [r5, #32]
900156e0:	eeb0 8a49 	vmov.f32	s16, s18
900156e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900156e8:	9325      	str	r3, [sp, #148]	@ 0x94
900156ea:	f04f 0300 	mov.w	r3, #0
900156ee:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
900156f2:	7f6a      	ldrb	r2, [r5, #29]
900156f4:	eef0 8a49 	vmov.f32	s17, s18
900156f8:	bf48      	it	mi
900156fa:	eef1 7a67 	vnegmi.f32	s15, s15
900156fe:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
90015702:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
90015706:	46c1      	mov	r9, r8
90015708:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
9001570c:	f04f 0a01 	mov.w	sl, #1
90015710:	ee67 7a87 	vmul.f32	s15, s15, s14
90015714:	7fab      	ldrb	r3, [r5, #30]
90015716:	942a      	str	r4, [sp, #168]	@ 0xa8
90015718:	435a      	muls	r2, r3
9001571a:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
9001571e:	ee26 7aa7 	vmul.f32	s14, s13, s15
90015722:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
90015726:	1c53      	adds	r3, r2, #1
90015728:	942b      	str	r4, [sp, #172]	@ 0xac
9001572a:	942c      	str	r4, [sp, #176]	@ 0xb0
9001572c:	ee27 7a26 	vmul.f32	s14, s14, s13
90015730:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90015734:	942d      	str	r4, [sp, #180]	@ 0xb4
90015736:	942e      	str	r4, [sp, #184]	@ 0xb8
90015738:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001573c:	ee67 7a27 	vmul.f32	s15, s14, s15
90015740:	942f      	str	r4, [sp, #188]	@ 0xbc
90015742:	9430      	str	r4, [sp, #192]	@ 0xc0
90015744:	9431      	str	r4, [sp, #196]	@ 0xc4
90015746:	9432      	str	r4, [sp, #200]	@ 0xc8
90015748:	9433      	str	r4, [sp, #204]	@ 0xcc
9001574a:	4644      	mov	r4, r8
9001574c:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90015750:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90015754:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
90015758:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
9001575c:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90015760:	9b06      	ldr	r3, [sp, #24]
90015762:	454b      	cmp	r3, r9
90015764:	f000 80cc 	beq.w	90015900 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
90015768:	f109 0301 	add.w	r3, r9, #1
9001576c:	9305      	str	r3, [sp, #20]
9001576e:	f81b 3009 	ldrb.w	r3, [fp, r9]
90015772:	2b06      	cmp	r3, #6
90015774:	d839      	bhi.n	900157ea <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90015776:	e8df f003 	tbb	[pc, r3]
9001577a:	3b04      	.short	0x3b04
9001577c:	817c6f60 	.word	0x817c6f60
90015780:	a0          	.byte	0xa0
90015781:	00          	.byte	0x00
90015782:	45c1      	cmp	r9, r8
90015784:	d92b      	bls.n	900157de <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90015786:	eef0 0a49 	vmov.f32	s1, s18
9001578a:	4638      	mov	r0, r7
9001578c:	eeb0 0a69 	vmov.f32	s0, s19
90015790:	f7ff fdde 	bl	90015350 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90015794:	4638      	mov	r0, r7
90015796:	f7ff fe67 	bl	90015468 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001579a:	4681      	mov	r9, r0
9001579c:	b9f8      	cbnz	r0, 900157de <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001579e:	eef0 0a49 	vmov.f32	s1, s18
900157a2:	4638      	mov	r0, r7
900157a4:	eeb0 0a69 	vmov.f32	s0, s19
900157a8:	f7ff fe8d 	bl	900154c6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
900157ac:	4628      	mov	r0, r5
900157ae:	4623      	mov	r3, r4
900157b0:	9a05      	ldr	r2, [sp, #20]
900157b2:	4641      	mov	r1, r8
900157b4:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
900157b8:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
900157bc:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900157c0:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900157c4:	e9cd 9702 	strd	r9, r7, [sp, #8]
900157c8:	e9cd b600 	strd	fp, r6, [sp]
900157cc:	f7ff feae 	bl	9001552c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900157d0:	eef0 0a49 	vmov.f32	s1, s18
900157d4:	eeb0 0a69 	vmov.f32	s0, s19
900157d8:	4638      	mov	r0, r7
900157da:	f7ff fe74 	bl	900154c6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
900157de:	eeb0 8a49 	vmov.f32	s16, s18
900157e2:	f8dd 8014 	ldr.w	r8, [sp, #20]
900157e6:	eef0 8a69 	vmov.f32	s17, s19
900157ea:	f8dd 9014 	ldr.w	r9, [sp, #20]
900157ee:	e7b7      	b.n	90015760 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
900157f0:	45c1      	cmp	r9, r8
900157f2:	d90d      	bls.n	90015810 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900157f4:	4638      	mov	r0, r7
900157f6:	f7ff fe37 	bl	90015468 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900157fa:	b948      	cbnz	r0, 90015810 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900157fc:	4623      	mov	r3, r4
900157fe:	464a      	mov	r2, r9
90015800:	4641      	mov	r1, r8
90015802:	4628      	mov	r0, r5
90015804:	e9cd a702 	strd	sl, r7, [sp, #8]
90015808:	e9cd b600 	strd	fp, r6, [sp]
9001580c:	f7ff fe8e 	bl	9001552c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90015810:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90015814:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90015818:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
9001581c:	3402      	adds	r4, #2
9001581e:	edd3 8a00 	vldr	s17, [r3]
90015822:	46c8      	mov	r8, r9
90015824:	ed93 8a01 	vldr	s16, [r3, #4]
90015828:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
9001582c:	eef0 9a68 	vmov.f32	s19, s17
90015830:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90015834:	eeb0 9a48 	vmov.f32	s18, s16
90015838:	e7d7      	b.n	900157ea <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001583a:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001583e:	4638      	mov	r0, r7
90015840:	3402      	adds	r4, #2
90015842:	edd3 8a00 	vldr	s17, [r3]
90015846:	ed93 8a01 	vldr	s16, [r3, #4]
9001584a:	eeb0 0a68 	vmov.f32	s0, s17
9001584e:	eef0 0a48 	vmov.f32	s1, s16
90015852:	f7ff fd7d 	bl	90015350 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90015856:	e7c8      	b.n	900157ea <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90015858:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001585c:	edd3 8a00 	vldr	s17, [r3]
90015860:	eef0 0a48 	vmov.f32	s1, s16
90015864:	4638      	mov	r0, r7
90015866:	eeb0 0a68 	vmov.f32	s0, s17
9001586a:	3401      	adds	r4, #1
9001586c:	f7ff fd70 	bl	90015350 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90015870:	e7bb      	b.n	900157ea <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90015872:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90015876:	ed93 8a00 	vldr	s16, [r3]
9001587a:	e7f1      	b.n	90015860 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
9001587c:	00a3      	lsls	r3, r4, #2
9001587e:	eef0 0a48 	vmov.f32	s1, s16
90015882:	eeb0 0a68 	vmov.f32	s0, s17
90015886:	4638      	mov	r0, r7
90015888:	f103 0208 	add.w	r2, r3, #8
9001588c:	f103 090c 	add.w	r9, r3, #12
90015890:	4433      	add	r3, r6
90015892:	3404      	adds	r4, #4
90015894:	4432      	add	r2, r6
90015896:	44b1      	add	r9, r6
90015898:	edd3 1a01 	vldr	s3, [r3, #4]
9001589c:	ed92 2a00 	vldr	s4, [r2]
900158a0:	edd9 2a00 	vldr	s5, [r9]
900158a4:	ed93 1a00 	vldr	s2, [r3]
900158a8:	9207      	str	r2, [sp, #28]
900158aa:	f7ff fabb 	bl	90014e24 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900158ae:	9a07      	ldr	r2, [sp, #28]
900158b0:	ed99 8a00 	vldr	s16, [r9]
900158b4:	edd2 8a00 	vldr	s17, [r2]
900158b8:	e797      	b.n	900157ea <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900158ba:	00a3      	lsls	r3, r4, #2
900158bc:	eef0 0a48 	vmov.f32	s1, s16
900158c0:	eeb0 0a68 	vmov.f32	s0, s17
900158c4:	4638      	mov	r0, r7
900158c6:	f103 0210 	add.w	r2, r3, #16
900158ca:	f103 0914 	add.w	r9, r3, #20
900158ce:	4433      	add	r3, r6
900158d0:	3406      	adds	r4, #6
900158d2:	4432      	add	r2, r6
900158d4:	44b1      	add	r9, r6
900158d6:	edd3 2a03 	vldr	s5, [r3, #12]
900158da:	ed92 3a00 	vldr	s6, [r2]
900158de:	edd9 3a00 	vldr	s7, [r9]
900158e2:	ed93 2a02 	vldr	s4, [r3, #8]
900158e6:	edd3 1a01 	vldr	s3, [r3, #4]
900158ea:	ed93 1a00 	vldr	s2, [r3]
900158ee:	9207      	str	r2, [sp, #28]
900158f0:	f7ff fab7 	bl	90014e62 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900158f4:	9a07      	ldr	r2, [sp, #28]
900158f6:	ed99 8a00 	vldr	s16, [r9]
900158fa:	edd2 8a00 	vldr	s17, [r2]
900158fe:	e774      	b.n	900157ea <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90015900:	9b06      	ldr	r3, [sp, #24]
90015902:	af08      	add	r7, sp, #32
90015904:	4543      	cmp	r3, r8
90015906:	d90f      	bls.n	90015928 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90015908:	4638      	mov	r0, r7
9001590a:	f7ff fdad 	bl	90015468 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001590e:	b958      	cbnz	r0, 90015928 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90015910:	2301      	movs	r3, #1
90015912:	9703      	str	r7, [sp, #12]
90015914:	f8cd b000 	str.w	fp, [sp]
90015918:	4641      	mov	r1, r8
9001591a:	9a06      	ldr	r2, [sp, #24]
9001591c:	4628      	mov	r0, r5
9001591e:	e9cd 6301 	strd	r6, r3, [sp, #4]
90015922:	4623      	mov	r3, r4
90015924:	f7ff fe02 	bl	9001552c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90015928:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
9001592c:	4638      	mov	r0, r7
9001592e:	f015 fbe1 	bl	9002b0f4 <_ZN8touchgfx6Canvas6renderEh>
90015932:	4604      	mov	r4, r0
90015934:	4638      	mov	r0, r7
90015936:	f7ff fe99 	bl	9001566c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
9001593a:	4620      	mov	r0, r4
9001593c:	b035      	add	sp, #212	@ 0xd4
9001593e:	ecbd 8b04 	vpop	{d8-d9}
90015942:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015946:	2401      	movs	r4, #1
90015948:	e7f7      	b.n	9001593a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
9001594a:	bf00      	nop
9001594c:	00000000 	.word	0x00000000
90015950:	90030114 	.word	0x90030114

90015954 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90015954:	b510      	push	{r4, lr}
90015956:	4604      	mov	r4, r0
90015958:	f7ff fe88 	bl	9001566c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
9001595c:	21b0      	movs	r1, #176	@ 0xb0
9001595e:	4620      	mov	r0, r4
90015960:	f016 f91b 	bl	9002bb9a <_ZdlPvj>
90015964:	4620      	mov	r0, r4
90015966:	bd10      	pop	{r4, pc}

90015968 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90015968:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001596c:	4698      	mov	r8, r3
9001596e:	23ff      	movs	r3, #255	@ 0xff
90015970:	4607      	mov	r7, r0
90015972:	4689      	mov	r9, r1
90015974:	4692      	mov	sl, r2
90015976:	1d02      	adds	r2, r0, #4
90015978:	f107 0534 	add.w	r5, r7, #52	@ 0x34
9001597c:	2400      	movs	r4, #0
9001597e:	44ca      	add	sl, r9
90015980:	ed2d 8b06 	vpush	{d8-d10}
90015984:	b0aa      	sub	sp, #168	@ 0xa8
90015986:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90015b8c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
9001598a:	9300      	str	r3, [sp, #0]
9001598c:	eef0 8a48 	vmov.f32	s17, s16
90015990:	6981      	ldr	r1, [r0, #24]
90015992:	a80d      	add	r0, sp, #52	@ 0x34
90015994:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
90015996:	f015 fb19 	bl	9002afcc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001599a:	7f3b      	ldrb	r3, [r7, #28]
9001599c:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90015b8c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
900159a0:	4628      	mov	r0, r5
900159a2:	1e5a      	subs	r2, r3, #1
900159a4:	eeb0 0a60 	vmov.f32	s0, s1
900159a8:	4253      	negs	r3, r2
900159aa:	4153      	adcs	r3, r2
900159ac:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
900159b0:	f005 fadb 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900159b4:	eeb0 9a40 	vmov.f32	s18, s0
900159b8:	eef0 9a60 	vmov.f32	s19, s1
900159bc:	45ca      	cmp	sl, r9
900159be:	f000 80cd 	beq.w	90015b5c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
900159c2:	f819 3b01 	ldrb.w	r3, [r9], #1
900159c6:	2b06      	cmp	r3, #6
900159c8:	d8f8      	bhi.n	900159bc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900159ca:	e8df f003 	tbb	[pc, r3]
900159ce:	0804      	.short	0x0804
900159d0:	58533f2a 	.word	0x58533f2a
900159d4:	8a          	.byte	0x8a
900159d5:	00          	.byte	0x00
900159d6:	a80d      	add	r0, sp, #52	@ 0x34
900159d8:	f015 fb6a 	bl	9002b0b0 <_ZN8touchgfx6Canvas5closeEv>
900159dc:	e7ee      	b.n	900159bc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900159de:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900159e2:	4628      	mov	r0, r5
900159e4:	ed93 8a01 	vldr	s16, [r3, #4]
900159e8:	edd3 8a00 	vldr	s17, [r3]
900159ec:	eef0 0a48 	vmov.f32	s1, s16
900159f0:	eeb0 0a68 	vmov.f32	s0, s17
900159f4:	f005 fab9 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900159f8:	a80d      	add	r0, sp, #52	@ 0x34
900159fa:	eef0 7a60 	vmov.f32	s15, s1
900159fe:	eeb0 9a40 	vmov.f32	s18, s0
90015a02:	eef0 9a60 	vmov.f32	s19, s1
90015a06:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90015a0a:	ee17 2a90 	vmov	r2, s15
90015a0e:	eef0 7a40 	vmov.f32	s15, s0
90015a12:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90015a16:	ee17 1a90 	vmov	r1, s15
90015a1a:	f015 fc23 	bl	9002b264 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90015a1e:	3402      	adds	r4, #2
90015a20:	e7cc      	b.n	900159bc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90015a22:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90015a26:	4628      	mov	r0, r5
90015a28:	edd3 8a00 	vldr	s17, [r3]
90015a2c:	ed93 8a01 	vldr	s16, [r3, #4]
90015a30:	eeb0 0a68 	vmov.f32	s0, s17
90015a34:	eef0 0a48 	vmov.f32	s1, s16
90015a38:	f005 fa97 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015a3c:	a80d      	add	r0, sp, #52	@ 0x34
90015a3e:	eeb0 9a40 	vmov.f32	s18, s0
90015a42:	eef0 9a60 	vmov.f32	s19, s1
90015a46:	f7ff fe01 	bl	9001564c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90015a4a:	e7e8      	b.n	90015a1e <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90015a4c:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90015a50:	edd3 8a00 	vldr	s17, [r3]
90015a54:	eef0 0a48 	vmov.f32	s1, s16
90015a58:	4628      	mov	r0, r5
90015a5a:	eeb0 0a68 	vmov.f32	s0, s17
90015a5e:	3401      	adds	r4, #1
90015a60:	f005 fa83 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015a64:	a80d      	add	r0, sp, #52	@ 0x34
90015a66:	eef0 9a60 	vmov.f32	s19, s1
90015a6a:	eeb0 9a40 	vmov.f32	s18, s0
90015a6e:	f7ff fded 	bl	9001564c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90015a72:	e7a3      	b.n	900159bc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90015a74:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90015a78:	ed93 8a00 	vldr	s16, [r3]
90015a7c:	e7ea      	b.n	90015a54 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90015a7e:	1ca3      	adds	r3, r4, #2
90015a80:	4628      	mov	r0, r5
90015a82:	3404      	adds	r4, #4
90015a84:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90015a88:	ed53 0a01 	vldr	s1, [r3, #-4]
90015a8c:	ed13 0a02 	vldr	s0, [r3, #-8]
90015a90:	edd3 8a00 	vldr	s17, [r3]
90015a94:	ed93 8a01 	vldr	s16, [r3, #4]
90015a98:	f005 fa67 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015a9c:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90015aa0:	eeb0 0a68 	vmov.f32	s0, s17
90015aa4:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90015aa8:	eef0 0a48 	vmov.f32	s1, s16
90015aac:	4628      	mov	r0, r5
90015aae:	f005 fa5c 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015ab2:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
90015ab6:	eef0 2a60 	vmov.f32	s5, s1
90015aba:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90015abe:	eeb0 2a40 	vmov.f32	s4, s0
90015ac2:	a80d      	add	r0, sp, #52	@ 0x34
90015ac4:	eeb0 aa40 	vmov.f32	s20, s0
90015ac8:	eef0 aa60 	vmov.f32	s21, s1
90015acc:	eeb0 0a49 	vmov.f32	s0, s18
90015ad0:	eef0 0a69 	vmov.f32	s1, s19
90015ad4:	f7ff f9a6 	bl	90014e24 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90015ad8:	eef0 9a6a 	vmov.f32	s19, s21
90015adc:	eeb0 9a4a 	vmov.f32	s18, s20
90015ae0:	e76c      	b.n	900159bc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90015ae2:	1d26      	adds	r6, r4, #4
90015ae4:	4628      	mov	r0, r5
90015ae6:	3406      	adds	r4, #6
90015ae8:	eb08 0686 	add.w	r6, r8, r6, lsl #2
90015aec:	ed56 0a03 	vldr	s1, [r6, #-12]
90015af0:	ed16 0a04 	vldr	s0, [r6, #-16]
90015af4:	edd6 8a00 	vldr	s17, [r6]
90015af8:	ed96 8a01 	vldr	s16, [r6, #4]
90015afc:	f005 fa35 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015b00:	ed8d 0a07 	vstr	s0, [sp, #28]
90015b04:	4628      	mov	r0, r5
90015b06:	ed16 0a02 	vldr	s0, [r6, #-8]
90015b0a:	edcd 0a08 	vstr	s1, [sp, #32]
90015b0e:	ed56 0a01 	vldr	s1, [r6, #-4]
90015b12:	f005 fa2a 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015b16:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90015b1a:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90015b1e:	eeb0 0a68 	vmov.f32	s0, s17
90015b22:	eef0 0a48 	vmov.f32	s1, s16
90015b26:	4628      	mov	r0, r5
90015b28:	f005 fa1f 	bl	9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015b2c:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90015b30:	eeb0 3a40 	vmov.f32	s6, s0
90015b34:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90015b38:	eef0 3a60 	vmov.f32	s7, s1
90015b3c:	eddd 1a08 	vldr	s3, [sp, #32]
90015b40:	eeb0 aa40 	vmov.f32	s20, s0
90015b44:	ed9d 1a07 	vldr	s2, [sp, #28]
90015b48:	eef0 aa60 	vmov.f32	s21, s1
90015b4c:	a80d      	add	r0, sp, #52	@ 0x34
90015b4e:	eef0 0a69 	vmov.f32	s1, s19
90015b52:	eeb0 0a49 	vmov.f32	s0, s18
90015b56:	f7ff f984 	bl	90014e62 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90015b5a:	e7bd      	b.n	90015ad8 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90015b5c:	7f7b      	ldrb	r3, [r7, #29]
90015b5e:	a80d      	add	r0, sp, #52	@ 0x34
90015b60:	7fb9      	ldrb	r1, [r7, #30]
90015b62:	4359      	muls	r1, r3
90015b64:	1c4b      	adds	r3, r1, #1
90015b66:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90015b6a:	f3c1 2107 	ubfx	r1, r1, #8, #8
90015b6e:	f015 fac1 	bl	9002b0f4 <_ZN8touchgfx6Canvas6renderEh>
90015b72:	4b07      	ldr	r3, [pc, #28]	@ (90015b90 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90015b74:	4604      	mov	r4, r0
90015b76:	a812      	add	r0, sp, #72	@ 0x48
90015b78:	930d      	str	r3, [sp, #52]	@ 0x34
90015b7a:	f001 fa68 	bl	9001704e <_ZN8touchgfx7OutlineD1Ev>
90015b7e:	4620      	mov	r0, r4
90015b80:	b02a      	add	sp, #168	@ 0xa8
90015b82:	ecbd 8b06 	vpop	{d8-d10}
90015b86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90015b8a:	bf00      	nop
90015b8c:	00000000 	.word	0x00000000
90015b90:	900309bc 	.word	0x900309bc

90015b94 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90015b94:	b410      	push	{r4}
90015b96:	7f04      	ldrb	r4, [r0, #28]
90015b98:	b11c      	cbz	r4, 90015ba2 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90015b9a:	f85d 4b04 	ldr.w	r4, [sp], #4
90015b9e:	f7ff bee3 	b.w	90015968 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90015ba2:	f85d 4b04 	ldr.w	r4, [sp], #4
90015ba6:	f7ff bd6d 	b.w	90015684 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

90015baa <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90015baa:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90015bae:	4691      	mov	r9, r2
90015bb0:	4602      	mov	r2, r0
90015bb2:	4606      	mov	r6, r0
90015bb4:	4688      	mov	r8, r1
90015bb6:	f852 0f26 	ldr.w	r0, [r2, #38]!
90015bba:	469a      	mov	sl, r3
90015bbc:	ab02      	add	r3, sp, #8
90015bbe:	af02      	add	r7, sp, #8
90015bc0:	6851      	ldr	r1, [r2, #4]
90015bc2:	c303      	stmia	r3!, {r0, r1}
90015bc4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90015bc8:	2b00      	cmp	r3, #0
90015bca:	dd2f      	ble.n	90015c2c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90015bcc:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90015bd0:	2c00      	cmp	r4, #0
90015bd2:	dd2b      	ble.n	90015c2c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90015bd4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90015bd8:	441c      	add	r4, r3
90015bda:	b2a4      	uxth	r4, r4
90015bdc:	b225      	sxth	r5, r4
90015bde:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90015be2:	42ab      	cmp	r3, r5
90015be4:	da22      	bge.n	90015c2c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90015be6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015be8:	464a      	mov	r2, r9
90015bea:	9701      	str	r7, [sp, #4]
90015bec:	4641      	mov	r1, r8
90015bee:	9300      	str	r3, [sp, #0]
90015bf0:	4630      	mov	r0, r6
90015bf2:	4653      	mov	r3, sl
90015bf4:	f7ff ffce 	bl	90015b94 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90015bf8:	b940      	cbnz	r0, 90015c0c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
90015bfa:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90015bfe:	2b01      	cmp	r3, #1
90015c00:	d004      	beq.n	90015c0c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
90015c02:	3301      	adds	r3, #1
90015c04:	105b      	asrs	r3, r3, #1
90015c06:	f8ad 300e 	strh.w	r3, [sp, #14]
90015c0a:	e7ec      	b.n	90015be6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
90015c0c:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90015c10:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90015c14:	4413      	add	r3, r2
90015c16:	b29b      	uxth	r3, r3
90015c18:	441a      	add	r2, r3
90015c1a:	f8ad 300a 	strh.w	r3, [sp, #10]
90015c1e:	b212      	sxth	r2, r2
90015c20:	4295      	cmp	r5, r2
90015c22:	dadc      	bge.n	90015bde <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
90015c24:	1ae3      	subs	r3, r4, r3
90015c26:	f8ad 300e 	strh.w	r3, [sp, #14]
90015c2a:	e7d8      	b.n	90015bde <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
90015c2c:	b004      	add	sp, #16
90015c2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90015c32 <_ZN8touchgfx6CircleD1Ev>:
90015c32:	4770      	bx	lr

90015c34 <_ZN8touchgfx6CircleD0Ev>:
90015c34:	b510      	push	{r4, lr}
90015c36:	4604      	mov	r4, r0
90015c38:	2148      	movs	r1, #72	@ 0x48
90015c3a:	f015 ffae 	bl	9002bb9a <_ZdlPvj>
90015c3e:	4620      	mov	r0, r4
90015c40:	bd10      	pop	{r4, pc}

90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90015c42:	b507      	push	{r0, r1, r2, lr}
90015c44:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
90015c48:	ab01      	add	r3, sp, #4
90015c4a:	6809      	ldr	r1, [r1, #0]
90015c4c:	6800      	ldr	r0, [r0, #0]
90015c4e:	f005 faa5 	bl	9001b19c <_ZN8touchgfx6muldivElllRl>
90015c52:	b003      	add	sp, #12
90015c54:	f85d fb04 	ldr.w	pc, [sp], #4

90015c58 <_ZN8touchgfx7CWRUtil4sineEi>:
90015c58:	f44f 73b4 	mov.w	r3, #360	@ 0x168
90015c5c:	fb90 f2f3 	sdiv	r2, r0, r3
90015c60:	fb02 0013 	mls	r0, r2, r3, r0
90015c64:	2800      	cmp	r0, #0
90015c66:	bfb8      	it	lt
90015c68:	18c0      	addlt	r0, r0, r3
90015c6a:	4b0a      	ldr	r3, [pc, #40]	@ (90015c94 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90015c6c:	285a      	cmp	r0, #90	@ 0x5a
90015c6e:	dc02      	bgt.n	90015c76 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90015c70:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90015c74:	4770      	bx	lr
90015c76:	28b4      	cmp	r0, #180	@ 0xb4
90015c78:	dc02      	bgt.n	90015c80 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90015c7a:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
90015c7e:	e7f7      	b.n	90015c70 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90015c80:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
90015c84:	bfd4      	ite	le
90015c86:	38b4      	suble	r0, #180	@ 0xb4
90015c88:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
90015c8c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90015c90:	4240      	negs	r0, r0
90015c92:	4770      	bx	lr
90015c94:	9003016c 	.word	0x9003016c

90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90015c98:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
90015c9c:	fb90 f2f3 	sdiv	r2, r0, r3
90015ca0:	b573      	push	{r0, r1, r4, r5, r6, lr}
90015ca2:	fb02 0013 	mls	r0, r2, r3, r0
90015ca6:	2800      	cmp	r0, #0
90015ca8:	bfb8      	it	lt
90015caa:	18c0      	addlt	r0, r0, r3
90015cac:	1144      	asrs	r4, r0, #5
90015cae:	f000 061f 	and.w	r6, r0, #31
90015cb2:	4620      	mov	r0, r4
90015cb4:	f7ff ffd0 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineEi>
90015cb8:	4605      	mov	r5, r0
90015cba:	b90e      	cbnz	r6, 90015cc0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
90015cbc:	b002      	add	sp, #8
90015cbe:	bd70      	pop	{r4, r5, r6, pc}
90015cc0:	1c60      	adds	r0, r4, #1
90015cc2:	f7ff ffc9 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineEi>
90015cc6:	ab01      	add	r3, sp, #4
90015cc8:	2220      	movs	r2, #32
90015cca:	4631      	mov	r1, r6
90015ccc:	1b40      	subs	r0, r0, r5
90015cce:	f005 fa65 	bl	9001b19c <_ZN8touchgfx6muldivElllRl>
90015cd2:	4428      	add	r0, r5
90015cd4:	e7f2      	b.n	90015cbc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
90015cd6:	b508      	push	{r3, lr}
90015cd8:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
90015cdc:	f7ff ffdc 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015ce0:	bd08      	pop	{r3, pc}
	...

90015ce4 <_ZN8touchgfx6CircleC1Ev>:
90015ce4:	b510      	push	{r4, lr}
90015ce6:	4604      	mov	r4, r0
90015ce8:	f000 fd04 	bl	900166f4 <_ZN8touchgfx12CanvasWidgetC1Ev>
90015cec:	4b08      	ldr	r3, [pc, #32]	@ (90015d10 <_ZN8touchgfx6CircleC1Ev+0x2c>)
90015cee:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
90015cf2:	4620      	mov	r0, r4
90015cf4:	6023      	str	r3, [r4, #0]
90015cf6:	2300      	movs	r3, #0
90015cf8:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
90015cfc:	f24b 4205 	movw	r2, #46085	@ 0xb405
90015d00:	60a3      	str	r3, [r4, #8]
90015d02:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
90015d06:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
90015d0a:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
90015d0e:	bd10      	pop	{r4, pc}
90015d10:	9003022c 	.word	0x9003022c

90015d14 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
90015d14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015d18:	428a      	cmp	r2, r1
90015d1a:	4680      	mov	r8, r0
90015d1c:	4610      	mov	r0, r2
90015d1e:	4699      	mov	r9, r3
90015d20:	bfaa      	itet	ge
90015d22:	460a      	movge	r2, r1
90015d24:	460b      	movlt	r3, r1
90015d26:	4603      	movge	r3, r0
90015d28:	b085      	sub	sp, #20
90015d2a:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
90015d2e:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
90015d32:	1a99      	subs	r1, r3, r2
90015d34:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90015d36:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
90015d3a:	bfa4      	itt	ge
90015d3c:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
90015d40:	2200      	movge	r2, #0
90015d42:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
90015d46:	9300      	str	r3, [sp, #0]
90015d48:	f102 0b01 	add.w	fp, r2, #1
90015d4c:	2c00      	cmp	r4, #0
90015d4e:	f040 80ae 	bne.w	90015eae <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
90015d52:	4610      	mov	r0, r2
90015d54:	9201      	str	r2, [sp, #4]
90015d56:	f7ff ff9f 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015d5a:	a903      	add	r1, sp, #12
90015d5c:	9003      	str	r0, [sp, #12]
90015d5e:	4650      	mov	r0, sl
90015d60:	f7ff ff6f 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015d64:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
90015d68:	9a01      	ldr	r2, [sp, #4]
90015d6a:	4408      	add	r0, r1
90015d6c:	f8d9 1000 	ldr.w	r1, [r9]
90015d70:	4281      	cmp	r1, r0
90015d72:	bfc8      	it	gt
90015d74:	f8c9 0000 	strgt.w	r0, [r9]
90015d78:	6839      	ldr	r1, [r7, #0]
90015d7a:	4288      	cmp	r0, r1
90015d7c:	bfc8      	it	gt
90015d7e:	6038      	strgt	r0, [r7, #0]
90015d80:	4610      	mov	r0, r2
90015d82:	f7ff ffa8 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015d86:	a903      	add	r1, sp, #12
90015d88:	9003      	str	r0, [sp, #12]
90015d8a:	4650      	mov	r0, sl
90015d8c:	f7ff ff59 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015d90:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015d94:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
90015d98:	1a10      	subs	r0, r2, r0
90015d9a:	6832      	ldr	r2, [r6, #0]
90015d9c:	4282      	cmp	r2, r0
90015d9e:	bfc8      	it	gt
90015da0:	6030      	strgt	r0, [r6, #0]
90015da2:	682a      	ldr	r2, [r5, #0]
90015da4:	4290      	cmp	r0, r2
90015da6:	fb9b f2f1 	sdiv	r2, fp, r1
90015daa:	fb01 b212 	mls	r2, r1, r2, fp
90015dae:	bfc8      	it	gt
90015db0:	6028      	strgt	r0, [r5, #0]
90015db2:	1a8a      	subs	r2, r1, r2
90015db4:	fb92 f0f1 	sdiv	r0, r2, r1
90015db8:	fb01 2210 	mls	r2, r1, r0, r2
90015dbc:	4493      	add	fp, r2
90015dbe:	9b00      	ldr	r3, [sp, #0]
90015dc0:	455b      	cmp	r3, fp
90015dc2:	db2a      	blt.n	90015e1a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
90015dc4:	4658      	mov	r0, fp
90015dc6:	f7ff ff67 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015dca:	a903      	add	r1, sp, #12
90015dcc:	9003      	str	r0, [sp, #12]
90015dce:	4650      	mov	r0, sl
90015dd0:	f7ff ff37 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015dd4:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015dd8:	4410      	add	r0, r2
90015dda:	f8d9 2000 	ldr.w	r2, [r9]
90015dde:	4282      	cmp	r2, r0
90015de0:	bfc8      	it	gt
90015de2:	f8c9 0000 	strgt.w	r0, [r9]
90015de6:	683a      	ldr	r2, [r7, #0]
90015de8:	4290      	cmp	r0, r2
90015dea:	bfc8      	it	gt
90015dec:	6038      	strgt	r0, [r7, #0]
90015dee:	4658      	mov	r0, fp
90015df0:	f7ff ff71 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015df4:	a903      	add	r1, sp, #12
90015df6:	9003      	str	r0, [sp, #12]
90015df8:	4650      	mov	r0, sl
90015dfa:	f7ff ff22 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015dfe:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015e02:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
90015e06:	1a10      	subs	r0, r2, r0
90015e08:	6832      	ldr	r2, [r6, #0]
90015e0a:	4282      	cmp	r2, r0
90015e0c:	bfc8      	it	gt
90015e0e:	6030      	strgt	r0, [r6, #0]
90015e10:	682a      	ldr	r2, [r5, #0]
90015e12:	4290      	cmp	r0, r2
90015e14:	bfc8      	it	gt
90015e16:	6028      	strgt	r0, [r5, #0]
90015e18:	e7d1      	b.n	90015dbe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
90015e1a:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90015e1e:	9b00      	ldr	r3, [sp, #0]
90015e20:	455b      	cmp	r3, fp
90015e22:	dd27      	ble.n	90015e74 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
90015e24:	4618      	mov	r0, r3
90015e26:	f7ff ff37 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015e2a:	a903      	add	r1, sp, #12
90015e2c:	9003      	str	r0, [sp, #12]
90015e2e:	4650      	mov	r0, sl
90015e30:	f7ff ff07 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015e34:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015e38:	4410      	add	r0, r2
90015e3a:	f8d9 2000 	ldr.w	r2, [r9]
90015e3e:	4282      	cmp	r2, r0
90015e40:	bfc8      	it	gt
90015e42:	f8c9 0000 	strgt.w	r0, [r9]
90015e46:	683a      	ldr	r2, [r7, #0]
90015e48:	4290      	cmp	r0, r2
90015e4a:	bfc8      	it	gt
90015e4c:	6038      	strgt	r0, [r7, #0]
90015e4e:	9800      	ldr	r0, [sp, #0]
90015e50:	f7ff ff41 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015e54:	a903      	add	r1, sp, #12
90015e56:	9003      	str	r0, [sp, #12]
90015e58:	4650      	mov	r0, sl
90015e5a:	f7ff fef2 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015e5e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015e62:	1a10      	subs	r0, r2, r0
90015e64:	6832      	ldr	r2, [r6, #0]
90015e66:	4282      	cmp	r2, r0
90015e68:	bfc8      	it	gt
90015e6a:	6030      	strgt	r0, [r6, #0]
90015e6c:	682a      	ldr	r2, [r5, #0]
90015e6e:	4290      	cmp	r0, r2
90015e70:	bfc8      	it	gt
90015e72:	6028      	strgt	r0, [r5, #0]
90015e74:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015e78:	f8d9 1000 	ldr.w	r1, [r9]
90015e7c:	4291      	cmp	r1, r2
90015e7e:	bfc8      	it	gt
90015e80:	f8c9 2000 	strgt.w	r2, [r9]
90015e84:	683a      	ldr	r2, [r7, #0]
90015e86:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
90015e8a:	429a      	cmp	r2, r3
90015e8c:	bfb8      	it	lt
90015e8e:	603b      	strlt	r3, [r7, #0]
90015e90:	6832      	ldr	r2, [r6, #0]
90015e92:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90015e96:	429a      	cmp	r2, r3
90015e98:	bfc8      	it	gt
90015e9a:	6033      	strgt	r3, [r6, #0]
90015e9c:	682a      	ldr	r2, [r5, #0]
90015e9e:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90015ea2:	429a      	cmp	r2, r3
90015ea4:	da00      	bge.n	90015ea8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90015ea6:	602b      	str	r3, [r5, #0]
90015ea8:	b005      	add	sp, #20
90015eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015eae:	2002      	movs	r0, #2
90015eb0:	3401      	adds	r4, #1
90015eb2:	9201      	str	r2, [sp, #4]
90015eb4:	fb94 f4f0 	sdiv	r4, r4, r0
90015eb8:	4610      	mov	r0, r2
90015eba:	f7ff feed 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015ebe:	a903      	add	r1, sp, #12
90015ec0:	9003      	str	r0, [sp, #12]
90015ec2:	4650      	mov	r0, sl
90015ec4:	f7ff febd 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015ec8:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
90015ecc:	9a01      	ldr	r2, [sp, #4]
90015ece:	4408      	add	r0, r1
90015ed0:	f8d9 1000 	ldr.w	r1, [r9]
90015ed4:	1b03      	subs	r3, r0, r4
90015ed6:	4420      	add	r0, r4
90015ed8:	4299      	cmp	r1, r3
90015eda:	bfc8      	it	gt
90015edc:	f8c9 3000 	strgt.w	r3, [r9]
90015ee0:	6839      	ldr	r1, [r7, #0]
90015ee2:	428b      	cmp	r3, r1
90015ee4:	bfc8      	it	gt
90015ee6:	603b      	strgt	r3, [r7, #0]
90015ee8:	f8d9 1000 	ldr.w	r1, [r9]
90015eec:	4281      	cmp	r1, r0
90015eee:	bfc8      	it	gt
90015ef0:	f8c9 0000 	strgt.w	r0, [r9]
90015ef4:	6839      	ldr	r1, [r7, #0]
90015ef6:	4288      	cmp	r0, r1
90015ef8:	bfc8      	it	gt
90015efa:	6038      	strgt	r0, [r7, #0]
90015efc:	4610      	mov	r0, r2
90015efe:	f7ff feea 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015f02:	a903      	add	r1, sp, #12
90015f04:	9003      	str	r0, [sp, #12]
90015f06:	4650      	mov	r0, sl
90015f08:	f7ff fe9b 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015f0c:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015f10:	1a10      	subs	r0, r2, r0
90015f12:	6832      	ldr	r2, [r6, #0]
90015f14:	1b01      	subs	r1, r0, r4
90015f16:	4420      	add	r0, r4
90015f18:	428a      	cmp	r2, r1
90015f1a:	bfc8      	it	gt
90015f1c:	6031      	strgt	r1, [r6, #0]
90015f1e:	682a      	ldr	r2, [r5, #0]
90015f20:	4291      	cmp	r1, r2
90015f22:	bfc8      	it	gt
90015f24:	6029      	strgt	r1, [r5, #0]
90015f26:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
90015f2a:	6832      	ldr	r2, [r6, #0]
90015f2c:	4282      	cmp	r2, r0
90015f2e:	bfc8      	it	gt
90015f30:	6030      	strgt	r0, [r6, #0]
90015f32:	682a      	ldr	r2, [r5, #0]
90015f34:	4290      	cmp	r0, r2
90015f36:	fb9b f2f1 	sdiv	r2, fp, r1
90015f3a:	fb01 b212 	mls	r2, r1, r2, fp
90015f3e:	bfc8      	it	gt
90015f40:	6028      	strgt	r0, [r5, #0]
90015f42:	1a8a      	subs	r2, r1, r2
90015f44:	fb92 f0f1 	sdiv	r0, r2, r1
90015f48:	fb01 2210 	mls	r2, r1, r0, r2
90015f4c:	4493      	add	fp, r2
90015f4e:	9b00      	ldr	r3, [sp, #0]
90015f50:	455b      	cmp	r3, fp
90015f52:	db40      	blt.n	90015fd6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
90015f54:	4658      	mov	r0, fp
90015f56:	f7ff fe9f 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015f5a:	a903      	add	r1, sp, #12
90015f5c:	9003      	str	r0, [sp, #12]
90015f5e:	4650      	mov	r0, sl
90015f60:	f7ff fe6f 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015f64:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015f68:	4410      	add	r0, r2
90015f6a:	f8d9 2000 	ldr.w	r2, [r9]
90015f6e:	1b01      	subs	r1, r0, r4
90015f70:	4420      	add	r0, r4
90015f72:	428a      	cmp	r2, r1
90015f74:	bfc8      	it	gt
90015f76:	f8c9 1000 	strgt.w	r1, [r9]
90015f7a:	683a      	ldr	r2, [r7, #0]
90015f7c:	4291      	cmp	r1, r2
90015f7e:	bfc8      	it	gt
90015f80:	6039      	strgt	r1, [r7, #0]
90015f82:	f8d9 2000 	ldr.w	r2, [r9]
90015f86:	4282      	cmp	r2, r0
90015f88:	bfc8      	it	gt
90015f8a:	f8c9 0000 	strgt.w	r0, [r9]
90015f8e:	683a      	ldr	r2, [r7, #0]
90015f90:	4290      	cmp	r0, r2
90015f92:	bfc8      	it	gt
90015f94:	6038      	strgt	r0, [r7, #0]
90015f96:	4658      	mov	r0, fp
90015f98:	f7ff fe9d 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015f9c:	a903      	add	r1, sp, #12
90015f9e:	9003      	str	r0, [sp, #12]
90015fa0:	4650      	mov	r0, sl
90015fa2:	f7ff fe4e 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015fa6:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015faa:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
90015fae:	1a10      	subs	r0, r2, r0
90015fb0:	6832      	ldr	r2, [r6, #0]
90015fb2:	1b01      	subs	r1, r0, r4
90015fb4:	4420      	add	r0, r4
90015fb6:	428a      	cmp	r2, r1
90015fb8:	bfc8      	it	gt
90015fba:	6031      	strgt	r1, [r6, #0]
90015fbc:	682a      	ldr	r2, [r5, #0]
90015fbe:	4291      	cmp	r1, r2
90015fc0:	bfc8      	it	gt
90015fc2:	6029      	strgt	r1, [r5, #0]
90015fc4:	6832      	ldr	r2, [r6, #0]
90015fc6:	4282      	cmp	r2, r0
90015fc8:	bfc8      	it	gt
90015fca:	6030      	strgt	r0, [r6, #0]
90015fcc:	682a      	ldr	r2, [r5, #0]
90015fce:	4290      	cmp	r0, r2
90015fd0:	bfc8      	it	gt
90015fd2:	6028      	strgt	r0, [r5, #0]
90015fd4:	e7bb      	b.n	90015f4e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
90015fd6:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90015fda:	9b00      	ldr	r3, [sp, #0]
90015fdc:	455b      	cmp	r3, fp
90015fde:	f77f af63 	ble.w	90015ea8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90015fe2:	4618      	mov	r0, r3
90015fe4:	f7ff fe58 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015fe8:	a903      	add	r1, sp, #12
90015fea:	9003      	str	r0, [sp, #12]
90015fec:	4650      	mov	r0, sl
90015fee:	f7ff fe28 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015ff2:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015ff6:	4410      	add	r0, r2
90015ff8:	f8d9 2000 	ldr.w	r2, [r9]
90015ffc:	1b01      	subs	r1, r0, r4
90015ffe:	4420      	add	r0, r4
90016000:	428a      	cmp	r2, r1
90016002:	bfc8      	it	gt
90016004:	f8c9 1000 	strgt.w	r1, [r9]
90016008:	683a      	ldr	r2, [r7, #0]
9001600a:	4291      	cmp	r1, r2
9001600c:	bfc8      	it	gt
9001600e:	6039      	strgt	r1, [r7, #0]
90016010:	f8d9 2000 	ldr.w	r2, [r9]
90016014:	4282      	cmp	r2, r0
90016016:	bfc8      	it	gt
90016018:	f8c9 0000 	strgt.w	r0, [r9]
9001601c:	683b      	ldr	r3, [r7, #0]
9001601e:	4298      	cmp	r0, r3
90016020:	bfc8      	it	gt
90016022:	6038      	strgt	r0, [r7, #0]
90016024:	9800      	ldr	r0, [sp, #0]
90016026:	f7ff fe56 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001602a:	a903      	add	r1, sp, #12
9001602c:	9003      	str	r0, [sp, #12]
9001602e:	4650      	mov	r0, sl
90016030:	f7ff fe07 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016034:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90016038:	6832      	ldr	r2, [r6, #0]
9001603a:	1a18      	subs	r0, r3, r0
9001603c:	1b03      	subs	r3, r0, r4
9001603e:	4404      	add	r4, r0
90016040:	429a      	cmp	r2, r3
90016042:	bfc8      	it	gt
90016044:	6033      	strgt	r3, [r6, #0]
90016046:	682a      	ldr	r2, [r5, #0]
90016048:	4293      	cmp	r3, r2
9001604a:	bfc8      	it	gt
9001604c:	602b      	strgt	r3, [r5, #0]
9001604e:	6833      	ldr	r3, [r6, #0]
90016050:	42a3      	cmp	r3, r4
90016052:	bfc8      	it	gt
90016054:	6034      	strgt	r4, [r6, #0]
90016056:	682b      	ldr	r3, [r5, #0]
90016058:	429c      	cmp	r4, r3
9001605a:	bfc8      	it	gt
9001605c:	602c      	strgt	r4, [r5, #0]
9001605e:	e723      	b.n	90015ea8 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

90016060 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
90016060:	b530      	push	{r4, r5, lr}
90016062:	4604      	mov	r4, r0
90016064:	4608      	mov	r0, r1
90016066:	4611      	mov	r1, r2
90016068:	461a      	mov	r2, r3
9001606a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001606e:	b089      	sub	sp, #36	@ 0x24
90016070:	2500      	movs	r5, #0
90016072:	015b      	lsls	r3, r3, #5
90016074:	9505      	str	r5, [sp, #20]
90016076:	9304      	str	r3, [sp, #16]
90016078:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001607c:	015b      	lsls	r3, r3, #5
9001607e:	e9cd 3506 	strd	r3, r5, [sp, #24]
90016082:	ab07      	add	r3, sp, #28
90016084:	2520      	movs	r5, #32
90016086:	9302      	str	r3, [sp, #8]
90016088:	ab06      	add	r3, sp, #24
9001608a:	9301      	str	r3, [sp, #4]
9001608c:	ab05      	add	r3, sp, #20
9001608e:	9300      	str	r3, [sp, #0]
90016090:	ab04      	add	r3, sp, #16
90016092:	f7ff fe3f 	bl	90015d14 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
90016096:	9a04      	ldr	r2, [sp, #16]
90016098:	9805      	ldr	r0, [sp, #20]
9001609a:	9b06      	ldr	r3, [sp, #24]
9001609c:	9907      	ldr	r1, [sp, #28]
9001609e:	fb92 f2f5 	sdiv	r2, r2, r5
900160a2:	fb90 f0f5 	sdiv	r0, r0, r5
900160a6:	fb93 f3f5 	sdiv	r3, r3, r5
900160aa:	fb91 f1f5 	sdiv	r1, r1, r5
900160ae:	b292      	uxth	r2, r2
900160b0:	3002      	adds	r0, #2
900160b2:	b29b      	uxth	r3, r3
900160b4:	3102      	adds	r1, #2
900160b6:	1a80      	subs	r0, r0, r2
900160b8:	3a01      	subs	r2, #1
900160ba:	1ac9      	subs	r1, r1, r3
900160bc:	3b01      	subs	r3, #1
900160be:	80a0      	strh	r0, [r4, #4]
900160c0:	4620      	mov	r0, r4
900160c2:	8022      	strh	r2, [r4, #0]
900160c4:	8063      	strh	r3, [r4, #2]
900160c6:	80e1      	strh	r1, [r4, #6]
900160c8:	b009      	add	sp, #36	@ 0x24
900160ca:	bd30      	pop	{r4, r5, pc}

900160cc <_ZNK8touchgfx6Circle14getMinimalRectEv>:
900160cc:	b510      	push	{r4, lr}
900160ce:	4604      	mov	r4, r0
900160d0:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
900160d4:	f7ff ffc4 	bl	90016060 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
900160d8:	4620      	mov	r0, r4
900160da:	bd10      	pop	{r4, pc}

900160dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
900160dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900160e0:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
900160e4:	468a      	mov	sl, r1
900160e6:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
900160ea:	42b5      	cmp	r5, r6
900160ec:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
900160f0:	6c01      	ldr	r1, [r0, #64]	@ 0x40
900160f2:	b0af      	sub	sp, #188	@ 0xbc
900160f4:	bfa4      	itt	ge
900160f6:	462b      	movge	r3, r5
900160f8:	4635      	movge	r5, r6
900160fa:	4604      	mov	r4, r0
900160fc:	6b42      	ldr	r2, [r0, #52]	@ 0x34
900160fe:	bfa8      	it	ge
90016100:	461e      	movge	r6, r3
90016102:	1b73      	subs	r3, r6, r5
90016104:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90016108:	f04f 0320 	mov.w	r3, #32
9001610c:	bfa4      	itt	ge
9001610e:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
90016112:	2500      	movge	r5, #0
90016114:	fb99 f9f3 	sdiv	r9, r9, r3
90016118:	fb9b fbf3 	sdiv	fp, fp, r3
9001611c:	2900      	cmp	r1, #0
9001611e:	f000 80fb 	beq.w	90016318 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x23c>
90016122:	f9ba 0000 	ldrsh.w	r0, [sl]
90016126:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
9001612a:	eba9 0700 	sub.w	r7, r9, r0
9001612e:	ebab 0803 	sub.w	r8, fp, r3
90016132:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
90016136:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
9001613a:	f8ba 7004 	ldrh.w	r7, [sl, #4]
9001613e:	4407      	add	r7, r0
90016140:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
90016144:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
90016148:	f8ba 8006 	ldrh.w	r8, [sl, #6]
9001614c:	b23f      	sxth	r7, r7
9001614e:	4498      	add	r8, r3
90016150:	2302      	movs	r3, #2
90016152:	eba9 0707 	sub.w	r7, r9, r7
90016156:	fa0f f888 	sxth.w	r8, r8
9001615a:	9303      	str	r3, [sp, #12]
9001615c:	2f00      	cmp	r7, #0
9001615e:	ebab 0808 	sub.w	r8, fp, r8
90016162:	bfb8      	it	lt
90016164:	427f      	neglt	r7, r7
90016166:	f1b8 0f00 	cmp.w	r8, #0
9001616a:	bfb8      	it	lt
9001616c:	f1c8 0800 	rsblt	r8, r8, #0
90016170:	45bc      	cmp	ip, r7
90016172:	bfcc      	ite	gt
90016174:	f10c 0701 	addgt.w	r7, ip, #1
90016178:	3701      	addle	r7, #1
9001617a:	4540      	cmp	r0, r8
9001617c:	bfc8      	it	gt
9001617e:	f100 0801 	addgt.w	r8, r0, #1
90016182:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
90016186:	bfd8      	it	le
90016188:	f108 0801 	addle.w	r8, r8, #1
9001618c:	3001      	adds	r0, #1
9001618e:	fb08 f808 	mul.w	r8, r8, r8
90016192:	1040      	asrs	r0, r0, #1
90016194:	fb07 8707 	mla	r7, r7, r7, r8
90016198:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
9001619c:	fb91 f1f3 	sdiv	r1, r1, r3
900161a0:	1a52      	subs	r2, r2, r1
900161a2:	920f      	str	r2, [sp, #60]	@ 0x3c
900161a4:	f7ff fd58 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineEi>
900161a8:	a92e      	add	r1, sp, #184	@ 0xb8
900161aa:	f841 0d74 	str.w	r0, [r1, #-116]!
900161ae:	a80f      	add	r0, sp, #60	@ 0x3c
900161b0:	f7ff fd47 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900161b4:	f04f 0c20 	mov.w	ip, #32
900161b8:	9b03      	ldr	r3, [sp, #12]
900161ba:	fb90 f0fc 	sdiv	r0, r0, ip
900161be:	4340      	muls	r0, r0
900161c0:	4287      	cmp	r7, r0
900161c2:	da04      	bge.n	900161ce <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf2>
900161c4:	2401      	movs	r4, #1
900161c6:	4620      	mov	r0, r4
900161c8:	b02f      	add	sp, #188	@ 0xbc
900161ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900161ce:	6c21      	ldr	r1, [r4, #64]	@ 0x40
900161d0:	6b60      	ldr	r0, [r4, #52]	@ 0x34
900161d2:	fb91 f2f3 	sdiv	r2, r1, r3
900161d6:	4402      	add	r2, r0
900161d8:	fb92 f2fc 	sdiv	r2, r2, ip
900161dc:	f9ba 1000 	ldrsh.w	r1, [sl]
900161e0:	3201      	adds	r2, #1
900161e2:	f8ba 3004 	ldrh.w	r3, [sl, #4]
900161e6:	4352      	muls	r2, r2
900161e8:	440b      	add	r3, r1
900161ea:	b21b      	sxth	r3, r3
900161ec:	454b      	cmp	r3, r9
900161ee:	bfa8      	it	ge
900161f0:	464b      	movge	r3, r9
900161f2:	428b      	cmp	r3, r1
900161f4:	bfac      	ite	ge
900161f6:	eba9 0903 	subge.w	r9, r9, r3
900161fa:	eba9 0901 	sublt.w	r9, r9, r1
900161fe:	f8ba 3006 	ldrh.w	r3, [sl, #6]
90016202:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
90016206:	440b      	add	r3, r1
90016208:	b21b      	sxth	r3, r3
9001620a:	455b      	cmp	r3, fp
9001620c:	bfa8      	it	ge
9001620e:	465b      	movge	r3, fp
90016210:	428b      	cmp	r3, r1
90016212:	bfac      	ite	ge
90016214:	ebab 0b03 	subge.w	fp, fp, r3
90016218:	ebab 0b01 	sublt.w	fp, fp, r1
9001621c:	fb0b fb0b 	mul.w	fp, fp, fp
90016220:	fb09 b909 	mla	r9, r9, r9, fp
90016224:	4591      	cmp	r9, r2
90016226:	dccd      	bgt.n	900161c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
90016228:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
9001622c:	4621      	mov	r1, r4
9001622e:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
90016230:	4648      	mov	r0, r9
90016232:	f004 fb7f 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016236:	6823      	ldr	r3, [r4, #0]
90016238:	4620      	mov	r0, r4
9001623a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
9001623c:	4798      	blx	r3
9001623e:	4653      	mov	r3, sl
90016240:	9000      	str	r0, [sp, #0]
90016242:	464a      	mov	r2, r9
90016244:	4639      	mov	r1, r7
90016246:	a811      	add	r0, sp, #68	@ 0x44
90016248:	f014 fec0 	bl	9002afcc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001624c:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9001624e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90016250:	920b      	str	r2, [sp, #44]	@ 0x2c
90016252:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
90016256:	930c      	str	r3, [sp, #48]	@ 0x30
90016258:	dd07      	ble.n	9001626a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18e>
9001625a:	2102      	movs	r1, #2
9001625c:	fb93 f3f1 	sdiv	r3, r3, r1
90016260:	4413      	add	r3, r2
90016262:	930c      	str	r3, [sp, #48]	@ 0x30
90016264:	fb93 f3f1 	sdiv	r3, r3, r1
90016268:	930b      	str	r3, [sp, #44]	@ 0x2c
9001626a:	f04f 0a02 	mov.w	sl, #2
9001626e:	4628      	mov	r0, r5
90016270:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
90016274:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
90016278:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9001627c:	017f      	lsls	r7, r7, #5
9001627e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90016282:	930d      	str	r3, [sp, #52]	@ 0x34
90016284:	f7ff fd08 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016288:	4649      	mov	r1, r9
9001628a:	900f      	str	r0, [sp, #60]	@ 0x3c
9001628c:	a80d      	add	r0, sp, #52	@ 0x34
9001628e:	f7ff fcd8 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016292:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016294:	fb90 f0fa 	sdiv	r0, r0, sl
90016298:	eb00 0b03 	add.w	fp, r0, r3
9001629c:	4628      	mov	r0, r5
9001629e:	f7ff fd1a 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900162a2:	f848 0d80 	str.w	r0, [r8, #-128]!
900162a6:	a80d      	add	r0, sp, #52	@ 0x34
900162a8:	4641      	mov	r1, r8
900162aa:	f7ff fcca 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900162ae:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900162b0:	4659      	mov	r1, fp
900162b2:	fb90 f0fa 	sdiv	r0, r0, sl
900162b6:	1a12      	subs	r2, r2, r0
900162b8:	a811      	add	r0, sp, #68	@ 0x44
900162ba:	f014 ffd3 	bl	9002b264 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900162be:	f105 0a20 	add.w	sl, r5, #32
900162c2:	bb67      	cbnz	r7, 9001631e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
900162c4:	46ab      	mov	fp, r5
900162c6:	45b2      	cmp	sl, r6
900162c8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900162ca:	dc33      	bgt.n	90016334 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x258>
900162cc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
900162ce:	4650      	mov	r0, sl
900162d0:	eb02 0241 	add.w	r2, r2, r1, lsl #1
900162d4:	920d      	str	r2, [sp, #52]	@ 0x34
900162d6:	f7ff fcdf 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900162da:	4641      	mov	r1, r8
900162dc:	900e      	str	r0, [sp, #56]	@ 0x38
900162de:	a80d      	add	r0, sp, #52	@ 0x34
900162e0:	f7ff fcaf 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900162e4:	2302      	movs	r3, #2
900162e6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900162e8:	fb90 f0f3 	sdiv	r0, r0, r3
900162ec:	eb00 0b02 	add.w	fp, r0, r2
900162f0:	4650      	mov	r0, sl
900162f2:	f7ff fcf0 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900162f6:	4649      	mov	r1, r9
900162f8:	900f      	str	r0, [sp, #60]	@ 0x3c
900162fa:	a80d      	add	r0, sp, #52	@ 0x34
900162fc:	f7ff fca1 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016300:	2302      	movs	r3, #2
90016302:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016304:	4659      	mov	r1, fp
90016306:	46d3      	mov	fp, sl
90016308:	44ba      	add	sl, r7
9001630a:	fb90 f0f3 	sdiv	r0, r0, r3
9001630e:	1a12      	subs	r2, r2, r0
90016310:	a811      	add	r0, sp, #68	@ 0x44
90016312:	f014 fff4 	bl	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016316:	e7d6      	b.n	900162c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ea>
90016318:	fb92 f2f3 	sdiv	r2, r2, r3
9001631c:	e75e      	b.n	900161dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x100>
9001631e:	fb9a f2f7 	sdiv	r2, sl, r7
90016322:	fb07 a212 	mls	r2, r7, r2, sl
90016326:	1aba      	subs	r2, r7, r2
90016328:	fb92 f1f7 	sdiv	r1, r2, r7
9001632c:	fb07 2211 	mls	r2, r7, r1, r2
90016330:	4492      	add	sl, r2
90016332:	e7c7      	b.n	900162c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e8>
90016334:	455e      	cmp	r6, fp
90016336:	dd23      	ble.n	90016380 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
90016338:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001633a:	f04f 0a02 	mov.w	sl, #2
9001633e:	4630      	mov	r0, r6
90016340:	eb02 0243 	add.w	r2, r2, r3, lsl #1
90016344:	920d      	str	r2, [sp, #52]	@ 0x34
90016346:	f7ff fca7 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001634a:	4641      	mov	r1, r8
9001634c:	900e      	str	r0, [sp, #56]	@ 0x38
9001634e:	a80d      	add	r0, sp, #52	@ 0x34
90016350:	f7ff fc77 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016354:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016356:	fb90 f0fa 	sdiv	r0, r0, sl
9001635a:	4403      	add	r3, r0
9001635c:	4630      	mov	r0, r6
9001635e:	9303      	str	r3, [sp, #12]
90016360:	f7ff fcb9 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016364:	4649      	mov	r1, r9
90016366:	900f      	str	r0, [sp, #60]	@ 0x3c
90016368:	a80d      	add	r0, sp, #52	@ 0x34
9001636a:	f7ff fc6a 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001636e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016370:	9b03      	ldr	r3, [sp, #12]
90016372:	fb90 f0fa 	sdiv	r0, r0, sl
90016376:	4619      	mov	r1, r3
90016378:	1a12      	subs	r2, r2, r0
9001637a:	a811      	add	r0, sp, #68	@ 0x44
9001637c:	f014 ffbf 	bl	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016380:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016382:	b99b      	cbnz	r3, 900163ac <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d0>
90016384:	1b75      	subs	r5, r6, r5
90016386:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
9001638a:	da04      	bge.n	90016396 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
9001638c:	a811      	add	r0, sp, #68	@ 0x44
9001638e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
90016392:	f014 ffb4 	bl	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016396:	21ff      	movs	r1, #255	@ 0xff
90016398:	a811      	add	r0, sp, #68	@ 0x44
9001639a:	f014 feab 	bl	9002b0f4 <_ZN8touchgfx6Canvas6renderEh>
9001639e:	4604      	mov	r4, r0
900163a0:	4b89      	ldr	r3, [pc, #548]	@ (900165c8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ec>)
900163a2:	a816      	add	r0, sp, #88	@ 0x58
900163a4:	9311      	str	r3, [sp, #68]	@ 0x44
900163a6:	f000 fe52 	bl	9001704e <_ZN8touchgfx7OutlineD1Ev>
900163aa:	e70c      	b.n	900161c6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xea>
900163ac:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
900163b0:	429a      	cmp	r2, r3
900163b2:	f0c0 8107 	bcc.w	900165c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e8>
900163b6:	1b73      	subs	r3, r6, r5
900163b8:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
900163bc:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
900163c0:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
900163c4:	9303      	str	r3, [sp, #12]
900163c6:	da43      	bge.n	90016450 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
900163c8:	4630      	mov	r0, r6
900163ca:	f7ff fc65 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900163ce:	4649      	mov	r1, r9
900163d0:	900f      	str	r0, [sp, #60]	@ 0x3c
900163d2:	a80b      	add	r0, sp, #44	@ 0x2c
900163d4:	f7ff fc35 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900163d8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900163da:	18c3      	adds	r3, r0, r3
900163dc:	4630      	mov	r0, r6
900163de:	9305      	str	r3, [sp, #20]
900163e0:	f7ff fc79 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900163e4:	4649      	mov	r1, r9
900163e6:	900f      	str	r0, [sp, #60]	@ 0x3c
900163e8:	a80b      	add	r0, sp, #44	@ 0x2c
900163ea:	f7ff fc2a 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900163ee:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900163f0:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
900163f4:	1a1b      	subs	r3, r3, r0
900163f6:	9206      	str	r2, [sp, #24]
900163f8:	9304      	str	r3, [sp, #16]
900163fa:	eb06 030a 	add.w	r3, r6, sl
900163fe:	9a06      	ldr	r2, [sp, #24]
90016400:	4293      	cmp	r3, r2
90016402:	da25      	bge.n	90016450 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
90016404:	4618      	mov	r0, r3
90016406:	9308      	str	r3, [sp, #32]
90016408:	f7ff fc46 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001640c:	4649      	mov	r1, r9
9001640e:	900f      	str	r0, [sp, #60]	@ 0x3c
90016410:	a80c      	add	r0, sp, #48	@ 0x30
90016412:	f7ff fc16 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016416:	2202      	movs	r2, #2
90016418:	9b05      	ldr	r3, [sp, #20]
9001641a:	9209      	str	r2, [sp, #36]	@ 0x24
9001641c:	fb90 f0f2 	sdiv	r0, r0, r2
90016420:	18c3      	adds	r3, r0, r3
90016422:	9307      	str	r3, [sp, #28]
90016424:	9b08      	ldr	r3, [sp, #32]
90016426:	4618      	mov	r0, r3
90016428:	f7ff fc55 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001642c:	a92e      	add	r1, sp, #184	@ 0xb8
9001642e:	f841 0d80 	str.w	r0, [r1, #-128]!
90016432:	a80c      	add	r0, sp, #48	@ 0x30
90016434:	f7ff fc05 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016438:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001643a:	9b04      	ldr	r3, [sp, #16]
9001643c:	9907      	ldr	r1, [sp, #28]
9001643e:	fb90 f2f2 	sdiv	r2, r0, r2
90016442:	a811      	add	r0, sp, #68	@ 0x44
90016444:	1a9a      	subs	r2, r3, r2
90016446:	f014 ff5a 	bl	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001644a:	9b08      	ldr	r3, [sp, #32]
9001644c:	4453      	add	r3, sl
9001644e:	e7d6      	b.n	900163fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x322>
90016450:	455e      	cmp	r6, fp
90016452:	dd25      	ble.n	900164a0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c4>
90016454:	4630      	mov	r0, r6
90016456:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9001645a:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
9001645e:	930d      	str	r3, [sp, #52]	@ 0x34
90016460:	f7ff fc1a 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016464:	4641      	mov	r1, r8
90016466:	900e      	str	r0, [sp, #56]	@ 0x38
90016468:	a80d      	add	r0, sp, #52	@ 0x34
9001646a:	f7ff fbea 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001646e:	2202      	movs	r2, #2
90016470:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016472:	9204      	str	r2, [sp, #16]
90016474:	fb90 f0f2 	sdiv	r0, r0, r2
90016478:	eb00 0903 	add.w	r9, r0, r3
9001647c:	4630      	mov	r0, r6
9001647e:	f7ff fc2a 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016482:	a92e      	add	r1, sp, #184	@ 0xb8
90016484:	f841 0d7c 	str.w	r0, [r1, #-124]!
90016488:	a80d      	add	r0, sp, #52	@ 0x34
9001648a:	f7ff fbda 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001648e:	9a04      	ldr	r2, [sp, #16]
90016490:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016492:	4649      	mov	r1, r9
90016494:	fb90 f2f2 	sdiv	r2, r0, r2
90016498:	a811      	add	r0, sp, #68	@ 0x44
9001649a:	1a9a      	subs	r2, r3, r2
9001649c:	f014 ff2f 	bl	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900164a0:	46d9      	mov	r9, fp
900164a2:	2602      	movs	r6, #2
900164a4:	45a9      	cmp	r9, r5
900164a6:	db25      	blt.n	900164f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x418>
900164a8:	4648      	mov	r0, r9
900164aa:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
900164ae:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
900164b2:	930d      	str	r3, [sp, #52]	@ 0x34
900164b4:	f7ff fbf0 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900164b8:	4641      	mov	r1, r8
900164ba:	900e      	str	r0, [sp, #56]	@ 0x38
900164bc:	a80d      	add	r0, sp, #52	@ 0x34
900164be:	f7ff fbc0 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900164c2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900164c4:	fb90 f0f6 	sdiv	r0, r0, r6
900164c8:	eb00 0b03 	add.w	fp, r0, r3
900164cc:	4648      	mov	r0, r9
900164ce:	f7ff fc02 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900164d2:	a90f      	add	r1, sp, #60	@ 0x3c
900164d4:	900f      	str	r0, [sp, #60]	@ 0x3c
900164d6:	a80d      	add	r0, sp, #52	@ 0x34
900164d8:	f7ff fbb3 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900164dc:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900164de:	4659      	mov	r1, fp
900164e0:	46cb      	mov	fp, r9
900164e2:	eba9 0907 	sub.w	r9, r9, r7
900164e6:	fb90 f0f6 	sdiv	r0, r0, r6
900164ea:	1a12      	subs	r2, r2, r0
900164ec:	a811      	add	r0, sp, #68	@ 0x44
900164ee:	f014 ff06 	bl	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900164f2:	e7d7      	b.n	900164a4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c8>
900164f4:	455d      	cmp	r5, fp
900164f6:	da22      	bge.n	9001653e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x462>
900164f8:	2602      	movs	r6, #2
900164fa:	4628      	mov	r0, r5
900164fc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90016500:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90016504:	930d      	str	r3, [sp, #52]	@ 0x34
90016506:	f7ff fbc7 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001650a:	4641      	mov	r1, r8
9001650c:	900e      	str	r0, [sp, #56]	@ 0x38
9001650e:	a80d      	add	r0, sp, #52	@ 0x34
90016510:	f7ff fb97 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016514:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90016516:	fb90 f0f6 	sdiv	r0, r0, r6
9001651a:	4407      	add	r7, r0
9001651c:	4628      	mov	r0, r5
9001651e:	f7ff fbda 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016522:	a92e      	add	r1, sp, #184	@ 0xb8
90016524:	f841 0d7c 	str.w	r0, [r1, #-124]!
90016528:	a80d      	add	r0, sp, #52	@ 0x34
9001652a:	f7ff fb8a 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001652e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016530:	4639      	mov	r1, r7
90016532:	fb90 f0f6 	sdiv	r0, r0, r6
90016536:	1a12      	subs	r2, r2, r0
90016538:	a811      	add	r0, sp, #68	@ 0x44
9001653a:	f014 fee0 	bl	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001653e:	9b03      	ldr	r3, [sp, #12]
90016540:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90016544:	f6bf af27 	bge.w	90016396 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90016548:	ae2e      	add	r6, sp, #184	@ 0xb8
9001654a:	4628      	mov	r0, r5
9001654c:	f7ff fba4 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016550:	f04f 0b02 	mov.w	fp, #2
90016554:	f846 0d7c 	str.w	r0, [r6, #-124]!
90016558:	a80b      	add	r0, sp, #44	@ 0x2c
9001655a:	4631      	mov	r1, r6
9001655c:	f7ff fb71 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016560:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016562:	eb00 0903 	add.w	r9, r0, r3
90016566:	4628      	mov	r0, r5
90016568:	f7ff fbb5 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001656c:	4631      	mov	r1, r6
9001656e:	900f      	str	r0, [sp, #60]	@ 0x3c
90016570:	a80b      	add	r0, sp, #44	@ 0x2c
90016572:	f7ff fb66 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016576:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016578:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
9001657c:	eba3 0800 	sub.w	r8, r3, r0
90016580:	4454      	add	r4, sl
90016582:	42a5      	cmp	r5, r4
90016584:	f77f af07 	ble.w	90016396 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90016588:	4620      	mov	r0, r4
9001658a:	f7ff fb85 	bl	90015c98 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001658e:	4631      	mov	r1, r6
90016590:	900f      	str	r0, [sp, #60]	@ 0x3c
90016592:	a80c      	add	r0, sp, #48	@ 0x30
90016594:	f7ff fb55 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016598:	fb90 f0fb 	sdiv	r0, r0, fp
9001659c:	eb00 0709 	add.w	r7, r0, r9
900165a0:	4620      	mov	r0, r4
900165a2:	f7ff fb98 	bl	90015cd6 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900165a6:	a90e      	add	r1, sp, #56	@ 0x38
900165a8:	900e      	str	r0, [sp, #56]	@ 0x38
900165aa:	a80c      	add	r0, sp, #48	@ 0x30
900165ac:	f7ff fb49 	bl	90015c42 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900165b0:	4639      	mov	r1, r7
900165b2:	4454      	add	r4, sl
900165b4:	fb90 f2fb 	sdiv	r2, r0, fp
900165b8:	a811      	add	r0, sp, #68	@ 0x44
900165ba:	eba8 0202 	sub.w	r2, r8, r2
900165be:	f014 fe9e 	bl	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900165c2:	e7de      	b.n	90016582 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4a6>
900165c4:	2400      	movs	r4, #0
900165c6:	e6eb      	b.n	900163a0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c4>
900165c8:	900309bc 	.word	0x900309bc

900165cc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
900165cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900165ce:	6803      	ldr	r3, [r0, #0]
900165d0:	460d      	mov	r5, r1
900165d2:	4604      	mov	r4, r0
900165d4:	4601      	mov	r1, r0
900165d6:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900165d8:	a802      	add	r0, sp, #8
900165da:	4798      	blx	r3
900165dc:	6828      	ldr	r0, [r5, #0]
900165de:	6869      	ldr	r1, [r5, #4]
900165e0:	466b      	mov	r3, sp
900165e2:	c303      	stmia	r3!, {r0, r1}
900165e4:	4668      	mov	r0, sp
900165e6:	4619      	mov	r1, r3
900165e8:	f7fc ff9c 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
900165ec:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900165ee:	b188      	cbz	r0, 90016614 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900165f0:	6803      	ldr	r3, [r0, #0]
900165f2:	1d21      	adds	r1, r4, #4
900165f4:	68db      	ldr	r3, [r3, #12]
900165f6:	4798      	blx	r3
900165f8:	b160      	cbz	r0, 90016614 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900165fa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900165fe:	2b00      	cmp	r3, #0
90016600:	dd08      	ble.n	90016614 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90016602:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90016606:	2d00      	cmp	r5, #0
90016608:	dd04      	ble.n	90016614 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001660a:	4a2b      	ldr	r2, [pc, #172]	@ (900166b8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
9001660c:	7812      	ldrb	r2, [r2, #0]
9001660e:	b11a      	cbz	r2, 90016618 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90016610:	2a01      	cmp	r2, #1
90016612:	d029      	beq.n	90016668 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90016614:	b004      	add	sp, #16
90016616:	bd70      	pop	{r4, r5, r6, pc}
90016618:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001661c:	441d      	add	r5, r3
9001661e:	b2ad      	uxth	r5, r5
90016620:	b22e      	sxth	r6, r5
90016622:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90016626:	42b3      	cmp	r3, r6
90016628:	daf4      	bge.n	90016614 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001662a:	6823      	ldr	r3, [r4, #0]
9001662c:	4669      	mov	r1, sp
9001662e:	4620      	mov	r0, r4
90016630:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90016632:	4798      	blx	r3
90016634:	b940      	cbnz	r0, 90016648 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90016636:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9001663a:	2b01      	cmp	r3, #1
9001663c:	d004      	beq.n	90016648 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001663e:	3301      	adds	r3, #1
90016640:	105b      	asrs	r3, r3, #1
90016642:	f8ad 3006 	strh.w	r3, [sp, #6]
90016646:	e7f0      	b.n	9001662a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90016648:	f8bd 2006 	ldrh.w	r2, [sp, #6]
9001664c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016650:	4413      	add	r3, r2
90016652:	b29b      	uxth	r3, r3
90016654:	441a      	add	r2, r3
90016656:	f8ad 3002 	strh.w	r3, [sp, #2]
9001665a:	b212      	sxth	r2, r2
9001665c:	4296      	cmp	r6, r2
9001665e:	dae0      	bge.n	90016622 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90016660:	1aeb      	subs	r3, r5, r3
90016662:	f8ad 3006 	strh.w	r3, [sp, #6]
90016666:	e7dc      	b.n	90016622 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90016668:	f8bd 5000 	ldrh.w	r5, [sp]
9001666c:	441d      	add	r5, r3
9001666e:	b2ad      	uxth	r5, r5
90016670:	b22e      	sxth	r6, r5
90016672:	f9bd 3000 	ldrsh.w	r3, [sp]
90016676:	42b3      	cmp	r3, r6
90016678:	dacc      	bge.n	90016614 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001667a:	6823      	ldr	r3, [r4, #0]
9001667c:	4669      	mov	r1, sp
9001667e:	4620      	mov	r0, r4
90016680:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90016682:	4798      	blx	r3
90016684:	b940      	cbnz	r0, 90016698 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90016686:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001668a:	2b01      	cmp	r3, #1
9001668c:	d004      	beq.n	90016698 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001668e:	3301      	adds	r3, #1
90016690:	105b      	asrs	r3, r3, #1
90016692:	f8ad 3004 	strh.w	r3, [sp, #4]
90016696:	e7f0      	b.n	9001667a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90016698:	f8bd 2004 	ldrh.w	r2, [sp, #4]
9001669c:	f8bd 3000 	ldrh.w	r3, [sp]
900166a0:	4413      	add	r3, r2
900166a2:	b29b      	uxth	r3, r3
900166a4:	441a      	add	r2, r3
900166a6:	f8ad 3000 	strh.w	r3, [sp]
900166aa:	b212      	sxth	r2, r2
900166ac:	4296      	cmp	r6, r2
900166ae:	dae0      	bge.n	90016672 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900166b0:	1aeb      	subs	r3, r5, r3
900166b2:	f8ad 3004 	strh.w	r3, [sp, #4]
900166b6:	e7dc      	b.n	90016672 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
900166b8:	24024596 	.word	0x24024596

900166bc <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
900166bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900166be:	6803      	ldr	r3, [r0, #0]
900166c0:	4604      	mov	r4, r0
900166c2:	4601      	mov	r1, r0
900166c4:	4668      	mov	r0, sp
900166c6:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
900166c8:	4798      	blx	r3
900166ca:	2100      	movs	r1, #0
900166cc:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
900166d0:	4668      	mov	r0, sp
900166d2:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900166d6:	9102      	str	r1, [sp, #8]
900166d8:	a902      	add	r1, sp, #8
900166da:	f8ad 200c 	strh.w	r2, [sp, #12]
900166de:	f8ad 300e 	strh.w	r3, [sp, #14]
900166e2:	f7fc ff1f 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
900166e6:	6823      	ldr	r3, [r4, #0]
900166e8:	4669      	mov	r1, sp
900166ea:	4620      	mov	r0, r4
900166ec:	691b      	ldr	r3, [r3, #16]
900166ee:	4798      	blx	r3
900166f0:	b004      	add	sp, #16
900166f2:	bd10      	pop	{r4, pc}

900166f4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
900166f4:	2101      	movs	r1, #1
900166f6:	2200      	movs	r2, #0
900166f8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
900166fc:	490a      	ldr	r1, [pc, #40]	@ (90016728 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
900166fe:	8082      	strh	r2, [r0, #4]
90016700:	6001      	str	r1, [r0, #0]
90016702:	21ff      	movs	r1, #255	@ 0xff
90016704:	80c2      	strh	r2, [r0, #6]
90016706:	8102      	strh	r2, [r0, #8]
90016708:	8142      	strh	r2, [r0, #10]
9001670a:	8182      	strh	r2, [r0, #12]
9001670c:	81c2      	strh	r2, [r0, #14]
9001670e:	8202      	strh	r2, [r0, #16]
90016710:	8242      	strh	r2, [r0, #18]
90016712:	61c2      	str	r2, [r0, #28]
90016714:	8402      	strh	r2, [r0, #32]
90016716:	8442      	strh	r2, [r0, #34]	@ 0x22
90016718:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
9001671c:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90016720:	6282      	str	r2, [r0, #40]	@ 0x28
90016722:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016726:	4770      	bx	lr
90016728:	900302a4 	.word	0x900302a4

9001672c <_ZNK8touchgfx3Box12getSolidRectEv>:
9001672c:	2300      	movs	r3, #0
9001672e:	8083      	strh	r3, [r0, #4]
90016730:	80c3      	strh	r3, [r0, #6]
90016732:	8003      	strh	r3, [r0, #0]
90016734:	8043      	strh	r3, [r0, #2]
90016736:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
9001673a:	2bff      	cmp	r3, #255	@ 0xff
9001673c:	bf01      	itttt	eq
9001673e:	890b      	ldrheq	r3, [r1, #8]
90016740:	8083      	strheq	r3, [r0, #4]
90016742:	894b      	ldrheq	r3, [r1, #10]
90016744:	80c3      	strheq	r3, [r0, #6]
90016746:	4770      	bx	lr

90016748 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90016748:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001674a:	4604      	mov	r4, r0
9001674c:	466b      	mov	r3, sp
9001674e:	6808      	ldr	r0, [r1, #0]
90016750:	6849      	ldr	r1, [r1, #4]
90016752:	c303      	stmia	r3!, {r0, r1}
90016754:	6823      	ldr	r3, [r4, #0]
90016756:	4669      	mov	r1, sp
90016758:	4620      	mov	r0, r4
9001675a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001675c:	4798      	blx	r3
9001675e:	4b08      	ldr	r3, [pc, #32]	@ (90016780 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90016760:	681b      	ldr	r3, [r3, #0]
90016762:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90016766:	b10a      	cbz	r2, 9001676c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90016768:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001676a:	b900      	cbnz	r0, 9001676e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
9001676c:	6898      	ldr	r0, [r3, #8]
9001676e:	6803      	ldr	r3, [r0, #0]
90016770:	4669      	mov	r1, sp
90016772:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90016774:	6a1d      	ldr	r5, [r3, #32]
90016776:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
9001677a:	47a8      	blx	r5
9001677c:	b003      	add	sp, #12
9001677e:	bd30      	pop	{r4, r5, pc}
90016780:	240245a0 	.word	0x240245a0

90016784 <_ZN8touchgfx3BoxD1Ev>:
90016784:	4770      	bx	lr

90016786 <_ZN8touchgfx3BoxD0Ev>:
90016786:	b510      	push	{r4, lr}
90016788:	4604      	mov	r4, r0
9001678a:	212c      	movs	r1, #44	@ 0x2c
9001678c:	f015 fa05 	bl	9002bb9a <_ZdlPvj>
90016790:	4620      	mov	r0, r4
90016792:	bd10      	pop	{r4, pc}

90016794 <_ZNK8touchgfx3Box17invalidateContentEv>:
90016794:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90016798:	b12a      	cbz	r2, 900167a6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001679a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9001679e:	b112      	cbz	r2, 900167a6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900167a0:	6803      	ldr	r3, [r0, #0]
900167a2:	695b      	ldr	r3, [r3, #20]
900167a4:	4718      	bx	r3
900167a6:	4770      	bx	lr

900167a8 <_ZN8touchgfx5ImageD1Ev>:
900167a8:	4770      	bx	lr

900167aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
900167aa:	b570      	push	{r4, r5, r6, lr}
900167ac:	880b      	ldrh	r3, [r1, #0]
900167ae:	460d      	mov	r5, r1
900167b0:	4604      	mov	r4, r0
900167b2:	84c3      	strh	r3, [r0, #38]	@ 0x26
900167b4:	4608      	mov	r0, r1
900167b6:	f006 f833 	bl	9001c820 <_ZNK8touchgfx6Bitmap8getWidthEv>
900167ba:	4606      	mov	r6, r0
900167bc:	4628      	mov	r0, r5
900167be:	f006 f863 	bl	9001c888 <_ZNK8touchgfx6Bitmap9getHeightEv>
900167c2:	6823      	ldr	r3, [r4, #0]
900167c4:	4605      	mov	r5, r0
900167c6:	4631      	mov	r1, r6
900167c8:	4620      	mov	r0, r4
900167ca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900167cc:	4798      	blx	r3
900167ce:	6823      	ldr	r3, [r4, #0]
900167d0:	4629      	mov	r1, r5
900167d2:	4620      	mov	r0, r4
900167d4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900167d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900167da:	4718      	bx	r3

900167dc <_ZN8touchgfx5ImageD0Ev>:
900167dc:	b510      	push	{r4, lr}
900167de:	4604      	mov	r4, r0
900167e0:	212c      	movs	r1, #44	@ 0x2c
900167e2:	f015 f9da 	bl	9002bb9a <_ZdlPvj>
900167e6:	4620      	mov	r0, r4
900167e8:	bd10      	pop	{r4, pc}

900167ea <_ZNK8touchgfx5Image12getSolidRectEv>:
900167ea:	b510      	push	{r4, lr}
900167ec:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
900167f0:	4604      	mov	r4, r0
900167f2:	2bff      	cmp	r3, #255	@ 0xff
900167f4:	d006      	beq.n	90016804 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
900167f6:	2300      	movs	r3, #0
900167f8:	8003      	strh	r3, [r0, #0]
900167fa:	8043      	strh	r3, [r0, #2]
900167fc:	8083      	strh	r3, [r0, #4]
900167fe:	80c3      	strh	r3, [r0, #6]
90016800:	4620      	mov	r0, r4
90016802:	bd10      	pop	{r4, pc}
90016804:	3126      	adds	r1, #38	@ 0x26
90016806:	f006 f873 	bl	9001c8f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001680a:	e7f9      	b.n	90016800 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

9001680c <_ZNK8touchgfx5Image17invalidateContentEv>:
9001680c:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90016810:	b12a      	cbz	r2, 9001681e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90016812:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90016816:	b112      	cbz	r2, 9001681e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90016818:	6803      	ldr	r3, [r0, #0]
9001681a:	695b      	ldr	r3, [r3, #20]
9001681c:	4718      	bx	r3
9001681e:	4770      	bx	lr

90016820 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90016820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016824:	4604      	mov	r4, r0
90016826:	b088      	sub	sp, #32
90016828:	2500      	movs	r5, #0
9001682a:	460f      	mov	r7, r1
9001682c:	f854 3b26 	ldr.w	r3, [r4], #38
90016830:	a904      	add	r1, sp, #16
90016832:	4606      	mov	r6, r0
90016834:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016836:	e9cd 5504 	strd	r5, r5, [sp, #16]
9001683a:	4798      	blx	r3
9001683c:	4620      	mov	r0, r4
9001683e:	f005 ffef 	bl	9001c820 <_ZNK8touchgfx6Bitmap8getWidthEv>
90016842:	4680      	mov	r8, r0
90016844:	4620      	mov	r0, r4
90016846:	f006 f81f 	bl	9001c888 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001684a:	9506      	str	r5, [sp, #24]
9001684c:	ad06      	add	r5, sp, #24
9001684e:	f8ad 001e 	strh.w	r0, [sp, #30]
90016852:	4639      	mov	r1, r7
90016854:	f8ad 801c 	strh.w	r8, [sp, #28]
90016858:	4628      	mov	r0, r5
9001685a:	f7fc fe63 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
9001685e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90016862:	2b00      	cmp	r3, #0
90016864:	dd19      	ble.n	9001689a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90016866:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
9001686a:	2b00      	cmp	r3, #0
9001686c:	dd15      	ble.n	9001689a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001686e:	4b0c      	ldr	r3, [pc, #48]	@ (900168a0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90016870:	681b      	ldr	r3, [r3, #0]
90016872:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90016876:	b10a      	cbz	r2, 9001687c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90016878:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001687a:	b900      	cbnz	r0, 9001687e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
9001687c:	6898      	ldr	r0, [r3, #8]
9001687e:	2701      	movs	r7, #1
90016880:	6801      	ldr	r1, [r0, #0]
90016882:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90016886:	9702      	str	r7, [sp, #8]
90016888:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
9001688c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90016890:	e9cd 5600 	strd	r5, r6, [sp]
90016894:	688d      	ldr	r5, [r1, #8]
90016896:	4621      	mov	r1, r4
90016898:	47a8      	blx	r5
9001689a:	b008      	add	sp, #32
9001689c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900168a0:	240245a0 	.word	0x240245a0

900168a4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
900168a4:	2000      	movs	r0, #0
900168a6:	4770      	bx	lr

900168a8 <_ZN8touchgfx8TextArea8setWidthEs>:
900168a8:	b530      	push	{r4, r5, lr}
900168aa:	b085      	sub	sp, #20
900168ac:	6803      	ldr	r3, [r0, #0]
900168ae:	4604      	mov	r4, r0
900168b0:	8101      	strh	r1, [r0, #8]
900168b2:	466d      	mov	r5, sp
900168b4:	4601      	mov	r1, r0
900168b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900168ba:	343c      	adds	r4, #60	@ 0x3c
900168bc:	4628      	mov	r0, r5
900168be:	4798      	blx	r3
900168c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900168c4:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900168c8:	b005      	add	sp, #20
900168ca:	bd30      	pop	{r4, r5, pc}

900168cc <_ZN8touchgfx8TextArea9setHeightEs>:
900168cc:	b530      	push	{r4, r5, lr}
900168ce:	b085      	sub	sp, #20
900168d0:	6803      	ldr	r3, [r0, #0]
900168d2:	4604      	mov	r4, r0
900168d4:	8141      	strh	r1, [r0, #10]
900168d6:	466d      	mov	r5, sp
900168d8:	4601      	mov	r1, r0
900168da:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900168de:	343c      	adds	r4, #60	@ 0x3c
900168e0:	4628      	mov	r0, r5
900168e2:	4798      	blx	r3
900168e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900168e8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900168ec:	b005      	add	sp, #20
900168ee:	bd30      	pop	{r4, r5, pc}

900168f0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
900168f0:	2200      	movs	r2, #0
900168f2:	8002      	strh	r2, [r0, #0]
900168f4:	8042      	strh	r2, [r0, #2]
900168f6:	8082      	strh	r2, [r0, #4]
900168f8:	80c2      	strh	r2, [r0, #6]
900168fa:	4770      	bx	lr

900168fc <_ZN8touchgfx8TextArea8setAlphaEh>:
900168fc:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
90016900:	4770      	bx	lr
	...

90016904 <_ZN8touchgfx8TextArea12setBaselineYEs>:
90016904:	b570      	push	{r4, r5, r6, lr}
90016906:	6803      	ldr	r3, [r0, #0]
90016908:	4604      	mov	r4, r0
9001690a:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9001690c:	460d      	mov	r5, r1
9001690e:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90016910:	4b08      	ldr	r3, [pc, #32]	@ (90016934 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
90016912:	681b      	ldr	r3, [r3, #0]
90016914:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90016918:	4b07      	ldr	r3, [pc, #28]	@ (90016938 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
9001691a:	681b      	ldr	r3, [r3, #0]
9001691c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90016920:	6803      	ldr	r3, [r0, #0]
90016922:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90016924:	4798      	blx	r3
90016926:	1a29      	subs	r1, r5, r0
90016928:	4633      	mov	r3, r6
9001692a:	4620      	mov	r0, r4
9001692c:	b209      	sxth	r1, r1
9001692e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016932:	4718      	bx	r3
90016934:	240245f8 	.word	0x240245f8
90016938:	24024600 	.word	0x24024600

9001693c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
9001693c:	b570      	push	{r4, r5, r6, lr}
9001693e:	6803      	ldr	r3, [r0, #0]
90016940:	4604      	mov	r4, r0
90016942:	4615      	mov	r5, r2
90016944:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90016946:	4798      	blx	r3
90016948:	6823      	ldr	r3, [r4, #0]
9001694a:	4629      	mov	r1, r5
9001694c:	4620      	mov	r0, r4
9001694e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
90016950:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016954:	4718      	bx	r3

90016956 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
90016956:	2000      	movs	r0, #0
90016958:	4770      	bx	lr

9001695a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
9001695a:	b508      	push	{r3, lr}
9001695c:	f7ec fa66 	bl	90002e2c <_ZNK8touchgfx8Drawable17invalidateContentEv>
90016960:	bd08      	pop	{r3, pc}

90016962 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
90016962:	6c80      	ldr	r0, [r0, #72]	@ 0x48
90016964:	4770      	bx	lr

90016966 <_ZN8touchgfx8KeyboardD1Ev>:
90016966:	4770      	bx	lr

90016968 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
90016968:	4770      	bx	lr

9001696a <_ZN8touchgfx10ClickEventD1Ev>:
9001696a:	4770      	bx	lr

9001696c <_ZN8touchgfx8Keyboard14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
9001696c:	b538      	push	{r3, r4, r5, lr}
9001696e:	4604      	mov	r4, r0
90016970:	4615      	mov	r5, r2
90016972:	f7fc feaf 	bl	900136d4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90016976:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001697a:	81a3      	strh	r3, [r4, #12]
9001697c:	f04f 33ff 	mov.w	r3, #4294967295
90016980:	6223      	str	r3, [r4, #32]
90016982:	682b      	ldr	r3, [r5, #0]
90016984:	61e3      	str	r3, [r4, #28]
90016986:	602c      	str	r4, [r5, #0]
90016988:	bd38      	pop	{r3, r4, r5, pc}

9001698a <_ZN8touchgfx10ClickEventD0Ev>:
9001698a:	b510      	push	{r4, lr}
9001698c:	4604      	mov	r4, r0
9001698e:	210c      	movs	r1, #12
90016990:	f015 f903 	bl	9002bb9a <_ZdlPvj>
90016994:	4620      	mov	r0, r4
90016996:	bd10      	pop	{r4, pc}

90016998 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90016998:	b510      	push	{r4, lr}
9001699a:	4604      	mov	r4, r0
9001699c:	214c      	movs	r1, #76	@ 0x4c
9001699e:	f015 f8fc 	bl	9002bb9a <_ZdlPvj>
900169a2:	4620      	mov	r0, r4
900169a4:	bd10      	pop	{r4, pc}

900169a6 <_ZN8touchgfx8KeyboardD0Ev>:
900169a6:	b510      	push	{r4, lr}
900169a8:	4604      	mov	r4, r0
900169aa:	21e8      	movs	r1, #232	@ 0xe8
900169ac:	f015 f8f5 	bl	9002bb9a <_ZdlPvj>
900169b0:	4620      	mov	r0, r4
900169b2:	bd10      	pop	{r4, pc}

900169b4 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
900169b4:	2200      	movs	r2, #0
900169b6:	f04f 31ff 	mov.w	r1, #4294967295
900169ba:	6082      	str	r2, [r0, #8]
900169bc:	e9c0 2100 	strd	r2, r1, [r0]
900169c0:	4770      	bx	lr

900169c2 <_ZNK8touchgfx4Rect9intersectEss>:
900169c2:	b510      	push	{r4, lr}
900169c4:	f9b0 3000 	ldrsh.w	r3, [r0]
900169c8:	428b      	cmp	r3, r1
900169ca:	dc10      	bgt.n	900169ee <_ZNK8touchgfx4Rect9intersectEss+0x2c>
900169cc:	8884      	ldrh	r4, [r0, #4]
900169ce:	4423      	add	r3, r4
900169d0:	b21b      	sxth	r3, r3
900169d2:	4299      	cmp	r1, r3
900169d4:	da0b      	bge.n	900169ee <_ZNK8touchgfx4Rect9intersectEss+0x2c>
900169d6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900169da:	4293      	cmp	r3, r2
900169dc:	dc07      	bgt.n	900169ee <_ZNK8touchgfx4Rect9intersectEss+0x2c>
900169de:	88c0      	ldrh	r0, [r0, #6]
900169e0:	4418      	add	r0, r3
900169e2:	b200      	sxth	r0, r0
900169e4:	4282      	cmp	r2, r0
900169e6:	bfac      	ite	ge
900169e8:	2000      	movge	r0, #0
900169ea:	2001      	movlt	r0, #1
900169ec:	bd10      	pop	{r4, pc}
900169ee:	2000      	movs	r0, #0
900169f0:	e7fc      	b.n	900169ec <_ZNK8touchgfx4Rect9intersectEss+0x2a>
	...

900169f4 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE>:
900169f4:	b530      	push	{r4, r5, lr}
900169f6:	f890 30dd 	ldrb.w	r3, [r0, #221]	@ 0xdd
900169fa:	b085      	sub	sp, #20
900169fc:	4604      	mov	r4, r0
900169fe:	460d      	mov	r5, r1
90016a00:	b1f3      	cbz	r3, 90016a40 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE+0x4c>
90016a02:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
90016a06:	30bc      	adds	r0, #188	@ 0xbc
90016a08:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
90016a0c:	f7ff ffd9 	bl	900169c2 <_ZNK8touchgfx4Rect9intersectEss>
90016a10:	b9b0      	cbnz	r0, 90016a40 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE+0x4c>
90016a12:	f894 30e4 	ldrb.w	r3, [r4, #228]	@ 0xe4
90016a16:	b99b      	cbnz	r3, 90016a40 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE+0x4c>
90016a18:	480a      	ldr	r0, [pc, #40]	@ (90016a44 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE+0x50>)
90016a1a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016a1e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90016a22:	9001      	str	r0, [sp, #4]
90016a24:	2002      	movs	r0, #2
90016a26:	f8ad 300e 	strh.w	r3, [sp, #14]
90016a2a:	6823      	ldr	r3, [r4, #0]
90016a2c:	f88d 0008 	strb.w	r0, [sp, #8]
90016a30:	4620      	mov	r0, r4
90016a32:	f8ad 100a 	strh.w	r1, [sp, #10]
90016a36:	a901      	add	r1, sp, #4
90016a38:	f8ad 200c 	strh.w	r2, [sp, #12]
90016a3c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016a3e:	4798      	blx	r3
90016a40:	b005      	add	sp, #20
90016a42:	bd30      	pop	{r4, r5, pc}
90016a44:	900303f0 	.word	0x900303f0

90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_>:
90016a48:	b510      	push	{r4, lr}
90016a4a:	f9b1 4000 	ldrsh.w	r4, [r1]
90016a4e:	888a      	ldrh	r2, [r1, #4]
90016a50:	f9b0 3000 	ldrsh.w	r3, [r0]
90016a54:	4422      	add	r2, r4
90016a56:	b212      	sxth	r2, r2
90016a58:	4293      	cmp	r3, r2
90016a5a:	da15      	bge.n	90016a88 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016a5c:	8882      	ldrh	r2, [r0, #4]
90016a5e:	4413      	add	r3, r2
90016a60:	b21b      	sxth	r3, r3
90016a62:	429c      	cmp	r4, r3
90016a64:	da10      	bge.n	90016a88 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016a66:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016a6a:	88c9      	ldrh	r1, [r1, #6]
90016a6c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016a70:	4419      	add	r1, r3
90016a72:	b209      	sxth	r1, r1
90016a74:	428a      	cmp	r2, r1
90016a76:	da07      	bge.n	90016a88 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016a78:	88c0      	ldrh	r0, [r0, #6]
90016a7a:	4410      	add	r0, r2
90016a7c:	b200      	sxth	r0, r0
90016a7e:	4283      	cmp	r3, r0
90016a80:	bfac      	ite	ge
90016a82:	2000      	movge	r0, #0
90016a84:	2001      	movlt	r0, #1
90016a86:	bd10      	pop	{r4, pc}
90016a88:	2000      	movs	r0, #0
90016a8a:	e7fc      	b.n	90016a86 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90016a8c <_ZN8touchgfx8DrawableC1Ev>:
90016a8c:	4a0a      	ldr	r2, [pc, #40]	@ (90016ab8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
90016a8e:	6002      	str	r2, [r0, #0]
90016a90:	2200      	movs	r2, #0
90016a92:	8082      	strh	r2, [r0, #4]
90016a94:	80c2      	strh	r2, [r0, #6]
90016a96:	8102      	strh	r2, [r0, #8]
90016a98:	8142      	strh	r2, [r0, #10]
90016a9a:	8182      	strh	r2, [r0, #12]
90016a9c:	81c2      	strh	r2, [r0, #14]
90016a9e:	8202      	strh	r2, [r0, #16]
90016aa0:	8242      	strh	r2, [r0, #18]
90016aa2:	61c2      	str	r2, [r0, #28]
90016aa4:	8402      	strh	r2, [r0, #32]
90016aa6:	8442      	strh	r2, [r0, #34]	@ 0x22
90016aa8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90016aac:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016ab0:	2201      	movs	r2, #1
90016ab2:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
90016ab6:	4770      	bx	lr
90016ab8:	90030588 	.word	0x90030588

90016abc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90016abc:	b570      	push	{r4, r5, r6, lr}
90016abe:	6803      	ldr	r3, [r0, #0]
90016ac0:	4604      	mov	r4, r0
90016ac2:	4615      	mov	r5, r2
90016ac4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016ac6:	4798      	blx	r3
90016ac8:	6823      	ldr	r3, [r4, #0]
90016aca:	4629      	mov	r1, r5
90016acc:	4620      	mov	r0, r4
90016ace:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90016ad0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016ad4:	4718      	bx	r3
	...

90016ad8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
90016ad8:	b538      	push	{r3, r4, r5, lr}
90016ada:	4604      	mov	r4, r0
90016adc:	460d      	mov	r5, r1
90016ade:	2226      	movs	r2, #38	@ 0x26
90016ae0:	2100      	movs	r1, #0
90016ae2:	f015 fe6d 	bl	9002c7c0 <memset>
90016ae6:	4620      	mov	r0, r4
90016ae8:	f7ff ffd0 	bl	90016a8c <_ZN8touchgfx8DrawableC1Ev>
90016aec:	4b06      	ldr	r3, [pc, #24]	@ (90016b08 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
90016aee:	4620      	mov	r0, r4
90016af0:	4629      	mov	r1, r5
90016af2:	6023      	str	r3, [r4, #0]
90016af4:	882b      	ldrh	r3, [r5, #0]
90016af6:	84e3      	strh	r3, [r4, #38]	@ 0x26
90016af8:	23ff      	movs	r3, #255	@ 0xff
90016afa:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90016afe:	f7ff fe54 	bl	900167aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90016b02:	4620      	mov	r0, r4
90016b04:	bd38      	pop	{r3, r4, r5, pc}
90016b06:	bf00      	nop
90016b08:	90030384 	.word	0x90030384

90016b0c <_ZN8touchgfx8KeyboardC1Ev>:
90016b0c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90016b10:	4604      	mov	r4, r0
90016b12:	2500      	movs	r5, #0
90016b14:	f7ff ffba 	bl	90016a8c <_ZN8touchgfx8DrawableC1Ev>
90016b18:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90016b1c:	4b2f      	ldr	r3, [pc, #188]	@ (90016bdc <_ZN8touchgfx8KeyboardC1Ev+0xd0>)
90016b1e:	f104 0938 	add.w	r9, r4, #56	@ 0x38
90016b22:	af02      	add	r7, sp, #8
90016b24:	f104 0864 	add.w	r8, r4, #100	@ 0x64
90016b28:	6023      	str	r3, [r4, #0]
90016b2a:	4648      	mov	r0, r9
90016b2c:	f827 6d04 	strh.w	r6, [r7, #-4]!
90016b30:	4639      	mov	r1, r7
90016b32:	f104 0ab8 	add.w	sl, r4, #184	@ 0xb8
90016b36:	e9c4 550a 	strd	r5, r5, [r4, #40]	@ 0x28
90016b3a:	e9c4 550c 	strd	r5, r5, [r4, #48]	@ 0x30
90016b3e:	f7ff ffcb 	bl	90016ad8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
90016b42:	2226      	movs	r2, #38	@ 0x26
90016b44:	4629      	mov	r1, r5
90016b46:	4640      	mov	r0, r8
90016b48:	f015 fe3a 	bl	9002c7c0 <memset>
90016b4c:	4640      	mov	r0, r8
90016b4e:	f7ff ff9d 	bl	90016a8c <_ZN8touchgfx8DrawableC1Ev>
90016b52:	4b23      	ldr	r3, [pc, #140]	@ (90016be0 <_ZN8touchgfx8KeyboardC1Ev+0xd4>)
90016b54:	4639      	mov	r1, r7
90016b56:	f8a4 6090 	strh.w	r6, [r4, #144]	@ 0x90
90016b5a:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
90016b5e:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
90016b62:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
90016b66:	4650      	mov	r0, sl
90016b68:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
90016b6c:	4b1d      	ldr	r3, [pc, #116]	@ (90016be4 <_ZN8touchgfx8KeyboardC1Ev+0xd8>)
90016b6e:	f884 509c 	strb.w	r5, [r4, #156]	@ 0x9c
90016b72:	6663      	str	r3, [r4, #100]	@ 0x64
90016b74:	f884 509d 	strb.w	r5, [r4, #157]	@ 0x9d
90016b78:	f8a4 50a0 	strh.w	r5, [r4, #160]	@ 0xa0
90016b7c:	f8a4 50a2 	strh.w	r5, [r4, #162]	@ 0xa2
90016b80:	f8a4 60a4 	strh.w	r6, [r4, #164]	@ 0xa4
90016b84:	f8a4 60a6 	strh.w	r6, [r4, #166]	@ 0xa6
90016b88:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
90016b8c:	f8c4 50b4 	str.w	r5, [r4, #180]	@ 0xb4
90016b90:	f8ad 6004 	strh.w	r6, [sp, #4]
90016b94:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
90016b98:	f7ff ff9e 	bl	90016ad8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
90016b9c:	2301      	movs	r3, #1
90016b9e:	462a      	mov	r2, r5
90016ba0:	4629      	mov	r1, r5
90016ba2:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90016ba6:	4648      	mov	r0, r9
90016ba8:	f884 50e4 	strb.w	r5, [r4, #228]	@ 0xe4
90016bac:	f7fc ff90 	bl	90013ad0 <_ZN8touchgfx8Drawable5setXYEss>
90016bb0:	4649      	mov	r1, r9
90016bb2:	4620      	mov	r0, r4
90016bb4:	f7fc fb32 	bl	9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90016bb8:	4651      	mov	r1, sl
90016bba:	4620      	mov	r0, r4
90016bbc:	f884 50dd 	strb.w	r5, [r4, #221]	@ 0xdd
90016bc0:	f7fc fb2c 	bl	9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90016bc4:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90016bc8:	4620      	mov	r0, r4
90016bca:	4641      	mov	r1, r8
90016bcc:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
90016bd0:	f7fc fb24 	bl	9001321c <_ZN8touchgfx9Container3addERNS_8DrawableE>
90016bd4:	4620      	mov	r0, r4
90016bd6:	b002      	add	sp, #8
90016bd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90016bdc:	90030494 	.word	0x90030494
90016be0:	9002eefc 	.word	0x9002eefc
90016be4:	90030404 	.word	0x90030404

90016be8 <_ZN8touchgfx8Keyboard9setBufferEPtt>:
90016be8:	b510      	push	{r4, lr}
90016bea:	4604      	mov	r4, r0
90016bec:	6301      	str	r1, [r0, #48]	@ 0x30
90016bee:	8682      	strh	r2, [r0, #52]	@ 0x34
90016bf0:	f8c0 10ac 	str.w	r1, [r0, #172]	@ 0xac
90016bf4:	4608      	mov	r0, r1
90016bf6:	f005 fd4f 	bl	9001c698 <_ZN8touchgfx7Unicode6strlenEPKt>
90016bfa:	86e0      	strh	r0, [r4, #54]	@ 0x36
90016bfc:	bd10      	pop	{r4, pc}

90016bfe <_ZN8touchgfx8Keyboard9setLayoutEPKNS0_6LayoutE>:
90016bfe:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90016c02:	4605      	mov	r5, r0
90016c04:	460c      	mov	r4, r1
90016c06:	f8c5 10b0 	str.w	r1, [r5, #176]	@ 0xb0
90016c0a:	b309      	cbz	r1, 90016c50 <_ZN8touchgfx8Keyboard9setLayoutEPKNS0_6LayoutE+0x52>
90016c0c:	460f      	mov	r7, r1
90016c0e:	a902      	add	r1, sp, #8
90016c10:	f105 0664 	add.w	r6, r5, #100	@ 0x64
90016c14:	3038      	adds	r0, #56	@ 0x38
90016c16:	f837 3b1c 	ldrh.w	r3, [r7], #28
90016c1a:	f821 3d04 	strh.w	r3, [r1, #-4]!
90016c1e:	f7ff fdc4 	bl	900167aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90016c22:	4639      	mov	r1, r7
90016c24:	4630      	mov	r0, r6
90016c26:	f014 ff2b 	bl	9002ba80 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90016c2a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90016c2c:	4630      	mov	r0, r6
90016c2e:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
90016c32:	f9b4 7016 	ldrsh.w	r7, [r4, #22]
90016c36:	f9b4 8018 	ldrsh.w	r8, [r4, #24]
90016c3a:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
90016c3e:	f9b4 1012 	ldrsh.w	r1, [r4, #18]
90016c42:	f7fc ff45 	bl	90013ad0 <_ZN8touchgfx8Drawable5setXYEss>
90016c46:	4642      	mov	r2, r8
90016c48:	4639      	mov	r1, r7
90016c4a:	4630      	mov	r0, r6
90016c4c:	f7ff ff36 	bl	90016abc <_ZN8touchgfx8Drawable14setWidthHeightEss>
90016c50:	682b      	ldr	r3, [r5, #0]
90016c52:	4628      	mov	r0, r5
90016c54:	695b      	ldr	r3, [r3, #20]
90016c56:	4798      	blx	r3
90016c58:	b002      	add	sp, #8
90016c5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90016c5e <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss>:
90016c5e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016c62:	4690      	mov	r8, r2
90016c64:	f8d1 70b0 	ldr.w	r7, [r1, #176]	@ 0xb0
90016c68:	2200      	movs	r2, #0
90016c6a:	4606      	mov	r6, r0
90016c6c:	4699      	mov	r9, r3
90016c6e:	8042      	strh	r2, [r0, #2]
90016c70:	8082      	strh	r2, [r0, #4]
90016c72:	80c2      	strh	r2, [r0, #6]
90016c74:	8102      	strh	r2, [r0, #8]
90016c76:	7002      	strb	r2, [r0, #0]
90016c78:	b1c7      	cbz	r7, 90016cac <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss+0x4e>
90016c7a:	f897 a008 	ldrb.w	sl, [r7, #8]
90016c7e:	4615      	mov	r5, r2
90016c80:	f04f 0b0c 	mov.w	fp, #12
90016c84:	b2eb      	uxtb	r3, r5
90016c86:	459a      	cmp	sl, r3
90016c88:	d910      	bls.n	90016cac <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss+0x4e>
90016c8a:	687c      	ldr	r4, [r7, #4]
90016c8c:	464a      	mov	r2, r9
90016c8e:	4641      	mov	r1, r8
90016c90:	fb0b 4405 	mla	r4, fp, r5, r4
90016c94:	3501      	adds	r5, #1
90016c96:	1ca0      	adds	r0, r4, #2
90016c98:	f7ff fe93 	bl	900169c2 <_ZNK8touchgfx4Rect9intersectEss>
90016c9c:	2800      	cmp	r0, #0
90016c9e:	d0f1      	beq.n	90016c84 <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss+0x26>
90016ca0:	6823      	ldr	r3, [r4, #0]
90016ca2:	6033      	str	r3, [r6, #0]
90016ca4:	6863      	ldr	r3, [r4, #4]
90016ca6:	6073      	str	r3, [r6, #4]
90016ca8:	68a3      	ldr	r3, [r4, #8]
90016caa:	60b3      	str	r3, [r6, #8]
90016cac:	4630      	mov	r0, r6
90016cae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

90016cb2 <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss>:
90016cb2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90016cb6:	2500      	movs	r5, #0
90016cb8:	f8d1 70b0 	ldr.w	r7, [r1, #176]	@ 0xb0
90016cbc:	4606      	mov	r6, r0
90016cbe:	4690      	mov	r8, r2
90016cc0:	4699      	mov	r9, r3
90016cc2:	6085      	str	r5, [r0, #8]
90016cc4:	e9c0 5500 	strd	r5, r5, [r0]
90016cc8:	b307      	cbz	r7, 90016d0c <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss+0x5a>
90016cca:	f897 a010 	ldrb.w	sl, [r7, #16]
90016cce:	b2eb      	uxtb	r3, r5
90016cd0:	459a      	cmp	sl, r3
90016cd2:	d91b      	bls.n	90016d0c <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss+0x5a>
90016cd4:	68fc      	ldr	r4, [r7, #12]
90016cd6:	464a      	mov	r2, r9
90016cd8:	4641      	mov	r1, r8
90016cda:	eb04 1405 	add.w	r4, r4, r5, lsl #4
90016cde:	3501      	adds	r5, #1
90016ce0:	4620      	mov	r0, r4
90016ce2:	f7ff fe6e 	bl	900169c2 <_ZNK8touchgfx4Rect9intersectEss>
90016ce6:	2800      	cmp	r0, #0
90016ce8:	d0f1      	beq.n	90016cce <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss+0x1c>
90016cea:	4623      	mov	r3, r4
90016cec:	4632      	mov	r2, r6
90016cee:	f104 0508 	add.w	r5, r4, #8
90016cf2:	6818      	ldr	r0, [r3, #0]
90016cf4:	3308      	adds	r3, #8
90016cf6:	f853 1c04 	ldr.w	r1, [r3, #-4]
90016cfa:	4614      	mov	r4, r2
90016cfc:	42ab      	cmp	r3, r5
90016cfe:	c403      	stmia	r4!, {r0, r1}
90016d00:	4622      	mov	r2, r4
90016d02:	d1f6      	bne.n	90016cf2 <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss+0x40>
90016d04:	6818      	ldr	r0, [r3, #0]
90016d06:	6020      	str	r0, [r4, #0]
90016d08:	889b      	ldrh	r3, [r3, #4]
90016d0a:	80a3      	strh	r3, [r4, #4]
90016d0c:	4630      	mov	r0, r6
90016d0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90016d12 <_ZNK8touchgfx8Keyboard13getCharForKeyEh>:
90016d12:	b570      	push	{r4, r5, r6, lr}
90016d14:	f8d0 00b4 	ldr.w	r0, [r0, #180]	@ 0xb4
90016d18:	b160      	cbz	r0, 90016d34 <_ZNK8touchgfx8Keyboard13getCharForKeyEh+0x22>
90016d1a:	7906      	ldrb	r6, [r0, #4]
90016d1c:	2300      	movs	r3, #0
90016d1e:	b2da      	uxtb	r2, r3
90016d20:	4296      	cmp	r6, r2
90016d22:	d908      	bls.n	90016d36 <_ZNK8touchgfx8Keyboard13getCharForKeyEh+0x24>
90016d24:	009a      	lsls	r2, r3, #2
90016d26:	6804      	ldr	r4, [r0, #0]
90016d28:	3301      	adds	r3, #1
90016d2a:	18a5      	adds	r5, r4, r2
90016d2c:	5ca2      	ldrb	r2, [r4, r2]
90016d2e:	428a      	cmp	r2, r1
90016d30:	d1f5      	bne.n	90016d1e <_ZNK8touchgfx8Keyboard13getCharForKeyEh+0xc>
90016d32:	8868      	ldrh	r0, [r5, #2]
90016d34:	bd70      	pop	{r4, r5, r6, pc}
90016d36:	2000      	movs	r0, #0
90016d38:	e7fc      	b.n	90016d34 <_ZNK8touchgfx8Keyboard13getCharForKeyEh+0x22>
	...

90016d3c <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE>:
90016d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016d40:	f8d0 30b0 	ldr.w	r3, [r0, #176]	@ 0xb0
90016d44:	b08d      	sub	sp, #52	@ 0x34
90016d46:	4605      	mov	r5, r0
90016d48:	460e      	mov	r6, r1
90016d4a:	2b00      	cmp	r3, #0
90016d4c:	f000 80c4 	beq.w	90016ed8 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x19c>
90016d50:	8d18      	ldrh	r0, [r3, #40]	@ 0x28
90016d52:	f005 fcb5 	bl	9001c6c0 <_ZN8touchgfx11FontManager7getFontEt>
90016d56:	2800      	cmp	r0, #0
90016d58:	f000 80be 	beq.w	90016ed8 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x19c>
90016d5c:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
90016d60:	2400      	movs	r4, #0
90016d62:	9007      	str	r0, [sp, #28]
90016d64:	920a      	str	r2, [sp, #40]	@ 0x28
90016d66:	2201      	movs	r2, #1
90016d68:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90016d6c:	f88d 2020 	strb.w	r2, [sp, #32]
90016d70:	f8d5 20b0 	ldr.w	r2, [r5, #176]	@ 0xb0
90016d74:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90016d78:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90016d7a:	f88d 402c 	strb.w	r4, [sp, #44]	@ 0x2c
90016d7e:	9209      	str	r2, [sp, #36]	@ 0x24
90016d80:	9402      	str	r4, [sp, #8]
90016d82:	6803      	ldr	r3, [r0, #0]
90016d84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016d86:	4798      	blx	r3
90016d88:	4607      	mov	r7, r0
90016d8a:	f8d5 30b0 	ldr.w	r3, [r5, #176]	@ 0xb0
90016d8e:	fa5f f884 	uxtb.w	r8, r4
90016d92:	7a1a      	ldrb	r2, [r3, #8]
90016d94:	4542      	cmp	r2, r8
90016d96:	f240 809f 	bls.w	90016ed8 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x19c>
90016d9a:	220c      	movs	r2, #12
90016d9c:	f8d3 9004 	ldr.w	r9, [r3, #4]
90016da0:	4631      	mov	r1, r6
90016da2:	fb02 f808 	mul.w	r8, r2, r8
90016da6:	eb09 0a08 	add.w	sl, r9, r8
90016daa:	f10a 0a02 	add.w	sl, sl, #2
90016dae:	4650      	mov	r0, sl
90016db0:	f7ff fe4a 	bl	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016db4:	2800      	cmp	r0, #0
90016db6:	f000 808a 	beq.w	90016ece <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x192>
90016dba:	f819 1008 	ldrb.w	r1, [r9, r8]
90016dbe:	4628      	mov	r0, r5
90016dc0:	f7ff ffa7 	bl	90016d12 <_ZNK8touchgfx8Keyboard13getCharForKeyEh>
90016dc4:	4681      	mov	r9, r0
90016dc6:	2800      	cmp	r0, #0
90016dc8:	f000 8081 	beq.w	90016ece <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x192>
90016dcc:	f8da 0000 	ldr.w	r0, [sl]
90016dd0:	ab03      	add	r3, sp, #12
90016dd2:	f8da 1004 	ldr.w	r1, [sl, #4]
90016dd6:	c303      	stmia	r3!, {r0, r1}
90016dd8:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
90016ddc:	2102      	movs	r1, #2
90016dde:	f8bd 800e 	ldrh.w	r8, [sp, #14]
90016de2:	1bd3      	subs	r3, r2, r7
90016de4:	fb93 f3f1 	sdiv	r3, r3, r1
90016de8:	b29b      	uxth	r3, r3
90016dea:	4498      	add	r8, r3
90016dec:	1ad3      	subs	r3, r2, r3
90016dee:	fa1f f888 	uxth.w	r8, r8
90016df2:	f8ad 3012 	strh.w	r3, [sp, #18]
90016df6:	ab05      	add	r3, sp, #20
90016df8:	f8da 1004 	ldr.w	r1, [sl, #4]
90016dfc:	f8ad 800e 	strh.w	r8, [sp, #14]
90016e00:	f8da 0000 	ldr.w	r0, [sl]
90016e04:	c303      	stmia	r3!, {r0, r1}
90016e06:	4631      	mov	r1, r6
90016e08:	a805      	add	r0, sp, #20
90016e0a:	f7ff fe1d 	bl	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016e0e:	2800      	cmp	r0, #0
90016e10:	d05f      	beq.n	90016ed2 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x196>
90016e12:	f9bd 0014 	ldrsh.w	r0, [sp, #20]
90016e16:	f9b6 2000 	ldrsh.w	r2, [r6]
90016e1a:	f8bd a018 	ldrh.w	sl, [sp, #24]
90016e1e:	4686      	mov	lr, r0
90016e20:	4290      	cmp	r0, r2
90016e22:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90016e26:	4450      	add	r0, sl
90016e28:	f8b6 a004 	ldrh.w	sl, [r6, #4]
90016e2c:	bfb8      	it	lt
90016e2e:	4696      	movlt	lr, r2
90016e30:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90016e34:	4452      	add	r2, sl
90016e36:	b280      	uxth	r0, r0
90016e38:	4299      	cmp	r1, r3
90016e3a:	468c      	mov	ip, r1
90016e3c:	b292      	uxth	r2, r2
90016e3e:	f8ad e014 	strh.w	lr, [sp, #20]
90016e42:	fa0f fb80 	sxth.w	fp, r0
90016e46:	bfb8      	it	lt
90016e48:	469c      	movlt	ip, r3
90016e4a:	fa0f fa82 	sxth.w	sl, r2
90016e4e:	f8ad c016 	strh.w	ip, [sp, #22]
90016e52:	45d3      	cmp	fp, sl
90016e54:	bfb8      	it	lt
90016e56:	4602      	movlt	r2, r0
90016e58:	eba2 020e 	sub.w	r2, r2, lr
90016e5c:	f8ad 2018 	strh.w	r2, [sp, #24]
90016e60:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90016e64:	4411      	add	r1, r2
90016e66:	88f2      	ldrh	r2, [r6, #6]
90016e68:	4413      	add	r3, r2
90016e6a:	b289      	uxth	r1, r1
90016e6c:	b29b      	uxth	r3, r3
90016e6e:	b208      	sxth	r0, r1
90016e70:	b21a      	sxth	r2, r3
90016e72:	4290      	cmp	r0, r2
90016e74:	bfb8      	it	lt
90016e76:	460b      	movlt	r3, r1
90016e78:	eba3 030c 	sub.w	r3, r3, ip
90016e7c:	f8ad 301a 	strh.w	r3, [sp, #26]
90016e80:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90016e84:	4628      	mov	r0, r5
90016e86:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90016e8a:	f8ad 9008 	strh.w	r9, [sp, #8]
90016e8e:	1a9b      	subs	r3, r3, r2
90016e90:	f8ad 3014 	strh.w	r3, [sp, #20]
90016e94:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90016e98:	eba3 0808 	sub.w	r8, r3, r8
90016e9c:	682b      	ldr	r3, [r5, #0]
90016e9e:	f8ad 8016 	strh.w	r8, [sp, #22]
90016ea2:	f10d 080c 	add.w	r8, sp, #12
90016ea6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016ea8:	4641      	mov	r1, r8
90016eaa:	4798      	blx	r3
90016eac:	4b0c      	ldr	r3, [pc, #48]	@ (90016ee0 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x1a4>)
90016eae:	681b      	ldr	r3, [r3, #0]
90016eb0:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90016eb4:	b10a      	cbz	r2, 90016eba <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x17e>
90016eb6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90016eb8:	b900      	cbnz	r0, 90016ebc <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x180>
90016eba:	6898      	ldr	r0, [r3, #8]
90016ebc:	ab02      	add	r3, sp, #8
90016ebe:	9301      	str	r3, [sp, #4]
90016ec0:	ab07      	add	r3, sp, #28
90016ec2:	9300      	str	r3, [sp, #0]
90016ec4:	ab05      	add	r3, sp, #20
90016ec6:	e898 0006 	ldmia.w	r8, {r1, r2}
90016eca:	f7ee fc05 	bl	900056d8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90016ece:	3401      	adds	r4, #1
90016ed0:	e75b      	b.n	90016d8a <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x4e>
90016ed2:	e9cd 0005 	strd	r0, r0, [sp, #20]
90016ed6:	e7d3      	b.n	90016e80 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x144>
90016ed8:	b00d      	add	sp, #52	@ 0x34
90016eda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016ede:	bf00      	nop
90016ee0:	240245a0 	.word	0x240245a0

90016ee4 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE>:
90016ee4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016ee8:	790d      	ldrb	r5, [r1, #4]
90016eea:	b08b      	sub	sp, #44	@ 0x2c
90016eec:	4604      	mov	r4, r0
90016eee:	2d01      	cmp	r5, #1
90016ef0:	d108      	bne.n	90016f04 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x20>
90016ef2:	f890 30e4 	ldrb.w	r3, [r0, #228]	@ 0xe4
90016ef6:	b12b      	cbz	r3, 90016f04 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x20>
90016ef8:	2300      	movs	r3, #0
90016efa:	f884 30e4 	strb.w	r3, [r4, #228]	@ 0xe4
90016efe:	b00b      	add	sp, #44	@ 0x2c
90016f00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016f04:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90016f08:	2700      	movs	r7, #0
90016f0a:	f9b1 9008 	ldrsh.w	r9, [r1, #8]
90016f0e:	a806      	add	r0, sp, #24
90016f10:	4642      	mov	r2, r8
90016f12:	4621      	mov	r1, r4
90016f14:	464b      	mov	r3, r9
90016f16:	e9cd 7701 	strd	r7, r7, [sp, #4]
90016f1a:	f7ff feca 	bl	90016cb2 <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss>
90016f1e:	9e08      	ldr	r6, [sp, #32]
90016f20:	2e00      	cmp	r6, #0
90016f22:	d049      	beq.n	90016fb8 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0xd4>
90016f24:	2d00      	cmp	r5, #0
90016f26:	d133      	bne.n	90016f90 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0xac>
90016f28:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
90016f2c:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
90016f30:	f9bd 201a 	ldrsh.w	r2, [sp, #26]
90016f34:	4630      	mov	r0, r6
90016f36:	f7fc fdcb 	bl	90013ad0 <_ZN8touchgfx8Drawable5setXYEss>
90016f3a:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
90016f3e:	a90a      	add	r1, sp, #40	@ 0x28
90016f40:	f821 3d1c 	strh.w	r3, [r1, #-28]!
90016f44:	4630      	mov	r0, r6
90016f46:	f7ff fc30 	bl	900167aa <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90016f4a:	2301      	movs	r3, #1
90016f4c:	4622      	mov	r2, r4
90016f4e:	f884 30dd 	strb.w	r3, [r4, #221]	@ 0xdd
90016f52:	ab01      	add	r3, sp, #4
90016f54:	f852 0fbc 	ldr.w	r0, [r2, #188]!
90016f58:	6851      	ldr	r1, [r2, #4]
90016f5a:	c303      	stmia	r3!, {r0, r1}
90016f5c:	6823      	ldr	r3, [r4, #0]
90016f5e:	a901      	add	r1, sp, #4
90016f60:	4620      	mov	r0, r4
90016f62:	691b      	ldr	r3, [r3, #16]
90016f64:	4798      	blx	r3
90016f66:	1e6b      	subs	r3, r5, #1
90016f68:	2b01      	cmp	r3, #1
90016f6a:	d8c8      	bhi.n	90016efe <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x1a>
90016f6c:	4622      	mov	r2, r4
90016f6e:	ab01      	add	r3, sp, #4
90016f70:	f852 0fbc 	ldr.w	r0, [r2, #188]!
90016f74:	6851      	ldr	r1, [r2, #4]
90016f76:	c303      	stmia	r3!, {r0, r1}
90016f78:	2300      	movs	r3, #0
90016f7a:	a901      	add	r1, sp, #4
90016f7c:	4620      	mov	r0, r4
90016f7e:	f884 30dd 	strb.w	r3, [r4, #221]	@ 0xdd
90016f82:	6823      	ldr	r3, [r4, #0]
90016f84:	691b      	ldr	r3, [r3, #16]
90016f86:	4798      	blx	r3
90016f88:	2d02      	cmp	r5, #2
90016f8a:	d1b8      	bne.n	90016efe <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x1a>
90016f8c:	2301      	movs	r3, #1
90016f8e:	e7b4      	b.n	90016efa <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x16>
90016f90:	2d01      	cmp	r5, #1
90016f92:	d1e8      	bne.n	90016f66 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016f94:	6833      	ldr	r3, [r6, #0]
90016f96:	4630      	mov	r0, r6
90016f98:	68db      	ldr	r3, [r3, #12]
90016f9a:	4798      	blx	r3
90016f9c:	2800      	cmp	r0, #0
90016f9e:	d0e5      	beq.n	90016f6c <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x88>
90016fa0:	6833      	ldr	r3, [r6, #0]
90016fa2:	4630      	mov	r0, r6
90016fa4:	689b      	ldr	r3, [r3, #8]
90016fa6:	4798      	blx	r3
90016fa8:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90016faa:	2800      	cmp	r0, #0
90016fac:	d0de      	beq.n	90016f6c <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x88>
90016fae:	6803      	ldr	r3, [r0, #0]
90016fb0:	4639      	mov	r1, r7
90016fb2:	689b      	ldr	r3, [r3, #8]
90016fb4:	4798      	blx	r3
90016fb6:	e7d6      	b.n	90016f66 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016fb8:	4621      	mov	r1, r4
90016fba:	464b      	mov	r3, r9
90016fbc:	4642      	mov	r2, r8
90016fbe:	a803      	add	r0, sp, #12
90016fc0:	f7ff fe4d 	bl	90016c5e <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss>
90016fc4:	f89d 100c 	ldrb.w	r1, [sp, #12]
90016fc8:	b985      	cbnz	r5, 90016fec <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x108>
90016fca:	2900      	cmp	r1, #0
90016fcc:	d0cb      	beq.n	90016f66 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016fce:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
90016fd2:	f9bd 100e 	ldrsh.w	r1, [sp, #14]
90016fd6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90016fda:	4630      	mov	r0, r6
90016fdc:	f7fc fd78 	bl	90013ad0 <_ZN8touchgfx8Drawable5setXYEss>
90016fe0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90016fe4:	a90a      	add	r1, sp, #40	@ 0x28
90016fe6:	f821 3d28 	strh.w	r3, [r1, #-40]!
90016fea:	e7ab      	b.n	90016f44 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x60>
90016fec:	2d01      	cmp	r5, #1
90016fee:	d1ba      	bne.n	90016f66 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016ff0:	2900      	cmp	r1, #0
90016ff2:	d0b8      	beq.n	90016f66 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016ff4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016ff6:	2b00      	cmp	r3, #0
90016ff8:	d0b5      	beq.n	90016f66 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016ffa:	4620      	mov	r0, r4
90016ffc:	f7ff fe89 	bl	90016d12 <_ZNK8touchgfx8Keyboard13getCharForKeyEh>
90017000:	4607      	mov	r7, r0
90017002:	2800      	cmp	r0, #0
90017004:	d0af      	beq.n	90016f66 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90017006:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90017008:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001700a:	3b01      	subs	r3, #1
9001700c:	429a      	cmp	r2, r3
9001700e:	daaa      	bge.n	90016f66 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90017010:	f104 0864 	add.w	r8, r4, #100	@ 0x64
90017014:	4640      	mov	r0, r8
90017016:	f7eb ff09 	bl	90002e2c <_ZNK8touchgfx8Drawable17invalidateContentEv>
9001701a:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001701c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9001701e:	4640      	mov	r0, r8
90017020:	1c59      	adds	r1, r3, #1
90017022:	86e1      	strh	r1, [r4, #54]	@ 0x36
90017024:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90017028:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001702a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9001702c:	f823 6012 	strh.w	r6, [r3, r2, lsl #1]
90017030:	f7eb fefc 	bl	90002e2c <_ZNK8touchgfx8Drawable17invalidateContentEv>
90017034:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90017036:	2800      	cmp	r0, #0
90017038:	d1b9      	bne.n	90016fae <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0xca>
9001703a:	e794      	b.n	90016f66 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>

9001703c <_ZN8touchgfx8Keyboard17setBufferPositionEt>:
9001703c:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001703e:	3064      	adds	r0, #100	@ 0x64
90017040:	f003 bbdd 	b.w	9001a7fe <_ZNK8touchgfx8Drawable10invalidateEv>

90017044 <_ZN8touchgfx8Keyboard17setKeymappingListEPKNS0_14KeyMappingListE>:
90017044:	6803      	ldr	r3, [r0, #0]
90017046:	f8c0 10b4 	str.w	r1, [r0, #180]	@ 0xb4
9001704a:	695b      	ldr	r3, [r3, #20]
9001704c:	4718      	bx	r3

9001704e <_ZN8touchgfx7OutlineD1Ev>:
9001704e:	4770      	bx	lr

90017050 <_ZN8touchgfx7OutlineD0Ev>:
90017050:	b510      	push	{r4, lr}
90017052:	4604      	mov	r4, r0
90017054:	2130      	movs	r1, #48	@ 0x30
90017056:	f014 fda0 	bl	9002bb9a <_ZdlPvj>
9001705a:	4620      	mov	r0, r4
9001705c:	bd10      	pop	{r4, pc}

9001705e <_ZN8touchgfx7Outline5resetEv>:
9001705e:	b510      	push	{r4, lr}
90017060:	4604      	mov	r4, r0
90017062:	f000 fe85 	bl	90017d70 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90017066:	60e0      	str	r0, [r4, #12]
90017068:	f000 fe88 	bl	90017d7c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
9001706c:	68e3      	ldr	r3, [r4, #12]
9001706e:	08c0      	lsrs	r0, r0, #3
90017070:	2200      	movs	r2, #0
90017072:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90017076:	6123      	str	r3, [r4, #16]
90017078:	3801      	subs	r0, #1
9001707a:	60a2      	str	r2, [r4, #8]
9001707c:	6060      	str	r0, [r4, #4]
9001707e:	8019      	strh	r1, [r3, #0]
90017080:	8059      	strh	r1, [r3, #2]
90017082:	809a      	strh	r2, [r3, #4]
90017084:	80da      	strh	r2, [r3, #6]
90017086:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90017088:	f023 0301 	bic.w	r3, r3, #1
9001708c:	f043 0302 	orr.w	r3, r3, #2
90017090:	6263      	str	r3, [r4, #36]	@ 0x24
90017092:	bd10      	pop	{r4, pc}

90017094 <_ZN8touchgfx7OutlineC1Ev>:
90017094:	4b0a      	ldr	r3, [pc, #40]	@ (900170c0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90017096:	b510      	push	{r4, lr}
90017098:	6003      	str	r3, [r0, #0]
9001709a:	2300      	movs	r3, #0
9001709c:	4604      	mov	r4, r0
9001709e:	6243      	str	r3, [r0, #36]	@ 0x24
900170a0:	e9c0 3301 	strd	r3, r3, [r0, #4]
900170a4:	e9c0 3303 	strd	r3, r3, [r0, #12]
900170a8:	e9c0 3305 	strd	r3, r3, [r0, #20]
900170ac:	e9c0 3307 	strd	r3, r3, [r0, #28]
900170b0:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
900170b4:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
900170b8:	f7ff ffd1 	bl	9001705e <_ZN8touchgfx7Outline5resetEv>
900170bc:	4620      	mov	r0, r4
900170be:	bd10      	pop	{r4, pc}
900170c0:	90030524 	.word	0x90030524

900170c4 <_ZN8touchgfx7Outline10renderLineEiiii>:
900170c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900170c8:	b093      	sub	sp, #76	@ 0x4c
900170ca:	1156      	asrs	r6, r2, #5
900170cc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
900170ce:	9305      	str	r3, [sp, #20]
900170d0:	1153      	asrs	r3, r2, #5
900170d2:	f004 051f 	and.w	r5, r4, #31
900170d6:	9303      	str	r3, [sp, #12]
900170d8:	1163      	asrs	r3, r4, #5
900170da:	9504      	str	r5, [sp, #16]
900170dc:	1165      	asrs	r5, r4, #5
900170de:	9306      	str	r3, [sp, #24]
900170e0:	f002 031f 	and.w	r3, r2, #31
900170e4:	42ae      	cmp	r6, r5
900170e6:	f040 80f4 	bne.w	900172d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
900170ea:	9c04      	ldr	r4, [sp, #16]
900170ec:	9a05      	ldr	r2, [sp, #20]
900170ee:	42a3      	cmp	r3, r4
900170f0:	ea4f 1e62 	mov.w	lr, r2, asr #5
900170f4:	6902      	ldr	r2, [r0, #16]
900170f6:	d125      	bne.n	90017144 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
900170f8:	f9b2 3000 	ldrsh.w	r3, [r2]
900170fc:	459e      	cmp	lr, r3
900170fe:	d103      	bne.n	90017108 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90017100:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90017104:	429e      	cmp	r6, r3
90017106:	d035      	beq.n	90017174 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90017108:	88d1      	ldrh	r1, [r2, #6]
9001710a:	8893      	ldrh	r3, [r2, #4]
9001710c:	430b      	orrs	r3, r1
9001710e:	d010      	beq.n	90017132 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90017110:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90017114:	2b00      	cmp	r3, #0
90017116:	db0c      	blt.n	90017132 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90017118:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9001711a:	428b      	cmp	r3, r1
9001711c:	da09      	bge.n	90017132 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
9001711e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90017122:	428b      	cmp	r3, r1
90017124:	f103 0301 	add.w	r3, r3, #1
90017128:	bf38      	it	cc
9001712a:	3208      	addcc	r2, #8
9001712c:	6083      	str	r3, [r0, #8]
9001712e:	bf38      	it	cc
90017130:	6102      	strcc	r2, [r0, #16]
90017132:	6903      	ldr	r3, [r0, #16]
90017134:	9a03      	ldr	r2, [sp, #12]
90017136:	f8a3 e000 	strh.w	lr, [r3]
9001713a:	805a      	strh	r2, [r3, #2]
9001713c:	2200      	movs	r2, #0
9001713e:	809a      	strh	r2, [r3, #4]
90017140:	80da      	strh	r2, [r3, #6]
90017142:	e017      	b.n	90017174 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90017144:	9c05      	ldr	r4, [sp, #20]
90017146:	114e      	asrs	r6, r1, #5
90017148:	f001 0c1f 	and.w	ip, r1, #31
9001714c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90017150:	f004 041f 	and.w	r4, r4, #31
90017154:	4576      	cmp	r6, lr
90017156:	f8b2 a006 	ldrh.w	sl, [r2, #6]
9001715a:	9402      	str	r4, [sp, #8]
9001715c:	9c04      	ldr	r4, [sp, #16]
9001715e:	eba4 0403 	sub.w	r4, r4, r3
90017162:	d10a      	bne.n	9001717a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90017164:	9b02      	ldr	r3, [sp, #8]
90017166:	44a0      	add	r8, r4
90017168:	449c      	add	ip, r3
9001716a:	f8a2 8004 	strh.w	r8, [r2, #4]
9001716e:	fb04 a40c 	mla	r4, r4, ip, sl
90017172:	80d4      	strh	r4, [r2, #6]
90017174:	b013      	add	sp, #76	@ 0x4c
90017176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001717a:	9d05      	ldr	r5, [sp, #20]
9001717c:	1a69      	subs	r1, r5, r1
9001717e:	bf51      	iteee	pl
90017180:	f1cc 0520 	rsbpl	r5, ip, #32
90017184:	fb04 f40c 	mulmi.w	r4, r4, ip
90017188:	4249      	negmi	r1, r1
9001718a:	2500      	movmi	r5, #0
9001718c:	bf5d      	ittte	pl
9001718e:	436c      	mulpl	r4, r5
90017190:	2520      	movpl	r5, #32
90017192:	f04f 0901 	movpl.w	r9, #1
90017196:	f04f 39ff 	movmi.w	r9, #4294967295
9001719a:	9501      	str	r5, [sp, #4]
9001719c:	9f01      	ldr	r7, [sp, #4]
9001719e:	444e      	add	r6, r9
900171a0:	fb94 f5f1 	sdiv	r5, r4, r1
900171a4:	fb01 4415 	mls	r4, r1, r5, r4
900171a8:	44bc      	add	ip, r7
900171aa:	2c00      	cmp	r4, #0
900171ac:	bfbc      	itt	lt
900171ae:	f105 35ff 	addlt.w	r5, r5, #4294967295
900171b2:	1864      	addlt	r4, r4, r1
900171b4:	44a8      	add	r8, r5
900171b6:	fb05 ac0c 	mla	ip, r5, ip, sl
900171ba:	f8a2 8004 	strh.w	r8, [r2, #4]
900171be:	f8a2 c006 	strh.w	ip, [r2, #6]
900171c2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900171c6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
900171ca:	f8bc 2004 	ldrh.w	r2, [ip, #4]
900171ce:	ea58 0202 	orrs.w	r2, r8, r2
900171d2:	d011      	beq.n	900171f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900171d4:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900171d8:	f1b8 0f00 	cmp.w	r8, #0
900171dc:	db0c      	blt.n	900171f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900171de:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
900171e0:	4590      	cmp	r8, r2
900171e2:	da09      	bge.n	900171f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900171e4:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
900171e8:	4590      	cmp	r8, r2
900171ea:	bf3c      	itt	cc
900171ec:	f10c 0208 	addcc.w	r2, ip, #8
900171f0:	6102      	strcc	r2, [r0, #16]
900171f2:	f108 0201 	add.w	r2, r8, #1
900171f6:	6082      	str	r2, [r0, #8]
900171f8:	f8d0 c010 	ldr.w	ip, [r0, #16]
900171fc:	2700      	movs	r7, #0
900171fe:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90017202:	45b6      	cmp	lr, r6
90017204:	f8ac 6000 	strh.w	r6, [ip]
90017208:	442b      	add	r3, r5
9001720a:	f8ac 2002 	strh.w	r2, [ip, #2]
9001720e:	f8ac 7004 	strh.w	r7, [ip, #4]
90017212:	f8ac 7006 	strh.w	r7, [ip, #6]
90017216:	d04b      	beq.n	900172b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90017218:	9f04      	ldr	r7, [sp, #16]
9001721a:	1a64      	subs	r4, r4, r1
9001721c:	f04f 0a00 	mov.w	sl, #0
90017220:	1aff      	subs	r7, r7, r3
90017222:	443d      	add	r5, r7
90017224:	016d      	lsls	r5, r5, #5
90017226:	fb95 f8f1 	sdiv	r8, r5, r1
9001722a:	fb01 5518 	mls	r5, r1, r8, r5
9001722e:	2d00      	cmp	r5, #0
90017230:	bfbc      	itt	lt
90017232:	f108 38ff 	addlt.w	r8, r8, #4294967295
90017236:	186d      	addlt	r5, r5, r1
90017238:	f108 0701 	add.w	r7, r8, #1
9001723c:	9703      	str	r7, [sp, #12]
9001723e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017242:	1964      	adds	r4, r4, r5
90017244:	444e      	add	r6, r9
90017246:	bf54      	ite	pl
90017248:	9f03      	ldrpl	r7, [sp, #12]
9001724a:	4647      	movmi	r7, r8
9001724c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90017250:	bf58      	it	pl
90017252:	1a64      	subpl	r4, r4, r1
90017254:	443b      	add	r3, r7
90017256:	44bb      	add	fp, r7
90017258:	f8ac b004 	strh.w	fp, [ip, #4]
9001725c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90017260:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90017264:	f8ac b006 	strh.w	fp, [ip, #6]
90017268:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001726c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90017270:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90017274:	ea5b 0707 	orrs.w	r7, fp, r7
90017278:	d011      	beq.n	9001729e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001727a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001727e:	f1bb 0f00 	cmp.w	fp, #0
90017282:	db0c      	blt.n	9001729e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90017284:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90017286:	45bb      	cmp	fp, r7
90017288:	da09      	bge.n	9001729e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001728a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001728e:	45bb      	cmp	fp, r7
90017290:	bf3c      	itt	cc
90017292:	f10c 0708 	addcc.w	r7, ip, #8
90017296:	6107      	strcc	r7, [r0, #16]
90017298:	f10b 0701 	add.w	r7, fp, #1
9001729c:	6087      	str	r7, [r0, #8]
9001729e:	6907      	ldr	r7, [r0, #16]
900172a0:	45b6      	cmp	lr, r6
900172a2:	803e      	strh	r6, [r7, #0]
900172a4:	807a      	strh	r2, [r7, #2]
900172a6:	f8a7 a004 	strh.w	sl, [r7, #4]
900172aa:	f8a7 a006 	strh.w	sl, [r7, #6]
900172ae:	d1c6      	bne.n	9001723e <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
900172b0:	9a04      	ldr	r2, [sp, #16]
900172b2:	1ad3      	subs	r3, r2, r3
900172b4:	6902      	ldr	r2, [r0, #16]
900172b6:	8891      	ldrh	r1, [r2, #4]
900172b8:	88d6      	ldrh	r6, [r2, #6]
900172ba:	4419      	add	r1, r3
900172bc:	8091      	strh	r1, [r2, #4]
900172be:	9902      	ldr	r1, [sp, #8]
900172c0:	f101 0c20 	add.w	ip, r1, #32
900172c4:	9901      	ldr	r1, [sp, #4]
900172c6:	ebac 0c01 	sub.w	ip, ip, r1
900172ca:	fb03 630c 	mla	r3, r3, ip, r6
900172ce:	80d3      	strh	r3, [r2, #6]
900172d0:	e750      	b.n	90017174 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900172d2:	9d05      	ldr	r5, [sp, #20]
900172d4:	1aa2      	subs	r2, r4, r2
900172d6:	eba5 0501 	sub.w	r5, r5, r1
900172da:	9202      	str	r2, [sp, #8]
900172dc:	9508      	str	r5, [sp, #32]
900172de:	f140 8128 	bpl.w	90017532 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
900172e2:	9a03      	ldr	r2, [sp, #12]
900172e4:	2a00      	cmp	r2, #0
900172e6:	f6ff af45 	blt.w	90017174 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900172ea:	9a02      	ldr	r2, [sp, #8]
900172ec:	f04f 34ff 	mov.w	r4, #4294967295
900172f0:	4252      	negs	r2, r2
900172f2:	940b      	str	r4, [sp, #44]	@ 0x2c
900172f4:	2400      	movs	r4, #0
900172f6:	9202      	str	r2, [sp, #8]
900172f8:	9a06      	ldr	r2, [sp, #24]
900172fa:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
900172fe:	9206      	str	r2, [sp, #24]
90017300:	462a      	mov	r2, r5
90017302:	435a      	muls	r2, r3
90017304:	9401      	str	r4, [sp, #4]
90017306:	9c02      	ldr	r4, [sp, #8]
90017308:	9d02      	ldr	r5, [sp, #8]
9001730a:	fb92 f4f4 	sdiv	r4, r2, r4
9001730e:	fb05 2214 	mls	r2, r5, r4, r2
90017312:	2a00      	cmp	r2, #0
90017314:	9207      	str	r2, [sp, #28]
90017316:	bfbc      	itt	lt
90017318:	1952      	addlt	r2, r2, r5
9001731a:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001731e:	6905      	ldr	r5, [r0, #16]
90017320:	bfb8      	it	lt
90017322:	9207      	strlt	r2, [sp, #28]
90017324:	eb04 0901 	add.w	r9, r4, r1
90017328:	9a01      	ldr	r2, [sp, #4]
9001732a:	ea4f 1669 	mov.w	r6, r9, asr #5
9001732e:	429a      	cmp	r2, r3
90017330:	f040 8111 	bne.w	90017556 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90017334:	f9b5 3000 	ldrsh.w	r3, [r5]
90017338:	429e      	cmp	r6, r3
9001733a:	d104      	bne.n	90017346 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
9001733c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90017340:	9a03      	ldr	r2, [sp, #12]
90017342:	429a      	cmp	r2, r3
90017344:	d01b      	beq.n	9001737e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90017346:	88ea      	ldrh	r2, [r5, #6]
90017348:	88ab      	ldrh	r3, [r5, #4]
9001734a:	4313      	orrs	r3, r2
9001734c:	d010      	beq.n	90017370 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001734e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017352:	2a00      	cmp	r2, #0
90017354:	db0c      	blt.n	90017370 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90017356:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90017358:	429a      	cmp	r2, r3
9001735a:	da09      	bge.n	90017370 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001735c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90017360:	429a      	cmp	r2, r3
90017362:	f102 0201 	add.w	r2, r2, #1
90017366:	bf38      	it	cc
90017368:	3508      	addcc	r5, #8
9001736a:	6082      	str	r2, [r0, #8]
9001736c:	bf38      	it	cc
9001736e:	6105      	strcc	r5, [r0, #16]
90017370:	6903      	ldr	r3, [r0, #16]
90017372:	9a03      	ldr	r2, [sp, #12]
90017374:	801e      	strh	r6, [r3, #0]
90017376:	805a      	strh	r2, [r3, #2]
90017378:	2200      	movs	r2, #0
9001737a:	809a      	strh	r2, [r3, #4]
9001737c:	80da      	strh	r2, [r3, #6]
9001737e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90017380:	9a03      	ldr	r2, [sp, #12]
90017382:	6901      	ldr	r1, [r0, #16]
90017384:	441a      	add	r2, r3
90017386:	f9b1 3000 	ldrsh.w	r3, [r1]
9001738a:	42b3      	cmp	r3, r6
9001738c:	d103      	bne.n	90017396 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
9001738e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90017392:	429a      	cmp	r2, r3
90017394:	d01a      	beq.n	900173cc <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90017396:	88cc      	ldrh	r4, [r1, #6]
90017398:	888b      	ldrh	r3, [r1, #4]
9001739a:	4323      	orrs	r3, r4
9001739c:	d010      	beq.n	900173c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001739e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900173a2:	2c00      	cmp	r4, #0
900173a4:	db0c      	blt.n	900173c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900173a6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900173a8:	429c      	cmp	r4, r3
900173aa:	da09      	bge.n	900173c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900173ac:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900173b0:	429c      	cmp	r4, r3
900173b2:	f104 0401 	add.w	r4, r4, #1
900173b6:	bf38      	it	cc
900173b8:	3108      	addcc	r1, #8
900173ba:	6084      	str	r4, [r0, #8]
900173bc:	bf38      	it	cc
900173be:	6101      	strcc	r1, [r0, #16]
900173c0:	6903      	ldr	r3, [r0, #16]
900173c2:	2100      	movs	r1, #0
900173c4:	801e      	strh	r6, [r3, #0]
900173c6:	805a      	strh	r2, [r3, #2]
900173c8:	8099      	strh	r1, [r3, #4]
900173ca:	80d9      	strh	r1, [r3, #6]
900173cc:	9b06      	ldr	r3, [sp, #24]
900173ce:	4293      	cmp	r3, r2
900173d0:	f000 8082 	beq.w	900174d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
900173d4:	9b08      	ldr	r3, [sp, #32]
900173d6:	9902      	ldr	r1, [sp, #8]
900173d8:	015b      	lsls	r3, r3, #5
900173da:	9c02      	ldr	r4, [sp, #8]
900173dc:	fb93 f1f1 	sdiv	r1, r3, r1
900173e0:	fb04 3311 	mls	r3, r4, r1, r3
900173e4:	9103      	str	r1, [sp, #12]
900173e6:	2b00      	cmp	r3, #0
900173e8:	9308      	str	r3, [sp, #32]
900173ea:	da04      	bge.n	900173f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
900173ec:	1e4b      	subs	r3, r1, #1
900173ee:	9303      	str	r3, [sp, #12]
900173f0:	9b08      	ldr	r3, [sp, #32]
900173f2:	4423      	add	r3, r4
900173f4:	9308      	str	r3, [sp, #32]
900173f6:	9b07      	ldr	r3, [sp, #28]
900173f8:	464f      	mov	r7, r9
900173fa:	9902      	ldr	r1, [sp, #8]
900173fc:	2600      	movs	r6, #0
900173fe:	1a5b      	subs	r3, r3, r1
90017400:	9307      	str	r3, [sp, #28]
90017402:	9b01      	ldr	r3, [sp, #4]
90017404:	f1c3 0320 	rsb	r3, r3, #32
90017408:	930e      	str	r3, [sp, #56]	@ 0x38
9001740a:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001740c:	9b01      	ldr	r3, [sp, #4]
9001740e:	1a5b      	subs	r3, r3, r1
90017410:	930a      	str	r3, [sp, #40]	@ 0x28
90017412:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90017416:	185b      	adds	r3, r3, r1
90017418:	bf58      	it	pl
9001741a:	9902      	ldrpl	r1, [sp, #8]
9001741c:	9307      	str	r3, [sp, #28]
9001741e:	bf57      	itett	pl
90017420:	1a5b      	subpl	r3, r3, r1
90017422:	9903      	ldrmi	r1, [sp, #12]
90017424:	9307      	strpl	r3, [sp, #28]
90017426:	9b03      	ldrpl	r3, [sp, #12]
90017428:	bf58      	it	pl
9001742a:	1c59      	addpl	r1, r3, #1
9001742c:	2a00      	cmp	r2, #0
9001742e:	4489      	add	r9, r1
90017430:	ea4f 1a69 	mov.w	sl, r9, asr #5
90017434:	db2e      	blt.n	90017494 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90017436:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90017438:	4293      	cmp	r3, r2
9001743a:	dd2b      	ble.n	90017494 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001743c:	9c01      	ldr	r4, [sp, #4]
9001743e:	6905      	ldr	r5, [r0, #16]
90017440:	46a0      	mov	r8, r4
90017442:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90017444:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90017448:	45a0      	cmp	r8, r4
9001744a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001744e:	f040 814c 	bne.w	900176ea <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90017452:	f9b5 1000 	ldrsh.w	r1, [r5]
90017456:	4551      	cmp	r1, sl
90017458:	d103      	bne.n	90017462 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
9001745a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001745e:	4291      	cmp	r1, r2
90017460:	d018      	beq.n	90017494 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90017462:	ea5c 010e 	orrs.w	r1, ip, lr
90017466:	d00f      	beq.n	90017488 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90017468:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001746c:	2900      	cmp	r1, #0
9001746e:	db0b      	blt.n	90017488 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90017470:	428b      	cmp	r3, r1
90017472:	dd09      	ble.n	90017488 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90017474:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90017478:	4299      	cmp	r1, r3
9001747a:	f101 0101 	add.w	r1, r1, #1
9001747e:	bf38      	it	cc
90017480:	3508      	addcc	r5, #8
90017482:	6081      	str	r1, [r0, #8]
90017484:	bf38      	it	cc
90017486:	6105      	strcc	r5, [r0, #16]
90017488:	6903      	ldr	r3, [r0, #16]
9001748a:	f8a3 a000 	strh.w	sl, [r3]
9001748e:	805a      	strh	r2, [r3, #2]
90017490:	809e      	strh	r6, [r3, #4]
90017492:	80de      	strh	r6, [r3, #6]
90017494:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90017496:	6901      	ldr	r1, [r0, #16]
90017498:	441a      	add	r2, r3
9001749a:	88cc      	ldrh	r4, [r1, #6]
9001749c:	888b      	ldrh	r3, [r1, #4]
9001749e:	4323      	orrs	r3, r4
900174a0:	d010      	beq.n	900174c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900174a2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900174a6:	2c00      	cmp	r4, #0
900174a8:	db0c      	blt.n	900174c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900174aa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900174ac:	429c      	cmp	r4, r3
900174ae:	da09      	bge.n	900174c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
900174b0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900174b4:	429c      	cmp	r4, r3
900174b6:	f104 0401 	add.w	r4, r4, #1
900174ba:	bf38      	it	cc
900174bc:	3108      	addcc	r1, #8
900174be:	6084      	str	r4, [r0, #8]
900174c0:	bf38      	it	cc
900174c2:	6101      	strcc	r1, [r0, #16]
900174c4:	6903      	ldr	r3, [r0, #16]
900174c6:	464f      	mov	r7, r9
900174c8:	f8a3 a000 	strh.w	sl, [r3]
900174cc:	805a      	strh	r2, [r3, #2]
900174ce:	809e      	strh	r6, [r3, #4]
900174d0:	80de      	strh	r6, [r3, #6]
900174d2:	9b06      	ldr	r3, [sp, #24]
900174d4:	4293      	cmp	r3, r2
900174d6:	d19c      	bne.n	90017412 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
900174d8:	9b01      	ldr	r3, [sp, #4]
900174da:	6907      	ldr	r7, [r0, #16]
900174dc:	f1c3 0620 	rsb	r6, r3, #32
900174e0:	9b05      	ldr	r3, [sp, #20]
900174e2:	ea4f 1e63 	mov.w	lr, r3, asr #5
900174e6:	9b04      	ldr	r3, [sp, #16]
900174e8:	429e      	cmp	r6, r3
900174ea:	f040 81c7 	bne.w	9001787c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900174ee:	f9b7 3000 	ldrsh.w	r3, [r7]
900174f2:	459e      	cmp	lr, r3
900174f4:	d104      	bne.n	90017500 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900174f6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900174fa:	429a      	cmp	r2, r3
900174fc:	f43f ae3a 	beq.w	90017174 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90017500:	88f9      	ldrh	r1, [r7, #6]
90017502:	88bb      	ldrh	r3, [r7, #4]
90017504:	430b      	orrs	r3, r1
90017506:	d010      	beq.n	9001752a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90017508:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
9001750c:	2b00      	cmp	r3, #0
9001750e:	db0c      	blt.n	9001752a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90017510:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90017512:	428b      	cmp	r3, r1
90017514:	da09      	bge.n	9001752a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90017516:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
9001751a:	428b      	cmp	r3, r1
9001751c:	f103 0301 	add.w	r3, r3, #1
90017520:	bf38      	it	cc
90017522:	3708      	addcc	r7, #8
90017524:	6083      	str	r3, [r0, #8]
90017526:	bf38      	it	cc
90017528:	6107      	strcc	r7, [r0, #16]
9001752a:	6903      	ldr	r3, [r0, #16]
9001752c:	f8a3 e000 	strh.w	lr, [r3]
90017530:	e603      	b.n	9001713a <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90017532:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90017534:	9c03      	ldr	r4, [sp, #12]
90017536:	42a2      	cmp	r2, r4
90017538:	f6ff ae1c 	blt.w	90017174 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001753c:	9c06      	ldr	r4, [sp, #24]
9001753e:	42a2      	cmp	r2, r4
90017540:	9c08      	ldr	r4, [sp, #32]
90017542:	bfbc      	itt	lt
90017544:	3201      	addlt	r2, #1
90017546:	9206      	strlt	r2, [sp, #24]
90017548:	f1c3 0220 	rsb	r2, r3, #32
9001754c:	4362      	muls	r2, r4
9001754e:	2401      	movs	r4, #1
90017550:	940b      	str	r4, [sp, #44]	@ 0x2c
90017552:	2420      	movs	r4, #32
90017554:	e6d6      	b.n	90017304 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90017556:	ea4f 1861 	mov.w	r8, r1, asr #5
9001755a:	f009 021f 	and.w	r2, r9, #31
9001755e:	f001 011f 	and.w	r1, r1, #31
90017562:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90017566:	920c      	str	r2, [sp, #48]	@ 0x30
90017568:	45b0      	cmp	r8, r6
9001756a:	9a01      	ldr	r2, [sp, #4]
9001756c:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90017570:	eba2 0203 	sub.w	r2, r2, r3
90017574:	d108      	bne.n	90017588 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90017576:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90017578:	4496      	add	lr, r2
9001757a:	4419      	add	r1, r3
9001757c:	f8a5 e004 	strh.w	lr, [r5, #4]
90017580:	fb02 a101 	mla	r1, r2, r1, sl
90017584:	80e9      	strh	r1, [r5, #6]
90017586:	e6fa      	b.n	9001737e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90017588:	2c00      	cmp	r4, #0
9001758a:	f2c0 80a7 	blt.w	900176dc <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
9001758e:	2701      	movs	r7, #1
90017590:	f1c1 0c20 	rsb	ip, r1, #32
90017594:	970a      	str	r7, [sp, #40]	@ 0x28
90017596:	2720      	movs	r7, #32
90017598:	fb02 f20c 	mul.w	r2, r2, ip
9001759c:	9709      	str	r7, [sp, #36]	@ 0x24
9001759e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900175a0:	fb92 fcf4 	sdiv	ip, r2, r4
900175a4:	fb04 221c 	mls	r2, r4, ip, r2
900175a8:	4439      	add	r1, r7
900175aa:	2a00      	cmp	r2, #0
900175ac:	bfbc      	itt	lt
900175ae:	f10c 3cff 	addlt.w	ip, ip, #4294967295
900175b2:	1912      	addlt	r2, r2, r4
900175b4:	fb0c a101 	mla	r1, ip, r1, sl
900175b8:	44e6      	add	lr, ip
900175ba:	80e9      	strh	r1, [r5, #6]
900175bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
900175be:	f8a5 e004 	strh.w	lr, [r5, #4]
900175c2:	eb08 0501 	add.w	r5, r8, r1
900175c6:	6901      	ldr	r1, [r0, #16]
900175c8:	f8b1 8006 	ldrh.w	r8, [r1, #6]
900175cc:	f8b1 e004 	ldrh.w	lr, [r1, #4]
900175d0:	ea58 070e 	orrs.w	r7, r8, lr
900175d4:	d010      	beq.n	900175f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900175d6:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
900175da:	f1be 0f00 	cmp.w	lr, #0
900175de:	db0b      	blt.n	900175f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900175e0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900175e2:	45be      	cmp	lr, r7
900175e4:	da08      	bge.n	900175f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900175e6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900175ea:	45be      	cmp	lr, r7
900175ec:	bf3c      	itt	cc
900175ee:	3108      	addcc	r1, #8
900175f0:	6101      	strcc	r1, [r0, #16]
900175f2:	f10e 0101 	add.w	r1, lr, #1
900175f6:	6081      	str	r1, [r0, #8]
900175f8:	6901      	ldr	r1, [r0, #16]
900175fa:	f04f 0e00 	mov.w	lr, #0
900175fe:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90017602:	42ae      	cmp	r6, r5
90017604:	800d      	strh	r5, [r1, #0]
90017606:	4463      	add	r3, ip
90017608:	f8a1 8002 	strh.w	r8, [r1, #2]
9001760c:	f8a1 e004 	strh.w	lr, [r1, #4]
90017610:	f8a1 e006 	strh.w	lr, [r1, #6]
90017614:	d053      	beq.n	900176be <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90017616:	9901      	ldr	r1, [sp, #4]
90017618:	1b12      	subs	r2, r2, r4
9001761a:	1ac9      	subs	r1, r1, r3
9001761c:	4461      	add	r1, ip
9001761e:	0149      	lsls	r1, r1, #5
90017620:	fb91 fef4 	sdiv	lr, r1, r4
90017624:	fb04 111e 	mls	r1, r4, lr, r1
90017628:	2900      	cmp	r1, #0
9001762a:	bfbc      	itt	lt
9001762c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90017630:	1909      	addlt	r1, r1, r4
90017632:	f10e 0701 	add.w	r7, lr, #1
90017636:	970d      	str	r7, [sp, #52]	@ 0x34
90017638:	f8d0 a010 	ldr.w	sl, [r0, #16]
9001763c:	1852      	adds	r2, r2, r1
9001763e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90017640:	bf54      	ite	pl
90017642:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90017646:	46f4      	movmi	ip, lr
90017648:	f8ba b004 	ldrh.w	fp, [sl, #4]
9001764c:	bf58      	it	pl
9001764e:	1b12      	subpl	r2, r2, r4
90017650:	4463      	add	r3, ip
90017652:	443d      	add	r5, r7
90017654:	44e3      	add	fp, ip
90017656:	f8aa b004 	strh.w	fp, [sl, #4]
9001765a:	f8ba b006 	ldrh.w	fp, [sl, #6]
9001765e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90017662:	f8aa b006 	strh.w	fp, [sl, #6]
90017666:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001766a:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001766e:	f8bc a004 	ldrh.w	sl, [ip, #4]
90017672:	ea5b 070a 	orrs.w	r7, fp, sl
90017676:	d014      	beq.n	900176a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90017678:	f9bc a002 	ldrsh.w	sl, [ip, #2]
9001767c:	f1ba 0f00 	cmp.w	sl, #0
90017680:	db0f      	blt.n	900176a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90017682:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90017684:	45ba      	cmp	sl, r7
90017686:	da0c      	bge.n	900176a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90017688:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
9001768c:	45ba      	cmp	sl, r7
9001768e:	f10a 0a01 	add.w	sl, sl, #1
90017692:	bf38      	it	cc
90017694:	f10c 0c08 	addcc.w	ip, ip, #8
90017698:	f8c0 a008 	str.w	sl, [r0, #8]
9001769c:	bf38      	it	cc
9001769e:	f8c0 c010 	strcc.w	ip, [r0, #16]
900176a2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900176a6:	f04f 0700 	mov.w	r7, #0
900176aa:	42ae      	cmp	r6, r5
900176ac:	f8ac 5000 	strh.w	r5, [ip]
900176b0:	f8ac 8002 	strh.w	r8, [ip, #2]
900176b4:	f8ac 7004 	strh.w	r7, [ip, #4]
900176b8:	f8ac 7006 	strh.w	r7, [ip, #6]
900176bc:	d1bc      	bne.n	90017638 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
900176be:	6904      	ldr	r4, [r0, #16]
900176c0:	9a01      	ldr	r2, [sp, #4]
900176c2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900176c4:	1ad3      	subs	r3, r2, r3
900176c6:	88a2      	ldrh	r2, [r4, #4]
900176c8:	3120      	adds	r1, #32
900176ca:	441a      	add	r2, r3
900176cc:	80a2      	strh	r2, [r4, #4]
900176ce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900176d0:	1a89      	subs	r1, r1, r2
900176d2:	88e2      	ldrh	r2, [r4, #6]
900176d4:	fb03 2301 	mla	r3, r3, r1, r2
900176d8:	80e3      	strh	r3, [r4, #6]
900176da:	e650      	b.n	9001737e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
900176dc:	f04f 37ff 	mov.w	r7, #4294967295
900176e0:	434a      	muls	r2, r1
900176e2:	4264      	negs	r4, r4
900176e4:	970a      	str	r7, [sp, #40]	@ 0x28
900176e6:	2700      	movs	r7, #0
900176e8:	e758      	b.n	9001759c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900176ea:	ea4f 1867 	mov.w	r8, r7, asr #5
900176ee:	f009 031f 	and.w	r3, r9, #31
900176f2:	f007 071f 	and.w	r7, r7, #31
900176f6:	fa1f fc8c 	uxth.w	ip, ip
900176fa:	45d0      	cmp	r8, sl
900176fc:	930f      	str	r3, [sp, #60]	@ 0x3c
900176fe:	fa1f fe8e 	uxth.w	lr, lr
90017702:	d10a      	bne.n	9001771a <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90017704:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90017706:	449c      	add	ip, r3
90017708:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001770a:	441f      	add	r7, r3
9001770c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001770e:	f8a5 c004 	strh.w	ip, [r5, #4]
90017712:	fb03 e707 	mla	r7, r3, r7, lr
90017716:	80ef      	strh	r7, [r5, #6]
90017718:	e6bc      	b.n	90017494 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001771a:	2900      	cmp	r1, #0
9001771c:	f2c0 80a6 	blt.w	9001786c <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90017720:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90017722:	f1c7 0320 	rsb	r3, r7, #32
90017726:	4363      	muls	r3, r4
90017728:	2401      	movs	r4, #1
9001772a:	940d      	str	r4, [sp, #52]	@ 0x34
9001772c:	2420      	movs	r4, #32
9001772e:	940c      	str	r4, [sp, #48]	@ 0x30
90017730:	fb93 f4f1 	sdiv	r4, r3, r1
90017734:	fb01 3b14 	mls	fp, r1, r4, r3
90017738:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001773a:	f1bb 0f00 	cmp.w	fp, #0
9001773e:	441f      	add	r7, r3
90017740:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90017742:	bfbc      	itt	lt
90017744:	f104 34ff 	addlt.w	r4, r4, #4294967295
90017748:	448b      	addlt	fp, r1
9001774a:	fb04 e707 	mla	r7, r4, r7, lr
9001774e:	44a4      	add	ip, r4
90017750:	80ef      	strh	r7, [r5, #6]
90017752:	f8a5 c004 	strh.w	ip, [r5, #4]
90017756:	eb08 0503 	add.w	r5, r8, r3
9001775a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001775e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90017762:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90017766:	ea5e 0307 	orrs.w	r3, lr, r7
9001776a:	d011      	beq.n	90017790 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001776c:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90017770:	f1be 0f00 	cmp.w	lr, #0
90017774:	db0c      	blt.n	90017790 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90017776:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90017778:	45be      	cmp	lr, r7
9001777a:	da09      	bge.n	90017790 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001777c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90017780:	45be      	cmp	lr, r7
90017782:	bf3c      	itt	cc
90017784:	f10c 0708 	addcc.w	r7, ip, #8
90017788:	6107      	strcc	r7, [r0, #16]
9001778a:	f10e 0701 	add.w	r7, lr, #1
9001778e:	6087      	str	r7, [r0, #8]
90017790:	6907      	ldr	r7, [r0, #16]
90017792:	b213      	sxth	r3, r2
90017794:	4555      	cmp	r5, sl
90017796:	9310      	str	r3, [sp, #64]	@ 0x40
90017798:	807b      	strh	r3, [r7, #2]
9001779a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001779c:	803d      	strh	r5, [r7, #0]
9001779e:	80be      	strh	r6, [r7, #4]
900177a0:	eb04 0c03 	add.w	ip, r4, r3
900177a4:	80fe      	strh	r6, [r7, #6]
900177a6:	d050      	beq.n	9001784a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
900177a8:	9b01      	ldr	r3, [sp, #4]
900177aa:	eba3 070c 	sub.w	r7, r3, ip
900177ae:	ebab 0301 	sub.w	r3, fp, r1
900177b2:	443c      	add	r4, r7
900177b4:	9309      	str	r3, [sp, #36]	@ 0x24
900177b6:	0164      	lsls	r4, r4, #5
900177b8:	fb94 f8f1 	sdiv	r8, r4, r1
900177bc:	fb01 4418 	mls	r4, r1, r8, r4
900177c0:	2c00      	cmp	r4, #0
900177c2:	bfbc      	itt	lt
900177c4:	f108 38ff 	addlt.w	r8, r8, #4294967295
900177c8:	1864      	addlt	r4, r4, r1
900177ca:	f108 0701 	add.w	r7, r8, #1
900177ce:	9711      	str	r7, [sp, #68]	@ 0x44
900177d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900177d2:	f8d0 e010 	ldr.w	lr, [r0, #16]
900177d6:	191b      	adds	r3, r3, r4
900177d8:	f8be b004 	ldrh.w	fp, [lr, #4]
900177dc:	bf54      	ite	pl
900177de:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
900177e0:	4647      	movmi	r7, r8
900177e2:	9309      	str	r3, [sp, #36]	@ 0x24
900177e4:	bf58      	it	pl
900177e6:	1a5b      	subpl	r3, r3, r1
900177e8:	44bb      	add	fp, r7
900177ea:	44bc      	add	ip, r7
900177ec:	bf58      	it	pl
900177ee:	9309      	strpl	r3, [sp, #36]	@ 0x24
900177f0:	f8ae b004 	strh.w	fp, [lr, #4]
900177f4:	f8be b006 	ldrh.w	fp, [lr, #6]
900177f8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900177fc:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
900177fe:	f8ae b006 	strh.w	fp, [lr, #6]
90017802:	443d      	add	r5, r7
90017804:	f8d0 e010 	ldr.w	lr, [r0, #16]
90017808:	f8be b006 	ldrh.w	fp, [lr, #6]
9001780c:	f8be 7004 	ldrh.w	r7, [lr, #4]
90017810:	ea5b 0307 	orrs.w	r3, fp, r7
90017814:	d011      	beq.n	9001783a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90017816:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001781a:	f1bb 0f00 	cmp.w	fp, #0
9001781e:	db0c      	blt.n	9001783a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90017820:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90017822:	45bb      	cmp	fp, r7
90017824:	da09      	bge.n	9001783a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90017826:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001782a:	45bb      	cmp	fp, r7
9001782c:	bf3c      	itt	cc
9001782e:	f10e 0708 	addcc.w	r7, lr, #8
90017832:	6107      	strcc	r7, [r0, #16]
90017834:	f10b 0701 	add.w	r7, fp, #1
90017838:	6087      	str	r7, [r0, #8]
9001783a:	6907      	ldr	r7, [r0, #16]
9001783c:	4555      	cmp	r5, sl
9001783e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90017840:	803d      	strh	r5, [r7, #0]
90017842:	807b      	strh	r3, [r7, #2]
90017844:	80be      	strh	r6, [r7, #4]
90017846:	80fe      	strh	r6, [r7, #6]
90017848:	d1c2      	bne.n	900177d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001784a:	9b01      	ldr	r3, [sp, #4]
9001784c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001784e:	eba3 0c0c 	sub.w	ip, r3, ip
90017852:	6903      	ldr	r3, [r0, #16]
90017854:	3720      	adds	r7, #32
90017856:	8899      	ldrh	r1, [r3, #4]
90017858:	4461      	add	r1, ip
9001785a:	8099      	strh	r1, [r3, #4]
9001785c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001785e:	1a7f      	subs	r7, r7, r1
90017860:	88d9      	ldrh	r1, [r3, #6]
90017862:	fb0c 1c07 	mla	ip, ip, r7, r1
90017866:	f8a3 c006 	strh.w	ip, [r3, #6]
9001786a:	e613      	b.n	90017494 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001786c:	f04f 34ff 	mov.w	r4, #4294967295
90017870:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90017872:	4249      	negs	r1, r1
90017874:	940d      	str	r4, [sp, #52]	@ 0x34
90017876:	2400      	movs	r4, #0
90017878:	437b      	muls	r3, r7
9001787a:	e758      	b.n	9001772e <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
9001787c:	9905      	ldr	r1, [sp, #20]
9001787e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90017882:	f009 0c1f 	and.w	ip, r9, #31
90017886:	f8b7 8004 	ldrh.w	r8, [r7, #4]
9001788a:	f001 011f 	and.w	r1, r1, #31
9001788e:	45f3      	cmp	fp, lr
90017890:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90017894:	9102      	str	r1, [sp, #8]
90017896:	9904      	ldr	r1, [sp, #16]
90017898:	eba1 0406 	sub.w	r4, r1, r6
9001789c:	d108      	bne.n	900178b0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
9001789e:	9b02      	ldr	r3, [sp, #8]
900178a0:	44a0      	add	r8, r4
900178a2:	449c      	add	ip, r3
900178a4:	f8a7 8004 	strh.w	r8, [r7, #4]
900178a8:	fb04 a40c 	mla	r4, r4, ip, sl
900178ac:	80fc      	strh	r4, [r7, #6]
900178ae:	e461      	b.n	90017174 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900178b0:	9905      	ldr	r1, [sp, #20]
900178b2:	ebb1 0109 	subs.w	r1, r1, r9
900178b6:	bf51      	iteee	pl
900178b8:	f1cc 0520 	rsbpl	r5, ip, #32
900178bc:	fb04 f40c 	mulmi.w	r4, r4, ip
900178c0:	4249      	negmi	r1, r1
900178c2:	2500      	movmi	r5, #0
900178c4:	bf5d      	ittte	pl
900178c6:	436c      	mulpl	r4, r5
900178c8:	2520      	movpl	r5, #32
900178ca:	f04f 0901 	movpl.w	r9, #1
900178ce:	f04f 39ff 	movmi.w	r9, #4294967295
900178d2:	9501      	str	r5, [sp, #4]
900178d4:	9b01      	ldr	r3, [sp, #4]
900178d6:	fb94 f5f1 	sdiv	r5, r4, r1
900178da:	fb01 4415 	mls	r4, r1, r5, r4
900178de:	449c      	add	ip, r3
900178e0:	eb0b 0309 	add.w	r3, fp, r9
900178e4:	2c00      	cmp	r4, #0
900178e6:	bfbc      	itt	lt
900178e8:	f105 35ff 	addlt.w	r5, r5, #4294967295
900178ec:	1864      	addlt	r4, r4, r1
900178ee:	44a8      	add	r8, r5
900178f0:	fb05 ac0c 	mla	ip, r5, ip, sl
900178f4:	f8a7 8004 	strh.w	r8, [r7, #4]
900178f8:	f8a7 c006 	strh.w	ip, [r7, #6]
900178fc:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017900:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90017904:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90017908:	ea58 0707 	orrs.w	r7, r8, r7
9001790c:	d011      	beq.n	90017932 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001790e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90017912:	f1b8 0f00 	cmp.w	r8, #0
90017916:	db0c      	blt.n	90017932 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90017918:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001791a:	45b8      	cmp	r8, r7
9001791c:	da09      	bge.n	90017932 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001791e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90017922:	45b8      	cmp	r8, r7
90017924:	bf3c      	itt	cc
90017926:	f10c 0708 	addcc.w	r7, ip, #8
9001792a:	6107      	strcc	r7, [r0, #16]
9001792c:	f108 0701 	add.w	r7, r8, #1
90017930:	6087      	str	r7, [r0, #8]
90017932:	6907      	ldr	r7, [r0, #16]
90017934:	f04f 0c00 	mov.w	ip, #0
90017938:	b212      	sxth	r2, r2
9001793a:	459e      	cmp	lr, r3
9001793c:	803b      	strh	r3, [r7, #0]
9001793e:	442e      	add	r6, r5
90017940:	807a      	strh	r2, [r7, #2]
90017942:	f8a7 c004 	strh.w	ip, [r7, #4]
90017946:	f8a7 c006 	strh.w	ip, [r7, #6]
9001794a:	d04b      	beq.n	900179e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
9001794c:	9f04      	ldr	r7, [sp, #16]
9001794e:	1a64      	subs	r4, r4, r1
90017950:	f04f 0a00 	mov.w	sl, #0
90017954:	1bbf      	subs	r7, r7, r6
90017956:	443d      	add	r5, r7
90017958:	016d      	lsls	r5, r5, #5
9001795a:	fb95 f8f1 	sdiv	r8, r5, r1
9001795e:	fb01 5518 	mls	r5, r1, r8, r5
90017962:	4565      	cmp	r5, ip
90017964:	bfbc      	itt	lt
90017966:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001796a:	186d      	addlt	r5, r5, r1
9001796c:	f108 0701 	add.w	r7, r8, #1
90017970:	9703      	str	r7, [sp, #12]
90017972:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017976:	1964      	adds	r4, r4, r5
90017978:	444b      	add	r3, r9
9001797a:	bf54      	ite	pl
9001797c:	9f03      	ldrpl	r7, [sp, #12]
9001797e:	4647      	movmi	r7, r8
90017980:	f8bc b004 	ldrh.w	fp, [ip, #4]
90017984:	bf58      	it	pl
90017986:	1a64      	subpl	r4, r4, r1
90017988:	443e      	add	r6, r7
9001798a:	44bb      	add	fp, r7
9001798c:	f8ac b004 	strh.w	fp, [ip, #4]
90017990:	f8bc b006 	ldrh.w	fp, [ip, #6]
90017994:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90017998:	f8ac b006 	strh.w	fp, [ip, #6]
9001799c:	f8d0 c010 	ldr.w	ip, [r0, #16]
900179a0:	f8bc b006 	ldrh.w	fp, [ip, #6]
900179a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900179a8:	ea5b 0707 	orrs.w	r7, fp, r7
900179ac:	d011      	beq.n	900179d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900179ae:	f9bc b002 	ldrsh.w	fp, [ip, #2]
900179b2:	f1bb 0f00 	cmp.w	fp, #0
900179b6:	db0c      	blt.n	900179d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900179b8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900179ba:	45bb      	cmp	fp, r7
900179bc:	da09      	bge.n	900179d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
900179be:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900179c2:	45bb      	cmp	fp, r7
900179c4:	bf3c      	itt	cc
900179c6:	f10c 0708 	addcc.w	r7, ip, #8
900179ca:	6107      	strcc	r7, [r0, #16]
900179cc:	f10b 0701 	add.w	r7, fp, #1
900179d0:	6087      	str	r7, [r0, #8]
900179d2:	6907      	ldr	r7, [r0, #16]
900179d4:	459e      	cmp	lr, r3
900179d6:	803b      	strh	r3, [r7, #0]
900179d8:	807a      	strh	r2, [r7, #2]
900179da:	f8a7 a004 	strh.w	sl, [r7, #4]
900179de:	f8a7 a006 	strh.w	sl, [r7, #6]
900179e2:	d1c6      	bne.n	90017972 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
900179e4:	9b04      	ldr	r3, [sp, #16]
900179e6:	1b9e      	subs	r6, r3, r6
900179e8:	6903      	ldr	r3, [r0, #16]
900179ea:	889a      	ldrh	r2, [r3, #4]
900179ec:	4432      	add	r2, r6
900179ee:	809a      	strh	r2, [r3, #4]
900179f0:	9a02      	ldr	r2, [sp, #8]
900179f2:	f102 0c20 	add.w	ip, r2, #32
900179f6:	9a01      	ldr	r2, [sp, #4]
900179f8:	ebac 0c02 	sub.w	ip, ip, r2
900179fc:	88da      	ldrh	r2, [r3, #6]
900179fe:	fb06 260c 	mla	r6, r6, ip, r2
90017a02:	80de      	strh	r6, [r3, #6]
90017a04:	f7ff bbb6 	b.w	90017174 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90017a08 <_ZN8touchgfx7Outline6lineToEii>:
90017a08:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017a0a:	079b      	lsls	r3, r3, #30
90017a0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90017a0e:	460e      	mov	r6, r1
90017a10:	4615      	mov	r5, r2
90017a12:	d511      	bpl.n	90017a38 <_ZN8touchgfx7Outline6lineToEii+0x30>
90017a14:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90017a18:	ea86 0701 	eor.w	r7, r6, r1
90017a1c:	ea85 0302 	eor.w	r3, r5, r2
90017a20:	433b      	orrs	r3, r7
90017a22:	d009      	beq.n	90017a38 <_ZN8touchgfx7Outline6lineToEii+0x30>
90017a24:	4633      	mov	r3, r6
90017a26:	9500      	str	r5, [sp, #0]
90017a28:	f7ff fb4c 	bl	900170c4 <_ZN8touchgfx7Outline10renderLineEiiii>
90017a2c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017a2e:	f043 0301 	orr.w	r3, r3, #1
90017a32:	e9c0 6505 	strd	r6, r5, [r0, #20]
90017a36:	6243      	str	r3, [r0, #36]	@ 0x24
90017a38:	b003      	add	sp, #12
90017a3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

90017a3c <_ZN8touchgfx7Outline6moveToEii>:
90017a3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90017a3e:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017a40:	4615      	mov	r5, r2
90017a42:	4604      	mov	r4, r0
90017a44:	460e      	mov	r6, r1
90017a46:	079a      	lsls	r2, r3, #30
90017a48:	d401      	bmi.n	90017a4e <_ZN8touchgfx7Outline6moveToEii+0x12>
90017a4a:	f7ff fb08 	bl	9001705e <_ZN8touchgfx7Outline5resetEv>
90017a4e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90017a50:	07db      	lsls	r3, r3, #31
90017a52:	d504      	bpl.n	90017a5e <_ZN8touchgfx7Outline6moveToEii+0x22>
90017a54:	4620      	mov	r0, r4
90017a56:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90017a5a:	f7ff ffd5 	bl	90017a08 <_ZN8touchgfx7Outline6lineToEii>
90017a5e:	6923      	ldr	r3, [r4, #16]
90017a60:	1170      	asrs	r0, r6, #5
90017a62:	1169      	asrs	r1, r5, #5
90017a64:	f9b3 2000 	ldrsh.w	r2, [r3]
90017a68:	4290      	cmp	r0, r2
90017a6a:	d103      	bne.n	90017a74 <_ZN8touchgfx7Outline6moveToEii+0x38>
90017a6c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017a70:	4291      	cmp	r1, r2
90017a72:	d01a      	beq.n	90017aaa <_ZN8touchgfx7Outline6moveToEii+0x6e>
90017a74:	88df      	ldrh	r7, [r3, #6]
90017a76:	889a      	ldrh	r2, [r3, #4]
90017a78:	433a      	orrs	r2, r7
90017a7a:	d010      	beq.n	90017a9e <_ZN8touchgfx7Outline6moveToEii+0x62>
90017a7c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017a80:	2a00      	cmp	r2, #0
90017a82:	db0c      	blt.n	90017a9e <_ZN8touchgfx7Outline6moveToEii+0x62>
90017a84:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90017a86:	42ba      	cmp	r2, r7
90017a88:	da09      	bge.n	90017a9e <_ZN8touchgfx7Outline6moveToEii+0x62>
90017a8a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90017a8e:	42ba      	cmp	r2, r7
90017a90:	f102 0201 	add.w	r2, r2, #1
90017a94:	bf38      	it	cc
90017a96:	3308      	addcc	r3, #8
90017a98:	60a2      	str	r2, [r4, #8]
90017a9a:	bf38      	it	cc
90017a9c:	6123      	strcc	r3, [r4, #16]
90017a9e:	6923      	ldr	r3, [r4, #16]
90017aa0:	2200      	movs	r2, #0
90017aa2:	8018      	strh	r0, [r3, #0]
90017aa4:	8059      	strh	r1, [r3, #2]
90017aa6:	809a      	strh	r2, [r3, #4]
90017aa8:	80da      	strh	r2, [r3, #6]
90017aaa:	6166      	str	r6, [r4, #20]
90017aac:	6225      	str	r5, [r4, #32]
90017aae:	e9c4 5606 	strd	r5, r6, [r4, #24]
90017ab2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90017ab4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90017ab4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017ab8:	b0d0      	sub	sp, #320	@ 0x140
90017aba:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90017abe:	466c      	mov	r4, sp
90017ac0:	4627      	mov	r7, r4
90017ac2:	1a0d      	subs	r5, r1, r0
90017ac4:	f100 0308 	add.w	r3, r0, #8
90017ac8:	2d48      	cmp	r5, #72	@ 0x48
90017aca:	f340 80d5 	ble.w	90017c78 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90017ace:	112d      	asrs	r5, r5, #4
90017ad0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90017ad4:	f9b0 9000 	ldrsh.w	r9, [r0]
90017ad8:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90017adc:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90017ae0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90017ae4:	6816      	ldr	r6, [r2, #0]
90017ae6:	6006      	str	r6, [r0, #0]
90017ae8:	6856      	ldr	r6, [r2, #4]
90017aea:	6046      	str	r6, [r0, #4]
90017aec:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90017af0:	f8a2 8002 	strh.w	r8, [r2, #2]
90017af4:	f8a2 e004 	strh.w	lr, [r2, #4]
90017af8:	f8a2 c006 	strh.w	ip, [r2, #6]
90017afc:	f1a1 0208 	sub.w	r2, r1, #8
90017b00:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90017b04:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90017b08:	4565      	cmp	r5, ip
90017b0a:	db06      	blt.n	90017b1a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90017b0c:	d119      	bne.n	90017b42 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90017b0e:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90017b12:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90017b16:	42ae      	cmp	r6, r5
90017b18:	dd13      	ble.n	90017b42 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90017b1a:	460e      	mov	r6, r1
90017b1c:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90017b20:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90017b24:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90017b28:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90017b2c:	601d      	str	r5, [r3, #0]
90017b2e:	6875      	ldr	r5, [r6, #4]
90017b30:	605d      	str	r5, [r3, #4]
90017b32:	f821 9c08 	strh.w	r9, [r1, #-8]
90017b36:	f821 cc06 	strh.w	ip, [r1, #-6]
90017b3a:	f821 8c04 	strh.w	r8, [r1, #-4]
90017b3e:	f821 ec02 	strh.w	lr, [r1, #-2]
90017b42:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90017b46:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90017b4a:	42ae      	cmp	r6, r5
90017b4c:	db06      	blt.n	90017b5c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90017b4e:	d116      	bne.n	90017b7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90017b50:	f9b0 c000 	ldrsh.w	ip, [r0]
90017b54:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90017b58:	45ac      	cmp	ip, r5
90017b5a:	da10      	bge.n	90017b7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90017b5c:	681d      	ldr	r5, [r3, #0]
90017b5e:	f9b0 8000 	ldrsh.w	r8, [r0]
90017b62:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90017b66:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90017b6a:	6005      	str	r5, [r0, #0]
90017b6c:	685d      	ldr	r5, [r3, #4]
90017b6e:	f8a0 8008 	strh.w	r8, [r0, #8]
90017b72:	6045      	str	r5, [r0, #4]
90017b74:	8146      	strh	r6, [r0, #10]
90017b76:	f8a0 e00c 	strh.w	lr, [r0, #12]
90017b7a:	f8a0 c00e 	strh.w	ip, [r0, #14]
90017b7e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90017b82:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90017b86:	4565      	cmp	r5, ip
90017b88:	db06      	blt.n	90017b98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90017b8a:	d119      	bne.n	90017bc0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017b8c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90017b90:	f9b0 5000 	ldrsh.w	r5, [r0]
90017b94:	42ae      	cmp	r6, r5
90017b96:	da13      	bge.n	90017bc0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017b98:	460e      	mov	r6, r1
90017b9a:	f9b0 9000 	ldrsh.w	r9, [r0]
90017b9e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90017ba2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90017ba6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90017baa:	6005      	str	r5, [r0, #0]
90017bac:	6875      	ldr	r5, [r6, #4]
90017bae:	6045      	str	r5, [r0, #4]
90017bb0:	f821 9c08 	strh.w	r9, [r1, #-8]
90017bb4:	f821 cc06 	strh.w	ip, [r1, #-6]
90017bb8:	f821 8c04 	strh.w	r8, [r1, #-4]
90017bbc:	f821 ec02 	strh.w	lr, [r1, #-2]
90017bc0:	3308      	adds	r3, #8
90017bc2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90017bc6:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90017bca:	45e6      	cmp	lr, ip
90017bcc:	dbf8      	blt.n	90017bc0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017bce:	d105      	bne.n	90017bdc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90017bd0:	f9b3 6000 	ldrsh.w	r6, [r3]
90017bd4:	f9b0 5000 	ldrsh.w	r5, [r0]
90017bd8:	42ae      	cmp	r6, r5
90017bda:	dbf1      	blt.n	90017bc0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017bdc:	4615      	mov	r5, r2
90017bde:	3a08      	subs	r2, #8
90017be0:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90017be4:	45b4      	cmp	ip, r6
90017be6:	dbf9      	blt.n	90017bdc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90017be8:	d105      	bne.n	90017bf6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90017bea:	f9b0 8000 	ldrsh.w	r8, [r0]
90017bee:	f9b2 6000 	ldrsh.w	r6, [r2]
90017bf2:	45b0      	cmp	r8, r6
90017bf4:	dbf2      	blt.n	90017bdc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90017bf6:	4293      	cmp	r3, r2
90017bf8:	f1a5 0608 	sub.w	r6, r5, #8
90017bfc:	d816      	bhi.n	90017c2c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90017bfe:	f8d6 c000 	ldr.w	ip, [r6]
90017c02:	f9b3 a000 	ldrsh.w	sl, [r3]
90017c06:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90017c0a:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90017c0e:	f8c3 c000 	str.w	ip, [r3]
90017c12:	f8d6 c004 	ldr.w	ip, [r6, #4]
90017c16:	f8c3 c004 	str.w	ip, [r3, #4]
90017c1a:	f825 ac08 	strh.w	sl, [r5, #-8]
90017c1e:	f825 ec06 	strh.w	lr, [r5, #-6]
90017c22:	f825 9c04 	strh.w	r9, [r5, #-4]
90017c26:	f825 8c02 	strh.w	r8, [r5, #-2]
90017c2a:	e7c9      	b.n	90017bc0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017c2c:	f8d6 e000 	ldr.w	lr, [r6]
90017c30:	f9b0 a000 	ldrsh.w	sl, [r0]
90017c34:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90017c38:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90017c3c:	f8c0 e000 	str.w	lr, [r0]
90017c40:	f8d6 e004 	ldr.w	lr, [r6, #4]
90017c44:	1a16      	subs	r6, r2, r0
90017c46:	f8c0 e004 	str.w	lr, [r0, #4]
90017c4a:	f825 ac08 	strh.w	sl, [r5, #-8]
90017c4e:	f825 cc06 	strh.w	ip, [r5, #-6]
90017c52:	f825 9c04 	strh.w	r9, [r5, #-4]
90017c56:	f825 8c02 	strh.w	r8, [r5, #-2]
90017c5a:	1acd      	subs	r5, r1, r3
90017c5c:	10ed      	asrs	r5, r5, #3
90017c5e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90017c62:	bfb5      	itete	lt
90017c64:	e9c4 0200 	strdlt	r0, r2, [r4]
90017c68:	e9c4 3100 	strdge	r3, r1, [r4]
90017c6c:	460a      	movlt	r2, r1
90017c6e:	4603      	movge	r3, r0
90017c70:	3408      	adds	r4, #8
90017c72:	4618      	mov	r0, r3
90017c74:	4611      	mov	r1, r2
90017c76:	e724      	b.n	90017ac2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90017c78:	4299      	cmp	r1, r3
90017c7a:	d927      	bls.n	90017ccc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90017c7c:	f1a3 0210 	sub.w	r2, r3, #16
90017c80:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90017c84:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90017c88:	45ac      	cmp	ip, r5
90017c8a:	db06      	blt.n	90017c9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90017c8c:	d11c      	bne.n	90017cc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90017c8e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90017c92:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90017c96:	42ae      	cmp	r6, r5
90017c98:	da16      	bge.n	90017cc8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90017c9a:	4615      	mov	r5, r2
90017c9c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90017ca0:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90017ca4:	3a08      	subs	r2, #8
90017ca6:	f855 6f08 	ldr.w	r6, [r5, #8]!
90017caa:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90017cae:	6196      	str	r6, [r2, #24]
90017cb0:	42a8      	cmp	r0, r5
90017cb2:	686e      	ldr	r6, [r5, #4]
90017cb4:	f8a2 9010 	strh.w	r9, [r2, #16]
90017cb8:	61d6      	str	r6, [r2, #28]
90017cba:	f8a2 c012 	strh.w	ip, [r2, #18]
90017cbe:	f8a2 8014 	strh.w	r8, [r2, #20]
90017cc2:	f8a2 e016 	strh.w	lr, [r2, #22]
90017cc6:	d1db      	bne.n	90017c80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90017cc8:	3308      	adds	r3, #8
90017cca:	e7d5      	b.n	90017c78 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90017ccc:	42bc      	cmp	r4, r7
90017cce:	d903      	bls.n	90017cd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90017cd0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90017cd4:	3c08      	subs	r4, #8
90017cd6:	e6f4      	b.n	90017ac2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90017cd8:	b050      	add	sp, #320	@ 0x140
90017cda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90017cde <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90017cde:	b510      	push	{r4, lr}
90017ce0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017ce2:	4604      	mov	r4, r0
90017ce4:	07da      	lsls	r2, r3, #31
90017ce6:	d507      	bpl.n	90017cf8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90017ce8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90017cec:	f7ff fe8c 	bl	90017a08 <_ZN8touchgfx7Outline6lineToEii>
90017cf0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017cf2:	f023 0301 	bic.w	r3, r3, #1
90017cf6:	6243      	str	r3, [r0, #36]	@ 0x24
90017cf8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90017cfa:	079b      	lsls	r3, r3, #30
90017cfc:	d521      	bpl.n	90017d42 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90017cfe:	6923      	ldr	r3, [r4, #16]
90017d00:	88d9      	ldrh	r1, [r3, #6]
90017d02:	889a      	ldrh	r2, [r3, #4]
90017d04:	430a      	orrs	r2, r1
90017d06:	d010      	beq.n	90017d2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90017d08:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017d0c:	2a00      	cmp	r2, #0
90017d0e:	db0c      	blt.n	90017d2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90017d10:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90017d12:	428a      	cmp	r2, r1
90017d14:	da09      	bge.n	90017d2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90017d16:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90017d1a:	4291      	cmp	r1, r2
90017d1c:	f102 0201 	add.w	r2, r2, #1
90017d20:	bf88      	it	hi
90017d22:	3308      	addhi	r3, #8
90017d24:	60a2      	str	r2, [r4, #8]
90017d26:	bf88      	it	hi
90017d28:	6123      	strhi	r3, [r4, #16]
90017d2a:	68a1      	ldr	r1, [r4, #8]
90017d2c:	b129      	cbz	r1, 90017d3a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90017d2e:	6863      	ldr	r3, [r4, #4]
90017d30:	4299      	cmp	r1, r3
90017d32:	d802      	bhi.n	90017d3a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90017d34:	68e0      	ldr	r0, [r4, #12]
90017d36:	f7ff febd 	bl	90017ab4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90017d3a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90017d3c:	f023 0302 	bic.w	r3, r3, #2
90017d40:	6263      	str	r3, [r4, #36]	@ 0x24
90017d42:	68e0      	ldr	r0, [r4, #12]
90017d44:	bd10      	pop	{r4, pc}
	...

90017d48 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90017d48:	4b02      	ldr	r3, [pc, #8]	@ (90017d54 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
90017d4a:	6018      	str	r0, [r3, #0]
90017d4c:	4b02      	ldr	r3, [pc, #8]	@ (90017d58 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
90017d4e:	6019      	str	r1, [r3, #0]
90017d50:	4770      	bx	lr
90017d52:	bf00      	nop
90017d54:	240245a8 	.word	0x240245a8
90017d58:	240245ac 	.word	0x240245ac

90017d5c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
90017d5c:	2300      	movs	r3, #0
90017d5e:	4a02      	ldr	r2, [pc, #8]	@ (90017d68 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90017d60:	6013      	str	r3, [r2, #0]
90017d62:	4a02      	ldr	r2, [pc, #8]	@ (90017d6c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90017d64:	6013      	str	r3, [r2, #0]
90017d66:	4770      	bx	lr
90017d68:	240245a8 	.word	0x240245a8
90017d6c:	240245ac 	.word	0x240245ac

90017d70 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90017d70:	4b01      	ldr	r3, [pc, #4]	@ (90017d78 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90017d72:	6818      	ldr	r0, [r3, #0]
90017d74:	4770      	bx	lr
90017d76:	bf00      	nop
90017d78:	240245a8 	.word	0x240245a8

90017d7c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90017d7c:	4b01      	ldr	r3, [pc, #4]	@ (90017d84 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90017d7e:	6818      	ldr	r0, [r3, #0]
90017d80:	4770      	bx	lr
90017d82:	bf00      	nop
90017d84:	240245ac 	.word	0x240245ac

90017d88 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90017d88:	b510      	push	{r4, lr}
90017d8a:	6803      	ldr	r3, [r0, #0]
90017d8c:	460c      	mov	r4, r1
90017d8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90017d90:	4798      	blx	r3
90017d92:	1b03      	subs	r3, r0, r4
90017d94:	4258      	negs	r0, r3
90017d96:	4158      	adcs	r0, r3
90017d98:	bd10      	pop	{r4, pc}
	...

90017d9c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90017d9c:	4b01      	ldr	r3, [pc, #4]	@ (90017da4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90017d9e:	6019      	str	r1, [r3, #0]
90017da0:	4770      	bx	lr
90017da2:	bf00      	nop
90017da4:	240245b0 	.word	0x240245b0

90017da8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90017da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017dac:	4696      	mov	lr, r2
90017dae:	b097      	sub	sp, #92	@ 0x5c
90017db0:	4605      	mov	r5, r0
90017db2:	4614      	mov	r4, r2
90017db4:	460e      	mov	r6, r1
90017db6:	461f      	mov	r7, r3
90017db8:	f10d 0c1c 	add.w	ip, sp, #28
90017dbc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90017dc0:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
90017dc4:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90017dc8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017dcc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017dd0:	f8de 3000 	ldr.w	r3, [lr]
90017dd4:	f104 0e14 	add.w	lr, r4, #20
90017dd8:	f8cc 3000 	str.w	r3, [ip]
90017ddc:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90017de0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017de4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017de8:	f8de 3000 	ldr.w	r3, [lr]
90017dec:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90017df0:	f8cc 3000 	str.w	r3, [ip]
90017df4:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90017df8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017dfc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017e00:	f8de 3000 	ldr.w	r3, [lr]
90017e04:	4631      	mov	r1, r6
90017e06:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90017e08:	4628      	mov	r0, r5
90017e0a:	f8cc 3000 	str.w	r3, [ip]
90017e0e:	682b      	ldr	r3, [r5, #0]
90017e10:	9201      	str	r2, [sp, #4]
90017e12:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90017e14:	f8cd 8008 	str.w	r8, [sp, #8]
90017e18:	9200      	str	r2, [sp, #0]
90017e1a:	aa07      	add	r2, sp, #28
90017e1c:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90017e20:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90017e24:	463b      	mov	r3, r7
90017e26:	47d8      	blx	fp
90017e28:	46a6      	mov	lr, r4
90017e2a:	f10d 0c1c 	add.w	ip, sp, #28
90017e2e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017e32:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017e36:	f8de 3000 	ldr.w	r3, [lr]
90017e3a:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90017e3e:	343c      	adds	r4, #60	@ 0x3c
90017e40:	f8cc 3000 	str.w	r3, [ip]
90017e44:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90017e48:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017e4c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017e50:	f8de 3000 	ldr.w	r3, [lr]
90017e54:	f8cc 3000 	str.w	r3, [ip]
90017e58:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90017e5c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90017e5e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017e62:	6823      	ldr	r3, [r4, #0]
90017e64:	4631      	mov	r1, r6
90017e66:	4628      	mov	r0, r5
90017e68:	f8cc 3000 	str.w	r3, [ip]
90017e6c:	682b      	ldr	r3, [r5, #0]
90017e6e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90017e72:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90017e74:	f8cd 8008 	str.w	r8, [sp, #8]
90017e78:	9201      	str	r2, [sp, #4]
90017e7a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90017e7c:	9200      	str	r2, [sp, #0]
90017e7e:	aa07      	add	r2, sp, #28
90017e80:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90017e82:	463b      	mov	r3, r7
90017e84:	47a0      	blx	r4
90017e86:	b017      	add	sp, #92	@ 0x5c
90017e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90017e8c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90017e8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017e90:	b08d      	sub	sp, #52	@ 0x34
90017e92:	4688      	mov	r8, r1
90017e94:	f8d3 c000 	ldr.w	ip, [r3]
90017e98:	9916      	ldr	r1, [sp, #88]	@ 0x58
90017e9a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
90017e9e:	680f      	ldr	r7, [r1, #0]
90017ea0:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90017ea4:	eba7 070c 	sub.w	r7, r7, ip
90017ea8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90017eac:	edd3 6a07 	vldr	s13, [r3, #28]
90017eb0:	42bc      	cmp	r4, r7
90017eb2:	9918      	ldr	r1, [sp, #96]	@ 0x60
90017eb4:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90017eb8:	bfa8      	it	ge
90017eba:	463c      	movge	r4, r7
90017ebc:	f9b1 9000 	ldrsh.w	r9, [r1]
90017ec0:	f9ba 1000 	ldrsh.w	r1, [sl]
90017ec4:	ee07 4a90 	vmov	s15, r4
90017ec8:	eb09 0e0c 	add.w	lr, r9, ip
90017ecc:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90017ed0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90017ed4:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90017ed8:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90017edc:	4571      	cmp	r1, lr
90017ede:	ee25 4a04 	vmul.f32	s8, s10, s8
90017ee2:	ee65 4a24 	vmul.f32	s9, s10, s9
90017ee6:	ee25 5a27 	vmul.f32	s10, s10, s15
90017eea:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90017eee:	ee71 0aa4 	vadd.f32	s1, s3, s9
90017ef2:	ee32 1a05 	vadd.f32	s2, s4, s10
90017ef6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90017efa:	ee36 0a84 	vadd.f32	s0, s13, s8
90017efe:	ee61 1a87 	vmul.f32	s3, s3, s14
90017f02:	ee22 2a07 	vmul.f32	s4, s4, s14
90017f06:	f340 808c 	ble.w	90018022 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90017f0a:	eba1 060e 	sub.w	r6, r1, lr
90017f0e:	fb96 f5f4 	sdiv	r5, r6, r4
90017f12:	ee07 5a10 	vmov	s14, r5
90017f16:	2d00      	cmp	r5, #0
90017f18:	fb04 6615 	mls	r6, r4, r5, r6
90017f1c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017f20:	eea7 0a04 	vfma.f32	s0, s14, s8
90017f24:	eee7 0a24 	vfma.f32	s1, s14, s9
90017f28:	eea7 1a05 	vfma.f32	s2, s14, s10
90017f2c:	dd12      	ble.n	90017f54 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90017f2e:	ee70 6a44 	vsub.f32	s13, s0, s8
90017f32:	ee70 1ae4 	vsub.f32	s3, s1, s9
90017f36:	ee31 2a45 	vsub.f32	s4, s2, s10
90017f3a:	eef5 6a40 	vcmp.f32	s13, #0.0
90017f3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017f42:	bf14      	ite	ne
90017f44:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90017f48:	eeb0 7a67 	vmoveq.f32	s14, s15
90017f4c:	ee61 1a87 	vmul.f32	s3, s3, s14
90017f50:	ee22 2a07 	vmul.f32	s4, s4, s14
90017f54:	fb05 f204 	mul.w	r2, r5, r4
90017f58:	1abf      	subs	r7, r7, r2
90017f5a:	4494      	add	ip, r2
90017f5c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90017f60:	4411      	add	r1, r2
90017f62:	eb09 020c 	add.w	r2, r9, ip
90017f66:	b209      	sxth	r1, r1
90017f68:	443a      	add	r2, r7
90017f6a:	428a      	cmp	r2, r1
90017f6c:	bfc4      	itt	gt
90017f6e:	eba1 0209 	subgt.w	r2, r1, r9
90017f72:	eba2 070c 	subgt.w	r7, r2, ip
90017f76:	2f00      	cmp	r7, #0
90017f78:	dd50      	ble.n	9001801c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90017f7a:	fb97 f1f4 	sdiv	r1, r7, r4
90017f7e:	fb04 7211 	mls	r2, r4, r1, r7
90017f82:	b90a      	cbnz	r2, 90017f88 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90017f84:	3901      	subs	r1, #1
90017f86:	4622      	mov	r2, r4
90017f88:	eec7 3a80 	vdiv.f32	s7, s15, s0
90017f8c:	6840      	ldr	r0, [r0, #4]
90017f8e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90017f92:	44b6      	add	lr, r6
90017f94:	f8d0 a000 	ldr.w	sl, [r0]
90017f98:	2900      	cmp	r1, #0
90017f9a:	bfcc      	ite	gt
90017f9c:	46a1      	movgt	r9, r4
90017f9e:	4691      	movle	r9, r2
90017fa0:	900b      	str	r0, [sp, #44]	@ 0x2c
90017fa2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90017fa4:	fb04 e505 	mla	r5, r4, r5, lr
90017fa8:	eef0 6a42 	vmov.f32	s13, s4
90017fac:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90017fb0:	9008      	str	r0, [sp, #32]
90017fb2:	eeb0 7a61 	vmov.f32	s14, s3
90017fb6:	9818      	ldr	r0, [sp, #96]	@ 0x60
90017fb8:	695b      	ldr	r3, [r3, #20]
90017fba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90017fbe:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90017fc2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90017fc6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90017fc8:	445b      	add	r3, fp
90017fca:	9307      	str	r3, [sp, #28]
90017fcc:	ee16 3a90 	vmov	r3, s13
90017fd0:	e9cd 8505 	strd	r8, r5, [sp, #20]
90017fd4:	ee60 2aa3 	vmul.f32	s5, s1, s7
90017fd8:	ee21 3a23 	vmul.f32	s6, s2, s7
90017fdc:	ee72 7ae1 	vsub.f32	s15, s5, s3
90017fe0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90017fe4:	ee17 7a90 	vmov	r7, s15
90017fe8:	ee73 7a42 	vsub.f32	s15, s6, s4
90017fec:	fb97 f7f4 	sdiv	r7, r7, r4
90017ff0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90017ff4:	ee17 ca90 	vmov	ip, s15
90017ff8:	fb9c fcf4 	sdiv	ip, ip, r4
90017ffc:	fb0c 3306 	mla	r3, ip, r6, r3
90018000:	9302      	str	r3, [sp, #8]
90018002:	ee17 3a10 	vmov	r3, s14
90018006:	e9cd 7c03 	strd	r7, ip, [sp, #12]
9001800a:	fb07 3706 	mla	r7, r7, r6, r3
9001800e:	eba9 0306 	sub.w	r3, r9, r6
90018012:	e9cd 4700 	strd	r4, r7, [sp]
90018016:	f8da 4008 	ldr.w	r4, [sl, #8]
9001801a:	47a0      	blx	r4
9001801c:	b00d      	add	sp, #52	@ 0x34
9001801e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018022:	2500      	movs	r5, #0
90018024:	462e      	mov	r6, r5
90018026:	e799      	b.n	90017f5c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90018028 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90018028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001802c:	b0db      	sub	sp, #364	@ 0x16c
9001802e:	461d      	mov	r5, r3
90018030:	4614      	mov	r4, r2
90018032:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90018036:	910f      	str	r1, [sp, #60]	@ 0x3c
90018038:	4629      	mov	r1, r5
9001803a:	930a      	str	r3, [sp, #40]	@ 0x28
9001803c:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90018040:	9009      	str	r0, [sp, #36]	@ 0x24
90018042:	930b      	str	r3, [sp, #44]	@ 0x2c
90018044:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90018048:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
9001804c:	9310      	str	r3, [sp, #64]	@ 0x40
9001804e:	6803      	ldr	r3, [r0, #0]
90018050:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90018052:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90018056:	47b8      	blx	r7
90018058:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001805a:	6058      	str	r0, [r3, #4]
9001805c:	2800      	cmp	r0, #0
9001805e:	f000 83a1 	beq.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018062:	682b      	ldr	r3, [r5, #0]
90018064:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90018068:	ed94 7a02 	vldr	s14, [r4, #8]
9001806c:	9314      	str	r3, [sp, #80]	@ 0x50
9001806e:	686b      	ldr	r3, [r5, #4]
90018070:	eeb4 7ae7 	vcmpe.f32	s14, s15
90018074:	9315      	str	r3, [sp, #84]	@ 0x54
90018076:	4bc1      	ldr	r3, [pc, #772]	@ (9001837c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90018078:	7819      	ldrb	r1, [r3, #0]
9001807a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
9001807e:	2900      	cmp	r1, #0
90018080:	bf16      	itet	ne
90018082:	4619      	movne	r1, r3
90018084:	4611      	moveq	r1, r2
90018086:	4613      	movne	r3, r2
90018088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001808c:	9116      	str	r1, [sp, #88]	@ 0x58
9001808e:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90018092:	f240 8387 	bls.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018096:	ed94 7a07 	vldr	s14, [r4, #28]
9001809a:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001809e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900180a2:	f240 837f 	bls.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180a6:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
900180aa:	eeb4 7ae7 	vcmpe.f32	s14, s15
900180ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900180b2:	f240 8377 	bls.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180b6:	6822      	ldr	r2, [r4, #0]
900180b8:	4bb1      	ldr	r3, [pc, #708]	@ (90018380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
900180ba:	429a      	cmp	r2, r3
900180bc:	f2c0 8372 	blt.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180c0:	49b0      	ldr	r1, [pc, #704]	@ (90018384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
900180c2:	6963      	ldr	r3, [r4, #20]
900180c4:	428a      	cmp	r2, r1
900180c6:	f300 836d 	bgt.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180ca:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
900180ce:	48ae      	ldr	r0, [pc, #696]	@ (90018388 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
900180d0:	33ff      	adds	r3, #255	@ 0xff
900180d2:	4283      	cmp	r3, r0
900180d4:	f200 8366 	bhi.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180d8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900180da:	4dac      	ldr	r5, [pc, #688]	@ (9001838c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
900180dc:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
900180e0:	33ff      	adds	r3, #255	@ 0xff
900180e2:	42ab      	cmp	r3, r5
900180e4:	f200 835e 	bhi.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180e8:	6862      	ldr	r2, [r4, #4]
900180ea:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
900180ee:	33ff      	adds	r3, #255	@ 0xff
900180f0:	4283      	cmp	r3, r0
900180f2:	f200 8357 	bhi.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180f6:	69a1      	ldr	r1, [r4, #24]
900180f8:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
900180fc:	33ff      	adds	r3, #255	@ 0xff
900180fe:	4283      	cmp	r3, r0
90018100:	f200 8350 	bhi.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018104:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90018106:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
9001810a:	30ff      	adds	r0, #255	@ 0xff
9001810c:	42a8      	cmp	r0, r5
9001810e:	f200 8349 	bhi.w	900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018112:	428a      	cmp	r2, r1
90018114:	f280 8110 	bge.w	90018338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90018118:	429a      	cmp	r2, r3
9001811a:	f300 8119 	bgt.w	90018350 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
9001811e:	4299      	cmp	r1, r3
90018120:	f280 811d 	bge.w	9001835e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90018124:	2502      	movs	r5, #2
90018126:	2701      	movs	r7, #1
90018128:	46a9      	mov	r9, r5
9001812a:	46b8      	mov	r8, r7
9001812c:	f04f 0a00 	mov.w	sl, #0
90018130:	4621      	mov	r1, r4
90018132:	a849      	add	r0, sp, #292	@ 0x124
90018134:	f004 f894 	bl	9001c260 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90018138:	4622      	mov	r2, r4
9001813a:	4653      	mov	r3, sl
9001813c:	a949      	add	r1, sp, #292	@ 0x124
9001813e:	f8cd 9000 	str.w	r9, [sp]
90018142:	a819      	add	r0, sp, #100	@ 0x64
90018144:	f004 f9bc 	bl	9001c4c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90018148:	4622      	mov	r2, r4
9001814a:	4653      	mov	r3, sl
9001814c:	a949      	add	r1, sp, #292	@ 0x124
9001814e:	f8cd 8000 	str.w	r8, [sp]
90018152:	a829      	add	r0, sp, #164	@ 0xa4
90018154:	f004 f9b4 	bl	9001c4c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90018158:	4643      	mov	r3, r8
9001815a:	4622      	mov	r2, r4
9001815c:	a949      	add	r1, sp, #292	@ 0x124
9001815e:	f8cd 9000 	str.w	r9, [sp]
90018162:	a839      	add	r0, sp, #228	@ 0xe4
90018164:	f004 f9ac 	bl	9001c4c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90018168:	42af      	cmp	r7, r5
9001816a:	af12      	add	r7, sp, #72	@ 0x48
9001816c:	bfb7      	itett	lt
9001816e:	2300      	movlt	r3, #0
90018170:	2301      	movge	r3, #1
90018172:	ad29      	addlt	r5, sp, #164	@ 0xa4
90018174:	ac19      	addlt	r4, sp, #100	@ 0x64
90018176:	bfb1      	iteee	lt
90018178:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001817a:	ad19      	addge	r5, sp, #100	@ 0x64
9001817c:	930e      	strge	r3, [sp, #56]	@ 0x38
9001817e:	ac29      	addge	r4, sp, #164	@ 0xa4
90018180:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90018182:	e893 0003 	ldmia.w	r3, {r0, r1}
90018186:	e887 0003 	stmia.w	r7, {r0, r1}
9001818a:	b928      	cbnz	r0, 90018198 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
9001818c:	4b80      	ldr	r3, [pc, #512]	@ (90018390 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
9001818e:	6818      	ldr	r0, [r3, #0]
90018190:	6803      	ldr	r3, [r0, #0]
90018192:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018194:	4798      	blx	r3
90018196:	6038      	str	r0, [r7, #0]
90018198:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001819a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001819e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900181a2:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
900181a4:	930c      	str	r3, [sp, #48]	@ 0x30
900181a6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900181a8:	6963      	ldr	r3, [r4, #20]
900181aa:	440b      	add	r3, r1
900181ac:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900181b0:	4408      	add	r0, r1
900181b2:	b200      	sxth	r0, r0
900181b4:	4283      	cmp	r3, r0
900181b6:	900d      	str	r0, [sp, #52]	@ 0x34
900181b8:	f280 80dd 	bge.w	90018376 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
900181bc:	428b      	cmp	r3, r1
900181be:	da08      	bge.n	900181d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900181c0:	2a00      	cmp	r2, #0
900181c2:	dd06      	ble.n	900181d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900181c4:	1acb      	subs	r3, r1, r3
900181c6:	429a      	cmp	r2, r3
900181c8:	f2c0 80e4 	blt.w	90018394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
900181cc:	2b00      	cmp	r3, #0
900181ce:	f300 80e2 	bgt.w	90018396 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
900181d2:	6967      	ldr	r7, [r4, #20]
900181d4:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
900181d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900181da:	443b      	add	r3, r7
900181dc:	461f      	mov	r7, r3
900181de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900181e0:	1bdf      	subs	r7, r3, r7
900181e2:	4297      	cmp	r7, r2
900181e4:	bfa8      	it	ge
900181e6:	4617      	movge	r7, r2
900181e8:	2f00      	cmp	r7, #0
900181ea:	f340 8166 	ble.w	900184ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
900181ee:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900181f0:	6829      	ldr	r1, [r5, #0]
900181f2:	f9b3 2000 	ldrsh.w	r2, [r3]
900181f6:	f9bb 3000 	ldrsh.w	r3, [fp]
900181fa:	4411      	add	r1, r2
900181fc:	6820      	ldr	r0, [r4, #0]
900181fe:	4299      	cmp	r1, r3
90018200:	dd1a      	ble.n	90018238 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90018202:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90018206:	4402      	add	r2, r0
90018208:	440b      	add	r3, r1
9001820a:	b21b      	sxth	r3, r3
9001820c:	429a      	cmp	r2, r3
9001820e:	dc13      	bgt.n	90018238 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90018210:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90018212:	a912      	add	r1, sp, #72	@ 0x48
90018214:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018216:	9809      	ldr	r0, [sp, #36]	@ 0x24
90018218:	681b      	ldr	r3, [r3, #0]
9001821a:	9206      	str	r2, [sp, #24]
9001821c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001821e:	9500      	str	r5, [sp, #0]
90018220:	9205      	str	r2, [sp, #20]
90018222:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90018224:	e9cd b203 	strd	fp, r2, [sp, #12]
90018228:	9a64      	ldr	r2, [sp, #400]	@ 0x190
9001822a:	e9cd 8201 	strd	r8, r2, [sp, #4]
9001822e:	aa49      	add	r2, sp, #292	@ 0x124
90018230:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90018234:	4623      	mov	r3, r4
90018236:	47c8      	blx	r9
90018238:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
9001823c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90018240:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90018244:	ee37 7a27 	vadd.f32	s14, s14, s15
90018248:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
9001824c:	68a1      	ldr	r1, [r4, #8]
9001824e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90018252:	ed94 6a08 	vldr	s12, [r4, #32]
90018256:	edd4 6a07 	vldr	s13, [r4, #28]
9001825a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
9001825e:	ee76 6a86 	vadd.f32	s13, s13, s12
90018262:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90018266:	e9d4 2300 	ldrd	r2, r3, [r4]
9001826a:	edc4 6a07 	vstr	s13, [r4, #28]
9001826e:	441a      	add	r2, r3
90018270:	6963      	ldr	r3, [r4, #20]
90018272:	3301      	adds	r3, #1
90018274:	6022      	str	r2, [r4, #0]
90018276:	6163      	str	r3, [r4, #20]
90018278:	69a3      	ldr	r3, [r4, #24]
9001827a:	3b01      	subs	r3, #1
9001827c:	61a3      	str	r3, [r4, #24]
9001827e:	6923      	ldr	r3, [r4, #16]
90018280:	440b      	add	r3, r1
90018282:	68e1      	ldr	r1, [r4, #12]
90018284:	428b      	cmp	r3, r1
90018286:	6123      	str	r3, [r4, #16]
90018288:	db15      	blt.n	900182b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
9001828a:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
9001828e:	3201      	adds	r2, #1
90018290:	1a5b      	subs	r3, r3, r1
90018292:	ee76 6a26 	vadd.f32	s13, s12, s13
90018296:	6022      	str	r2, [r4, #0]
90018298:	6123      	str	r3, [r4, #16]
9001829a:	edc4 6a07 	vstr	s13, [r4, #28]
9001829e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
900182a2:	ee36 7a87 	vadd.f32	s14, s13, s14
900182a6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900182aa:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
900182ae:	ee77 7a27 	vadd.f32	s15, s14, s15
900182b2:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900182b6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
900182ba:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
900182be:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
900182c2:	ee37 7a27 	vadd.f32	s14, s14, s15
900182c6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
900182ca:	68a9      	ldr	r1, [r5, #8]
900182cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
900182d0:	ed95 6a08 	vldr	s12, [r5, #32]
900182d4:	edd5 6a07 	vldr	s13, [r5, #28]
900182d8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900182dc:	ee76 6a86 	vadd.f32	s13, s13, s12
900182e0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900182e4:	e9d5 2300 	ldrd	r2, r3, [r5]
900182e8:	edc5 6a07 	vstr	s13, [r5, #28]
900182ec:	441a      	add	r2, r3
900182ee:	696b      	ldr	r3, [r5, #20]
900182f0:	3301      	adds	r3, #1
900182f2:	602a      	str	r2, [r5, #0]
900182f4:	616b      	str	r3, [r5, #20]
900182f6:	69ab      	ldr	r3, [r5, #24]
900182f8:	3b01      	subs	r3, #1
900182fa:	61ab      	str	r3, [r5, #24]
900182fc:	692b      	ldr	r3, [r5, #16]
900182fe:	440b      	add	r3, r1
90018300:	68e9      	ldr	r1, [r5, #12]
90018302:	428b      	cmp	r3, r1
90018304:	612b      	str	r3, [r5, #16]
90018306:	db15      	blt.n	90018334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90018308:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
9001830c:	3201      	adds	r2, #1
9001830e:	1a5b      	subs	r3, r3, r1
90018310:	ee76 6a26 	vadd.f32	s13, s12, s13
90018314:	602a      	str	r2, [r5, #0]
90018316:	612b      	str	r3, [r5, #16]
90018318:	edc5 6a07 	vstr	s13, [r5, #28]
9001831c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90018320:	ee36 7a87 	vadd.f32	s14, s13, s14
90018324:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90018328:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
9001832c:	ee77 7a27 	vadd.f32	s15, s14, s15
90018330:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90018334:	3f01      	subs	r7, #1
90018336:	e757      	b.n	900181e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90018338:	4299      	cmp	r1, r3
9001833a:	dc13      	bgt.n	90018364 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
9001833c:	429a      	cmp	r2, r3
9001833e:	da14      	bge.n	9001836a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90018340:	2502      	movs	r5, #2
90018342:	2703      	movs	r7, #3
90018344:	f04f 0800 	mov.w	r8, #0
90018348:	46a9      	mov	r9, r5
9001834a:	f04f 0a01 	mov.w	sl, #1
9001834e:	e6ef      	b.n	90018130 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90018350:	2501      	movs	r5, #1
90018352:	2700      	movs	r7, #0
90018354:	46a9      	mov	r9, r5
90018356:	46b8      	mov	r8, r7
90018358:	f04f 0a02 	mov.w	sl, #2
9001835c:	e6e8      	b.n	90018130 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9001835e:	2501      	movs	r5, #1
90018360:	2702      	movs	r7, #2
90018362:	e6e1      	b.n	90018128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90018364:	2500      	movs	r5, #0
90018366:	2701      	movs	r7, #1
90018368:	e7f4      	b.n	90018354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
9001836a:	2702      	movs	r7, #2
9001836c:	2503      	movs	r5, #3
9001836e:	f04f 0900 	mov.w	r9, #0
90018372:	46b8      	mov	r8, r7
90018374:	e7e9      	b.n	9001834a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90018376:	4613      	mov	r3, r2
90018378:	e728      	b.n	900181cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
9001837a:	bf00      	nop
9001837c:	24024596 	.word	0x24024596
90018380:	fffd8f01 	.word	0xfffd8f01
90018384:	00027100 	.word	0x00027100
90018388:	0004e1ff 	.word	0x0004e1ff
9001838c:	0004e1fe 	.word	0x0004e1fe
90018390:	240245a0 	.word	0x240245a0
90018394:	4613      	mov	r3, r2
90018396:	992b      	ldr	r1, [sp, #172]	@ 0xac
90018398:	469e      	mov	lr, r3
9001839a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
9001839c:	469c      	mov	ip, r3
9001839e:	9111      	str	r1, [sp, #68]	@ 0x44
900183a0:	f04f 0900 	mov.w	r9, #0
900183a4:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
900183a8:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
900183ac:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
900183b0:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
900183b4:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
900183b8:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
900183bc:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
900183c0:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
900183c4:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
900183c8:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
900183cc:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
900183d0:	f1bc 0f00 	cmp.w	ip, #0
900183d4:	d147      	bne.n	90018466 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
900183d6:	eb03 0c07 	add.w	ip, r3, r7
900183da:	1ad7      	subs	r7, r2, r3
900183dc:	f1b9 0f00 	cmp.w	r9, #0
900183e0:	d009      	beq.n	900183f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
900183e2:	9029      	str	r0, [sp, #164]	@ 0xa4
900183e4:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
900183e8:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
900183ec:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
900183f0:	912d      	str	r1, [sp, #180]	@ 0xb4
900183f2:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
900183f6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900183f8:	f04f 0800 	mov.w	r8, #0
900183fc:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90018400:	9111      	str	r1, [sp, #68]	@ 0x44
90018402:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90018406:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
9001840a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
9001840e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90018412:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90018416:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
9001841a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
9001841e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90018422:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90018426:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
9001842a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
9001842e:	f1be 0f00 	cmp.w	lr, #0
90018432:	d031      	beq.n	90018498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90018434:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90018436:	4450      	add	r0, sl
90018438:	ee76 6aa4 	vadd.f32	s13, s13, s9
9001843c:	4431      	add	r1, r6
9001843e:	ee37 7a04 	vadd.f32	s14, s14, s8
90018442:	ee77 7aa3 	vadd.f32	s15, s15, s7
90018446:	4549      	cmp	r1, r9
90018448:	db08      	blt.n	9001845c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
9001844a:	ee77 7a85 	vadd.f32	s15, s15, s10
9001844e:	3001      	adds	r0, #1
90018450:	ee76 6aa5 	vadd.f32	s13, s13, s11
90018454:	eba1 0109 	sub.w	r1, r1, r9
90018458:	ee37 7a06 	vadd.f32	s14, s14, s12
9001845c:	f10e 3eff 	add.w	lr, lr, #4294967295
90018460:	f04f 0801 	mov.w	r8, #1
90018464:	e7e3      	b.n	9001842e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90018466:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90018468:	4450      	add	r0, sl
9001846a:	ee37 7a24 	vadd.f32	s14, s14, s9
9001846e:	4431      	add	r1, r6
90018470:	ee77 7a84 	vadd.f32	s15, s15, s8
90018474:	ee76 6aa3 	vadd.f32	s13, s13, s7
90018478:	4541      	cmp	r1, r8
9001847a:	db08      	blt.n	9001848e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
9001847c:	ee76 6a85 	vadd.f32	s13, s13, s10
90018480:	3001      	adds	r0, #1
90018482:	ee37 7a25 	vadd.f32	s14, s14, s11
90018486:	eba1 0108 	sub.w	r1, r1, r8
9001848a:	ee77 7a86 	vadd.f32	s15, s15, s12
9001848e:	f10c 3cff 	add.w	ip, ip, #4294967295
90018492:	f04f 0901 	mov.w	r9, #1
90018496:	e79b      	b.n	900183d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90018498:	449c      	add	ip, r3
9001849a:	1aff      	subs	r7, r7, r3
9001849c:	f1b8 0f00 	cmp.w	r8, #0
900184a0:	d009      	beq.n	900184b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
900184a2:	9019      	str	r0, [sp, #100]	@ 0x64
900184a4:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
900184a8:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
900184ac:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
900184b0:	911d      	str	r1, [sp, #116]	@ 0x74
900184b2:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
900184b6:	1ad2      	subs	r2, r2, r3
900184b8:	e68b      	b.n	900181d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900184ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900184bc:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
900184be:	2b00      	cmp	r3, #0
900184c0:	f000 80d1 	beq.w	90018666 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
900184c4:	ad19      	add	r5, sp, #100	@ 0x64
900184c6:	ac39      	add	r4, sp, #228	@ 0xe4
900184c8:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900184ca:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900184ce:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900184d2:	930c      	str	r3, [sp, #48]	@ 0x30
900184d4:	990c      	ldr	r1, [sp, #48]	@ 0x30
900184d6:	6963      	ldr	r3, [r4, #20]
900184d8:	440b      	add	r3, r1
900184da:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900184de:	4408      	add	r0, r1
900184e0:	b200      	sxth	r0, r0
900184e2:	4283      	cmp	r3, r0
900184e4:	900d      	str	r0, [sp, #52]	@ 0x34
900184e6:	f280 80c1 	bge.w	9001866c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900184ea:	428b      	cmp	r3, r1
900184ec:	da08      	bge.n	90018500 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900184ee:	2a00      	cmp	r2, #0
900184f0:	dd06      	ble.n	90018500 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900184f2:	1acb      	subs	r3, r1, r3
900184f4:	429a      	cmp	r2, r3
900184f6:	f2c0 80bb 	blt.w	90018670 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
900184fa:	2b00      	cmp	r3, #0
900184fc:	f300 80b9 	bgt.w	90018672 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90018500:	6967      	ldr	r7, [r4, #20]
90018502:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90018506:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90018508:	443b      	add	r3, r7
9001850a:	461f      	mov	r7, r3
9001850c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001850e:	1bdf      	subs	r7, r3, r7
90018510:	4297      	cmp	r7, r2
90018512:	bfa8      	it	ge
90018514:	4617      	movge	r7, r2
90018516:	2f00      	cmp	r7, #0
90018518:	f340 813c 	ble.w	90018794 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
9001851c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001851e:	6829      	ldr	r1, [r5, #0]
90018520:	f9b3 2000 	ldrsh.w	r2, [r3]
90018524:	f9bb 3000 	ldrsh.w	r3, [fp]
90018528:	4411      	add	r1, r2
9001852a:	6820      	ldr	r0, [r4, #0]
9001852c:	4299      	cmp	r1, r3
9001852e:	dd1a      	ble.n	90018566 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90018530:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90018534:	4402      	add	r2, r0
90018536:	440b      	add	r3, r1
90018538:	b21b      	sxth	r3, r3
9001853a:	429a      	cmp	r2, r3
9001853c:	dc13      	bgt.n	90018566 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
9001853e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90018540:	a912      	add	r1, sp, #72	@ 0x48
90018542:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018544:	9809      	ldr	r0, [sp, #36]	@ 0x24
90018546:	681b      	ldr	r3, [r3, #0]
90018548:	9206      	str	r2, [sp, #24]
9001854a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001854c:	9500      	str	r5, [sp, #0]
9001854e:	9205      	str	r2, [sp, #20]
90018550:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90018552:	e9cd b203 	strd	fp, r2, [sp, #12]
90018556:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90018558:	e9cd 8201 	strd	r8, r2, [sp, #4]
9001855c:	aa49      	add	r2, sp, #292	@ 0x124
9001855e:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90018562:	4623      	mov	r3, r4
90018564:	47c8      	blx	r9
90018566:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
9001856a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
9001856e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90018572:	ee37 7a27 	vadd.f32	s14, s14, s15
90018576:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
9001857a:	68a1      	ldr	r1, [r4, #8]
9001857c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90018580:	ed94 6a08 	vldr	s12, [r4, #32]
90018584:	edd4 6a07 	vldr	s13, [r4, #28]
90018588:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
9001858c:	ee76 6a86 	vadd.f32	s13, s13, s12
90018590:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90018594:	e9d4 2300 	ldrd	r2, r3, [r4]
90018598:	edc4 6a07 	vstr	s13, [r4, #28]
9001859c:	441a      	add	r2, r3
9001859e:	6963      	ldr	r3, [r4, #20]
900185a0:	3301      	adds	r3, #1
900185a2:	6022      	str	r2, [r4, #0]
900185a4:	6163      	str	r3, [r4, #20]
900185a6:	69a3      	ldr	r3, [r4, #24]
900185a8:	3b01      	subs	r3, #1
900185aa:	61a3      	str	r3, [r4, #24]
900185ac:	6923      	ldr	r3, [r4, #16]
900185ae:	440b      	add	r3, r1
900185b0:	68e1      	ldr	r1, [r4, #12]
900185b2:	428b      	cmp	r3, r1
900185b4:	6123      	str	r3, [r4, #16]
900185b6:	db15      	blt.n	900185e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
900185b8:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
900185bc:	3201      	adds	r2, #1
900185be:	1a5b      	subs	r3, r3, r1
900185c0:	ee76 6a26 	vadd.f32	s13, s12, s13
900185c4:	6022      	str	r2, [r4, #0]
900185c6:	6123      	str	r3, [r4, #16]
900185c8:	edc4 6a07 	vstr	s13, [r4, #28]
900185cc:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
900185d0:	ee36 7a87 	vadd.f32	s14, s13, s14
900185d4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
900185d8:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
900185dc:	ee77 7a27 	vadd.f32	s15, s14, s15
900185e0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900185e4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
900185e8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
900185ec:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
900185f0:	ee37 7a27 	vadd.f32	s14, s14, s15
900185f4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
900185f8:	68a9      	ldr	r1, [r5, #8]
900185fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
900185fe:	ed95 6a08 	vldr	s12, [r5, #32]
90018602:	edd5 6a07 	vldr	s13, [r5, #28]
90018606:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001860a:	ee76 6a86 	vadd.f32	s13, s13, s12
9001860e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90018612:	e9d5 2300 	ldrd	r2, r3, [r5]
90018616:	edc5 6a07 	vstr	s13, [r5, #28]
9001861a:	441a      	add	r2, r3
9001861c:	696b      	ldr	r3, [r5, #20]
9001861e:	3301      	adds	r3, #1
90018620:	602a      	str	r2, [r5, #0]
90018622:	616b      	str	r3, [r5, #20]
90018624:	69ab      	ldr	r3, [r5, #24]
90018626:	3b01      	subs	r3, #1
90018628:	61ab      	str	r3, [r5, #24]
9001862a:	692b      	ldr	r3, [r5, #16]
9001862c:	440b      	add	r3, r1
9001862e:	68e9      	ldr	r1, [r5, #12]
90018630:	428b      	cmp	r3, r1
90018632:	612b      	str	r3, [r5, #16]
90018634:	db15      	blt.n	90018662 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90018636:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
9001863a:	3201      	adds	r2, #1
9001863c:	1a5b      	subs	r3, r3, r1
9001863e:	ee76 6a26 	vadd.f32	s13, s12, s13
90018642:	602a      	str	r2, [r5, #0]
90018644:	612b      	str	r3, [r5, #16]
90018646:	edc5 6a07 	vstr	s13, [r5, #28]
9001864a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
9001864e:	ee36 7a87 	vadd.f32	s14, s13, s14
90018652:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90018656:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
9001865a:	ee77 7a27 	vadd.f32	s15, s14, s15
9001865e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90018662:	3f01      	subs	r7, #1
90018664:	e757      	b.n	90018516 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90018666:	ad39      	add	r5, sp, #228	@ 0xe4
90018668:	ac19      	add	r4, sp, #100	@ 0x64
9001866a:	e72d      	b.n	900184c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
9001866c:	4613      	mov	r3, r2
9001866e:	e744      	b.n	900184fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90018670:	4613      	mov	r3, r2
90018672:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90018674:	469e      	mov	lr, r3
90018676:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
9001867a:	461f      	mov	r7, r3
9001867c:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90018680:	f04f 0900 	mov.w	r9, #0
90018684:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90018688:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
9001868c:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90018690:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
90018694:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90018698:	993d      	ldr	r1, [sp, #244]	@ 0xf4
9001869a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
9001869e:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
900186a2:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
900186a6:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
900186aa:	960e      	str	r6, [sp, #56]	@ 0x38
900186ac:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
900186b0:	2f00      	cmp	r7, #0
900186b2:	d146      	bne.n	90018742 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
900186b4:	449c      	add	ip, r3
900186b6:	1ad7      	subs	r7, r2, r3
900186b8:	f1b9 0f00 	cmp.w	r9, #0
900186bc:	d009      	beq.n	900186d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
900186be:	9039      	str	r0, [sp, #228]	@ 0xe4
900186c0:	913d      	str	r1, [sp, #244]	@ 0xf4
900186c2:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
900186c6:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
900186ca:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
900186ce:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
900186d2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900186d4:	f04f 0800 	mov.w	r8, #0
900186d8:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900186dc:	910e      	str	r1, [sp, #56]	@ 0x38
900186de:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900186e2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900186e6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900186ea:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900186ee:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900186f2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900186f6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900186fa:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900186fe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90018702:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90018706:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
9001870a:	f1be 0f00 	cmp.w	lr, #0
9001870e:	d030      	beq.n	90018772 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90018710:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90018712:	4450      	add	r0, sl
90018714:	ee76 6aa4 	vadd.f32	s13, s13, s9
90018718:	4431      	add	r1, r6
9001871a:	ee37 7a04 	vadd.f32	s14, s14, s8
9001871e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90018722:	4549      	cmp	r1, r9
90018724:	db08      	blt.n	90018738 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90018726:	ee77 7a85 	vadd.f32	s15, s15, s10
9001872a:	3001      	adds	r0, #1
9001872c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90018730:	eba1 0109 	sub.w	r1, r1, r9
90018734:	ee37 7a06 	vadd.f32	s14, s14, s12
90018738:	f10e 3eff 	add.w	lr, lr, #4294967295
9001873c:	f04f 0801 	mov.w	r8, #1
90018740:	e7e3      	b.n	9001870a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90018742:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90018744:	4450      	add	r0, sl
90018746:	ee37 7a24 	vadd.f32	s14, s14, s9
9001874a:	4431      	add	r1, r6
9001874c:	ee77 7a84 	vadd.f32	s15, s15, s8
90018750:	ee76 6aa3 	vadd.f32	s13, s13, s7
90018754:	4541      	cmp	r1, r8
90018756:	db08      	blt.n	9001876a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90018758:	ee76 6a85 	vadd.f32	s13, s13, s10
9001875c:	3001      	adds	r0, #1
9001875e:	ee37 7a25 	vadd.f32	s14, s14, s11
90018762:	eba1 0108 	sub.w	r1, r1, r8
90018766:	ee77 7a86 	vadd.f32	s15, s15, s12
9001876a:	3f01      	subs	r7, #1
9001876c:	f04f 0901 	mov.w	r9, #1
90018770:	e79e      	b.n	900186b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90018772:	449c      	add	ip, r3
90018774:	1aff      	subs	r7, r7, r3
90018776:	f1b8 0f00 	cmp.w	r8, #0
9001877a:	d009      	beq.n	90018790 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
9001877c:	9019      	str	r0, [sp, #100]	@ 0x64
9001877e:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90018782:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90018786:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
9001878a:	911d      	str	r1, [sp, #116]	@ 0x74
9001878c:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90018790:	1ad2      	subs	r2, r2, r3
90018792:	e6b5      	b.n	90018500 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90018794:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90018796:	681b      	ldr	r3, [r3, #0]
90018798:	b923      	cbnz	r3, 900187a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001879a:	4b04      	ldr	r3, [pc, #16]	@ (900187ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
9001879c:	6818      	ldr	r0, [r3, #0]
9001879e:	6803      	ldr	r3, [r0, #0]
900187a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900187a2:	4798      	blx	r3
900187a4:	b05b      	add	sp, #364	@ 0x16c
900187a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900187aa:	bf00      	nop
900187ac:	240245a0 	.word	0x240245a0

900187b0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900187b0:	b570      	push	{r4, r5, r6, lr}
900187b2:	4604      	mov	r4, r0
900187b4:	2500      	movs	r5, #0
900187b6:	9805      	ldr	r0, [sp, #20]
900187b8:	f89d 601c 	ldrb.w	r6, [sp, #28]
900187bc:	6061      	str	r1, [r4, #4]
900187be:	8263      	strh	r3, [r4, #18]
900187c0:	f89d 1010 	ldrb.w	r1, [sp, #16]
900187c4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900187c8:	8025      	strh	r5, [r4, #0]
900187ca:	7221      	strb	r1, [r4, #8]
900187cc:	7266      	strb	r6, [r4, #9]
900187ce:	60e0      	str	r0, [r4, #12]
900187d0:	8222      	strh	r2, [r4, #16]
900187d2:	82a3      	strh	r3, [r4, #20]
900187d4:	82e5      	strh	r5, [r4, #22]
900187d6:	8325      	strh	r5, [r4, #24]
900187d8:	8365      	strh	r5, [r4, #26]
900187da:	83a5      	strh	r5, [r4, #28]
900187dc:	83e5      	strh	r5, [r4, #30]
900187de:	8425      	strh	r5, [r4, #32]
900187e0:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
900187e4:	b32e      	cbz	r6, 90018832 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900187e6:	6803      	ldr	r3, [r0, #0]
900187e8:	695b      	ldr	r3, [r3, #20]
900187ea:	4798      	blx	r3
900187ec:	4606      	mov	r6, r0
900187ee:	b300      	cbz	r0, 90018832 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900187f0:	68e0      	ldr	r0, [r4, #12]
900187f2:	4631      	mov	r1, r6
900187f4:	6803      	ldr	r3, [r0, #0]
900187f6:	68db      	ldr	r3, [r3, #12]
900187f8:	4798      	blx	r3
900187fa:	4605      	mov	r5, r0
900187fc:	b1c8      	cbz	r0, 90018832 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900187fe:	7b43      	ldrb	r3, [r0, #13]
90018800:	7a82      	ldrb	r2, [r0, #10]
90018802:	005b      	lsls	r3, r3, #1
90018804:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90018808:	4313      	orrs	r3, r2
9001880a:	8423      	strh	r3, [r4, #32]
9001880c:	7a63      	ldrb	r3, [r4, #9]
9001880e:	2b06      	cmp	r3, #6
90018810:	d10f      	bne.n	90018832 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90018812:	68e0      	ldr	r0, [r4, #12]
90018814:	462a      	mov	r2, r5
90018816:	4631      	mov	r1, r6
90018818:	6803      	ldr	r3, [r0, #0]
9001881a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001881c:	4798      	blx	r3
9001881e:	7b6b      	ldrb	r3, [r5, #13]
90018820:	005b      	lsls	r3, r3, #1
90018822:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018826:	7aab      	ldrb	r3, [r5, #10]
90018828:	4313      	orrs	r3, r2
9001882a:	4418      	add	r0, r3
9001882c:	8c23      	ldrh	r3, [r4, #32]
9001882e:	4418      	add	r0, r3
90018830:	8420      	strh	r0, [r4, #32]
90018832:	4620      	mov	r0, r4
90018834:	bd70      	pop	{r4, r5, r6, pc}

90018836 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90018836:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001883a:	2400      	movs	r4, #0
9001883c:	b085      	sub	sp, #20
9001883e:	4681      	mov	r9, r0
90018840:	4688      	mov	r8, r1
90018842:	4692      	mov	sl, r2
90018844:	469b      	mov	fp, r3
90018846:	4627      	mov	r7, r4
90018848:	4625      	mov	r5, r4
9001884a:	4626      	mov	r6, r4
9001884c:	4554      	cmp	r4, sl
9001884e:	da2a      	bge.n	900188a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90018850:	2300      	movs	r3, #0
90018852:	9303      	str	r3, [sp, #12]
90018854:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018858:	429d      	cmp	r5, r3
9001885a:	d004      	beq.n	90018866 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
9001885c:	f242 030b 	movw	r3, #8203	@ 0x200b
90018860:	429d      	cmp	r5, r3
90018862:	bf18      	it	ne
90018864:	462f      	movne	r7, r5
90018866:	ab03      	add	r3, sp, #12
90018868:	4642      	mov	r2, r8
9001886a:	4659      	mov	r1, fp
9001886c:	4648      	mov	r0, r9
9001886e:	f003 fb0d 	bl	9001be8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018872:	4605      	mov	r5, r0
90018874:	b1b8      	cbz	r0, 900188a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90018876:	280a      	cmp	r0, #10
90018878:	d015      	beq.n	900188a6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001887a:	9a03      	ldr	r2, [sp, #12]
9001887c:	b18a      	cbz	r2, 900188a2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
9001887e:	7b50      	ldrb	r0, [r2, #13]
90018880:	4639      	mov	r1, r7
90018882:	7a93      	ldrb	r3, [r2, #10]
90018884:	0040      	lsls	r0, r0, #1
90018886:	8895      	ldrh	r5, [r2, #4]
90018888:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001888c:	4303      	orrs	r3, r0
9001888e:	4640      	mov	r0, r8
90018890:	9301      	str	r3, [sp, #4]
90018892:	f8d8 3000 	ldr.w	r3, [r8]
90018896:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018898:	4798      	blx	r3
9001889a:	9b01      	ldr	r3, [sp, #4]
9001889c:	4418      	add	r0, r3
9001889e:	4406      	add	r6, r0
900188a0:	b2b6      	uxth	r6, r6
900188a2:	3401      	adds	r4, #1
900188a4:	e7d2      	b.n	9001884c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900188a6:	4630      	mov	r0, r6
900188a8:	b005      	add	sp, #20
900188aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900188ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900188ae:	2a02      	cmp	r2, #2
900188b0:	b530      	push	{r4, r5, lr}
900188b2:	d011      	beq.n	900188d8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
900188b4:	2a03      	cmp	r2, #3
900188b6:	d01c      	beq.n	900188f2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
900188b8:	2a01      	cmp	r2, #1
900188ba:	d10c      	bne.n	900188d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900188bc:	888b      	ldrh	r3, [r1, #4]
900188be:	8801      	ldrh	r1, [r0, #0]
900188c0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
900188c4:	1a5b      	subs	r3, r3, r1
900188c6:	8844      	ldrh	r4, [r0, #2]
900188c8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900188cc:	1a9b      	subs	r3, r3, r2
900188ce:	8004      	strh	r4, [r0, #0]
900188d0:	8081      	strh	r1, [r0, #4]
900188d2:	8043      	strh	r3, [r0, #2]
900188d4:	80c2      	strh	r2, [r0, #6]
900188d6:	bd30      	pop	{r4, r5, pc}
900188d8:	88cb      	ldrh	r3, [r1, #6]
900188da:	8842      	ldrh	r2, [r0, #2]
900188dc:	1a9b      	subs	r3, r3, r2
900188de:	88c2      	ldrh	r2, [r0, #6]
900188e0:	1a9b      	subs	r3, r3, r2
900188e2:	888a      	ldrh	r2, [r1, #4]
900188e4:	8801      	ldrh	r1, [r0, #0]
900188e6:	8043      	strh	r3, [r0, #2]
900188e8:	1a52      	subs	r2, r2, r1
900188ea:	8881      	ldrh	r1, [r0, #4]
900188ec:	1a52      	subs	r2, r2, r1
900188ee:	8002      	strh	r2, [r0, #0]
900188f0:	e7f1      	b.n	900188d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900188f2:	88cb      	ldrh	r3, [r1, #6]
900188f4:	8841      	ldrh	r1, [r0, #2]
900188f6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900188fa:	1a5b      	subs	r3, r3, r1
900188fc:	f9b0 5000 	ldrsh.w	r5, [r0]
90018900:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90018904:	1a9b      	subs	r3, r3, r2
90018906:	8045      	strh	r5, [r0, #2]
90018908:	8082      	strh	r2, [r0, #4]
9001890a:	8003      	strh	r3, [r0, #0]
9001890c:	80c4      	strh	r4, [r0, #6]
9001890e:	e7e2      	b.n	900188d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90018910 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90018910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018914:	b09f      	sub	sp, #124	@ 0x7c
90018916:	920f      	str	r2, [sp, #60]	@ 0x3c
90018918:	9312      	str	r3, [sp, #72]	@ 0x48
9001891a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9001891c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001891e:	8812      	ldrh	r2, [r2, #0]
90018920:	889b      	ldrh	r3, [r3, #4]
90018922:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90018924:	4413      	add	r3, r2
90018926:	900e      	str	r0, [sp, #56]	@ 0x38
90018928:	6828      	ldr	r0, [r5, #0]
9001892a:	b21b      	sxth	r3, r3
9001892c:	9117      	str	r1, [sp, #92]	@ 0x5c
9001892e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
90018932:	9311      	str	r3, [sp, #68]	@ 0x44
90018934:	6803      	ldr	r3, [r0, #0]
90018936:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
9001893a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001893c:	4798      	blx	r3
9001893e:	682b      	ldr	r3, [r5, #0]
90018940:	9013      	str	r0, [sp, #76]	@ 0x4c
90018942:	7b1a      	ldrb	r2, [r3, #12]
90018944:	7adb      	ldrb	r3, [r3, #11]
90018946:	9215      	str	r2, [sp, #84]	@ 0x54
90018948:	9316      	str	r3, [sp, #88]	@ 0x58
9001894a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
9001894e:	2c00      	cmp	r4, #0
90018950:	d067      	beq.n	90018a22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90018952:	7c2b      	ldrb	r3, [r5, #16]
90018954:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90018956:	2b06      	cmp	r3, #6
90018958:	bf14      	ite	ne
9001895a:	2301      	movne	r3, #1
9001895c:	2302      	moveq	r3, #2
9001895e:	4413      	add	r3, r2
90018960:	f04f 0900 	mov.w	r9, #0
90018964:	9310      	str	r3, [sp, #64]	@ 0x40
90018966:	464c      	mov	r4, r9
90018968:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
9001896c:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90018970:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90018972:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90018974:	4293      	cmp	r3, r2
90018976:	f280 808b 	bge.w	90018a90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001897a:	2300      	movs	r3, #0
9001897c:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90018980:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90018984:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018988:	429c      	cmp	r4, r3
9001898a:	d006      	beq.n	9001899a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
9001898c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001898e:	f242 020b 	movw	r2, #8203	@ 0x200b
90018992:	4294      	cmp	r4, r2
90018994:	bf18      	it	ne
90018996:	4623      	movne	r3, r4
90018998:	930c      	str	r3, [sp, #48]	@ 0x30
9001899a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001899c:	992d      	ldr	r1, [sp, #180]	@ 0xb4
9001899e:	682a      	ldr	r2, [r5, #0]
900189a0:	428b      	cmp	r3, r1
900189a2:	db40      	blt.n	90018a26 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900189a4:	6813      	ldr	r3, [r2, #0]
900189a6:	4610      	mov	r0, r2
900189a8:	695b      	ldr	r3, [r3, #20]
900189aa:	4798      	blx	r3
900189ac:	4604      	mov	r4, r0
900189ae:	6828      	ldr	r0, [r5, #0]
900189b0:	aa1d      	add	r2, sp, #116	@ 0x74
900189b2:	4621      	mov	r1, r4
900189b4:	6803      	ldr	r3, [r0, #0]
900189b6:	689f      	ldr	r7, [r3, #8]
900189b8:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900189bc:	47b8      	blx	r7
900189be:	901c      	str	r0, [sp, #112]	@ 0x70
900189c0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900189c4:	429c      	cmp	r4, r3
900189c6:	f000 80eb 	beq.w	90018ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900189ca:	f242 030b 	movw	r3, #8203	@ 0x200b
900189ce:	429c      	cmp	r4, r3
900189d0:	f000 80e6 	beq.w	90018ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900189d4:	2c00      	cmp	r4, #0
900189d6:	f000 810d 	beq.w	90018bf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900189da:	2c0a      	cmp	r4, #10
900189dc:	d05e      	beq.n	90018a9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
900189de:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900189e0:	b36a      	cbz	r2, 90018a3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900189e2:	8894      	ldrh	r4, [r2, #4]
900189e4:	f1bb 0f00 	cmp.w	fp, #0
900189e8:	d03a      	beq.n	90018a60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
900189ea:	f892 900d 	ldrb.w	r9, [r2, #13]
900189ee:	f1bb 0f01 	cmp.w	fp, #1
900189f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900189f6:	f409 7380 	and.w	r3, r9, #256	@ 0x100
900189fa:	f892 900a 	ldrb.w	r9, [r2, #10]
900189fe:	ea49 0903 	orr.w	r9, r9, r3
90018a02:	d133      	bne.n	90018a6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90018a04:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90018a06:	eba6 0609 	sub.w	r6, r6, r9
90018a0a:	2b00      	cmp	r3, #0
90018a0c:	d14d      	bne.n	90018aaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90018a0e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90018a10:	eb09 0306 	add.w	r3, r9, r6
90018a14:	4413      	add	r3, r2
90018a16:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90018a18:	f9b2 2000 	ldrsh.w	r2, [r2]
90018a1c:	4293      	cmp	r3, r2
90018a1e:	da4e      	bge.n	90018abe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90018a20:	e036      	b.n	90018a90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90018a22:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90018a24:	e79c      	b.n	90018960 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90018a26:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90018a2a:	4659      	mov	r1, fp
90018a2c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90018a2e:	9301      	str	r3, [sp, #4]
90018a30:	ab1d      	add	r3, sp, #116	@ 0x74
90018a32:	9300      	str	r3, [sp, #0]
90018a34:	ab1c      	add	r3, sp, #112	@ 0x70
90018a36:	f003 fa72 	bl	9001bf1e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90018a3a:	4604      	mov	r4, r0
90018a3c:	e7c0      	b.n	900189c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
90018a3e:	6828      	ldr	r0, [r5, #0]
90018a40:	6803      	ldr	r3, [r0, #0]
90018a42:	691b      	ldr	r3, [r3, #16]
90018a44:	4798      	blx	r3
90018a46:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018a4a:	4298      	cmp	r0, r3
90018a4c:	f000 80a8 	beq.w	90018ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018a50:	f242 030b 	movw	r3, #8203	@ 0x200b
90018a54:	4298      	cmp	r0, r3
90018a56:	f000 80a3 	beq.w	90018ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018a5a:	f1bb 0f00 	cmp.w	fp, #0
90018a5e:	d100      	bne.n	90018a62 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90018a60:	444e      	add	r6, r9
90018a62:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90018a64:	2a00      	cmp	r2, #0
90018a66:	d1c0      	bne.n	900189ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90018a68:	4691      	mov	r9, r2
90018a6a:	e099      	b.n	90018ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018a6c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90018a6e:	2b00      	cmp	r3, #0
90018a70:	f000 80c2 	beq.w	90018bf8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90018a74:	f1bb 0f00 	cmp.w	fp, #0
90018a78:	d117      	bne.n	90018aaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90018a7a:	6828      	ldr	r0, [r5, #0]
90018a7c:	990c      	ldr	r1, [sp, #48]	@ 0x30
90018a7e:	6803      	ldr	r3, [r0, #0]
90018a80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018a82:	4798      	blx	r3
90018a84:	4406      	add	r6, r0
90018a86:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90018a88:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90018a8a:	1af3      	subs	r3, r6, r3
90018a8c:	4293      	cmp	r3, r2
90018a8e:	dd16      	ble.n	90018abe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90018a90:	2c00      	cmp	r4, #0
90018a92:	f000 80af 	beq.w	90018bf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90018a96:	2c0a      	cmp	r4, #10
90018a98:	f040 809d 	bne.w	90018bd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
90018a9c:	240a      	movs	r4, #10
90018a9e:	fab4 f084 	clz	r0, r4
90018aa2:	0940      	lsrs	r0, r0, #5
90018aa4:	b01f      	add	sp, #124	@ 0x7c
90018aa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018aaa:	6828      	ldr	r0, [r5, #0]
90018aac:	990c      	ldr	r1, [sp, #48]	@ 0x30
90018aae:	6803      	ldr	r3, [r0, #0]
90018ab0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018ab2:	4798      	blx	r3
90018ab4:	f1bb 0f01 	cmp.w	fp, #1
90018ab8:	eba6 0600 	sub.w	r6, r6, r0
90018abc:	d0a7      	beq.n	90018a0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90018abe:	981c      	ldr	r0, [sp, #112]	@ 0x70
90018ac0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90018ac2:	f990 1009 	ldrsb.w	r1, [r0, #9]
90018ac6:	f9b3 8000 	ldrsh.w	r8, [r3]
90018aca:	7b43      	ldrb	r3, [r0, #13]
90018acc:	4431      	add	r1, r6
90018ace:	015b      	lsls	r3, r3, #5
90018ad0:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018ad4:	7983      	ldrb	r3, [r0, #6]
90018ad6:	4313      	orrs	r3, r2
90018ad8:	440b      	add	r3, r1
90018ada:	4543      	cmp	r3, r8
90018adc:	db60      	blt.n	90018ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018ade:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90018ae0:	4299      	cmp	r1, r3
90018ae2:	da5d      	bge.n	90018ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018ae4:	6828      	ldr	r0, [r5, #0]
90018ae6:	45b0      	cmp	r8, r6
90018ae8:	6803      	ldr	r3, [r0, #0]
90018aea:	bfcc      	ite	gt
90018aec:	eba8 0806 	subgt.w	r8, r8, r6
90018af0:	f04f 0800 	movle.w	r8, #0
90018af4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90018af6:	bfc8      	it	gt
90018af8:	fa1f f888 	uxthgt.w	r8, r8
90018afc:	4798      	blx	r3
90018afe:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90018b00:	7b53      	ldrb	r3, [r2, #13]
90018b02:	00d9      	lsls	r1, r3, #3
90018b04:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90018b08:	7a11      	ldrb	r1, [r2, #8]
90018b0a:	4339      	orrs	r1, r7
90018b0c:	065f      	lsls	r7, r3, #25
90018b0e:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90018b10:	bf48      	it	mi
90018b12:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90018b16:	4407      	add	r7, r0
90018b18:	bf48      	it	mi
90018b1a:	b209      	sxthmi	r1, r1
90018b1c:	1a7f      	subs	r7, r7, r1
90018b1e:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90018b20:	b2bf      	uxth	r7, r7
90018b22:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90018b26:	fa0f fa87 	sxth.w	sl, r7
90018b2a:	4551      	cmp	r1, sl
90018b2c:	dd3c      	ble.n	90018ba8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
90018b2e:	011b      	lsls	r3, r3, #4
90018b30:	79d0      	ldrb	r0, [r2, #7]
90018b32:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90018b36:	4303      	orrs	r3, r0
90018b38:	449a      	add	sl, r3
90018b3a:	4551      	cmp	r1, sl
90018b3c:	dc30      	bgt.n	90018ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018b3e:	1bcf      	subs	r7, r1, r7
90018b40:	468a      	mov	sl, r1
90018b42:	b23f      	sxth	r7, r7
90018b44:	9219      	str	r2, [sp, #100]	@ 0x64
90018b46:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90018b48:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90018b4a:	6828      	ldr	r0, [r5, #0]
90018b4c:	2a00      	cmp	r2, #0
90018b4e:	d12d      	bne.n	90018bac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90018b50:	9318      	str	r3, [sp, #96]	@ 0x60
90018b52:	b2bf      	uxth	r7, r7
90018b54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018b56:	6819      	ldr	r1, [r3, #0]
90018b58:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
90018b5a:	6801      	ldr	r1, [r0, #0]
90018b5c:	9314      	str	r3, [sp, #80]	@ 0x50
90018b5e:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90018b60:	4788      	blx	r1
90018b62:	79a9      	ldrb	r1, [r5, #6]
90018b64:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90018b66:	910b      	str	r1, [sp, #44]	@ 0x2c
90018b68:	7ba9      	ldrb	r1, [r5, #14]
90018b6a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90018b6c:	910a      	str	r1, [sp, #40]	@ 0x28
90018b6e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
90018b72:	9109      	str	r1, [sp, #36]	@ 0x24
90018b74:	68a9      	ldr	r1, [r5, #8]
90018b76:	9306      	str	r3, [sp, #24]
90018b78:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90018b7a:	9205      	str	r2, [sp, #20]
90018b7c:	9304      	str	r3, [sp, #16]
90018b7e:	f8cd a004 	str.w	sl, [sp, #4]
90018b82:	e9cd 8702 	strd	r8, r7, [sp, #8]
90018b86:	44b0      	add	r8, r6
90018b88:	9f14      	ldr	r7, [sp, #80]	@ 0x50
90018b8a:	fa0f f388 	sxth.w	r3, r8
90018b8e:	9300      	str	r3, [sp, #0]
90018b90:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90018b92:	e9cd 0107 	strd	r0, r1, [sp, #28]
90018b96:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90018b98:	681a      	ldr	r2, [r3, #0]
90018b9a:	980e      	ldr	r0, [sp, #56]	@ 0x38
90018b9c:	685b      	ldr	r3, [r3, #4]
90018b9e:	47b8      	blx	r7
90018ba0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90018ba2:	3301      	adds	r3, #1
90018ba4:	930d      	str	r3, [sp, #52]	@ 0x34
90018ba6:	e6e3      	b.n	90018970 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90018ba8:	2700      	movs	r7, #0
90018baa:	e7cb      	b.n	90018b44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
90018bac:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90018bae:	f8d2 c008 	ldr.w	ip, [r2, #8]
90018bb2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90018bb4:	f8dc 1000 	ldr.w	r1, [ip]
90018bb8:	e9cd 6204 	strd	r6, r2, [sp, #16]
90018bbc:	79aa      	ldrb	r2, [r5, #6]
90018bbe:	9203      	str	r2, [sp, #12]
90018bc0:	7baa      	ldrb	r2, [r5, #14]
90018bc2:	9202      	str	r2, [sp, #8]
90018bc4:	68aa      	ldr	r2, [r5, #8]
90018bc6:	e9cd 0200 	strd	r0, r2, [sp]
90018bca:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90018bcc:	4660      	mov	r0, ip
90018bce:	688f      	ldr	r7, [r1, #8]
90018bd0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90018bd2:	47b8      	blx	r7
90018bd4:	e7e4      	b.n	90018ba0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018bd6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90018bd8:	3501      	adds	r5, #1
90018bda:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90018bdc:	429d      	cmp	r5, r3
90018bde:	f6bf af5e 	bge.w	90018a9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90018be2:	4659      	mov	r1, fp
90018be4:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90018be6:	f7ec fd25 	bl	90005634 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018bea:	4604      	mov	r4, r0
90018bec:	b110      	cbz	r0, 90018bf4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90018bee:	280a      	cmp	r0, #10
90018bf0:	d1f2      	bne.n	90018bd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90018bf2:	e753      	b.n	90018a9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90018bf4:	2400      	movs	r4, #0
90018bf6:	e752      	b.n	90018a9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90018bf8:	f1bb 0f00 	cmp.w	fp, #0
90018bfc:	f43f af43 	beq.w	90018a86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90018c00:	e75d      	b.n	90018abe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90018c02 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90018c02:	b530      	push	{r4, r5, lr}
90018c04:	8ac4      	ldrh	r4, [r0, #22]
90018c06:	8b45      	ldrh	r5, [r0, #26]
90018c08:	8343      	strh	r3, [r0, #26]
90018c0a:	442c      	add	r4, r5
90018c0c:	1ae4      	subs	r4, r4, r3
90018c0e:	8b83      	ldrh	r3, [r0, #28]
90018c10:	82c4      	strh	r4, [r0, #22]
90018c12:	8b04      	ldrh	r4, [r0, #24]
90018c14:	4422      	add	r2, r4
90018c16:	440c      	add	r4, r1
90018c18:	1a59      	subs	r1, r3, r1
90018c1a:	83c2      	strh	r2, [r0, #30]
90018c1c:	8304      	strh	r4, [r0, #24]
90018c1e:	8381      	strh	r1, [r0, #28]
90018c20:	bd30      	pop	{r4, r5, pc}

90018c22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90018c22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018c26:	4604      	mov	r4, r0
90018c28:	8a47      	ldrh	r7, [r0, #18]
90018c2a:	68c0      	ldr	r0, [r0, #12]
90018c2c:	b085      	sub	sp, #20
90018c2e:	6803      	ldr	r3, [r0, #0]
90018c30:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018c32:	4798      	blx	r3
90018c34:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90018c38:	7a63      	ldrb	r3, [r4, #9]
90018c3a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
90018c3e:	3b01      	subs	r3, #1
90018c40:	42b7      	cmp	r7, r6
90018c42:	bfac      	ite	ge
90018c44:	f04f 0900 	movge.w	r9, #0
90018c48:	f04f 0901 	movlt.w	r9, #1
90018c4c:	2b05      	cmp	r3, #5
90018c4e:	d804      	bhi.n	90018c5a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90018c50:	e8df f003 	tbb	[pc, r3]
90018c54:	470f0854 	.word	0x470f0854
90018c58:	4c4c      	.short	0x4c4c
90018c5a:	2500      	movs	r5, #0
90018c5c:	46a9      	mov	r9, r5
90018c5e:	462e      	mov	r6, r5
90018c60:	462f      	mov	r7, r5
90018c62:	e00e      	b.n	90018c82 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90018c64:	42b7      	cmp	r7, r6
90018c66:	f04f 0500 	mov.w	r5, #0
90018c6a:	bfb4      	ite	lt
90018c6c:	2600      	movlt	r6, #0
90018c6e:	2601      	movge	r6, #1
90018c70:	e7f6      	b.n	90018c60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90018c72:	42b7      	cmp	r7, r6
90018c74:	464d      	mov	r5, r9
90018c76:	f04f 0900 	mov.w	r9, #0
90018c7a:	bfb4      	ite	lt
90018c7c:	2600      	movlt	r6, #0
90018c7e:	2601      	movge	r6, #1
90018c80:	464f      	mov	r7, r9
90018c82:	f04f 0800 	mov.w	r8, #0
90018c86:	f8a4 8016 	strh.w	r8, [r4, #22]
90018c8a:	f8a4 8018 	strh.w	r8, [r4, #24]
90018c8e:	f8cd 8004 	str.w	r8, [sp, #4]
90018c92:	2300      	movs	r3, #0
90018c94:	9303      	str	r3, [sp, #12]
90018c96:	8823      	ldrh	r3, [r4, #0]
90018c98:	2b20      	cmp	r3, #32
90018c9a:	d033      	beq.n	90018d04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
90018c9c:	f242 010b 	movw	r1, #8203	@ 0x200b
90018ca0:	1a5a      	subs	r2, r3, r1
90018ca2:	f1d2 0a00 	rsbs	sl, r2, #0
90018ca6:	eb4a 0a02 	adc.w	sl, sl, r2
90018caa:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90018cae:	4293      	cmp	r3, r2
90018cb0:	d008      	beq.n	90018cc4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90018cb2:	428b      	cmp	r3, r1
90018cb4:	9a01      	ldr	r2, [sp, #4]
90018cb6:	bf0e      	itee	eq
90018cb8:	f04f 0a01 	moveq.w	sl, #1
90018cbc:	461a      	movne	r2, r3
90018cbe:	f04f 0a00 	movne.w	sl, #0
90018cc2:	9201      	str	r2, [sp, #4]
90018cc4:	ab03      	add	r3, sp, #12
90018cc6:	68e2      	ldr	r2, [r4, #12]
90018cc8:	7a21      	ldrb	r1, [r4, #8]
90018cca:	6860      	ldr	r0, [r4, #4]
90018ccc:	f003 f8de 	bl	9001be8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018cd0:	8020      	strh	r0, [r4, #0]
90018cd2:	b9d8      	cbnz	r0, 90018d0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90018cd4:	8ba2      	ldrh	r2, [r4, #28]
90018cd6:	2300      	movs	r3, #0
90018cd8:	4611      	mov	r1, r2
90018cda:	4620      	mov	r0, r4
90018cdc:	f7ff ff91 	bl	90018c02 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90018ce0:	e06e      	b.n	90018dc0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90018ce2:	2500      	movs	r5, #0
90018ce4:	2701      	movs	r7, #1
90018ce6:	46a9      	mov	r9, r5
90018ce8:	462e      	mov	r6, r5
90018cea:	e7ca      	b.n	90018c82 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90018cec:	42b7      	cmp	r7, r6
90018cee:	f04f 0500 	mov.w	r5, #0
90018cf2:	bfb4      	ite	lt
90018cf4:	2700      	movlt	r7, #0
90018cf6:	2701      	movge	r7, #1
90018cf8:	462e      	mov	r6, r5
90018cfa:	e7c2      	b.n	90018c82 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90018cfc:	2500      	movs	r5, #0
90018cfe:	2601      	movs	r6, #1
90018d00:	46a9      	mov	r9, r5
90018d02:	e7ad      	b.n	90018c60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90018d04:	9301      	str	r3, [sp, #4]
90018d06:	f04f 0a01 	mov.w	sl, #1
90018d0a:	e7db      	b.n	90018cc4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90018d0c:	8b63      	ldrh	r3, [r4, #26]
90018d0e:	280a      	cmp	r0, #10
90018d10:	f103 0301 	add.w	r3, r3, #1
90018d14:	8363      	strh	r3, [r4, #26]
90018d16:	d0dd      	beq.n	90018cd4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90018d18:	9a03      	ldr	r2, [sp, #12]
90018d1a:	bb62      	cbnz	r2, 90018d76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90018d1c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018d20:	4298      	cmp	r0, r3
90018d22:	d003      	beq.n	90018d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90018d24:	f242 030b 	movw	r3, #8203	@ 0x200b
90018d28:	4298      	cmp	r0, r3
90018d2a:	d1b2      	bne.n	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018d2c:	8823      	ldrh	r3, [r4, #0]
90018d2e:	8ba1      	ldrh	r1, [r4, #28]
90018d30:	2b20      	cmp	r3, #32
90018d32:	d003      	beq.n	90018d3c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90018d34:	f242 000b 	movw	r0, #8203	@ 0x200b
90018d38:	4283      	cmp	r3, r0
90018d3a:	d131      	bne.n	90018da0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90018d3c:	f1ba 0f00 	cmp.w	sl, #0
90018d40:	bf0a      	itet	eq
90018d42:	4688      	moveq	r8, r1
90018d44:	4650      	movne	r0, sl
90018d46:	2001      	moveq	r0, #1
90018d48:	440a      	add	r2, r1
90018d4a:	8b23      	ldrh	r3, [r4, #24]
90018d4c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90018d50:	b292      	uxth	r2, r2
90018d52:	83a2      	strh	r2, [r4, #28]
90018d54:	4413      	add	r3, r2
90018d56:	f1b9 0f00 	cmp.w	r9, #0
90018d5a:	d102      	bne.n	90018d62 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90018d5c:	2d00      	cmp	r5, #0
90018d5e:	d042      	beq.n	90018de6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90018d60:	b300      	cbz	r0, 90018da4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90018d62:	8c21      	ldrh	r1, [r4, #32]
90018d64:	4419      	add	r1, r3
90018d66:	458c      	cmp	ip, r1
90018d68:	da37      	bge.n	90018dda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90018d6a:	8ae1      	ldrh	r1, [r4, #22]
90018d6c:	2900      	cmp	r1, #0
90018d6e:	d034      	beq.n	90018dda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90018d70:	4563      	cmp	r3, ip
90018d72:	dd8e      	ble.n	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018d74:	e01d      	b.n	90018db2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90018d76:	8893      	ldrh	r3, [r2, #4]
90018d78:	9901      	ldr	r1, [sp, #4]
90018d7a:	8023      	strh	r3, [r4, #0]
90018d7c:	f892 b00d 	ldrb.w	fp, [r2, #13]
90018d80:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90018d84:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90018d88:	f892 b00a 	ldrb.w	fp, [r2, #10]
90018d8c:	ea4b 0b00 	orr.w	fp, fp, r0
90018d90:	68e0      	ldr	r0, [r4, #12]
90018d92:	6803      	ldr	r3, [r0, #0]
90018d94:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018d96:	4798      	blx	r3
90018d98:	eb0b 0200 	add.w	r2, fp, r0
90018d9c:	b292      	uxth	r2, r2
90018d9e:	e7c5      	b.n	90018d2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90018da0:	2000      	movs	r0, #0
90018da2:	e7d1      	b.n	90018d48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90018da4:	4563      	cmp	r3, ip
90018da6:	f77f af74 	ble.w	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018daa:	8ae3      	ldrh	r3, [r4, #22]
90018dac:	2b00      	cmp	r3, #0
90018dae:	f43f af70 	beq.w	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018db2:	2301      	movs	r3, #1
90018db4:	8c22      	ldrh	r2, [r4, #32]
90018db6:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
90018dba:	8be3      	ldrh	r3, [r4, #30]
90018dbc:	4413      	add	r3, r2
90018dbe:	83e3      	strh	r3, [r4, #30]
90018dc0:	68e0      	ldr	r0, [r4, #12]
90018dc2:	6803      	ldr	r3, [r0, #0]
90018dc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018dc6:	4798      	blx	r3
90018dc8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90018dcc:	4418      	add	r0, r3
90018dce:	8a63      	ldrh	r3, [r4, #18]
90018dd0:	1a18      	subs	r0, r3, r0
90018dd2:	8260      	strh	r0, [r4, #18]
90018dd4:	b005      	add	sp, #20
90018dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018dda:	2300      	movs	r3, #0
90018ddc:	4611      	mov	r1, r2
90018dde:	4620      	mov	r0, r4
90018de0:	f7ff ff0f 	bl	90018c02 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90018de4:	e755      	b.n	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018de6:	4563      	cmp	r3, ip
90018de8:	dd14      	ble.n	90018e14 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90018dea:	b117      	cbz	r7, 90018df2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90018dec:	2301      	movs	r3, #1
90018dee:	460a      	mov	r2, r1
90018df0:	e772      	b.n	90018cd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90018df2:	2e00      	cmp	r6, #0
90018df4:	f43f af4d 	beq.w	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018df8:	2800      	cmp	r0, #0
90018dfa:	f47f af4a 	bne.w	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018dfe:	f1ba 0f00 	cmp.w	sl, #0
90018e02:	d002      	beq.n	90018e0a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90018e04:	2301      	movs	r3, #1
90018e06:	4642      	mov	r2, r8
90018e08:	e767      	b.n	90018cda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90018e0a:	8ae3      	ldrh	r3, [r4, #22]
90018e0c:	2b00      	cmp	r3, #0
90018e0e:	f43f af40 	beq.w	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018e12:	e7d5      	b.n	90018dc0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90018e14:	2800      	cmp	r0, #0
90018e16:	f47f af3c 	bne.w	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018e1a:	f1ba 0f00 	cmp.w	sl, #0
90018e1e:	f43f af38 	beq.w	90018c92 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018e22:	2301      	movs	r3, #1
90018e24:	4642      	mov	r2, r8
90018e26:	e7da      	b.n	90018dde <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90018e28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90018e28:	b5f0      	push	{r4, r5, r6, r7, lr}
90018e2a:	4605      	mov	r5, r0
90018e2c:	b08f      	sub	sp, #60	@ 0x3c
90018e2e:	4617      	mov	r7, r2
90018e30:	461c      	mov	r4, r3
90018e32:	460e      	mov	r6, r1
90018e34:	b1d1      	cbz	r1, 90018e6c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90018e36:	681b      	ldr	r3, [r3, #0]
90018e38:	4620      	mov	r0, r4
90018e3a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018e3c:	4798      	blx	r3
90018e3e:	4240      	negs	r0, r0
90018e40:	9603      	str	r6, [sp, #12]
90018e42:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90018e46:	b200      	sxth	r0, r0
90018e48:	9700      	str	r7, [sp, #0]
90018e4a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
90018e4e:	4629      	mov	r1, r5
90018e50:	e9cd 4001 	strd	r4, r0, [sp, #4]
90018e54:	2401      	movs	r4, #1
90018e56:	a805      	add	r0, sp, #20
90018e58:	f7ff fcaa 	bl	900187b0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90018e5c:	a805      	add	r0, sp, #20
90018e5e:	f7ff fee0 	bl	90018c22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90018e62:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90018e66:	b163      	cbz	r3, 90018e82 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90018e68:	3401      	adds	r4, #1
90018e6a:	e7f7      	b.n	90018e5c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90018e6c:	2401      	movs	r4, #1
90018e6e:	f003 f8d9 	bl	9001c024 <_ZN8touchgfx12TextProvider11getNextCharEv>
90018e72:	280a      	cmp	r0, #10
90018e74:	4628      	mov	r0, r5
90018e76:	bf08      	it	eq
90018e78:	3401      	addeq	r4, #1
90018e7a:	f003 f8d3 	bl	9001c024 <_ZN8touchgfx12TextProvider11getNextCharEv>
90018e7e:	2800      	cmp	r0, #0
90018e80:	d1f7      	bne.n	90018e72 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90018e82:	b2a0      	uxth	r0, r4
90018e84:	b00f      	add	sp, #60	@ 0x3c
90018e86:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018e88 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90018e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018e8c:	b0e3      	sub	sp, #396	@ 0x18c
90018e8e:	461c      	mov	r4, r3
90018e90:	4683      	mov	fp, r0
90018e92:	4688      	mov	r8, r1
90018e94:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
90018e96:	2b00      	cmp	r3, #0
90018e98:	f000 8112 	beq.w	900190c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018e9c:	6823      	ldr	r3, [r4, #0]
90018e9e:	2b00      	cmp	r3, #0
90018ea0:	f000 810e 	beq.w	900190c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018ea4:	7ba3      	ldrb	r3, [r4, #14]
90018ea6:	2b00      	cmp	r3, #0
90018ea8:	f000 810a 	beq.w	900190c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018eac:	ad0a      	add	r5, sp, #40	@ 0x28
90018eae:	6810      	ldr	r0, [r2, #0]
90018eb0:	6851      	ldr	r1, [r2, #4]
90018eb2:	462b      	mov	r3, r5
90018eb4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90018eb8:	c303      	stmia	r3!, {r0, r1}
90018eba:	2100      	movs	r1, #0
90018ebc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018ec0:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90018ec4:	4628      	mov	r0, r5
90018ec6:	910c      	str	r1, [sp, #48]	@ 0x30
90018ec8:	a90c      	add	r1, sp, #48	@ 0x30
90018eca:	79a2      	ldrb	r2, [r4, #6]
90018ecc:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90018ed0:	f7ff fced 	bl	900188ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90018ed4:	a90c      	add	r1, sp, #48	@ 0x30
90018ed6:	79a2      	ldrb	r2, [r4, #6]
90018ed8:	4608      	mov	r0, r1
90018eda:	f7ff fce8 	bl	900188ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90018ede:	a817      	add	r0, sp, #92	@ 0x5c
90018ee0:	f002 fc8c 	bl	9001b7fc <_ZN8touchgfx12TextProviderC1Ev>
90018ee4:	6820      	ldr	r0, [r4, #0]
90018ee6:	6803      	ldr	r3, [r0, #0]
90018ee8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018eea:	4798      	blx	r3
90018eec:	4606      	mov	r6, r0
90018eee:	6820      	ldr	r0, [r4, #0]
90018ef0:	6803      	ldr	r3, [r0, #0]
90018ef2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90018ef4:	4798      	blx	r3
90018ef6:	4633      	mov	r3, r6
90018ef8:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90018efa:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90018efc:	9000      	str	r0, [sp, #0]
90018efe:	a817      	add	r0, sp, #92	@ 0x5c
90018f00:	f002 fccf 	bl	9001b8a2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018f04:	6820      	ldr	r0, [r4, #0]
90018f06:	f894 a004 	ldrb.w	sl, [r4, #4]
90018f0a:	6803      	ldr	r3, [r0, #0]
90018f0c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018f0e:	4798      	blx	r3
90018f10:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90018f14:	6823      	ldr	r3, [r4, #0]
90018f16:	4607      	mov	r7, r0
90018f18:	4406      	add	r6, r0
90018f1a:	a830      	add	r0, sp, #192	@ 0xc0
90018f1c:	f893 9009 	ldrb.w	r9, [r3, #9]
90018f20:	f002 fc6c 	bl	9001b7fc <_ZN8touchgfx12TextProviderC1Ev>
90018f24:	7c23      	ldrb	r3, [r4, #16]
90018f26:	b17b      	cbz	r3, 90018f48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90018f28:	6820      	ldr	r0, [r4, #0]
90018f2a:	6803      	ldr	r3, [r0, #0]
90018f2c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018f2e:	4798      	blx	r3
90018f30:	9009      	str	r0, [sp, #36]	@ 0x24
90018f32:	6820      	ldr	r0, [r4, #0]
90018f34:	6802      	ldr	r2, [r0, #0]
90018f36:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90018f38:	4790      	blx	r2
90018f3a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018f3c:	9000      	str	r0, [sp, #0]
90018f3e:	a830      	add	r0, sp, #192	@ 0xc0
90018f40:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90018f42:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90018f44:	f002 fcad 	bl	9001b8a2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018f48:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90018f4c:	a80e      	add	r0, sp, #56	@ 0x38
90018f4e:	7be2      	ldrb	r2, [r4, #15]
90018f50:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90018f54:	1a8a      	subs	r2, r1, r2
90018f56:	7c21      	ldrb	r1, [r4, #16]
90018f58:	9103      	str	r1, [sp, #12]
90018f5a:	b292      	uxth	r2, r2
90018f5c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90018f60:	9102      	str	r1, [sp, #8]
90018f62:	6821      	ldr	r1, [r4, #0]
90018f64:	9101      	str	r1, [sp, #4]
90018f66:	7961      	ldrb	r1, [r4, #5]
90018f68:	9100      	str	r1, [sp, #0]
90018f6a:	a930      	add	r1, sp, #192	@ 0xc0
90018f6c:	f7ff fc20 	bl	900187b0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90018f70:	2e00      	cmp	r6, #0
90018f72:	dc5b      	bgt.n	9001902c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90018f74:	af17      	add	r7, sp, #92	@ 0x5c
90018f76:	f04f 0900 	mov.w	r9, #0
90018f7a:	7c23      	ldrb	r3, [r4, #16]
90018f7c:	2b00      	cmp	r3, #0
90018f7e:	f000 80b1 	beq.w	900190e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90018f82:	a80e      	add	r0, sp, #56	@ 0x38
90018f84:	f7ff fe4d 	bl	90018c22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90018f88:	f1ba 0f00 	cmp.w	sl, #0
90018f8c:	f000 80a5 	beq.w	900190da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90018f90:	7c23      	ldrb	r3, [r4, #16]
90018f92:	2264      	movs	r2, #100	@ 0x64
90018f94:	4639      	mov	r1, r7
90018f96:	a849      	add	r0, sp, #292	@ 0x124
90018f98:	9309      	str	r3, [sp, #36]	@ 0x24
90018f9a:	f013 fcf2 	bl	9002c982 <memcpy>
90018f9e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018fa0:	2b00      	cmp	r3, #0
90018fa2:	f000 80a7 	beq.w	900190f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90018fa6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90018faa:	7922      	ldrb	r2, [r4, #4]
90018fac:	2a01      	cmp	r2, #1
90018fae:	f040 808a 	bne.w	900190c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90018fb2:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90018fb6:	1ac0      	subs	r0, r0, r3
90018fb8:	2302      	movs	r3, #2
90018fba:	fb90 f0f3 	sdiv	r0, r0, r3
90018fbe:	b200      	sxth	r0, r0
90018fc0:	7c23      	ldrb	r3, [r4, #16]
90018fc2:	2b00      	cmp	r3, #0
90018fc4:	f000 808b 	beq.w	900190de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90018fc8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90018fcc:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90018fd0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90018fd4:	e9cd 2105 	strd	r2, r1, [sp, #20]
90018fd8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90018fdc:	2100      	movs	r1, #0
90018fde:	4410      	add	r0, r2
90018fe0:	4642      	mov	r2, r8
90018fe2:	b200      	sxth	r0, r0
90018fe4:	e9cd 9703 	strd	r9, r7, [sp, #12]
90018fe8:	9000      	str	r0, [sp, #0]
90018fea:	4658      	mov	r0, fp
90018fec:	e9cd 5401 	strd	r5, r4, [sp, #4]
90018ff0:	f7ff fc8e 	bl	90018910 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90018ff4:	2800      	cmp	r0, #0
90018ff6:	d163      	bne.n	900190c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018ff8:	b2b2      	uxth	r2, r6
90018ffa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90018ffe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90019002:	4413      	add	r3, r2
90019004:	1a8a      	subs	r2, r1, r2
90019006:	b21b      	sxth	r3, r3
90019008:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
9001900c:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90019010:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90019014:	2a00      	cmp	r2, #0
90019016:	d153      	bne.n	900190c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90019018:	6822      	ldr	r2, [r4, #0]
9001901a:	8869      	ldrh	r1, [r5, #2]
9001901c:	7a12      	ldrb	r2, [r2, #8]
9001901e:	1a9b      	subs	r3, r3, r2
90019020:	88ea      	ldrh	r2, [r5, #6]
90019022:	440a      	add	r2, r1
90019024:	b212      	sxth	r2, r2
90019026:	4293      	cmp	r3, r2
90019028:	dda7      	ble.n	90018f7a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
9001902a:	e049      	b.n	900190c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001902c:	7c23      	ldrb	r3, [r4, #16]
9001902e:	444f      	add	r7, r9
90019030:	b1c3      	cbz	r3, 90019064 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90019032:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90019036:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001903a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001903e:	443b      	add	r3, r7
90019040:	4293      	cmp	r3, r2
90019042:	da97      	bge.n	90018f74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90019044:	a80e      	add	r0, sp, #56	@ 0x38
90019046:	f7ff fdec 	bl	90018c22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001904a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
9001904e:	3b01      	subs	r3, #1
90019050:	b29b      	uxth	r3, r3
90019052:	454b      	cmp	r3, r9
90019054:	9309      	str	r3, [sp, #36]	@ 0x24
90019056:	d021      	beq.n	9001909c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90019058:	7961      	ldrb	r1, [r4, #5]
9001905a:	a817      	add	r0, sp, #92	@ 0x5c
9001905c:	f7ec faea 	bl	90005634 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019060:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90019062:	e7f4      	b.n	9001904e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90019064:	fa1f f986 	uxth.w	r9, r6
90019068:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001906c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90019070:	443b      	add	r3, r7
90019072:	4293      	cmp	r3, r2
90019074:	f6bf af7e 	bge.w	90018f74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90019078:	a817      	add	r0, sp, #92	@ 0x5c
9001907a:	f002 ffd3 	bl	9001c024 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001907e:	b1f8      	cbz	r0, 900190c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90019080:	280a      	cmp	r0, #10
90019082:	d1f1      	bne.n	90019068 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90019084:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90019088:	444b      	add	r3, r9
9001908a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001908e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90019092:	eba3 0309 	sub.w	r3, r3, r9
90019096:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001909a:	e7e5      	b.n	90019068 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
9001909c:	b2b3      	uxth	r3, r6
9001909e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
900190a2:	441a      	add	r2, r3
900190a4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
900190a8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
900190ac:	1ad3      	subs	r3, r2, r3
900190ae:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900190b2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900190b6:	b11b      	cbz	r3, 900190c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900190b8:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
900190bc:	2b00      	cmp	r3, #0
900190be:	d0ba      	beq.n	90019036 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
900190c0:	b063      	add	sp, #396	@ 0x18c
900190c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900190c6:	2a02      	cmp	r2, #2
900190c8:	d105      	bne.n	900190d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
900190ca:	7be2      	ldrb	r2, [r4, #15]
900190cc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
900190d0:	1a80      	subs	r0, r0, r2
900190d2:	1ac0      	subs	r0, r0, r3
900190d4:	e773      	b.n	90018fbe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
900190d6:	2000      	movs	r0, #0
900190d8:	e772      	b.n	90018fc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900190da:	7be0      	ldrb	r0, [r4, #15]
900190dc:	e770      	b.n	90018fc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900190de:	f647 72ff 	movw	r2, #32767	@ 0x7fff
900190e2:	e773      	b.n	90018fcc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
900190e4:	f1ba 0f00 	cmp.w	sl, #0
900190e8:	d0f7      	beq.n	900190da <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900190ea:	2264      	movs	r2, #100	@ 0x64
900190ec:	4639      	mov	r1, r7
900190ee:	a849      	add	r0, sp, #292	@ 0x124
900190f0:	f013 fc47 	bl	9002c982 <memcpy>
900190f4:	2300      	movs	r3, #0
900190f6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
900190fa:	6821      	ldr	r1, [r4, #0]
900190fc:	a849      	add	r0, sp, #292	@ 0x124
900190fe:	f7ff fb9a 	bl	90018836 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90019102:	b203      	sxth	r3, r0
90019104:	e751      	b.n	90018faa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90019106 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90019106:	2b03      	cmp	r3, #3
90019108:	d818      	bhi.n	9001913c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
9001910a:	e8df f003 	tbb	[pc, r3]
9001910e:	0602      	.short	0x0602
90019110:	130d      	.short	0x130d
90019112:	f9b0 2000 	ldrsh.w	r2, [r0]
90019116:	1850      	adds	r0, r2, r1
90019118:	4770      	bx	lr
9001911a:	8803      	ldrh	r3, [r0, #0]
9001911c:	8880      	ldrh	r0, [r0, #4]
9001911e:	4418      	add	r0, r3
90019120:	b200      	sxth	r0, r0
90019122:	1a80      	subs	r0, r0, r2
90019124:	3801      	subs	r0, #1
90019126:	4770      	bx	lr
90019128:	8803      	ldrh	r3, [r0, #0]
9001912a:	8880      	ldrh	r0, [r0, #4]
9001912c:	4418      	add	r0, r3
9001912e:	b200      	sxth	r0, r0
90019130:	1a40      	subs	r0, r0, r1
90019132:	e7f7      	b.n	90019124 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90019134:	f9b0 0000 	ldrsh.w	r0, [r0]
90019138:	4410      	add	r0, r2
9001913a:	4770      	bx	lr
9001913c:	2000      	movs	r0, #0
9001913e:	4770      	bx	lr

90019140 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90019140:	2b03      	cmp	r3, #3
90019142:	d817      	bhi.n	90019174 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90019144:	e8df f003 	tbb	[pc, r3]
90019148:	10090602 	.word	0x10090602
9001914c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90019150:	1850      	adds	r0, r2, r1
90019152:	4770      	bx	lr
90019154:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90019158:	e7fa      	b.n	90019150 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
9001915a:	8843      	ldrh	r3, [r0, #2]
9001915c:	88c0      	ldrh	r0, [r0, #6]
9001915e:	4418      	add	r0, r3
90019160:	b200      	sxth	r0, r0
90019162:	1a80      	subs	r0, r0, r2
90019164:	3801      	subs	r0, #1
90019166:	4770      	bx	lr
90019168:	8843      	ldrh	r3, [r0, #2]
9001916a:	88c0      	ldrh	r0, [r0, #6]
9001916c:	4418      	add	r0, r3
9001916e:	b200      	sxth	r0, r0
90019170:	1a40      	subs	r0, r0, r1
90019172:	e7f7      	b.n	90019164 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90019174:	2000      	movs	r0, #0
90019176:	4770      	bx	lr

90019178 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90019178:	4b01      	ldr	r3, [pc, #4]	@ (90019180 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
9001917a:	2200      	movs	r2, #0
9001917c:	601a      	str	r2, [r3, #0]
9001917e:	4770      	bx	lr
90019180:	240245b0 	.word	0x240245b0

90019184 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90019184:	4603      	mov	r3, r0
90019186:	b1c8      	cbz	r0, 900191bc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90019188:	0c02      	lsrs	r2, r0, #16
9001918a:	0412      	lsls	r2, r2, #16
9001918c:	b9a2      	cbnz	r2, 900191b8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
9001918e:	0403      	lsls	r3, r0, #16
90019190:	2010      	movs	r0, #16
90019192:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90019196:	bf04      	itt	eq
90019198:	021b      	lsleq	r3, r3, #8
9001919a:	3008      	addeq	r0, #8
9001919c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
900191a0:	bf04      	itt	eq
900191a2:	011b      	lsleq	r3, r3, #4
900191a4:	3004      	addeq	r0, #4
900191a6:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
900191aa:	bf04      	itt	eq
900191ac:	009b      	lsleq	r3, r3, #2
900191ae:	3002      	addeq	r0, #2
900191b0:	2b00      	cmp	r3, #0
900191b2:	db04      	blt.n	900191be <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
900191b4:	3001      	adds	r0, #1
900191b6:	4770      	bx	lr
900191b8:	2000      	movs	r0, #0
900191ba:	e7ea      	b.n	90019192 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
900191bc:	2020      	movs	r0, #32
900191be:	4770      	bx	lr

900191c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
900191c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900191c4:	b087      	sub	sp, #28
900191c6:	460d      	mov	r5, r1
900191c8:	4616      	mov	r6, r2
900191ca:	4698      	mov	r8, r3
900191cc:	4601      	mov	r1, r0
900191ce:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
900191d2:	b120      	cbz	r0, 900191de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900191d4:	b11a      	cbz	r2, 900191de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900191d6:	2d1f      	cmp	r5, #31
900191d8:	d801      	bhi.n	900191de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900191da:	2b1f      	cmp	r3, #31
900191dc:	d904      	bls.n	900191e8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
900191de:	2000      	movs	r0, #0
900191e0:	6038      	str	r0, [r7, #0]
900191e2:	b007      	add	sp, #28
900191e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900191e8:	b97d      	cbnz	r5, 9001920a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
900191ea:	b143      	cbz	r3, 900191fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
900191ec:	4602      	mov	r2, r0
900191ee:	462b      	mov	r3, r5
900191f0:	4641      	mov	r1, r8
900191f2:	4630      	mov	r0, r6
900191f4:	e9cd 4700 	strd	r4, r7, [sp]
900191f8:	f7ff ffe2 	bl	900191c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900191fc:	e7f1      	b.n	900191e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
900191fe:	f04f 33ff 	mov.w	r3, #4294967295
90019202:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90019206:	603b      	str	r3, [r7, #0]
90019208:	e7eb      	b.n	900191e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001920a:	fa32 fa05 	lsrs.w	sl, r2, r5
9001920e:	d106      	bne.n	9001921e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90019210:	4346      	muls	r6, r0
90019212:	fbb6 f0f4 	udiv	r0, r6, r4
90019216:	fb04 6610 	mls	r6, r4, r0, r6
9001921a:	603e      	str	r6, [r7, #0]
9001921c:	e7e1      	b.n	900191e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001921e:	2201      	movs	r2, #1
90019220:	fa00 fb05 	lsl.w	fp, r0, r5
90019224:	40aa      	lsls	r2, r5
90019226:	fbbb f9f4 	udiv	r9, fp, r4
9001922a:	3a01      	subs	r2, #1
9001922c:	fb0a f309 	mul.w	r3, sl, r9
90019230:	fb04 b919 	mls	r9, r4, r9, fp
90019234:	4016      	ands	r6, r2
90019236:	9303      	str	r3, [sp, #12]
90019238:	4630      	mov	r0, r6
9001923a:	f7ff ffa3 	bl	90019184 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001923e:	462b      	mov	r3, r5
90019240:	460a      	mov	r2, r1
90019242:	4601      	mov	r1, r0
90019244:	4630      	mov	r0, r6
90019246:	e9cd 4700 	strd	r4, r7, [sp]
9001924a:	f7ff ffb9 	bl	900191c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001924e:	4606      	mov	r6, r0
90019250:	4648      	mov	r0, r9
90019252:	eb05 0108 	add.w	r1, r5, r8
90019256:	f7ff ff95 	bl	90019184 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001925a:	ab05      	add	r3, sp, #20
9001925c:	464a      	mov	r2, r9
9001925e:	e9cd 4300 	strd	r4, r3, [sp]
90019262:	4603      	mov	r3, r0
90019264:	4650      	mov	r0, sl
90019266:	f7ff ffab 	bl	900191c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001926a:	6839      	ldr	r1, [r7, #0]
9001926c:	9a05      	ldr	r2, [sp, #20]
9001926e:	9b03      	ldr	r3, [sp, #12]
90019270:	4411      	add	r1, r2
90019272:	fbb1 f2f4 	udiv	r2, r1, r4
90019276:	18d3      	adds	r3, r2, r3
90019278:	fb04 1412 	mls	r4, r4, r2, r1
9001927c:	441e      	add	r6, r3
9001927e:	603c      	str	r4, [r7, #0]
90019280:	4430      	add	r0, r6
90019282:	e7ae      	b.n	900191e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90019284 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90019284:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019288:	b085      	sub	sp, #20
9001928a:	f1b0 0900 	subs.w	r9, r0, #0
9001928e:	461d      	mov	r5, r3
90019290:	4617      	mov	r7, r2
90019292:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90019294:	bfbb      	ittet	lt
90019296:	f1c9 0900 	rsblt	r9, r9, #0
9001929a:	f04f 36ff 	movlt.w	r6, #4294967295
9001929e:	2601      	movge	r6, #1
900192a0:	6823      	ldrlt	r3, [r4, #0]
900192a2:	bfbc      	itt	lt
900192a4:	425b      	neglt	r3, r3
900192a6:	6023      	strlt	r3, [r4, #0]
900192a8:	2a00      	cmp	r2, #0
900192aa:	da04      	bge.n	900192b6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
900192ac:	6823      	ldr	r3, [r4, #0]
900192ae:	4257      	negs	r7, r2
900192b0:	4276      	negs	r6, r6
900192b2:	425b      	negs	r3, r3
900192b4:	6023      	str	r3, [r4, #0]
900192b6:	2d00      	cmp	r5, #0
900192b8:	4638      	mov	r0, r7
900192ba:	bfba      	itte	lt
900192bc:	426d      	neglt	r5, r5
900192be:	f04f 38ff 	movlt.w	r8, #4294967295
900192c2:	f04f 0801 	movge.w	r8, #1
900192c6:	f7ff ff5d 	bl	90019184 <_ZN8touchgfx16TouchCalibration4clzuEm>
900192ca:	ab03      	add	r3, sp, #12
900192cc:	463a      	mov	r2, r7
900192ce:	e9cd 5300 	strd	r5, r3, [sp]
900192d2:	4603      	mov	r3, r0
900192d4:	4648      	mov	r0, r9
900192d6:	f7ff ff73 	bl	900191c0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900192da:	6823      	ldr	r3, [r4, #0]
900192dc:	9a03      	ldr	r2, [sp, #12]
900192de:	4546      	cmp	r6, r8
900192e0:	441a      	add	r2, r3
900192e2:	fb92 f3f5 	sdiv	r3, r2, r5
900192e6:	4418      	add	r0, r3
900192e8:	fb05 2313 	mls	r3, r5, r3, r2
900192ec:	bf18      	it	ne
900192ee:	4240      	negne	r0, r0
900192f0:	1c72      	adds	r2, r6, #1
900192f2:	6023      	str	r3, [r4, #0]
900192f4:	d105      	bne.n	90019302 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
900192f6:	2b00      	cmp	r3, #0
900192f8:	f1c3 0200 	rsb	r2, r3, #0
900192fc:	db0b      	blt.n	90019316 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
900192fe:	6022      	str	r2, [r4, #0]
90019300:	e006      	b.n	90019310 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90019302:	2e01      	cmp	r6, #1
90019304:	d104      	bne.n	90019310 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90019306:	2b00      	cmp	r3, #0
90019308:	da02      	bge.n	90019310 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001930a:	442b      	add	r3, r5
9001930c:	3801      	subs	r0, #1
9001930e:	6023      	str	r3, [r4, #0]
90019310:	b005      	add	sp, #20
90019312:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90019316:	3801      	subs	r0, #1
90019318:	1b52      	subs	r2, r2, r5
9001931a:	e7f0      	b.n	900192fe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

9001931c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
9001931c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90019320:	4c1c      	ldr	r4, [pc, #112]	@ (90019394 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90019322:	4605      	mov	r5, r0
90019324:	6807      	ldr	r7, [r0, #0]
90019326:	69a3      	ldr	r3, [r4, #24]
90019328:	b92b      	cbnz	r3, 90019336 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
9001932a:	6840      	ldr	r0, [r0, #4]
9001932c:	e9c5 7000 	strd	r7, r0, [r5]
90019330:	b004      	add	sp, #16
90019332:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90019336:	f04f 0802 	mov.w	r8, #2
9001933a:	68a2      	ldr	r2, [r4, #8]
9001933c:	ae04      	add	r6, sp, #16
9001933e:	6820      	ldr	r0, [r4, #0]
90019340:	fb93 f1f8 	sdiv	r1, r3, r8
90019344:	440a      	add	r2, r1
90019346:	69e1      	ldr	r1, [r4, #28]
90019348:	f846 2d04 	str.w	r2, [r6, #-4]!
9001934c:	463a      	mov	r2, r7
9001934e:	9600      	str	r6, [sp, #0]
90019350:	f7ff ff98 	bl	90019284 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90019354:	69a3      	ldr	r3, [r4, #24]
90019356:	4607      	mov	r7, r0
90019358:	686a      	ldr	r2, [r5, #4]
9001935a:	6a21      	ldr	r1, [r4, #32]
9001935c:	9600      	str	r6, [sp, #0]
9001935e:	6860      	ldr	r0, [r4, #4]
90019360:	f7ff ff90 	bl	90019284 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90019364:	69a3      	ldr	r3, [r4, #24]
90019366:	6962      	ldr	r2, [r4, #20]
90019368:	4407      	add	r7, r0
9001936a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9001936c:	9600      	str	r6, [sp, #0]
9001936e:	68e0      	ldr	r0, [r4, #12]
90019370:	fb93 f8f8 	sdiv	r8, r3, r8
90019374:	4442      	add	r2, r8
90019376:	9203      	str	r2, [sp, #12]
90019378:	682a      	ldr	r2, [r5, #0]
9001937a:	f7ff ff83 	bl	90019284 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001937e:	4680      	mov	r8, r0
90019380:	9600      	str	r6, [sp, #0]
90019382:	69a3      	ldr	r3, [r4, #24]
90019384:	686a      	ldr	r2, [r5, #4]
90019386:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90019388:	6920      	ldr	r0, [r4, #16]
9001938a:	f7ff ff7b 	bl	90019284 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001938e:	4440      	add	r0, r8
90019390:	e7cc      	b.n	9001932c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90019392:	bf00      	nop
90019394:	240245b4 	.word	0x240245b4

90019398 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90019398:	4b07      	ldr	r3, [pc, #28]	@ (900193b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
9001939a:	781b      	ldrb	r3, [r3, #0]
9001939c:	2b01      	cmp	r3, #1
9001939e:	d109      	bne.n	900193b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
900193a0:	f9b1 3000 	ldrsh.w	r3, [r1]
900193a4:	f9b0 2000 	ldrsh.w	r2, [r0]
900193a8:	8003      	strh	r3, [r0, #0]
900193aa:	4b04      	ldr	r3, [pc, #16]	@ (900193bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
900193ac:	881b      	ldrh	r3, [r3, #0]
900193ae:	3b01      	subs	r3, #1
900193b0:	1a9b      	subs	r3, r3, r2
900193b2:	800b      	strh	r3, [r1, #0]
900193b4:	4770      	bx	lr
900193b6:	bf00      	nop
900193b8:	24024596 	.word	0x24024596
900193bc:	24024592 	.word	0x24024592

900193c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
900193c0:	4b07      	ldr	r3, [pc, #28]	@ (900193e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
900193c2:	b510      	push	{r4, lr}
900193c4:	781b      	ldrb	r3, [r3, #0]
900193c6:	2b01      	cmp	r3, #1
900193c8:	d108      	bne.n	900193dc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
900193ca:	4b06      	ldr	r3, [pc, #24]	@ (900193e4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
900193cc:	880c      	ldrh	r4, [r1, #0]
900193ce:	881b      	ldrh	r3, [r3, #0]
900193d0:	f9b0 2000 	ldrsh.w	r2, [r0]
900193d4:	3b01      	subs	r3, #1
900193d6:	1b1b      	subs	r3, r3, r4
900193d8:	8003      	strh	r3, [r0, #0]
900193da:	800a      	strh	r2, [r1, #0]
900193dc:	bd10      	pop	{r4, pc}
900193de:	bf00      	nop
900193e0:	24024596 	.word	0x24024596
900193e4:	24024592 	.word	0x24024592

900193e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
900193e8:	4b0a      	ldr	r3, [pc, #40]	@ (90019414 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
900193ea:	b510      	push	{r4, lr}
900193ec:	781b      	ldrb	r3, [r3, #0]
900193ee:	2b01      	cmp	r3, #1
900193f0:	d10e      	bne.n	90019410 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
900193f2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900193f6:	8843      	ldrh	r3, [r0, #2]
900193f8:	f9b0 4000 	ldrsh.w	r4, [r0]
900193fc:	18ca      	adds	r2, r1, r3
900193fe:	4b06      	ldr	r3, [pc, #24]	@ (90019418 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90019400:	8044      	strh	r4, [r0, #2]
90019402:	881b      	ldrh	r3, [r3, #0]
90019404:	1a9b      	subs	r3, r3, r2
90019406:	8003      	strh	r3, [r0, #0]
90019408:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001940c:	8081      	strh	r1, [r0, #4]
9001940e:	80c3      	strh	r3, [r0, #6]
90019410:	bd10      	pop	{r4, pc}
90019412:	bf00      	nop
90019414:	24024596 	.word	0x24024596
90019418:	24024592 	.word	0x24024592

9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
9001941c:	4b08      	ldr	r3, [pc, #32]	@ (90019440 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
9001941e:	781b      	ldrb	r3, [r3, #0]
90019420:	2b01      	cmp	r3, #1
90019422:	d10c      	bne.n	9001943e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90019424:	8803      	ldrh	r3, [r0, #0]
90019426:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
9001942a:	8842      	ldrh	r2, [r0, #2]
9001942c:	8002      	strh	r2, [r0, #0]
9001942e:	185a      	adds	r2, r3, r1
90019430:	4b04      	ldr	r3, [pc, #16]	@ (90019444 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90019432:	881b      	ldrh	r3, [r3, #0]
90019434:	1a9b      	subs	r3, r3, r2
90019436:	8043      	strh	r3, [r0, #2]
90019438:	88c3      	ldrh	r3, [r0, #6]
9001943a:	80c1      	strh	r1, [r0, #6]
9001943c:	8083      	strh	r3, [r0, #4]
9001943e:	4770      	bx	lr
90019440:	24024596 	.word	0x24024596
90019444:	24024592 	.word	0x24024592

90019448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90019448:	4b07      	ldr	r3, [pc, #28]	@ (90019468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
9001944a:	b510      	push	{r4, lr}
9001944c:	781b      	ldrb	r3, [r3, #0]
9001944e:	2b01      	cmp	r3, #1
90019450:	d108      	bne.n	90019464 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90019452:	f9b1 3000 	ldrsh.w	r3, [r1]
90019456:	f9b0 4000 	ldrsh.w	r4, [r0]
9001945a:	8003      	strh	r3, [r0, #0]
9001945c:	8893      	ldrh	r3, [r2, #4]
9001945e:	3b01      	subs	r3, #1
90019460:	1b1b      	subs	r3, r3, r4
90019462:	800b      	strh	r3, [r1, #0]
90019464:	bd10      	pop	{r4, pc}
90019466:	bf00      	nop
90019468:	24024596 	.word	0x24024596

9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
9001946c:	4b0a      	ldr	r3, [pc, #40]	@ (90019498 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
9001946e:	460a      	mov	r2, r1
90019470:	b510      	push	{r4, lr}
90019472:	781b      	ldrb	r3, [r3, #0]
90019474:	2b01      	cmp	r3, #1
90019476:	d10d      	bne.n	90019494 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90019478:	8881      	ldrh	r1, [r0, #4]
9001947a:	8803      	ldrh	r3, [r0, #0]
9001947c:	440b      	add	r3, r1
9001947e:	4601      	mov	r1, r0
90019480:	3b01      	subs	r3, #1
90019482:	f821 3b02 	strh.w	r3, [r1], #2
90019486:	f7ff ffdf 	bl	90019448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
9001948a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001948e:	88c2      	ldrh	r2, [r0, #6]
90019490:	80c3      	strh	r3, [r0, #6]
90019492:	8082      	strh	r2, [r0, #4]
90019494:	bd10      	pop	{r4, pc}
90019496:	bf00      	nop
90019498:	24024596 	.word	0x24024596

9001949c <_ZN8touchgfx11Application19changeToStartScreenEv>:
9001949c:	4770      	bx	lr
	...

900194a0 <_ZN8touchgfx11Application13requestRedrawEv>:
900194a0:	4b06      	ldr	r3, [pc, #24]	@ (900194bc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
900194a2:	2100      	movs	r1, #0
900194a4:	f9b3 2000 	ldrsh.w	r2, [r3]
900194a8:	4b05      	ldr	r3, [pc, #20]	@ (900194c0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
900194aa:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
900194ae:	f9b3 3000 	ldrsh.w	r3, [r3]
900194b2:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
900194b6:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
900194ba:	4770      	bx	lr
900194bc:	24024592 	.word	0x24024592
900194c0:	24024594 	.word	0x24024594

900194c4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
900194c4:	4b03      	ldr	r3, [pc, #12]	@ (900194d4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
900194c6:	6818      	ldr	r0, [r3, #0]
900194c8:	b110      	cbz	r0, 900194d0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
900194ca:	6803      	ldr	r3, [r0, #0]
900194cc:	699b      	ldr	r3, [r3, #24]
900194ce:	4718      	bx	r3
900194d0:	4770      	bx	lr
900194d2:	bf00      	nop
900194d4:	240245e4 	.word	0x240245e4

900194d8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
900194d8:	4770      	bx	lr
	...

900194dc <_ZN8touchgfx11Application4drawEv>:
900194dc:	4b09      	ldr	r3, [pc, #36]	@ (90019504 <_ZN8touchgfx11Application4drawEv+0x28>)
900194de:	b507      	push	{r0, r1, r2, lr}
900194e0:	f9b3 2000 	ldrsh.w	r2, [r3]
900194e4:	2100      	movs	r1, #0
900194e6:	4b08      	ldr	r3, [pc, #32]	@ (90019508 <_ZN8touchgfx11Application4drawEv+0x2c>)
900194e8:	9100      	str	r1, [sp, #0]
900194ea:	4669      	mov	r1, sp
900194ec:	f9b3 3000 	ldrsh.w	r3, [r3]
900194f0:	f8ad 2004 	strh.w	r2, [sp, #4]
900194f4:	f8ad 3006 	strh.w	r3, [sp, #6]
900194f8:	6803      	ldr	r3, [r0, #0]
900194fa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900194fc:	4798      	blx	r3
900194fe:	b003      	add	sp, #12
90019500:	f85d fb04 	ldr.w	pc, [sp], #4
90019504:	24024592 	.word	0x24024592
90019508:	24024594 	.word	0x24024594

9001950c <_ZN8touchgfx11Application10invalidateEv>:
9001950c:	4b09      	ldr	r3, [pc, #36]	@ (90019534 <_ZN8touchgfx11Application10invalidateEv+0x28>)
9001950e:	b082      	sub	sp, #8
90019510:	2100      	movs	r1, #0
90019512:	f9b3 2000 	ldrsh.w	r2, [r3]
90019516:	4b08      	ldr	r3, [pc, #32]	@ (90019538 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90019518:	f8ad 2004 	strh.w	r2, [sp, #4]
9001951c:	aa02      	add	r2, sp, #8
9001951e:	f9b3 3000 	ldrsh.w	r3, [r3]
90019522:	9100      	str	r1, [sp, #0]
90019524:	f8ad 3006 	strh.w	r3, [sp, #6]
90019528:	6803      	ldr	r3, [r0, #0]
9001952a:	e912 0006 	ldmdb	r2, {r1, r2}
9001952e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90019530:	b002      	add	sp, #8
90019532:	4718      	bx	r3
90019534:	24024592 	.word	0x24024592
90019538:	24024594 	.word	0x24024594

9001953c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
9001953c:	4b03      	ldr	r3, [pc, #12]	@ (9001954c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
9001953e:	6818      	ldr	r0, [r3, #0]
90019540:	b110      	cbz	r0, 90019548 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90019542:	6803      	ldr	r3, [r0, #0]
90019544:	69db      	ldr	r3, [r3, #28]
90019546:	4718      	bx	r3
90019548:	4770      	bx	lr
9001954a:	bf00      	nop
9001954c:	240245e4 	.word	0x240245e4

90019550 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90019550:	4b03      	ldr	r3, [pc, #12]	@ (90019560 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90019552:	6818      	ldr	r0, [r3, #0]
90019554:	b110      	cbz	r0, 9001955c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90019556:	6803      	ldr	r3, [r0, #0]
90019558:	6a1b      	ldr	r3, [r3, #32]
9001955a:	4718      	bx	r3
9001955c:	4770      	bx	lr
9001955e:	bf00      	nop
90019560:	240245e4 	.word	0x240245e4

90019564 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90019564:	2300      	movs	r3, #0
90019566:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
9001956a:	4770      	bx	lr

9001956c <_ZN8touchgfx11Application14handleKeyEventEh>:
9001956c:	4b03      	ldr	r3, [pc, #12]	@ (9001957c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
9001956e:	6818      	ldr	r0, [r3, #0]
90019570:	b110      	cbz	r0, 90019578 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90019572:	6803      	ldr	r3, [r0, #0]
90019574:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90019576:	4718      	bx	r3
90019578:	4770      	bx	lr
9001957a:	bf00      	nop
9001957c:	240245e4 	.word	0x240245e4

90019580 <_ZN8touchgfx11ApplicationD1Ev>:
90019580:	4770      	bx	lr

90019582 <_ZN8touchgfx11ApplicationD0Ev>:
90019582:	b510      	push	{r4, lr}
90019584:	4604      	mov	r4, r0
90019586:	f44f 719e 	mov.w	r1, #316	@ 0x13c
9001958a:	f012 fb06 	bl	9002bb9a <_ZdlPvj>
9001958e:	4620      	mov	r0, r4
90019590:	bd10      	pop	{r4, pc}

90019592 <_ZN8touchgfx4Rect10restrictToEss>:
90019592:	f9b0 3000 	ldrsh.w	r3, [r0]
90019596:	2b00      	cmp	r3, #0
90019598:	b510      	push	{r4, lr}
9001959a:	da04      	bge.n	900195a6 <_ZN8touchgfx4Rect10restrictToEss+0x14>
9001959c:	8884      	ldrh	r4, [r0, #4]
9001959e:	4423      	add	r3, r4
900195a0:	8083      	strh	r3, [r0, #4]
900195a2:	2300      	movs	r3, #0
900195a4:	8003      	strh	r3, [r0, #0]
900195a6:	f9b0 4000 	ldrsh.w	r4, [r0]
900195aa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900195ae:	1b09      	subs	r1, r1, r4
900195b0:	428b      	cmp	r3, r1
900195b2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
900195b6:	bfc8      	it	gt
900195b8:	8081      	strhgt	r1, [r0, #4]
900195ba:	2b00      	cmp	r3, #0
900195bc:	da04      	bge.n	900195c8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
900195be:	88c1      	ldrh	r1, [r0, #6]
900195c0:	440b      	add	r3, r1
900195c2:	80c3      	strh	r3, [r0, #6]
900195c4:	2300      	movs	r3, #0
900195c6:	8043      	strh	r3, [r0, #2]
900195c8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
900195cc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
900195d0:	1a52      	subs	r2, r2, r1
900195d2:	4293      	cmp	r3, r2
900195d4:	bfc8      	it	gt
900195d6:	80c2      	strhgt	r2, [r0, #6]
900195d8:	bd10      	pop	{r4, pc}
	...

900195dc <_ZN8touchgfx11Application4drawERNS_4RectE>:
900195dc:	4b10      	ldr	r3, [pc, #64]	@ (90019620 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
900195de:	b510      	push	{r4, lr}
900195e0:	460c      	mov	r4, r1
900195e2:	f9b3 2000 	ldrsh.w	r2, [r3]
900195e6:	4b0f      	ldr	r3, [pc, #60]	@ (90019624 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
900195e8:	4620      	mov	r0, r4
900195ea:	f9b3 1000 	ldrsh.w	r1, [r3]
900195ee:	f7ff ffd0 	bl	90019592 <_ZN8touchgfx4Rect10restrictToEss>
900195f2:	4b0d      	ldr	r3, [pc, #52]	@ (90019628 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
900195f4:	6818      	ldr	r0, [r3, #0]
900195f6:	b190      	cbz	r0, 9001961e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
900195f8:	6803      	ldr	r3, [r0, #0]
900195fa:	4621      	mov	r1, r4
900195fc:	689b      	ldr	r3, [r3, #8]
900195fe:	4798      	blx	r3
90019600:	4b0a      	ldr	r3, [pc, #40]	@ (9001962c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90019602:	6818      	ldr	r0, [r3, #0]
90019604:	b118      	cbz	r0, 9001960e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90019606:	6803      	ldr	r3, [r0, #0]
90019608:	4621      	mov	r1, r4
9001960a:	689b      	ldr	r3, [r3, #8]
9001960c:	4798      	blx	r3
9001960e:	4b08      	ldr	r3, [pc, #32]	@ (90019630 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90019610:	4621      	mov	r1, r4
90019612:	6818      	ldr	r0, [r3, #0]
90019614:	6803      	ldr	r3, [r0, #0]
90019616:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001961a:	69db      	ldr	r3, [r3, #28]
9001961c:	4718      	bx	r3
9001961e:	bd10      	pop	{r4, pc}
90019620:	24024594 	.word	0x24024594
90019624:	24024592 	.word	0x24024592
90019628:	240245e4 	.word	0x240245e4
9001962c:	240245e0 	.word	0x240245e0
90019630:	240245a0 	.word	0x240245a0

90019634 <_ZNK8touchgfx4Rect8includesERKS0_>:
90019634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019636:	4606      	mov	r6, r0
90019638:	4608      	mov	r0, r1
9001963a:	460f      	mov	r7, r1
9001963c:	f7f9 ffb5 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
90019640:	b9e8      	cbnz	r0, 9001967e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90019642:	f9b7 5000 	ldrsh.w	r5, [r7]
90019646:	f9b6 4000 	ldrsh.w	r4, [r6]
9001964a:	42a5      	cmp	r5, r4
9001964c:	db17      	blt.n	9001967e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001964e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90019652:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90019656:	429a      	cmp	r2, r3
90019658:	db11      	blt.n	9001967e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001965a:	88b9      	ldrh	r1, [r7, #4]
9001965c:	440d      	add	r5, r1
9001965e:	88b1      	ldrh	r1, [r6, #4]
90019660:	440c      	add	r4, r1
90019662:	b22d      	sxth	r5, r5
90019664:	b224      	sxth	r4, r4
90019666:	42a5      	cmp	r5, r4
90019668:	dc09      	bgt.n	9001967e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001966a:	88f8      	ldrh	r0, [r7, #6]
9001966c:	4410      	add	r0, r2
9001966e:	88f2      	ldrh	r2, [r6, #6]
90019670:	4413      	add	r3, r2
90019672:	b200      	sxth	r0, r0
90019674:	b21b      	sxth	r3, r3
90019676:	4298      	cmp	r0, r3
90019678:	bfcc      	ite	gt
9001967a:	2000      	movgt	r0, #0
9001967c:	2001      	movle	r0, #1
9001967e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90019680 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90019680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019682:	4604      	mov	r4, r0
90019684:	4608      	mov	r0, r1
90019686:	460d      	mov	r5, r1
90019688:	f7f9 ff8f 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
9001968c:	b978      	cbnz	r0, 900196ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001968e:	4620      	mov	r0, r4
90019690:	f7f9 ff8b 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
90019694:	f9b5 6000 	ldrsh.w	r6, [r5]
90019698:	b150      	cbz	r0, 900196b0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
9001969a:	8026      	strh	r6, [r4, #0]
9001969c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900196a0:	8063      	strh	r3, [r4, #2]
900196a2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
900196a6:	80a3      	strh	r3, [r4, #4]
900196a8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900196ac:	80e3      	strh	r3, [r4, #6]
900196ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900196b0:	f9b4 1000 	ldrsh.w	r1, [r4]
900196b4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900196b8:	42b1      	cmp	r1, r6
900196ba:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
900196be:	f8b5 c004 	ldrh.w	ip, [r5, #4]
900196c2:	460f      	mov	r7, r1
900196c4:	88ed      	ldrh	r5, [r5, #6]
900196c6:	bfa8      	it	ge
900196c8:	4637      	movge	r7, r6
900196ca:	4293      	cmp	r3, r2
900196cc:	4618      	mov	r0, r3
900196ce:	4466      	add	r6, ip
900196d0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900196d4:	bfa8      	it	ge
900196d6:	4610      	movge	r0, r2
900196d8:	442a      	add	r2, r5
900196da:	88e5      	ldrh	r5, [r4, #6]
900196dc:	4461      	add	r1, ip
900196de:	b236      	sxth	r6, r6
900196e0:	8027      	strh	r7, [r4, #0]
900196e2:	442b      	add	r3, r5
900196e4:	b209      	sxth	r1, r1
900196e6:	b212      	sxth	r2, r2
900196e8:	8060      	strh	r0, [r4, #2]
900196ea:	b21b      	sxth	r3, r3
900196ec:	428e      	cmp	r6, r1
900196ee:	bfac      	ite	ge
900196f0:	ebc7 0106 	rsbge	r1, r7, r6
900196f4:	ebc7 0101 	rsblt	r1, r7, r1
900196f8:	429a      	cmp	r2, r3
900196fa:	bfac      	ite	ge
900196fc:	ebc0 0202 	rsbge	r2, r0, r2
90019700:	ebc0 0203 	rsblt	r2, r0, r3
90019704:	80a1      	strh	r1, [r4, #4]
90019706:	80e2      	strh	r2, [r4, #6]
90019708:	e7d1      	b.n	900196ae <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

9001970c <_ZN8touchgfx11Application11getInstanceEv>:
9001970c:	4b01      	ldr	r3, [pc, #4]	@ (90019714 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001970e:	6818      	ldr	r0, [r3, #0]
90019710:	4770      	bx	lr
90019712:	bf00      	nop
90019714:	240245f4 	.word	0x240245f4

90019718 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90019718:	2300      	movs	r3, #0
9001971a:	b510      	push	{r4, lr}
9001971c:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
90019720:	4604      	mov	r4, r0
90019722:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90019726:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
9001972a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
9001972e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
90019732:	429a      	cmp	r2, r3
90019734:	d90e      	bls.n	90019754 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90019736:	18e2      	adds	r2, r4, r3
90019738:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
9001973c:	b122      	cbz	r2, 90019748 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
9001973e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90019742:	6803      	ldr	r3, [r0, #0]
90019744:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90019746:	4798      	blx	r3
90019748:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
9001974c:	3301      	adds	r3, #1
9001974e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90019752:	e7ea      	b.n	9001972a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90019754:	bd10      	pop	{r4, pc}

90019756 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90019756:	2300      	movs	r3, #0
90019758:	f100 0284 	add.w	r2, r0, #132	@ 0x84
9001975c:	30a4      	adds	r0, #164	@ 0xa4
9001975e:	f820 3c24 	strh.w	r3, [r0, #-36]
90019762:	f802 3b01 	strb.w	r3, [r2], #1
90019766:	4282      	cmp	r2, r0
90019768:	d1fb      	bne.n	90019762 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
9001976a:	4770      	bx	lr

9001976c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
9001976c:	b570      	push	{r4, r5, r6, lr}
9001976e:	4c0b      	ldr	r4, [pc, #44]	@ (9001979c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90019770:	4605      	mov	r5, r0
90019772:	460e      	mov	r6, r1
90019774:	6820      	ldr	r0, [r4, #0]
90019776:	b110      	cbz	r0, 9001977e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90019778:	6803      	ldr	r3, [r0, #0]
9001977a:	695b      	ldr	r3, [r3, #20]
9001977c:	4798      	blx	r3
9001977e:	1d28      	adds	r0, r5, #4
90019780:	f7ff ffe9 	bl	90019756 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90019784:	6026      	str	r6, [r4, #0]
90019786:	6833      	ldr	r3, [r6, #0]
90019788:	4630      	mov	r0, r6
9001978a:	68db      	ldr	r3, [r3, #12]
9001978c:	4798      	blx	r3
9001978e:	682b      	ldr	r3, [r5, #0]
90019790:	4628      	mov	r0, r5
90019792:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019794:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019798:	4718      	bx	r3
9001979a:	bf00      	nop
9001979c:	240245e4 	.word	0x240245e4

900197a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
900197a0:	2300      	movs	r3, #0
900197a2:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
900197a6:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
900197aa:	461a      	mov	r2, r3
900197ac:	b5f0      	push	{r4, r5, r6, r7, lr}
900197ae:	461c      	mov	r4, r3
900197b0:	461d      	mov	r5, r3
900197b2:	459c      	cmp	ip, r3
900197b4:	dd1a      	ble.n	900197ec <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
900197b6:	18c6      	adds	r6, r0, r3
900197b8:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
900197bc:	b16e      	cbz	r6, 900197da <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
900197be:	429a      	cmp	r2, r3
900197c0:	d008      	beq.n	900197d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
900197c2:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
900197c6:	fa1f fe82 	uxth.w	lr, r2
900197ca:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
900197ce:	1887      	adds	r7, r0, r2
900197d0:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
900197d4:	3201      	adds	r2, #1
900197d6:	3301      	adds	r3, #1
900197d8:	e7eb      	b.n	900197b2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
900197da:	4299      	cmp	r1, r3
900197dc:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
900197e0:	bfa8      	it	ge
900197e2:	3501      	addge	r5, #1
900197e4:	429e      	cmp	r6, r3
900197e6:	bfc8      	it	gt
900197e8:	3401      	addgt	r4, #1
900197ea:	e7f4      	b.n	900197d6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
900197ec:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
900197f0:	1b49      	subs	r1, r1, r5
900197f2:	1b1b      	subs	r3, r3, r4
900197f4:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
900197f8:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900197fc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90019800:	4293      	cmp	r3, r2
90019802:	dd03      	ble.n	9001980c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90019804:	3b01      	subs	r3, #1
90019806:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
9001980a:	e7f7      	b.n	900197fc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
9001980c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90019810 <_ZN8touchgfx11Application15handleTickEventEv>:
90019810:	b570      	push	{r4, r5, r6, lr}
90019812:	4d16      	ldr	r5, [pc, #88]	@ (9001986c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90019814:	4604      	mov	r4, r0
90019816:	6828      	ldr	r0, [r5, #0]
90019818:	b140      	cbz	r0, 9001982c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001981a:	7a03      	ldrb	r3, [r0, #8]
9001981c:	b933      	cbnz	r3, 9001982c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001981e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90019822:	6803      	ldr	r3, [r0, #0]
90019824:	689b      	ldr	r3, [r3, #8]
90019826:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001982a:	4718      	bx	r3
9001982c:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
90019830:	4e0f      	ldr	r6, [pc, #60]	@ (90019870 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90019832:	b973      	cbnz	r3, 90019852 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90019834:	b168      	cbz	r0, 90019852 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90019836:	7a03      	ldrb	r3, [r0, #8]
90019838:	b15b      	cbz	r3, 90019852 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
9001983a:	6830      	ldr	r0, [r6, #0]
9001983c:	b110      	cbz	r0, 90019844 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
9001983e:	6803      	ldr	r3, [r0, #0]
90019840:	691b      	ldr	r3, [r3, #16]
90019842:	4798      	blx	r3
90019844:	6828      	ldr	r0, [r5, #0]
90019846:	6803      	ldr	r3, [r0, #0]
90019848:	68db      	ldr	r3, [r3, #12]
9001984a:	4798      	blx	r3
9001984c:	2301      	movs	r3, #1
9001984e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90019852:	3404      	adds	r4, #4
90019854:	4620      	mov	r0, r4
90019856:	f7ff ff5f 	bl	90019718 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
9001985a:	4620      	mov	r0, r4
9001985c:	f7ff ffa0 	bl	900197a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90019860:	6830      	ldr	r0, [r6, #0]
90019862:	b110      	cbz	r0, 9001986a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90019864:	6803      	ldr	r3, [r0, #0]
90019866:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90019868:	e7dd      	b.n	90019826 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
9001986a:	bd70      	pop	{r4, r5, r6, pc}
9001986c:	240245e8 	.word	0x240245e8
90019870:	240245e4 	.word	0x240245e4

90019874 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90019874:	4603      	mov	r3, r0
90019876:	f100 0140 	add.w	r1, r0, #64	@ 0x40
9001987a:	2200      	movs	r2, #0
9001987c:	801a      	strh	r2, [r3, #0]
9001987e:	3308      	adds	r3, #8
90019880:	f823 2c06 	strh.w	r2, [r3, #-6]
90019884:	f823 2c04 	strh.w	r2, [r3, #-4]
90019888:	f823 2c02 	strh.w	r2, [r3, #-2]
9001988c:	428b      	cmp	r3, r1
9001988e:	d1f5      	bne.n	9001987c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90019890:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90019894:	4770      	bx	lr
	...

90019898 <_ZN8touchgfx11ApplicationC1Ev>:
90019898:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001989a:	4b1d      	ldr	r3, [pc, #116]	@ (90019910 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
9001989c:	4606      	mov	r6, r0
9001989e:	4604      	mov	r4, r0
900198a0:	2500      	movs	r5, #0
900198a2:	f846 3b04 	str.w	r3, [r6], #4
900198a6:	22a8      	movs	r2, #168	@ 0xa8
900198a8:	2100      	movs	r1, #0
900198aa:	4630      	mov	r0, r6
900198ac:	f012 ff88 	bl	9002c7c0 <memset>
900198b0:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
900198b4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900198b8:	4f16      	ldr	r7, [pc, #88]	@ (90019914 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900198ba:	f7ff ffdb 	bl	90019874 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900198be:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
900198c2:	f7ff ffd7 	bl	90019874 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900198c6:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
900198ca:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
900198ce:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
900198d2:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
900198d6:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
900198da:	490f      	ldr	r1, [pc, #60]	@ (90019918 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
900198dc:	480f      	ldr	r0, [pc, #60]	@ (9001991c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
900198de:	f011 f965 	bl	9002abac <CRC_Lock>
900198e2:	4b0f      	ldr	r3, [pc, #60]	@ (90019920 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
900198e4:	b158      	cbz	r0, 900198fe <_ZN8touchgfx11ApplicationC1Ev+0x66>
900198e6:	801d      	strh	r5, [r3, #0]
900198e8:	2300      	movs	r3, #0
900198ea:	4a0e      	ldr	r2, [pc, #56]	@ (90019924 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
900198ec:	4630      	mov	r0, r6
900198ee:	6013      	str	r3, [r2, #0]
900198f0:	4a0d      	ldr	r2, [pc, #52]	@ (90019928 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
900198f2:	603b      	str	r3, [r7, #0]
900198f4:	6013      	str	r3, [r2, #0]
900198f6:	f7ff ff2e 	bl	90019756 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900198fa:	4620      	mov	r0, r4
900198fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900198fe:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90019902:	2002      	movs	r0, #2
90019904:	801a      	strh	r2, [r3, #0]
90019906:	6038      	str	r0, [r7, #0]
90019908:	f001 fdfe 	bl	9001b508 <_ZN8touchgfx6Screen4drawEv>
9001990c:	e7ec      	b.n	900198e8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
9001990e:	bf00      	nop
90019910:	90030534 	.word	0x90030534
90019914:	240245e4 	.word	0x240245e4
90019918:	b5e8b5cd 	.word	0xb5e8b5cd
9001991c:	f407a5c2 	.word	0xf407a5c2
90019920:	240002ac 	.word	0x240002ac
90019924:	240245f4 	.word	0x240245f4
90019928:	240245e8 	.word	0x240245e8

9001992c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
9001992c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
90019930:	3b01      	subs	r3, #1
90019932:	b29b      	uxth	r3, r3
90019934:	428b      	cmp	r3, r1
90019936:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
9001993a:	b510      	push	{r4, lr}
9001993c:	d908      	bls.n	90019950 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001993e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90019942:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90019946:	681a      	ldr	r2, [r3, #0]
90019948:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
9001994c:	685a      	ldr	r2, [r3, #4]
9001994e:	6062      	str	r2, [r4, #4]
90019950:	bd10      	pop	{r4, pc}
	...

90019954 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90019954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019958:	b08f      	sub	sp, #60	@ 0x3c
9001995a:	4b8f      	ldr	r3, [pc, #572]	@ (90019b98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
9001995c:	4683      	mov	fp, r0
9001995e:	ac0a      	add	r4, sp, #40	@ 0x28
90019960:	e884 0006 	stmia.w	r4, {r1, r2}
90019964:	f9b3 2000 	ldrsh.w	r2, [r3]
90019968:	4620      	mov	r0, r4
9001996a:	4b8c      	ldr	r3, [pc, #560]	@ (90019b9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
9001996c:	f9b3 1000 	ldrsh.w	r1, [r3]
90019970:	f7ff fe0f 	bl	90019592 <_ZN8touchgfx4Rect10restrictToEss>
90019974:	4620      	mov	r0, r4
90019976:	f7f9 fe18 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
9001997a:	2800      	cmp	r0, #0
9001997c:	d16a      	bne.n	90019a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001997e:	9403      	str	r4, [sp, #12]
90019980:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90019984:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90019988:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
9001998c:	9301      	str	r3, [sp, #4]
9001998e:	35a4      	adds	r5, #164	@ 0xa4
90019990:	b15c      	cbz	r4, 900199aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
90019992:	4629      	mov	r1, r5
90019994:	9803      	ldr	r0, [sp, #12]
90019996:	f7ff fe4d 	bl	90019634 <_ZNK8touchgfx4Rect8includesERKS0_>
9001999a:	3c01      	subs	r4, #1
9001999c:	b118      	cbz	r0, 900199a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001999e:	b2a1      	uxth	r1, r4
900199a0:	9801      	ldr	r0, [sp, #4]
900199a2:	f7ff ffc3 	bl	9001992c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900199a6:	3d08      	subs	r5, #8
900199a8:	e7f2      	b.n	90019990 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
900199aa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
900199ae:	f10a 33ff 	add.w	r3, sl, #4294967295
900199b2:	f8cd a010 	str.w	sl, [sp, #16]
900199b6:	9302      	str	r3, [sp, #8]
900199b8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900199bc:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
900199c0:	9306      	str	r3, [sp, #24]
900199c2:	445c      	add	r4, fp
900199c4:	2500      	movs	r5, #0
900199c6:	4626      	mov	r6, r4
900199c8:	f8cd a014 	str.w	sl, [sp, #20]
900199cc:	462f      	mov	r7, r5
900199ce:	9b05      	ldr	r3, [sp, #20]
900199d0:	2b00      	cmp	r3, #0
900199d2:	d073      	beq.n	90019abc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
900199d4:	9903      	ldr	r1, [sp, #12]
900199d6:	4630      	mov	r0, r6
900199d8:	f7fd f836 	bl	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_>
900199dc:	b350      	cbz	r0, 90019a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900199de:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
900199e2:	f9b6 c000 	ldrsh.w	ip, [r6]
900199e6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
900199ea:	45e6      	cmp	lr, ip
900199ec:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900199f0:	db33      	blt.n	90019a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900199f2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900199f6:	88b3      	ldrh	r3, [r6, #4]
900199f8:	4472      	add	r2, lr
900199fa:	4463      	add	r3, ip
900199fc:	b212      	sxth	r2, r2
900199fe:	b21b      	sxth	r3, r3
90019a00:	429a      	cmp	r2, r3
90019a02:	dc2a      	bgt.n	90019a5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90019a04:	fa1f f289 	uxth.w	r2, r9
90019a08:	88f3      	ldrh	r3, [r6, #6]
90019a0a:	45c8      	cmp	r8, r9
90019a0c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90019a10:	4413      	add	r3, r2
90019a12:	fa1f fc88 	uxth.w	ip, r8
90019a16:	b29b      	uxth	r3, r3
90019a18:	fa0f fe83 	sxth.w	lr, r3
90019a1c:	db0f      	blt.n	90019a3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90019a1e:	eba3 030c 	sub.w	r3, r3, ip
90019a22:	1ac9      	subs	r1, r1, r3
90019a24:	b209      	sxth	r1, r1
90019a26:	2900      	cmp	r1, #0
90019a28:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90019a2c:	dd12      	ble.n	90019a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90019a2e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
90019a32:	4605      	mov	r5, r0
90019a34:	9b05      	ldr	r3, [sp, #20]
90019a36:	3e08      	subs	r6, #8
90019a38:	3b01      	subs	r3, #1
90019a3a:	9305      	str	r3, [sp, #20]
90019a3c:	e7c7      	b.n	900199ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
90019a3e:	4461      	add	r1, ip
90019a40:	b209      	sxth	r1, r1
90019a42:	4571      	cmp	r1, lr
90019a44:	dc38      	bgt.n	90019ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90019a46:	eba2 020c 	sub.w	r2, r2, ip
90019a4a:	b212      	sxth	r2, r2
90019a4c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90019a50:	2a00      	cmp	r2, #0
90019a52:	dcee      	bgt.n	90019a32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90019a54:	b00f      	add	sp, #60	@ 0x3c
90019a56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019a5a:	45c8      	cmp	r8, r9
90019a5c:	db2c      	blt.n	90019ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90019a5e:	88f3      	ldrh	r3, [r6, #6]
90019a60:	4499      	add	r9, r3
90019a62:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90019a66:	4498      	add	r8, r3
90019a68:	fa0f f989 	sxth.w	r9, r9
90019a6c:	fa0f f888 	sxth.w	r8, r8
90019a70:	45c1      	cmp	r9, r8
90019a72:	db21      	blt.n	90019ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90019a74:	fa1f f28c 	uxth.w	r2, ip
90019a78:	88b3      	ldrh	r3, [r6, #4]
90019a7a:	45e6      	cmp	lr, ip
90019a7c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90019a80:	4413      	add	r3, r2
90019a82:	fa1f f88e 	uxth.w	r8, lr
90019a86:	b29b      	uxth	r3, r3
90019a88:	fa0f f983 	sxth.w	r9, r3
90019a8c:	db0a      	blt.n	90019aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
90019a8e:	eba3 0308 	sub.w	r3, r3, r8
90019a92:	1ac9      	subs	r1, r1, r3
90019a94:	b209      	sxth	r1, r1
90019a96:	2900      	cmp	r1, #0
90019a98:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90019a9c:	ddda      	ble.n	90019a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90019a9e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90019aa2:	e7c6      	b.n	90019a32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90019aa4:	4441      	add	r1, r8
90019aa6:	b209      	sxth	r1, r1
90019aa8:	4549      	cmp	r1, r9
90019aaa:	dc05      	bgt.n	90019ab8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90019aac:	eba2 0208 	sub.w	r2, r2, r8
90019ab0:	b212      	sxth	r2, r2
90019ab2:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90019ab6:	e7cb      	b.n	90019a50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90019ab8:	4607      	mov	r7, r0
90019aba:	e7bb      	b.n	90019a34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90019abc:	2d00      	cmp	r5, #0
90019abe:	d181      	bne.n	900199c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
90019ac0:	2f00      	cmp	r7, #0
90019ac2:	f000 81dd 	beq.w	90019e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90019ac6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
90019aca:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
90019ace:	b2b3      	uxth	r3, r6
90019ad0:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90019ad4:	9305      	str	r3, [sp, #20]
90019ad6:	9a05      	ldr	r2, [sp, #20]
90019ad8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90019adc:	4413      	add	r3, r2
90019ade:	b2ba      	uxth	r2, r7
90019ae0:	4492      	add	sl, r2
90019ae2:	b29b      	uxth	r3, r3
90019ae4:	fa1f fa8a 	uxth.w	sl, sl
90019ae8:	fa0f f883 	sxth.w	r8, r3
90019aec:	fa0f f98a 	sxth.w	r9, sl
90019af0:	e9cd 2307 	strd	r2, r3, [sp, #28]
90019af4:	9b04      	ldr	r3, [sp, #16]
90019af6:	2b00      	cmp	r3, #0
90019af8:	d052      	beq.n	90019ba0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90019afa:	9903      	ldr	r1, [sp, #12]
90019afc:	4620      	mov	r0, r4
90019afe:	f7fc ffa3 	bl	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_>
90019b02:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90019b06:	b1c0      	cbz	r0, 90019b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90019b08:	f9b4 e000 	ldrsh.w	lr, [r4]
90019b0c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90019b10:	4576      	cmp	r6, lr
90019b12:	dc22      	bgt.n	90019b5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90019b14:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90019b18:	44f4      	add	ip, lr
90019b1a:	fa0f fc8c 	sxth.w	ip, ip
90019b1e:	45e0      	cmp	r8, ip
90019b20:	db1b      	blt.n	90019b5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90019b22:	428f      	cmp	r7, r1
90019b24:	fa1f fc81 	uxth.w	ip, r1
90019b28:	88e1      	ldrh	r1, [r4, #6]
90019b2a:	dc0d      	bgt.n	90019b48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90019b2c:	ebaa 0c0c 	sub.w	ip, sl, ip
90019b30:	f8a4 9002 	strh.w	r9, [r4, #2]
90019b34:	eba1 010c 	sub.w	r1, r1, ip
90019b38:	80e1      	strh	r1, [r4, #6]
90019b3a:	4628      	mov	r0, r5
90019b3c:	9904      	ldr	r1, [sp, #16]
90019b3e:	3c08      	subs	r4, #8
90019b40:	4605      	mov	r5, r0
90019b42:	3901      	subs	r1, #1
90019b44:	9104      	str	r1, [sp, #16]
90019b46:	e7d3      	b.n	90019af0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90019b48:	4461      	add	r1, ip
90019b4a:	b209      	sxth	r1, r1
90019b4c:	4549      	cmp	r1, r9
90019b4e:	dcf5      	bgt.n	90019b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90019b50:	eba2 0c0c 	sub.w	ip, r2, ip
90019b54:	f8a4 c006 	strh.w	ip, [r4, #6]
90019b58:	e7ef      	b.n	90019b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90019b5a:	428f      	cmp	r7, r1
90019b5c:	dcee      	bgt.n	90019b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90019b5e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
90019b62:	4461      	add	r1, ip
90019b64:	b209      	sxth	r1, r1
90019b66:	4589      	cmp	r9, r1
90019b68:	dbe8      	blt.n	90019b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90019b6a:	4576      	cmp	r6, lr
90019b6c:	fa1f fc8e 	uxth.w	ip, lr
90019b70:	88a1      	ldrh	r1, [r4, #4]
90019b72:	dc07      	bgt.n	90019b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90019b74:	eba3 0c0c 	sub.w	ip, r3, ip
90019b78:	f8a4 8000 	strh.w	r8, [r4]
90019b7c:	eba1 010c 	sub.w	r1, r1, ip
90019b80:	80a1      	strh	r1, [r4, #4]
90019b82:	e7da      	b.n	90019b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90019b84:	4461      	add	r1, ip
90019b86:	b209      	sxth	r1, r1
90019b88:	4588      	cmp	r8, r1
90019b8a:	dbd7      	blt.n	90019b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90019b8c:	9905      	ldr	r1, [sp, #20]
90019b8e:	eba1 0c0c 	sub.w	ip, r1, ip
90019b92:	f8a4 c004 	strh.w	ip, [r4, #4]
90019b96:	e7d0      	b.n	90019b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90019b98:	24024594 	.word	0x24024594
90019b9c:	24024592 	.word	0x24024592
90019ba0:	2d00      	cmp	r5, #0
90019ba2:	f000 816d 	beq.w	90019e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90019ba6:	9b06      	ldr	r3, [sp, #24]
90019ba8:	445b      	add	r3, fp
90019baa:	461c      	mov	r4, r3
90019bac:	9b02      	ldr	r3, [sp, #8]
90019bae:	3301      	adds	r3, #1
90019bb0:	f000 8166 	beq.w	90019e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90019bb4:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
90019bb8:	9803      	ldr	r0, [sp, #12]
90019bba:	4629      	mov	r1, r5
90019bbc:	f7ff fd3a 	bl	90019634 <_ZNK8touchgfx4Rect8includesERKS0_>
90019bc0:	b120      	cbz	r0, 90019bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
90019bc2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90019bc6:	9801      	ldr	r0, [sp, #4]
90019bc8:	f7ff feb0 	bl	9001992c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019bcc:	9903      	ldr	r1, [sp, #12]
90019bce:	4628      	mov	r0, r5
90019bd0:	f7fc ff3a 	bl	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_>
90019bd4:	2800      	cmp	r0, #0
90019bd6:	f000 809c 	beq.w	90019d12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90019bda:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90019bde:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90019be2:	fa1f f189 	uxth.w	r1, r9
90019be6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90019bea:	9309      	str	r3, [sp, #36]	@ 0x24
90019bec:	eb01 0c03 	add.w	ip, r1, r3
90019bf0:	b283      	uxth	r3, r0
90019bf2:	4548      	cmp	r0, r9
90019bf4:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
90019bf8:	fa1f fa8c 	uxth.w	sl, ip
90019bfc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90019c00:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90019c04:	eb03 050c 	add.w	r5, r3, ip
90019c08:	b2ad      	uxth	r5, r5
90019c0a:	9505      	str	r5, [sp, #20]
90019c0c:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90019c10:	9504      	str	r5, [sp, #16]
90019c12:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
90019c16:	f340 8099 	ble.w	90019d4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90019c1a:	1a5b      	subs	r3, r3, r1
90019c1c:	4596      	cmp	lr, r2
90019c1e:	fa0f f08a 	sxth.w	r0, sl
90019c22:	b29b      	uxth	r3, r3
90019c24:	b21e      	sxth	r6, r3
90019c26:	dd2e      	ble.n	90019c86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90019c28:	9f02      	ldr	r7, [sp, #8]
90019c2a:	fa1f fe8e 	uxth.w	lr, lr
90019c2e:	b292      	uxth	r2, r2
90019c30:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90019c34:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90019c38:	9f04      	ldr	r7, [sp, #16]
90019c3a:	ebae 0102 	sub.w	r1, lr, r2
90019c3e:	44a6      	add	lr, r4
90019c40:	1a3f      	subs	r7, r7, r0
90019c42:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
90019c46:	b289      	uxth	r1, r1
90019c48:	4402      	add	r2, r0
90019c4a:	fa0f fe8e 	sxth.w	lr, lr
90019c4e:	b20d      	sxth	r5, r1
90019c50:	b212      	sxth	r2, r2
90019c52:	436f      	muls	r7, r5
90019c54:	ebae 0202 	sub.w	r2, lr, r2
90019c58:	4372      	muls	r2, r6
90019c5a:	4297      	cmp	r7, r2
90019c5c:	db09      	blt.n	90019c72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
90019c5e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
90019c62:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
90019c66:	449c      	add	ip, r3
90019c68:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90019c6c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90019c70:	e686      	b.n	90019980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019c72:	4421      	add	r1, r4
90019c74:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90019c78:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90019c7c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90019c80:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90019c84:	e67c      	b.n	90019980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019c86:	9f04      	ldr	r7, [sp, #16]
90019c88:	42b8      	cmp	r0, r7
90019c8a:	da27      	bge.n	90019cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90019c8c:	9902      	ldr	r1, [sp, #8]
90019c8e:	1a3f      	subs	r7, r7, r0
90019c90:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
90019c94:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90019c98:	eb05 010e 	add.w	r1, r5, lr
90019c9c:	fa1f f881 	uxth.w	r8, r1
90019ca0:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
90019ca4:	4411      	add	r1, r2
90019ca6:	fa0f f988 	sxth.w	r9, r8
90019caa:	eba2 020e 	sub.w	r2, r2, lr
90019cae:	eba1 0108 	sub.w	r1, r1, r8
90019cb2:	4372      	muls	r2, r6
90019cb4:	b289      	uxth	r1, r1
90019cb6:	fa0f f881 	sxth.w	r8, r1
90019cba:	fb08 f707 	mul.w	r7, r8, r7
90019cbe:	42ba      	cmp	r2, r7
90019cc0:	dc06      	bgt.n	90019cd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
90019cc2:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
90019cc6:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
90019cca:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90019cce:	e7ca      	b.n	90019c66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
90019cd0:	4429      	add	r1, r5
90019cd2:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
90019cd6:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90019cda:	e651      	b.n	90019980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019cdc:	9805      	ldr	r0, [sp, #20]
90019cde:	2d06      	cmp	r5, #6
90019ce0:	ebaa 0000 	sub.w	r0, sl, r0
90019ce4:	b280      	uxth	r0, r0
90019ce6:	fa0f fe80 	sxth.w	lr, r0
90019cea:	d817      	bhi.n	90019d1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90019cec:	9b04      	ldr	r3, [sp, #16]
90019cee:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90019cf2:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90019cf6:	1c6b      	adds	r3, r5, #1
90019cf8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90019cfc:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90019d00:	9b01      	ldr	r3, [sp, #4]
90019d02:	9801      	ldr	r0, [sp, #4]
90019d04:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90019d08:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90019d0c:	805a      	strh	r2, [r3, #2]
90019d0e:	809e      	strh	r6, [r3, #4]
90019d10:	80d9      	strh	r1, [r3, #6]
90019d12:	9b02      	ldr	r3, [sp, #8]
90019d14:	3c08      	subs	r4, #8
90019d16:	3b01      	subs	r3, #1
90019d18:	9302      	str	r3, [sp, #8]
90019d1a:	e747      	b.n	90019bac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90019d1c:	9a02      	ldr	r2, [sp, #8]
90019d1e:	45b6      	cmp	lr, r6
90019d20:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90019d24:	db0d      	blt.n	90019d42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90019d26:	449c      	add	ip, r3
90019d28:	445a      	add	r2, fp
90019d2a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90019d2e:	fa1f fc8c 	uxth.w	ip, ip
90019d32:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
90019d36:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90019d3a:	448c      	add	ip, r1
90019d3c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90019d40:	e61e      	b.n	90019980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019d42:	445a      	add	r2, fp
90019d44:	4484      	add	ip, r0
90019d46:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
90019d4a:	e78f      	b.n	90019c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90019d4c:	fa1f f18e 	uxth.w	r1, lr
90019d50:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90019d54:	b293      	uxth	r3, r2
90019d56:	4596      	cmp	lr, r2
90019d58:	eb01 0806 	add.w	r8, r1, r6
90019d5c:	9306      	str	r3, [sp, #24]
90019d5e:	fa1f f888 	uxth.w	r8, r8
90019d62:	9f06      	ldr	r7, [sp, #24]
90019d64:	fa0f f388 	sxth.w	r3, r8
90019d68:	9307      	str	r3, [sp, #28]
90019d6a:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90019d6e:	443b      	add	r3, r7
90019d70:	b29b      	uxth	r3, r3
90019d72:	9308      	str	r3, [sp, #32]
90019d74:	da24      	bge.n	90019dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90019d76:	9905      	ldr	r1, [sp, #20]
90019d78:	eba3 0308 	sub.w	r3, r3, r8
90019d7c:	eba2 020e 	sub.w	r2, r2, lr
90019d80:	eba9 0000 	sub.w	r0, r9, r0
90019d84:	ebaa 0401 	sub.w	r4, sl, r1
90019d88:	b29b      	uxth	r3, r3
90019d8a:	b2a4      	uxth	r4, r4
90019d8c:	b219      	sxth	r1, r3
90019d8e:	b225      	sxth	r5, r4
90019d90:	4348      	muls	r0, r1
90019d92:	436a      	muls	r2, r5
90019d94:	4282      	cmp	r2, r0
90019d96:	9a02      	ldr	r2, [sp, #8]
90019d98:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90019d9c:	445a      	add	r2, fp
90019d9e:	dc06      	bgt.n	90019dae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90019da0:	9b07      	ldr	r3, [sp, #28]
90019da2:	44a4      	add	ip, r4
90019da4:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
90019da8:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90019dac:	e75e      	b.n	90019c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90019dae:	9904      	ldr	r1, [sp, #16]
90019db0:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
90019db4:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
90019db8:	4433      	add	r3, r6
90019dba:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90019dbe:	e5df      	b.n	90019980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019dc0:	9f06      	ldr	r7, [sp, #24]
90019dc2:	9b04      	ldr	r3, [sp, #16]
90019dc4:	1bc9      	subs	r1, r1, r7
90019dc6:	fa0f f78a 	sxth.w	r7, sl
90019dca:	b289      	uxth	r1, r1
90019dcc:	429f      	cmp	r7, r3
90019dce:	fa0f fe81 	sxth.w	lr, r1
90019dd2:	dd23      	ble.n	90019e1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90019dd4:	9a05      	ldr	r2, [sp, #20]
90019dd6:	eba9 0000 	sub.w	r0, r9, r0
90019dda:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90019dde:	ebaa 0202 	sub.w	r2, sl, r2
90019de2:	9d07      	ldr	r5, [sp, #28]
90019de4:	fb0e f000 	mul.w	r0, lr, r0
90019de8:	b292      	uxth	r2, r2
90019dea:	eba5 0a03 	sub.w	sl, r5, r3
90019dee:	9b02      	ldr	r3, [sp, #8]
90019df0:	b214      	sxth	r4, r2
90019df2:	00db      	lsls	r3, r3, #3
90019df4:	fb04 fa0a 	mul.w	sl, r4, sl
90019df8:	445b      	add	r3, fp
90019dfa:	4550      	cmp	r0, sl
90019dfc:	db03      	blt.n	90019e06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90019dfe:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90019e02:	4494      	add	ip, r2
90019e04:	e732      	b.n	90019c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90019e06:	9a04      	ldr	r2, [sp, #16]
90019e08:	4431      	add	r1, r6
90019e0a:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90019e0e:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90019e12:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
90019e16:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90019e1a:	e75c      	b.n	90019cd6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90019e1c:	9b08      	ldr	r3, [sp, #32]
90019e1e:	2d06      	cmp	r5, #6
90019e20:	eba3 0308 	sub.w	r3, r3, r8
90019e24:	b29b      	uxth	r3, r3
90019e26:	b218      	sxth	r0, r3
90019e28:	d813      	bhi.n	90019e52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90019e2a:	9b07      	ldr	r3, [sp, #28]
90019e2c:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90019e30:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90019e34:	1c6b      	adds	r3, r5, #1
90019e36:	9901      	ldr	r1, [sp, #4]
90019e38:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90019e3c:	9b01      	ldr	r3, [sp, #4]
90019e3e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90019e42:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90019e46:	805a      	strh	r2, [r3, #2]
90019e48:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90019e4a:	f8a3 e006 	strh.w	lr, [r3, #6]
90019e4e:	809a      	strh	r2, [r3, #4]
90019e50:	e75f      	b.n	90019d12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90019e52:	9c02      	ldr	r4, [sp, #8]
90019e54:	4570      	cmp	r0, lr
90019e56:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90019e5a:	db0d      	blt.n	90019e78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90019e5c:	4431      	add	r1, r6
90019e5e:	9b06      	ldr	r3, [sp, #24]
90019e60:	445c      	add	r4, fp
90019e62:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90019e66:	b289      	uxth	r1, r1
90019e68:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90019e6c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90019e70:	4419      	add	r1, r3
90019e72:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90019e76:	e583      	b.n	90019980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019e78:	445c      	add	r4, fp
90019e7a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90019e7e:	e79b      	b.n	90019db8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90019e80:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90019e84:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90019e88:	1e65      	subs	r5, r4, #1
90019e8a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90019e8e:	b2ad      	uxth	r5, r5
90019e90:	42b5      	cmp	r5, r6
90019e92:	d044      	beq.n	90019f1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90019e94:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90019e98:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90019e9c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90019ea0:	4282      	cmp	r2, r0
90019ea2:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
90019ea6:	d11f      	bne.n	90019ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90019ea8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90019eac:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90019eb0:	459c      	cmp	ip, r3
90019eb2:	d119      	bne.n	90019ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90019eb4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90019eb8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90019ebc:	19d8      	adds	r0, r3, r7
90019ebe:	b200      	sxth	r0, r0
90019ec0:	4288      	cmp	r0, r1
90019ec2:	d109      	bne.n	90019ed8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90019ec4:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90019ec8:	4413      	add	r3, r2
90019eca:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90019ece:	4629      	mov	r1, r5
90019ed0:	9801      	ldr	r0, [sp, #4]
90019ed2:	f7ff fd2b 	bl	9001992c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019ed6:	e003      	b.n	90019ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019ed8:	4411      	add	r1, r2
90019eda:	b209      	sxth	r1, r1
90019edc:	42b9      	cmp	r1, r7
90019ede:	d0f3      	beq.n	90019ec8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90019ee0:	3d01      	subs	r5, #1
90019ee2:	3c08      	subs	r4, #8
90019ee4:	b2ad      	uxth	r5, r5
90019ee6:	e7d3      	b.n	90019e90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90019ee8:	42b9      	cmp	r1, r7
90019eea:	d1f9      	bne.n	90019ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019eec:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90019ef0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90019ef4:	4299      	cmp	r1, r3
90019ef6:	d1f3      	bne.n	90019ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019ef8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90019efc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90019f00:	181f      	adds	r7, r3, r0
90019f02:	b23f      	sxth	r7, r7
90019f04:	42ba      	cmp	r2, r7
90019f06:	d105      	bne.n	90019f14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90019f08:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90019f0c:	440b      	add	r3, r1
90019f0e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90019f12:	e7dc      	b.n	90019ece <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90019f14:	440a      	add	r2, r1
90019f16:	b212      	sxth	r2, r2
90019f18:	4290      	cmp	r0, r2
90019f1a:	d1e1      	bne.n	90019ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019f1c:	e7f6      	b.n	90019f0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90019f1e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90019f22:	2e07      	cmp	r6, #7
90019f24:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90019f28:	d812      	bhi.n	90019f50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90019f2a:	1c75      	adds	r5, r6, #1
90019f2c:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90019f30:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90019f34:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90019f38:	9d01      	ldr	r5, [sp, #4]
90019f3a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90019f3e:	442c      	add	r4, r5
90019f40:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90019f44:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90019f48:	8061      	strh	r1, [r4, #2]
90019f4a:	80a2      	strh	r2, [r4, #4]
90019f4c:	80e3      	strh	r3, [r4, #6]
90019f4e:	e581      	b.n	90019a54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90019f50:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90019f54:	3e01      	subs	r6, #1
90019f56:	445c      	add	r4, fp
90019f58:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90019f5c:	f04f 37ff 	mov.w	r7, #4294967295
90019f60:	2500      	movs	r5, #0
90019f62:	9305      	str	r3, [sp, #20]
90019f64:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90019f68:	1e72      	subs	r2, r6, #1
90019f6a:	9302      	str	r3, [sp, #8]
90019f6c:	4691      	mov	r9, r2
90019f6e:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90019f72:	9304      	str	r3, [sp, #16]
90019f74:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90019f78:	f1b9 3fff 	cmp.w	r9, #4294967295
90019f7c:	6818      	ldr	r0, [r3, #0]
90019f7e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90019f82:	9207      	str	r2, [sp, #28]
90019f84:	bf16      	itet	ne
90019f86:	9905      	ldrne	r1, [sp, #20]
90019f88:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90019f8c:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90019f90:	9306      	str	r3, [sp, #24]
90019f92:	f8be 1006 	ldrh.w	r1, [lr, #6]
90019f96:	f8be 8004 	ldrh.w	r8, [lr, #4]
90019f9a:	fb18 f801 	smulbb	r8, r8, r1
90019f9e:	6859      	ldr	r1, [r3, #4]
90019fa0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90019fa4:	4671      	mov	r1, lr
90019fa6:	a80c      	add	r0, sp, #48	@ 0x30
90019fa8:	f7ff fb6a 	bl	90019680 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90019fac:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90019fb0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90019fb4:	f04f 0c08 	mov.w	ip, #8
90019fb8:	9b04      	ldr	r3, [sp, #16]
90019fba:	9a02      	ldr	r2, [sp, #8]
90019fbc:	fb10 f001 	smulbb	r0, r0, r1
90019fc0:	fb02 8803 	mla	r8, r2, r3, r8
90019fc4:	eba0 0108 	sub.w	r1, r0, r8
90019fc8:	fb90 f0fc 	sdiv	r0, r0, ip
90019fcc:	4288      	cmp	r0, r1
90019fce:	dc20      	bgt.n	9001a012 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90019fd0:	4551      	cmp	r1, sl
90019fd2:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90019fd6:	da03      	bge.n	90019fe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90019fd8:	b1d9      	cbz	r1, 9001a012 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90019fda:	468a      	mov	sl, r1
90019fdc:	464f      	mov	r7, r9
90019fde:	4635      	mov	r5, r6
90019fe0:	f109 39ff 	add.w	r9, r9, #4294967295
90019fe4:	f119 0f02 	cmn.w	r9, #2
90019fe8:	d1c6      	bne.n	90019f78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90019fea:	4616      	mov	r6, r2
90019fec:	3201      	adds	r2, #1
90019fee:	f1a4 0408 	sub.w	r4, r4, #8
90019ff2:	d1b7      	bne.n	90019f64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90019ff4:	9b01      	ldr	r3, [sp, #4]
90019ff6:	b2ac      	uxth	r4, r5
90019ff8:	00ed      	lsls	r5, r5, #3
90019ffa:	1958      	adds	r0, r3, r5
90019ffc:	1c7b      	adds	r3, r7, #1
90019ffe:	d10b      	bne.n	9001a018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
9001a000:	4601      	mov	r1, r0
9001a002:	9803      	ldr	r0, [sp, #12]
9001a004:	f7ff fb3c 	bl	90019680 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001a008:	4621      	mov	r1, r4
9001a00a:	9801      	ldr	r0, [sp, #4]
9001a00c:	f7ff fc8e 	bl	9001992c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001a010:	e4b6      	b.n	90019980 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001a012:	464f      	mov	r7, r9
9001a014:	4635      	mov	r5, r6
9001a016:	e7ed      	b.n	90019ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
9001a018:	9b01      	ldr	r3, [sp, #4]
9001a01a:	00ff      	lsls	r7, r7, #3
9001a01c:	445d      	add	r5, fp
9001a01e:	19d9      	adds	r1, r3, r7
9001a020:	445f      	add	r7, fp
9001a022:	f7ff fb2d 	bl	90019680 <_ZN8touchgfx4Rect11expandToFitERKS0_>
9001a026:	9b03      	ldr	r3, [sp, #12]
9001a028:	cb03      	ldmia	r3!, {r0, r1}
9001a02a:	9b03      	ldr	r3, [sp, #12]
9001a02c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
9001a030:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
9001a034:	f855 0fac 	ldr.w	r0, [r5, #172]!
9001a038:	6869      	ldr	r1, [r5, #4]
9001a03a:	c303      	stmia	r3!, {r0, r1}
9001a03c:	e7e4      	b.n	9001a008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
9001a03e:	bf00      	nop

9001a040 <_ZN8touchgfx11Application15drawCachedAreasEv>:
9001a040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a044:	f500 7698 	add.w	r6, r0, #304	@ 0x130
9001a048:	b09b      	sub	sp, #108	@ 0x6c
9001a04a:	4604      	mov	r4, r0
9001a04c:	4630      	mov	r0, r6
9001a04e:	f7f9 faac 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
9001a052:	4605      	mov	r5, r0
9001a054:	b948      	cbnz	r0, 9001a06a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
9001a056:	6823      	ldr	r3, [r4, #0]
9001a058:	4620      	mov	r0, r4
9001a05a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001a05c:	e896 0006 	ldmia.w	r6, {r1, r2}
9001a060:	4798      	blx	r3
9001a062:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
9001a066:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
9001a06a:	4bc5      	ldr	r3, [pc, #788]	@ (9001a380 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
9001a06c:	681b      	ldr	r3, [r3, #0]
9001a06e:	2b00      	cmp	r3, #0
9001a070:	d03f      	beq.n	9001a0f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001a072:	4dc4      	ldr	r5, [pc, #784]	@ (9001a384 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
9001a074:	4628      	mov	r0, r5
9001a076:	f7f9 fa98 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
9001a07a:	4606      	mov	r6, r0
9001a07c:	2800      	cmp	r0, #0
9001a07e:	d138      	bne.n	9001a0f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001a080:	4628      	mov	r0, r5
9001a082:	f7ff f9b1 	bl	900193e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001a086:	6823      	ldr	r3, [r4, #0]
9001a088:	6829      	ldr	r1, [r5, #0]
9001a08a:	4620      	mov	r0, r4
9001a08c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001a08e:	686a      	ldr	r2, [r5, #4]
9001a090:	4798      	blx	r3
9001a092:	802e      	strh	r6, [r5, #0]
9001a094:	806e      	strh	r6, [r5, #2]
9001a096:	80ae      	strh	r6, [r5, #4]
9001a098:	80ee      	strh	r6, [r5, #6]
9001a09a:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
9001a09e:	4dba      	ldr	r5, [pc, #744]	@ (9001a388 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
9001a0a0:	4640      	mov	r0, r8
9001a0a2:	f7ff fbe7 	bl	90019874 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001a0a6:	882e      	ldrh	r6, [r5, #0]
9001a0a8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
9001a0ac:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
9001a0b0:	4633      	mov	r3, r6
9001a0b2:	42bb      	cmp	r3, r7
9001a0b4:	d224      	bcs.n	9001a100 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001a0b6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
9001a0ba:	2907      	cmp	r1, #7
9001a0bc:	d816      	bhi.n	9001a0ec <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
9001a0be:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001a0c2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
9001a0c6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
9001a0ca:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
9001a0ce:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
9001a0d2:	1c4a      	adds	r2, r1, #1
9001a0d4:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
9001a0d8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
9001a0dc:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
9001a0e0:	f8a2 a002 	strh.w	sl, [r2, #2]
9001a0e4:	f8a2 e004 	strh.w	lr, [r2, #4]
9001a0e8:	f8a2 c006 	strh.w	ip, [r2, #6]
9001a0ec:	3301      	adds	r3, #1
9001a0ee:	b29b      	uxth	r3, r3
9001a0f0:	e7df      	b.n	9001a0b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
9001a0f2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001a0f6:	2b00      	cmp	r3, #0
9001a0f8:	d1cf      	bne.n	9001a09a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
9001a0fa:	b01b      	add	sp, #108	@ 0x6c
9001a0fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a100:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
9001a104:	42b3      	cmp	r3, r6
9001a106:	d90c      	bls.n	9001a122 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
9001a108:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
9001a10c:	6822      	ldr	r2, [r4, #0]
9001a10e:	3601      	adds	r6, #1
9001a110:	4620      	mov	r0, r4
9001a112:	6c17      	ldr	r7, [r2, #64]	@ 0x40
9001a114:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
9001a118:	b2b6      	uxth	r6, r6
9001a11a:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
9001a11e:	47b8      	blx	r7
9001a120:	e7ee      	b.n	9001a100 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001a122:	4a9a      	ldr	r2, [pc, #616]	@ (9001a38c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001a124:	6813      	ldr	r3, [r2, #0]
9001a126:	4691      	mov	r9, r2
9001a128:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
9001a12c:	2b01      	cmp	r3, #1
9001a12e:	f040 80e0 	bne.w	9001a2f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
9001a132:	8829      	ldrh	r1, [r5, #0]
9001a134:	2600      	movs	r6, #0
9001a136:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
9001a13a:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
9001a13e:	33ae      	adds	r3, #174	@ 0xae
9001a140:	428f      	cmp	r7, r1
9001a142:	f103 0308 	add.w	r3, r3, #8
9001a146:	dd0a      	ble.n	9001a15e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
9001a148:	f833 2c04 	ldrh.w	r2, [r3, #-4]
9001a14c:	3101      	adds	r1, #1
9001a14e:	f833 0c08 	ldrh.w	r0, [r3, #-8]
9001a152:	4402      	add	r2, r0
9001a154:	b212      	sxth	r2, r2
9001a156:	4296      	cmp	r6, r2
9001a158:	bfb8      	it	lt
9001a15a:	4616      	movlt	r6, r2
9001a15c:	e7f0      	b.n	9001a140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
9001a15e:	4b8c      	ldr	r3, [pc, #560]	@ (9001a390 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
9001a160:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 9001a38c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
9001a164:	881b      	ldrh	r3, [r3, #0]
9001a166:	2b0f      	cmp	r3, #15
9001a168:	bf8c      	ite	hi
9001a16a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
9001a16e:	f04f 0b01 	movls.w	fp, #1
9001a172:	2300      	movs	r3, #0
9001a174:	e9cd 3305 	strd	r3, r3, [sp, #20]
9001a178:	f8bd 7016 	ldrh.w	r7, [sp, #22]
9001a17c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
9001a180:	4b82      	ldr	r3, [pc, #520]	@ (9001a38c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001a182:	4438      	add	r0, r7
9001a184:	b207      	sxth	r7, r0
9001a186:	6818      	ldr	r0, [r3, #0]
9001a188:	42b7      	cmp	r7, r6
9001a18a:	6803      	ldr	r3, [r0, #0]
9001a18c:	f280 8083 	bge.w	9001a296 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
9001a190:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
9001a194:	4798      	blx	r3
9001a196:	eb07 030b 	add.w	r3, r7, fp
9001a19a:	4298      	cmp	r0, r3
9001a19c:	da07      	bge.n	9001a1ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001a19e:	42b0      	cmp	r0, r6
9001a1a0:	da05      	bge.n	9001a1ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001a1a2:	4287      	cmp	r7, r0
9001a1a4:	dd6c      	ble.n	9001a280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001a1a6:	2f00      	cmp	r7, #0
9001a1a8:	dd6a      	ble.n	9001a280 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001a1aa:	4630      	mov	r0, r6
9001a1ac:	e004      	b.n	9001a1b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
9001a1ae:	4287      	cmp	r7, r0
9001a1b0:	dcfb      	bgt.n	9001a1aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
9001a1b2:	42b0      	cmp	r0, r6
9001a1b4:	bfa8      	it	ge
9001a1b6:	4630      	movge	r0, r6
9001a1b8:	4b76      	ldr	r3, [pc, #472]	@ (9001a394 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
9001a1ba:	1bc0      	subs	r0, r0, r7
9001a1bc:	2200      	movs	r2, #0
9001a1be:	f8ad 7016 	strh.w	r7, [sp, #22]
9001a1c2:	f9b3 3000 	ldrsh.w	r3, [r3]
9001a1c6:	882f      	ldrh	r7, [r5, #0]
9001a1c8:	f8ad 2014 	strh.w	r2, [sp, #20]
9001a1cc:	f8ad 3018 	strh.w	r3, [sp, #24]
9001a1d0:	f8ad 001a 	strh.w	r0, [sp, #26]
9001a1d4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001a1d8:	42bb      	cmp	r3, r7
9001a1da:	d9cd      	bls.n	9001a178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
9001a1dc:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
9001a1e0:	ab07      	add	r3, sp, #28
9001a1e2:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001a1e6:	6851      	ldr	r1, [r2, #4]
9001a1e8:	c303      	stmia	r3!, {r0, r1}
9001a1ea:	a905      	add	r1, sp, #20
9001a1ec:	a807      	add	r0, sp, #28
9001a1ee:	f7fc fc2b 	bl	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001a1f2:	2800      	cmp	r0, #0
9001a1f4:	d04c      	beq.n	9001a290 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
9001a1f6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
9001a1fa:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
9001a1fe:	f8bd a020 	ldrh.w	sl, [sp, #32]
9001a202:	4686      	mov	lr, r0
9001a204:	4290      	cmp	r0, r2
9001a206:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
9001a20a:	4450      	add	r0, sl
9001a20c:	f8bd a018 	ldrh.w	sl, [sp, #24]
9001a210:	bfb8      	it	lt
9001a212:	4696      	movlt	lr, r2
9001a214:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001a218:	4452      	add	r2, sl
9001a21a:	b280      	uxth	r0, r0
9001a21c:	4299      	cmp	r1, r3
9001a21e:	468c      	mov	ip, r1
9001a220:	b292      	uxth	r2, r2
9001a222:	9302      	str	r3, [sp, #8]
9001a224:	bfb8      	it	lt
9001a226:	469c      	movlt	ip, r3
9001a228:	b203      	sxth	r3, r0
9001a22a:	fa0f fa82 	sxth.w	sl, r2
9001a22e:	f8ad e01c 	strh.w	lr, [sp, #28]
9001a232:	f8ad c01e 	strh.w	ip, [sp, #30]
9001a236:	4553      	cmp	r3, sl
9001a238:	bfb8      	it	lt
9001a23a:	4602      	movlt	r2, r0
9001a23c:	9b02      	ldr	r3, [sp, #8]
9001a23e:	eba2 020e 	sub.w	r2, r2, lr
9001a242:	f8ad 2020 	strh.w	r2, [sp, #32]
9001a246:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001a24a:	4411      	add	r1, r2
9001a24c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001a250:	4413      	add	r3, r2
9001a252:	b289      	uxth	r1, r1
9001a254:	b29b      	uxth	r3, r3
9001a256:	b208      	sxth	r0, r1
9001a258:	b21a      	sxth	r2, r3
9001a25a:	4290      	cmp	r0, r2
9001a25c:	bfb8      	it	lt
9001a25e:	460b      	movlt	r3, r1
9001a260:	eba3 030c 	sub.w	r3, r3, ip
9001a264:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001a268:	a807      	add	r0, sp, #28
9001a26a:	f7f9 f99e 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
9001a26e:	b920      	cbnz	r0, 9001a27a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
9001a270:	6823      	ldr	r3, [r4, #0]
9001a272:	a907      	add	r1, sp, #28
9001a274:	4620      	mov	r0, r4
9001a276:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a278:	4798      	blx	r3
9001a27a:	3701      	adds	r7, #1
9001a27c:	b2bf      	uxth	r7, r7
9001a27e:	e7a9      	b.n	9001a1d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
9001a280:	f8d9 0000 	ldr.w	r0, [r9]
9001a284:	2101      	movs	r1, #1
9001a286:	6803      	ldr	r3, [r0, #0]
9001a288:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
9001a28c:	4798      	blx	r3
9001a28e:	e773      	b.n	9001a178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
9001a290:	e9cd 0007 	strd	r0, r0, [sp, #28]
9001a294:	e7e8      	b.n	9001a268 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
9001a296:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001a298:	4798      	blx	r3
9001a29a:	4b3f      	ldr	r3, [pc, #252]	@ (9001a398 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
9001a29c:	781b      	ldrb	r3, [r3, #0]
9001a29e:	2b00      	cmp	r3, #0
9001a2a0:	f43f af2b 	beq.w	9001a0fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
9001a2a4:	2300      	movs	r3, #0
9001a2a6:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
9001a2aa:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
9001a2ae:	882b      	ldrh	r3, [r5, #0]
9001a2b0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001a2b4:	42ab      	cmp	r3, r5
9001a2b6:	f4bf af20 	bcs.w	9001a0fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
9001a2ba:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
9001a2be:	2907      	cmp	r1, #7
9001a2c0:	d814      	bhi.n	9001a2ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
9001a2c2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
9001a2c6:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
9001a2ca:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
9001a2ce:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
9001a2d2:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
9001a2d6:	1c4a      	adds	r2, r1, #1
9001a2d8:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
9001a2dc:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
9001a2e0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
9001a2e4:	f8a2 c002 	strh.w	ip, [r2, #2]
9001a2e8:	8097      	strh	r7, [r2, #4]
9001a2ea:	80d6      	strh	r6, [r2, #6]
9001a2ec:	3301      	adds	r3, #1
9001a2ee:	b29b      	uxth	r3, r3
9001a2f0:	e7e0      	b.n	9001a2b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
9001a2f2:	2b02      	cmp	r3, #2
9001a2f4:	f040 8133 	bne.w	9001a55e <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
9001a2f8:	4b28      	ldr	r3, [pc, #160]	@ (9001a39c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
9001a2fa:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
9001a2fe:	781b      	ldrb	r3, [r3, #0]
9001a300:	2b01      	cmp	r3, #1
9001a302:	f000 8098 	beq.w	9001a436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001a306:	882a      	ldrh	r2, [r5, #0]
9001a308:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
9001a30c:	3201      	adds	r2, #1
9001a30e:	b292      	uxth	r2, r2
9001a310:	2900      	cmp	r1, #0
9001a312:	d0c2      	beq.n	9001a29a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001a314:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
9001a318:	4694      	mov	ip, r2
9001a31a:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
9001a31e:	f04f 0900 	mov.w	r9, #0
9001a322:	441e      	add	r6, r3
9001a324:	b236      	sxth	r6, r6
9001a326:	fa1f f38c 	uxth.w	r3, ip
9001a32a:	ea4f 07c9 	mov.w	r7, r9, lsl #3
9001a32e:	4299      	cmp	r1, r3
9001a330:	f240 80be 	bls.w	9001a4b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
9001a334:	4427      	add	r7, r4
9001a336:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
9001a33a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
9001a33e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
9001a342:	4283      	cmp	r3, r0
9001a344:	f340 80a0 	ble.w	9001a488 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
9001a348:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
9001a34c:	46e1      	mov	r9, ip
9001a34e:	4406      	add	r6, r0
9001a350:	b236      	sxth	r6, r6
9001a352:	429e      	cmp	r6, r3
9001a354:	bfa8      	it	ge
9001a356:	461e      	movge	r6, r3
9001a358:	f10c 0c01 	add.w	ip, ip, #1
9001a35c:	e7e3      	b.n	9001a326 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
9001a35e:	d10a      	bne.n	9001a376 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
9001a360:	4562      	cmp	r2, ip
9001a362:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
9001a366:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
9001a36a:	bfb8      	it	lt
9001a36c:	4662      	movlt	r2, ip
9001a36e:	4288      	cmp	r0, r1
9001a370:	bfb8      	it	lt
9001a372:	461f      	movlt	r7, r3
9001a374:	e086      	b.n	9001a484 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
9001a376:	428a      	cmp	r2, r1
9001a378:	bfb8      	it	lt
9001a37a:	460a      	movlt	r2, r1
9001a37c:	e082      	b.n	9001a484 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
9001a37e:	bf00      	nop
9001a380:	240245e0 	.word	0x240245e0
9001a384:	240245ec 	.word	0x240245ec
9001a388:	240002ac 	.word	0x240002ac
9001a38c:	240245a0 	.word	0x240245a0
9001a390:	24024594 	.word	0x24024594
9001a394:	24024592 	.word	0x24024592
9001a398:	2402459c 	.word	0x2402459c
9001a39c:	24024596 	.word	0x24024596
9001a3a0:	19a1      	adds	r1, r4, r6
9001a3a2:	ab07      	add	r3, sp, #28
9001a3a4:	f851 0fac 	ldr.w	r0, [r1, #172]!
9001a3a8:	6849      	ldr	r1, [r1, #4]
9001a3aa:	c303      	stmia	r3!, {r0, r1}
9001a3ac:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001a3b0:	a807      	add	r0, sp, #28
9001a3b2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001a3b6:	2b13      	cmp	r3, #19
9001a3b8:	440b      	add	r3, r1
9001a3ba:	bfd8      	it	le
9001a3bc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
9001a3c0:	1a9b      	subs	r3, r3, r2
9001a3c2:	f8ad 201c 	strh.w	r2, [sp, #28]
9001a3c6:	f8ad 3020 	strh.w	r3, [sp, #32]
9001a3ca:	f7ff f827 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001a3ce:	a807      	add	r0, sp, #28
9001a3d0:	f7f9 f8eb 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
9001a3d4:	bb78      	cbnz	r0, 9001a436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001a3d6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
9001a3da:	4426      	add	r6, r4
9001a3dc:	f8d9 0000 	ldr.w	r0, [r9]
9001a3e0:	f1bc 0f14 	cmp.w	ip, #20
9001a3e4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9001a3e8:	f8d0 e000 	ldr.w	lr, [r0]
9001a3ec:	bfa8      	it	ge
9001a3ee:	f04f 0c14 	movge.w	ip, #20
9001a3f2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
9001a3f6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001a3fa:	fa1f fc8c 	uxth.w	ip, ip
9001a3fe:	f8cd c000 	str.w	ip, [sp]
9001a402:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
9001a406:	47d8      	blx	fp
9001a408:	4683      	mov	fp, r0
9001a40a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001a40e:	a807      	add	r0, sp, #28
9001a410:	f7fe ffea 	bl	900193e8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001a414:	6823      	ldr	r3, [r4, #0]
9001a416:	4620      	mov	r0, r4
9001a418:	a907      	add	r1, sp, #28
9001a41a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a41c:	4798      	blx	r3
9001a41e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
9001a422:	eba0 000b 	sub.w	r0, r0, fp
9001a426:	b200      	sxth	r0, r0
9001a428:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
9001a42c:	b918      	cbnz	r0, 9001a436 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001a42e:	b2b9      	uxth	r1, r7
9001a430:	4650      	mov	r0, sl
9001a432:	f7ff fa7b 	bl	9001992c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001a436:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
9001a43a:	f1bb 0f00 	cmp.w	fp, #0
9001a43e:	f43f af2c 	beq.w	9001a29a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001a442:	882b      	ldrh	r3, [r5, #0]
9001a444:	2700      	movs	r7, #0
9001a446:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
9001a44a:	3301      	adds	r3, #1
9001a44c:	b29b      	uxth	r3, r3
9001a44e:	b299      	uxth	r1, r3
9001a450:	00fe      	lsls	r6, r7, #3
9001a452:	458b      	cmp	fp, r1
9001a454:	d9a4      	bls.n	9001a3a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
9001a456:	4426      	add	r6, r4
9001a458:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
9001a45c:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
9001a460:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
9001a464:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
9001a468:	4408      	add	r0, r1
9001a46a:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
9001a46e:	4461      	add	r1, ip
9001a470:	b200      	sxth	r0, r0
9001a472:	b209      	sxth	r1, r1
9001a474:	4288      	cmp	r0, r1
9001a476:	f6bf af72 	bge.w	9001a35e <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
9001a47a:	4584      	cmp	ip, r0
9001a47c:	4662      	mov	r2, ip
9001a47e:	461f      	mov	r7, r3
9001a480:	bfb8      	it	lt
9001a482:	4602      	movlt	r2, r0
9001a484:	3301      	adds	r3, #1
9001a486:	e7e2      	b.n	9001a44e <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
9001a488:	d10e      	bne.n	9001a4a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
9001a48a:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
9001a48e:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
9001a492:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
9001a496:	4473      	add	r3, lr
9001a498:	b21b      	sxth	r3, r3
9001a49a:	429e      	cmp	r6, r3
9001a49c:	bfa8      	it	ge
9001a49e:	461e      	movge	r6, r3
9001a4a0:	4287      	cmp	r7, r0
9001a4a2:	bfb8      	it	lt
9001a4a4:	46e1      	movlt	r9, ip
9001a4a6:	e757      	b.n	9001a358 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
9001a4a8:	4286      	cmp	r6, r0
9001a4aa:	bfa8      	it	ge
9001a4ac:	4606      	movge	r6, r0
9001a4ae:	e753      	b.n	9001a358 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
9001a4b0:	eb0a 0007 	add.w	r0, sl, r7
9001a4b4:	4427      	add	r7, r4
9001a4b6:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
9001a4ba:	f1bb 0f13 	cmp.w	fp, #19
9001a4be:	bfdc      	itt	le
9001a4c0:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
9001a4c4:	445e      	addle	r6, fp
9001a4c6:	e9cd 2102 	strd	r2, r1, [sp, #8]
9001a4ca:	bfd8      	it	le
9001a4cc:	b236      	sxthle	r6, r6
9001a4ce:	f7f9 f86c 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
9001a4d2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
9001a4d6:	2800      	cmp	r0, #0
9001a4d8:	f47f af1a 	bne.w	9001a310 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
9001a4dc:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
9001a4e0:	fa1f fb8b 	uxth.w	fp, fp
9001a4e4:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001a4e8:	1ab6      	subs	r6, r6, r2
9001a4ea:	4829      	ldr	r0, [pc, #164]	@ (9001a590 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
9001a4ec:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
9001a4f0:	2e14      	cmp	r6, #20
9001a4f2:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
9001a4f6:	6800      	ldr	r0, [r0, #0]
9001a4f8:	bfa8      	it	ge
9001a4fa:	2614      	movge	r6, #20
9001a4fc:	f8ad 101c 	strh.w	r1, [sp, #28]
9001a500:	f8ad 201e 	strh.w	r2, [sp, #30]
9001a504:	b289      	uxth	r1, r1
9001a506:	f8ad 3020 	strh.w	r3, [sp, #32]
9001a50a:	b2b6      	uxth	r6, r6
9001a50c:	f8d0 c000 	ldr.w	ip, [r0]
9001a510:	b292      	uxth	r2, r2
9001a512:	455e      	cmp	r6, fp
9001a514:	bf94      	ite	ls
9001a516:	9600      	strls	r6, [sp, #0]
9001a518:	f8cd b000 	strhi.w	fp, [sp]
9001a51c:	b29b      	uxth	r3, r3
9001a51e:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
9001a522:	47b0      	blx	r6
9001a524:	6823      	ldr	r3, [r4, #0]
9001a526:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001a52a:	a907      	add	r1, sp, #28
9001a52c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a52e:	4620      	mov	r0, r4
9001a530:	4798      	blx	r3
9001a532:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
9001a536:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
9001a53a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
9001a53e:	1a5b      	subs	r3, r3, r1
9001a540:	440a      	add	r2, r1
9001a542:	b21b      	sxth	r3, r3
9001a544:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
9001a548:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
9001a54c:	2b00      	cmp	r3, #0
9001a54e:	f47f aeda 	bne.w	9001a306 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001a552:	fa1f f189 	uxth.w	r1, r9
9001a556:	4650      	mov	r0, sl
9001a558:	f7ff f9e8 	bl	9001992c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001a55c:	e6d3      	b.n	9001a306 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001a55e:	882e      	ldrh	r6, [r5, #0]
9001a560:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001a564:	42b3      	cmp	r3, r6
9001a566:	f67f ae98 	bls.w	9001a29a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001a56a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
9001a56e:	ab07      	add	r3, sp, #28
9001a570:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001a574:	6851      	ldr	r1, [r2, #4]
9001a576:	c303      	stmia	r3!, {r0, r1}
9001a578:	a807      	add	r0, sp, #28
9001a57a:	f7f9 f816 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
9001a57e:	b920      	cbnz	r0, 9001a58a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
9001a580:	6823      	ldr	r3, [r4, #0]
9001a582:	a907      	add	r1, sp, #28
9001a584:	4620      	mov	r0, r4
9001a586:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a588:	4798      	blx	r3
9001a58a:	3601      	adds	r6, #1
9001a58c:	b2b6      	uxth	r6, r6
9001a58e:	e7e7      	b.n	9001a560 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
9001a590:	240245a0 	.word	0x240245a0

9001a594 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001a594:	4b03      	ldr	r3, [pc, #12]	@ (9001a5a4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001a596:	2200      	movs	r2, #0
9001a598:	801a      	strh	r2, [r3, #0]
9001a59a:	805a      	strh	r2, [r3, #2]
9001a59c:	809a      	strh	r2, [r3, #4]
9001a59e:	80da      	strh	r2, [r3, #6]
9001a5a0:	4770      	bx	lr
9001a5a2:	bf00      	nop
9001a5a4:	240245ec 	.word	0x240245ec

9001a5a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
9001a5a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a5ac:	b09d      	sub	sp, #116	@ 0x74
9001a5ae:	4606      	mov	r6, r0
9001a5b0:	4614      	mov	r4, r2
9001a5b2:	468a      	mov	sl, r1
9001a5b4:	a803      	add	r0, sp, #12
9001a5b6:	461d      	mov	r5, r3
9001a5b8:	f001 f920 	bl	9001b7fc <_ZN8touchgfx12TextProviderC1Ev>
9001a5bc:	6833      	ldr	r3, [r6, #0]
9001a5be:	4630      	mov	r0, r6
9001a5c0:	f242 0b0b 	movw	fp, #8203	@ 0x200b
9001a5c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a5c6:	4798      	blx	r3
9001a5c8:	6833      	ldr	r3, [r6, #0]
9001a5ca:	4607      	mov	r7, r0
9001a5cc:	4630      	mov	r0, r6
9001a5ce:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a5d0:	4798      	blx	r3
9001a5d2:	462a      	mov	r2, r5
9001a5d4:	2500      	movs	r5, #0
9001a5d6:	4621      	mov	r1, r4
9001a5d8:	9000      	str	r0, [sp, #0]
9001a5da:	463b      	mov	r3, r7
9001a5dc:	462c      	mov	r4, r5
9001a5de:	46a9      	mov	r9, r5
9001a5e0:	46a8      	mov	r8, r5
9001a5e2:	a803      	add	r0, sp, #12
9001a5e4:	f001 f95d 	bl	9001b8a2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a5e8:	2300      	movs	r3, #0
9001a5ea:	9302      	str	r3, [sp, #8]
9001a5ec:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001a5f0:	429c      	cmp	r4, r3
9001a5f2:	d002      	beq.n	9001a5fa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
9001a5f4:	455c      	cmp	r4, fp
9001a5f6:	bf18      	it	ne
9001a5f8:	4625      	movne	r5, r4
9001a5fa:	ab02      	add	r3, sp, #8
9001a5fc:	4632      	mov	r2, r6
9001a5fe:	4651      	mov	r1, sl
9001a600:	a803      	add	r0, sp, #12
9001a602:	f001 fc43 	bl	9001be8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a606:	4604      	mov	r4, r0
9001a608:	b108      	cbz	r0, 9001a60e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001a60a:	280a      	cmp	r0, #10
9001a60c:	d10a      	bne.n	9001a624 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001a60e:	45c1      	cmp	r9, r8
9001a610:	bf38      	it	cc
9001a612:	46c1      	movcc	r9, r8
9001a614:	f04f 0800 	mov.w	r8, #0
9001a618:	2c00      	cmp	r4, #0
9001a61a:	d1e5      	bne.n	9001a5e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001a61c:	4648      	mov	r0, r9
9001a61e:	b01d      	add	sp, #116	@ 0x74
9001a620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a624:	9a02      	ldr	r2, [sp, #8]
9001a626:	2a00      	cmp	r2, #0
9001a628:	d0de      	beq.n	9001a5e8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001a62a:	7b57      	ldrb	r7, [r2, #13]
9001a62c:	4629      	mov	r1, r5
9001a62e:	6833      	ldr	r3, [r6, #0]
9001a630:	007f      	lsls	r7, r7, #1
9001a632:	8894      	ldrh	r4, [r2, #4]
9001a634:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001a636:	f407 7080 	and.w	r0, r7, #256	@ 0x100
9001a63a:	7a97      	ldrb	r7, [r2, #10]
9001a63c:	4307      	orrs	r7, r0
9001a63e:	4630      	mov	r0, r6
9001a640:	4798      	blx	r3
9001a642:	4438      	add	r0, r7
9001a644:	4480      	add	r8, r0
9001a646:	fa1f f888 	uxth.w	r8, r8
9001a64a:	e7e5      	b.n	9001a618 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

9001a64c <_ZNK8touchgfx4Font12getCharWidthEt>:
9001a64c:	b508      	push	{r3, lr}
9001a64e:	6803      	ldr	r3, [r0, #0]
9001a650:	68db      	ldr	r3, [r3, #12]
9001a652:	4798      	blx	r3
9001a654:	b128      	cbz	r0, 9001a662 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001a656:	7b43      	ldrb	r3, [r0, #13]
9001a658:	7a80      	ldrb	r0, [r0, #10]
9001a65a:	005b      	lsls	r3, r3, #1
9001a65c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001a660:	4318      	orrs	r0, r3
9001a662:	bd08      	pop	{r3, pc}

9001a664 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
9001a664:	b40e      	push	{r1, r2, r3}
9001a666:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a668:	b09e      	sub	sp, #120	@ 0x78
9001a66a:	4605      	mov	r5, r0
9001a66c:	ab23      	add	r3, sp, #140	@ 0x8c
9001a66e:	a805      	add	r0, sp, #20
9001a670:	f853 4b04 	ldr.w	r4, [r3], #4
9001a674:	9303      	str	r3, [sp, #12]
9001a676:	f001 f8c1 	bl	9001b7fc <_ZN8touchgfx12TextProviderC1Ev>
9001a67a:	682b      	ldr	r3, [r5, #0]
9001a67c:	4628      	mov	r0, r5
9001a67e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a680:	4798      	blx	r3
9001a682:	682b      	ldr	r3, [r5, #0]
9001a684:	4606      	mov	r6, r0
9001a686:	4628      	mov	r0, r5
9001a688:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a68a:	4798      	blx	r3
9001a68c:	4633      	mov	r3, r6
9001a68e:	4621      	mov	r1, r4
9001a690:	ae1e      	add	r6, sp, #120	@ 0x78
9001a692:	2400      	movs	r4, #0
9001a694:	9000      	str	r0, [sp, #0]
9001a696:	9a03      	ldr	r2, [sp, #12]
9001a698:	a805      	add	r0, sp, #20
9001a69a:	f001 f902 	bl	9001b8a2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a69e:	f846 4d68 	str.w	r4, [r6, #-104]!
9001a6a2:	462a      	mov	r2, r5
9001a6a4:	4633      	mov	r3, r6
9001a6a6:	4621      	mov	r1, r4
9001a6a8:	a805      	add	r0, sp, #20
9001a6aa:	f001 fbef 	bl	9001be8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a6ae:	b300      	cbz	r0, 9001a6f2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
9001a6b0:	280a      	cmp	r0, #10
9001a6b2:	d01a      	beq.n	9001a6ea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001a6b4:	9f04      	ldr	r7, [sp, #16]
9001a6b6:	b1c7      	cbz	r7, 9001a6ea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001a6b8:	7b78      	ldrb	r0, [r7, #13]
9001a6ba:	7a3b      	ldrb	r3, [r7, #8]
9001a6bc:	00c1      	lsls	r1, r0, #3
9001a6be:	88ea      	ldrh	r2, [r5, #6]
9001a6c0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001a6c4:	4319      	orrs	r1, r3
9001a6c6:	0643      	lsls	r3, r0, #25
9001a6c8:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001a6cc:	bf48      	it	mi
9001a6ce:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
9001a6d2:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001a6d6:	bf48      	it	mi
9001a6d8:	b219      	sxthmi	r1, r3
9001a6da:	79fb      	ldrb	r3, [r7, #7]
9001a6dc:	4303      	orrs	r3, r0
9001a6de:	4413      	add	r3, r2
9001a6e0:	1a5b      	subs	r3, r3, r1
9001a6e2:	b21b      	sxth	r3, r3
9001a6e4:	429c      	cmp	r4, r3
9001a6e6:	bfb8      	it	lt
9001a6e8:	461c      	movlt	r4, r3
9001a6ea:	4633      	mov	r3, r6
9001a6ec:	462a      	mov	r2, r5
9001a6ee:	2100      	movs	r1, #0
9001a6f0:	e7da      	b.n	9001a6a8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001a6f2:	b2a0      	uxth	r0, r4
9001a6f4:	b01e      	add	sp, #120	@ 0x78
9001a6f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001a6fa:	b003      	add	sp, #12
9001a6fc:	4770      	bx	lr

9001a6fe <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001a6fe:	7a43      	ldrb	r3, [r0, #9]
9001a700:	8880      	ldrh	r0, [r0, #4]
9001a702:	4418      	add	r0, r3
9001a704:	b280      	uxth	r0, r0
9001a706:	4770      	bx	lr

9001a708 <_ZNK8touchgfx4Font13getFontHeightEv>:
9001a708:	6803      	ldr	r3, [r0, #0]
9001a70a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001a70c:	4718      	bx	r3

9001a70e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001a70e:	b40e      	push	{r1, r2, r3}
9001a710:	b570      	push	{r4, r5, r6, lr}
9001a712:	b09d      	sub	sp, #116	@ 0x74
9001a714:	4604      	mov	r4, r0
9001a716:	ab21      	add	r3, sp, #132	@ 0x84
9001a718:	a803      	add	r0, sp, #12
9001a71a:	f853 5b04 	ldr.w	r5, [r3], #4
9001a71e:	9302      	str	r3, [sp, #8]
9001a720:	f001 f86c 	bl	9001b7fc <_ZN8touchgfx12TextProviderC1Ev>
9001a724:	6823      	ldr	r3, [r4, #0]
9001a726:	4620      	mov	r0, r4
9001a728:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a72a:	4798      	blx	r3
9001a72c:	6823      	ldr	r3, [r4, #0]
9001a72e:	4606      	mov	r6, r0
9001a730:	4620      	mov	r0, r4
9001a732:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a734:	2401      	movs	r4, #1
9001a736:	4798      	blx	r3
9001a738:	4633      	mov	r3, r6
9001a73a:	9000      	str	r0, [sp, #0]
9001a73c:	4629      	mov	r1, r5
9001a73e:	9a02      	ldr	r2, [sp, #8]
9001a740:	a803      	add	r0, sp, #12
9001a742:	f001 f8ae 	bl	9001b8a2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a746:	a803      	add	r0, sp, #12
9001a748:	f001 fc6c 	bl	9001c024 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a74c:	b2a3      	uxth	r3, r4
9001a74e:	b138      	cbz	r0, 9001a760 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001a750:	280a      	cmp	r0, #10
9001a752:	a803      	add	r0, sp, #12
9001a754:	bf04      	itt	eq
9001a756:	3301      	addeq	r3, #1
9001a758:	b21c      	sxtheq	r4, r3
9001a75a:	f001 fc63 	bl	9001c024 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a75e:	e7f5      	b.n	9001a74c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001a760:	4618      	mov	r0, r3
9001a762:	b01d      	add	sp, #116	@ 0x74
9001a764:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a768:	b003      	add	sp, #12
9001a76a:	4770      	bx	lr

9001a76c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
9001a76c:	b40e      	push	{r1, r2, r3}
9001a76e:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a770:	b09e      	sub	sp, #120	@ 0x78
9001a772:	4604      	mov	r4, r0
9001a774:	ab23      	add	r3, sp, #140	@ 0x8c
9001a776:	a805      	add	r0, sp, #20
9001a778:	f853 5b04 	ldr.w	r5, [r3], #4
9001a77c:	9303      	str	r3, [sp, #12]
9001a77e:	f001 f83d 	bl	9001b7fc <_ZN8touchgfx12TextProviderC1Ev>
9001a782:	6823      	ldr	r3, [r4, #0]
9001a784:	4620      	mov	r0, r4
9001a786:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a788:	4798      	blx	r3
9001a78a:	6823      	ldr	r3, [r4, #0]
9001a78c:	4606      	mov	r6, r0
9001a78e:	4620      	mov	r0, r4
9001a790:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a792:	4798      	blx	r3
9001a794:	4633      	mov	r3, r6
9001a796:	4629      	mov	r1, r5
9001a798:	9000      	str	r0, [sp, #0]
9001a79a:	9a03      	ldr	r2, [sp, #12]
9001a79c:	a805      	add	r0, sp, #20
9001a79e:	f001 f880 	bl	9001b8a2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a7a2:	ad1e      	add	r5, sp, #120	@ 0x78
9001a7a4:	2100      	movs	r1, #0
9001a7a6:	f647 76ff 	movw	r6, #32767	@ 0x7fff
9001a7aa:	4622      	mov	r2, r4
9001a7ac:	a805      	add	r0, sp, #20
9001a7ae:	f845 1d68 	str.w	r1, [r5, #-104]!
9001a7b2:	462b      	mov	r3, r5
9001a7b4:	f001 fb6a 	bl	9001be8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a7b8:	b1d8      	cbz	r0, 9001a7f2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
9001a7ba:	280a      	cmp	r0, #10
9001a7bc:	d012      	beq.n	9001a7e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001a7be:	9804      	ldr	r0, [sp, #16]
9001a7c0:	b180      	cbz	r0, 9001a7e4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001a7c2:	7b47      	ldrb	r7, [r0, #13]
9001a7c4:	88e2      	ldrh	r2, [r4, #6]
9001a7c6:	00fb      	lsls	r3, r7, #3
9001a7c8:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001a7cc:	7a03      	ldrb	r3, [r0, #8]
9001a7ce:	430b      	orrs	r3, r1
9001a7d0:	0679      	lsls	r1, r7, #25
9001a7d2:	bf44      	itt	mi
9001a7d4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a7d8:	b21b      	sxthmi	r3, r3
9001a7da:	1ad3      	subs	r3, r2, r3
9001a7dc:	b21b      	sxth	r3, r3
9001a7de:	429e      	cmp	r6, r3
9001a7e0:	bfa8      	it	ge
9001a7e2:	461e      	movge	r6, r3
9001a7e4:	462b      	mov	r3, r5
9001a7e6:	4622      	mov	r2, r4
9001a7e8:	2100      	movs	r1, #0
9001a7ea:	a805      	add	r0, sp, #20
9001a7ec:	f001 fb4e 	bl	9001be8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a7f0:	e7e2      	b.n	9001a7b8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001a7f2:	4630      	mov	r0, r6
9001a7f4:	b01e      	add	sp, #120	@ 0x78
9001a7f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001a7fa:	b003      	add	sp, #12
9001a7fc:	4770      	bx	lr

9001a7fe <_ZNK8touchgfx8Drawable10invalidateEv>:
9001a7fe:	b513      	push	{r0, r1, r4, lr}
9001a800:	6803      	ldr	r3, [r0, #0]
9001a802:	2400      	movs	r4, #0
9001a804:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001a808:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001a80c:	f8ad 1004 	strh.w	r1, [sp, #4]
9001a810:	4669      	mov	r1, sp
9001a812:	691b      	ldr	r3, [r3, #16]
9001a814:	9400      	str	r4, [sp, #0]
9001a816:	f8ad 2006 	strh.w	r2, [sp, #6]
9001a81a:	4798      	blx	r3
9001a81c:	b002      	add	sp, #8
9001a81e:	bd10      	pop	{r4, pc}

9001a820 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001a820:	b538      	push	{r3, r4, r5, lr}
9001a822:	680b      	ldr	r3, [r1, #0]
9001a824:	460c      	mov	r4, r1
9001a826:	4605      	mov	r5, r0
9001a828:	68db      	ldr	r3, [r3, #12]
9001a82a:	4798      	blx	r3
9001a82c:	6823      	ldr	r3, [r4, #0]
9001a82e:	4620      	mov	r0, r4
9001a830:	4629      	mov	r1, r5
9001a832:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a834:	4798      	blx	r3
9001a836:	4628      	mov	r0, r5
9001a838:	bd38      	pop	{r3, r4, r5, pc}

9001a83a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
9001a83a:	b410      	push	{r4}
9001a83c:	880a      	ldrh	r2, [r1, #0]
9001a83e:	8884      	ldrh	r4, [r0, #4]
9001a840:	4422      	add	r2, r4
9001a842:	800a      	strh	r2, [r1, #0]
9001a844:	884a      	ldrh	r2, [r1, #2]
9001a846:	88c4      	ldrh	r4, [r0, #6]
9001a848:	4422      	add	r2, r4
9001a84a:	804a      	strh	r2, [r1, #2]
9001a84c:	6940      	ldr	r0, [r0, #20]
9001a84e:	b120      	cbz	r0, 9001a85a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001a850:	6803      	ldr	r3, [r0, #0]
9001a852:	f85d 4b04 	ldr.w	r4, [sp], #4
9001a856:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a858:	4718      	bx	r3
9001a85a:	f85d 4b04 	ldr.w	r4, [sp], #4
9001a85e:	4770      	bx	lr

9001a860 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001a860:	b570      	push	{r4, r5, r6, lr}
9001a862:	8882      	ldrh	r2, [r0, #4]
9001a864:	460c      	mov	r4, r1
9001a866:	880b      	ldrh	r3, [r1, #0]
9001a868:	4605      	mov	r5, r0
9001a86a:	4413      	add	r3, r2
9001a86c:	800b      	strh	r3, [r1, #0]
9001a86e:	884b      	ldrh	r3, [r1, #2]
9001a870:	88c2      	ldrh	r2, [r0, #6]
9001a872:	4413      	add	r3, r2
9001a874:	804b      	strh	r3, [r1, #2]
9001a876:	1d01      	adds	r1, r0, #4
9001a878:	4620      	mov	r0, r4
9001a87a:	f7f8 fe53 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
9001a87e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001a882:	2b00      	cmp	r3, #0
9001a884:	dd0b      	ble.n	9001a89e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001a886:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001a88a:	2b00      	cmp	r3, #0
9001a88c:	dd07      	ble.n	9001a89e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001a88e:	6968      	ldr	r0, [r5, #20]
9001a890:	b128      	cbz	r0, 9001a89e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001a892:	6803      	ldr	r3, [r0, #0]
9001a894:	4621      	mov	r1, r4
9001a896:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001a898:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a89c:	4718      	bx	r3
9001a89e:	bd70      	pop	{r4, r5, r6, pc}

9001a8a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001a8a0:	b570      	push	{r4, r5, r6, lr}
9001a8a2:	8882      	ldrh	r2, [r0, #4]
9001a8a4:	460c      	mov	r4, r1
9001a8a6:	880b      	ldrh	r3, [r1, #0]
9001a8a8:	4605      	mov	r5, r0
9001a8aa:	4413      	add	r3, r2
9001a8ac:	800b      	strh	r3, [r1, #0]
9001a8ae:	884b      	ldrh	r3, [r1, #2]
9001a8b0:	88c2      	ldrh	r2, [r0, #6]
9001a8b2:	4413      	add	r3, r2
9001a8b4:	804b      	strh	r3, [r1, #2]
9001a8b6:	1d01      	adds	r1, r0, #4
9001a8b8:	4620      	mov	r0, r4
9001a8ba:	f7f8 fe33 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
9001a8be:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001a8c2:	2b00      	cmp	r3, #0
9001a8c4:	dd19      	ble.n	9001a8fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001a8c6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001a8ca:	2b00      	cmp	r3, #0
9001a8cc:	dd15      	ble.n	9001a8fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001a8ce:	6968      	ldr	r0, [r5, #20]
9001a8d0:	b128      	cbz	r0, 9001a8de <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001a8d2:	6803      	ldr	r3, [r0, #0]
9001a8d4:	4621      	mov	r1, r4
9001a8d6:	691b      	ldr	r3, [r3, #16]
9001a8d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a8dc:	4718      	bx	r3
9001a8de:	4b07      	ldr	r3, [pc, #28]	@ (9001a8fc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001a8e0:	681b      	ldr	r3, [r3, #0]
9001a8e2:	3304      	adds	r3, #4
9001a8e4:	429d      	cmp	r5, r3
9001a8e6:	d108      	bne.n	9001a8fa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001a8e8:	f7fe ff10 	bl	9001970c <_ZN8touchgfx11Application11getInstanceEv>
9001a8ec:	6803      	ldr	r3, [r0, #0]
9001a8ee:	6821      	ldr	r1, [r4, #0]
9001a8f0:	6862      	ldr	r2, [r4, #4]
9001a8f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001a8f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a8f8:	4718      	bx	r3
9001a8fa:	bd70      	pop	{r4, r5, r6, pc}
9001a8fc:	240245e4 	.word	0x240245e4

9001a900 <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001a900:	b570      	push	{r4, r5, r6, lr}
9001a902:	4604      	mov	r4, r0
9001a904:	4616      	mov	r6, r2
9001a906:	460d      	mov	r5, r1
9001a908:	b901      	cbnz	r1, 9001a90c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001a90a:	b192      	cbz	r2, 9001a932 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
9001a90c:	6823      	ldr	r3, [r4, #0]
9001a90e:	4620      	mov	r0, r4
9001a910:	699b      	ldr	r3, [r3, #24]
9001a912:	4798      	blx	r3
9001a914:	88e2      	ldrh	r2, [r4, #6]
9001a916:	88a1      	ldrh	r1, [r4, #4]
9001a918:	4620      	mov	r0, r4
9001a91a:	4432      	add	r2, r6
9001a91c:	4429      	add	r1, r5
9001a91e:	b212      	sxth	r2, r2
9001a920:	b209      	sxth	r1, r1
9001a922:	f7f9 f8d5 	bl	90013ad0 <_ZN8touchgfx8Drawable5setXYEss>
9001a926:	6823      	ldr	r3, [r4, #0]
9001a928:	4620      	mov	r0, r4
9001a92a:	699b      	ldr	r3, [r3, #24]
9001a92c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a930:	4718      	bx	r3
9001a932:	bd70      	pop	{r4, r5, r6, pc}

9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
9001a934:	b510      	push	{r4, lr}
9001a936:	2300      	movs	r3, #0
9001a938:	4604      	mov	r4, r0
9001a93a:	4608      	mov	r0, r1
9001a93c:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001a940:	8023      	strh	r3, [r4, #0]
9001a942:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001a946:	8063      	strh	r3, [r4, #2]
9001a948:	6803      	ldr	r3, [r0, #0]
9001a94a:	80a1      	strh	r1, [r4, #4]
9001a94c:	4621      	mov	r1, r4
9001a94e:	80e2      	strh	r2, [r4, #6]
9001a950:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a952:	4798      	blx	r3
9001a954:	4620      	mov	r0, r4
9001a956:	bd10      	pop	{r4, pc}

9001a958 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
9001a958:	4770      	bx	lr

9001a95a <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
9001a95a:	b510      	push	{r4, lr}
9001a95c:	4604      	mov	r4, r0
9001a95e:	211c      	movs	r1, #28
9001a960:	f011 f91b 	bl	9002bb9a <_ZdlPvj>
9001a964:	4620      	mov	r0, r4
9001a966:	bd10      	pop	{r4, pc}

9001a968 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
9001a968:	4a04      	ldr	r2, [pc, #16]	@ (9001a97c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
9001a96a:	6002      	str	r2, [r0, #0]
9001a96c:	2200      	movs	r2, #0
9001a96e:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001a972:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001a976:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001a97a:	4770      	bx	lr
9001a97c:	900305f0 	.word	0x900305f0

9001a980 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
9001a980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a984:	4604      	mov	r4, r0
9001a986:	b087      	sub	sp, #28
9001a988:	4696      	mov	lr, r2
9001a98a:	6880      	ldr	r0, [r0, #8]
9001a98c:	8b22      	ldrh	r2, [r4, #24]
9001a98e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
9001a992:	9105      	str	r1, [sp, #20]
9001a994:	1c51      	adds	r1, r2, #1
9001a996:	8321      	strh	r1, [r4, #24]
9001a998:	2101      	movs	r1, #1
9001a99a:	5481      	strb	r1, [r0, r2]
9001a99c:	4689      	mov	r9, r1
9001a99e:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a9a2:	8b60      	ldrh	r0, [r4, #26]
9001a9a4:	ee06 2a90 	vmov	s13, r2
9001a9a8:	68e2      	ldr	r2, [r4, #12]
9001a9aa:	1845      	adds	r5, r0, r1
9001a9ac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a9b0:	eb02 0280 	add.w	r2, r2, r0, lsl #2
9001a9b4:	8365      	strh	r5, [r4, #26]
9001a9b6:	edc2 6a00 	vstr	s13, [r2]
9001a9ba:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001a9be:	8b60      	ldrh	r0, [r4, #26]
9001a9c0:	ee07 2a10 	vmov	s14, r2
9001a9c4:	68e2      	ldr	r2, [r4, #12]
9001a9c6:	1845      	adds	r5, r0, r1
9001a9c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a9cc:	eb02 0280 	add.w	r2, r2, r0, lsl #2
9001a9d0:	8365      	strh	r5, [r4, #26]
9001a9d2:	1d18      	adds	r0, r3, #4
9001a9d4:	460d      	mov	r5, r1
9001a9d6:	ed82 7a00 	vstr	s14, [r2]
9001a9da:	f8be 2000 	ldrh.w	r2, [lr]
9001a9de:	9203      	str	r2, [sp, #12]
9001a9e0:	2200      	movs	r2, #0
9001a9e2:	4613      	mov	r3, r2
9001a9e4:	4694      	mov	ip, r2
9001a9e6:	9201      	str	r2, [sp, #4]
9001a9e8:	9202      	str	r2, [sp, #8]
9001a9ea:	f8b4 8018 	ldrh.w	r8, [r4, #24]
9001a9ee:	9e05      	ldr	r6, [sp, #20]
9001a9f0:	f108 0701 	add.w	r7, r8, #1
9001a9f4:	f8d4 a008 	ldr.w	sl, [r4, #8]
9001a9f8:	428e      	cmp	r6, r1
9001a9fa:	b2bf      	uxth	r7, r7
9001a9fc:	eb0a 0b08 	add.w	fp, sl, r8
9001aa00:	f340 80b6 	ble.w	9001ab70 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
9001aa04:	9b03      	ldr	r3, [sp, #12]
9001aa06:	f9b0 c000 	ldrsh.w	ip, [r0]
9001aa0a:	fa43 fb05 	asr.w	fp, r3, r5
9001aa0e:	f00b 0b01 	and.w	fp, fp, #1
9001aa12:	fa5f f38b 	uxtb.w	r3, fp
9001aa16:	9304      	str	r3, [sp, #16]
9001aa18:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001aa1c:	f1bb 0f00 	cmp.w	fp, #0
9001aa20:	d057      	beq.n	9001aad2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
9001aa22:	ee07 ca90 	vmov	s15, ip
9001aa26:	8327      	strh	r7, [r4, #24]
9001aa28:	eef8 5ae7 	vcvt.f32.s32	s11, s15
9001aa2c:	ee07 3a90 	vmov	s15, r3
9001aa30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001aa34:	f1b9 0f00 	cmp.w	r9, #0
9001aa38:	d028      	beq.n	9001aa8c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
9001aa3a:	f04f 0602 	mov.w	r6, #2
9001aa3e:	f80a 6008 	strb.w	r6, [sl, r8]
9001aa42:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aa46:	68e7      	ldr	r7, [r4, #12]
9001aa48:	f108 0901 	add.w	r9, r8, #1
9001aa4c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aa50:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aa54:	edc7 5a00 	vstr	s11, [r7]
9001aa58:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aa5c:	68e7      	ldr	r7, [r4, #12]
9001aa5e:	f108 0901 	add.w	r9, r8, #1
9001aa62:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aa66:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aa6a:	edc7 7a00 	vstr	s15, [r7]
9001aa6e:	3501      	adds	r5, #1
9001aa70:	2d10      	cmp	r5, #16
9001aa72:	d106      	bne.n	9001aa82 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
9001aa74:	9d02      	ldr	r5, [sp, #8]
9001aa76:	3501      	adds	r5, #1
9001aa78:	9502      	str	r5, [sp, #8]
9001aa7a:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
9001aa7e:	9503      	str	r5, [sp, #12]
9001aa80:	2500      	movs	r5, #0
9001aa82:	3101      	adds	r1, #1
9001aa84:	3004      	adds	r0, #4
9001aa86:	f8dd 9010 	ldr.w	r9, [sp, #16]
9001aa8a:	e7ae      	b.n	9001a9ea <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
9001aa8c:	f04f 0605 	mov.w	r6, #5
9001aa90:	ed9d 5a01 	vldr	s10, [sp, #4]
9001aa94:	f80a 6008 	strb.w	r6, [sl, r8]
9001aa98:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001aa9c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aaa0:	68e7      	ldr	r7, [r4, #12]
9001aaa2:	f108 0901 	add.w	r9, r8, #1
9001aaa6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aaaa:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aaae:	ed87 5a00 	vstr	s10, [r7]
9001aab2:	ee05 2a10 	vmov	s10, r2
9001aab6:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aaba:	68e7      	ldr	r7, [r4, #12]
9001aabc:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001aac0:	f108 0901 	add.w	r9, r8, #1
9001aac4:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aac8:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aacc:	ed87 5a00 	vstr	s10, [r7]
9001aad0:	e7b7      	b.n	9001aa42 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
9001aad2:	f1b9 0f00 	cmp.w	r9, #0
9001aad6:	d147      	bne.n	9001ab68 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
9001aad8:	f04f 0605 	mov.w	r6, #5
9001aadc:	eddd 7a01 	vldr	s15, [sp, #4]
9001aae0:	8327      	strh	r7, [r4, #24]
9001aae2:	f80a 6008 	strb.w	r6, [sl, r8]
9001aae6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001aaea:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aaee:	68e7      	ldr	r7, [r4, #12]
9001aaf0:	f108 0901 	add.w	r9, r8, #1
9001aaf4:	9e01      	ldr	r6, [sp, #4]
9001aaf6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aafa:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aafe:	4466      	add	r6, ip
9001ab00:	edc7 7a00 	vstr	s15, [r7]
9001ab04:	ee07 2a90 	vmov	s15, r2
9001ab08:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001ab0c:	441a      	add	r2, r3
9001ab0e:	68e7      	ldr	r7, [r4, #12]
9001ab10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ab14:	f108 0901 	add.w	r9, r8, #1
9001ab18:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001ab1c:	f8a4 901a 	strh.w	r9, [r4, #26]
9001ab20:	edc7 7a00 	vstr	s15, [r7]
9001ab24:	ee07 6a90 	vmov	s15, r6
9001ab28:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001ab2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ab30:	68e7      	ldr	r7, [r4, #12]
9001ab32:	f108 0901 	add.w	r9, r8, #1
9001ab36:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001ab3a:	ee67 7a86 	vmul.f32	s15, s15, s12
9001ab3e:	f8a4 901a 	strh.w	r9, [r4, #26]
9001ab42:	edc7 7a00 	vstr	s15, [r7]
9001ab46:	ee07 2a90 	vmov	s15, r2
9001ab4a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001ab4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ab52:	68e7      	ldr	r7, [r4, #12]
9001ab54:	f108 0901 	add.w	r9, r8, #1
9001ab58:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001ab5c:	ee67 7a86 	vmul.f32	s15, s15, s12
9001ab60:	f8a4 901a 	strh.w	r9, [r4, #26]
9001ab64:	edc7 7a00 	vstr	s15, [r7]
9001ab68:	461a      	mov	r2, r3
9001ab6a:	f8cd c004 	str.w	ip, [sp, #4]
9001ab6e:	e77e      	b.n	9001aa6e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
9001ab70:	f1b9 0f00 	cmp.w	r9, #0
9001ab74:	d028      	beq.n	9001abc8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
9001ab76:	ee07 ca90 	vmov	s15, ip
9001ab7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ab7e:	eef4 6a67 	vcmp.f32	s13, s15
9001ab82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ab86:	d108      	bne.n	9001ab9a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
9001ab88:	ee07 3a90 	vmov	s15, r3
9001ab8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ab90:	eeb4 7a67 	vcmp.f32	s14, s15
9001ab94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ab98:	d016      	beq.n	9001abc8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
9001ab9a:	2302      	movs	r3, #2
9001ab9c:	8327      	strh	r7, [r4, #24]
9001ab9e:	f88b 3000 	strb.w	r3, [fp]
9001aba2:	8b62      	ldrh	r2, [r4, #26]
9001aba4:	68e3      	ldr	r3, [r4, #12]
9001aba6:	1c51      	adds	r1, r2, #1
9001aba8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001abac:	8361      	strh	r1, [r4, #26]
9001abae:	edc3 6a00 	vstr	s13, [r3]
9001abb2:	8b62      	ldrh	r2, [r4, #26]
9001abb4:	68e3      	ldr	r3, [r4, #12]
9001abb6:	1c51      	adds	r1, r2, #1
9001abb8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001abbc:	8361      	strh	r1, [r4, #26]
9001abbe:	ed83 7a00 	vstr	s14, [r3]
9001abc2:	b007      	add	sp, #28
9001abc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001abc8:	2305      	movs	r3, #5
9001abca:	eddd 7a01 	vldr	s15, [sp, #4]
9001abce:	8327      	strh	r7, [r4, #24]
9001abd0:	f88b 3000 	strb.w	r3, [fp]
9001abd4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001abd8:	8b61      	ldrh	r1, [r4, #26]
9001abda:	68e3      	ldr	r3, [r4, #12]
9001abdc:	1c4d      	adds	r5, r1, #1
9001abde:	eb03 0381 	add.w	r3, r3, r1, lsl #2
9001abe2:	8365      	strh	r5, [r4, #26]
9001abe4:	edc3 7a00 	vstr	s15, [r3]
9001abe8:	ee07 2a90 	vmov	s15, r2
9001abec:	8b61      	ldrh	r1, [r4, #26]
9001abee:	68e3      	ldr	r3, [r4, #12]
9001abf0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001abf4:	1c4d      	adds	r5, r1, #1
9001abf6:	eb03 0381 	add.w	r3, r3, r1, lsl #2
9001abfa:	8365      	strh	r5, [r4, #26]
9001abfc:	edc3 7a00 	vstr	s15, [r3]
9001ac00:	e7cf      	b.n	9001aba2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

9001ac04 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
9001ac04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ac08:	4604      	mov	r4, r0
9001ac0a:	b08e      	sub	sp, #56	@ 0x38
9001ac0c:	4699      	mov	r9, r3
9001ac0e:	4688      	mov	r8, r1
9001ac10:	4615      	mov	r5, r2
9001ac12:	9e16      	ldr	r6, [sp, #88]	@ 0x58
9001ac14:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
9001ac18:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
9001ac1a:	f7e8 fc8d 	bl	90003538 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
9001ac1e:	6060      	str	r0, [r4, #4]
9001ac20:	f1b9 0f00 	cmp.w	r9, #0
9001ac24:	f000 80e8 	beq.w	9001adf8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001ac28:	2800      	cmp	r0, #0
9001ac2a:	f000 80e5 	beq.w	9001adf8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001ac2e:	a805      	add	r0, sp, #20
9001ac30:	f000 f8f9 	bl	9001ae26 <_ZN8touchgfx9Matrix3x3C1Ev>
9001ac34:	6833      	ldr	r3, [r6, #0]
9001ac36:	4630      	mov	r0, r6
9001ac38:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
9001ac3a:	4798      	blx	r3
9001ac3c:	a805      	add	r0, sp, #20
9001ac3e:	eef0 0a40 	vmov.f32	s1, s0
9001ac42:	f000 f8f4 	bl	9001ae2e <_ZN8touchgfx9Matrix3x35scaleEff>
9001ac46:	6860      	ldr	r0, [r4, #4]
9001ac48:	f1ba 0f03 	cmp.w	sl, #3
9001ac4c:	d83b      	bhi.n	9001acc6 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
9001ac4e:	e8df f00a 	tbb	[pc, sl]
9001ac52:	1002      	.short	0x1002
9001ac54:	9f71      	.short	0x9f71
9001ac56:	6803      	ldr	r3, [r0, #0]
9001ac58:	462a      	mov	r2, r5
9001ac5a:	4641      	mov	r1, r8
9001ac5c:	689b      	ldr	r3, [r3, #8]
9001ac5e:	4798      	blx	r3
9001ac60:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
9001ac64:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9001ac68:	ee07 7a90 	vmov	s15, r7
9001ac6c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
9001ac70:	e026      	b.n	9001acc0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
9001ac72:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
9001ac76:	f8b8 3004 	ldrh.w	r3, [r8, #4]
9001ac7a:	8869      	ldrh	r1, [r5, #2]
9001ac7c:	1a9b      	subs	r3, r3, r2
9001ac7e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001ac82:	aa03      	add	r2, sp, #12
9001ac84:	1a5b      	subs	r3, r3, r1
9001ac86:	4641      	mov	r1, r8
9001ac88:	f8ad 300c 	strh.w	r3, [sp, #12]
9001ac8c:	882b      	ldrh	r3, [r5, #0]
9001ac8e:	f8ad 300e 	strh.w	r3, [sp, #14]
9001ac92:	88ab      	ldrh	r3, [r5, #4]
9001ac94:	f8ad 3012 	strh.w	r3, [sp, #18]
9001ac98:	6803      	ldr	r3, [r0, #0]
9001ac9a:	689b      	ldr	r3, [r3, #8]
9001ac9c:	4798      	blx	r3
9001ac9e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 9001ae00 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
9001aca2:	a805      	add	r0, sp, #20
9001aca4:	f000 f8e8 	bl	9001ae78 <_ZN8touchgfx9Matrix3x36rotateEf>
9001aca8:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
9001acac:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9001acae:	ee07 7a90 	vmov	s15, r7
9001acb2:	1a9b      	subs	r3, r3, r2
9001acb4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9001acb8:	ee00 3a10 	vmov	s0, r3
9001acbc:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
9001acc0:	a805      	add	r0, sp, #20
9001acc2:	f000 f927 	bl	9001af14 <_ZN8touchgfx9Matrix3x39translateEff>
9001acc6:	6860      	ldr	r0, [r4, #4]
9001acc8:	a905      	add	r1, sp, #20
9001acca:	2500      	movs	r5, #0
9001accc:	f109 0602 	add.w	r6, r9, #2
9001acd0:	6803      	ldr	r3, [r0, #0]
9001acd2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001acd4:	4798      	blx	r3
9001acd6:	6860      	ldr	r0, [r4, #4]
9001acd8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
9001acda:	6803      	ldr	r3, [r0, #0]
9001acdc:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
9001ace0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ace2:	4798      	blx	r3
9001ace4:	6860      	ldr	r0, [r4, #4]
9001ace6:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
9001acea:	6803      	ldr	r3, [r0, #0]
9001acec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001acee:	4798      	blx	r3
9001acf0:	6860      	ldr	r0, [r4, #4]
9001acf2:	2101      	movs	r1, #1
9001acf4:	6803      	ldr	r3, [r0, #0]
9001acf6:	68db      	ldr	r3, [r3, #12]
9001acf8:	4798      	blx	r3
9001acfa:	f8b9 7000 	ldrh.w	r7, [r9]
9001acfe:	f104 0310 	add.w	r3, r4, #16
9001ad02:	61a5      	str	r5, [r4, #24]
9001ad04:	f104 0208 	add.w	r2, r4, #8
9001ad08:	f104 0114 	add.w	r1, r4, #20
9001ad0c:	f104 000c 	add.w	r0, r4, #12
9001ad10:	f7ea fdca 	bl	900058a8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
9001ad14:	42af      	cmp	r7, r5
9001ad16:	dd60      	ble.n	9001adda <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
9001ad18:	8831      	ldrh	r1, [r6, #0]
9001ad1a:	1cb2      	adds	r2, r6, #2
9001ad1c:	4620      	mov	r0, r4
9001ad1e:	3501      	adds	r5, #1
9001ad20:	f101 030f 	add.w	r3, r1, #15
9001ad24:	f3c3 1307 	ubfx	r3, r3, #4, #8
9001ad28:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001ad2c:	f7ff fe28 	bl	9001a980 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
9001ad30:	4606      	mov	r6, r0
9001ad32:	e7ef      	b.n	9001ad14 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
9001ad34:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001ad38:	f8b8 3004 	ldrh.w	r3, [r8, #4]
9001ad3c:	8829      	ldrh	r1, [r5, #0]
9001ad3e:	1a9b      	subs	r3, r3, r2
9001ad40:	f8ad 2010 	strh.w	r2, [sp, #16]
9001ad44:	aa03      	add	r2, sp, #12
9001ad46:	1a5b      	subs	r3, r3, r1
9001ad48:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
9001ad4c:	886d      	ldrh	r5, [r5, #2]
9001ad4e:	f8ad 300c 	strh.w	r3, [sp, #12]
9001ad52:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001ad56:	f8ad 1012 	strh.w	r1, [sp, #18]
9001ad5a:	1a5b      	subs	r3, r3, r1
9001ad5c:	4641      	mov	r1, r8
9001ad5e:	1b5b      	subs	r3, r3, r5
9001ad60:	f8ad 300e 	strh.w	r3, [sp, #14]
9001ad64:	6803      	ldr	r3, [r0, #0]
9001ad66:	689b      	ldr	r3, [r3, #8]
9001ad68:	4798      	blx	r3
9001ad6a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 9001ae04 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
9001ad6e:	a805      	add	r0, sp, #20
9001ad70:	f000 f882 	bl	9001ae78 <_ZN8touchgfx9Matrix3x36rotateEf>
9001ad74:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001ad78:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9001ad7a:	1a9b      	subs	r3, r3, r2
9001ad7c:	ee00 3a90 	vmov	s1, r3
9001ad80:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
9001ad84:	1bdb      	subs	r3, r3, r7
9001ad86:	eef8 0ae0 	vcvt.f32.s32	s1, s1
9001ad8a:	ee00 3a10 	vmov	s0, r3
9001ad8e:	e795      	b.n	9001acbc <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
9001ad90:	886b      	ldrh	r3, [r5, #2]
9001ad92:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001ad96:	f8ad 300c 	strh.w	r3, [sp, #12]
9001ad9a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001ad9e:	8829      	ldrh	r1, [r5, #0]
9001ada0:	1a9b      	subs	r3, r3, r2
9001ada2:	f8ad 2012 	strh.w	r2, [sp, #18]
9001ada6:	aa03      	add	r2, sp, #12
9001ada8:	1a5b      	subs	r3, r3, r1
9001adaa:	4641      	mov	r1, r8
9001adac:	f8ad 300e 	strh.w	r3, [sp, #14]
9001adb0:	88eb      	ldrh	r3, [r5, #6]
9001adb2:	f8ad 3010 	strh.w	r3, [sp, #16]
9001adb6:	6803      	ldr	r3, [r0, #0]
9001adb8:	689b      	ldr	r3, [r3, #8]
9001adba:	4798      	blx	r3
9001adbc:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 9001ae08 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
9001adc0:	a805      	add	r0, sp, #20
9001adc2:	f000 f859 	bl	9001ae78 <_ZN8touchgfx9Matrix3x36rotateEf>
9001adc6:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001adca:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
9001adce:	1bdb      	subs	r3, r3, r7
9001add0:	ee00 3a90 	vmov	s1, r3
9001add4:	eef8 0ae0 	vcvt.f32.s32	s1, s1
9001add8:	e748      	b.n	9001ac6c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
9001adda:	6860      	ldr	r0, [r4, #4]
9001addc:	2100      	movs	r1, #0
9001adde:	8b22      	ldrh	r2, [r4, #24]
9001ade0:	6803      	ldr	r3, [r0, #0]
9001ade2:	9101      	str	r1, [sp, #4]
9001ade4:	8b61      	ldrh	r1, [r4, #26]
9001ade6:	9100      	str	r1, [sp, #0]
9001ade8:	6a1d      	ldr	r5, [r3, #32]
9001adea:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
9001adee:	47a8      	blx	r5
9001adf0:	6860      	ldr	r0, [r4, #4]
9001adf2:	6803      	ldr	r3, [r0, #0]
9001adf4:	69db      	ldr	r3, [r3, #28]
9001adf6:	4798      	blx	r3
9001adf8:	b00e      	add	sp, #56	@ 0x38
9001adfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001adfe:	bf00      	nop
9001ae00:	42b40000 	.word	0x42b40000
9001ae04:	43340000 	.word	0x43340000
9001ae08:	43870000 	.word	0x43870000

9001ae0c <_ZN8touchgfx9Matrix3x35resetEv>:
9001ae0c:	2300      	movs	r3, #0
9001ae0e:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
9001ae12:	6043      	str	r3, [r0, #4]
9001ae14:	6002      	str	r2, [r0, #0]
9001ae16:	6083      	str	r3, [r0, #8]
9001ae18:	60c3      	str	r3, [r0, #12]
9001ae1a:	6102      	str	r2, [r0, #16]
9001ae1c:	6143      	str	r3, [r0, #20]
9001ae1e:	6183      	str	r3, [r0, #24]
9001ae20:	61c3      	str	r3, [r0, #28]
9001ae22:	6202      	str	r2, [r0, #32]
9001ae24:	4770      	bx	lr

9001ae26 <_ZN8touchgfx9Matrix3x3C1Ev>:
9001ae26:	b508      	push	{r3, lr}
9001ae28:	f7ff fff0 	bl	9001ae0c <_ZN8touchgfx9Matrix3x35resetEv>
9001ae2c:	bd08      	pop	{r3, pc}

9001ae2e <_ZN8touchgfx9Matrix3x35scaleEff>:
9001ae2e:	edd0 7a00 	vldr	s15, [r0]
9001ae32:	ee67 7a80 	vmul.f32	s15, s15, s0
9001ae36:	edc0 7a00 	vstr	s15, [r0]
9001ae3a:	edd0 7a01 	vldr	s15, [r0, #4]
9001ae3e:	ee67 7a80 	vmul.f32	s15, s15, s0
9001ae42:	edc0 7a01 	vstr	s15, [r0, #4]
9001ae46:	edd0 7a02 	vldr	s15, [r0, #8]
9001ae4a:	ee27 0a80 	vmul.f32	s0, s15, s0
9001ae4e:	edd0 7a03 	vldr	s15, [r0, #12]
9001ae52:	ee67 7aa0 	vmul.f32	s15, s15, s1
9001ae56:	ed80 0a02 	vstr	s0, [r0, #8]
9001ae5a:	edc0 7a03 	vstr	s15, [r0, #12]
9001ae5e:	edd0 7a04 	vldr	s15, [r0, #16]
9001ae62:	ee67 7aa0 	vmul.f32	s15, s15, s1
9001ae66:	edc0 7a04 	vstr	s15, [r0, #16]
9001ae6a:	edd0 7a05 	vldr	s15, [r0, #20]
9001ae6e:	ee67 0aa0 	vmul.f32	s1, s15, s1
9001ae72:	edc0 0a05 	vstr	s1, [r0, #20]
9001ae76:	4770      	bx	lr

9001ae78 <_ZN8touchgfx9Matrix3x36rotateEf>:
9001ae78:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9001af0c <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
9001ae7c:	ee20 0a27 	vmul.f32	s0, s0, s15
9001ae80:	eddf 7a23 	vldr	s15, [pc, #140]	@ 9001af10 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
9001ae84:	b510      	push	{r4, lr}
9001ae86:	ed2d 8b02 	vpush	{d8}
9001ae8a:	eec0 8a27 	vdiv.f32	s17, s0, s15
9001ae8e:	4604      	mov	r4, r0
9001ae90:	eeb0 0a68 	vmov.f32	s0, s17
9001ae94:	f010 ffb8 	bl	9002be08 <cosf>
9001ae98:	eeb0 8a40 	vmov.f32	s16, s0
9001ae9c:	eeb0 0a68 	vmov.f32	s0, s17
9001aea0:	f010 feee 	bl	9002bc80 <sinf>
9001aea4:	edd4 6a03 	vldr	s13, [r4, #12]
9001aea8:	edd4 4a00 	vldr	s9, [r4]
9001aeac:	ee60 7a66 	vnmul.f32	s15, s0, s13
9001aeb0:	ed94 7a04 	vldr	s14, [r4, #16]
9001aeb4:	ed94 5a01 	vldr	s10, [r4, #4]
9001aeb8:	ee66 6a88 	vmul.f32	s13, s13, s16
9001aebc:	edd4 5a02 	vldr	s11, [r4, #8]
9001aec0:	eee8 7a24 	vfma.f32	s15, s16, s9
9001aec4:	eee0 6a24 	vfma.f32	s13, s0, s9
9001aec8:	edc4 7a00 	vstr	s15, [r4]
9001aecc:	ee60 7a47 	vnmul.f32	s15, s0, s14
9001aed0:	ee27 7a08 	vmul.f32	s14, s14, s16
9001aed4:	edc4 6a03 	vstr	s13, [r4, #12]
9001aed8:	eee8 7a05 	vfma.f32	s15, s16, s10
9001aedc:	eea0 7a05 	vfma.f32	s14, s0, s10
9001aee0:	edc4 7a01 	vstr	s15, [r4, #4]
9001aee4:	edd4 7a05 	vldr	s15, [r4, #20]
9001aee8:	ed84 7a04 	vstr	s14, [r4, #16]
9001aeec:	ee20 6a67 	vnmul.f32	s12, s0, s15
9001aef0:	ee67 7a88 	vmul.f32	s15, s15, s16
9001aef4:	eea8 6a25 	vfma.f32	s12, s16, s11
9001aef8:	eee0 7a25 	vfma.f32	s15, s0, s11
9001aefc:	ecbd 8b02 	vpop	{d8}
9001af00:	ed84 6a02 	vstr	s12, [r4, #8]
9001af04:	edc4 7a05 	vstr	s15, [r4, #20]
9001af08:	bd10      	pop	{r4, pc}
9001af0a:	bf00      	nop
9001af0c:	40490fdb 	.word	0x40490fdb
9001af10:	43340000 	.word	0x43340000

9001af14 <_ZN8touchgfx9Matrix3x39translateEff>:
9001af14:	ed90 6a06 	vldr	s12, [r0, #24]
9001af18:	edd0 7a00 	vldr	s15, [r0]
9001af1c:	edd0 6a07 	vldr	s13, [r0, #28]
9001af20:	eee6 7a00 	vfma.f32	s15, s12, s0
9001af24:	ed90 7a08 	vldr	s14, [r0, #32]
9001af28:	edc0 7a00 	vstr	s15, [r0]
9001af2c:	edd0 7a01 	vldr	s15, [r0, #4]
9001af30:	eee6 7a80 	vfma.f32	s15, s13, s0
9001af34:	edc0 7a01 	vstr	s15, [r0, #4]
9001af38:	edd0 7a02 	vldr	s15, [r0, #8]
9001af3c:	eee7 7a00 	vfma.f32	s15, s14, s0
9001af40:	edc0 7a02 	vstr	s15, [r0, #8]
9001af44:	edd0 7a03 	vldr	s15, [r0, #12]
9001af48:	eee6 7a20 	vfma.f32	s15, s12, s1
9001af4c:	edc0 7a03 	vstr	s15, [r0, #12]
9001af50:	edd0 7a04 	vldr	s15, [r0, #16]
9001af54:	eee6 7aa0 	vfma.f32	s15, s13, s1
9001af58:	edc0 7a04 	vstr	s15, [r0, #16]
9001af5c:	edd0 7a05 	vldr	s15, [r0, #20]
9001af60:	eee7 7a20 	vfma.f32	s15, s14, s1
9001af64:	edc0 7a05 	vstr	s15, [r0, #20]
9001af68:	4770      	bx	lr

9001af6a <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
9001af6a:	edd0 6a01 	vldr	s13, [r0, #4]
9001af6e:	b084      	sub	sp, #16
9001af70:	edd0 7a04 	vldr	s15, [r0, #16]
9001af74:	ed90 7a03 	vldr	s14, [r0, #12]
9001af78:	ee60 7aa7 	vmul.f32	s15, s1, s15
9001af7c:	ee60 0aa6 	vmul.f32	s1, s1, s13
9001af80:	edd0 6a00 	vldr	s13, [r0]
9001af84:	eee7 7a00 	vfma.f32	s15, s14, s0
9001af88:	ed90 7a05 	vldr	s14, [r0, #20]
9001af8c:	eee6 0a80 	vfma.f32	s1, s13, s0
9001af90:	ed90 0a02 	vldr	s0, [r0, #8]
9001af94:	ee30 0a80 	vadd.f32	s0, s1, s0
9001af98:	ee77 0a87 	vadd.f32	s1, s15, s14
9001af9c:	b004      	add	sp, #16
9001af9e:	4770      	bx	lr

9001afa0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
9001afa0:	b530      	push	{r4, r5, lr}
9001afa2:	8083      	strh	r3, [r0, #4]
9001afa4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001afa8:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001afac:	80c3      	strh	r3, [r0, #6]
9001afae:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001afb2:	6141      	str	r1, [r0, #20]
9001afb4:	7203      	strb	r3, [r0, #8]
9001afb6:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001afba:	8302      	strh	r2, [r0, #24]
9001afbc:	7243      	strb	r3, [r0, #9]
9001afbe:	7a83      	ldrb	r3, [r0, #10]
9001afc0:	f365 0306 	bfi	r3, r5, #0, #7
9001afc4:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001afc8:	f365 13c7 	bfi	r3, r5, #7, #1
9001afcc:	7283      	strb	r3, [r0, #10]
9001afce:	f89d 3020 	ldrb.w	r3, [sp, #32]
9001afd2:	72c3      	strb	r3, [r0, #11]
9001afd4:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
9001afd8:	7303      	strb	r3, [r0, #12]
9001afda:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001afde:	81c3      	strh	r3, [r0, #14]
9001afe0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
9001afe4:	8203      	strh	r3, [r0, #16]
9001afe6:	4b01      	ldr	r3, [pc, #4]	@ (9001afec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
9001afe8:	6003      	str	r3, [r0, #0]
9001afea:	bd30      	pop	{r4, r5, pc}
9001afec:	90030604 	.word	0x90030604

9001aff0 <_ZNK8touchgfx9ConstFont4findEt>:
9001aff0:	b5f0      	push	{r4, r5, r6, r7, lr}
9001aff2:	6944      	ldr	r4, [r0, #20]
9001aff4:	b3bc      	cbz	r4, 9001b066 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001aff6:	88a3      	ldrh	r3, [r4, #4]
9001aff8:	8b02      	ldrh	r2, [r0, #24]
9001affa:	1acb      	subs	r3, r1, r3
9001affc:	f102 32ff 	add.w	r2, r2, #4294967295
9001b000:	d431      	bmi.n	9001b066 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b002:	4293      	cmp	r3, r2
9001b004:	dd0c      	ble.n	9001b020 <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001b006:	230e      	movs	r3, #14
9001b008:	fb03 4302 	mla	r3, r3, r2, r4
9001b00c:	889b      	ldrh	r3, [r3, #4]
9001b00e:	1a5b      	subs	r3, r3, r1
9001b010:	1ad3      	subs	r3, r2, r3
9001b012:	429a      	cmp	r2, r3
9001b014:	db27      	blt.n	9001b066 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b016:	2b00      	cmp	r3, #0
9001b018:	bfbc      	itt	lt
9001b01a:	2302      	movlt	r3, #2
9001b01c:	fb92 f3f3 	sdivlt	r3, r2, r3
9001b020:	2500      	movs	r5, #0
9001b022:	260e      	movs	r6, #14
9001b024:	4295      	cmp	r5, r2
9001b026:	dc1e      	bgt.n	9001b066 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b028:	fb06 4003 	mla	r0, r6, r3, r4
9001b02c:	8887      	ldrh	r7, [r0, #4]
9001b02e:	42b9      	cmp	r1, r7
9001b030:	d01a      	beq.n	9001b068 <_ZNK8touchgfx9ConstFont4findEt+0x78>
9001b032:	d20d      	bcs.n	9001b050 <_ZNK8touchgfx9ConstFont4findEt+0x60>
9001b034:	1e5a      	subs	r2, r3, #1
9001b036:	4295      	cmp	r5, r2
9001b038:	dc15      	bgt.n	9001b066 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b03a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
9001b03e:	1a5b      	subs	r3, r3, r1
9001b040:	1ad3      	subs	r3, r2, r3
9001b042:	429a      	cmp	r2, r3
9001b044:	db0f      	blt.n	9001b066 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b046:	429d      	cmp	r5, r3
9001b048:	ddec      	ble.n	9001b024 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001b04a:	1953      	adds	r3, r2, r5
9001b04c:	105b      	asrs	r3, r3, #1
9001b04e:	e7e9      	b.n	9001b024 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001b050:	1c5d      	adds	r5, r3, #1
9001b052:	42aa      	cmp	r2, r5
9001b054:	db07      	blt.n	9001b066 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b056:	8a43      	ldrh	r3, [r0, #18]
9001b058:	1acb      	subs	r3, r1, r3
9001b05a:	442b      	add	r3, r5
9001b05c:	429d      	cmp	r5, r3
9001b05e:	dc02      	bgt.n	9001b066 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b060:	429a      	cmp	r2, r3
9001b062:	dadf      	bge.n	9001b024 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001b064:	e7f1      	b.n	9001b04a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001b066:	2000      	movs	r0, #0
9001b068:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001b06a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001b06a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001b06c:	4604      	mov	r4, r0
9001b06e:	4617      	mov	r7, r2
9001b070:	461e      	mov	r6, r3
9001b072:	b911      	cbnz	r1, 9001b07a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
9001b074:	2500      	movs	r5, #0
9001b076:	4628      	mov	r0, r5
9001b078:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001b07a:	290a      	cmp	r1, #10
9001b07c:	d0fa      	beq.n	9001b074 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001b07e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
9001b082:	4291      	cmp	r1, r2
9001b084:	d0f6      	beq.n	9001b074 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001b086:	f242 020b 	movw	r2, #8203	@ 0x200b
9001b08a:	4291      	cmp	r1, r2
9001b08c:	d0f2      	beq.n	9001b074 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001b08e:	f7ff ffaf 	bl	9001aff0 <_ZNK8touchgfx9ConstFont4findEt>
9001b092:	4605      	mov	r5, r0
9001b094:	b950      	cbnz	r0, 9001b0ac <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001b096:	6823      	ldr	r3, [r4, #0]
9001b098:	4620      	mov	r0, r4
9001b09a:	691b      	ldr	r3, [r3, #16]
9001b09c:	4798      	blx	r3
9001b09e:	4601      	mov	r1, r0
9001b0a0:	4620      	mov	r0, r4
9001b0a2:	f7ff ffa5 	bl	9001aff0 <_ZNK8touchgfx9ConstFont4findEt>
9001b0a6:	4605      	mov	r5, r0
9001b0a8:	2800      	cmp	r0, #0
9001b0aa:	d0e3      	beq.n	9001b074 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001b0ac:	6823      	ldr	r3, [r4, #0]
9001b0ae:	4629      	mov	r1, r5
9001b0b0:	4620      	mov	r0, r4
9001b0b2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001b0b4:	4798      	blx	r3
9001b0b6:	6038      	str	r0, [r7, #0]
9001b0b8:	6823      	ldr	r3, [r4, #0]
9001b0ba:	4620      	mov	r0, r4
9001b0bc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001b0be:	4798      	blx	r3
9001b0c0:	7030      	strb	r0, [r6, #0]
9001b0c2:	e7d8      	b.n	9001b076 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

9001b0c4 <_ZN8touchgfx4clzuEm>:
9001b0c4:	4603      	mov	r3, r0
9001b0c6:	b1c8      	cbz	r0, 9001b0fc <_ZN8touchgfx4clzuEm+0x38>
9001b0c8:	0c02      	lsrs	r2, r0, #16
9001b0ca:	0412      	lsls	r2, r2, #16
9001b0cc:	b9a2      	cbnz	r2, 9001b0f8 <_ZN8touchgfx4clzuEm+0x34>
9001b0ce:	0403      	lsls	r3, r0, #16
9001b0d0:	2010      	movs	r0, #16
9001b0d2:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
9001b0d6:	bf04      	itt	eq
9001b0d8:	021b      	lsleq	r3, r3, #8
9001b0da:	3008      	addeq	r0, #8
9001b0dc:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
9001b0e0:	bf04      	itt	eq
9001b0e2:	011b      	lsleq	r3, r3, #4
9001b0e4:	3004      	addeq	r0, #4
9001b0e6:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
9001b0ea:	bf04      	itt	eq
9001b0ec:	009b      	lsleq	r3, r3, #2
9001b0ee:	3002      	addeq	r0, #2
9001b0f0:	2b00      	cmp	r3, #0
9001b0f2:	db04      	blt.n	9001b0fe <_ZN8touchgfx4clzuEm+0x3a>
9001b0f4:	3001      	adds	r0, #1
9001b0f6:	4770      	bx	lr
9001b0f8:	2000      	movs	r0, #0
9001b0fa:	e7ea      	b.n	9001b0d2 <_ZN8touchgfx4clzuEm+0xe>
9001b0fc:	2020      	movs	r0, #32
9001b0fe:	4770      	bx	lr

9001b100 <_ZN8touchgfx7muldivuEmmmRm>:
9001b100:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001b104:	460f      	mov	r7, r1
9001b106:	4615      	mov	r5, r2
9001b108:	461e      	mov	r6, r3
9001b10a:	4601      	mov	r1, r0
9001b10c:	b100      	cbz	r0, 9001b110 <_ZN8touchgfx7muldivuEmmmRm+0x10>
9001b10e:	b927      	cbnz	r7, 9001b11a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
9001b110:	2000      	movs	r0, #0
9001b112:	6030      	str	r0, [r6, #0]
9001b114:	b002      	add	sp, #8
9001b116:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001b11a:	f7ff ffd3 	bl	9001b0c4 <_ZN8touchgfx4clzuEm>
9001b11e:	b980      	cbnz	r0, 9001b142 <_ZN8touchgfx7muldivuEmmmRm+0x42>
9001b120:	4638      	mov	r0, r7
9001b122:	f7ff ffcf 	bl	9001b0c4 <_ZN8touchgfx4clzuEm>
9001b126:	2800      	cmp	r0, #0
9001b128:	dd05      	ble.n	9001b136 <_ZN8touchgfx7muldivuEmmmRm+0x36>
9001b12a:	4633      	mov	r3, r6
9001b12c:	462a      	mov	r2, r5
9001b12e:	4638      	mov	r0, r7
9001b130:	f7ff ffe6 	bl	9001b100 <_ZN8touchgfx7muldivuEmmmRm>
9001b134:	e7ee      	b.n	9001b114 <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001b136:	f04f 33ff 	mov.w	r3, #4294967295
9001b13a:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
9001b13e:	6033      	str	r3, [r6, #0]
9001b140:	e7e8      	b.n	9001b114 <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001b142:	fa37 f800 	lsrs.w	r8, r7, r0
9001b146:	fb07 f301 	mul.w	r3, r7, r1
9001b14a:	d105      	bne.n	9001b158 <_ZN8touchgfx7muldivuEmmmRm+0x58>
9001b14c:	fbb3 f0f5 	udiv	r0, r3, r5
9001b150:	fb05 3510 	mls	r5, r5, r0, r3
9001b154:	6035      	str	r5, [r6, #0]
9001b156:	e7dd      	b.n	9001b114 <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001b158:	2301      	movs	r3, #1
9001b15a:	fa01 fa00 	lsl.w	sl, r1, r0
9001b15e:	462a      	mov	r2, r5
9001b160:	fa03 f000 	lsl.w	r0, r3, r0
9001b164:	4633      	mov	r3, r6
9001b166:	fbba f9f5 	udiv	r9, sl, r5
9001b16a:	3801      	subs	r0, #1
9001b16c:	fb08 f409 	mul.w	r4, r8, r9
9001b170:	4038      	ands	r0, r7
9001b172:	f7ff ffc5 	bl	9001b100 <_ZN8touchgfx7muldivuEmmmRm>
9001b176:	462a      	mov	r2, r5
9001b178:	4607      	mov	r7, r0
9001b17a:	ab01      	add	r3, sp, #4
9001b17c:	fb05 a119 	mls	r1, r5, r9, sl
9001b180:	4640      	mov	r0, r8
9001b182:	f7ff ffbd 	bl	9001b100 <_ZN8touchgfx7muldivuEmmmRm>
9001b186:	9b01      	ldr	r3, [sp, #4]
9001b188:	6832      	ldr	r2, [r6, #0]
9001b18a:	441a      	add	r2, r3
9001b18c:	fbb2 f3f5 	udiv	r3, r2, r5
9001b190:	441c      	add	r4, r3
9001b192:	fb05 2513 	mls	r5, r5, r3, r2
9001b196:	443c      	add	r4, r7
9001b198:	4420      	add	r0, r4
9001b19a:	e7db      	b.n	9001b154 <_ZN8touchgfx7muldivuEmmmRm+0x54>

9001b19c <_ZN8touchgfx6muldivElllRl>:
9001b19c:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001b19e:	2800      	cmp	r0, #0
9001b1a0:	461e      	mov	r6, r3
9001b1a2:	bfba      	itte	lt
9001b1a4:	4240      	neglt	r0, r0
9001b1a6:	f04f 34ff 	movlt.w	r4, #4294967295
9001b1aa:	2401      	movge	r4, #1
9001b1ac:	2900      	cmp	r1, #0
9001b1ae:	bfbc      	itt	lt
9001b1b0:	4249      	neglt	r1, r1
9001b1b2:	4264      	neglt	r4, r4
9001b1b4:	2a00      	cmp	r2, #0
9001b1b6:	bfb6      	itet	lt
9001b1b8:	4265      	neglt	r5, r4
9001b1ba:	4625      	movge	r5, r4
9001b1bc:	4252      	neglt	r2, r2
9001b1be:	4288      	cmp	r0, r1
9001b1c0:	bfc2      	ittt	gt
9001b1c2:	4603      	movgt	r3, r0
9001b1c4:	4608      	movgt	r0, r1
9001b1c6:	4619      	movgt	r1, r3
9001b1c8:	ab01      	add	r3, sp, #4
9001b1ca:	f7ff ff99 	bl	9001b100 <_ZN8touchgfx7muldivuEmmmRm>
9001b1ce:	9b01      	ldr	r3, [sp, #4]
9001b1d0:	4368      	muls	r0, r5
9001b1d2:	435c      	muls	r4, r3
9001b1d4:	6034      	str	r4, [r6, #0]
9001b1d6:	b002      	add	sp, #8
9001b1d8:	bd70      	pop	{r4, r5, r6, pc}

9001b1da <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
9001b1da:	2001      	movs	r0, #1
9001b1dc:	4770      	bx	lr

9001b1de <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001b1de:	2002      	movs	r0, #2
9001b1e0:	4770      	bx	lr

9001b1e2 <_ZN8touchgfx6ScreenD1Ev>:
9001b1e2:	4770      	bx	lr

9001b1e4 <_ZN8touchgfx6Screen11setupScreenEv>:
9001b1e4:	4770      	bx	lr

9001b1e6 <_ZN8touchgfx12GestureEventD1Ev>:
9001b1e6:	4770      	bx	lr

9001b1e8 <_ZN8touchgfx9DragEventD1Ev>:
9001b1e8:	4770      	bx	lr

9001b1ea <_ZN8touchgfx9DragEventD0Ev>:
9001b1ea:	b510      	push	{r4, lr}
9001b1ec:	4604      	mov	r4, r0
9001b1ee:	2110      	movs	r1, #16
9001b1f0:	f010 fcd3 	bl	9002bb9a <_ZdlPvj>
9001b1f4:	4620      	mov	r0, r4
9001b1f6:	bd10      	pop	{r4, pc}

9001b1f8 <_ZN8touchgfx12GestureEventD0Ev>:
9001b1f8:	b510      	push	{r4, lr}
9001b1fa:	4604      	mov	r4, r0
9001b1fc:	210c      	movs	r1, #12
9001b1fe:	f010 fccc 	bl	9002bb9a <_ZdlPvj>
9001b202:	4620      	mov	r0, r4
9001b204:	bd10      	pop	{r4, pc}

9001b206 <_ZN8touchgfx6ScreenD0Ev>:
9001b206:	b510      	push	{r4, lr}
9001b208:	4604      	mov	r4, r0
9001b20a:	213c      	movs	r1, #60	@ 0x3c
9001b20c:	f010 fcc5 	bl	9002bb9a <_ZdlPvj>
9001b210:	4620      	mov	r0, r4
9001b212:	bd10      	pop	{r4, pc}

9001b214 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
9001b214:	b530      	push	{r4, r5, lr}
9001b216:	460d      	mov	r5, r1
9001b218:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001b21a:	b087      	sub	sp, #28
9001b21c:	4604      	mov	r4, r0
9001b21e:	b301      	cbz	r1, 9001b262 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
9001b220:	a801      	add	r0, sp, #4
9001b222:	f7ff fb87 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b226:	892a      	ldrh	r2, [r5, #8]
9001b228:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001b22c:	7928      	ldrb	r0, [r5, #4]
9001b22e:	1ad2      	subs	r2, r2, r3
9001b230:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
9001b232:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
9001b236:	441a      	add	r2, r3
9001b238:	896b      	ldrh	r3, [r5, #10]
9001b23a:	f8bd 5006 	ldrh.w	r5, [sp, #6]
9001b23e:	f88d 0010 	strb.w	r0, [sp, #16]
9001b242:	1b5b      	subs	r3, r3, r5
9001b244:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
9001b246:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001b248:	442b      	add	r3, r5
9001b24a:	4d07      	ldr	r5, [pc, #28]	@ (9001b268 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
9001b24c:	f8ad 1012 	strh.w	r1, [sp, #18]
9001b250:	a903      	add	r1, sp, #12
9001b252:	9503      	str	r5, [sp, #12]
9001b254:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b258:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b25c:	6803      	ldr	r3, [r0, #0]
9001b25e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001b260:	4798      	blx	r3
9001b262:	b007      	add	sp, #28
9001b264:	bd30      	pop	{r4, r5, pc}
9001b266:	bf00      	nop
9001b268:	90030680 	.word	0x90030680

9001b26c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
9001b26c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001b270:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001b272:	b08a      	sub	sp, #40	@ 0x28
9001b274:	4604      	mov	r4, r0
9001b276:	460d      	mov	r5, r1
9001b278:	b113      	cbz	r3, 9001b280 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001b27a:	790b      	ldrb	r3, [r1, #4]
9001b27c:	2b00      	cmp	r3, #0
9001b27e:	d044      	beq.n	9001b30a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001b280:	f104 0804 	add.w	r8, r4, #4
9001b284:	a803      	add	r0, sp, #12
9001b286:	4641      	mov	r1, r8
9001b288:	f7ff fb54 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b28c:	792b      	ldrb	r3, [r5, #4]
9001b28e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001b292:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
9001b296:	b983      	cbnz	r3, 9001b2ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
9001b298:	f104 0336 	add.w	r3, r4, #54	@ 0x36
9001b29c:	892a      	ldrh	r2, [r5, #8]
9001b29e:	88e9      	ldrh	r1, [r5, #6]
9001b2a0:	4640      	mov	r0, r8
9001b2a2:	1b92      	subs	r2, r2, r6
9001b2a4:	9301      	str	r3, [sp, #4]
9001b2a6:	1bc9      	subs	r1, r1, r7
9001b2a8:	f104 0334 	add.w	r3, r4, #52	@ 0x34
9001b2ac:	b212      	sxth	r2, r2
9001b2ae:	9300      	str	r3, [sp, #0]
9001b2b0:	b209      	sxth	r1, r1
9001b2b2:	f104 0330 	add.w	r3, r4, #48	@ 0x30
9001b2b6:	f7f8 f853 	bl	90013360 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001b2ba:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001b2bc:	b329      	cbz	r1, 9001b30a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001b2be:	a805      	add	r0, sp, #20
9001b2c0:	f7ff fb38 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b2c4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001b2c8:	792b      	ldrb	r3, [r5, #4]
9001b2ca:	a907      	add	r1, sp, #28
9001b2cc:	1abf      	subs	r7, r7, r2
9001b2ce:	88ea      	ldrh	r2, [r5, #6]
9001b2d0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001b2d2:	4417      	add	r7, r2
9001b2d4:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
9001b2d6:	f88d 3020 	strb.w	r3, [sp, #32]
9001b2da:	4417      	add	r7, r2
9001b2dc:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001b2e0:	1ab6      	subs	r6, r6, r2
9001b2e2:	892a      	ldrh	r2, [r5, #8]
9001b2e4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
9001b2e8:	4416      	add	r6, r2
9001b2ea:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001b2ec:	4416      	add	r6, r2
9001b2ee:	4a08      	ldr	r2, [pc, #32]	@ (9001b310 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001b2f0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
9001b2f4:	2600      	movs	r6, #0
9001b2f6:	9207      	str	r2, [sp, #28]
9001b2f8:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
9001b2fc:	6803      	ldr	r3, [r0, #0]
9001b2fe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001b300:	4798      	blx	r3
9001b302:	792b      	ldrb	r3, [r5, #4]
9001b304:	b10b      	cbz	r3, 9001b30a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001b306:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
9001b30a:	b00a      	add	sp, #40	@ 0x28
9001b30c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001b310:	900303f0 	.word	0x900303f0

9001b314 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
9001b314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001b318:	460c      	mov	r4, r1
9001b31a:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001b31c:	b088      	sub	sp, #32
9001b31e:	4605      	mov	r5, r0
9001b320:	2900      	cmp	r1, #0
9001b322:	d06d      	beq.n	9001b400 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
9001b324:	4668      	mov	r0, sp
9001b326:	f7ff fb05 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b32a:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
9001b32c:	88e3      	ldrh	r3, [r4, #6]
9001b32e:	f9bd 8000 	ldrsh.w	r8, [sp]
9001b332:	440b      	add	r3, r1
9001b334:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
9001b338:	b21b      	sxth	r3, r3
9001b33a:	4543      	cmp	r3, r8
9001b33c:	db31      	blt.n	9001b3a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b33e:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001b342:	44c4      	add	ip, r8
9001b344:	fa0f fc8c 	sxth.w	ip, ip
9001b348:	4563      	cmp	r3, ip
9001b34a:	da2a      	bge.n	9001b3a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b34c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
9001b34e:	8926      	ldrh	r6, [r4, #8]
9001b350:	4416      	add	r6, r2
9001b352:	b236      	sxth	r6, r6
9001b354:	42be      	cmp	r6, r7
9001b356:	db24      	blt.n	9001b3a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b358:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001b35c:	4438      	add	r0, r7
9001b35e:	b200      	sxth	r0, r0
9001b360:	4286      	cmp	r6, r0
9001b362:	da1e      	bge.n	9001b3a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b364:	8963      	ldrh	r3, [r4, #10]
9001b366:	4419      	add	r1, r3
9001b368:	b209      	sxth	r1, r1
9001b36a:	4541      	cmp	r1, r8
9001b36c:	db08      	blt.n	9001b380 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001b36e:	4561      	cmp	r1, ip
9001b370:	da06      	bge.n	9001b380 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001b372:	89a3      	ldrh	r3, [r4, #12]
9001b374:	441a      	add	r2, r3
9001b376:	b212      	sxth	r2, r2
9001b378:	42ba      	cmp	r2, r7
9001b37a:	db01      	blt.n	9001b380 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001b37c:	4282      	cmp	r2, r0
9001b37e:	db10      	blt.n	9001b3a2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b380:	4b21      	ldr	r3, [pc, #132]	@ (9001b408 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001b382:	a904      	add	r1, sp, #16
9001b384:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001b386:	9304      	str	r3, [sp, #16]
9001b388:	2302      	movs	r3, #2
9001b38a:	f88d 3014 	strb.w	r3, [sp, #20]
9001b38e:	2300      	movs	r3, #0
9001b390:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b394:	f8ad 3018 	strh.w	r3, [sp, #24]
9001b398:	f8ad 301a 	strh.w	r3, [sp, #26]
9001b39c:	6803      	ldr	r3, [r0, #0]
9001b39e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001b3a0:	4798      	blx	r3
9001b3a2:	1d29      	adds	r1, r5, #4
9001b3a4:	a802      	add	r0, sp, #8
9001b3a6:	f7ff fac5 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b3aa:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001b3ae:	88e0      	ldrh	r0, [r4, #6]
9001b3b0:	eba3 0808 	sub.w	r8, r3, r8
9001b3b4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001b3b8:	7921      	ldrb	r1, [r4, #4]
9001b3ba:	fa1f f888 	uxth.w	r8, r8
9001b3be:	1bdf      	subs	r7, r3, r7
9001b3c0:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
9001b3c4:	b2bb      	uxth	r3, r7
9001b3c6:	4440      	add	r0, r8
9001b3c8:	8922      	ldrh	r2, [r4, #8]
9001b3ca:	8967      	ldrh	r7, [r4, #10]
9001b3cc:	4460      	add	r0, ip
9001b3ce:	89a4      	ldrh	r4, [r4, #12]
9001b3d0:	441a      	add	r2, r3
9001b3d2:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
9001b3d4:	44b8      	add	r8, r7
9001b3d6:	4423      	add	r3, r4
9001b3d8:	f8ad 0016 	strh.w	r0, [sp, #22]
9001b3dc:	4432      	add	r2, r6
9001b3de:	44e0      	add	r8, ip
9001b3e0:	4433      	add	r3, r6
9001b3e2:	4c0a      	ldr	r4, [pc, #40]	@ (9001b40c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001b3e4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001b3e6:	f88d 1014 	strb.w	r1, [sp, #20]
9001b3ea:	a904      	add	r1, sp, #16
9001b3ec:	9404      	str	r4, [sp, #16]
9001b3ee:	f8ad 2018 	strh.w	r2, [sp, #24]
9001b3f2:	f8ad 801a 	strh.w	r8, [sp, #26]
9001b3f6:	f8ad 301c 	strh.w	r3, [sp, #28]
9001b3fa:	6803      	ldr	r3, [r0, #0]
9001b3fc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001b3fe:	4798      	blx	r3
9001b400:	b008      	add	sp, #32
9001b402:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001b406:	bf00      	nop
9001b408:	900303f0 	.word	0x900303f0
9001b40c:	9003066c 	.word	0x9003066c

9001b410 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001b410:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001b412:	4604      	mov	r4, r0
9001b414:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
9001b418:	3201      	adds	r2, #1
9001b41a:	d112      	bne.n	9001b442 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
9001b41c:	2500      	movs	r5, #0
9001b41e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001b422:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001b426:	6803      	ldr	r3, [r0, #0]
9001b428:	9500      	str	r5, [sp, #0]
9001b42a:	466d      	mov	r5, sp
9001b42c:	f8ad 1004 	strh.w	r1, [sp, #4]
9001b430:	f8ad 2006 	strh.w	r2, [sp, #6]
9001b434:	4629      	mov	r1, r5
9001b436:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001b438:	4798      	blx	r3
9001b43a:	e895 0003 	ldmia.w	r5, {r0, r1}
9001b43e:	e884 0003 	stmia.w	r4, {r0, r1}
9001b442:	4620      	mov	r0, r4
9001b444:	b003      	add	sp, #12
9001b446:	bd30      	pop	{r4, r5, pc}

9001b448 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
9001b448:	b513      	push	{r0, r1, r4, lr}
9001b44a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001b44e:	4604      	mov	r4, r0
9001b450:	3301      	adds	r3, #1
9001b452:	d109      	bne.n	9001b468 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
9001b454:	4601      	mov	r1, r0
9001b456:	4668      	mov	r0, sp
9001b458:	f7ff fa6c 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b45c:	f8bd 3000 	ldrh.w	r3, [sp]
9001b460:	8423      	strh	r3, [r4, #32]
9001b462:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001b466:	8463      	strh	r3, [r4, #34]	@ 0x22
9001b468:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001b46c:	b002      	add	sp, #8
9001b46e:	bd10      	pop	{r4, pc}

9001b470 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001b470:	b513      	push	{r0, r1, r4, lr}
9001b472:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
9001b476:	4604      	mov	r4, r0
9001b478:	3301      	adds	r3, #1
9001b47a:	d109      	bne.n	9001b490 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001b47c:	4601      	mov	r1, r0
9001b47e:	4668      	mov	r0, sp
9001b480:	f7ff fa58 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b484:	f8bd 3000 	ldrh.w	r3, [sp]
9001b488:	8423      	strh	r3, [r4, #32]
9001b48a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001b48e:	8463      	strh	r3, [r4, #34]	@ 0x22
9001b490:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
9001b494:	b002      	add	sp, #8
9001b496:	bd10      	pop	{r4, pc}

9001b498 <_ZN8touchgfx6ScreenC1Ev>:
9001b498:	b570      	push	{r4, r5, r6, lr}
9001b49a:	4b17      	ldr	r3, [pc, #92]	@ (9001b4f8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001b49c:	4605      	mov	r5, r0
9001b49e:	4a17      	ldr	r2, [pc, #92]	@ (9001b4fc <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001b4a0:	2101      	movs	r1, #1
9001b4a2:	f845 3b04 	str.w	r3, [r5], #4
9001b4a6:	2300      	movs	r3, #0
9001b4a8:	6042      	str	r2, [r0, #4]
9001b4aa:	4604      	mov	r4, r0
9001b4ac:	8103      	strh	r3, [r0, #8]
9001b4ae:	8143      	strh	r3, [r0, #10]
9001b4b0:	8183      	strh	r3, [r0, #12]
9001b4b2:	81c3      	strh	r3, [r0, #14]
9001b4b4:	8203      	strh	r3, [r0, #16]
9001b4b6:	8243      	strh	r3, [r0, #18]
9001b4b8:	8283      	strh	r3, [r0, #20]
9001b4ba:	82c3      	strh	r3, [r0, #22]
9001b4bc:	6203      	str	r3, [r0, #32]
9001b4be:	8483      	strh	r3, [r0, #36]	@ 0x24
9001b4c0:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001b4c2:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001b4c6:	6343      	str	r3, [r0, #52]	@ 0x34
9001b4c8:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001b4cc:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
9001b4d0:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001b4d4:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
9001b4d8:	4b09      	ldr	r3, [pc, #36]	@ (9001b500 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001b4da:	4628      	mov	r0, r5
9001b4dc:	f9b3 6000 	ldrsh.w	r6, [r3]
9001b4e0:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001b4e2:	4a08      	ldr	r2, [pc, #32]	@ (9001b504 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001b4e4:	f9b2 1000 	ldrsh.w	r1, [r2]
9001b4e8:	4798      	blx	r3
9001b4ea:	6863      	ldr	r3, [r4, #4]
9001b4ec:	4628      	mov	r0, r5
9001b4ee:	4631      	mov	r1, r6
9001b4f0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001b4f2:	4798      	blx	r3
9001b4f4:	4620      	mov	r0, r4
9001b4f6:	bd70      	pop	{r4, r5, r6, pc}
9001b4f8:	90030694 	.word	0x90030694
9001b4fc:	9002fffc 	.word	0x9002fffc
9001b500:	24024594 	.word	0x24024594
9001b504:	24024592 	.word	0x24024592

9001b508 <_ZN8touchgfx6Screen4drawEv>:
9001b508:	4b09      	ldr	r3, [pc, #36]	@ (9001b530 <_ZN8touchgfx6Screen4drawEv+0x28>)
9001b50a:	b507      	push	{r0, r1, r2, lr}
9001b50c:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b510:	2100      	movs	r1, #0
9001b512:	4b08      	ldr	r3, [pc, #32]	@ (9001b534 <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001b514:	9100      	str	r1, [sp, #0]
9001b516:	4669      	mov	r1, sp
9001b518:	f9b3 3000 	ldrsh.w	r3, [r3]
9001b51c:	f8ad 2004 	strh.w	r2, [sp, #4]
9001b520:	f8ad 3006 	strh.w	r3, [sp, #6]
9001b524:	6803      	ldr	r3, [r0, #0]
9001b526:	689b      	ldr	r3, [r3, #8]
9001b528:	4798      	blx	r3
9001b52a:	b003      	add	sp, #12
9001b52c:	f85d fb04 	ldr.w	pc, [sp], #4
9001b530:	24024592 	.word	0x24024592
9001b534:	24024594 	.word	0x24024594

9001b538 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
9001b538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b53c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001b540:	b089      	sub	sp, #36	@ 0x24
9001b542:	4680      	mov	r8, r0
9001b544:	460c      	mov	r4, r1
9001b546:	2b00      	cmp	r3, #0
9001b548:	4615      	mov	r5, r2
9001b54a:	dd0e      	ble.n	9001b56a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b54c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001b550:	2b00      	cmp	r3, #0
9001b552:	dd0a      	ble.n	9001b56a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b554:	4628      	mov	r0, r5
9001b556:	f7ff ff5b 	bl	9001b410 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001b55a:	4621      	mov	r1, r4
9001b55c:	f7fb fa74 	bl	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b560:	69eb      	ldr	r3, [r5, #28]
9001b562:	b928      	cbnz	r0, 9001b570 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
9001b564:	461d      	mov	r5, r3
9001b566:	2b00      	cmp	r3, #0
9001b568:	d1f4      	bne.n	9001b554 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001b56a:	b009      	add	sp, #36	@ 0x24
9001b56c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b570:	ae04      	add	r6, sp, #16
9001b572:	2b00      	cmp	r3, #0
9001b574:	f000 80b5 	beq.w	9001b6e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001b578:	682b      	ldr	r3, [r5, #0]
9001b57a:	4629      	mov	r1, r5
9001b57c:	a802      	add	r0, sp, #8
9001b57e:	68db      	ldr	r3, [r3, #12]
9001b580:	4798      	blx	r3
9001b582:	4628      	mov	r0, r5
9001b584:	f7ff ff60 	bl	9001b448 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001b588:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001b58c:	4407      	add	r7, r0
9001b58e:	4628      	mov	r0, r5
9001b590:	f7ff ff6e 	bl	9001b470 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001b594:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001b598:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001b59c:	b23f      	sxth	r7, r7
9001b59e:	4418      	add	r0, r3
9001b5a0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001b5a4:	4621      	mov	r1, r4
9001b5a6:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b5aa:	f8ad 0012 	strh.w	r0, [sp, #18]
9001b5ae:	4630      	mov	r0, r6
9001b5b0:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b5b4:	f8ad 7010 	strh.w	r7, [sp, #16]
9001b5b8:	f7f7 ffb4 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
9001b5bc:	4628      	mov	r0, r5
9001b5be:	f7ff ff27 	bl	9001b410 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001b5c2:	ab06      	add	r3, sp, #24
9001b5c4:	4602      	mov	r2, r0
9001b5c6:	e896 0003 	ldmia.w	r6, {r0, r1}
9001b5ca:	e883 0003 	stmia.w	r3, {r0, r1}
9001b5ce:	4611      	mov	r1, r2
9001b5d0:	4618      	mov	r0, r3
9001b5d2:	f7f7 ffa7 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
9001b5d6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001b5da:	f9b4 1000 	ldrsh.w	r1, [r4]
9001b5de:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001b5e2:	4299      	cmp	r1, r3
9001b5e4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
9001b5e8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001b5ec:	d10b      	bne.n	9001b606 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001b5ee:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001b5f2:	4552      	cmp	r2, sl
9001b5f4:	d107      	bne.n	9001b606 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001b5f6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001b5fa:	455a      	cmp	r2, fp
9001b5fc:	d103      	bne.n	9001b606 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001b5fe:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001b602:	454a      	cmp	r2, r9
9001b604:	d06d      	beq.n	9001b6e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001b606:	f1bb 0f00 	cmp.w	fp, #0
9001b60a:	dd65      	ble.n	9001b6d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001b60c:	f1b9 0f00 	cmp.w	r9, #0
9001b610:	dd62      	ble.n	9001b6d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001b612:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001b616:	fa1f f08a 	uxth.w	r0, sl
9001b61a:	4552      	cmp	r2, sl
9001b61c:	9000      	str	r0, [sp, #0]
9001b61e:	da12      	bge.n	9001b646 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001b620:	9301      	str	r3, [sp, #4]
9001b622:	9b00      	ldr	r3, [sp, #0]
9001b624:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001b628:	f8ad 2012 	strh.w	r2, [sp, #18]
9001b62c:	1a9a      	subs	r2, r3, r2
9001b62e:	f8ad 1010 	strh.w	r1, [sp, #16]
9001b632:	4631      	mov	r1, r6
9001b634:	f8ad 0014 	strh.w	r0, [sp, #20]
9001b638:	4640      	mov	r0, r8
9001b63a:	f8ad 2016 	strh.w	r2, [sp, #22]
9001b63e:	69ea      	ldr	r2, [r5, #28]
9001b640:	f7ff ff7a 	bl	9001b538 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b644:	9b01      	ldr	r3, [sp, #4]
9001b646:	f9b4 2000 	ldrsh.w	r2, [r4]
9001b64a:	b29f      	uxth	r7, r3
9001b64c:	429a      	cmp	r2, r3
9001b64e:	da0d      	bge.n	9001b66c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001b650:	f8ad 2010 	strh.w	r2, [sp, #16]
9001b654:	1aba      	subs	r2, r7, r2
9001b656:	f8ad a012 	strh.w	sl, [sp, #18]
9001b65a:	4631      	mov	r1, r6
9001b65c:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b660:	4640      	mov	r0, r8
9001b662:	f8ad 9016 	strh.w	r9, [sp, #22]
9001b666:	69ea      	ldr	r2, [r5, #28]
9001b668:	f7ff ff66 	bl	9001b538 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b66c:	8822      	ldrh	r2, [r4, #0]
9001b66e:	445f      	add	r7, fp
9001b670:	88a3      	ldrh	r3, [r4, #4]
9001b672:	b2bf      	uxth	r7, r7
9001b674:	4413      	add	r3, r2
9001b676:	b23a      	sxth	r2, r7
9001b678:	b29b      	uxth	r3, r3
9001b67a:	b219      	sxth	r1, r3
9001b67c:	4291      	cmp	r1, r2
9001b67e:	dd0d      	ble.n	9001b69c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001b680:	1bdb      	subs	r3, r3, r7
9001b682:	f8ad 2010 	strh.w	r2, [sp, #16]
9001b686:	f8ad a012 	strh.w	sl, [sp, #18]
9001b68a:	4631      	mov	r1, r6
9001b68c:	f8ad 3014 	strh.w	r3, [sp, #20]
9001b690:	4640      	mov	r0, r8
9001b692:	f8ad 9016 	strh.w	r9, [sp, #22]
9001b696:	69ea      	ldr	r2, [r5, #28]
9001b698:	f7ff ff4e 	bl	9001b538 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b69c:	88e2      	ldrh	r2, [r4, #6]
9001b69e:	8863      	ldrh	r3, [r4, #2]
9001b6a0:	4413      	add	r3, r2
9001b6a2:	9a00      	ldr	r2, [sp, #0]
9001b6a4:	444a      	add	r2, r9
9001b6a6:	b29b      	uxth	r3, r3
9001b6a8:	fa1f f982 	uxth.w	r9, r2
9001b6ac:	b219      	sxth	r1, r3
9001b6ae:	fa0f f289 	sxth.w	r2, r9
9001b6b2:	428a      	cmp	r2, r1
9001b6b4:	da15      	bge.n	9001b6e2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001b6b6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001b6ba:	eba3 0309 	sub.w	r3, r3, r9
9001b6be:	f9b4 0000 	ldrsh.w	r0, [r4]
9001b6c2:	f8ad 1014 	strh.w	r1, [sp, #20]
9001b6c6:	4631      	mov	r1, r6
9001b6c8:	f8ad 0010 	strh.w	r0, [sp, #16]
9001b6cc:	f8ad 2012 	strh.w	r2, [sp, #18]
9001b6d0:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b6d4:	69ea      	ldr	r2, [r5, #28]
9001b6d6:	e001      	b.n	9001b6dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
9001b6d8:	69ea      	ldr	r2, [r5, #28]
9001b6da:	4621      	mov	r1, r4
9001b6dc:	4640      	mov	r0, r8
9001b6de:	f7ff ff2b 	bl	9001b538 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b6e2:	4628      	mov	r0, r5
9001b6e4:	f7ff fe94 	bl	9001b410 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001b6e8:	6861      	ldr	r1, [r4, #4]
9001b6ea:	4602      	mov	r2, r0
9001b6ec:	4633      	mov	r3, r6
9001b6ee:	6820      	ldr	r0, [r4, #0]
9001b6f0:	c303      	stmia	r3!, {r0, r1}
9001b6f2:	4611      	mov	r1, r2
9001b6f4:	4630      	mov	r0, r6
9001b6f6:	f7f7 ff15 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
9001b6fa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001b6fe:	2b00      	cmp	r3, #0
9001b700:	f77f af33 	ble.w	9001b56a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b704:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001b708:	2b00      	cmp	r3, #0
9001b70a:	f77f af2e 	ble.w	9001b56a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b70e:	4628      	mov	r0, r5
9001b710:	f7ff fe9a 	bl	9001b448 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001b714:	f8bd 3010 	ldrh.w	r3, [sp, #16]
9001b718:	1a18      	subs	r0, r3, r0
9001b71a:	f8ad 0010 	strh.w	r0, [sp, #16]
9001b71e:	4628      	mov	r0, r5
9001b720:	f7ff fea6 	bl	9001b470 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001b724:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001b728:	4631      	mov	r1, r6
9001b72a:	1a18      	subs	r0, r3, r0
9001b72c:	f8ad 0012 	strh.w	r0, [sp, #18]
9001b730:	4628      	mov	r0, r5
9001b732:	682b      	ldr	r3, [r5, #0]
9001b734:	689b      	ldr	r3, [r3, #8]
9001b736:	4798      	blx	r3
9001b738:	e717      	b.n	9001b56a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

9001b73a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
9001b73a:	b570      	push	{r4, r5, r6, lr}
9001b73c:	1d06      	adds	r6, r0, #4
9001b73e:	b086      	sub	sp, #24
9001b740:	460c      	mov	r4, r1
9001b742:	2300      	movs	r3, #0
9001b744:	4631      	mov	r1, r6
9001b746:	4605      	mov	r5, r0
9001b748:	a802      	add	r0, sp, #8
9001b74a:	9301      	str	r3, [sp, #4]
9001b74c:	f7ff f8f2 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b750:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001b754:	8822      	ldrh	r2, [r4, #0]
9001b756:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001b75a:	1ad2      	subs	r2, r2, r3
9001b75c:	8863      	ldrh	r3, [r4, #2]
9001b75e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001b762:	1a5b      	subs	r3, r3, r1
9001b764:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9001b768:	f8ad 2010 	strh.w	r2, [sp, #16]
9001b76c:	aa01      	add	r2, sp, #4
9001b76e:	f8ad 0014 	strh.w	r0, [sp, #20]
9001b772:	4630      	mov	r0, r6
9001b774:	f8ad 1016 	strh.w	r1, [sp, #22]
9001b778:	a904      	add	r1, sp, #16
9001b77a:	f8ad 3012 	strh.w	r3, [sp, #18]
9001b77e:	f7f7 ffa9 	bl	900136d4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001b782:	9a01      	ldr	r2, [sp, #4]
9001b784:	b11a      	cbz	r2, 9001b78e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
9001b786:	4621      	mov	r1, r4
9001b788:	4628      	mov	r0, r5
9001b78a:	f7ff fed5 	bl	9001b538 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b78e:	b006      	add	sp, #24
9001b790:	bd70      	pop	{r4, r5, r6, pc}

9001b792 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001b792:	4602      	mov	r2, r0
9001b794:	b530      	push	{r4, r5, lr}
9001b796:	4604      	mov	r4, r0
9001b798:	b085      	sub	sp, #20
9001b79a:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001b79e:	460d      	mov	r5, r1
9001b7a0:	466b      	mov	r3, sp
9001b7a2:	6851      	ldr	r1, [r2, #4]
9001b7a4:	c303      	stmia	r3!, {r0, r1}
9001b7a6:	4629      	mov	r1, r5
9001b7a8:	4668      	mov	r0, sp
9001b7aa:	f7f7 febb 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
9001b7ae:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001b7b2:	b12b      	cbz	r3, 9001b7c0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001b7b4:	4669      	mov	r1, sp
9001b7b6:	4620      	mov	r0, r4
9001b7b8:	f7ff ffbf 	bl	9001b73a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001b7bc:	b005      	add	sp, #20
9001b7be:	bd30      	pop	{r4, r5, pc}
9001b7c0:	3404      	adds	r4, #4
9001b7c2:	a802      	add	r0, sp, #8
9001b7c4:	4621      	mov	r1, r4
9001b7c6:	f7ff f8b5 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b7ca:	f8bd 3000 	ldrh.w	r3, [sp]
9001b7ce:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001b7d2:	4669      	mov	r1, sp
9001b7d4:	4620      	mov	r0, r4
9001b7d6:	1a9b      	subs	r3, r3, r2
9001b7d8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001b7dc:	f8ad 3000 	strh.w	r3, [sp]
9001b7e0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001b7e4:	1a9b      	subs	r3, r3, r2
9001b7e6:	f8ad 3002 	strh.w	r3, [sp, #2]
9001b7ea:	f7f7 ff3a 	bl	90013662 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001b7ee:	e7e5      	b.n	9001b7bc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001b7f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001b7f0:	460b      	mov	r3, r1
9001b7f2:	680a      	ldr	r2, [r1, #0]
9001b7f4:	1d01      	adds	r1, r0, #4
9001b7f6:	6992      	ldr	r2, [r2, #24]
9001b7f8:	4618      	mov	r0, r3
9001b7fa:	4710      	bx	r2

9001b7fc <_ZN8touchgfx12TextProviderC1Ev>:
9001b7fc:	b538      	push	{r3, r4, r5, lr}
9001b7fe:	2500      	movs	r5, #0
9001b800:	2302      	movs	r3, #2
9001b802:	4604      	mov	r4, r0
9001b804:	220e      	movs	r2, #14
9001b806:	7403      	strb	r3, [r0, #16]
9001b808:	4629      	mov	r1, r5
9001b80a:	6145      	str	r5, [r0, #20]
9001b80c:	7605      	strb	r5, [r0, #24]
9001b80e:	83c5      	strh	r5, [r0, #30]
9001b810:	8405      	strh	r5, [r0, #32]
9001b812:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001b814:	8705      	strh	r5, [r0, #56]	@ 0x38
9001b816:	87c5      	strh	r5, [r0, #62]	@ 0x3e
9001b818:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
9001b81c:	e9c0 5500 	strd	r5, r5, [r0]
9001b820:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
9001b824:	304c      	adds	r0, #76	@ 0x4c
9001b826:	f010 ffcb 	bl	9002c7c0 <memset>
9001b82a:	2301      	movs	r3, #1
9001b82c:	4620      	mov	r0, r4
9001b82e:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
9001b832:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001b836:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
9001b83a:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
9001b83e:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
9001b842:	f7e9 ff47 	bl	900056d4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
9001b846:	4620      	mov	r0, r4
9001b848:	bd38      	pop	{r3, r4, r5, pc}

9001b84a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001b84a:	b530      	push	{r4, r5, lr}
9001b84c:	2500      	movs	r5, #0
9001b84e:	2401      	movs	r4, #1
9001b850:	6843      	ldr	r3, [r0, #4]
9001b852:	b913      	cbnz	r3, 9001b85a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001b854:	6803      	ldr	r3, [r0, #0]
9001b856:	b313      	cbz	r3, 9001b89e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001b858:	6043      	str	r3, [r0, #4]
9001b85a:	7e03      	ldrb	r3, [r0, #24]
9001b85c:	b143      	cbz	r3, 9001b870 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001b85e:	6943      	ldr	r3, [r0, #20]
9001b860:	b12b      	cbz	r3, 9001b86e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001b862:	881a      	ldrh	r2, [r3, #0]
9001b864:	b11a      	cbz	r2, 9001b86e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001b866:	1c9a      	adds	r2, r3, #2
9001b868:	6142      	str	r2, [r0, #20]
9001b86a:	8818      	ldrh	r0, [r3, #0]
9001b86c:	bd30      	pop	{r4, r5, pc}
9001b86e:	7605      	strb	r5, [r0, #24]
9001b870:	6843      	ldr	r3, [r0, #4]
9001b872:	8819      	ldrh	r1, [r3, #0]
9001b874:	b199      	cbz	r1, 9001b89e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001b876:	1c9a      	adds	r2, r3, #2
9001b878:	2902      	cmp	r1, #2
9001b87a:	6042      	str	r2, [r0, #4]
9001b87c:	d1f5      	bne.n	9001b86a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001b87e:	7c03      	ldrb	r3, [r0, #16]
9001b880:	2b01      	cmp	r3, #1
9001b882:	d8e5      	bhi.n	9001b850 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b884:	1c5a      	adds	r2, r3, #1
9001b886:	3302      	adds	r3, #2
9001b888:	7402      	strb	r2, [r0, #16]
9001b88a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001b88e:	6143      	str	r3, [r0, #20]
9001b890:	2b00      	cmp	r3, #0
9001b892:	d0dd      	beq.n	9001b850 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b894:	881b      	ldrh	r3, [r3, #0]
9001b896:	2b00      	cmp	r3, #0
9001b898:	d0da      	beq.n	9001b850 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b89a:	7604      	strb	r4, [r0, #24]
9001b89c:	e7d8      	b.n	9001b850 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b89e:	2000      	movs	r0, #0
9001b8a0:	e7e4      	b.n	9001b86c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001b8a2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001b8a2:	6001      	str	r1, [r0, #0]
9001b8a4:	2100      	movs	r1, #0
9001b8a6:	b430      	push	{r4, r5}
9001b8a8:	6041      	str	r1, [r0, #4]
9001b8aa:	6815      	ldr	r5, [r2, #0]
9001b8ac:	6085      	str	r5, [r0, #8]
9001b8ae:	6852      	ldr	r2, [r2, #4]
9001b8b0:	6443      	str	r3, [r0, #68]	@ 0x44
9001b8b2:	9b02      	ldr	r3, [sp, #8]
9001b8b4:	60c2      	str	r2, [r0, #12]
9001b8b6:	7401      	strb	r1, [r0, #16]
9001b8b8:	6141      	str	r1, [r0, #20]
9001b8ba:	7601      	strb	r1, [r0, #24]
9001b8bc:	8701      	strh	r1, [r0, #56]	@ 0x38
9001b8be:	8401      	strh	r1, [r0, #32]
9001b8c0:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
9001b8c4:	6483      	str	r3, [r0, #72]	@ 0x48
9001b8c6:	bc30      	pop	{r4, r5}
9001b8c8:	f7e9 bf04 	b.w	900056d4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001b8cc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001b8cc:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b8ce:	4605      	mov	r5, r0
9001b8d0:	4608      	mov	r0, r1
9001b8d2:	b1f1      	cbz	r1, 9001b912 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001b8d4:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
9001b8d8:	460b      	mov	r3, r1
9001b8da:	f101 0708 	add.w	r7, r1, #8
9001b8de:	4622      	mov	r2, r4
9001b8e0:	6818      	ldr	r0, [r3, #0]
9001b8e2:	3308      	adds	r3, #8
9001b8e4:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001b8e8:	4626      	mov	r6, r4
9001b8ea:	42bb      	cmp	r3, r7
9001b8ec:	c603      	stmia	r6!, {r0, r1}
9001b8ee:	4634      	mov	r4, r6
9001b8f0:	d1f6      	bne.n	9001b8e0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001b8f2:	6818      	ldr	r0, [r3, #0]
9001b8f4:	6030      	str	r0, [r6, #0]
9001b8f6:	4610      	mov	r0, r2
9001b8f8:	889b      	ldrh	r3, [r3, #4]
9001b8fa:	80b3      	strh	r3, [r6, #4]
9001b8fc:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001b900:	015b      	lsls	r3, r3, #5
9001b902:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001b906:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
9001b90a:	430b      	orrs	r3, r1
9001b90c:	425b      	negs	r3, r3
9001b90e:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001b912:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001b914 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001b914:	b538      	push	{r3, r4, r5, lr}
9001b916:	460c      	mov	r4, r1
9001b918:	6811      	ldr	r1, [r2, #0]
9001b91a:	4610      	mov	r0, r2
9001b91c:	68cd      	ldr	r5, [r1, #12]
9001b91e:	4619      	mov	r1, r3
9001b920:	47a8      	blx	r5
9001b922:	2800      	cmp	r0, #0
9001b924:	bf08      	it	eq
9001b926:	4620      	moveq	r0, r4
9001b928:	bd38      	pop	{r3, r4, r5, pc}
	...

9001b92c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001b92c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001b930:	468c      	mov	ip, r1
9001b932:	4604      	mov	r4, r0
9001b934:	4615      	mov	r5, r2
9001b936:	b942      	cbnz	r2, 9001b94a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
9001b938:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
9001b93c:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
9001b940:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
9001b944:	4628      	mov	r0, r5
9001b946:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001b94a:	7b50      	ldrb	r0, [r2, #13]
9001b94c:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
9001b950:	8893      	ldrh	r3, [r2, #4]
9001b952:	0106      	lsls	r6, r0, #4
9001b954:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001b958:	79ee      	ldrb	r6, [r5, #7]
9001b95a:	4316      	orrs	r6, r2
9001b95c:	185a      	adds	r2, r3, r1
9001b95e:	b291      	uxth	r1, r2
9001b960:	b2b7      	uxth	r7, r6
9001b962:	291d      	cmp	r1, #29
9001b964:	d87f      	bhi.n	9001ba66 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
9001b966:	2201      	movs	r2, #1
9001b968:	10f6      	asrs	r6, r6, #3
9001b96a:	408a      	lsls	r2, r1
9001b96c:	4974      	ldr	r1, [pc, #464]	@ (9001bb40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
9001b96e:	420a      	tst	r2, r1
9001b970:	d12e      	bne.n	9001b9d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001b972:	f412 7f60 	tst.w	r2, #896	@ 0x380
9001b976:	d076      	beq.n	9001ba66 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
9001b978:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
9001b97c:	462b      	mov	r3, r5
9001b97e:	f105 0e08 	add.w	lr, r5, #8
9001b982:	4615      	mov	r5, r2
9001b984:	6818      	ldr	r0, [r3, #0]
9001b986:	3308      	adds	r3, #8
9001b988:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001b98c:	4694      	mov	ip, r2
9001b98e:	4573      	cmp	r3, lr
9001b990:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001b994:	4662      	mov	r2, ip
9001b996:	d1f5      	bne.n	9001b984 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001b998:	6818      	ldr	r0, [r3, #0]
9001b99a:	f8cc 0000 	str.w	r0, [ip]
9001b99e:	889b      	ldrh	r3, [r3, #4]
9001b9a0:	f8ac 3004 	strh.w	r3, [ip, #4]
9001b9a4:	b2b3      	uxth	r3, r6
9001b9a6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9001b9aa:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
9001b9ae:	1aca      	subs	r2, r1, r3
9001b9b0:	1bcf      	subs	r7, r1, r7
9001b9b2:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
9001b9b6:	b292      	uxth	r2, r2
9001b9b8:	1afb      	subs	r3, r7, r3
9001b9ba:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
9001b9be:	10d2      	asrs	r2, r2, #3
9001b9c0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
9001b9c4:	4302      	orrs	r2, r0
9001b9c6:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
9001b9ca:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001b9ce:	e7b9      	b.n	9001b944 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
9001b9d0:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
9001b9d4:	462b      	mov	r3, r5
9001b9d6:	f105 0808 	add.w	r8, r5, #8
9001b9da:	4615      	mov	r5, r2
9001b9dc:	6818      	ldr	r0, [r3, #0]
9001b9de:	3308      	adds	r3, #8
9001b9e0:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001b9e4:	4696      	mov	lr, r2
9001b9e6:	4543      	cmp	r3, r8
9001b9e8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001b9ec:	4672      	mov	r2, lr
9001b9ee:	d1f5      	bne.n	9001b9dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
9001b9f0:	6818      	ldr	r0, [r3, #0]
9001b9f2:	f8ce 0000 	str.w	r0, [lr]
9001b9f6:	889b      	ldrh	r3, [r3, #4]
9001b9f8:	f8ae 3004 	strh.w	r3, [lr, #4]
9001b9fc:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001b9fe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ba02:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
9001ba04:	f640 6333 	movw	r3, #3635	@ 0xe33
9001ba08:	4299      	cmp	r1, r3
9001ba0a:	d111      	bne.n	9001ba30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
9001ba0c:	f8dc 3000 	ldr.w	r3, [ip]
9001ba10:	4660      	mov	r0, ip
9001ba12:	68db      	ldr	r3, [r3, #12]
9001ba14:	4798      	blx	r3
9001ba16:	7b41      	ldrb	r1, [r0, #13]
9001ba18:	00cb      	lsls	r3, r1, #3
9001ba1a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001ba1e:	7a03      	ldrb	r3, [r0, #8]
9001ba20:	4313      	orrs	r3, r2
9001ba22:	064a      	lsls	r2, r1, #25
9001ba24:	bf44      	itt	mi
9001ba26:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001ba2a:	b21b      	sxthmi	r3, r3
9001ba2c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001ba30:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
9001ba34:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001ba38:	443b      	add	r3, r7
9001ba3a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001ba3e:	4433      	add	r3, r6
9001ba40:	b29b      	uxth	r3, r3
9001ba42:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001ba46:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001ba4a:	10db      	asrs	r3, r3, #3
9001ba4c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001ba50:	4313      	orrs	r3, r2
9001ba52:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
9001ba56:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001ba5a:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
9001ba5e:	1a9b      	subs	r3, r3, r2
9001ba60:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
9001ba64:	e76e      	b.n	9001b944 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
9001ba66:	f023 0204 	bic.w	r2, r3, #4
9001ba6a:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001ba6e:	428a      	cmp	r2, r1
9001ba70:	d003      	beq.n	9001ba7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
9001ba72:	f640 621d 	movw	r2, #3613	@ 0xe1d
9001ba76:	4293      	cmp	r3, r2
9001ba78:	d120      	bne.n	9001babc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x190>
9001ba7a:	3b01      	subs	r3, #1
9001ba7c:	4662      	mov	r2, ip
9001ba7e:	4629      	mov	r1, r5
9001ba80:	4620      	mov	r0, r4
9001ba82:	b29b      	uxth	r3, r3
9001ba84:	f7ff ff46 	bl	9001b914 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001ba88:	7b41      	ldrb	r1, [r0, #13]
9001ba8a:	00cb      	lsls	r3, r1, #3
9001ba8c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001ba90:	7a03      	ldrb	r3, [r0, #8]
9001ba92:	0648      	lsls	r0, r1, #25
9001ba94:	ea43 0302 	orr.w	r3, r3, r2
9001ba98:	bf44      	itt	mi
9001ba9a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001ba9e:	b21b      	sxthmi	r3, r3
9001baa0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001baa4:	7b6b      	ldrb	r3, [r5, #13]
9001baa6:	7aaa      	ldrb	r2, [r5, #10]
9001baa8:	005b      	lsls	r3, r3, #1
9001baaa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001baae:	4313      	orrs	r3, r2
9001bab0:	115a      	asrs	r2, r3, #5
9001bab2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001bab6:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001baba:	e032      	b.n	9001bb22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
9001babc:	00c2      	lsls	r2, r0, #3
9001babe:	f402 7180 	and.w	r1, r2, #256	@ 0x100
9001bac2:	7a2a      	ldrb	r2, [r5, #8]
9001bac4:	430a      	orrs	r2, r1
9001bac6:	0641      	lsls	r1, r0, #25
9001bac8:	f640 6109 	movw	r1, #3593	@ 0xe09
9001bacc:	bf44      	itt	mi
9001bace:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
9001bad2:	b212      	sxthmi	r2, r2
9001bad4:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
9001bad8:	f023 0210 	bic.w	r2, r3, #16
9001badc:	428a      	cmp	r2, r1
9001bade:	d003      	beq.n	9001bae8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
9001bae0:	f640 6213 	movw	r2, #3603	@ 0xe13
9001bae4:	4293      	cmp	r3, r2
9001bae6:	d129      	bne.n	9001bb3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>
9001bae8:	7b6e      	ldrb	r6, [r5, #13]
9001baea:	4629      	mov	r1, r5
9001baec:	4620      	mov	r0, r4
9001baee:	0076      	lsls	r6, r6, #1
9001baf0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001baf4:	7aae      	ldrb	r6, [r5, #10]
9001baf6:	4316      	orrs	r6, r2
9001baf8:	f640 6213 	movw	r2, #3603	@ 0xe13
9001bafc:	4293      	cmp	r3, r2
9001bafe:	4662      	mov	r2, ip
9001bb00:	bf16      	itet	ne
9001bb02:	f103 33ff 	addne.w	r3, r3, #4294967295
9001bb06:	f640 630c 	movweq	r3, #3596	@ 0xe0c
9001bb0a:	b29b      	uxthne	r3, r3
9001bb0c:	f7ff ff02 	bl	9001b914 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001bb10:	7b43      	ldrb	r3, [r0, #13]
9001bb12:	7a82      	ldrb	r2, [r0, #10]
9001bb14:	005b      	lsls	r3, r3, #1
9001bb16:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001bb1a:	4313      	orrs	r3, r2
9001bb1c:	1af6      	subs	r6, r6, r3
9001bb1e:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
9001bb22:	7b69      	ldrb	r1, [r5, #13]
9001bb24:	00cb      	lsls	r3, r1, #3
9001bb26:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001bb2a:	7a2b      	ldrb	r3, [r5, #8]
9001bb2c:	4313      	orrs	r3, r2
9001bb2e:	064a      	lsls	r2, r1, #25
9001bb30:	bf44      	itt	mi
9001bb32:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bb36:	b21b      	sxthmi	r3, r3
9001bb38:	1bdb      	subs	r3, r3, r7
9001bb3a:	e746      	b.n	9001b9ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001bb3c:	2300      	movs	r3, #0
9001bb3e:	e7ba      	b.n	9001bab6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18a>
9001bb40:	3fc00079 	.word	0x3fc00079

9001bb44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001bb44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001bb48:	4604      	mov	r4, r0
9001bb4a:	b942      	cbnz	r2, 9001bb5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001bb4c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001bb50:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
9001bb54:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
9001bb58:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001bb5c:	e047      	b.n	9001bbee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001bb5e:	7b51      	ldrb	r1, [r2, #13]
9001bb60:	8893      	ldrh	r3, [r2, #4]
9001bb62:	010d      	lsls	r5, r1, #4
9001bb64:	f405 7080 	and.w	r0, r5, #256	@ 0x100
9001bb68:	79d5      	ldrb	r5, [r2, #7]
9001bb6a:	4305      	orrs	r5, r0
9001bb6c:	2d04      	cmp	r5, #4
9001bb6e:	bfcc      	ite	gt
9001bb70:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001bb74:	f04f 0e01 	movle.w	lr, #1
9001bb78:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
9001bb7c:	f200 80ab 	bhi.w	9001bcd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001bb80:	f240 60e7 	movw	r0, #1767	@ 0x6e7
9001bb84:	4283      	cmp	r3, r0
9001bb86:	d216      	bcs.n	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bb88:	f240 605b 	movw	r0, #1627	@ 0x65b
9001bb8c:	4283      	cmp	r3, r0
9001bb8e:	d859      	bhi.n	9001bc44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001bb90:	f240 6057 	movw	r0, #1623	@ 0x657
9001bb94:	4283      	cmp	r3, r0
9001bb96:	d20e      	bcs.n	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bb98:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001bb9c:	d24a      	bcs.n	9001bc34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001bb9e:	f240 604e 	movw	r0, #1614	@ 0x64e
9001bba2:	4283      	cmp	r3, r0
9001bba4:	d207      	bcs.n	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bba6:	f240 601a 	movw	r0, #1562	@ 0x61a
9001bbaa:	4283      	cmp	r3, r0
9001bbac:	d02a      	beq.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bbae:	d821      	bhi.n	9001bbf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001bbb0:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
9001bbb4:	d35b      	bcc.n	9001bc6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001bbb6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
9001bbba:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001bbbe:	f040 80d0 	bne.w	9001bd62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001bbc2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
9001bbc6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001bbca:	f040 80ca 	bne.w	9001bd62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001bbce:	00cb      	lsls	r3, r1, #3
9001bbd0:	0649      	lsls	r1, r1, #25
9001bbd2:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001bbd6:	7a13      	ldrb	r3, [r2, #8]
9001bbd8:	ea43 0300 	orr.w	r3, r3, r0
9001bbdc:	bf44      	itt	mi
9001bbde:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bbe2:	b21b      	sxthmi	r3, r3
9001bbe4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001bbe8:	1b5d      	subs	r5, r3, r5
9001bbea:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001bbee:	4610      	mov	r0, r2
9001bbf0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001bbf4:	f240 604b 	movw	r0, #1611	@ 0x64b
9001bbf8:	4283      	cmp	r3, r0
9001bbfa:	d338      	bcc.n	9001bc6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001bbfc:	f240 604c 	movw	r0, #1612	@ 0x64c
9001bc00:	4283      	cmp	r3, r0
9001bc02:	d9d8      	bls.n	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc04:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
9001bc08:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
9001bc0c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001bc10:	f040 80f3 	bne.w	9001bdfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001bc14:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001bc18:	f040 80ef 	bne.w	9001bdfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001bc1c:	00cb      	lsls	r3, r1, #3
9001bc1e:	064e      	lsls	r6, r1, #25
9001bc20:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001bc24:	7a13      	ldrb	r3, [r2, #8]
9001bc26:	ea43 0300 	orr.w	r3, r3, r0
9001bc2a:	bf44      	itt	mi
9001bc2c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bc30:	b21b      	sxthmi	r3, r3
9001bc32:	e7d9      	b.n	9001bbe8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001bc34:	f240 6054 	movw	r0, #1620	@ 0x654
9001bc38:	4283      	cmp	r3, r0
9001bc3a:	d8e3      	bhi.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bc3c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001bc40:	d9e0      	bls.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bc42:	e7b8      	b.n	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc44:	f240 6074 	movw	r0, #1652	@ 0x674
9001bc48:	4283      	cmp	r3, r0
9001bc4a:	d0b4      	beq.n	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc4c:	d82d      	bhi.n	9001bcaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001bc4e:	f240 605e 	movw	r0, #1630	@ 0x65e
9001bc52:	4283      	cmp	r3, r0
9001bc54:	d804      	bhi.n	9001bc60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001bc56:	f240 605d 	movw	r0, #1629	@ 0x65d
9001bc5a:	4283      	cmp	r3, r0
9001bc5c:	d3d2      	bcc.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bc5e:	e7aa      	b.n	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc60:	f240 605f 	movw	r0, #1631	@ 0x65f
9001bc64:	4283      	cmp	r3, r0
9001bc66:	d0cd      	beq.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bc68:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
9001bc6c:	d0a3      	beq.n	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc6e:	00cb      	lsls	r3, r1, #3
9001bc70:	0649      	lsls	r1, r1, #25
9001bc72:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001bc76:	7a13      	ldrb	r3, [r2, #8]
9001bc78:	ea43 0300 	orr.w	r3, r3, r0
9001bc7c:	bf44      	itt	mi
9001bc7e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bc82:	b21b      	sxthmi	r3, r3
9001bc84:	1b5d      	subs	r5, r3, r5
9001bc86:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001bc8a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001bc8e:	7b53      	ldrb	r3, [r2, #13]
9001bc90:	015b      	lsls	r3, r3, #5
9001bc92:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001bc96:	7993      	ldrb	r3, [r2, #6]
9001bc98:	430b      	orrs	r3, r1
9001bc9a:	2105      	movs	r1, #5
9001bc9c:	005b      	lsls	r3, r3, #1
9001bc9e:	fb93 f3f1 	sdiv	r3, r3, r1
9001bca2:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001bca6:	440b      	add	r3, r1
9001bca8:	e756      	b.n	9001bb58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001bcaa:	f240 60e2 	movw	r0, #1762	@ 0x6e2
9001bcae:	4283      	cmp	r3, r0
9001bcb0:	d809      	bhi.n	9001bcc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001bcb2:	f240 60df 	movw	r0, #1759	@ 0x6df
9001bcb6:	4283      	cmp	r3, r0
9001bcb8:	f4bf af7d 	bcs.w	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bcbc:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
9001bcc0:	2b05      	cmp	r3, #5
9001bcc2:	d8d4      	bhi.n	9001bc6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001bcc4:	e777      	b.n	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bcc6:	f240 60e3 	movw	r0, #1763	@ 0x6e3
9001bcca:	4283      	cmp	r3, r0
9001bccc:	d09a      	beq.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bcce:	f240 60e4 	movw	r0, #1764	@ 0x6e4
9001bcd2:	4283      	cmp	r3, r0
9001bcd4:	e7ca      	b.n	9001bc6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001bcd6:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
9001bcda:	d22b      	bcs.n	9001bd34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001bcdc:	f640 00ed 	movw	r0, #2285	@ 0x8ed
9001bce0:	4283      	cmp	r3, r0
9001bce2:	d28f      	bcs.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bce4:	f640 00e5 	movw	r0, #2277	@ 0x8e5
9001bce8:	4283      	cmp	r3, r0
9001bcea:	d816      	bhi.n	9001bd1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001bcec:	f640 00e4 	movw	r0, #2276	@ 0x8e4
9001bcf0:	4283      	cmp	r3, r0
9001bcf2:	f4bf af60 	bcs.w	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bcf6:	f240 60ec 	movw	r0, #1772	@ 0x6ec
9001bcfa:	4283      	cmp	r3, r0
9001bcfc:	d80a      	bhi.n	9001bd14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001bcfe:	f240 60eb 	movw	r0, #1771	@ 0x6eb
9001bd02:	4283      	cmp	r3, r0
9001bd04:	f4bf af57 	bcs.w	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bd08:	f240 60ea 	movw	r0, #1770	@ 0x6ea
9001bd0c:	4283      	cmp	r3, r0
9001bd0e:	f43f af79 	beq.w	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bd12:	e7ac      	b.n	9001bc6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001bd14:	f240 60ed 	movw	r0, #1773	@ 0x6ed
9001bd18:	e7f8      	b.n	9001bd0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001bd1a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
9001bd1e:	4283      	cmp	r3, r0
9001bd20:	d802      	bhi.n	9001bd28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001bd22:	f640 00e7 	movw	r0, #2279	@ 0x8e7
9001bd26:	e798      	b.n	9001bc5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001bd28:	f640 00e9 	movw	r0, #2281	@ 0x8e9
9001bd2c:	4283      	cmp	r3, r0
9001bd2e:	f47f af42 	bne.w	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bd32:	e767      	b.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bd34:	f640 00f6 	movw	r0, #2294	@ 0x8f6
9001bd38:	4283      	cmp	r3, r0
9001bd3a:	f43f af63 	beq.w	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bd3e:	d802      	bhi.n	9001bd46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001bd40:	f640 00f2 	movw	r0, #2290	@ 0x8f2
9001bd44:	e7f2      	b.n	9001bd2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001bd46:	f640 00fa 	movw	r0, #2298	@ 0x8fa
9001bd4a:	4283      	cmp	r3, r0
9001bd4c:	d805      	bhi.n	9001bd5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001bd4e:	f640 00f9 	movw	r0, #2297	@ 0x8f9
9001bd52:	4283      	cmp	r3, r0
9001bd54:	f4ff af2f 	bcc.w	9001bbb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bd58:	e754      	b.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bd5a:	f640 00fe 	movw	r0, #2302	@ 0x8fe
9001bd5e:	4283      	cmp	r3, r0
9001bd60:	e7af      	b.n	9001bcc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001bd62:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001bd66:	4617      	mov	r7, r2
9001bd68:	f102 0808 	add.w	r8, r2, #8
9001bd6c:	4666      	mov	r6, ip
9001bd6e:	6838      	ldr	r0, [r7, #0]
9001bd70:	3708      	adds	r7, #8
9001bd72:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001bd76:	46e6      	mov	lr, ip
9001bd78:	4547      	cmp	r7, r8
9001bd7a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001bd7e:	46f4      	mov	ip, lr
9001bd80:	d1f5      	bne.n	9001bd6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001bd82:	6838      	ldr	r0, [r7, #0]
9001bd84:	f8ce 0000 	str.w	r0, [lr]
9001bd88:	88b9      	ldrh	r1, [r7, #4]
9001bd8a:	f8ae 1004 	strh.w	r1, [lr, #4]
9001bd8e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001bd92:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001bd96:	d009      	beq.n	9001bdac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001bd98:	7b51      	ldrb	r1, [r2, #13]
9001bd9a:	7992      	ldrb	r2, [r2, #6]
9001bd9c:	0149      	lsls	r1, r1, #5
9001bd9e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001bda2:	4311      	orrs	r1, r2
9001bda4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001bda8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001bdac:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001bdb0:	b2ad      	uxth	r5, r5
9001bdb2:	d00d      	beq.n	9001bdd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001bdb4:	442b      	add	r3, r5
9001bdb6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001bdba:	b29b      	uxth	r3, r3
9001bdbc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001bdc0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001bdc4:	10db      	asrs	r3, r3, #3
9001bdc6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001bdca:	4313      	orrs	r3, r2
9001bdcc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001bdd0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001bdd4:	00cb      	lsls	r3, r1, #3
9001bdd6:	064f      	lsls	r7, r1, #25
9001bdd8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001bddc:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001bde0:	ea43 0302 	orr.w	r3, r3, r2
9001bde4:	bf44      	itt	mi
9001bde6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bdea:	b21b      	sxthmi	r3, r3
9001bdec:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001bdf0:	1b5b      	subs	r3, r3, r5
9001bdf2:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001bdf6:	4632      	mov	r2, r6
9001bdf8:	e6f9      	b.n	9001bbee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001bdfa:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001bdfe:	4617      	mov	r7, r2
9001be00:	f102 0908 	add.w	r9, r2, #8
9001be04:	4666      	mov	r6, ip
9001be06:	6838      	ldr	r0, [r7, #0]
9001be08:	3708      	adds	r7, #8
9001be0a:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001be0e:	46e0      	mov	r8, ip
9001be10:	454f      	cmp	r7, r9
9001be12:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001be16:	46c4      	mov	ip, r8
9001be18:	d1f5      	bne.n	9001be06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001be1a:	6838      	ldr	r0, [r7, #0]
9001be1c:	f8c8 0000 	str.w	r0, [r8]
9001be20:	88b9      	ldrh	r1, [r7, #4]
9001be22:	f8a8 1004 	strh.w	r1, [r8, #4]
9001be26:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001be2a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001be2e:	d009      	beq.n	9001be44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001be30:	7b51      	ldrb	r1, [r2, #13]
9001be32:	7992      	ldrb	r2, [r2, #6]
9001be34:	0149      	lsls	r1, r1, #5
9001be36:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001be3a:	4311      	orrs	r1, r2
9001be3c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001be40:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001be44:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001be48:	d00e      	beq.n	9001be68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001be4a:	eba3 030e 	sub.w	r3, r3, lr
9001be4e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001be52:	b29b      	uxth	r3, r3
9001be54:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001be58:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001be5c:	10db      	asrs	r3, r3, #3
9001be5e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001be62:	4313      	orrs	r3, r2
9001be64:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001be68:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001be6c:	00cb      	lsls	r3, r1, #3
9001be6e:	0648      	lsls	r0, r1, #25
9001be70:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001be74:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001be78:	ea43 0302 	orr.w	r3, r3, r2
9001be7c:	bf44      	itt	mi
9001be7e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001be82:	b21b      	sxthmi	r3, r3
9001be84:	1b5d      	subs	r5, r3, r5
9001be86:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001be8a:	e7b4      	b.n	9001bdf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001be8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001be8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001be90:	461e      	mov	r6, r3
9001be92:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001be94:	4604      	mov	r4, r0
9001be96:	4617      	mov	r7, r2
9001be98:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001be9c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001bea0:	f7e9 fbc8 	bl	90005634 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001bea4:	4605      	mov	r5, r0
9001bea6:	b918      	cbnz	r0, 9001beb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001bea8:	6030      	str	r0, [r6, #0]
9001beaa:	4628      	mov	r0, r5
9001beac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001beb0:	683b      	ldr	r3, [r7, #0]
9001beb2:	4601      	mov	r1, r0
9001beb4:	4638      	mov	r0, r7
9001beb6:	68db      	ldr	r3, [r3, #12]
9001beb8:	4798      	blx	r3
9001beba:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001bebe:	4602      	mov	r2, r0
9001bec0:	6030      	str	r0, [r6, #0]
9001bec2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001bec6:	d213      	bcs.n	9001bef0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001bec8:	4643      	mov	r3, r8
9001beca:	4639      	mov	r1, r7
9001becc:	4620      	mov	r0, r4
9001bece:	f7ff fe39 	bl	9001bb44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001bed2:	6030      	str	r0, [r6, #0]
9001bed4:	6833      	ldr	r3, [r6, #0]
9001bed6:	b143      	cbz	r3, 9001beea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001bed8:	7b5a      	ldrb	r2, [r3, #13]
9001beda:	7a9b      	ldrb	r3, [r3, #10]
9001bedc:	0052      	lsls	r2, r2, #1
9001bede:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001bee2:	4313      	orrs	r3, r2
9001bee4:	bf0c      	ite	eq
9001bee6:	2301      	moveq	r3, #1
9001bee8:	2300      	movne	r3, #0
9001beea:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001beee:	e7dc      	b.n	9001beaa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001bef0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001bef4:	b29b      	uxth	r3, r3
9001bef6:	2b7f      	cmp	r3, #127	@ 0x7f
9001bef8:	d804      	bhi.n	9001bf04 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001befa:	4639      	mov	r1, r7
9001befc:	4620      	mov	r0, r4
9001befe:	f7ff fd15 	bl	9001b92c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001bf02:	e7e6      	b.n	9001bed2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001bf04:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001bf08:	2b00      	cmp	r3, #0
9001bf0a:	d0e3      	beq.n	9001bed4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001bf0c:	f640 1302 	movw	r3, #2306	@ 0x902
9001bf10:	429d      	cmp	r5, r3
9001bf12:	d1df      	bne.n	9001bed4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001bf14:	4601      	mov	r1, r0
9001bf16:	4620      	mov	r0, r4
9001bf18:	f7ff fcd8 	bl	9001b8cc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001bf1c:	e7d9      	b.n	9001bed2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001bf1e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001bf1e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001bf22:	461e      	mov	r6, r3
9001bf24:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001bf26:	4604      	mov	r4, r0
9001bf28:	4617      	mov	r7, r2
9001bf2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001bf2e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001bf32:	f7e9 fb7f 	bl	90005634 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001bf36:	4605      	mov	r5, r0
9001bf38:	b918      	cbnz	r0, 9001bf42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001bf3a:	6030      	str	r0, [r6, #0]
9001bf3c:	4628      	mov	r0, r5
9001bf3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001bf42:	683b      	ldr	r3, [r7, #0]
9001bf44:	4601      	mov	r1, r0
9001bf46:	4638      	mov	r0, r7
9001bf48:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001bf4c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001bf50:	47c8      	blx	r9
9001bf52:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001bf56:	4602      	mov	r2, r0
9001bf58:	6030      	str	r0, [r6, #0]
9001bf5a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001bf5e:	d213      	bcs.n	9001bf88 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001bf60:	4643      	mov	r3, r8
9001bf62:	4639      	mov	r1, r7
9001bf64:	4620      	mov	r0, r4
9001bf66:	f7ff fded 	bl	9001bb44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001bf6a:	6030      	str	r0, [r6, #0]
9001bf6c:	6833      	ldr	r3, [r6, #0]
9001bf6e:	b143      	cbz	r3, 9001bf82 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001bf70:	7b5a      	ldrb	r2, [r3, #13]
9001bf72:	7a9b      	ldrb	r3, [r3, #10]
9001bf74:	0052      	lsls	r2, r2, #1
9001bf76:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001bf7a:	4313      	orrs	r3, r2
9001bf7c:	bf0c      	ite	eq
9001bf7e:	2301      	moveq	r3, #1
9001bf80:	2300      	movne	r3, #0
9001bf82:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001bf86:	e7d9      	b.n	9001bf3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001bf88:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001bf8c:	b29b      	uxth	r3, r3
9001bf8e:	2b7f      	cmp	r3, #127	@ 0x7f
9001bf90:	d804      	bhi.n	9001bf9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001bf92:	4639      	mov	r1, r7
9001bf94:	4620      	mov	r0, r4
9001bf96:	f7ff fcc9 	bl	9001b92c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001bf9a:	e7e6      	b.n	9001bf6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001bf9c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001bfa0:	2b00      	cmp	r3, #0
9001bfa2:	d0e3      	beq.n	9001bf6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001bfa4:	f640 1302 	movw	r3, #2306	@ 0x902
9001bfa8:	429d      	cmp	r5, r3
9001bfaa:	d1df      	bne.n	9001bf6c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001bfac:	4601      	mov	r1, r0
9001bfae:	4620      	mov	r0, r4
9001bfb0:	f7ff fc8c 	bl	9001b8cc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001bfb4:	e7d9      	b.n	9001bf6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001bfb6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001bfb6:	b510      	push	{r4, lr}
9001bfb8:	4604      	mov	r4, r0
9001bfba:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
9001bfbe:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001bfc0:	b1e1      	cbz	r1, 9001bffc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001bfc2:	2b0a      	cmp	r3, #10
9001bfc4:	d02d      	beq.n	9001c022 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001bfc6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
9001bfc8:	3901      	subs	r1, #1
9001bfca:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001bfce:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
9001bfd0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
9001bfd4:	1c51      	adds	r1, r2, #1
9001bfd6:	b289      	uxth	r1, r1
9001bfd8:	2901      	cmp	r1, #1
9001bfda:	bf8a      	itet	hi
9001bfdc:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001bfe0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
9001bfe2:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
9001bfe4:	1c5a      	adds	r2, r3, #1
9001bfe6:	8722      	strh	r2, [r4, #56]	@ 0x38
9001bfe8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001bfea:	4413      	add	r3, r2
9001bfec:	b29b      	uxth	r3, r3
9001bfee:	2b09      	cmp	r3, #9
9001bff0:	bf88      	it	hi
9001bff2:	3b0a      	subhi	r3, #10
9001bff4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001bff8:	8458      	strh	r0, [r3, #34]	@ 0x22
9001bffa:	e7de      	b.n	9001bfba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001bffc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001bffe:	2b0a      	cmp	r3, #10
9001c000:	d00f      	beq.n	9001c022 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001c002:	4620      	mov	r0, r4
9001c004:	f7ff fc21 	bl	9001b84a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001c008:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001c00a:	1c5a      	adds	r2, r3, #1
9001c00c:	8722      	strh	r2, [r4, #56]	@ 0x38
9001c00e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001c010:	4413      	add	r3, r2
9001c012:	b29b      	uxth	r3, r3
9001c014:	2b09      	cmp	r3, #9
9001c016:	bf88      	it	hi
9001c018:	3b0a      	subhi	r3, #10
9001c01a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001c01e:	8458      	strh	r0, [r3, #34]	@ 0x22
9001c020:	e7ec      	b.n	9001bffc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001c022:	bd10      	pop	{r4, pc}

9001c024 <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001c024:	b538      	push	{r3, r4, r5, lr}
9001c026:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001c028:	4604      	mov	r4, r0
9001c02a:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001c02e:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
9001c030:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
9001c032:	3a01      	subs	r2, #1
9001c034:	8702      	strh	r2, [r0, #56]	@ 0x38
9001c036:	1c5a      	adds	r2, r3, #1
9001c038:	b292      	uxth	r2, r2
9001c03a:	2a09      	cmp	r2, #9
9001c03c:	bf8a      	itet	hi
9001c03e:	3b09      	subhi	r3, #9
9001c040:	86c2      	strhls	r2, [r0, #54]	@ 0x36
9001c042:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
9001c044:	f7ff ffb7 	bl	9001bfb6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001c048:	8c23      	ldrh	r3, [r4, #32]
9001c04a:	2b01      	cmp	r3, #1
9001c04c:	bf9c      	itt	ls
9001c04e:	3301      	addls	r3, #1
9001c050:	8423      	strhls	r3, [r4, #32]
9001c052:	8be3      	ldrh	r3, [r4, #30]
9001c054:	b90b      	cbnz	r3, 9001c05a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001c056:	2302      	movs	r3, #2
9001c058:	83e3      	strh	r3, [r4, #30]
9001c05a:	8be3      	ldrh	r3, [r4, #30]
9001c05c:	4628      	mov	r0, r5
9001c05e:	3b01      	subs	r3, #1
9001c060:	b29b      	uxth	r3, r3
9001c062:	83e3      	strh	r3, [r4, #30]
9001c064:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c068:	8365      	strh	r5, [r4, #26]
9001c06a:	bd38      	pop	{r3, r4, r5, pc}

9001c06c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001c06c:	428a      	cmp	r2, r1
9001c06e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c072:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
9001c074:	d932      	bls.n	9001c0dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001c076:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
9001c078:	1a54      	subs	r4, r2, r1
9001c07a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
9001c07e:	19ee      	adds	r6, r5, r7
9001c080:	fa1f fe84 	uxth.w	lr, r4
9001c084:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
9001c088:	3e01      	subs	r6, #1
9001c08a:	b2b4      	uxth	r4, r6
9001c08c:	eba4 090e 	sub.w	r9, r4, lr
9001c090:	fa1f f989 	uxth.w	r9, r9
9001c094:	2c09      	cmp	r4, #9
9001c096:	4626      	mov	r6, r4
9001c098:	bf88      	it	hi
9001c09a:	f1a4 060a 	subhi.w	r6, r4, #10
9001c09e:	f1bc 0f00 	cmp.w	ip, #0
9001c0a2:	f104 34ff 	add.w	r4, r4, #4294967295
9001c0a6:	bf08      	it	eq
9001c0a8:	f04f 0c02 	moveq.w	ip, #2
9001c0ac:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001c0b0:	b2a4      	uxth	r4, r4
9001c0b2:	f10c 3cff 	add.w	ip, ip, #4294967295
9001c0b6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
9001c0ba:	454c      	cmp	r4, r9
9001c0bc:	fa1f fc8c 	uxth.w	ip, ip
9001c0c0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001c0c4:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
9001c0c8:	d1e4      	bne.n	9001c094 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001c0ca:	eba5 050e 	sub.w	r5, r5, lr
9001c0ce:	eb0e 0408 	add.w	r4, lr, r8
9001c0d2:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
9001c0d6:	8705      	strh	r5, [r0, #56]	@ 0x38
9001c0d8:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
9001c0dc:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
9001c0de:	250a      	movs	r5, #10
9001c0e0:	1a64      	subs	r4, r4, r1
9001c0e2:	4439      	add	r1, r7
9001c0e4:	b289      	uxth	r1, r1
9001c0e6:	8704      	strh	r4, [r0, #56]	@ 0x38
9001c0e8:	2909      	cmp	r1, #9
9001c0ea:	bf88      	it	hi
9001c0ec:	390a      	subhi	r1, #10
9001c0ee:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001c0f0:	b18a      	cbz	r2, 9001c116 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001c0f2:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
9001c0f4:	3a01      	subs	r2, #1
9001c0f6:	3101      	adds	r1, #1
9001c0f8:	b292      	uxth	r2, r2
9001c0fa:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001c0fe:	8701      	strh	r1, [r0, #56]	@ 0x38
9001c100:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001c102:	b901      	cbnz	r1, 9001c106 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001c104:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001c106:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001c108:	3901      	subs	r1, #1
9001c10a:	b289      	uxth	r1, r1
9001c10c:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001c10e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001c112:	844c      	strh	r4, [r1, #34]	@ 0x22
9001c114:	e7ec      	b.n	9001c0f0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001c116:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c11a:	f7ff bf4c 	b.w	9001bfb6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001c11e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001c11e:	b570      	push	{r4, r5, r6, lr}
9001c120:	2500      	movs	r5, #0
9001c122:	4295      	cmp	r5, r2
9001c124:	d011      	beq.n	9001c14a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001c126:	8bc4      	ldrh	r4, [r0, #30]
9001c128:	f831 6b02 	ldrh.w	r6, [r1], #2
9001c12c:	4414      	add	r4, r2
9001c12e:	3c01      	subs	r4, #1
9001c130:	1b64      	subs	r4, r4, r5
9001c132:	b2a4      	uxth	r4, r4
9001c134:	2c01      	cmp	r4, #1
9001c136:	bf88      	it	hi
9001c138:	3c02      	subhi	r4, #2
9001c13a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c13e:	8b64      	ldrh	r4, [r4, #26]
9001c140:	42b4      	cmp	r4, r6
9001c142:	d117      	bne.n	9001c174 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001c144:	3501      	adds	r5, #1
9001c146:	b2ad      	uxth	r5, r5
9001c148:	e7eb      	b.n	9001c122 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001c14a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c14e:	2400      	movs	r4, #0
9001c150:	4413      	add	r3, r2
9001c152:	b2a2      	uxth	r2, r4
9001c154:	429a      	cmp	r2, r3
9001c156:	da0f      	bge.n	9001c178 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001c158:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
9001c15a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001c15e:	3401      	adds	r4, #1
9001c160:	4432      	add	r2, r6
9001c162:	b292      	uxth	r2, r2
9001c164:	2a09      	cmp	r2, #9
9001c166:	bf88      	it	hi
9001c168:	3a0a      	subhi	r2, #10
9001c16a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001c16e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
9001c170:	42aa      	cmp	r2, r5
9001c172:	d0ee      	beq.n	9001c152 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001c174:	2000      	movs	r0, #0
9001c176:	bd70      	pop	{r4, r5, r6, pc}
9001c178:	2001      	movs	r0, #1
9001c17a:	e7fc      	b.n	9001c176 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001c17c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001c17c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c180:	4605      	mov	r5, r0
9001c182:	4616      	mov	r6, r2
9001c184:	1c8c      	adds	r4, r1, #2
9001c186:	8809      	ldrh	r1, [r1, #0]
9001c188:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001c18c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001c190:	42b3      	cmp	r3, r6
9001c192:	d124      	bne.n	9001c1de <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001c194:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001c198:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001c19c:	f001 070f 	and.w	r7, r1, #15
9001c1a0:	4652      	mov	r2, sl
9001c1a2:	f8cd 8000 	str.w	r8, [sp]
9001c1a6:	464b      	mov	r3, r9
9001c1a8:	4621      	mov	r1, r4
9001c1aa:	4628      	mov	r0, r5
9001c1ac:	f7ff ffb7 	bl	9001c11e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001c1b0:	4683      	mov	fp, r0
9001c1b2:	b168      	cbz	r0, 9001c1d0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001c1b4:	eb0a 0109 	add.w	r1, sl, r9
9001c1b8:	463a      	mov	r2, r7
9001c1ba:	4628      	mov	r0, r5
9001c1bc:	4441      	add	r1, r8
9001c1be:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001c1c2:	4649      	mov	r1, r9
9001c1c4:	f7ff ff52 	bl	9001c06c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001c1c8:	4658      	mov	r0, fp
9001c1ca:	b003      	add	sp, #12
9001c1cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c1d0:	eb07 010a 	add.w	r1, r7, sl
9001c1d4:	4449      	add	r1, r9
9001c1d6:	4441      	add	r1, r8
9001c1d8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001c1dc:	e7d2      	b.n	9001c184 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001c1de:	f04f 0b00 	mov.w	fp, #0
9001c1e2:	e7f1      	b.n	9001c1c8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001c1e4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001c1e4:	b570      	push	{r4, r5, r6, lr}
9001c1e6:	8810      	ldrh	r0, [r2, #0]
9001c1e8:	4298      	cmp	r0, r3
9001c1ea:	d817      	bhi.n	9001c21c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001c1ec:	1e48      	subs	r0, r1, #1
9001c1ee:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001c1f2:	4298      	cmp	r0, r3
9001c1f4:	d312      	bcc.n	9001c21c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001c1f6:	2400      	movs	r4, #0
9001c1f8:	428c      	cmp	r4, r1
9001c1fa:	d20f      	bcs.n	9001c21c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001c1fc:	1860      	adds	r0, r4, r1
9001c1fe:	1040      	asrs	r0, r0, #1
9001c200:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001c204:	0085      	lsls	r5, r0, #2
9001c206:	42b3      	cmp	r3, r6
9001c208:	d902      	bls.n	9001c210 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001c20a:	3001      	adds	r0, #1
9001c20c:	b284      	uxth	r4, r0
9001c20e:	e7f3      	b.n	9001c1f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001c210:	d201      	bcs.n	9001c216 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001c212:	b281      	uxth	r1, r0
9001c214:	e7f0      	b.n	9001c1f8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001c216:	442a      	add	r2, r5
9001c218:	8850      	ldrh	r0, [r2, #2]
9001c21a:	bd70      	pop	{r4, r5, r6, pc}
9001c21c:	2000      	movs	r0, #0
9001c21e:	e7fc      	b.n	9001c21a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001c220 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001c220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001c224:	6c45      	ldr	r5, [r0, #68]	@ 0x44
9001c226:	4604      	mov	r4, r0
9001c228:	260b      	movs	r6, #11
9001c22a:	886f      	ldrh	r7, [r5, #2]
9001c22c:	087f      	lsrs	r7, r7, #1
9001c22e:	3e01      	subs	r6, #1
9001c230:	d013      	beq.n	9001c25a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001c232:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001c234:	462a      	mov	r2, r5
9001c236:	4639      	mov	r1, r7
9001c238:	4620      	mov	r0, r4
9001c23a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001c23e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001c242:	4643      	mov	r3, r8
9001c244:	f7ff ffce 	bl	9001c1e4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001c248:	b138      	cbz	r0, 9001c25a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001c24a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001c24e:	4642      	mov	r2, r8
9001c250:	4620      	mov	r0, r4
9001c252:	f7ff ff93 	bl	9001c17c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001c256:	2800      	cmp	r0, #0
9001c258:	d1e9      	bne.n	9001c22e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001c25a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001c260 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001c260:	b570      	push	{r4, r5, r6, lr}
9001c262:	694a      	ldr	r2, [r1, #20]
9001c264:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001c266:	684b      	ldr	r3, [r1, #4]
9001c268:	1b54      	subs	r4, r2, r5
9001c26a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
9001c26c:	f000 8106 	beq.w	9001c47c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001c270:	1b9b      	subs	r3, r3, r6
9001c272:	d003      	beq.n	9001c27c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001c274:	4363      	muls	r3, r4
9001c276:	2210      	movs	r2, #16
9001c278:	fb93 f3f2 	sdiv	r3, r3, r2
9001c27c:	680c      	ldr	r4, [r1, #0]
9001c27e:	698a      	ldr	r2, [r1, #24]
9001c280:	1b65      	subs	r5, r4, r5
9001c282:	f000 80fd 	beq.w	9001c480 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001c286:	1b92      	subs	r2, r2, r6
9001c288:	d003      	beq.n	9001c292 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001c28a:	436a      	muls	r2, r5
9001c28c:	2410      	movs	r4, #16
9001c28e:	fb92 f2f4 	sdiv	r2, r2, r4
9001c292:	1a9b      	subs	r3, r3, r2
9001c294:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001c4bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001c298:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c29c:	460a      	mov	r2, r1
9001c29e:	ee07 3a90 	vmov	s15, r3
9001c2a2:	f100 040c 	add.w	r4, r0, #12
9001c2a6:	4603      	mov	r3, r0
9001c2a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c2ac:	ee67 7a84 	vmul.f32	s15, s15, s8
9001c2b0:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001c2b4:	eeb1 6a43 	vneg.f32	s12, s6
9001c2b8:	edd2 7a02 	vldr	s15, [r2, #8]
9001c2bc:	3214      	adds	r2, #20
9001c2be:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001c2c2:	ece3 6a01 	vstmia	r3!, {s13}
9001c2c6:	429c      	cmp	r4, r3
9001c2c8:	ed52 7a02 	vldr	s15, [r2, #-8]
9001c2cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001c2d0:	edc3 7a02 	vstr	s15, [r3, #8]
9001c2d4:	ed52 7a01 	vldr	s15, [r2, #-4]
9001c2d8:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001c2dc:	edc3 7a05 	vstr	s15, [r3, #20]
9001c2e0:	d1ea      	bne.n	9001c2b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001c2e2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c2e4:	698b      	ldr	r3, [r1, #24]
9001c2e6:	edd0 4a02 	vldr	s9, [r0, #8]
9001c2ea:	1a9b      	subs	r3, r3, r2
9001c2ec:	edd0 3a00 	vldr	s7, [r0]
9001c2f0:	edd0 6a01 	vldr	s13, [r0, #4]
9001c2f4:	ee07 3a90 	vmov	s15, r3
9001c2f8:	684b      	ldr	r3, [r1, #4]
9001c2fa:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001c2fe:	ed90 5a05 	vldr	s10, [r0, #20]
9001c302:	1a9b      	subs	r3, r3, r2
9001c304:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c308:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001c30c:	ed90 2a03 	vldr	s4, [r0, #12]
9001c310:	ee07 3a10 	vmov	s14, r3
9001c314:	edd0 5a04 	vldr	s11, [r0, #16]
9001c318:	ee67 7a84 	vmul.f32	s15, s15, s8
9001c31c:	ed90 1a07 	vldr	s2, [r0, #28]
9001c320:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c324:	edd0 2a06 	vldr	s5, [r0, #24]
9001c328:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001c32c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001c330:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c334:	ee32 5a45 	vsub.f32	s10, s4, s10
9001c338:	eee6 7a87 	vfma.f32	s15, s13, s14
9001c33c:	ee67 7a83 	vmul.f32	s15, s15, s6
9001c340:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
9001c344:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001c346:	694a      	ldr	r2, [r1, #20]
9001c348:	1b13      	subs	r3, r2, r4
9001c34a:	ee07 3a10 	vmov	s14, r3
9001c34e:	680b      	ldr	r3, [r1, #0]
9001c350:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c354:	1b1b      	subs	r3, r3, r4
9001c356:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c35a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001c35e:	ee07 3a10 	vmov	s14, r3
9001c362:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c366:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c36a:	eee6 4a87 	vfma.f32	s9, s13, s14
9001c36e:	ee64 4a86 	vmul.f32	s9, s9, s12
9001c372:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
9001c376:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c378:	698b      	ldr	r3, [r1, #24]
9001c37a:	1a9b      	subs	r3, r3, r2
9001c37c:	ee06 3a90 	vmov	s13, r3
9001c380:	684b      	ldr	r3, [r1, #4]
9001c382:	1a9b      	subs	r3, r3, r2
9001c384:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001c388:	ee07 3a10 	vmov	s14, r3
9001c38c:	ee66 6a84 	vmul.f32	s13, s13, s8
9001c390:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c394:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001c398:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c39c:	eee5 6a87 	vfma.f32	s13, s11, s14
9001c3a0:	ee66 6a83 	vmul.f32	s13, s13, s6
9001c3a4:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
9001c3a8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001c3aa:	694a      	ldr	r2, [r1, #20]
9001c3ac:	1b13      	subs	r3, r2, r4
9001c3ae:	ee07 3a10 	vmov	s14, r3
9001c3b2:	680b      	ldr	r3, [r1, #0]
9001c3b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c3b8:	1b1b      	subs	r3, r3, r4
9001c3ba:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c3be:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001c3c2:	ee07 3a10 	vmov	s14, r3
9001c3c6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c3ca:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c3ce:	eea5 5a87 	vfma.f32	s10, s11, s14
9001c3d2:	edd0 5a08 	vldr	s11, [r0, #32]
9001c3d6:	ee31 1a65 	vsub.f32	s2, s2, s11
9001c3da:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001c3de:	ee25 5a06 	vmul.f32	s10, s10, s12
9001c3e2:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001c3e6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c3e8:	698b      	ldr	r3, [r1, #24]
9001c3ea:	1a9b      	subs	r3, r3, r2
9001c3ec:	ee07 3a10 	vmov	s14, r3
9001c3f0:	684b      	ldr	r3, [r1, #4]
9001c3f2:	1a9b      	subs	r3, r3, r2
9001c3f4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c3f8:	ee01 3a90 	vmov	s3, r3
9001c3fc:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c400:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001c404:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001c408:	ee61 1a84 	vmul.f32	s3, s3, s8
9001c40c:	eea1 7a21 	vfma.f32	s14, s2, s3
9001c410:	ee27 7a03 	vmul.f32	s14, s14, s6
9001c414:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001c418:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001c41a:	694a      	ldr	r2, [r1, #20]
9001c41c:	1b13      	subs	r3, r2, r4
9001c41e:	ee03 3a10 	vmov	s6, r3
9001c422:	680b      	ldr	r3, [r1, #0]
9001c424:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001c428:	1b1b      	subs	r3, r3, r4
9001c42a:	ee23 3a04 	vmul.f32	s6, s6, s8
9001c42e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001c432:	ee03 3a10 	vmov	s6, r3
9001c436:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001c43a:	ee23 4a04 	vmul.f32	s8, s6, s8
9001c43e:	eee1 5a04 	vfma.f32	s11, s2, s8
9001c442:	ee25 6a86 	vmul.f32	s12, s11, s12
9001c446:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001c44a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001c44e:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001c452:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001c456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c45a:	dd13      	ble.n	9001c484 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001c45c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001c460:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001c464:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001c466:	eee3 7a87 	vfma.f32	s15, s7, s14
9001c46a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001c46e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c472:	dd15      	ble.n	9001c4a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001c474:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001c478:	6403      	str	r3, [r0, #64]	@ 0x40
9001c47a:	bd70      	pop	{r4, r5, r6, pc}
9001c47c:	4623      	mov	r3, r4
9001c47e:	e6fd      	b.n	9001c27c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001c480:	462a      	mov	r2, r5
9001c482:	e706      	b.n	9001c292 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001c484:	d502      	bpl.n	9001c48c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001c486:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001c48a:	e7e9      	b.n	9001c460 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001c48c:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001c490:	eea3 2a85 	vfma.f32	s4, s7, s10
9001c494:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001c498:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c49c:	dade      	bge.n	9001c45c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001c49e:	e7f2      	b.n	9001c486 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001c4a0:	d502      	bpl.n	9001c4a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001c4a2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001c4a6:	e7e7      	b.n	9001c478 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001c4a8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001c4ac:	eee3 4a86 	vfma.f32	s9, s7, s12
9001c4b0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001c4b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c4b8:	dadc      	bge.n	9001c474 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001c4ba:	e7f2      	b.n	9001c4a2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001c4bc:	3d800000 	.word	0x3d800000

9001c4c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001c4c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c4c4:	2714      	movs	r7, #20
9001c4c6:	435f      	muls	r7, r3
9001c4c8:	eb02 0c07 	add.w	ip, r2, r7
9001c4cc:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001c4d0:	f115 0e0f 	adds.w	lr, r5, #15
9001c4d4:	f100 80a2 	bmi.w	9001c61c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001c4d8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001c4dc:	9c08      	ldr	r4, [sp, #32]
9001c4de:	2614      	movs	r6, #20
9001c4e0:	f8c0 e014 	str.w	lr, [r0, #20]
9001c4e4:	4366      	muls	r6, r4
9001c4e6:	eb02 0806 	add.w	r8, r2, r6
9001c4ea:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001c4ee:	f115 040f 	adds.w	r4, r5, #15
9001c4f2:	f100 809f 	bmi.w	9001c634 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001c4f6:	1124      	asrs	r4, r4, #4
9001c4f8:	eba4 040e 	sub.w	r4, r4, lr
9001c4fc:	6184      	str	r4, [r0, #24]
9001c4fe:	2c00      	cmp	r4, #0
9001c500:	f000 808a 	beq.w	9001c618 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001c504:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001c508:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001c50c:	5995      	ldr	r5, [r2, r6]
9001c50e:	eba4 0809 	sub.w	r8, r4, r9
9001c512:	59d4      	ldr	r4, [r2, r7]
9001c514:	eba5 0a04 	sub.w	sl, r5, r4
9001c518:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001c51c:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001c520:	fb0e fe05 	mul.w	lr, lr, r5
9001c524:	fb0a ee19 	mls	lr, sl, r9, lr
9001c528:	fb08 e404 	mla	r4, r8, r4, lr
9001c52c:	3c01      	subs	r4, #1
9001c52e:	19a4      	adds	r4, r4, r6
9001c530:	f100 808c 	bmi.w	9001c64c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001c534:	fb94 fef6 	sdiv	lr, r4, r6
9001c538:	fb06 441e 	mls	r4, r6, lr, r4
9001c53c:	f8c0 e000 	str.w	lr, [r0]
9001c540:	6104      	str	r4, [r0, #16]
9001c542:	2d00      	cmp	r5, #0
9001c544:	f2c0 8095 	blt.w	9001c672 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001c548:	fb95 f4f6 	sdiv	r4, r5, r6
9001c54c:	fb06 5514 	mls	r5, r6, r4, r5
9001c550:	6044      	str	r4, [r0, #4]
9001c552:	6085      	str	r5, [r0, #8]
9001c554:	60c6      	str	r6, [r0, #12]
9001c556:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001c55a:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001c55e:	6945      	ldr	r5, [r0, #20]
9001c560:	59d2      	ldr	r2, [r2, r7]
9001c562:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001c566:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001c694 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001c56a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001c56e:	ee07 4a10 	vmov	s14, r4
9001c572:	6804      	ldr	r4, [r0, #0]
9001c574:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001c578:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c57c:	ee07 2a90 	vmov	s15, r2
9001c580:	ee27 7a26 	vmul.f32	s14, s14, s13
9001c584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c588:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001c58c:	edd3 6a00 	vldr	s13, [r3]
9001c590:	eee6 6a07 	vfma.f32	s13, s12, s14
9001c594:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001c598:	eee6 6a27 	vfma.f32	s13, s12, s15
9001c59c:	edc0 6a07 	vstr	s13, [r0, #28]
9001c5a0:	edd0 6a01 	vldr	s13, [r0, #4]
9001c5a4:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001c5a8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001c5ac:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001c5b0:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001c5b4:	ed80 6a08 	vstr	s12, [r0, #32]
9001c5b8:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001c5ba:	6242      	str	r2, [r0, #36]	@ 0x24
9001c5bc:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001c5c0:	ed93 6a03 	vldr	s12, [r3, #12]
9001c5c4:	eea5 6a87 	vfma.f32	s12, s11, s14
9001c5c8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001c5cc:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001c5d0:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001c5d4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001c5d8:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001c5dc:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001c5e0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001c5e4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c5e6:	6302      	str	r2, [r0, #48]	@ 0x30
9001c5e8:	ed93 6a06 	vldr	s12, [r3, #24]
9001c5ec:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001c5f0:	eea5 6a87 	vfma.f32	s12, s11, s14
9001c5f4:	eeb0 7a46 	vmov.f32	s14, s12
9001c5f8:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001c5fc:	eea6 7a27 	vfma.f32	s14, s12, s15
9001c600:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001c604:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001c608:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001c60c:	eee6 7a87 	vfma.f32	s15, s13, s14
9001c610:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001c614:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001c616:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001c618:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c61c:	2410      	movs	r4, #16
9001c61e:	f1c5 0501 	rsb	r5, r5, #1
9001c622:	fb9e fef4 	sdiv	lr, lr, r4
9001c626:	f015 050f 	ands.w	r5, r5, #15
9001c62a:	bf18      	it	ne
9001c62c:	2501      	movne	r5, #1
9001c62e:	ebae 0e05 	sub.w	lr, lr, r5
9001c632:	e753      	b.n	9001c4dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001c634:	f04f 0910 	mov.w	r9, #16
9001c638:	f1c5 0501 	rsb	r5, r5, #1
9001c63c:	fb94 f4f9 	sdiv	r4, r4, r9
9001c640:	f015 050f 	ands.w	r5, r5, #15
9001c644:	bf18      	it	ne
9001c646:	2501      	movne	r5, #1
9001c648:	1b64      	subs	r4, r4, r5
9001c64a:	e755      	b.n	9001c4f8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001c64c:	4264      	negs	r4, r4
9001c64e:	fb94 fef6 	sdiv	lr, r4, r6
9001c652:	f1ce 0800 	rsb	r8, lr, #0
9001c656:	fb06 441e 	mls	r4, r6, lr, r4
9001c65a:	f8c0 8000 	str.w	r8, [r0]
9001c65e:	6104      	str	r4, [r0, #16]
9001c660:	2c00      	cmp	r4, #0
9001c662:	f43f af6e 	beq.w	9001c542 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001c666:	ea6f 0e0e 	mvn.w	lr, lr
9001c66a:	1b34      	subs	r4, r6, r4
9001c66c:	f8c0 e000 	str.w	lr, [r0]
9001c670:	e766      	b.n	9001c540 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001c672:	426d      	negs	r5, r5
9001c674:	fb95 f4f6 	sdiv	r4, r5, r6
9001c678:	f1c4 0e00 	rsb	lr, r4, #0
9001c67c:	fb06 5514 	mls	r5, r6, r4, r5
9001c680:	f8c0 e004 	str.w	lr, [r0, #4]
9001c684:	6085      	str	r5, [r0, #8]
9001c686:	2d00      	cmp	r5, #0
9001c688:	f43f af64 	beq.w	9001c554 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001c68c:	43e4      	mvns	r4, r4
9001c68e:	1b75      	subs	r5, r6, r5
9001c690:	6044      	str	r4, [r0, #4]
9001c692:	e75e      	b.n	9001c552 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001c694:	3d800000 	.word	0x3d800000

9001c698 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001c698:	4602      	mov	r2, r0
9001c69a:	b148      	cbz	r0, 9001c6b0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001c69c:	2300      	movs	r3, #0
9001c69e:	b298      	uxth	r0, r3
9001c6a0:	3301      	adds	r3, #1
9001c6a2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001c6a6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001c6aa:	2900      	cmp	r1, #0
9001c6ac:	d1f7      	bne.n	9001c69e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001c6ae:	4770      	bx	lr
9001c6b0:	4770      	bx	lr
	...

9001c6b4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001c6b4:	4b01      	ldr	r3, [pc, #4]	@ (9001c6bc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001c6b6:	6018      	str	r0, [r3, #0]
9001c6b8:	4770      	bx	lr
9001c6ba:	bf00      	nop
9001c6bc:	24024608 	.word	0x24024608

9001c6c0 <_ZN8touchgfx11FontManager7getFontEt>:
9001c6c0:	4b03      	ldr	r3, [pc, #12]	@ (9001c6d0 <_ZN8touchgfx11FontManager7getFontEt+0x10>)
9001c6c2:	4601      	mov	r1, r0
9001c6c4:	6818      	ldr	r0, [r3, #0]
9001c6c6:	b110      	cbz	r0, 9001c6ce <_ZN8touchgfx11FontManager7getFontEt+0xe>
9001c6c8:	6803      	ldr	r3, [r0, #0]
9001c6ca:	681b      	ldr	r3, [r3, #0]
9001c6cc:	4718      	bx	r3
9001c6ce:	4770      	bx	lr
9001c6d0:	24024608 	.word	0x24024608

9001c6d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001c6d4:	4b06      	ldr	r3, [pc, #24]	@ (9001c6f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001c6d6:	881a      	ldrh	r2, [r3, #0]
9001c6d8:	4282      	cmp	r2, r0
9001c6da:	d807      	bhi.n	9001c6ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001c6dc:	4b05      	ldr	r3, [pc, #20]	@ (9001c6f4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001c6de:	881b      	ldrh	r3, [r3, #0]
9001c6e0:	4413      	add	r3, r2
9001c6e2:	4298      	cmp	r0, r3
9001c6e4:	bfac      	ite	ge
9001c6e6:	2000      	movge	r0, #0
9001c6e8:	2001      	movlt	r0, #1
9001c6ea:	4770      	bx	lr
9001c6ec:	2000      	movs	r0, #0
9001c6ee:	4770      	bx	lr
9001c6f0:	24024628 	.word	0x24024628
9001c6f4:	2402462c 	.word	0x2402462c

9001c6f8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001c6f8:	b508      	push	{r3, lr}
9001c6fa:	4601      	mov	r1, r0
9001c6fc:	f7ff ffea 	bl	9001c6d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001c700:	b118      	cbz	r0, 9001c70a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001c702:	4b02      	ldr	r3, [pc, #8]	@ (9001c70c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001c704:	681b      	ldr	r3, [r3, #0]
9001c706:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001c70a:	bd08      	pop	{r3, pc}
9001c70c:	2402460c 	.word	0x2402460c

9001c710 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001c710:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c712:	4c24      	ldr	r4, [pc, #144]	@ (9001c7a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001c714:	6823      	ldr	r3, [r4, #0]
9001c716:	2b00      	cmp	r3, #0
9001c718:	d042      	beq.n	9001c7a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001c71a:	4a23      	ldr	r2, [pc, #140]	@ (9001c7a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001c71c:	4d23      	ldr	r5, [pc, #140]	@ (9001c7ac <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001c71e:	8811      	ldrh	r1, [r2, #0]
9001c720:	f8b5 c000 	ldrh.w	ip, [r5]
9001c724:	4822      	ldr	r0, [pc, #136]	@ (9001c7b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001c726:	4461      	add	r1, ip
9001c728:	1c4a      	adds	r2, r1, #1
9001c72a:	008f      	lsls	r7, r1, #2
9001c72c:	f022 0201 	bic.w	r2, r2, #1
9001c730:	19de      	adds	r6, r3, r7
9001c732:	0412      	lsls	r2, r2, #16
9001c734:	6006      	str	r6, [r0, #0]
9001c736:	4e1f      	ldr	r6, [pc, #124]	@ (9001c7b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001c738:	0c12      	lsrs	r2, r2, #16
9001c73a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001c73e:	19da      	adds	r2, r3, r7
9001c740:	6032      	str	r2, [r6, #0]
9001c742:	220e      	movs	r2, #14
9001c744:	fb02 f20c 	mul.w	r2, r2, ip
9001c748:	3203      	adds	r2, #3
9001c74a:	f022 0203 	bic.w	r2, r2, #3
9001c74e:	443a      	add	r2, r7
9001c750:	4f19      	ldr	r7, [pc, #100]	@ (9001c7b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001c752:	4413      	add	r3, r2
9001c754:	603b      	str	r3, [r7, #0]
9001c756:	2300      	movs	r3, #0
9001c758:	4f18      	ldr	r7, [pc, #96]	@ (9001c7bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001c75a:	469c      	mov	ip, r3
9001c75c:	803b      	strh	r3, [r7, #0]
9001c75e:	4f18      	ldr	r7, [pc, #96]	@ (9001c7c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001c760:	683f      	ldr	r7, [r7, #0]
9001c762:	1aba      	subs	r2, r7, r2
9001c764:	4f17      	ldr	r7, [pc, #92]	@ (9001c7c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001c766:	603a      	str	r2, [r7, #0]
9001c768:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001c76c:	4a16      	ldr	r2, [pc, #88]	@ (9001c7c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001c76e:	8013      	strh	r3, [r2, #0]
9001c770:	428b      	cmp	r3, r1
9001c772:	d10d      	bne.n	9001c790 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001c774:	882d      	ldrh	r5, [r5, #0]
9001c776:	2300      	movs	r3, #0
9001c778:	6830      	ldr	r0, [r6, #0]
9001c77a:	240e      	movs	r4, #14
9001c77c:	429d      	cmp	r5, r3
9001c77e:	d90f      	bls.n	9001c7a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001c780:	fb04 0203 	mla	r2, r4, r3, r0
9001c784:	3301      	adds	r3, #1
9001c786:	7b11      	ldrb	r1, [r2, #12]
9001c788:	f36f 1145 	bfc	r1, #5, #1
9001c78c:	7311      	strb	r1, [r2, #12]
9001c78e:	e7f5      	b.n	9001c77c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001c790:	6822      	ldr	r2, [r4, #0]
9001c792:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001c796:	6802      	ldr	r2, [r0, #0]
9001c798:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001c79c:	3301      	adds	r3, #1
9001c79e:	e7e7      	b.n	9001c770 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001c7a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001c7a2:	bf00      	nop
9001c7a4:	2402460c 	.word	0x2402460c
9001c7a8:	24024628 	.word	0x24024628
9001c7ac:	2402462c 	.word	0x2402462c
9001c7b0:	24024620 	.word	0x24024620
9001c7b4:	24024610 	.word	0x24024610
9001c7b8:	24024618 	.word	0x24024618
9001c7bc:	2402462a 	.word	0x2402462a
9001c7c0:	24024614 	.word	0x24024614
9001c7c4:	24024624 	.word	0x24024624
9001c7c8:	2402461c 	.word	0x2402461c

9001c7cc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001c7cc:	4b06      	ldr	r3, [pc, #24]	@ (9001c7e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001c7ce:	681b      	ldr	r3, [r3, #0]
9001c7d0:	b943      	cbnz	r3, 9001c7e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001c7d2:	b139      	cbz	r1, 9001c7e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001c7d4:	4b05      	ldr	r3, [pc, #20]	@ (9001c7ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001c7d6:	801a      	strh	r2, [r3, #0]
9001c7d8:	4b05      	ldr	r3, [pc, #20]	@ (9001c7f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001c7da:	6019      	str	r1, [r3, #0]
9001c7dc:	4b05      	ldr	r3, [pc, #20]	@ (9001c7f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001c7de:	6018      	str	r0, [r3, #0]
9001c7e0:	f7ff bf96 	b.w	9001c710 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001c7e4:	4770      	bx	lr
9001c7e6:	bf00      	nop
9001c7e8:	24024618 	.word	0x24024618
9001c7ec:	2402462c 	.word	0x2402462c
9001c7f0:	24024614 	.word	0x24024614
9001c7f4:	2402460c 	.word	0x2402460c

9001c7f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001c7f8:	b470      	push	{r4, r5, r6}
9001c7fa:	4c07      	ldr	r4, [pc, #28]	@ (9001c818 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001c7fc:	4605      	mov	r5, r0
9001c7fe:	4610      	mov	r0, r2
9001c800:	9a03      	ldr	r2, [sp, #12]
9001c802:	6826      	ldr	r6, [r4, #0]
9001c804:	b936      	cbnz	r6, 9001c814 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001c806:	6025      	str	r5, [r4, #0]
9001c808:	4c04      	ldr	r4, [pc, #16]	@ (9001c81c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001c80a:	8021      	strh	r1, [r4, #0]
9001c80c:	4619      	mov	r1, r3
9001c80e:	bc70      	pop	{r4, r5, r6}
9001c810:	f7ff bfdc 	b.w	9001c7cc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001c814:	bc70      	pop	{r4, r5, r6}
9001c816:	4770      	bx	lr
9001c818:	24024630 	.word	0x24024630
9001c81c:	24024628 	.word	0x24024628

9001c820 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001c820:	4a12      	ldr	r2, [pc, #72]	@ (9001c86c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001c822:	8803      	ldrh	r3, [r0, #0]
9001c824:	8812      	ldrh	r2, [r2, #0]
9001c826:	4293      	cmp	r3, r2
9001c828:	d207      	bcs.n	9001c83a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001c82a:	4a11      	ldr	r2, [pc, #68]	@ (9001c870 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001c82c:	2114      	movs	r1, #20
9001c82e:	6812      	ldr	r2, [r2, #0]
9001c830:	fb01 2303 	mla	r3, r1, r3, r2
9001c834:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001c838:	4770      	bx	lr
9001c83a:	490e      	ldr	r1, [pc, #56]	@ (9001c874 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001c83c:	8809      	ldrh	r1, [r1, #0]
9001c83e:	4411      	add	r1, r2
9001c840:	428b      	cmp	r3, r1
9001c842:	da04      	bge.n	9001c84e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001c844:	1a9b      	subs	r3, r3, r2
9001c846:	4a0c      	ldr	r2, [pc, #48]	@ (9001c878 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001c848:	210e      	movs	r1, #14
9001c84a:	6812      	ldr	r2, [r2, #0]
9001c84c:	e7f0      	b.n	9001c830 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001c84e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001c852:	4293      	cmp	r3, r2
9001c854:	d108      	bne.n	9001c868 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001c856:	4b09      	ldr	r3, [pc, #36]	@ (9001c87c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001c858:	781b      	ldrb	r3, [r3, #0]
9001c85a:	b91b      	cbnz	r3, 9001c864 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001c85c:	4b08      	ldr	r3, [pc, #32]	@ (9001c880 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001c85e:	f9b3 0000 	ldrsh.w	r0, [r3]
9001c862:	4770      	bx	lr
9001c864:	4b07      	ldr	r3, [pc, #28]	@ (9001c884 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001c866:	e7fa      	b.n	9001c85e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001c868:	2000      	movs	r0, #0
9001c86a:	4770      	bx	lr
9001c86c:	24024628 	.word	0x24024628
9001c870:	24024630 	.word	0x24024630
9001c874:	2402462c 	.word	0x2402462c
9001c878:	24024610 	.word	0x24024610
9001c87c:	24024596 	.word	0x24024596
9001c880:	24024598 	.word	0x24024598
9001c884:	2402459a 	.word	0x2402459a

9001c888 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001c888:	4a12      	ldr	r2, [pc, #72]	@ (9001c8d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001c88a:	8803      	ldrh	r3, [r0, #0]
9001c88c:	8812      	ldrh	r2, [r2, #0]
9001c88e:	4293      	cmp	r3, r2
9001c890:	d207      	bcs.n	9001c8a2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001c892:	4a11      	ldr	r2, [pc, #68]	@ (9001c8d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001c894:	2114      	movs	r1, #20
9001c896:	6812      	ldr	r2, [r2, #0]
9001c898:	fb01 2303 	mla	r3, r1, r3, r2
9001c89c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001c8a0:	4770      	bx	lr
9001c8a2:	490e      	ldr	r1, [pc, #56]	@ (9001c8dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001c8a4:	8809      	ldrh	r1, [r1, #0]
9001c8a6:	4411      	add	r1, r2
9001c8a8:	428b      	cmp	r3, r1
9001c8aa:	da04      	bge.n	9001c8b6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001c8ac:	1a9b      	subs	r3, r3, r2
9001c8ae:	4a0c      	ldr	r2, [pc, #48]	@ (9001c8e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001c8b0:	210e      	movs	r1, #14
9001c8b2:	6812      	ldr	r2, [r2, #0]
9001c8b4:	e7f0      	b.n	9001c898 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001c8b6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001c8ba:	4293      	cmp	r3, r2
9001c8bc:	d108      	bne.n	9001c8d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001c8be:	4b09      	ldr	r3, [pc, #36]	@ (9001c8e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001c8c0:	781b      	ldrb	r3, [r3, #0]
9001c8c2:	b91b      	cbnz	r3, 9001c8cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001c8c4:	4b08      	ldr	r3, [pc, #32]	@ (9001c8e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001c8c6:	f9b3 0000 	ldrsh.w	r0, [r3]
9001c8ca:	4770      	bx	lr
9001c8cc:	4b07      	ldr	r3, [pc, #28]	@ (9001c8ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001c8ce:	e7fa      	b.n	9001c8c6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001c8d0:	2000      	movs	r0, #0
9001c8d2:	4770      	bx	lr
9001c8d4:	24024628 	.word	0x24024628
9001c8d8:	24024630 	.word	0x24024630
9001c8dc:	2402462c 	.word	0x2402462c
9001c8e0:	24024610 	.word	0x24024610
9001c8e4:	24024596 	.word	0x24024596
9001c8e8:	2402459a 	.word	0x2402459a
9001c8ec:	24024598 	.word	0x24024598

9001c8f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001c8f0:	4a22      	ldr	r2, [pc, #136]	@ (9001c97c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001c8f2:	b530      	push	{r4, r5, lr}
9001c8f4:	880b      	ldrh	r3, [r1, #0]
9001c8f6:	8812      	ldrh	r2, [r2, #0]
9001c8f8:	4293      	cmp	r3, r2
9001c8fa:	d213      	bcs.n	9001c924 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001c8fc:	4a20      	ldr	r2, [pc, #128]	@ (9001c980 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001c8fe:	2114      	movs	r1, #20
9001c900:	6812      	ldr	r2, [r2, #0]
9001c902:	fb01 2303 	mla	r3, r1, r3, r2
9001c906:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001c90a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001c90e:	8a1a      	ldrh	r2, [r3, #16]
9001c910:	8a5b      	ldrh	r3, [r3, #18]
9001c912:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001c916:	8004      	strh	r4, [r0, #0]
9001c918:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001c91c:	8041      	strh	r1, [r0, #2]
9001c91e:	8082      	strh	r2, [r0, #4]
9001c920:	80c3      	strh	r3, [r0, #6]
9001c922:	e024      	b.n	9001c96e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
9001c924:	4917      	ldr	r1, [pc, #92]	@ (9001c984 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001c926:	8809      	ldrh	r1, [r1, #0]
9001c928:	4411      	add	r1, r2
9001c92a:	428b      	cmp	r3, r1
9001c92c:	da10      	bge.n	9001c950 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
9001c92e:	1a9b      	subs	r3, r3, r2
9001c930:	220e      	movs	r2, #14
9001c932:	4353      	muls	r3, r2
9001c934:	4a14      	ldr	r2, [pc, #80]	@ (9001c988 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001c936:	6811      	ldr	r1, [r2, #0]
9001c938:	18ca      	adds	r2, r1, r3
9001c93a:	5ecd      	ldrsh	r5, [r1, r3]
9001c93c:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
9001c940:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9001c944:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
9001c948:	8005      	strh	r5, [r0, #0]
9001c94a:	8044      	strh	r4, [r0, #2]
9001c94c:	8081      	strh	r1, [r0, #4]
9001c94e:	e7e7      	b.n	9001c920 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001c950:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001c954:	4293      	cmp	r3, r2
9001c956:	d10b      	bne.n	9001c970 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
9001c958:	4b0c      	ldr	r3, [pc, #48]	@ (9001c98c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001c95a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001c95e:	4b0c      	ldr	r3, [pc, #48]	@ (9001c990 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
9001c960:	8081      	strh	r1, [r0, #4]
9001c962:	f9b3 2000 	ldrsh.w	r2, [r3]
9001c966:	2300      	movs	r3, #0
9001c968:	80c2      	strh	r2, [r0, #6]
9001c96a:	8003      	strh	r3, [r0, #0]
9001c96c:	8043      	strh	r3, [r0, #2]
9001c96e:	bd30      	pop	{r4, r5, pc}
9001c970:	2300      	movs	r3, #0
9001c972:	8003      	strh	r3, [r0, #0]
9001c974:	8043      	strh	r3, [r0, #2]
9001c976:	8083      	strh	r3, [r0, #4]
9001c978:	e7d2      	b.n	9001c920 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001c97a:	bf00      	nop
9001c97c:	24024628 	.word	0x24024628
9001c980:	24024630 	.word	0x24024630
9001c984:	2402462c 	.word	0x2402462c
9001c988:	24024610 	.word	0x24024610
9001c98c:	24024592 	.word	0x24024592
9001c990:	24024594 	.word	0x24024594

9001c994 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001c994:	4a17      	ldr	r2, [pc, #92]	@ (9001c9f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001c996:	8803      	ldrh	r3, [r0, #0]
9001c998:	8812      	ldrh	r2, [r2, #0]
9001c99a:	4293      	cmp	r3, r2
9001c99c:	d213      	bcs.n	9001c9c6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001c99e:	4a16      	ldr	r2, [pc, #88]	@ (9001c9f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001c9a0:	2114      	movs	r1, #20
9001c9a2:	6812      	ldr	r2, [r2, #0]
9001c9a4:	fb01 2303 	mla	r3, r1, r3, r2
9001c9a8:	8a1a      	ldrh	r2, [r3, #16]
9001c9aa:	8919      	ldrh	r1, [r3, #8]
9001c9ac:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001c9b0:	428a      	cmp	r2, r1
9001c9b2:	db1d      	blt.n	9001c9f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001c9b4:	8a58      	ldrh	r0, [r3, #18]
9001c9b6:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001c9ba:	895b      	ldrh	r3, [r3, #10]
9001c9bc:	4298      	cmp	r0, r3
9001c9be:	bfac      	ite	ge
9001c9c0:	2000      	movge	r0, #0
9001c9c2:	2001      	movlt	r0, #1
9001c9c4:	4770      	bx	lr
9001c9c6:	490d      	ldr	r1, [pc, #52]	@ (9001c9fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001c9c8:	8809      	ldrh	r1, [r1, #0]
9001c9ca:	4411      	add	r1, r2
9001c9cc:	428b      	cmp	r3, r1
9001c9ce:	da0d      	bge.n	9001c9ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001c9d0:	1a9b      	subs	r3, r3, r2
9001c9d2:	4a0b      	ldr	r2, [pc, #44]	@ (9001ca00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001c9d4:	210e      	movs	r1, #14
9001c9d6:	6812      	ldr	r2, [r2, #0]
9001c9d8:	fb01 2303 	mla	r3, r1, r3, r2
9001c9dc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001c9e0:	891a      	ldrh	r2, [r3, #8]
9001c9e2:	4291      	cmp	r1, r2
9001c9e4:	db04      	blt.n	9001c9f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001c9e6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001c9ea:	e7e6      	b.n	9001c9ba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001c9ec:	2000      	movs	r0, #0
9001c9ee:	4770      	bx	lr
9001c9f0:	2001      	movs	r0, #1
9001c9f2:	4770      	bx	lr
9001c9f4:	24024628 	.word	0x24024628
9001c9f8:	24024630 	.word	0x24024630
9001c9fc:	2402462c 	.word	0x2402462c
9001ca00:	24024610 	.word	0x24024610

9001ca04 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001ca04:	4a12      	ldr	r2, [pc, #72]	@ (9001ca50 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001ca06:	8803      	ldrh	r3, [r0, #0]
9001ca08:	8811      	ldrh	r1, [r2, #0]
9001ca0a:	428b      	cmp	r3, r1
9001ca0c:	d20b      	bcs.n	9001ca26 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001ca0e:	4a11      	ldr	r2, [pc, #68]	@ (9001ca54 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001ca10:	6812      	ldr	r2, [r2, #0]
9001ca12:	b112      	cbz	r2, 9001ca1a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001ca14:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001ca18:	b9c0      	cbnz	r0, 9001ca4c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001ca1a:	4a0f      	ldr	r2, [pc, #60]	@ (9001ca58 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001ca1c:	6811      	ldr	r1, [r2, #0]
9001ca1e:	2214      	movs	r2, #20
9001ca20:	4353      	muls	r3, r2
9001ca22:	58c8      	ldr	r0, [r1, r3]
9001ca24:	4770      	bx	lr
9001ca26:	4a0d      	ldr	r2, [pc, #52]	@ (9001ca5c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001ca28:	8812      	ldrh	r2, [r2, #0]
9001ca2a:	440a      	add	r2, r1
9001ca2c:	4293      	cmp	r3, r2
9001ca2e:	da04      	bge.n	9001ca3a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001ca30:	4a08      	ldr	r2, [pc, #32]	@ (9001ca54 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001ca32:	6812      	ldr	r2, [r2, #0]
9001ca34:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001ca38:	4770      	bx	lr
9001ca3a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001ca3e:	4293      	cmp	r3, r2
9001ca40:	d103      	bne.n	9001ca4a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001ca42:	4b07      	ldr	r3, [pc, #28]	@ (9001ca60 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001ca44:	681b      	ldr	r3, [r3, #0]
9001ca46:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001ca48:	4770      	bx	lr
9001ca4a:	2000      	movs	r0, #0
9001ca4c:	4770      	bx	lr
9001ca4e:	bf00      	nop
9001ca50:	24024628 	.word	0x24024628
9001ca54:	2402460c 	.word	0x2402460c
9001ca58:	24024630 	.word	0x24024630
9001ca5c:	2402462c 	.word	0x2402462c
9001ca60:	240245a0 	.word	0x240245a0

9001ca64 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001ca64:	4b24      	ldr	r3, [pc, #144]	@ (9001caf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001ca66:	8802      	ldrh	r2, [r0, #0]
9001ca68:	8818      	ldrh	r0, [r3, #0]
9001ca6a:	4282      	cmp	r2, r0
9001ca6c:	d221      	bcs.n	9001cab2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001ca6e:	4b23      	ldr	r3, [pc, #140]	@ (9001cafc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001ca70:	6819      	ldr	r1, [r3, #0]
9001ca72:	2314      	movs	r3, #20
9001ca74:	fb03 1302 	mla	r3, r3, r2, r1
9001ca78:	6858      	ldr	r0, [r3, #4]
9001ca7a:	2800      	cmp	r0, #0
9001ca7c:	d03a      	beq.n	9001caf4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ca7e:	4920      	ldr	r1, [pc, #128]	@ (9001cb00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001ca80:	6809      	ldr	r1, [r1, #0]
9001ca82:	2900      	cmp	r1, #0
9001ca84:	d036      	beq.n	9001caf4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ca86:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001ca8a:	2900      	cmp	r1, #0
9001ca8c:	d032      	beq.n	9001caf4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ca8e:	891a      	ldrh	r2, [r3, #8]
9001ca90:	8958      	ldrh	r0, [r3, #10]
9001ca92:	4350      	muls	r0, r2
9001ca94:	7c5a      	ldrb	r2, [r3, #17]
9001ca96:	7cdb      	ldrb	r3, [r3, #19]
9001ca98:	0952      	lsrs	r2, r2, #5
9001ca9a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001ca9e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001caa2:	2b0b      	cmp	r3, #11
9001caa4:	bf18      	it	ne
9001caa6:	0040      	lslne	r0, r0, #1
9001caa8:	3003      	adds	r0, #3
9001caaa:	f020 0003 	bic.w	r0, r0, #3
9001caae:	4408      	add	r0, r1
9001cab0:	4770      	bx	lr
9001cab2:	4b14      	ldr	r3, [pc, #80]	@ (9001cb04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001cab4:	881b      	ldrh	r3, [r3, #0]
9001cab6:	4403      	add	r3, r0
9001cab8:	429a      	cmp	r2, r3
9001caba:	da1a      	bge.n	9001caf2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001cabc:	4b12      	ldr	r3, [pc, #72]	@ (9001cb08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001cabe:	1a10      	subs	r0, r2, r0
9001cac0:	210e      	movs	r1, #14
9001cac2:	681b      	ldr	r3, [r3, #0]
9001cac4:	fb01 3000 	mla	r0, r1, r0, r3
9001cac8:	7b03      	ldrb	r3, [r0, #12]
9001caca:	f003 031f 	and.w	r3, r3, #31
9001cace:	2b0b      	cmp	r3, #11
9001cad0:	d10b      	bne.n	9001caea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001cad2:	8903      	ldrh	r3, [r0, #8]
9001cad4:	8940      	ldrh	r0, [r0, #10]
9001cad6:	4358      	muls	r0, r3
9001cad8:	4b09      	ldr	r3, [pc, #36]	@ (9001cb00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001cada:	3003      	adds	r0, #3
9001cadc:	6819      	ldr	r1, [r3, #0]
9001cade:	f020 0303 	bic.w	r3, r0, #3
9001cae2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001cae6:	4418      	add	r0, r3
9001cae8:	4770      	bx	lr
9001caea:	2b0d      	cmp	r3, #13
9001caec:	d101      	bne.n	9001caf2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001caee:	300d      	adds	r0, #13
9001caf0:	4770      	bx	lr
9001caf2:	2000      	movs	r0, #0
9001caf4:	4770      	bx	lr
9001caf6:	bf00      	nop
9001caf8:	24024628 	.word	0x24024628
9001cafc:	24024630 	.word	0x24024630
9001cb00:	2402460c 	.word	0x2402460c
9001cb04:	2402462c 	.word	0x2402462c
9001cb08:	24024610 	.word	0x24024610

9001cb0c <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001cb0c:	4b1f      	ldr	r3, [pc, #124]	@ (9001cb8c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001cb0e:	b510      	push	{r4, lr}
9001cb10:	8802      	ldrh	r2, [r0, #0]
9001cb12:	881b      	ldrh	r3, [r3, #0]
9001cb14:	429a      	cmp	r2, r3
9001cb16:	d21a      	bcs.n	9001cb4e <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001cb18:	4b1d      	ldr	r3, [pc, #116]	@ (9001cb90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001cb1a:	2114      	movs	r1, #20
9001cb1c:	681b      	ldr	r3, [r3, #0]
9001cb1e:	fb01 3102 	mla	r1, r1, r2, r3
9001cb22:	7c4b      	ldrb	r3, [r1, #17]
9001cb24:	0958      	lsrs	r0, r3, #5
9001cb26:	7ccb      	ldrb	r3, [r1, #19]
9001cb28:	491a      	ldr	r1, [pc, #104]	@ (9001cb94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001cb2a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001cb2e:	6809      	ldr	r1, [r1, #0]
9001cb30:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001cb34:	b2d8      	uxtb	r0, r3
9001cb36:	b149      	cbz	r1, 9001cb4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cb38:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001cb3c:	b132      	cbz	r2, 9001cb4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cb3e:	2b0e      	cmp	r3, #14
9001cb40:	d021      	beq.n	9001cb86 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001cb42:	280f      	cmp	r0, #15
9001cb44:	d01d      	beq.n	9001cb82 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001cb46:	2810      	cmp	r0, #16
9001cb48:	bf08      	it	eq
9001cb4a:	2002      	moveq	r0, #2
9001cb4c:	bd10      	pop	{r4, pc}
9001cb4e:	4912      	ldr	r1, [pc, #72]	@ (9001cb98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001cb50:	8809      	ldrh	r1, [r1, #0]
9001cb52:	4419      	add	r1, r3
9001cb54:	428a      	cmp	r2, r1
9001cb56:	da09      	bge.n	9001cb6c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001cb58:	1ad3      	subs	r3, r2, r3
9001cb5a:	4a10      	ldr	r2, [pc, #64]	@ (9001cb9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001cb5c:	210e      	movs	r1, #14
9001cb5e:	6812      	ldr	r2, [r2, #0]
9001cb60:	fb01 2303 	mla	r3, r1, r3, r2
9001cb64:	7b18      	ldrb	r0, [r3, #12]
9001cb66:	f000 001f 	and.w	r0, r0, #31
9001cb6a:	e7ef      	b.n	9001cb4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cb6c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001cb70:	429a      	cmp	r2, r3
9001cb72:	d108      	bne.n	9001cb86 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001cb74:	f7f6 ffba 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
9001cb78:	6803      	ldr	r3, [r0, #0]
9001cb7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001cb7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001cb80:	4718      	bx	r3
9001cb82:	2001      	movs	r0, #1
9001cb84:	e7e2      	b.n	9001cb4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cb86:	2000      	movs	r0, #0
9001cb88:	e7e0      	b.n	9001cb4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cb8a:	bf00      	nop
9001cb8c:	24024628 	.word	0x24024628
9001cb90:	24024630 	.word	0x24024630
9001cb94:	2402460c 	.word	0x2402460c
9001cb98:	2402462c 	.word	0x2402462c
9001cb9c:	24024610 	.word	0x24024610

9001cba0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001cba0:	2010      	movs	r0, #16
9001cba2:	4770      	bx	lr

9001cba4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001cba4:	4b02      	ldr	r3, [pc, #8]	@ (9001cbb0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001cba6:	8818      	ldrh	r0, [r3, #0]
9001cba8:	0040      	lsls	r0, r0, #1
9001cbaa:	b280      	uxth	r0, r0
9001cbac:	4770      	bx	lr
9001cbae:	bf00      	nop
9001cbb0:	24024598 	.word	0x24024598

9001cbb4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001cbb4:	2bff      	cmp	r3, #255	@ 0xff
9001cbb6:	d05e      	beq.n	9001cc76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001cbb8:	2a0b      	cmp	r2, #11
9001cbba:	d058      	beq.n	9001cc6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001cbbc:	d80e      	bhi.n	9001cbdc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001cbbe:	2a03      	cmp	r2, #3
9001cbc0:	d04d      	beq.n	9001cc5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001cbc2:	d804      	bhi.n	9001cbce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001cbc4:	2a01      	cmp	r2, #1
9001cbc6:	d04c      	beq.n	9001cc62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001cbc8:	d94d      	bls.n	9001cc66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001cbca:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001cbcc:	e031      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cbce:	2a09      	cmp	r2, #9
9001cbd0:	d04d      	beq.n	9001cc6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001cbd2:	d84a      	bhi.n	9001cc6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001cbd4:	2a08      	cmp	r2, #8
9001cbd6:	d048      	beq.n	9001cc6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001cbd8:	2300      	movs	r3, #0
9001cbda:	e02a      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cbdc:	2a2f      	cmp	r2, #47	@ 0x2f
9001cbde:	d02c      	beq.n	9001cc3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001cbe0:	d811      	bhi.n	9001cc06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001cbe2:	2a2d      	cmp	r2, #45	@ 0x2d
9001cbe4:	d018      	beq.n	9001cc18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001cbe6:	d831      	bhi.n	9001cc4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001cbe8:	2a2c      	cmp	r2, #44	@ 0x2c
9001cbea:	d1f5      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cbec:	684a      	ldr	r2, [r1, #4]
9001cbee:	7813      	ldrb	r3, [r2, #0]
9001cbf0:	7852      	ldrb	r2, [r2, #1]
9001cbf2:	2a00      	cmp	r2, #0
9001cbf4:	d1f0      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cbf6:	2b01      	cmp	r3, #1
9001cbf8:	d01d      	beq.n	9001cc36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001cbfa:	2b00      	cmp	r3, #0
9001cbfc:	d02d      	beq.n	9001cc5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001cbfe:	2b02      	cmp	r3, #2
9001cc00:	d1ea      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc02:	68c3      	ldr	r3, [r0, #12]
9001cc04:	e015      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc06:	2a31      	cmp	r2, #49	@ 0x31
9001cc08:	d004      	beq.n	9001cc14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001cc0a:	d332      	bcc.n	9001cc72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001cc0c:	2a32      	cmp	r2, #50	@ 0x32
9001cc0e:	d030      	beq.n	9001cc72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001cc10:	2a33      	cmp	r2, #51	@ 0x33
9001cc12:	d1e1      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc14:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001cc16:	e00c      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc18:	684a      	ldr	r2, [r1, #4]
9001cc1a:	7813      	ldrb	r3, [r2, #0]
9001cc1c:	7852      	ldrb	r2, [r2, #1]
9001cc1e:	2a00      	cmp	r2, #0
9001cc20:	d1da      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc22:	2b01      	cmp	r3, #1
9001cc24:	d004      	beq.n	9001cc30 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001cc26:	d30f      	bcc.n	9001cc48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001cc28:	2b02      	cmp	r3, #2
9001cc2a:	d1d5      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc2c:	6943      	ldr	r3, [r0, #20]
9001cc2e:	e000      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc30:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001cc32:	4618      	mov	r0, r3
9001cc34:	4770      	bx	lr
9001cc36:	69c3      	ldr	r3, [r0, #28]
9001cc38:	e7fb      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc3a:	684b      	ldr	r3, [r1, #4]
9001cc3c:	781a      	ldrb	r2, [r3, #0]
9001cc3e:	785b      	ldrb	r3, [r3, #1]
9001cc40:	2b00      	cmp	r3, #0
9001cc42:	d1c9      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc44:	2a00      	cmp	r2, #0
9001cc46:	d1f4      	bne.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc48:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001cc4a:	e7f2      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc4c:	684b      	ldr	r3, [r1, #4]
9001cc4e:	781a      	ldrb	r2, [r3, #0]
9001cc50:	785b      	ldrb	r3, [r3, #1]
9001cc52:	2b00      	cmp	r3, #0
9001cc54:	d1c0      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc56:	2a00      	cmp	r2, #0
9001cc58:	d1eb      	bne.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc5a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001cc5c:	e7e9      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc5e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001cc60:	e7e7      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc62:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001cc64:	e7e5      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc66:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001cc68:	e7e3      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc6a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001cc6c:	e7e1      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc6e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001cc70:	e7df      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc72:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001cc74:	e7dd      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc76:	2a0b      	cmp	r2, #11
9001cc78:	d059      	beq.n	9001cd2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001cc7a:	d80e      	bhi.n	9001cc9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001cc7c:	2a03      	cmp	r2, #3
9001cc7e:	d050      	beq.n	9001cd22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001cc80:	d804      	bhi.n	9001cc8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001cc82:	2a01      	cmp	r2, #1
9001cc84:	d04f      	beq.n	9001cd26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001cc86:	d950      	bls.n	9001cd2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001cc88:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001cc8a:	e7d2      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc8c:	2a09      	cmp	r2, #9
9001cc8e:	d04e      	beq.n	9001cd2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001cc90:	d801      	bhi.n	9001cc96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001cc92:	2a08      	cmp	r2, #8
9001cc94:	d1a0      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc96:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001cc98:	e7cb      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc9a:	2a2f      	cmp	r2, #47	@ 0x2f
9001cc9c:	d02d      	beq.n	9001ccfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001cc9e:	d811      	bhi.n	9001ccc4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001cca0:	2a2d      	cmp	r2, #45	@ 0x2d
9001cca2:	d018      	beq.n	9001ccd6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001cca4:	d833      	bhi.n	9001cd0e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001cca6:	2a2c      	cmp	r2, #44	@ 0x2c
9001cca8:	d196      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ccaa:	684a      	ldr	r2, [r1, #4]
9001ccac:	7813      	ldrb	r3, [r2, #0]
9001ccae:	7852      	ldrb	r2, [r2, #1]
9001ccb0:	2a00      	cmp	r2, #0
9001ccb2:	d191      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ccb4:	2b01      	cmp	r3, #1
9001ccb6:	d01e      	beq.n	9001ccf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001ccb8:	2b00      	cmp	r3, #0
9001ccba:	d030      	beq.n	9001cd1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001ccbc:	2b02      	cmp	r3, #2
9001ccbe:	d18b      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ccc0:	6903      	ldr	r3, [r0, #16]
9001ccc2:	e7b6      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccc4:	2a31      	cmp	r2, #49	@ 0x31
9001ccc6:	d004      	beq.n	9001ccd2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001ccc8:	d333      	bcc.n	9001cd32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001ccca:	2a32      	cmp	r2, #50	@ 0x32
9001cccc:	d031      	beq.n	9001cd32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001ccce:	2a33      	cmp	r2, #51	@ 0x33
9001ccd0:	d182      	bne.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ccd2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001ccd4:	e7ad      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccd6:	684a      	ldr	r2, [r1, #4]
9001ccd8:	7813      	ldrb	r3, [r2, #0]
9001ccda:	7852      	ldrb	r2, [r2, #1]
9001ccdc:	2a00      	cmp	r2, #0
9001ccde:	f47f af7b 	bne.w	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cce2:	2b01      	cmp	r3, #1
9001cce4:	d005      	beq.n	9001ccf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001cce6:	d310      	bcc.n	9001cd0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001cce8:	2b02      	cmp	r3, #2
9001ccea:	f47f af75 	bne.w	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ccee:	6983      	ldr	r3, [r0, #24]
9001ccf0:	e79f      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccf2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001ccf4:	e79d      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccf6:	6a03      	ldr	r3, [r0, #32]
9001ccf8:	e79b      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccfa:	684b      	ldr	r3, [r1, #4]
9001ccfc:	781a      	ldrb	r2, [r3, #0]
9001ccfe:	785b      	ldrb	r3, [r3, #1]
9001cd00:	2b00      	cmp	r3, #0
9001cd02:	f47f af69 	bne.w	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cd06:	2a00      	cmp	r2, #0
9001cd08:	d193      	bne.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cd0a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001cd0c:	e791      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cd0e:	684b      	ldr	r3, [r1, #4]
9001cd10:	781a      	ldrb	r2, [r3, #0]
9001cd12:	785b      	ldrb	r3, [r3, #1]
9001cd14:	2b00      	cmp	r3, #0
9001cd16:	f47f af5f 	bne.w	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cd1a:	2a00      	cmp	r2, #0
9001cd1c:	d189      	bne.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cd1e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001cd20:	e787      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cd22:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001cd24:	e785      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cd26:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001cd28:	e783      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cd2a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001cd2c:	e781      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cd2e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001cd30:	e77f      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cd32:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001cd34:	e77d      	b.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001cd36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cd36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cd3a:	b087      	sub	sp, #28
9001cd3c:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001cd3e:	9205      	str	r2, [sp, #20]
9001cd40:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001cd44:	9101      	str	r1, [sp, #4]
9001cd46:	9202      	str	r2, [sp, #8]
9001cd48:	6841      	ldr	r1, [r0, #4]
9001cd4a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001cd4e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001cd52:	fb01 2404 	mla	r4, r1, r4, r2
9001cd56:	6802      	ldr	r2, [r0, #0]
9001cd58:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cd5c:	f8de 2000 	ldr.w	r2, [lr]
9001cd60:	9203      	str	r2, [sp, #12]
9001cd62:	f8de 2004 	ldr.w	r2, [lr, #4]
9001cd66:	3204      	adds	r2, #4
9001cd68:	9204      	str	r2, [sp, #16]
9001cd6a:	9a02      	ldr	r2, [sp, #8]
9001cd6c:	43d6      	mvns	r6, r2
9001cd6e:	b2f6      	uxtb	r6, r6
9001cd70:	9a01      	ldr	r2, [sp, #4]
9001cd72:	2a00      	cmp	r2, #0
9001cd74:	dc03      	bgt.n	9001cd7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001cd76:	9a05      	ldr	r2, [sp, #20]
9001cd78:	2a00      	cmp	r2, #0
9001cd7a:	f340 8129 	ble.w	9001cfd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001cd7e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001cd80:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001cd84:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001cd88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001cd8a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001cd8e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001cd92:	2b00      	cmp	r3, #0
9001cd94:	dd0e      	ble.n	9001cdb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001cd96:	1408      	asrs	r0, r1, #16
9001cd98:	d405      	bmi.n	9001cda6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cd9a:	4560      	cmp	r0, ip
9001cd9c:	da03      	bge.n	9001cda6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cd9e:	1410      	asrs	r0, r2, #16
9001cda0:	d401      	bmi.n	9001cda6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cda2:	42b8      	cmp	r0, r7
9001cda4:	db07      	blt.n	9001cdb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001cda6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cda8:	3b01      	subs	r3, #1
9001cdaa:	3402      	adds	r4, #2
9001cdac:	4401      	add	r1, r0
9001cdae:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001cdb0:	4402      	add	r2, r0
9001cdb2:	e7ee      	b.n	9001cd92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001cdb4:	d071      	beq.n	9001ce9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cdb6:	1e58      	subs	r0, r3, #1
9001cdb8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001cdba:	fb05 1500 	mla	r5, r5, r0, r1
9001cdbe:	142d      	asrs	r5, r5, #16
9001cdc0:	d45f      	bmi.n	9001ce82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001cdc2:	4565      	cmp	r5, ip
9001cdc4:	da5d      	bge.n	9001ce82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001cdc6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001cdc8:	fb05 2000 	mla	r0, r5, r0, r2
9001cdcc:	1400      	asrs	r0, r0, #16
9001cdce:	d458      	bmi.n	9001ce82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001cdd0:	42b8      	cmp	r0, r7
9001cdd2:	da56      	bge.n	9001ce82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001cdd4:	4699      	mov	r9, r3
9001cdd6:	46a2      	mov	sl, r4
9001cdd8:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001cddc:	f1b9 0f00 	cmp.w	r9, #0
9001cde0:	dd57      	ble.n	9001ce92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001cde2:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001cde6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001cdea:	9803      	ldr	r0, [sp, #12]
9001cdec:	140d      	asrs	r5, r1, #16
9001cdee:	f109 39ff 	add.w	r9, r9, #4294967295
9001cdf2:	fb07 000c 	mla	r0, r7, ip, r0
9001cdf6:	5d40      	ldrb	r0, [r0, r5]
9001cdf8:	9d04      	ldr	r5, [sp, #16]
9001cdfa:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001cdfe:	f8ba 5000 	ldrh.w	r5, [sl]
9001ce02:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001ce06:	122f      	asrs	r7, r5, #8
9001ce08:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001ce0c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ce10:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ce14:	00ed      	lsls	r5, r5, #3
9001ce16:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001ce1a:	fb17 f706 	smulbb	r7, r7, r6
9001ce1e:	b2ed      	uxtb	r5, r5
9001ce20:	fb18 f806 	smulbb	r8, r8, r6
9001ce24:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001ce28:	10c7      	asrs	r7, r0, #3
9001ce2a:	fb15 f506 	smulbb	r5, r5, r6
9001ce2e:	00c0      	lsls	r0, r0, #3
9001ce30:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ce34:	fa1f fc8c 	uxth.w	ip, ip
9001ce38:	b2c0      	uxtb	r0, r0
9001ce3a:	fb07 870b 	mla	r7, r7, fp, r8
9001ce3e:	fb00 500b 	mla	r0, r0, fp, r5
9001ce42:	f10c 0501 	add.w	r5, ip, #1
9001ce46:	b2bf      	uxth	r7, r7
9001ce48:	b280      	uxth	r0, r0
9001ce4a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001ce4e:	f107 0801 	add.w	r8, r7, #1
9001ce52:	1c45      	adds	r5, r0, #1
9001ce54:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001ce58:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ce5c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001ce60:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ce62:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001ce66:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ce6a:	4401      	add	r1, r0
9001ce6c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001ce70:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001ce72:	ea45 0c0c 	orr.w	ip, r5, ip
9001ce76:	4402      	add	r2, r0
9001ce78:	ea4c 0c08 	orr.w	ip, ip, r8
9001ce7c:	f82a cb02 	strh.w	ip, [sl], #2
9001ce80:	e7ac      	b.n	9001cddc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ce82:	f04f 0800 	mov.w	r8, #0
9001ce86:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001ce8a:	eb03 0008 	add.w	r0, r3, r8
9001ce8e:	2800      	cmp	r0, #0
9001ce90:	dc41      	bgt.n	9001cf16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001ce92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ce96:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ce9a:	9b01      	ldr	r3, [sp, #4]
9001ce9c:	2b00      	cmp	r3, #0
9001ce9e:	f340 8097 	ble.w	9001cfd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001cea2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001cea6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cea8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ceac:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ceb0:	eef0 6a62 	vmov.f32	s13, s5
9001ceb4:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ceb8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001cebc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001cec0:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001cec4:	eef0 6a43 	vmov.f32	s13, s6
9001cec8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001cecc:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001ced0:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ced4:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ced8:	ee77 2a62 	vsub.f32	s5, s14, s5
9001cedc:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cee0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cee4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cee8:	ee12 2a90 	vmov	r2, s5
9001ceec:	eef0 2a47 	vmov.f32	s5, s14
9001cef0:	fb92 f3f3 	sdiv	r3, r2, r3
9001cef4:	ee13 2a10 	vmov	r2, s6
9001cef8:	9313      	str	r3, [sp, #76]	@ 0x4c
9001cefa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cefc:	eeb0 3a67 	vmov.f32	s6, s15
9001cf00:	fb92 f3f3 	sdiv	r3, r2, r3
9001cf04:	9314      	str	r3, [sp, #80]	@ 0x50
9001cf06:	9b01      	ldr	r3, [sp, #4]
9001cf08:	9a05      	ldr	r2, [sp, #20]
9001cf0a:	3b01      	subs	r3, #1
9001cf0c:	9301      	str	r3, [sp, #4]
9001cf0e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cf10:	bf08      	it	eq
9001cf12:	4613      	moveq	r3, r2
9001cf14:	e72c      	b.n	9001cd70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001cf16:	140f      	asrs	r7, r1, #16
9001cf18:	d453      	bmi.n	9001cfc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001cf1a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001cf1e:	42bd      	cmp	r5, r7
9001cf20:	dd4f      	ble.n	9001cfc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001cf22:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cf26:	d44c      	bmi.n	9001cfc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001cf28:	f8de 000c 	ldr.w	r0, [lr, #12]
9001cf2c:	4560      	cmp	r0, ip
9001cf2e:	dd48      	ble.n	9001cfc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001cf30:	9803      	ldr	r0, [sp, #12]
9001cf32:	b22d      	sxth	r5, r5
9001cf34:	fb0c 0505 	mla	r5, ip, r5, r0
9001cf38:	5de8      	ldrb	r0, [r5, r7]
9001cf3a:	9d04      	ldr	r5, [sp, #16]
9001cf3c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001cf40:	f06f 0501 	mvn.w	r5, #1
9001cf44:	fb05 fb08 	mul.w	fp, r5, r8
9001cf48:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001cf4c:	f834 500b 	ldrh.w	r5, [r4, fp]
9001cf50:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001cf54:	122f      	asrs	r7, r5, #8
9001cf56:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001cf5a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cf5e:	00ed      	lsls	r5, r5, #3
9001cf60:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001cf64:	fb17 f706 	smulbb	r7, r7, r6
9001cf68:	b2ed      	uxtb	r5, r5
9001cf6a:	fb19 f906 	smulbb	r9, r9, r6
9001cf6e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001cf72:	10c7      	asrs	r7, r0, #3
9001cf74:	fb15 f506 	smulbb	r5, r5, r6
9001cf78:	00c0      	lsls	r0, r0, #3
9001cf7a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001cf7e:	fa1f fc8c 	uxth.w	ip, ip
9001cf82:	b2c0      	uxtb	r0, r0
9001cf84:	fb07 970a 	mla	r7, r7, sl, r9
9001cf88:	fb00 500a 	mla	r0, r0, sl, r5
9001cf8c:	f10c 0501 	add.w	r5, ip, #1
9001cf90:	b2bf      	uxth	r7, r7
9001cf92:	b280      	uxth	r0, r0
9001cf94:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cf98:	f107 0901 	add.w	r9, r7, #1
9001cf9c:	1c45      	adds	r5, r0, #1
9001cf9e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001cfa2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001cfa6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001cfaa:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001cfae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001cfb2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001cfb6:	ea45 0c0c 	orr.w	ip, r5, ip
9001cfba:	ea4c 0c09 	orr.w	ip, ip, r9
9001cfbe:	f824 c00b 	strh.w	ip, [r4, fp]
9001cfc2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cfc4:	f108 38ff 	add.w	r8, r8, #4294967295
9001cfc8:	4401      	add	r1, r0
9001cfca:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001cfcc:	4402      	add	r2, r0
9001cfce:	e75c      	b.n	9001ce8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001cfd0:	b007      	add	sp, #28
9001cfd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cfd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cfd6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cfda:	b085      	sub	sp, #20
9001cfdc:	4693      	mov	fp, r2
9001cfde:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cfe2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001cfe4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001cfe6:	6870      	ldr	r0, [r6, #4]
9001cfe8:	9100      	str	r1, [sp, #0]
9001cfea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001cfee:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001cff2:	fb00 2404 	mla	r4, r0, r4, r2
9001cff6:	6832      	ldr	r2, [r6, #0]
9001cff8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cffc:	682a      	ldr	r2, [r5, #0]
9001cffe:	9201      	str	r2, [sp, #4]
9001d000:	686a      	ldr	r2, [r5, #4]
9001d002:	3204      	adds	r2, #4
9001d004:	9202      	str	r2, [sp, #8]
9001d006:	9a00      	ldr	r2, [sp, #0]
9001d008:	2a00      	cmp	r2, #0
9001d00a:	dc03      	bgt.n	9001d014 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001d00c:	f1bb 0f00 	cmp.w	fp, #0
9001d010:	f340 80a0 	ble.w	9001d154 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001d014:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d016:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d01a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d01e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d020:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d024:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d028:	2b00      	cmp	r3, #0
9001d02a:	dd0c      	ble.n	9001d046 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d02c:	1406      	asrs	r6, r0, #16
9001d02e:	d405      	bmi.n	9001d03c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d030:	454e      	cmp	r6, r9
9001d032:	da03      	bge.n	9001d03c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d034:	1416      	asrs	r6, r2, #16
9001d036:	d401      	bmi.n	9001d03c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001d038:	4546      	cmp	r6, r8
9001d03a:	db05      	blt.n	9001d048 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d03c:	4470      	add	r0, lr
9001d03e:	4462      	add	r2, ip
9001d040:	3b01      	subs	r3, #1
9001d042:	3402      	adds	r4, #2
9001d044:	e7f0      	b.n	9001d028 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d046:	d00f      	beq.n	9001d068 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d048:	1e5e      	subs	r6, r3, #1
9001d04a:	fb0e 0706 	mla	r7, lr, r6, r0
9001d04e:	143f      	asrs	r7, r7, #16
9001d050:	d541      	bpl.n	9001d0d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001d052:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001d056:	4698      	mov	r8, r3
9001d058:	9603      	str	r6, [sp, #12]
9001d05a:	f1b8 0f00 	cmp.w	r8, #0
9001d05e:	dc59      	bgt.n	9001d114 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d060:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d064:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d068:	9b00      	ldr	r3, [sp, #0]
9001d06a:	2b00      	cmp	r3, #0
9001d06c:	dd72      	ble.n	9001d154 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001d06e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d072:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d074:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d078:	eeb0 6a62 	vmov.f32	s12, s5
9001d07c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d080:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d084:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d088:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d08c:	eeb0 6a43 	vmov.f32	s12, s6
9001d090:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d094:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d098:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d09c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d0a0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d0a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d0a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d0ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d0b0:	ee12 2a90 	vmov	r2, s5
9001d0b4:	eef0 2a47 	vmov.f32	s5, s14
9001d0b8:	fb92 fef3 	sdiv	lr, r2, r3
9001d0bc:	ee13 2a10 	vmov	r2, s6
9001d0c0:	eeb0 3a67 	vmov.f32	s6, s15
9001d0c4:	fb92 fcf3 	sdiv	ip, r2, r3
9001d0c8:	9b00      	ldr	r3, [sp, #0]
9001d0ca:	3b01      	subs	r3, #1
9001d0cc:	9300      	str	r3, [sp, #0]
9001d0ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d0d0:	bf08      	it	eq
9001d0d2:	465b      	moveq	r3, fp
9001d0d4:	e797      	b.n	9001d006 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d0d6:	454f      	cmp	r7, r9
9001d0d8:	dabb      	bge.n	9001d052 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d0da:	fb0c 2606 	mla	r6, ip, r6, r2
9001d0de:	1436      	asrs	r6, r6, #16
9001d0e0:	d4b7      	bmi.n	9001d052 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d0e2:	4546      	cmp	r6, r8
9001d0e4:	dab5      	bge.n	9001d052 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d0e6:	461e      	mov	r6, r3
9001d0e8:	46a0      	mov	r8, r4
9001d0ea:	2e00      	cmp	r6, #0
9001d0ec:	ddb8      	ble.n	9001d060 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001d0ee:	1417      	asrs	r7, r2, #16
9001d0f0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001d0f4:	9901      	ldr	r1, [sp, #4]
9001d0f6:	ea4f 4920 	mov.w	r9, r0, asr #16
9001d0fa:	4462      	add	r2, ip
9001d0fc:	4470      	add	r0, lr
9001d0fe:	fb0a 1707 	mla	r7, sl, r7, r1
9001d102:	9902      	ldr	r1, [sp, #8]
9001d104:	3e01      	subs	r6, #1
9001d106:	f817 7009 	ldrb.w	r7, [r7, r9]
9001d10a:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001d10e:	f828 7b02 	strh.w	r7, [r8], #2
9001d112:	e7ea      	b.n	9001d0ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001d114:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d118:	d417      	bmi.n	9001d14a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d11a:	68ae      	ldr	r6, [r5, #8]
9001d11c:	454e      	cmp	r6, r9
9001d11e:	dd14      	ble.n	9001d14a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d120:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001d124:	d411      	bmi.n	9001d14a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d126:	68ef      	ldr	r7, [r5, #12]
9001d128:	4557      	cmp	r7, sl
9001d12a:	dd0e      	ble.n	9001d14a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d12c:	9f01      	ldr	r7, [sp, #4]
9001d12e:	b236      	sxth	r6, r6
9001d130:	f06f 0101 	mvn.w	r1, #1
9001d134:	fb0a 7606 	mla	r6, sl, r6, r7
9001d138:	9f02      	ldr	r7, [sp, #8]
9001d13a:	f816 6009 	ldrb.w	r6, [r6, r9]
9001d13e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001d142:	fb01 f608 	mul.w	r6, r1, r8
9001d146:	9903      	ldr	r1, [sp, #12]
9001d148:	538f      	strh	r7, [r1, r6]
9001d14a:	4470      	add	r0, lr
9001d14c:	4462      	add	r2, ip
9001d14e:	f108 38ff 	add.w	r8, r8, #4294967295
9001d152:	e782      	b.n	9001d05a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d154:	b005      	add	sp, #20
9001d156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d15a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d15a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d15e:	b087      	sub	sp, #28
9001d160:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001d162:	9205      	str	r2, [sp, #20]
9001d164:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d168:	9102      	str	r1, [sp, #8]
9001d16a:	9203      	str	r2, [sp, #12]
9001d16c:	6861      	ldr	r1, [r4, #4]
9001d16e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001d172:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001d176:	fb01 2000 	mla	r0, r1, r0, r2
9001d17a:	6822      	ldr	r2, [r4, #0]
9001d17c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001d180:	9200      	str	r2, [sp, #0]
9001d182:	f8dc 2000 	ldr.w	r2, [ip]
9001d186:	9204      	str	r2, [sp, #16]
9001d188:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001d18c:	3204      	adds	r2, #4
9001d18e:	9201      	str	r2, [sp, #4]
9001d190:	9a03      	ldr	r2, [sp, #12]
9001d192:	43d5      	mvns	r5, r2
9001d194:	b2ed      	uxtb	r5, r5
9001d196:	9a02      	ldr	r2, [sp, #8]
9001d198:	2a00      	cmp	r2, #0
9001d19a:	dc03      	bgt.n	9001d1a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001d19c:	9a05      	ldr	r2, [sp, #20]
9001d19e:	2a00      	cmp	r2, #0
9001d1a0:	f340 812c 	ble.w	9001d3fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d1a4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d1a6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001d1aa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d1ae:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d1b0:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001d1b4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d1b8:	2b00      	cmp	r3, #0
9001d1ba:	dd10      	ble.n	9001d1de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d1bc:	140c      	asrs	r4, r1, #16
9001d1be:	d405      	bmi.n	9001d1cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d1c0:	4574      	cmp	r4, lr
9001d1c2:	da03      	bge.n	9001d1cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d1c4:	1414      	asrs	r4, r2, #16
9001d1c6:	d401      	bmi.n	9001d1cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d1c8:	42bc      	cmp	r4, r7
9001d1ca:	db09      	blt.n	9001d1e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001d1cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d1ce:	3b01      	subs	r3, #1
9001d1d0:	9800      	ldr	r0, [sp, #0]
9001d1d2:	4421      	add	r1, r4
9001d1d4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d1d6:	3002      	adds	r0, #2
9001d1d8:	4422      	add	r2, r4
9001d1da:	9000      	str	r0, [sp, #0]
9001d1dc:	e7ec      	b.n	9001d1b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001d1de:	d071      	beq.n	9001d2c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001d1e0:	1e5c      	subs	r4, r3, #1
9001d1e2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d1e4:	fb06 1604 	mla	r6, r6, r4, r1
9001d1e8:	1436      	asrs	r6, r6, #16
9001d1ea:	d45d      	bmi.n	9001d2a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d1ec:	4576      	cmp	r6, lr
9001d1ee:	da5b      	bge.n	9001d2a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d1f0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001d1f2:	fb06 2404 	mla	r4, r6, r4, r2
9001d1f6:	1424      	asrs	r4, r4, #16
9001d1f8:	d456      	bmi.n	9001d2a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d1fa:	42bc      	cmp	r4, r7
9001d1fc:	da54      	bge.n	9001d2a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d1fe:	4698      	mov	r8, r3
9001d200:	f8dd 9000 	ldr.w	r9, [sp]
9001d204:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001d208:	f1b8 0f00 	cmp.w	r8, #0
9001d20c:	dd54      	ble.n	9001d2b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001d20e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001d212:	1414      	asrs	r4, r2, #16
9001d214:	9804      	ldr	r0, [sp, #16]
9001d216:	140e      	asrs	r6, r1, #16
9001d218:	f108 38ff 	add.w	r8, r8, #4294967295
9001d21c:	fb07 0404 	mla	r4, r7, r4, r0
9001d220:	9801      	ldr	r0, [sp, #4]
9001d222:	f814 e006 	ldrb.w	lr, [r4, r6]
9001d226:	f8b9 4000 	ldrh.w	r4, [r9]
9001d22a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d22e:	1227      	asrs	r7, r4, #8
9001d230:	eb00 0b0e 	add.w	fp, r0, lr
9001d234:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001d238:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d23c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d23e:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001d242:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d246:	4401      	add	r1, r0
9001d248:	fb16 f60a 	smulbb	r6, r6, sl
9001d24c:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001d24e:	fb1b fb0a 	smulbb	fp, fp, sl
9001d252:	fb07 6705 	mla	r7, r7, r5, r6
9001d256:	10e6      	asrs	r6, r4, #3
9001d258:	00e4      	lsls	r4, r4, #3
9001d25a:	4402      	add	r2, r0
9001d25c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d260:	b2bf      	uxth	r7, r7
9001d262:	b2e4      	uxtb	r4, r4
9001d264:	fb06 b605 	mla	r6, r6, r5, fp
9001d268:	fb14 f405 	smulbb	r4, r4, r5
9001d26c:	b2b6      	uxth	r6, r6
9001d26e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001d272:	1c7c      	adds	r4, r7, #1
9001d274:	f106 0b01 	add.w	fp, r6, #1
9001d278:	fa1f fe8e 	uxth.w	lr, lr
9001d27c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001d280:	f10e 0401 	add.w	r4, lr, #1
9001d284:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001d288:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d28c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001d290:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001d294:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001d298:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001d29c:	4327      	orrs	r7, r4
9001d29e:	ea47 070b 	orr.w	r7, r7, fp
9001d2a2:	f829 7b02 	strh.w	r7, [r9], #2
9001d2a6:	e7af      	b.n	9001d208 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001d2a8:	f04f 0e00 	mov.w	lr, #0
9001d2ac:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001d2b0:	eb03 040e 	add.w	r4, r3, lr
9001d2b4:	2c00      	cmp	r4, #0
9001d2b6:	dc43      	bgt.n	9001d340 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001d2b8:	9a00      	ldr	r2, [sp, #0]
9001d2ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d2be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001d2c2:	9300      	str	r3, [sp, #0]
9001d2c4:	9b02      	ldr	r3, [sp, #8]
9001d2c6:	2b00      	cmp	r3, #0
9001d2c8:	f340 8098 	ble.w	9001d3fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d2cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001d2d0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d2d2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d2d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d2da:	eef0 6a62 	vmov.f32	s13, s5
9001d2de:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001d2e2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d2e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d2ea:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001d2ee:	eef0 6a43 	vmov.f32	s13, s6
9001d2f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d2f6:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001d2fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d2fe:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d302:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d306:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d30a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d30e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d312:	ee12 2a90 	vmov	r2, s5
9001d316:	eef0 2a47 	vmov.f32	s5, s14
9001d31a:	fb92 f3f3 	sdiv	r3, r2, r3
9001d31e:	ee13 2a10 	vmov	r2, s6
9001d322:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d324:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d326:	eeb0 3a67 	vmov.f32	s6, s15
9001d32a:	fb92 f3f3 	sdiv	r3, r2, r3
9001d32e:	9314      	str	r3, [sp, #80]	@ 0x50
9001d330:	9b02      	ldr	r3, [sp, #8]
9001d332:	9a05      	ldr	r2, [sp, #20]
9001d334:	3b01      	subs	r3, #1
9001d336:	9302      	str	r3, [sp, #8]
9001d338:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d33a:	bf08      	it	eq
9001d33c:	4613      	moveq	r3, r2
9001d33e:	e72a      	b.n	9001d196 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001d340:	140f      	asrs	r7, r1, #16
9001d342:	d454      	bmi.n	9001d3ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d344:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001d348:	42be      	cmp	r6, r7
9001d34a:	dd50      	ble.n	9001d3ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d34c:	ea5f 4822 	movs.w	r8, r2, asr #16
9001d350:	d44d      	bmi.n	9001d3ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d352:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001d356:	4544      	cmp	r4, r8
9001d358:	dd49      	ble.n	9001d3ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d35a:	9c04      	ldr	r4, [sp, #16]
9001d35c:	b236      	sxth	r6, r6
9001d35e:	f06f 0001 	mvn.w	r0, #1
9001d362:	fb08 4606 	mla	r6, r8, r6, r4
9001d366:	9c01      	ldr	r4, [sp, #4]
9001d368:	fb00 fa0e 	mul.w	sl, r0, lr
9001d36c:	9800      	ldr	r0, [sp, #0]
9001d36e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001d372:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001d376:	eb04 0b08 	add.w	fp, r4, r8
9001d37a:	f830 400a 	ldrh.w	r4, [r0, sl]
9001d37e:	9801      	ldr	r0, [sp, #4]
9001d380:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001d384:	1227      	asrs	r7, r4, #8
9001d386:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d38a:	fb16 f609 	smulbb	r6, r6, r9
9001d38e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d392:	f810 8008 	ldrb.w	r8, [r0, r8]
9001d396:	fb1b fb09 	smulbb	fp, fp, r9
9001d39a:	fb07 6705 	mla	r7, r7, r5, r6
9001d39e:	10e6      	asrs	r6, r4, #3
9001d3a0:	00e4      	lsls	r4, r4, #3
9001d3a2:	9800      	ldr	r0, [sp, #0]
9001d3a4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d3a8:	b2bf      	uxth	r7, r7
9001d3aa:	b2e4      	uxtb	r4, r4
9001d3ac:	fb06 b605 	mla	r6, r6, r5, fp
9001d3b0:	fb14 f405 	smulbb	r4, r4, r5
9001d3b4:	b2b6      	uxth	r6, r6
9001d3b6:	fb08 4809 	mla	r8, r8, r9, r4
9001d3ba:	1c7c      	adds	r4, r7, #1
9001d3bc:	f106 0b01 	add.w	fp, r6, #1
9001d3c0:	fa1f f888 	uxth.w	r8, r8
9001d3c4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001d3c8:	f108 0401 	add.w	r4, r8, #1
9001d3cc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001d3d0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d3d4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001d3d8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001d3dc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001d3e0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001d3e4:	4327      	orrs	r7, r4
9001d3e6:	ea47 070b 	orr.w	r7, r7, fp
9001d3ea:	f820 700a 	strh.w	r7, [r0, sl]
9001d3ee:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d3f0:	f10e 3eff 	add.w	lr, lr, #4294967295
9001d3f4:	4401      	add	r1, r0
9001d3f6:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001d3f8:	4402      	add	r2, r0
9001d3fa:	e759      	b.n	9001d2b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001d3fc:	b007      	add	sp, #28
9001d3fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001d404 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d408:	b085      	sub	sp, #20
9001d40a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d40e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d410:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001d412:	9203      	str	r2, [sp, #12]
9001d414:	6870      	ldr	r0, [r6, #4]
9001d416:	686f      	ldr	r7, [r5, #4]
9001d418:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001d41c:	3704      	adds	r7, #4
9001d41e:	9101      	str	r1, [sp, #4]
9001d420:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d424:	fb00 2404 	mla	r4, r0, r4, r2
9001d428:	6832      	ldr	r2, [r6, #0]
9001d42a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d42e:	682a      	ldr	r2, [r5, #0]
9001d430:	9202      	str	r2, [sp, #8]
9001d432:	9a01      	ldr	r2, [sp, #4]
9001d434:	2a00      	cmp	r2, #0
9001d436:	dc03      	bgt.n	9001d440 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001d438:	9a03      	ldr	r2, [sp, #12]
9001d43a:	2a00      	cmp	r2, #0
9001d43c:	f340 80cc 	ble.w	9001d5d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001d440:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d442:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d446:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d44a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d44c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d450:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d454:	2b00      	cmp	r3, #0
9001d456:	dd0d      	ble.n	9001d474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d458:	1406      	asrs	r6, r0, #16
9001d45a:	d405      	bmi.n	9001d468 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001d45c:	454e      	cmp	r6, r9
9001d45e:	da03      	bge.n	9001d468 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001d460:	1416      	asrs	r6, r2, #16
9001d462:	d401      	bmi.n	9001d468 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001d464:	4546      	cmp	r6, r8
9001d466:	db06      	blt.n	9001d476 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d468:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001d46a:	4460      	add	r0, ip
9001d46c:	3b01      	subs	r3, #1
9001d46e:	3402      	adds	r4, #2
9001d470:	4432      	add	r2, r6
9001d472:	e7ef      	b.n	9001d454 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001d474:	d00f      	beq.n	9001d496 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d476:	1e5e      	subs	r6, r3, #1
9001d478:	fb0c 0e06 	mla	lr, ip, r6, r0
9001d47c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001d480:	d543      	bpl.n	9001d50a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001d482:	4698      	mov	r8, r3
9001d484:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001d488:	f1b8 0f00 	cmp.w	r8, #0
9001d48c:	dc71      	bgt.n	9001d572 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001d48e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d492:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d496:	9b01      	ldr	r3, [sp, #4]
9001d498:	2b00      	cmp	r3, #0
9001d49a:	f340 809d 	ble.w	9001d5d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001d49e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d4a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d4a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d4a8:	eeb0 6a62 	vmov.f32	s12, s5
9001d4ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d4b0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d4b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d4b8:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d4bc:	eeb0 6a43 	vmov.f32	s12, s6
9001d4c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d4c4:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d4c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d4cc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d4d0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d4d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d4d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d4dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d4e0:	ee12 2a90 	vmov	r2, s5
9001d4e4:	eef0 2a47 	vmov.f32	s5, s14
9001d4e8:	fb92 fcf3 	sdiv	ip, r2, r3
9001d4ec:	ee13 2a10 	vmov	r2, s6
9001d4f0:	eeb0 3a67 	vmov.f32	s6, s15
9001d4f4:	fb92 f3f3 	sdiv	r3, r2, r3
9001d4f8:	9312      	str	r3, [sp, #72]	@ 0x48
9001d4fa:	9b01      	ldr	r3, [sp, #4]
9001d4fc:	9a03      	ldr	r2, [sp, #12]
9001d4fe:	3b01      	subs	r3, #1
9001d500:	9301      	str	r3, [sp, #4]
9001d502:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d504:	bf08      	it	eq
9001d506:	4613      	moveq	r3, r2
9001d508:	e793      	b.n	9001d432 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001d50a:	45ce      	cmp	lr, r9
9001d50c:	dab9      	bge.n	9001d482 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d50e:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001d510:	fb01 2606 	mla	r6, r1, r6, r2
9001d514:	1436      	asrs	r6, r6, #16
9001d516:	d4b4      	bmi.n	9001d482 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d518:	4546      	cmp	r6, r8
9001d51a:	dab2      	bge.n	9001d482 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d51c:	4698      	mov	r8, r3
9001d51e:	46a2      	mov	sl, r4
9001d520:	f1b8 0f00 	cmp.w	r8, #0
9001d524:	ddb3      	ble.n	9001d48e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001d526:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d52a:	1416      	asrs	r6, r2, #16
9001d52c:	9902      	ldr	r1, [sp, #8]
9001d52e:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001d532:	f108 38ff 	add.w	r8, r8, #4294967295
9001d536:	4460      	add	r0, ip
9001d538:	fb09 1606 	mla	r6, r9, r6, r1
9001d53c:	4928      	ldr	r1, [pc, #160]	@ (9001d5e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001d53e:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001d542:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d546:	eb07 0b0e 	add.w	fp, r7, lr
9001d54a:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001d54e:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001d552:	00f6      	lsls	r6, r6, #3
9001d554:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001d558:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001d55a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d55e:	440a      	add	r2, r1
9001d560:	ea49 0606 	orr.w	r6, r9, r6
9001d564:	f817 900e 	ldrb.w	r9, [r7, lr]
9001d568:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001d56c:	f82a 6b02 	strh.w	r6, [sl], #2
9001d570:	e7d6      	b.n	9001d520 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d572:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d576:	d429      	bmi.n	9001d5cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001d578:	68ae      	ldr	r6, [r5, #8]
9001d57a:	454e      	cmp	r6, r9
9001d57c:	dd26      	ble.n	9001d5cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001d57e:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001d582:	d423      	bmi.n	9001d5cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001d584:	68e9      	ldr	r1, [r5, #12]
9001d586:	4559      	cmp	r1, fp
9001d588:	dd20      	ble.n	9001d5cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001d58a:	fa0f fe86 	sxth.w	lr, r6
9001d58e:	9902      	ldr	r1, [sp, #8]
9001d590:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001d594:	f06f 0101 	mvn.w	r1, #1
9001d598:	f81e e009 	ldrb.w	lr, [lr, r9]
9001d59c:	fb01 f908 	mul.w	r9, r1, r8
9001d5a0:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001d5a4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d5a8:	eb07 060e 	add.w	r6, r7, lr
9001d5ac:	f896 b002 	ldrb.w	fp, [r6, #2]
9001d5b0:	7876      	ldrb	r6, [r6, #1]
9001d5b2:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001d5b6:	00f6      	lsls	r6, r6, #3
9001d5b8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d5bc:	ea4b 0606 	orr.w	r6, fp, r6
9001d5c0:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001d5c4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001d5c8:	f82a 6009 	strh.w	r6, [sl, r9]
9001d5cc:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001d5ce:	4460      	add	r0, ip
9001d5d0:	f108 38ff 	add.w	r8, r8, #4294967295
9001d5d4:	440a      	add	r2, r1
9001d5d6:	e757      	b.n	9001d488 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d5d8:	b005      	add	sp, #20
9001d5da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d5de:	bf00      	nop
9001d5e0:	fffff800 	.word	0xfffff800

9001d5e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d5e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d5e8:	b087      	sub	sp, #28
9001d5ea:	468b      	mov	fp, r1
9001d5ec:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d5f0:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001d5f2:	9204      	str	r2, [sp, #16]
9001d5f4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d5f8:	6841      	ldr	r1, [r0, #4]
9001d5fa:	9205      	str	r2, [sp, #20]
9001d5fc:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001d600:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001d604:	fb01 2404 	mla	r4, r1, r4, r2
9001d608:	6802      	ldr	r2, [r0, #0]
9001d60a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d60e:	f8dc 2000 	ldr.w	r2, [ip]
9001d612:	9201      	str	r2, [sp, #4]
9001d614:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001d618:	3204      	adds	r2, #4
9001d61a:	9202      	str	r2, [sp, #8]
9001d61c:	f1bb 0f00 	cmp.w	fp, #0
9001d620:	dc03      	bgt.n	9001d62a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001d622:	9a04      	ldr	r2, [sp, #16]
9001d624:	2a00      	cmp	r2, #0
9001d626:	f340 8138 	ble.w	9001d89a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001d62a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d62c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001d630:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d634:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d636:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001d63a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d63e:	2b00      	cmp	r3, #0
9001d640:	dd0e      	ble.n	9001d660 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d642:	1402      	asrs	r2, r0, #16
9001d644:	d405      	bmi.n	9001d652 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d646:	42ba      	cmp	r2, r7
9001d648:	da03      	bge.n	9001d652 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d64a:	140a      	asrs	r2, r1, #16
9001d64c:	d401      	bmi.n	9001d652 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d64e:	42b2      	cmp	r2, r6
9001d650:	db07      	blt.n	9001d662 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d652:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d654:	3b01      	subs	r3, #1
9001d656:	3402      	adds	r4, #2
9001d658:	4410      	add	r0, r2
9001d65a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d65c:	4411      	add	r1, r2
9001d65e:	e7ee      	b.n	9001d63e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001d660:	d019      	beq.n	9001d696 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d662:	1e5a      	subs	r2, r3, #1
9001d664:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d666:	fb05 0502 	mla	r5, r5, r2, r0
9001d66a:	142d      	asrs	r5, r5, #16
9001d66c:	d409      	bmi.n	9001d682 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d66e:	42bd      	cmp	r5, r7
9001d670:	da07      	bge.n	9001d682 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d672:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001d674:	fb05 1202 	mla	r2, r5, r2, r1
9001d678:	1412      	asrs	r2, r2, #16
9001d67a:	d402      	bmi.n	9001d682 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d67c:	42b2      	cmp	r2, r6
9001d67e:	f2c0 80ac 	blt.w	9001d7da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001d682:	f04f 0e00 	mov.w	lr, #0
9001d686:	eb03 020e 	add.w	r2, r3, lr
9001d68a:	2a00      	cmp	r2, #0
9001d68c:	dc3e      	bgt.n	9001d70c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001d68e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d692:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d696:	f1bb 0f00 	cmp.w	fp, #0
9001d69a:	f340 80fe 	ble.w	9001d89a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001d69e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d6a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d6a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d6a8:	f1bb 0b01 	subs.w	fp, fp, #1
9001d6ac:	eeb0 6a62 	vmov.f32	s12, s5
9001d6b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d6b4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d6b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d6bc:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001d6c0:	eeb0 6a43 	vmov.f32	s12, s6
9001d6c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d6c8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001d6cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d6d0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d6d4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d6d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d6dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d6e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d6e4:	ee12 2a90 	vmov	r2, s5
9001d6e8:	eef0 2a47 	vmov.f32	s5, s14
9001d6ec:	fb92 f3f3 	sdiv	r3, r2, r3
9001d6f0:	ee13 2a10 	vmov	r2, s6
9001d6f4:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d6f6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d6f8:	eeb0 3a67 	vmov.f32	s6, s15
9001d6fc:	fb92 f3f3 	sdiv	r3, r2, r3
9001d700:	9a04      	ldr	r2, [sp, #16]
9001d702:	9314      	str	r3, [sp, #80]	@ 0x50
9001d704:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d706:	bf08      	it	eq
9001d708:	4613      	moveq	r3, r2
9001d70a:	e787      	b.n	9001d61c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d70c:	1406      	asrs	r6, r0, #16
9001d70e:	d45d      	bmi.n	9001d7cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d710:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001d714:	42b5      	cmp	r5, r6
9001d716:	dd59      	ble.n	9001d7cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d718:	140f      	asrs	r7, r1, #16
9001d71a:	d457      	bmi.n	9001d7cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d71c:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001d720:	42ba      	cmp	r2, r7
9001d722:	dd53      	ble.n	9001d7cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d724:	9a01      	ldr	r2, [sp, #4]
9001d726:	b22d      	sxth	r5, r5
9001d728:	fb07 2505 	mla	r5, r7, r5, r2
9001d72c:	5daa      	ldrb	r2, [r5, r6]
9001d72e:	9d02      	ldr	r5, [sp, #8]
9001d730:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001d734:	0e2e      	lsrs	r6, r5, #24
9001d736:	d049      	beq.n	9001d7cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d738:	f06f 0201 	mvn.w	r2, #1
9001d73c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001d740:	fb02 f20e 	mul.w	r2, r2, lr
9001d744:	f834 8002 	ldrh.w	r8, [r4, r2]
9001d748:	9203      	str	r2, [sp, #12]
9001d74a:	9a05      	ldr	r2, [sp, #20]
9001d74c:	ea4f 2728 	mov.w	r7, r8, asr #8
9001d750:	4356      	muls	r6, r2
9001d752:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d756:	1c72      	adds	r2, r6, #1
9001d758:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001d75c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d760:	b2ed      	uxtb	r5, r5
9001d762:	1212      	asrs	r2, r2, #8
9001d764:	fa1f f982 	uxth.w	r9, r2
9001d768:	43d2      	mvns	r2, r2
9001d76a:	fb16 f609 	smulbb	r6, r6, r9
9001d76e:	b2d2      	uxtb	r2, r2
9001d770:	fb15 f509 	smulbb	r5, r5, r9
9001d774:	fb07 6702 	mla	r7, r7, r2, r6
9001d778:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001d77c:	fb1a fa09 	smulbb	sl, sl, r9
9001d780:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d784:	b2bf      	uxth	r7, r7
9001d786:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d78a:	fa5f f888 	uxtb.w	r8, r8
9001d78e:	fb06 a602 	mla	r6, r6, r2, sl
9001d792:	fb08 5502 	mla	r5, r8, r2, r5
9001d796:	1c7a      	adds	r2, r7, #1
9001d798:	b2b6      	uxth	r6, r6
9001d79a:	b2ad      	uxth	r5, r5
9001d79c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d7a0:	9a03      	ldr	r2, [sp, #12]
9001d7a2:	f105 0a01 	add.w	sl, r5, #1
9001d7a6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d7aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d7ae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d7b2:	ea4a 0707 	orr.w	r7, sl, r7
9001d7b6:	f106 0a01 	add.w	sl, r6, #1
9001d7ba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d7be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d7c2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d7c6:	ea47 070a 	orr.w	r7, r7, sl
9001d7ca:	52a7      	strh	r7, [r4, r2]
9001d7cc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d7ce:	f10e 3eff 	add.w	lr, lr, #4294967295
9001d7d2:	4410      	add	r0, r2
9001d7d4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d7d6:	4411      	add	r1, r2
9001d7d8:	e755      	b.n	9001d686 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d7da:	f04f 0800 	mov.w	r8, #0
9001d7de:	eba3 0208 	sub.w	r2, r3, r8
9001d7e2:	2a00      	cmp	r2, #0
9001d7e4:	f77f af53 	ble.w	9001d68e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001d7e8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001d7ec:	140a      	asrs	r2, r1, #16
9001d7ee:	9f01      	ldr	r7, [sp, #4]
9001d7f0:	1405      	asrs	r5, r0, #16
9001d7f2:	fb06 7202 	mla	r2, r6, r2, r7
9001d7f6:	5d52      	ldrb	r2, [r2, r5]
9001d7f8:	9d02      	ldr	r5, [sp, #8]
9001d7fa:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001d7fe:	0e2e      	lsrs	r6, r5, #24
9001d800:	d044      	beq.n	9001d88c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001d802:	9a05      	ldr	r2, [sp, #20]
9001d804:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001d808:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001d80c:	4356      	muls	r6, r2
9001d80e:	ea4f 272e 	mov.w	r7, lr, asr #8
9001d812:	1c72      	adds	r2, r6, #1
9001d814:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d818:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001d81c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d820:	b2ed      	uxtb	r5, r5
9001d822:	1212      	asrs	r2, r2, #8
9001d824:	fa1f f982 	uxth.w	r9, r2
9001d828:	43d2      	mvns	r2, r2
9001d82a:	fb16 f609 	smulbb	r6, r6, r9
9001d82e:	b2d2      	uxtb	r2, r2
9001d830:	fb15 f509 	smulbb	r5, r5, r9
9001d834:	fb07 6702 	mla	r7, r7, r2, r6
9001d838:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d83c:	fb1a fa09 	smulbb	sl, sl, r9
9001d840:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d844:	b2bf      	uxth	r7, r7
9001d846:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d84a:	fa5f fe8e 	uxtb.w	lr, lr
9001d84e:	fb06 a602 	mla	r6, r6, r2, sl
9001d852:	fb0e 5502 	mla	r5, lr, r2, r5
9001d856:	1c7a      	adds	r2, r7, #1
9001d858:	b2b6      	uxth	r6, r6
9001d85a:	b2ad      	uxth	r5, r5
9001d85c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d860:	f105 0a01 	add.w	sl, r5, #1
9001d864:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d868:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d86c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d870:	ea4a 0707 	orr.w	r7, sl, r7
9001d874:	f106 0a01 	add.w	sl, r6, #1
9001d878:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d87c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d880:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d884:	ea47 070a 	orr.w	r7, r7, sl
9001d888:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001d88c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d88e:	f108 0801 	add.w	r8, r8, #1
9001d892:	4410      	add	r0, r2
9001d894:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d896:	4411      	add	r1, r2
9001d898:	e7a1      	b.n	9001d7de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001d89a:	b007      	add	sp, #28
9001d89c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d8a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d8a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d8a4:	b085      	sub	sp, #20
9001d8a6:	468b      	mov	fp, r1
9001d8a8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d8ac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d8ae:	9203      	str	r2, [sp, #12]
9001d8b0:	6841      	ldr	r1, [r0, #4]
9001d8b2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001d8b6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d8ba:	fb01 2404 	mla	r4, r1, r4, r2
9001d8be:	6802      	ldr	r2, [r0, #0]
9001d8c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d8c4:	f8de 2000 	ldr.w	r2, [lr]
9001d8c8:	9200      	str	r2, [sp, #0]
9001d8ca:	f8de 2004 	ldr.w	r2, [lr, #4]
9001d8ce:	3204      	adds	r2, #4
9001d8d0:	9201      	str	r2, [sp, #4]
9001d8d2:	f1bb 0f00 	cmp.w	fp, #0
9001d8d6:	dc03      	bgt.n	9001d8e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001d8d8:	9a03      	ldr	r2, [sp, #12]
9001d8da:	2a00      	cmp	r2, #0
9001d8dc:	f340 8153 	ble.w	9001db86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001d8e0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d8e2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001d8e6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d8ea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d8ec:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001d8f0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d8f4:	2b00      	cmp	r3, #0
9001d8f6:	dd0e      	ble.n	9001d916 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d8f8:	1408      	asrs	r0, r1, #16
9001d8fa:	d405      	bmi.n	9001d908 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d8fc:	42b8      	cmp	r0, r7
9001d8fe:	da03      	bge.n	9001d908 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d900:	1410      	asrs	r0, r2, #16
9001d902:	d401      	bmi.n	9001d908 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d904:	42b0      	cmp	r0, r6
9001d906:	db07      	blt.n	9001d918 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001d908:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d90a:	3b01      	subs	r3, #1
9001d90c:	3402      	adds	r4, #2
9001d90e:	4401      	add	r1, r0
9001d910:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d912:	4402      	add	r2, r0
9001d914:	e7ee      	b.n	9001d8f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001d916:	d017      	beq.n	9001d948 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001d918:	1e58      	subs	r0, r3, #1
9001d91a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001d91c:	fb05 1500 	mla	r5, r5, r0, r1
9001d920:	142d      	asrs	r5, r5, #16
9001d922:	d409      	bmi.n	9001d938 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d924:	42bd      	cmp	r5, r7
9001d926:	da07      	bge.n	9001d938 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d928:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001d92a:	fb05 2000 	mla	r0, r5, r0, r2
9001d92e:	1400      	asrs	r0, r0, #16
9001d930:	d402      	bmi.n	9001d938 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d932:	42b0      	cmp	r0, r6
9001d934:	f2c0 80bc 	blt.w	9001dab0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001d938:	2600      	movs	r6, #0
9001d93a:	1998      	adds	r0, r3, r6
9001d93c:	2800      	cmp	r0, #0
9001d93e:	dc3e      	bgt.n	9001d9be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001d940:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d944:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d948:	f1bb 0f00 	cmp.w	fp, #0
9001d94c:	f340 811b 	ble.w	9001db86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001d950:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d954:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d956:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d95a:	f1bb 0b01 	subs.w	fp, fp, #1
9001d95e:	eeb0 6a62 	vmov.f32	s12, s5
9001d962:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d966:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d96a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d96e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d972:	eeb0 6a43 	vmov.f32	s12, s6
9001d976:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d97a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d97e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d982:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d986:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d98a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d98e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d992:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d996:	ee12 2a90 	vmov	r2, s5
9001d99a:	eef0 2a47 	vmov.f32	s5, s14
9001d99e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d9a2:	ee13 2a10 	vmov	r2, s6
9001d9a6:	9311      	str	r3, [sp, #68]	@ 0x44
9001d9a8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d9aa:	eeb0 3a67 	vmov.f32	s6, s15
9001d9ae:	fb92 f3f3 	sdiv	r3, r2, r3
9001d9b2:	9a03      	ldr	r2, [sp, #12]
9001d9b4:	9312      	str	r3, [sp, #72]	@ 0x48
9001d9b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d9b8:	bf08      	it	eq
9001d9ba:	4613      	moveq	r3, r2
9001d9bc:	e789      	b.n	9001d8d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001d9be:	140f      	asrs	r7, r1, #16
9001d9c0:	d426      	bmi.n	9001da10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d9c2:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d9c6:	42bd      	cmp	r5, r7
9001d9c8:	dd22      	ble.n	9001da10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d9ca:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d9ce:	d41f      	bmi.n	9001da10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d9d0:	f8de 000c 	ldr.w	r0, [lr, #12]
9001d9d4:	4560      	cmp	r0, ip
9001d9d6:	dd1b      	ble.n	9001da10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d9d8:	9800      	ldr	r0, [sp, #0]
9001d9da:	b22d      	sxth	r5, r5
9001d9dc:	fb0c 0505 	mla	r5, ip, r5, r0
9001d9e0:	5de8      	ldrb	r0, [r5, r7]
9001d9e2:	9d01      	ldr	r5, [sp, #4]
9001d9e4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001d9e8:	0e07      	lsrs	r7, r0, #24
9001d9ea:	2fff      	cmp	r7, #255	@ 0xff
9001d9ec:	d116      	bne.n	9001da1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d9ee:	f06f 0501 	mvn.w	r5, #1
9001d9f2:	fb05 f706 	mul.w	r7, r5, r6
9001d9f6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001d9fa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001d9fe:	0945      	lsrs	r5, r0, #5
9001da00:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001da04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001da08:	ea4c 0505 	orr.w	r5, ip, r5
9001da0c:	4305      	orrs	r5, r0
9001da0e:	53e5      	strh	r5, [r4, r7]
9001da10:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001da12:	3e01      	subs	r6, #1
9001da14:	4401      	add	r1, r0
9001da16:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001da18:	4402      	add	r2, r0
9001da1a:	e78e      	b.n	9001d93a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001da1c:	b2fd      	uxtb	r5, r7
9001da1e:	2f00      	cmp	r7, #0
9001da20:	d0f6      	beq.n	9001da10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001da22:	f06f 0701 	mvn.w	r7, #1
9001da26:	fa1f f985 	uxth.w	r9, r5
9001da2a:	43ed      	mvns	r5, r5
9001da2c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001da30:	4377      	muls	r7, r6
9001da32:	fb1a fa09 	smulbb	sl, sl, r9
9001da36:	b2ed      	uxtb	r5, r5
9001da38:	f834 8007 	ldrh.w	r8, [r4, r7]
9001da3c:	9702      	str	r7, [sp, #8]
9001da3e:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001da42:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001da46:	fb17 f709 	smulbb	r7, r7, r9
9001da4a:	b2c0      	uxtb	r0, r0
9001da4c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001da50:	fb10 f009 	smulbb	r0, r0, r9
9001da54:	fb0c 7c05 	mla	ip, ip, r5, r7
9001da58:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001da5c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001da60:	fa1f fc8c 	uxth.w	ip, ip
9001da64:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001da68:	fa5f f888 	uxtb.w	r8, r8
9001da6c:	fb07 a705 	mla	r7, r7, r5, sl
9001da70:	fb08 0005 	mla	r0, r8, r5, r0
9001da74:	f10c 0501 	add.w	r5, ip, #1
9001da78:	b2bf      	uxth	r7, r7
9001da7a:	b280      	uxth	r0, r0
9001da7c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001da80:	f100 0a01 	add.w	sl, r0, #1
9001da84:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001da88:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001da8c:	9802      	ldr	r0, [sp, #8]
9001da8e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001da92:	ea4a 0c0c 	orr.w	ip, sl, ip
9001da96:	f107 0a01 	add.w	sl, r7, #1
9001da9a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001da9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001daa2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001daa6:	ea4c 0c0a 	orr.w	ip, ip, sl
9001daaa:	f824 c000 	strh.w	ip, [r4, r0]
9001daae:	e7af      	b.n	9001da10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001dab0:	f04f 0800 	mov.w	r8, #0
9001dab4:	eba3 0008 	sub.w	r0, r3, r8
9001dab8:	2800      	cmp	r0, #0
9001daba:	f77f af41 	ble.w	9001d940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001dabe:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001dac2:	1410      	asrs	r0, r2, #16
9001dac4:	9f00      	ldr	r7, [sp, #0]
9001dac6:	140d      	asrs	r5, r1, #16
9001dac8:	fb06 7000 	mla	r0, r6, r0, r7
9001dacc:	5d40      	ldrb	r0, [r0, r5]
9001dace:	9d01      	ldr	r5, [sp, #4]
9001dad0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001dad4:	0e2e      	lsrs	r6, r5, #24
9001dad6:	2eff      	cmp	r6, #255	@ 0xff
9001dad8:	d112      	bne.n	9001db00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001dada:	482c      	ldr	r0, [pc, #176]	@ (9001db8c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001dadc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001dae0:	0968      	lsrs	r0, r5, #5
9001dae2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001dae6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001daea:	4330      	orrs	r0, r6
9001daec:	4328      	orrs	r0, r5
9001daee:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001daf2:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001daf4:	f108 0801 	add.w	r8, r8, #1
9001daf8:	4401      	add	r1, r0
9001dafa:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001dafc:	4402      	add	r2, r0
9001dafe:	e7d9      	b.n	9001dab4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001db00:	b2f0      	uxtb	r0, r6
9001db02:	2e00      	cmp	r6, #0
9001db04:	d0f5      	beq.n	9001daf2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001db06:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001db0a:	fa1f f980 	uxth.w	r9, r0
9001db0e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001db12:	43c0      	mvns	r0, r0
9001db14:	ea4f 272c 	mov.w	r7, ip, asr #8
9001db18:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001db1c:	fb16 f609 	smulbb	r6, r6, r9
9001db20:	b2c0      	uxtb	r0, r0
9001db22:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001db26:	b2ed      	uxtb	r5, r5
9001db28:	fb1a fa09 	smulbb	sl, sl, r9
9001db2c:	fb07 6700 	mla	r7, r7, r0, r6
9001db30:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001db34:	fb15 f509 	smulbb	r5, r5, r9
9001db38:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001db3c:	b2bf      	uxth	r7, r7
9001db3e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001db42:	fa5f fc8c 	uxtb.w	ip, ip
9001db46:	fb06 a600 	mla	r6, r6, r0, sl
9001db4a:	fb0c 5500 	mla	r5, ip, r0, r5
9001db4e:	1c78      	adds	r0, r7, #1
9001db50:	b2b6      	uxth	r6, r6
9001db52:	b2ad      	uxth	r5, r5
9001db54:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001db58:	f105 0a01 	add.w	sl, r5, #1
9001db5c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001db60:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001db64:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001db68:	ea4a 0707 	orr.w	r7, sl, r7
9001db6c:	f106 0a01 	add.w	sl, r6, #1
9001db70:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001db74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001db78:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001db7c:	ea47 070a 	orr.w	r7, r7, sl
9001db80:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001db84:	e7b5      	b.n	9001daf2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001db86:	b005      	add	sp, #20
9001db88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001db8c:	fffff800 	.word	0xfffff800

9001db90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001db90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001db94:	b087      	sub	sp, #28
9001db96:	468b      	mov	fp, r1
9001db98:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001db9c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001db9e:	9204      	str	r2, [sp, #16]
9001dba0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001dba4:	6861      	ldr	r1, [r4, #4]
9001dba6:	9205      	str	r2, [sp, #20]
9001dba8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001dbac:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001dbb0:	fb01 2000 	mla	r0, r1, r0, r2
9001dbb4:	6822      	ldr	r2, [r4, #0]
9001dbb6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001dbba:	f8de 2000 	ldr.w	r2, [lr]
9001dbbe:	9201      	str	r2, [sp, #4]
9001dbc0:	f8de 2004 	ldr.w	r2, [lr, #4]
9001dbc4:	9202      	str	r2, [sp, #8]
9001dbc6:	f1bb 0f00 	cmp.w	fp, #0
9001dbca:	dc03      	bgt.n	9001dbd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001dbcc:	9a04      	ldr	r2, [sp, #16]
9001dbce:	2a00      	cmp	r2, #0
9001dbd0:	f340 8142 	ble.w	9001de58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001dbd4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001dbd6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001dbda:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001dbde:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001dbe0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001dbe4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001dbe8:	2b00      	cmp	r3, #0
9001dbea:	dd0e      	ble.n	9001dc0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001dbec:	140c      	asrs	r4, r1, #16
9001dbee:	d405      	bmi.n	9001dbfc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001dbf0:	42bc      	cmp	r4, r7
9001dbf2:	da03      	bge.n	9001dbfc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001dbf4:	1414      	asrs	r4, r2, #16
9001dbf6:	d401      	bmi.n	9001dbfc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001dbf8:	42b4      	cmp	r4, r6
9001dbfa:	db07      	blt.n	9001dc0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001dbfc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001dbfe:	3b01      	subs	r3, #1
9001dc00:	3002      	adds	r0, #2
9001dc02:	4421      	add	r1, r4
9001dc04:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001dc06:	4422      	add	r2, r4
9001dc08:	e7ee      	b.n	9001dbe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001dc0a:	d019      	beq.n	9001dc40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001dc0c:	1e5c      	subs	r4, r3, #1
9001dc0e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001dc10:	fb05 1504 	mla	r5, r5, r4, r1
9001dc14:	142d      	asrs	r5, r5, #16
9001dc16:	d409      	bmi.n	9001dc2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001dc18:	42bd      	cmp	r5, r7
9001dc1a:	da07      	bge.n	9001dc2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001dc1c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001dc1e:	fb05 2404 	mla	r4, r5, r4, r2
9001dc22:	1424      	asrs	r4, r4, #16
9001dc24:	d402      	bmi.n	9001dc2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001dc26:	42b4      	cmp	r4, r6
9001dc28:	f2c0 80b1 	blt.w	9001dd8e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001dc2c:	f04f 0800 	mov.w	r8, #0
9001dc30:	eb03 0408 	add.w	r4, r3, r8
9001dc34:	2c00      	cmp	r4, #0
9001dc36:	dc3e      	bgt.n	9001dcb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001dc38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001dc3c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001dc40:	f1bb 0f00 	cmp.w	fp, #0
9001dc44:	f340 8108 	ble.w	9001de58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001dc48:	ee30 0a04 	vadd.f32	s0, s0, s8
9001dc4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dc4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001dc52:	f1bb 0b01 	subs.w	fp, fp, #1
9001dc56:	eeb0 6a62 	vmov.f32	s12, s5
9001dc5a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001dc5e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001dc62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dc66:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001dc6a:	eeb0 6a43 	vmov.f32	s12, s6
9001dc6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dc72:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001dc76:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001dc7a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001dc7e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001dc82:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001dc86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001dc8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001dc8e:	ee12 2a90 	vmov	r2, s5
9001dc92:	eef0 2a47 	vmov.f32	s5, s14
9001dc96:	fb92 f3f3 	sdiv	r3, r2, r3
9001dc9a:	ee13 2a10 	vmov	r2, s6
9001dc9e:	9313      	str	r3, [sp, #76]	@ 0x4c
9001dca0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dca2:	eeb0 3a67 	vmov.f32	s6, s15
9001dca6:	fb92 f3f3 	sdiv	r3, r2, r3
9001dcaa:	9a04      	ldr	r2, [sp, #16]
9001dcac:	9314      	str	r3, [sp, #80]	@ 0x50
9001dcae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dcb0:	bf08      	it	eq
9001dcb2:	4613      	moveq	r3, r2
9001dcb4:	e787      	b.n	9001dbc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001dcb6:	140e      	asrs	r6, r1, #16
9001dcb8:	d462      	bmi.n	9001dd80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dcba:	f8de 5008 	ldr.w	r5, [lr, #8]
9001dcbe:	42b5      	cmp	r5, r6
9001dcc0:	dd5e      	ble.n	9001dd80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dcc2:	1417      	asrs	r7, r2, #16
9001dcc4:	d45c      	bmi.n	9001dd80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dcc6:	f8de 400c 	ldr.w	r4, [lr, #12]
9001dcca:	42bc      	cmp	r4, r7
9001dccc:	dd58      	ble.n	9001dd80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dcce:	b22d      	sxth	r5, r5
9001dcd0:	9c02      	ldr	r4, [sp, #8]
9001dcd2:	fb07 6505 	mla	r5, r7, r5, r6
9001dcd6:	5d66      	ldrb	r6, [r4, r5]
9001dcd8:	2e00      	cmp	r6, #0
9001dcda:	d051      	beq.n	9001dd80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dcdc:	9c01      	ldr	r4, [sp, #4]
9001dcde:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001dce2:	f06f 0401 	mvn.w	r4, #1
9001dce6:	fb04 f408 	mul.w	r4, r4, r8
9001dcea:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001dcee:	5b05      	ldrh	r5, [r0, r4]
9001dcf0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001dcf4:	9403      	str	r4, [sp, #12]
9001dcf6:	9c05      	ldr	r4, [sp, #20]
9001dcf8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001dcfc:	4366      	muls	r6, r4
9001dcfe:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001dd02:	1c74      	adds	r4, r6, #1
9001dd04:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001dd08:	122e      	asrs	r6, r5, #8
9001dd0a:	1224      	asrs	r4, r4, #8
9001dd0c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001dd10:	00ed      	lsls	r5, r5, #3
9001dd12:	b2a7      	uxth	r7, r4
9001dd14:	43e4      	mvns	r4, r4
9001dd16:	b2ed      	uxtb	r5, r5
9001dd18:	b2e4      	uxtb	r4, r4
9001dd1a:	fb16 f604 	smulbb	r6, r6, r4
9001dd1e:	fb15 f504 	smulbb	r5, r5, r4
9001dd22:	fb0c 6c07 	mla	ip, ip, r7, r6
9001dd26:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001dd2a:	fb1a fa04 	smulbb	sl, sl, r4
9001dd2e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001dd32:	fa1f fc8c 	uxth.w	ip, ip
9001dd36:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001dd3a:	fa5f f989 	uxtb.w	r9, r9
9001dd3e:	fb06 a607 	mla	r6, r6, r7, sl
9001dd42:	f10c 0401 	add.w	r4, ip, #1
9001dd46:	fb09 5507 	mla	r5, r9, r7, r5
9001dd4a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001dd4e:	9c03      	ldr	r4, [sp, #12]
9001dd50:	b2ad      	uxth	r5, r5
9001dd52:	b2b6      	uxth	r6, r6
9001dd54:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001dd58:	f105 0a01 	add.w	sl, r5, #1
9001dd5c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001dd60:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001dd64:	ea4a 0c0c 	orr.w	ip, sl, ip
9001dd68:	f106 0a01 	add.w	sl, r6, #1
9001dd6c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001dd70:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dd74:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001dd78:	ea4c 0c0a 	orr.w	ip, ip, sl
9001dd7c:	f820 c004 	strh.w	ip, [r0, r4]
9001dd80:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001dd82:	f108 38ff 	add.w	r8, r8, #4294967295
9001dd86:	4421      	add	r1, r4
9001dd88:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001dd8a:	4422      	add	r2, r4
9001dd8c:	e750      	b.n	9001dc30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001dd8e:	f04f 0900 	mov.w	r9, #0
9001dd92:	eba3 0409 	sub.w	r4, r3, r9
9001dd96:	2c00      	cmp	r4, #0
9001dd98:	f77f af4e 	ble.w	9001dc38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001dd9c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001dda0:	140d      	asrs	r5, r1, #16
9001dda2:	1414      	asrs	r4, r2, #16
9001dda4:	fb06 5404 	mla	r4, r6, r4, r5
9001dda8:	9d02      	ldr	r5, [sp, #8]
9001ddaa:	5d2e      	ldrb	r6, [r5, r4]
9001ddac:	2e00      	cmp	r6, #0
9001ddae:	d04c      	beq.n	9001de4a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001ddb0:	9d01      	ldr	r5, [sp, #4]
9001ddb2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001ddb6:	9c05      	ldr	r4, [sp, #20]
9001ddb8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001ddbc:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001ddc0:	4366      	muls	r6, r4
9001ddc2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001ddc6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ddca:	1c74      	adds	r4, r6, #1
9001ddcc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001ddd0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001ddd4:	122e      	asrs	r6, r5, #8
9001ddd6:	1224      	asrs	r4, r4, #8
9001ddd8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001dddc:	00ed      	lsls	r5, r5, #3
9001ddde:	b2a7      	uxth	r7, r4
9001dde0:	43e4      	mvns	r4, r4
9001dde2:	b2ed      	uxtb	r5, r5
9001dde4:	b2e4      	uxtb	r4, r4
9001dde6:	fb16 f604 	smulbb	r6, r6, r4
9001ddea:	fb15 f504 	smulbb	r5, r5, r4
9001ddee:	fb0c 6c07 	mla	ip, ip, r7, r6
9001ddf2:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001ddf6:	fb1a fa04 	smulbb	sl, sl, r4
9001ddfa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ddfe:	fa1f fc8c 	uxth.w	ip, ip
9001de02:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001de06:	fa5f f888 	uxtb.w	r8, r8
9001de0a:	fb06 a607 	mla	r6, r6, r7, sl
9001de0e:	f10c 0401 	add.w	r4, ip, #1
9001de12:	fb08 5507 	mla	r5, r8, r7, r5
9001de16:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001de1a:	b2ad      	uxth	r5, r5
9001de1c:	b2b6      	uxth	r6, r6
9001de1e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001de22:	f105 0a01 	add.w	sl, r5, #1
9001de26:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001de2a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001de2e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001de32:	f106 0a01 	add.w	sl, r6, #1
9001de36:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001de3a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001de3e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001de42:	ea4c 0c0a 	orr.w	ip, ip, sl
9001de46:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001de4a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001de4c:	f109 0901 	add.w	r9, r9, #1
9001de50:	4421      	add	r1, r4
9001de52:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001de54:	4422      	add	r2, r4
9001de56:	e79c      	b.n	9001dd92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001de58:	b007      	add	sp, #28
9001de5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001de5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001de5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001de62:	b085      	sub	sp, #20
9001de64:	468b      	mov	fp, r1
9001de66:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001de6a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001de6c:	9203      	str	r2, [sp, #12]
9001de6e:	6861      	ldr	r1, [r4, #4]
9001de70:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001de74:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001de78:	fb01 2000 	mla	r0, r1, r0, r2
9001de7c:	6822      	ldr	r2, [r4, #0]
9001de7e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001de82:	f8d8 2000 	ldr.w	r2, [r8]
9001de86:	9200      	str	r2, [sp, #0]
9001de88:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001de8c:	9201      	str	r2, [sp, #4]
9001de8e:	f1bb 0f00 	cmp.w	fp, #0
9001de92:	dc03      	bgt.n	9001de9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001de94:	9a03      	ldr	r2, [sp, #12]
9001de96:	2a00      	cmp	r2, #0
9001de98:	f340 8146 	ble.w	9001e128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001de9c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001de9e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001dea2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001dea6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001dea8:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001deac:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001deb0:	2b00      	cmp	r3, #0
9001deb2:	dd0e      	ble.n	9001ded2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001deb4:	140c      	asrs	r4, r1, #16
9001deb6:	d405      	bmi.n	9001dec4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001deb8:	42bc      	cmp	r4, r7
9001deba:	da03      	bge.n	9001dec4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001debc:	1414      	asrs	r4, r2, #16
9001debe:	d401      	bmi.n	9001dec4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001dec0:	42b4      	cmp	r4, r6
9001dec2:	db07      	blt.n	9001ded4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001dec4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001dec6:	3b01      	subs	r3, #1
9001dec8:	3002      	adds	r0, #2
9001deca:	4421      	add	r1, r4
9001decc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001dece:	4422      	add	r2, r4
9001ded0:	e7ee      	b.n	9001deb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ded2:	d017      	beq.n	9001df04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ded4:	1e5c      	subs	r4, r3, #1
9001ded6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001ded8:	fb05 1504 	mla	r5, r5, r4, r1
9001dedc:	142d      	asrs	r5, r5, #16
9001dede:	d409      	bmi.n	9001def4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001dee0:	42bd      	cmp	r5, r7
9001dee2:	da07      	bge.n	9001def4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001dee4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001dee6:	fb05 2404 	mla	r4, r5, r4, r2
9001deea:	1424      	asrs	r4, r4, #16
9001deec:	d402      	bmi.n	9001def4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001deee:	42b4      	cmp	r4, r6
9001def0:	f2c0 80b3 	blt.w	9001e05a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001def4:	2600      	movs	r6, #0
9001def6:	199c      	adds	r4, r3, r6
9001def8:	2c00      	cmp	r4, #0
9001defa:	dc3e      	bgt.n	9001df7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001defc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001df00:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001df04:	f1bb 0f00 	cmp.w	fp, #0
9001df08:	f340 810e 	ble.w	9001e128 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001df0c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001df10:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001df12:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001df16:	f1bb 0b01 	subs.w	fp, fp, #1
9001df1a:	eeb0 6a62 	vmov.f32	s12, s5
9001df1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001df22:	ee31 1a05 	vadd.f32	s2, s2, s10
9001df26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001df2a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001df2e:	eeb0 6a43 	vmov.f32	s12, s6
9001df32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001df36:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001df3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001df3e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001df42:	ee77 2a62 	vsub.f32	s5, s14, s5
9001df46:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001df4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001df4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001df52:	ee12 2a90 	vmov	r2, s5
9001df56:	eef0 2a47 	vmov.f32	s5, s14
9001df5a:	fb92 f3f3 	sdiv	r3, r2, r3
9001df5e:	ee13 2a10 	vmov	r2, s6
9001df62:	9311      	str	r3, [sp, #68]	@ 0x44
9001df64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001df66:	eeb0 3a67 	vmov.f32	s6, s15
9001df6a:	fb92 f3f3 	sdiv	r3, r2, r3
9001df6e:	9a03      	ldr	r2, [sp, #12]
9001df70:	9312      	str	r3, [sp, #72]	@ 0x48
9001df72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001df74:	bf08      	it	eq
9001df76:	4613      	moveq	r3, r2
9001df78:	e789      	b.n	9001de8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001df7a:	140f      	asrs	r7, r1, #16
9001df7c:	d418      	bmi.n	9001dfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001df7e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001df82:	42bd      	cmp	r5, r7
9001df84:	dd14      	ble.n	9001dfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001df86:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001df8a:	d411      	bmi.n	9001dfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001df8c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001df90:	4564      	cmp	r4, ip
9001df92:	dd0d      	ble.n	9001dfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001df94:	b22d      	sxth	r5, r5
9001df96:	9c01      	ldr	r4, [sp, #4]
9001df98:	fb0c 7505 	mla	r5, ip, r5, r7
9001df9c:	5d64      	ldrb	r4, [r4, r5]
9001df9e:	2cff      	cmp	r4, #255	@ 0xff
9001dfa0:	d10c      	bne.n	9001dfbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001dfa2:	9c00      	ldr	r4, [sp, #0]
9001dfa4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001dfa8:	f06f 0401 	mvn.w	r4, #1
9001dfac:	4374      	muls	r4, r6
9001dfae:	5305      	strh	r5, [r0, r4]
9001dfb0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001dfb2:	3e01      	subs	r6, #1
9001dfb4:	4421      	add	r1, r4
9001dfb6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001dfb8:	4422      	add	r2, r4
9001dfba:	e79c      	b.n	9001def6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001dfbc:	2c00      	cmp	r4, #0
9001dfbe:	d0f7      	beq.n	9001dfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001dfc0:	9f00      	ldr	r7, [sp, #0]
9001dfc2:	fa1f fc84 	uxth.w	ip, r4
9001dfc6:	43e4      	mvns	r4, r4
9001dfc8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001dfcc:	f06f 0501 	mvn.w	r5, #1
9001dfd0:	b2e4      	uxtb	r4, r4
9001dfd2:	4375      	muls	r5, r6
9001dfd4:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001dfd8:	9502      	str	r5, [sp, #8]
9001dfda:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001dfde:	5b45      	ldrh	r5, [r0, r5]
9001dfe0:	122f      	asrs	r7, r5, #8
9001dfe2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001dfe6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001dfea:	00ed      	lsls	r5, r5, #3
9001dfec:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001dff0:	fb17 f704 	smulbb	r7, r7, r4
9001dff4:	b2ed      	uxtb	r5, r5
9001dff6:	fb1a fa04 	smulbb	sl, sl, r4
9001dffa:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001dffe:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001e002:	fb15 f504 	smulbb	r5, r5, r4
9001e006:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001e00a:	fa1f fe8e 	uxth.w	lr, lr
9001e00e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e012:	fa5f f989 	uxtb.w	r9, r9
9001e016:	fb07 a70c 	mla	r7, r7, ip, sl
9001e01a:	f10e 0401 	add.w	r4, lr, #1
9001e01e:	fb09 550c 	mla	r5, r9, ip, r5
9001e022:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001e026:	9c02      	ldr	r4, [sp, #8]
9001e028:	b2ad      	uxth	r5, r5
9001e02a:	b2bf      	uxth	r7, r7
9001e02c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001e030:	f105 0a01 	add.w	sl, r5, #1
9001e034:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e038:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e03c:	ea4a 0e0e 	orr.w	lr, sl, lr
9001e040:	f107 0a01 	add.w	sl, r7, #1
9001e044:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001e048:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e04c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e050:	ea4e 0e0a 	orr.w	lr, lr, sl
9001e054:	f820 e004 	strh.w	lr, [r0, r4]
9001e058:	e7aa      	b.n	9001dfb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001e05a:	f04f 0900 	mov.w	r9, #0
9001e05e:	eba3 0409 	sub.w	r4, r3, r9
9001e062:	2c00      	cmp	r4, #0
9001e064:	f77f af4a 	ble.w	9001defc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e068:	1414      	asrs	r4, r2, #16
9001e06a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001e06e:	140d      	asrs	r5, r1, #16
9001e070:	fb06 5504 	mla	r5, r6, r4, r5
9001e074:	9c01      	ldr	r4, [sp, #4]
9001e076:	5d64      	ldrb	r4, [r4, r5]
9001e078:	2cff      	cmp	r4, #255	@ 0xff
9001e07a:	d10b      	bne.n	9001e094 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001e07c:	9c00      	ldr	r4, [sp, #0]
9001e07e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001e082:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001e086:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001e088:	f109 0901 	add.w	r9, r9, #1
9001e08c:	4421      	add	r1, r4
9001e08e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001e090:	4422      	add	r2, r4
9001e092:	e7e4      	b.n	9001e05e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001e094:	2c00      	cmp	r4, #0
9001e096:	d0f6      	beq.n	9001e086 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e098:	9e00      	ldr	r6, [sp, #0]
9001e09a:	b2a7      	uxth	r7, r4
9001e09c:	43e4      	mvns	r4, r4
9001e09e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001e0a2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001e0a6:	b2e4      	uxtb	r4, r4
9001e0a8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e0ac:	122e      	asrs	r6, r5, #8
9001e0ae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001e0b2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e0b6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e0ba:	00ed      	lsls	r5, r5, #3
9001e0bc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e0c0:	fb16 f604 	smulbb	r6, r6, r4
9001e0c4:	b2ed      	uxtb	r5, r5
9001e0c6:	fb1a fa04 	smulbb	sl, sl, r4
9001e0ca:	fb0c 6c07 	mla	ip, ip, r7, r6
9001e0ce:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001e0d2:	fb15 f504 	smulbb	r5, r5, r4
9001e0d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e0da:	fa1f fc8c 	uxth.w	ip, ip
9001e0de:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001e0e2:	fa5f fe8e 	uxtb.w	lr, lr
9001e0e6:	fb06 a607 	mla	r6, r6, r7, sl
9001e0ea:	f10c 0401 	add.w	r4, ip, #1
9001e0ee:	fb0e 5507 	mla	r5, lr, r7, r5
9001e0f2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001e0f6:	b2ad      	uxth	r5, r5
9001e0f8:	b2b6      	uxth	r6, r6
9001e0fa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e0fe:	f105 0a01 	add.w	sl, r5, #1
9001e102:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e106:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e10a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001e10e:	f106 0a01 	add.w	sl, r6, #1
9001e112:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e116:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e11a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e11e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001e122:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001e126:	e7ae      	b.n	9001e086 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e128:	b005      	add	sp, #20
9001e12a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e12e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e12e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e132:	b085      	sub	sp, #20
9001e134:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e136:	9203      	str	r2, [sp, #12]
9001e138:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001e13c:	9100      	str	r1, [sp, #0]
9001e13e:	9201      	str	r2, [sp, #4]
9001e140:	6841      	ldr	r1, [r0, #4]
9001e142:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001e146:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001e14a:	fb01 2404 	mla	r4, r1, r4, r2
9001e14e:	6802      	ldr	r2, [r0, #0]
9001e150:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e154:	f8de 2000 	ldr.w	r2, [lr]
9001e158:	9202      	str	r2, [sp, #8]
9001e15a:	9a01      	ldr	r2, [sp, #4]
9001e15c:	43d6      	mvns	r6, r2
9001e15e:	b2f6      	uxtb	r6, r6
9001e160:	9a00      	ldr	r2, [sp, #0]
9001e162:	2a00      	cmp	r2, #0
9001e164:	dc03      	bgt.n	9001e16e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001e166:	9a03      	ldr	r2, [sp, #12]
9001e168:	2a00      	cmp	r2, #0
9001e16a:	f340 8124 	ble.w	9001e3b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001e16e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e170:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001e174:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e178:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e17a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001e17e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e182:	2b00      	cmp	r3, #0
9001e184:	dd0e      	ble.n	9001e1a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e186:	1408      	asrs	r0, r1, #16
9001e188:	d405      	bmi.n	9001e196 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001e18a:	4560      	cmp	r0, ip
9001e18c:	da03      	bge.n	9001e196 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001e18e:	1410      	asrs	r0, r2, #16
9001e190:	d401      	bmi.n	9001e196 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001e192:	42b8      	cmp	r0, r7
9001e194:	db07      	blt.n	9001e1a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001e196:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e198:	3b01      	subs	r3, #1
9001e19a:	3402      	adds	r4, #2
9001e19c:	4401      	add	r1, r0
9001e19e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e1a0:	4402      	add	r2, r0
9001e1a2:	e7ee      	b.n	9001e182 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001e1a4:	d06e      	beq.n	9001e284 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001e1a6:	1e58      	subs	r0, r3, #1
9001e1a8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001e1aa:	fb05 1500 	mla	r5, r5, r0, r1
9001e1ae:	142d      	asrs	r5, r5, #16
9001e1b0:	d45c      	bmi.n	9001e26c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e1b2:	4565      	cmp	r5, ip
9001e1b4:	da5a      	bge.n	9001e26c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e1b6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001e1b8:	fb05 2000 	mla	r0, r5, r0, r2
9001e1bc:	1400      	asrs	r0, r0, #16
9001e1be:	d455      	bmi.n	9001e26c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e1c0:	42b8      	cmp	r0, r7
9001e1c2:	da53      	bge.n	9001e26c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e1c4:	4699      	mov	r9, r3
9001e1c6:	46a2      	mov	sl, r4
9001e1c8:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001e1cc:	f1b9 0f00 	cmp.w	r9, #0
9001e1d0:	dd54      	ble.n	9001e27c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001e1d2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001e1d6:	140d      	asrs	r5, r1, #16
9001e1d8:	1410      	asrs	r0, r2, #16
9001e1da:	f109 39ff 	add.w	r9, r9, #4294967295
9001e1de:	fb07 5000 	mla	r0, r7, r0, r5
9001e1e2:	9d02      	ldr	r5, [sp, #8]
9001e1e4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001e1e8:	f8ba 5000 	ldrh.w	r5, [sl]
9001e1ec:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001e1f0:	122f      	asrs	r7, r5, #8
9001e1f2:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001e1f6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e1fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e1fe:	00ed      	lsls	r5, r5, #3
9001e200:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001e204:	fb17 f706 	smulbb	r7, r7, r6
9001e208:	b2ed      	uxtb	r5, r5
9001e20a:	fb18 f806 	smulbb	r8, r8, r6
9001e20e:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001e212:	10c7      	asrs	r7, r0, #3
9001e214:	fb15 f506 	smulbb	r5, r5, r6
9001e218:	00c0      	lsls	r0, r0, #3
9001e21a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e21e:	fa1f fc8c 	uxth.w	ip, ip
9001e222:	b2c0      	uxtb	r0, r0
9001e224:	fb07 870b 	mla	r7, r7, fp, r8
9001e228:	fb00 500b 	mla	r0, r0, fp, r5
9001e22c:	f10c 0501 	add.w	r5, ip, #1
9001e230:	b2bf      	uxth	r7, r7
9001e232:	b280      	uxth	r0, r0
9001e234:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e238:	f107 0801 	add.w	r8, r7, #1
9001e23c:	1c45      	adds	r5, r0, #1
9001e23e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001e242:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e246:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e24a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e24c:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001e250:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e254:	4401      	add	r1, r0
9001e256:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001e25a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e25c:	ea45 0c0c 	orr.w	ip, r5, ip
9001e260:	4402      	add	r2, r0
9001e262:	ea4c 0c08 	orr.w	ip, ip, r8
9001e266:	f82a cb02 	strh.w	ip, [sl], #2
9001e26a:	e7af      	b.n	9001e1cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e26c:	f04f 0800 	mov.w	r8, #0
9001e270:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001e274:	eb03 0008 	add.w	r0, r3, r8
9001e278:	2800      	cmp	r0, #0
9001e27a:	dc41      	bgt.n	9001e300 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001e27c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e280:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e284:	9b00      	ldr	r3, [sp, #0]
9001e286:	2b00      	cmp	r3, #0
9001e288:	f340 8095 	ble.w	9001e3b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001e28c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001e290:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e292:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e296:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e29a:	eef0 6a62 	vmov.f32	s13, s5
9001e29e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001e2a2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e2a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e2aa:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001e2ae:	eef0 6a43 	vmov.f32	s13, s6
9001e2b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e2b6:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001e2ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e2be:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e2c2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e2c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e2ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e2ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e2d2:	ee12 2a90 	vmov	r2, s5
9001e2d6:	eef0 2a47 	vmov.f32	s5, s14
9001e2da:	fb92 f3f3 	sdiv	r3, r2, r3
9001e2de:	ee13 2a10 	vmov	r2, s6
9001e2e2:	9311      	str	r3, [sp, #68]	@ 0x44
9001e2e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e2e6:	eeb0 3a67 	vmov.f32	s6, s15
9001e2ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001e2ee:	9312      	str	r3, [sp, #72]	@ 0x48
9001e2f0:	9b00      	ldr	r3, [sp, #0]
9001e2f2:	9a03      	ldr	r2, [sp, #12]
9001e2f4:	3b01      	subs	r3, #1
9001e2f6:	9300      	str	r3, [sp, #0]
9001e2f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e2fa:	bf08      	it	eq
9001e2fc:	4613      	moveq	r3, r2
9001e2fe:	e72f      	b.n	9001e160 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001e300:	140f      	asrs	r7, r1, #16
9001e302:	d451      	bmi.n	9001e3a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e304:	f8de 5008 	ldr.w	r5, [lr, #8]
9001e308:	42bd      	cmp	r5, r7
9001e30a:	dd4d      	ble.n	9001e3a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e30c:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001e310:	d44a      	bmi.n	9001e3a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e312:	f8de 000c 	ldr.w	r0, [lr, #12]
9001e316:	4560      	cmp	r0, ip
9001e318:	dd46      	ble.n	9001e3a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e31a:	b22d      	sxth	r5, r5
9001e31c:	9802      	ldr	r0, [sp, #8]
9001e31e:	fb0c 7505 	mla	r5, ip, r5, r7
9001e322:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001e326:	f06f 0501 	mvn.w	r5, #1
9001e32a:	fb05 fb08 	mul.w	fp, r5, r8
9001e32e:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001e332:	f834 500b 	ldrh.w	r5, [r4, fp]
9001e336:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e33a:	122f      	asrs	r7, r5, #8
9001e33c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001e340:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e344:	00ed      	lsls	r5, r5, #3
9001e346:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001e34a:	fb17 f706 	smulbb	r7, r7, r6
9001e34e:	b2ed      	uxtb	r5, r5
9001e350:	fb19 f906 	smulbb	r9, r9, r6
9001e354:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001e358:	10c7      	asrs	r7, r0, #3
9001e35a:	fb15 f506 	smulbb	r5, r5, r6
9001e35e:	00c0      	lsls	r0, r0, #3
9001e360:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e364:	fa1f fc8c 	uxth.w	ip, ip
9001e368:	b2c0      	uxtb	r0, r0
9001e36a:	fb07 970a 	mla	r7, r7, sl, r9
9001e36e:	fb00 500a 	mla	r0, r0, sl, r5
9001e372:	f10c 0501 	add.w	r5, ip, #1
9001e376:	b2bf      	uxth	r7, r7
9001e378:	b280      	uxth	r0, r0
9001e37a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e37e:	f107 0901 	add.w	r9, r7, #1
9001e382:	1c45      	adds	r5, r0, #1
9001e384:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001e388:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e38c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e390:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001e394:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e398:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001e39c:	ea45 0c0c 	orr.w	ip, r5, ip
9001e3a0:	ea4c 0c09 	orr.w	ip, ip, r9
9001e3a4:	f824 c00b 	strh.w	ip, [r4, fp]
9001e3a8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e3aa:	f108 38ff 	add.w	r8, r8, #4294967295
9001e3ae:	4401      	add	r1, r0
9001e3b0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e3b2:	4402      	add	r2, r0
9001e3b4:	e75e      	b.n	9001e274 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001e3b6:	b005      	add	sp, #20
9001e3b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e3bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e3bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e3c0:	b085      	sub	sp, #20
9001e3c2:	4693      	mov	fp, r2
9001e3c4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e3c8:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001e3ca:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001e3cc:	6870      	ldr	r0, [r6, #4]
9001e3ce:	9101      	str	r1, [sp, #4]
9001e3d0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001e3d4:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001e3d8:	fb00 2404 	mla	r4, r0, r4, r2
9001e3dc:	6832      	ldr	r2, [r6, #0]
9001e3de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e3e2:	682a      	ldr	r2, [r5, #0]
9001e3e4:	9202      	str	r2, [sp, #8]
9001e3e6:	9a01      	ldr	r2, [sp, #4]
9001e3e8:	2a00      	cmp	r2, #0
9001e3ea:	dc03      	bgt.n	9001e3f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001e3ec:	f1bb 0f00 	cmp.w	fp, #0
9001e3f0:	f340 809a 	ble.w	9001e528 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001e3f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e3f6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001e3fa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001e3fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e400:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001e404:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e408:	2b00      	cmp	r3, #0
9001e40a:	dd0c      	ble.n	9001e426 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001e40c:	1406      	asrs	r6, r0, #16
9001e40e:	d405      	bmi.n	9001e41c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e410:	454e      	cmp	r6, r9
9001e412:	da03      	bge.n	9001e41c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e414:	1416      	asrs	r6, r2, #16
9001e416:	d401      	bmi.n	9001e41c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e418:	4546      	cmp	r6, r8
9001e41a:	db05      	blt.n	9001e428 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001e41c:	4470      	add	r0, lr
9001e41e:	4462      	add	r2, ip
9001e420:	3b01      	subs	r3, #1
9001e422:	3402      	adds	r4, #2
9001e424:	e7f0      	b.n	9001e408 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e426:	d00f      	beq.n	9001e448 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001e428:	1e5e      	subs	r6, r3, #1
9001e42a:	fb0e 0706 	mla	r7, lr, r6, r0
9001e42e:	143f      	asrs	r7, r7, #16
9001e430:	d541      	bpl.n	9001e4b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001e432:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001e436:	4698      	mov	r8, r3
9001e438:	9603      	str	r6, [sp, #12]
9001e43a:	f1b8 0f00 	cmp.w	r8, #0
9001e43e:	dc56      	bgt.n	9001e4ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001e440:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e444:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e448:	9b01      	ldr	r3, [sp, #4]
9001e44a:	2b00      	cmp	r3, #0
9001e44c:	dd6c      	ble.n	9001e528 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001e44e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e452:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e454:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e458:	eeb0 6a62 	vmov.f32	s12, s5
9001e45c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e460:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e464:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e468:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001e46c:	eeb0 6a43 	vmov.f32	s12, s6
9001e470:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e474:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001e478:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e47c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e480:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e484:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e488:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e48c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e490:	ee12 2a90 	vmov	r2, s5
9001e494:	eef0 2a47 	vmov.f32	s5, s14
9001e498:	fb92 fef3 	sdiv	lr, r2, r3
9001e49c:	ee13 2a10 	vmov	r2, s6
9001e4a0:	eeb0 3a67 	vmov.f32	s6, s15
9001e4a4:	fb92 fcf3 	sdiv	ip, r2, r3
9001e4a8:	9b01      	ldr	r3, [sp, #4]
9001e4aa:	3b01      	subs	r3, #1
9001e4ac:	9301      	str	r3, [sp, #4]
9001e4ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e4b0:	bf08      	it	eq
9001e4b2:	465b      	moveq	r3, fp
9001e4b4:	e797      	b.n	9001e3e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001e4b6:	454f      	cmp	r7, r9
9001e4b8:	dabb      	bge.n	9001e432 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e4ba:	fb0c 2606 	mla	r6, ip, r6, r2
9001e4be:	1436      	asrs	r6, r6, #16
9001e4c0:	d4b7      	bmi.n	9001e432 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e4c2:	4546      	cmp	r6, r8
9001e4c4:	dab5      	bge.n	9001e432 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e4c6:	461e      	mov	r6, r3
9001e4c8:	46a0      	mov	r8, r4
9001e4ca:	2e00      	cmp	r6, #0
9001e4cc:	ddb8      	ble.n	9001e440 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001e4ce:	1417      	asrs	r7, r2, #16
9001e4d0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001e4d4:	ea4f 4920 	mov.w	r9, r0, asr #16
9001e4d8:	9902      	ldr	r1, [sp, #8]
9001e4da:	4470      	add	r0, lr
9001e4dc:	4462      	add	r2, ip
9001e4de:	fb0a 9707 	mla	r7, sl, r7, r9
9001e4e2:	3e01      	subs	r6, #1
9001e4e4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001e4e8:	f828 7b02 	strh.w	r7, [r8], #2
9001e4ec:	e7ed      	b.n	9001e4ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001e4ee:	ea5f 4920 	movs.w	r9, r0, asr #16
9001e4f2:	d414      	bmi.n	9001e51e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e4f4:	68ae      	ldr	r6, [r5, #8]
9001e4f6:	454e      	cmp	r6, r9
9001e4f8:	dd11      	ble.n	9001e51e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e4fa:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001e4fe:	d40e      	bmi.n	9001e51e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e500:	68ef      	ldr	r7, [r5, #12]
9001e502:	4557      	cmp	r7, sl
9001e504:	dd0b      	ble.n	9001e51e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e506:	b236      	sxth	r6, r6
9001e508:	f06f 0101 	mvn.w	r1, #1
9001e50c:	9f02      	ldr	r7, [sp, #8]
9001e50e:	fb0a 9606 	mla	r6, sl, r6, r9
9001e512:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001e516:	fb01 f608 	mul.w	r6, r1, r8
9001e51a:	9903      	ldr	r1, [sp, #12]
9001e51c:	538f      	strh	r7, [r1, r6]
9001e51e:	4470      	add	r0, lr
9001e520:	4462      	add	r2, ip
9001e522:	f108 38ff 	add.w	r8, r8, #4294967295
9001e526:	e788      	b.n	9001e43a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e528:	b005      	add	sp, #20
9001e52a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e52e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e52e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e532:	b087      	sub	sp, #28
9001e534:	468b      	mov	fp, r1
9001e536:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e53a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001e53c:	9203      	str	r2, [sp, #12]
9001e53e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001e542:	6841      	ldr	r1, [r0, #4]
9001e544:	9204      	str	r2, [sp, #16]
9001e546:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001e54a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001e54e:	fb01 2505 	mla	r5, r1, r5, r2
9001e552:	6802      	ldr	r2, [r0, #0]
9001e554:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001e558:	f8d9 2000 	ldr.w	r2, [r9]
9001e55c:	9201      	str	r2, [sp, #4]
9001e55e:	f1bb 0f00 	cmp.w	fp, #0
9001e562:	dc03      	bgt.n	9001e56c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001e564:	9a03      	ldr	r2, [sp, #12]
9001e566:	2a00      	cmp	r2, #0
9001e568:	f340 8158 	ble.w	9001e81c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001e56c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001e56e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001e572:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001e576:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e578:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001e57c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e580:	2b00      	cmp	r3, #0
9001e582:	dd0e      	ble.n	9001e5a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001e584:	1402      	asrs	r2, r0, #16
9001e586:	d405      	bmi.n	9001e594 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e588:	42ba      	cmp	r2, r7
9001e58a:	da03      	bge.n	9001e594 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e58c:	140a      	asrs	r2, r1, #16
9001e58e:	d401      	bmi.n	9001e594 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e590:	42b2      	cmp	r2, r6
9001e592:	db07      	blt.n	9001e5a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e594:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e596:	3b01      	subs	r3, #1
9001e598:	3502      	adds	r5, #2
9001e59a:	4410      	add	r0, r2
9001e59c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e59e:	4411      	add	r1, r2
9001e5a0:	e7ee      	b.n	9001e580 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001e5a2:	d017      	beq.n	9001e5d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001e5a4:	1e5a      	subs	r2, r3, #1
9001e5a6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001e5a8:	fb04 0402 	mla	r4, r4, r2, r0
9001e5ac:	1424      	asrs	r4, r4, #16
9001e5ae:	d409      	bmi.n	9001e5c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001e5b0:	42bc      	cmp	r4, r7
9001e5b2:	da07      	bge.n	9001e5c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001e5b4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001e5b6:	fb04 1202 	mla	r2, r4, r2, r1
9001e5ba:	1412      	asrs	r2, r2, #16
9001e5bc:	d402      	bmi.n	9001e5c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001e5be:	42b2      	cmp	r2, r6
9001e5c0:	f2c0 80bf 	blt.w	9001e742 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e5c4:	2700      	movs	r7, #0
9001e5c6:	19da      	adds	r2, r3, r7
9001e5c8:	2a00      	cmp	r2, #0
9001e5ca:	dc3e      	bgt.n	9001e64a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001e5cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e5d0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001e5d4:	f1bb 0f00 	cmp.w	fp, #0
9001e5d8:	f340 8120 	ble.w	9001e81c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001e5dc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e5e0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e5e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e5e6:	f1bb 0b01 	subs.w	fp, fp, #1
9001e5ea:	eeb0 6a62 	vmov.f32	s12, s5
9001e5ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e5f2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e5f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e5fa:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001e5fe:	eeb0 6a43 	vmov.f32	s12, s6
9001e602:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e606:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001e60a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e60e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e612:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e616:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e61a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e61e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e622:	ee12 2a90 	vmov	r2, s5
9001e626:	eef0 2a47 	vmov.f32	s5, s14
9001e62a:	fb92 f3f3 	sdiv	r3, r2, r3
9001e62e:	ee13 2a10 	vmov	r2, s6
9001e632:	9313      	str	r3, [sp, #76]	@ 0x4c
9001e634:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e636:	eeb0 3a67 	vmov.f32	s6, s15
9001e63a:	fb92 f3f3 	sdiv	r3, r2, r3
9001e63e:	9a03      	ldr	r2, [sp, #12]
9001e640:	9314      	str	r3, [sp, #80]	@ 0x50
9001e642:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e644:	bf08      	it	eq
9001e646:	4613      	moveq	r3, r2
9001e648:	e789      	b.n	9001e55e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001e64a:	1406      	asrs	r6, r0, #16
9001e64c:	d42d      	bmi.n	9001e6aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e64e:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001e652:	42b4      	cmp	r4, r6
9001e654:	dd29      	ble.n	9001e6aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e656:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001e65a:	d426      	bmi.n	9001e6aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e65c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001e660:	4562      	cmp	r2, ip
9001e662:	dd22      	ble.n	9001e6aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e664:	b224      	sxth	r4, r4
9001e666:	9a01      	ldr	r2, [sp, #4]
9001e668:	fb0c 6404 	mla	r4, ip, r4, r6
9001e66c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001e670:	0e22      	lsrs	r2, r4, #24
9001e672:	d01a      	beq.n	9001e6aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e674:	9e04      	ldr	r6, [sp, #16]
9001e676:	4372      	muls	r2, r6
9001e678:	1c56      	adds	r6, r2, #1
9001e67a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001e67e:	0a26      	lsrs	r6, r4, #8
9001e680:	1212      	asrs	r2, r2, #8
9001e682:	9605      	str	r6, [sp, #20]
9001e684:	2aff      	cmp	r2, #255	@ 0xff
9001e686:	d116      	bne.n	9001e6b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001e688:	f06f 0201 	mvn.w	r2, #1
9001e68c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001e690:	fb02 fc07 	mul.w	ip, r2, r7
9001e694:	0962      	lsrs	r2, r4, #5
9001e696:	f026 0607 	bic.w	r6, r6, #7
9001e69a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001e69e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e6a2:	4316      	orrs	r6, r2
9001e6a4:	4326      	orrs	r6, r4
9001e6a6:	f825 600c 	strh.w	r6, [r5, ip]
9001e6aa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e6ac:	3f01      	subs	r7, #1
9001e6ae:	4410      	add	r0, r2
9001e6b0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e6b2:	4411      	add	r1, r2
9001e6b4:	e787      	b.n	9001e5c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001e6b6:	f06f 0601 	mvn.w	r6, #1
9001e6ba:	fa1f fa82 	uxth.w	sl, r2
9001e6be:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001e6c2:	43d2      	mvns	r2, r2
9001e6c4:	437e      	muls	r6, r7
9001e6c6:	b2e4      	uxtb	r4, r4
9001e6c8:	fb1c fc0a 	smulbb	ip, ip, sl
9001e6cc:	b2d2      	uxtb	r2, r2
9001e6ce:	f835 8006 	ldrh.w	r8, [r5, r6]
9001e6d2:	fb14 f40a 	smulbb	r4, r4, sl
9001e6d6:	9602      	str	r6, [sp, #8]
9001e6d8:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001e6dc:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001e6e0:	fb16 f60a 	smulbb	r6, r6, sl
9001e6e4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001e6e8:	fb0e ce02 	mla	lr, lr, r2, ip
9001e6ec:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001e6f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001e6f4:	fa1f fe8e 	uxth.w	lr, lr
9001e6f8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001e6fc:	fa5f f888 	uxtb.w	r8, r8
9001e700:	fb0c 6c02 	mla	ip, ip, r2, r6
9001e704:	fb08 4402 	mla	r4, r8, r2, r4
9001e708:	f10e 0201 	add.w	r2, lr, #1
9001e70c:	fa1f fc8c 	uxth.w	ip, ip
9001e710:	b2a4      	uxth	r4, r4
9001e712:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001e716:	9a02      	ldr	r2, [sp, #8]
9001e718:	1c66      	adds	r6, r4, #1
9001e71a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001e71e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001e722:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e726:	ea46 0e0e 	orr.w	lr, r6, lr
9001e72a:	f10c 0601 	add.w	r6, ip, #1
9001e72e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001e732:	0976      	lsrs	r6, r6, #5
9001e734:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e738:	ea4e 0e06 	orr.w	lr, lr, r6
9001e73c:	f825 e002 	strh.w	lr, [r5, r2]
9001e740:	e7b3      	b.n	9001e6aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e742:	f04f 0800 	mov.w	r8, #0
9001e746:	eba3 0208 	sub.w	r2, r3, r8
9001e74a:	2a00      	cmp	r2, #0
9001e74c:	f77f af3e 	ble.w	9001e5cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e750:	1404      	asrs	r4, r0, #16
9001e752:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001e756:	140a      	asrs	r2, r1, #16
9001e758:	fb06 4202 	mla	r2, r6, r2, r4
9001e75c:	9c01      	ldr	r4, [sp, #4]
9001e75e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001e762:	0e22      	lsrs	r2, r4, #24
9001e764:	d015      	beq.n	9001e792 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001e766:	9e04      	ldr	r6, [sp, #16]
9001e768:	4372      	muls	r2, r6
9001e76a:	1c56      	adds	r6, r2, #1
9001e76c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001e770:	0a26      	lsrs	r6, r4, #8
9001e772:	1212      	asrs	r2, r2, #8
9001e774:	2aff      	cmp	r2, #255	@ 0xff
9001e776:	d113      	bne.n	9001e7a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001e778:	0962      	lsrs	r2, r4, #5
9001e77a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001e77e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001e782:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e786:	f026 0607 	bic.w	r6, r6, #7
9001e78a:	4316      	orrs	r6, r2
9001e78c:	4326      	orrs	r6, r4
9001e78e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001e792:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e794:	f108 0801 	add.w	r8, r8, #1
9001e798:	4410      	add	r0, r2
9001e79a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e79c:	4411      	add	r1, r2
9001e79e:	e7d2      	b.n	9001e746 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001e7a0:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001e7a4:	fa1f fa82 	uxth.w	sl, r2
9001e7a8:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001e7ac:	43d2      	mvns	r2, r2
9001e7ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e7b2:	fb17 f70a 	smulbb	r7, r7, sl
9001e7b6:	b2d2      	uxtb	r2, r2
9001e7b8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e7bc:	b2e4      	uxtb	r4, r4
9001e7be:	b2f6      	uxtb	r6, r6
9001e7c0:	fb0c 7c02 	mla	ip, ip, r2, r7
9001e7c4:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001e7c8:	fb14 f40a 	smulbb	r4, r4, sl
9001e7cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e7d0:	fa1f fc8c 	uxth.w	ip, ip
9001e7d4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e7d8:	fb16 f60a 	smulbb	r6, r6, sl
9001e7dc:	fa5f fe8e 	uxtb.w	lr, lr
9001e7e0:	fb0e 4402 	mla	r4, lr, r2, r4
9001e7e4:	fb07 6702 	mla	r7, r7, r2, r6
9001e7e8:	f10c 0201 	add.w	r2, ip, #1
9001e7ec:	b2a4      	uxth	r4, r4
9001e7ee:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e7f2:	1c66      	adds	r6, r4, #1
9001e7f4:	b2bf      	uxth	r7, r7
9001e7f6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e7fa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001e7fe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e802:	ea46 0c0c 	orr.w	ip, r6, ip
9001e806:	1c7e      	adds	r6, r7, #1
9001e808:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001e80c:	0976      	lsrs	r6, r6, #5
9001e80e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e812:	ea4c 0c06 	orr.w	ip, ip, r6
9001e816:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001e81a:	e7ba      	b.n	9001e792 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001e81c:	b007      	add	sp, #28
9001e81e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001e824 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e828:	b085      	sub	sp, #20
9001e82a:	468b      	mov	fp, r1
9001e82c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e830:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e832:	9203      	str	r2, [sp, #12]
9001e834:	6841      	ldr	r1, [r0, #4]
9001e836:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001e83a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001e83e:	fb01 2404 	mla	r4, r1, r4, r2
9001e842:	6802      	ldr	r2, [r0, #0]
9001e844:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e848:	f8d8 2000 	ldr.w	r2, [r8]
9001e84c:	9201      	str	r2, [sp, #4]
9001e84e:	f1bb 0f00 	cmp.w	fp, #0
9001e852:	dc03      	bgt.n	9001e85c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001e854:	9a03      	ldr	r2, [sp, #12]
9001e856:	2a00      	cmp	r2, #0
9001e858:	f340 814f 	ble.w	9001eafa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001e85c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e85e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001e862:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e866:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e868:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001e86c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e870:	2b00      	cmp	r3, #0
9001e872:	dd0e      	ble.n	9001e892 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001e874:	1408      	asrs	r0, r1, #16
9001e876:	d405      	bmi.n	9001e884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e878:	42b8      	cmp	r0, r7
9001e87a:	da03      	bge.n	9001e884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e87c:	1410      	asrs	r0, r2, #16
9001e87e:	d401      	bmi.n	9001e884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e880:	42b0      	cmp	r0, r6
9001e882:	db07      	blt.n	9001e894 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e884:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e886:	3b01      	subs	r3, #1
9001e888:	3402      	adds	r4, #2
9001e88a:	4401      	add	r1, r0
9001e88c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e88e:	4402      	add	r2, r0
9001e890:	e7ee      	b.n	9001e870 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e892:	d017      	beq.n	9001e8c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e894:	1e58      	subs	r0, r3, #1
9001e896:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001e898:	fb05 1500 	mla	r5, r5, r0, r1
9001e89c:	142d      	asrs	r5, r5, #16
9001e89e:	d409      	bmi.n	9001e8b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001e8a0:	42bd      	cmp	r5, r7
9001e8a2:	da07      	bge.n	9001e8b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001e8a4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001e8a6:	fb05 2000 	mla	r0, r5, r0, r2
9001e8aa:	1400      	asrs	r0, r0, #16
9001e8ac:	d402      	bmi.n	9001e8b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001e8ae:	42b0      	cmp	r0, r6
9001e8b0:	f2c0 80ba 	blt.w	9001ea28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e8b4:	2600      	movs	r6, #0
9001e8b6:	1998      	adds	r0, r3, r6
9001e8b8:	2800      	cmp	r0, #0
9001e8ba:	dc3e      	bgt.n	9001e93a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e8bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e8c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e8c4:	f1bb 0f00 	cmp.w	fp, #0
9001e8c8:	f340 8117 	ble.w	9001eafa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001e8cc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e8d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e8d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e8d6:	f1bb 0b01 	subs.w	fp, fp, #1
9001e8da:	eeb0 6a62 	vmov.f32	s12, s5
9001e8de:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e8e2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e8e6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e8ea:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001e8ee:	eeb0 6a43 	vmov.f32	s12, s6
9001e8f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e8f6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001e8fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e8fe:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e902:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e906:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e90a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e90e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e912:	ee12 2a90 	vmov	r2, s5
9001e916:	eef0 2a47 	vmov.f32	s5, s14
9001e91a:	fb92 f3f3 	sdiv	r3, r2, r3
9001e91e:	ee13 2a10 	vmov	r2, s6
9001e922:	9311      	str	r3, [sp, #68]	@ 0x44
9001e924:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e926:	eeb0 3a67 	vmov.f32	s6, s15
9001e92a:	fb92 f3f3 	sdiv	r3, r2, r3
9001e92e:	9a03      	ldr	r2, [sp, #12]
9001e930:	9312      	str	r3, [sp, #72]	@ 0x48
9001e932:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e934:	bf08      	it	eq
9001e936:	4613      	moveq	r3, r2
9001e938:	e789      	b.n	9001e84e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001e93a:	140f      	asrs	r7, r1, #16
9001e93c:	d424      	bmi.n	9001e988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e93e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001e942:	42bd      	cmp	r5, r7
9001e944:	dd20      	ble.n	9001e988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e946:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001e94a:	d41d      	bmi.n	9001e988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e94c:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001e950:	4560      	cmp	r0, ip
9001e952:	dd19      	ble.n	9001e988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e954:	b22d      	sxth	r5, r5
9001e956:	9801      	ldr	r0, [sp, #4]
9001e958:	fb0c 7505 	mla	r5, ip, r5, r7
9001e95c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001e960:	0e07      	lsrs	r7, r0, #24
9001e962:	2fff      	cmp	r7, #255	@ 0xff
9001e964:	d116      	bne.n	9001e994 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001e966:	f06f 0501 	mvn.w	r5, #1
9001e96a:	fb05 f706 	mul.w	r7, r5, r6
9001e96e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001e972:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001e976:	0945      	lsrs	r5, r0, #5
9001e978:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001e97c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e980:	ea4c 0505 	orr.w	r5, ip, r5
9001e984:	4305      	orrs	r5, r0
9001e986:	53e5      	strh	r5, [r4, r7]
9001e988:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e98a:	3e01      	subs	r6, #1
9001e98c:	4401      	add	r1, r0
9001e98e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e990:	4402      	add	r2, r0
9001e992:	e790      	b.n	9001e8b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001e994:	b2fd      	uxtb	r5, r7
9001e996:	2f00      	cmp	r7, #0
9001e998:	d0f6      	beq.n	9001e988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e99a:	f06f 0701 	mvn.w	r7, #1
9001e99e:	fa1f f985 	uxth.w	r9, r5
9001e9a2:	43ed      	mvns	r5, r5
9001e9a4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001e9a8:	4377      	muls	r7, r6
9001e9aa:	fb1a fa09 	smulbb	sl, sl, r9
9001e9ae:	b2ed      	uxtb	r5, r5
9001e9b0:	f834 e007 	ldrh.w	lr, [r4, r7]
9001e9b4:	9702      	str	r7, [sp, #8]
9001e9b6:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001e9ba:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e9be:	fb17 f709 	smulbb	r7, r7, r9
9001e9c2:	b2c0      	uxtb	r0, r0
9001e9c4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e9c8:	fb10 f009 	smulbb	r0, r0, r9
9001e9cc:	fb0c 7c05 	mla	ip, ip, r5, r7
9001e9d0:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001e9d4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e9d8:	fa1f fc8c 	uxth.w	ip, ip
9001e9dc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e9e0:	fa5f fe8e 	uxtb.w	lr, lr
9001e9e4:	fb07 a705 	mla	r7, r7, r5, sl
9001e9e8:	fb0e 0005 	mla	r0, lr, r5, r0
9001e9ec:	f10c 0501 	add.w	r5, ip, #1
9001e9f0:	b2bf      	uxth	r7, r7
9001e9f2:	b280      	uxth	r0, r0
9001e9f4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e9f8:	f100 0a01 	add.w	sl, r0, #1
9001e9fc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ea00:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001ea04:	9802      	ldr	r0, [sp, #8]
9001ea06:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ea0a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ea0e:	f107 0a01 	add.w	sl, r7, #1
9001ea12:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001ea16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ea1a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ea1e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001ea22:	f824 c000 	strh.w	ip, [r4, r0]
9001ea26:	e7af      	b.n	9001e988 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001ea28:	f04f 0e00 	mov.w	lr, #0
9001ea2c:	eba3 000e 	sub.w	r0, r3, lr
9001ea30:	2800      	cmp	r0, #0
9001ea32:	f77f af43 	ble.w	9001e8bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ea36:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001ea3a:	140d      	asrs	r5, r1, #16
9001ea3c:	1410      	asrs	r0, r2, #16
9001ea3e:	fb06 5000 	mla	r0, r6, r0, r5
9001ea42:	9d01      	ldr	r5, [sp, #4]
9001ea44:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001ea48:	0e2e      	lsrs	r6, r5, #24
9001ea4a:	2eff      	cmp	r6, #255	@ 0xff
9001ea4c:	d112      	bne.n	9001ea74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001ea4e:	482c      	ldr	r0, [pc, #176]	@ (9001eb00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001ea50:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001ea54:	0968      	lsrs	r0, r5, #5
9001ea56:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ea5a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001ea5e:	4330      	orrs	r0, r6
9001ea60:	4328      	orrs	r0, r5
9001ea62:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001ea66:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ea68:	f10e 0e01 	add.w	lr, lr, #1
9001ea6c:	4401      	add	r1, r0
9001ea6e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ea70:	4402      	add	r2, r0
9001ea72:	e7db      	b.n	9001ea2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001ea74:	b2f0      	uxtb	r0, r6
9001ea76:	2e00      	cmp	r6, #0
9001ea78:	d0f5      	beq.n	9001ea66 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001ea7a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001ea7e:	fa1f f980 	uxth.w	r9, r0
9001ea82:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ea86:	43c0      	mvns	r0, r0
9001ea88:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ea8c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ea90:	fb16 f609 	smulbb	r6, r6, r9
9001ea94:	b2c0      	uxtb	r0, r0
9001ea96:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ea9a:	b2ed      	uxtb	r5, r5
9001ea9c:	fb1a fa09 	smulbb	sl, sl, r9
9001eaa0:	fb07 6700 	mla	r7, r7, r0, r6
9001eaa4:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001eaa8:	fb15 f509 	smulbb	r5, r5, r9
9001eaac:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001eab0:	b2bf      	uxth	r7, r7
9001eab2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001eab6:	fa5f fc8c 	uxtb.w	ip, ip
9001eaba:	fb06 a600 	mla	r6, r6, r0, sl
9001eabe:	fb0c 5500 	mla	r5, ip, r0, r5
9001eac2:	1c78      	adds	r0, r7, #1
9001eac4:	b2b6      	uxth	r6, r6
9001eac6:	b2ad      	uxth	r5, r5
9001eac8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001eacc:	f105 0a01 	add.w	sl, r5, #1
9001ead0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ead4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ead8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001eadc:	ea4a 0707 	orr.w	r7, sl, r7
9001eae0:	f106 0a01 	add.w	sl, r6, #1
9001eae4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001eae8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001eaec:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001eaf0:	ea47 070a 	orr.w	r7, r7, sl
9001eaf4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001eaf8:	e7b5      	b.n	9001ea66 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001eafa:	b005      	add	sp, #20
9001eafc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eb00:	fffff800 	.word	0xfffff800

9001eb04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001eb04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eb08:	b087      	sub	sp, #28
9001eb0a:	468b      	mov	fp, r1
9001eb0c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001eb10:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001eb12:	9203      	str	r2, [sp, #12]
9001eb14:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001eb18:	6841      	ldr	r1, [r0, #4]
9001eb1a:	9204      	str	r2, [sp, #16]
9001eb1c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001eb20:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001eb24:	fb01 2404 	mla	r4, r1, r4, r2
9001eb28:	6802      	ldr	r2, [r0, #0]
9001eb2a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001eb2e:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001eb32:	3201      	adds	r2, #1
9001eb34:	f022 0201 	bic.w	r2, r2, #1
9001eb38:	9200      	str	r2, [sp, #0]
9001eb3a:	f8d9 2000 	ldr.w	r2, [r9]
9001eb3e:	9201      	str	r2, [sp, #4]
9001eb40:	f1bb 0f00 	cmp.w	fp, #0
9001eb44:	dc03      	bgt.n	9001eb4e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001eb46:	9a03      	ldr	r2, [sp, #12]
9001eb48:	2a00      	cmp	r2, #0
9001eb4a:	f340 816a 	ble.w	9001ee22 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001eb4e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001eb50:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001eb54:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001eb58:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001eb5a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001eb5e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001eb62:	2b00      	cmp	r3, #0
9001eb64:	dd0e      	ble.n	9001eb84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001eb66:	1402      	asrs	r2, r0, #16
9001eb68:	d405      	bmi.n	9001eb76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001eb6a:	42ba      	cmp	r2, r7
9001eb6c:	da03      	bge.n	9001eb76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001eb6e:	140a      	asrs	r2, r1, #16
9001eb70:	d401      	bmi.n	9001eb76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001eb72:	42b2      	cmp	r2, r6
9001eb74:	db07      	blt.n	9001eb86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001eb76:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001eb78:	3b01      	subs	r3, #1
9001eb7a:	3402      	adds	r4, #2
9001eb7c:	4410      	add	r0, r2
9001eb7e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001eb80:	4411      	add	r1, r2
9001eb82:	e7ee      	b.n	9001eb62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001eb84:	d017      	beq.n	9001ebb6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001eb86:	1e5a      	subs	r2, r3, #1
9001eb88:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001eb8a:	fb05 0502 	mla	r5, r5, r2, r0
9001eb8e:	142d      	asrs	r5, r5, #16
9001eb90:	d409      	bmi.n	9001eba6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001eb92:	42bd      	cmp	r5, r7
9001eb94:	da07      	bge.n	9001eba6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001eb96:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001eb98:	fb05 1202 	mla	r2, r5, r2, r1
9001eb9c:	1412      	asrs	r2, r2, #16
9001eb9e:	d402      	bmi.n	9001eba6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001eba0:	42b2      	cmp	r2, r6
9001eba2:	f2c0 80c8 	blt.w	9001ed36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001eba6:	2700      	movs	r7, #0
9001eba8:	19da      	adds	r2, r3, r7
9001ebaa:	2a00      	cmp	r2, #0
9001ebac:	dc3e      	bgt.n	9001ec2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001ebae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ebb2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ebb6:	f1bb 0f00 	cmp.w	fp, #0
9001ebba:	f340 8132 	ble.w	9001ee22 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001ebbe:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ebc2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ebc4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ebc8:	f1bb 0b01 	subs.w	fp, fp, #1
9001ebcc:	eeb0 6a62 	vmov.f32	s12, s5
9001ebd0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ebd4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ebd8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ebdc:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001ebe0:	eeb0 6a43 	vmov.f32	s12, s6
9001ebe4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ebe8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001ebec:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ebf0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ebf4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ebf8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ebfc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ec00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ec04:	ee12 2a90 	vmov	r2, s5
9001ec08:	eef0 2a47 	vmov.f32	s5, s14
9001ec0c:	fb92 f3f3 	sdiv	r3, r2, r3
9001ec10:	ee13 2a10 	vmov	r2, s6
9001ec14:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ec16:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ec18:	eeb0 3a67 	vmov.f32	s6, s15
9001ec1c:	fb92 f3f3 	sdiv	r3, r2, r3
9001ec20:	9a03      	ldr	r2, [sp, #12]
9001ec22:	9314      	str	r3, [sp, #80]	@ 0x50
9001ec24:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ec26:	bf08      	it	eq
9001ec28:	4613      	moveq	r3, r2
9001ec2a:	e789      	b.n	9001eb40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001ec2c:	1405      	asrs	r5, r0, #16
9001ec2e:	d436      	bmi.n	9001ec9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ec30:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001ec34:	42aa      	cmp	r2, r5
9001ec36:	dd32      	ble.n	9001ec9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ec38:	140e      	asrs	r6, r1, #16
9001ec3a:	d430      	bmi.n	9001ec9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ec3c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001ec40:	42b2      	cmp	r2, r6
9001ec42:	dd2c      	ble.n	9001ec9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ec44:	9a00      	ldr	r2, [sp, #0]
9001ec46:	fb06 5502 	mla	r5, r6, r2, r5
9001ec4a:	9e01      	ldr	r6, [sp, #4]
9001ec4c:	086a      	lsrs	r2, r5, #1
9001ec4e:	5cb2      	ldrb	r2, [r6, r2]
9001ec50:	07ee      	lsls	r6, r5, #31
9001ec52:	bf54      	ite	pl
9001ec54:	f002 020f 	andpl.w	r2, r2, #15
9001ec58:	1112      	asrmi	r2, r2, #4
9001ec5a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ec5e:	b2d2      	uxtb	r2, r2
9001ec60:	b1ea      	cbz	r2, 9001ec9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ec62:	9d04      	ldr	r5, [sp, #16]
9001ec64:	436a      	muls	r2, r5
9001ec66:	1c55      	adds	r5, r2, #1
9001ec68:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001ec6c:	4d6e      	ldr	r5, [pc, #440]	@ (9001ee28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001ec6e:	1212      	asrs	r2, r2, #8
9001ec70:	682d      	ldr	r5, [r5, #0]
9001ec72:	2aff      	cmp	r2, #255	@ 0xff
9001ec74:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001ec78:	9605      	str	r6, [sp, #20]
9001ec7a:	d116      	bne.n	9001ecaa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001ec7c:	f06f 0201 	mvn.w	r2, #1
9001ec80:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ec84:	fb02 fc07 	mul.w	ip, r2, r7
9001ec88:	096a      	lsrs	r2, r5, #5
9001ec8a:	f026 0607 	bic.w	r6, r6, #7
9001ec8e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ec92:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ec96:	4316      	orrs	r6, r2
9001ec98:	432e      	orrs	r6, r5
9001ec9a:	f824 600c 	strh.w	r6, [r4, ip]
9001ec9e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001eca0:	3f01      	subs	r7, #1
9001eca2:	4410      	add	r0, r2
9001eca4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001eca6:	4411      	add	r1, r2
9001eca8:	e77e      	b.n	9001eba8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001ecaa:	f06f 0601 	mvn.w	r6, #1
9001ecae:	fa1f fa82 	uxth.w	sl, r2
9001ecb2:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001ecb6:	43d2      	mvns	r2, r2
9001ecb8:	437e      	muls	r6, r7
9001ecba:	b2ed      	uxtb	r5, r5
9001ecbc:	fb1c fc0a 	smulbb	ip, ip, sl
9001ecc0:	b2d2      	uxtb	r2, r2
9001ecc2:	f834 8006 	ldrh.w	r8, [r4, r6]
9001ecc6:	fb15 f50a 	smulbb	r5, r5, sl
9001ecca:	9602      	str	r6, [sp, #8]
9001eccc:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001ecd0:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001ecd4:	fb16 f60a 	smulbb	r6, r6, sl
9001ecd8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001ecdc:	fb0e ce02 	mla	lr, lr, r2, ip
9001ece0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001ece4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ece8:	fa1f fe8e 	uxth.w	lr, lr
9001ecec:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001ecf0:	fa5f f888 	uxtb.w	r8, r8
9001ecf4:	fb0c 6c02 	mla	ip, ip, r2, r6
9001ecf8:	fb08 5502 	mla	r5, r8, r2, r5
9001ecfc:	f10e 0201 	add.w	r2, lr, #1
9001ed00:	fa1f fc8c 	uxth.w	ip, ip
9001ed04:	b2ad      	uxth	r5, r5
9001ed06:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001ed0a:	9a02      	ldr	r2, [sp, #8]
9001ed0c:	1c6e      	adds	r6, r5, #1
9001ed0e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001ed12:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001ed16:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ed1a:	ea46 0e0e 	orr.w	lr, r6, lr
9001ed1e:	f10c 0601 	add.w	r6, ip, #1
9001ed22:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001ed26:	0976      	lsrs	r6, r6, #5
9001ed28:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ed2c:	ea4e 0e06 	orr.w	lr, lr, r6
9001ed30:	f824 e002 	strh.w	lr, [r4, r2]
9001ed34:	e7b3      	b.n	9001ec9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ed36:	f04f 0800 	mov.w	r8, #0
9001ed3a:	eba3 0208 	sub.w	r2, r3, r8
9001ed3e:	2a00      	cmp	r2, #0
9001ed40:	f77f af35 	ble.w	9001ebae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001ed44:	1402      	asrs	r2, r0, #16
9001ed46:	9e00      	ldr	r6, [sp, #0]
9001ed48:	140d      	asrs	r5, r1, #16
9001ed4a:	fb06 2505 	mla	r5, r6, r5, r2
9001ed4e:	9e01      	ldr	r6, [sp, #4]
9001ed50:	086a      	lsrs	r2, r5, #1
9001ed52:	07ed      	lsls	r5, r5, #31
9001ed54:	5cb2      	ldrb	r2, [r6, r2]
9001ed56:	bf54      	ite	pl
9001ed58:	f002 020f 	andpl.w	r2, r2, #15
9001ed5c:	1112      	asrmi	r2, r2, #4
9001ed5e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ed62:	b2d2      	uxtb	r2, r2
9001ed64:	b1c2      	cbz	r2, 9001ed98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001ed66:	9d04      	ldr	r5, [sp, #16]
9001ed68:	436a      	muls	r2, r5
9001ed6a:	1c55      	adds	r5, r2, #1
9001ed6c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001ed70:	4d2d      	ldr	r5, [pc, #180]	@ (9001ee28 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001ed72:	1212      	asrs	r2, r2, #8
9001ed74:	682e      	ldr	r6, [r5, #0]
9001ed76:	2aff      	cmp	r2, #255	@ 0xff
9001ed78:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001ed7c:	d113      	bne.n	9001eda6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001ed7e:	0972      	lsrs	r2, r6, #5
9001ed80:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001ed84:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001ed88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ed8c:	f025 0507 	bic.w	r5, r5, #7
9001ed90:	4315      	orrs	r5, r2
9001ed92:	4335      	orrs	r5, r6
9001ed94:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001ed98:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ed9a:	f108 0801 	add.w	r8, r8, #1
9001ed9e:	4410      	add	r0, r2
9001eda0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001eda2:	4411      	add	r1, r2
9001eda4:	e7c9      	b.n	9001ed3a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001eda6:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001edaa:	fa1f fa82 	uxth.w	sl, r2
9001edae:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001edb2:	43d2      	mvns	r2, r2
9001edb4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001edb8:	fb17 f70a 	smulbb	r7, r7, sl
9001edbc:	b2d2      	uxtb	r2, r2
9001edbe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001edc2:	b2f6      	uxtb	r6, r6
9001edc4:	b2ed      	uxtb	r5, r5
9001edc6:	fb0c 7c02 	mla	ip, ip, r2, r7
9001edca:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001edce:	fb16 f60a 	smulbb	r6, r6, sl
9001edd2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001edd6:	fa1f fc8c 	uxth.w	ip, ip
9001edda:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001edde:	fb15 f50a 	smulbb	r5, r5, sl
9001ede2:	fa5f fe8e 	uxtb.w	lr, lr
9001ede6:	fb0e 6602 	mla	r6, lr, r2, r6
9001edea:	fb07 5702 	mla	r7, r7, r2, r5
9001edee:	f10c 0201 	add.w	r2, ip, #1
9001edf2:	b2b6      	uxth	r6, r6
9001edf4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001edf8:	1c75      	adds	r5, r6, #1
9001edfa:	b2bf      	uxth	r7, r7
9001edfc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ee00:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001ee04:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ee08:	ea45 0c0c 	orr.w	ip, r5, ip
9001ee0c:	1c7d      	adds	r5, r7, #1
9001ee0e:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001ee12:	096d      	lsrs	r5, r5, #5
9001ee14:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001ee18:	ea4c 0c05 	orr.w	ip, ip, r5
9001ee1c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001ee20:	e7ba      	b.n	9001ed98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001ee22:	b007      	add	sp, #28
9001ee24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ee28:	240245b0 	.word	0x240245b0

9001ee2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ee2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ee30:	b087      	sub	sp, #28
9001ee32:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ee36:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001f140 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001ee3a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001ee3c:	9101      	str	r1, [sp, #4]
9001ee3e:	9205      	str	r2, [sp, #20]
9001ee40:	6841      	ldr	r1, [r0, #4]
9001ee42:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001ee46:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001ee4a:	fb01 2404 	mla	r4, r1, r4, r2
9001ee4e:	6802      	ldr	r2, [r0, #0]
9001ee50:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ee54:	f8db 2008 	ldr.w	r2, [fp, #8]
9001ee58:	3201      	adds	r2, #1
9001ee5a:	f022 0201 	bic.w	r2, r2, #1
9001ee5e:	9202      	str	r2, [sp, #8]
9001ee60:	f8db 2000 	ldr.w	r2, [fp]
9001ee64:	9203      	str	r2, [sp, #12]
9001ee66:	9a01      	ldr	r2, [sp, #4]
9001ee68:	2a00      	cmp	r2, #0
9001ee6a:	dc03      	bgt.n	9001ee74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001ee6c:	9a05      	ldr	r2, [sp, #20]
9001ee6e:	2a00      	cmp	r2, #0
9001ee70:	f340 8162 	ble.w	9001f138 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001ee74:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ee76:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001ee7a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ee7e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ee80:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001ee84:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ee88:	2b00      	cmp	r3, #0
9001ee8a:	dd0e      	ble.n	9001eeaa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ee8c:	1402      	asrs	r2, r0, #16
9001ee8e:	d405      	bmi.n	9001ee9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ee90:	42ba      	cmp	r2, r7
9001ee92:	da03      	bge.n	9001ee9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ee94:	140a      	asrs	r2, r1, #16
9001ee96:	d401      	bmi.n	9001ee9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ee98:	42b2      	cmp	r2, r6
9001ee9a:	db07      	blt.n	9001eeac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001ee9c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ee9e:	3b01      	subs	r3, #1
9001eea0:	3402      	adds	r4, #2
9001eea2:	4410      	add	r0, r2
9001eea4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001eea6:	4411      	add	r1, r2
9001eea8:	e7ee      	b.n	9001ee88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001eeaa:	d017      	beq.n	9001eedc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001eeac:	1e5a      	subs	r2, r3, #1
9001eeae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001eeb0:	fb05 0502 	mla	r5, r5, r2, r0
9001eeb4:	142d      	asrs	r5, r5, #16
9001eeb6:	d409      	bmi.n	9001eecc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001eeb8:	42bd      	cmp	r5, r7
9001eeba:	da07      	bge.n	9001eecc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001eebc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001eebe:	fb05 1202 	mla	r2, r5, r2, r1
9001eec2:	1412      	asrs	r2, r2, #16
9001eec4:	d402      	bmi.n	9001eecc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001eec6:	42b2      	cmp	r2, r6
9001eec8:	f2c0 80c3 	blt.w	9001f052 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001eecc:	2500      	movs	r5, #0
9001eece:	195a      	adds	r2, r3, r5
9001eed0:	2a00      	cmp	r2, #0
9001eed2:	dc3f      	bgt.n	9001ef54 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001eed4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001eed8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001eedc:	9b01      	ldr	r3, [sp, #4]
9001eede:	2b00      	cmp	r3, #0
9001eee0:	f340 812a 	ble.w	9001f138 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001eee4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001eee8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001eeea:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001eeee:	eeb0 6a62 	vmov.f32	s12, s5
9001eef2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001eef6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001eefa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eefe:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001ef02:	eeb0 6a43 	vmov.f32	s12, s6
9001ef06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ef0a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001ef0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ef12:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ef16:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ef1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ef1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ef22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ef26:	ee12 2a90 	vmov	r2, s5
9001ef2a:	eef0 2a47 	vmov.f32	s5, s14
9001ef2e:	fb92 f3f3 	sdiv	r3, r2, r3
9001ef32:	ee13 2a10 	vmov	r2, s6
9001ef36:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ef38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ef3a:	eeb0 3a67 	vmov.f32	s6, s15
9001ef3e:	fb92 f3f3 	sdiv	r3, r2, r3
9001ef42:	9314      	str	r3, [sp, #80]	@ 0x50
9001ef44:	9b01      	ldr	r3, [sp, #4]
9001ef46:	9a05      	ldr	r2, [sp, #20]
9001ef48:	3b01      	subs	r3, #1
9001ef4a:	9301      	str	r3, [sp, #4]
9001ef4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ef4e:	bf08      	it	eq
9001ef50:	4613      	moveq	r3, r2
9001ef52:	e788      	b.n	9001ee66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001ef54:	1406      	asrs	r6, r0, #16
9001ef56:	d42c      	bmi.n	9001efb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef58:	f8db 2008 	ldr.w	r2, [fp, #8]
9001ef5c:	42b2      	cmp	r2, r6
9001ef5e:	dd28      	ble.n	9001efb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef60:	140f      	asrs	r7, r1, #16
9001ef62:	d426      	bmi.n	9001efb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef64:	f8db 200c 	ldr.w	r2, [fp, #12]
9001ef68:	42ba      	cmp	r2, r7
9001ef6a:	dd22      	ble.n	9001efb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef6c:	9a02      	ldr	r2, [sp, #8]
9001ef6e:	fb07 6602 	mla	r6, r7, r2, r6
9001ef72:	9f03      	ldr	r7, [sp, #12]
9001ef74:	0872      	lsrs	r2, r6, #1
9001ef76:	07f6      	lsls	r6, r6, #31
9001ef78:	5cba      	ldrb	r2, [r7, r2]
9001ef7a:	bf54      	ite	pl
9001ef7c:	f002 020f 	andpl.w	r2, r2, #15
9001ef80:	1112      	asrmi	r2, r2, #4
9001ef82:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ef86:	b2d2      	uxtb	r2, r2
9001ef88:	2aff      	cmp	r2, #255	@ 0xff
9001ef8a:	d118      	bne.n	9001efbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001ef8c:	f06f 0601 	mvn.w	r6, #1
9001ef90:	f8d8 2000 	ldr.w	r2, [r8]
9001ef94:	fb06 f705 	mul.w	r7, r6, r5
9001ef98:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001ef9c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001efa0:	0956      	lsrs	r6, r2, #5
9001efa2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001efa6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001efaa:	ea4c 0606 	orr.w	r6, ip, r6
9001efae:	4316      	orrs	r6, r2
9001efb0:	53e6      	strh	r6, [r4, r7]
9001efb2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001efb4:	3d01      	subs	r5, #1
9001efb6:	4410      	add	r0, r2
9001efb8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001efba:	4411      	add	r1, r2
9001efbc:	e787      	b.n	9001eece <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001efbe:	2a00      	cmp	r2, #0
9001efc0:	d0f7      	beq.n	9001efb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001efc2:	f06f 0601 	mvn.w	r6, #1
9001efc6:	f8d8 c000 	ldr.w	ip, [r8]
9001efca:	fa1f f982 	uxth.w	r9, r2
9001efce:	43d2      	mvns	r2, r2
9001efd0:	436e      	muls	r6, r5
9001efd2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001efd6:	b2d2      	uxtb	r2, r2
9001efd8:	f834 e006 	ldrh.w	lr, [r4, r6]
9001efdc:	fb1a fa09 	smulbb	sl, sl, r9
9001efe0:	9604      	str	r6, [sp, #16]
9001efe2:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001efe6:	ea4f 272e 	mov.w	r7, lr, asr #8
9001efea:	fb16 f609 	smulbb	r6, r6, r9
9001efee:	fa5f fc8c 	uxtb.w	ip, ip
9001eff2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001eff6:	fb1c fc09 	smulbb	ip, ip, r9
9001effa:	fb07 6702 	mla	r7, r7, r2, r6
9001effe:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001f002:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f006:	b2bf      	uxth	r7, r7
9001f008:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001f00c:	fa5f fe8e 	uxtb.w	lr, lr
9001f010:	fb06 a602 	mla	r6, r6, r2, sl
9001f014:	fb0e cc02 	mla	ip, lr, r2, ip
9001f018:	1c7a      	adds	r2, r7, #1
9001f01a:	b2b6      	uxth	r6, r6
9001f01c:	fa1f fc8c 	uxth.w	ip, ip
9001f020:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001f024:	9a04      	ldr	r2, [sp, #16]
9001f026:	f10c 0a01 	add.w	sl, ip, #1
9001f02a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001f02e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001f032:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f036:	ea4a 0707 	orr.w	r7, sl, r7
9001f03a:	f106 0a01 	add.w	sl, r6, #1
9001f03e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f042:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f046:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f04a:	ea47 070a 	orr.w	r7, r7, sl
9001f04e:	52a7      	strh	r7, [r4, r2]
9001f050:	e7af      	b.n	9001efb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f052:	f04f 0e00 	mov.w	lr, #0
9001f056:	eba3 020e 	sub.w	r2, r3, lr
9001f05a:	2a00      	cmp	r2, #0
9001f05c:	f77f af3a 	ble.w	9001eed4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001f060:	1402      	asrs	r2, r0, #16
9001f062:	9e02      	ldr	r6, [sp, #8]
9001f064:	140d      	asrs	r5, r1, #16
9001f066:	fb06 2505 	mla	r5, r6, r5, r2
9001f06a:	9e03      	ldr	r6, [sp, #12]
9001f06c:	086a      	lsrs	r2, r5, #1
9001f06e:	07ed      	lsls	r5, r5, #31
9001f070:	5cb2      	ldrb	r2, [r6, r2]
9001f072:	bf54      	ite	pl
9001f074:	f002 020f 	andpl.w	r2, r2, #15
9001f078:	1112      	asrmi	r2, r2, #4
9001f07a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001f07e:	b2d2      	uxtb	r2, r2
9001f080:	2aff      	cmp	r2, #255	@ 0xff
9001f082:	d115      	bne.n	9001f0b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001f084:	f8d8 5000 	ldr.w	r5, [r8]
9001f088:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001f08c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001f090:	096a      	lsrs	r2, r5, #5
9001f092:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001f096:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f09a:	4332      	orrs	r2, r6
9001f09c:	432a      	orrs	r2, r5
9001f09e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001f0a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f0a4:	f10e 0e01 	add.w	lr, lr, #1
9001f0a8:	4410      	add	r0, r2
9001f0aa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f0ac:	4411      	add	r1, r2
9001f0ae:	e7d2      	b.n	9001f056 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001f0b0:	2a00      	cmp	r2, #0
9001f0b2:	d0f6      	beq.n	9001f0a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001f0b4:	f8d8 7000 	ldr.w	r7, [r8]
9001f0b8:	fa1f f982 	uxth.w	r9, r2
9001f0bc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001f0c0:	43d2      	mvns	r2, r2
9001f0c2:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001f0c6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001f0ca:	ea4f 262c 	mov.w	r6, ip, asr #8
9001f0ce:	fb15 f509 	smulbb	r5, r5, r9
9001f0d2:	b2d2      	uxtb	r2, r2
9001f0d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f0d8:	b2ff      	uxtb	r7, r7
9001f0da:	fb1a fa09 	smulbb	sl, sl, r9
9001f0de:	fb06 5602 	mla	r6, r6, r2, r5
9001f0e2:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001f0e6:	fb17 f709 	smulbb	r7, r7, r9
9001f0ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f0ee:	b2b6      	uxth	r6, r6
9001f0f0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f0f4:	fa5f fc8c 	uxtb.w	ip, ip
9001f0f8:	fb05 a502 	mla	r5, r5, r2, sl
9001f0fc:	fb0c 7702 	mla	r7, ip, r2, r7
9001f100:	1c72      	adds	r2, r6, #1
9001f102:	b2ad      	uxth	r5, r5
9001f104:	b2bf      	uxth	r7, r7
9001f106:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001f10a:	f107 0a01 	add.w	sl, r7, #1
9001f10e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f112:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001f116:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f11a:	ea4a 0606 	orr.w	r6, sl, r6
9001f11e:	f105 0a01 	add.w	sl, r5, #1
9001f122:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f126:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f12a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f12e:	ea46 060a 	orr.w	r6, r6, sl
9001f132:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001f136:	e7b4      	b.n	9001f0a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001f138:	b007      	add	sp, #28
9001f13a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f13e:	bf00      	nop
9001f140:	240245b0 	.word	0x240245b0

9001f144 <_ZN8touchgfx8LCD16bppD1Ev>:
9001f144:	4770      	bx	lr

9001f146 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001f146:	4770      	bx	lr

9001f148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001f148:	4770      	bx	lr

9001f14a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001f14a:	4770      	bx	lr

9001f14c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001f14c:	4770      	bx	lr

9001f14e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001f14e:	4770      	bx	lr

9001f150 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001f150:	4770      	bx	lr

9001f152 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001f152:	4770      	bx	lr

9001f154 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001f154:	4770      	bx	lr

9001f156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001f156:	4770      	bx	lr

9001f158 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001f158:	4770      	bx	lr

9001f15a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001f15a:	4770      	bx	lr

9001f15c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001f15c:	4770      	bx	lr

9001f15e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001f15e:	4770      	bx	lr

9001f160 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001f160:	4770      	bx	lr

9001f162 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001f162:	4770      	bx	lr

9001f164 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001f164:	4770      	bx	lr

9001f166 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001f166:	4770      	bx	lr

9001f168 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001f168:	4770      	bx	lr

9001f16a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001f16a:	4770      	bx	lr

9001f16c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001f16c:	4770      	bx	lr

9001f16e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001f16e:	4770      	bx	lr

9001f170 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001f170:	4770      	bx	lr

9001f172 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001f172:	4770      	bx	lr

9001f174 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001f174:	4770      	bx	lr

9001f176 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001f176:	4770      	bx	lr

9001f178 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001f178:	4770      	bx	lr

9001f17a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001f17a:	4770      	bx	lr

9001f17c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001f17c:	4770      	bx	lr

9001f17e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001f17e:	4770      	bx	lr

9001f180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001f180:	4770      	bx	lr

9001f182 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001f182:	4770      	bx	lr

9001f184 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001f184:	4770      	bx	lr

9001f186 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001f186:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f18a:	b088      	sub	sp, #32
9001f18c:	4606      	mov	r6, r0
9001f18e:	4688      	mov	r8, r1
9001f190:	4691      	mov	r9, r2
9001f192:	ac08      	add	r4, sp, #32
9001f194:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001f198:	4620      	mov	r0, r4
9001f19a:	f7fd fc33 	bl	9001ca04 <_ZNK8touchgfx6Bitmap7getDataEv>
9001f19e:	6833      	ldr	r3, [r6, #0]
9001f1a0:	4605      	mov	r5, r0
9001f1a2:	4620      	mov	r0, r4
9001f1a4:	699f      	ldr	r7, [r3, #24]
9001f1a6:	f7fd fb3b 	bl	9001c820 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001f1aa:	4682      	mov	sl, r0
9001f1ac:	4620      	mov	r0, r4
9001f1ae:	f7fd fb6b 	bl	9001c888 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001f1b2:	9500      	str	r5, [sp, #0]
9001f1b4:	464b      	mov	r3, r9
9001f1b6:	4642      	mov	r2, r8
9001f1b8:	4631      	mov	r1, r6
9001f1ba:	e9cd a001 	strd	sl, r0, [sp, #4]
9001f1be:	a806      	add	r0, sp, #24
9001f1c0:	47b8      	blx	r7
9001f1c2:	4628      	mov	r0, r5
9001f1c4:	b008      	add	sp, #32
9001f1c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001f1cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001f1cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001f1d0:	2300      	movs	r3, #0
9001f1d2:	9300      	str	r3, [sp, #0]
9001f1d4:	4b3d      	ldr	r3, [pc, #244]	@ (9001f2cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001f1d6:	781b      	ldrb	r3, [r3, #0]
9001f1d8:	2b00      	cmp	r3, #0
9001f1da:	d137      	bne.n	9001f24c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001f1dc:	4a3c      	ldr	r2, [pc, #240]	@ (9001f2d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001f1de:	f9b2 2000 	ldrsh.w	r2, [r2]
9001f1e2:	f8ad 2004 	strh.w	r2, [sp, #4]
9001f1e6:	2b00      	cmp	r3, #0
9001f1e8:	d132      	bne.n	9001f250 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001f1ea:	4b3a      	ldr	r3, [pc, #232]	@ (9001f2d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001f1ec:	f9b3 3000 	ldrsh.w	r3, [r3]
9001f1f0:	ac02      	add	r4, sp, #8
9001f1f2:	6808      	ldr	r0, [r1, #0]
9001f1f4:	f8ad 3006 	strh.w	r3, [sp, #6]
9001f1f8:	ab02      	add	r3, sp, #8
9001f1fa:	6849      	ldr	r1, [r1, #4]
9001f1fc:	4d36      	ldr	r5, [pc, #216]	@ (9001f2d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001f1fe:	c303      	stmia	r3!, {r0, r1}
9001f200:	4669      	mov	r1, sp
9001f202:	4620      	mov	r0, r4
9001f204:	f7fa f932 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f208:	4668      	mov	r0, sp
9001f20a:	f7fa f907 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f20e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001f212:	f8bd 2000 	ldrh.w	r2, [sp]
9001f216:	462f      	mov	r7, r5
9001f218:	6828      	ldr	r0, [r5, #0]
9001f21a:	4413      	add	r3, r2
9001f21c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001f220:	f8ad 3008 	strh.w	r3, [sp, #8]
9001f224:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001f228:	4413      	add	r3, r2
9001f22a:	f8ad 300a 	strh.w	r3, [sp, #10]
9001f22e:	6803      	ldr	r3, [r0, #0]
9001f230:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f232:	4798      	blx	r3
9001f234:	f010 0f01 	tst.w	r0, #1
9001f238:	d00c      	beq.n	9001f254 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001f23a:	6828      	ldr	r0, [r5, #0]
9001f23c:	6803      	ldr	r3, [r0, #0]
9001f23e:	e894 0006 	ldmia.w	r4, {r1, r2}
9001f242:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001f244:	4798      	blx	r3
9001f246:	b004      	add	sp, #16
9001f248:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f24c:	4a21      	ldr	r2, [pc, #132]	@ (9001f2d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001f24e:	e7c6      	b.n	9001f1de <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001f250:	4b1f      	ldr	r3, [pc, #124]	@ (9001f2d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001f252:	e7cb      	b.n	9001f1ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001f254:	6838      	ldr	r0, [r7, #0]
9001f256:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001f25a:	6803      	ldr	r3, [r0, #0]
9001f25c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001f260:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001f264:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f266:	4798      	blx	r3
9001f268:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001f26c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001f270:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001f274:	fb16 3602 	smlabb	r6, r6, r2, r3
9001f278:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001f27c:	6838      	ldr	r0, [r7, #0]
9001f27e:	6803      	ldr	r3, [r0, #0]
9001f280:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f282:	4798      	blx	r3
9001f284:	4a12      	ldr	r2, [pc, #72]	@ (9001f2d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001f286:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001f28a:	8813      	ldrh	r3, [r2, #0]
9001f28c:	4691      	mov	r9, r2
9001f28e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001f292:	435d      	muls	r5, r3
9001f294:	fb03 1404 	mla	r4, r3, r4, r1
9001f298:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001f29c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001f2a0:	6838      	ldr	r0, [r7, #0]
9001f2a2:	42ac      	cmp	r4, r5
9001f2a4:	6803      	ldr	r3, [r0, #0]
9001f2a6:	d20e      	bcs.n	9001f2c6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001f2a8:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
9001f2ac:	4632      	mov	r2, r6
9001f2ae:	4643      	mov	r3, r8
9001f2b0:	4621      	mov	r1, r4
9001f2b2:	47d0      	blx	sl
9001f2b4:	f8b9 3000 	ldrh.w	r3, [r9]
9001f2b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f2bc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001f2c0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001f2c4:	e7ec      	b.n	9001f2a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001f2c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f2c8:	4798      	blx	r3
9001f2ca:	e7bc      	b.n	9001f246 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001f2cc:	24024596 	.word	0x24024596
9001f2d0:	24024598 	.word	0x24024598
9001f2d4:	2402459a 	.word	0x2402459a
9001f2d8:	240245a0 	.word	0x240245a0

9001f2dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001f2dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f2e0:	b08b      	sub	sp, #44	@ 0x2c
9001f2e2:	460f      	mov	r7, r1
9001f2e4:	4616      	mov	r6, r2
9001f2e6:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001f2ea:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001f2ee:	f1bb 0f00 	cmp.w	fp, #0
9001f2f2:	d04a      	beq.n	9001f38a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001f2f4:	6810      	ldr	r0, [r2, #0]
9001f2f6:	ad06      	add	r5, sp, #24
9001f2f8:	6851      	ldr	r1, [r2, #4]
9001f2fa:	c503      	stmia	r5!, {r0, r1}
9001f2fc:	6818      	ldr	r0, [r3, #0]
9001f2fe:	ad08      	add	r5, sp, #32
9001f300:	6859      	ldr	r1, [r3, #4]
9001f302:	c503      	stmia	r5!, {r0, r1}
9001f304:	a806      	add	r0, sp, #24
9001f306:	f7fa f889 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f30a:	4631      	mov	r1, r6
9001f30c:	a808      	add	r0, sp, #32
9001f30e:	f7fa f8ad 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f312:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001f316:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001f31a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001f31e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001f322:	fb16 2103 	smlabb	r1, r6, r3, r2
9001f326:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001f32a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001f32e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001f332:	4f5f      	ldr	r7, [pc, #380]	@ (9001f4b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001f334:	440a      	add	r2, r1
9001f336:	6838      	ldr	r0, [r7, #0]
9001f338:	46b9      	mov	r9, r7
9001f33a:	f8ad 2020 	strh.w	r2, [sp, #32]
9001f33e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001f342:	4413      	add	r3, r2
9001f344:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001f348:	6803      	ldr	r3, [r0, #0]
9001f34a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f34c:	4798      	blx	r3
9001f34e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001f352:	d11d      	bne.n	9001f390 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001f354:	b9fc      	cbnz	r4, 9001f396 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001f356:	f010 0f01 	tst.w	r0, #1
9001f35a:	d01c      	beq.n	9001f396 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001f35c:	f8d9 0000 	ldr.w	r0, [r9]
9001f360:	2700      	movs	r7, #0
9001f362:	b2ad      	uxth	r5, r5
9001f364:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001f368:	6801      	ldr	r1, [r0, #0]
9001f36a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001f36e:	f8cd b00c 	str.w	fp, [sp, #12]
9001f372:	9501      	str	r5, [sp, #4]
9001f374:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001f378:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001f37c:	9402      	str	r4, [sp, #8]
9001f37e:	fa1f f488 	uxth.w	r4, r8
9001f382:	9400      	str	r4, [sp, #0]
9001f384:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
9001f386:	4631      	mov	r1, r6
9001f388:	47a0      	blx	r4
9001f38a:	b00b      	add	sp, #44	@ 0x2c
9001f38c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f390:	f010 0f04 	tst.w	r0, #4
9001f394:	e7e1      	b.n	9001f35a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001f396:	f8d9 0000 	ldr.w	r0, [r9]
9001f39a:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001f39e:	6803      	ldr	r3, [r0, #0]
9001f3a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f3a2:	4798      	blx	r3
9001f3a4:	4b43      	ldr	r3, [pc, #268]	@ (9001f4b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001f3a6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001f3aa:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001f3ae:	881a      	ldrh	r2, [r3, #0]
9001f3b0:	469a      	mov	sl, r3
9001f3b2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001f3b6:	fb05 f502 	mul.w	r5, r5, r2
9001f3ba:	fb02 1404 	mla	r4, r2, r4, r1
9001f3be:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001f3c2:	d059      	beq.n	9001f478 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001f3c4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001f3c8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001f3cc:	fa1f f28b 	uxth.w	r2, fp
9001f3d0:	469e      	mov	lr, r3
9001f3d2:	fa1f f989 	uxth.w	r9, r9
9001f3d6:	42ac      	cmp	r4, r5
9001f3d8:	d264      	bcs.n	9001f4a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001f3da:	eb04 0a07 	add.w	sl, r4, r7
9001f3de:	4554      	cmp	r4, sl
9001f3e0:	d23d      	bcs.n	9001f45e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001f3e2:	8821      	ldrh	r1, [r4, #0]
9001f3e4:	f836 3b02 	ldrh.w	r3, [r6], #2
9001f3e8:	1208      	asrs	r0, r1, #8
9001f3ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001f3ee:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001f3f2:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001f3f6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f3fa:	00c9      	lsls	r1, r1, #3
9001f3fc:	fb10 f009 	smulbb	r0, r0, r9
9001f400:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001f404:	b2c9      	uxtb	r1, r1
9001f406:	fb0c 0c02 	mla	ip, ip, r2, r0
9001f40a:	10d8      	asrs	r0, r3, #3
9001f40c:	fb1b fb09 	smulbb	fp, fp, r9
9001f410:	00db      	lsls	r3, r3, #3
9001f412:	fa1f fc8c 	uxth.w	ip, ip
9001f416:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001f41a:	fb11 f109 	smulbb	r1, r1, r9
9001f41e:	b2db      	uxtb	r3, r3
9001f420:	fb00 b002 	mla	r0, r0, r2, fp
9001f424:	f10c 0b01 	add.w	fp, ip, #1
9001f428:	fb03 1302 	mla	r3, r3, r2, r1
9001f42c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001f430:	b29b      	uxth	r3, r3
9001f432:	b280      	uxth	r0, r0
9001f434:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001f438:	f103 0c01 	add.w	ip, r3, #1
9001f43c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001f440:	1c43      	adds	r3, r0, #1
9001f442:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001f446:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f44a:	0940      	lsrs	r0, r0, #5
9001f44c:	ea4c 0c0b 	orr.w	ip, ip, fp
9001f450:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001f454:	ea4c 0c00 	orr.w	ip, ip, r0
9001f458:	f824 cb02 	strh.w	ip, [r4], #2
9001f45c:	e7bf      	b.n	9001f3de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001f45e:	f8be 3000 	ldrh.w	r3, [lr]
9001f462:	eba3 0308 	sub.w	r3, r3, r8
9001f466:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f46a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001f46e:	eba3 0308 	sub.w	r3, r3, r8
9001f472:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001f476:	e7ae      	b.n	9001f3d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001f478:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001f47c:	f8d9 0000 	ldr.w	r0, [r9]
9001f480:	42ac      	cmp	r4, r5
9001f482:	6803      	ldr	r3, [r0, #0]
9001f484:	d20e      	bcs.n	9001f4a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001f486:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
9001f48a:	4632      	mov	r2, r6
9001f48c:	463b      	mov	r3, r7
9001f48e:	4621      	mov	r1, r4
9001f490:	47c0      	blx	r8
9001f492:	f8ba 3000 	ldrh.w	r3, [sl]
9001f496:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f49a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001f49e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001f4a2:	e7eb      	b.n	9001f47c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001f4a4:	4b02      	ldr	r3, [pc, #8]	@ (9001f4b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001f4a6:	6818      	ldr	r0, [r3, #0]
9001f4a8:	6803      	ldr	r3, [r0, #0]
9001f4aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f4ac:	4798      	blx	r3
9001f4ae:	e76c      	b.n	9001f38a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001f4b0:	240245a0 	.word	0x240245a0
9001f4b4:	24024598 	.word	0x24024598

9001f4b8 <_ZN8touchgfx8LCD16bppD0Ev>:
9001f4b8:	b510      	push	{r4, lr}
9001f4ba:	4604      	mov	r4, r0
9001f4bc:	218c      	movs	r1, #140	@ 0x8c
9001f4be:	f00c fb6c 	bl	9002bb9a <_ZdlPvj>
9001f4c2:	4620      	mov	r0, r4
9001f4c4:	bd10      	pop	{r4, pc}

9001f4c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001f4c6:	b510      	push	{r4, lr}
9001f4c8:	4604      	mov	r4, r0
9001f4ca:	2104      	movs	r1, #4
9001f4cc:	f00c fb65 	bl	9002bb9a <_ZdlPvj>
9001f4d0:	4620      	mov	r0, r4
9001f4d2:	bd10      	pop	{r4, pc}

9001f4d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001f4d4:	b510      	push	{r4, lr}
9001f4d6:	4604      	mov	r4, r0
9001f4d8:	2104      	movs	r1, #4
9001f4da:	f00c fb5e 	bl	9002bb9a <_ZdlPvj>
9001f4de:	4620      	mov	r0, r4
9001f4e0:	bd10      	pop	{r4, pc}

9001f4e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001f4e2:	b510      	push	{r4, lr}
9001f4e4:	4604      	mov	r4, r0
9001f4e6:	f640 0144 	movw	r1, #2116	@ 0x844
9001f4ea:	f00c fb56 	bl	9002bb9a <_ZdlPvj>
9001f4ee:	4620      	mov	r0, r4
9001f4f0:	bd10      	pop	{r4, pc}

9001f4f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001f4f2:	b510      	push	{r4, lr}
9001f4f4:	4604      	mov	r4, r0
9001f4f6:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001f4fa:	f00c fb4e 	bl	9002bb9a <_ZdlPvj>
9001f4fe:	4620      	mov	r0, r4
9001f500:	bd10      	pop	{r4, pc}

9001f502 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001f502:	b510      	push	{r4, lr}
9001f504:	4604      	mov	r4, r0
9001f506:	2104      	movs	r1, #4
9001f508:	f00c fb47 	bl	9002bb9a <_ZdlPvj>
9001f50c:	4620      	mov	r0, r4
9001f50e:	bd10      	pop	{r4, pc}

9001f510 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001f510:	b510      	push	{r4, lr}
9001f512:	4604      	mov	r4, r0
9001f514:	2104      	movs	r1, #4
9001f516:	f00c fb40 	bl	9002bb9a <_ZdlPvj>
9001f51a:	4620      	mov	r0, r4
9001f51c:	bd10      	pop	{r4, pc}

9001f51e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001f51e:	b510      	push	{r4, lr}
9001f520:	4604      	mov	r4, r0
9001f522:	2104      	movs	r1, #4
9001f524:	f00c fb39 	bl	9002bb9a <_ZdlPvj>
9001f528:	4620      	mov	r0, r4
9001f52a:	bd10      	pop	{r4, pc}

9001f52c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001f52c:	b510      	push	{r4, lr}
9001f52e:	4604      	mov	r4, r0
9001f530:	2104      	movs	r1, #4
9001f532:	f00c fb32 	bl	9002bb9a <_ZdlPvj>
9001f536:	4620      	mov	r0, r4
9001f538:	bd10      	pop	{r4, pc}

9001f53a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001f53a:	b510      	push	{r4, lr}
9001f53c:	4604      	mov	r4, r0
9001f53e:	2104      	movs	r1, #4
9001f540:	f00c fb2b 	bl	9002bb9a <_ZdlPvj>
9001f544:	4620      	mov	r0, r4
9001f546:	bd10      	pop	{r4, pc}

9001f548 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001f548:	b510      	push	{r4, lr}
9001f54a:	4604      	mov	r4, r0
9001f54c:	2104      	movs	r1, #4
9001f54e:	f00c fb24 	bl	9002bb9a <_ZdlPvj>
9001f552:	4620      	mov	r0, r4
9001f554:	bd10      	pop	{r4, pc}

9001f556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001f556:	b510      	push	{r4, lr}
9001f558:	4604      	mov	r4, r0
9001f55a:	2104      	movs	r1, #4
9001f55c:	f00c fb1d 	bl	9002bb9a <_ZdlPvj>
9001f560:	4620      	mov	r0, r4
9001f562:	bd10      	pop	{r4, pc}

9001f564 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001f564:	b510      	push	{r4, lr}
9001f566:	4604      	mov	r4, r0
9001f568:	2104      	movs	r1, #4
9001f56a:	f00c fb16 	bl	9002bb9a <_ZdlPvj>
9001f56e:	4620      	mov	r0, r4
9001f570:	bd10      	pop	{r4, pc}

9001f572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001f572:	b510      	push	{r4, lr}
9001f574:	4604      	mov	r4, r0
9001f576:	2104      	movs	r1, #4
9001f578:	f00c fb0f 	bl	9002bb9a <_ZdlPvj>
9001f57c:	4620      	mov	r0, r4
9001f57e:	bd10      	pop	{r4, pc}

9001f580 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001f580:	b510      	push	{r4, lr}
9001f582:	4604      	mov	r4, r0
9001f584:	2104      	movs	r1, #4
9001f586:	f00c fb08 	bl	9002bb9a <_ZdlPvj>
9001f58a:	4620      	mov	r0, r4
9001f58c:	bd10      	pop	{r4, pc}

9001f58e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001f58e:	b510      	push	{r4, lr}
9001f590:	4604      	mov	r4, r0
9001f592:	2104      	movs	r1, #4
9001f594:	f00c fb01 	bl	9002bb9a <_ZdlPvj>
9001f598:	4620      	mov	r0, r4
9001f59a:	bd10      	pop	{r4, pc}

9001f59c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001f59c:	b510      	push	{r4, lr}
9001f59e:	4604      	mov	r4, r0
9001f5a0:	2104      	movs	r1, #4
9001f5a2:	f00c fafa 	bl	9002bb9a <_ZdlPvj>
9001f5a6:	4620      	mov	r0, r4
9001f5a8:	bd10      	pop	{r4, pc}

9001f5aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001f5aa:	b510      	push	{r4, lr}
9001f5ac:	4604      	mov	r4, r0
9001f5ae:	2104      	movs	r1, #4
9001f5b0:	f00c faf3 	bl	9002bb9a <_ZdlPvj>
9001f5b4:	4620      	mov	r0, r4
9001f5b6:	bd10      	pop	{r4, pc}

9001f5b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001f5b8:	b510      	push	{r4, lr}
9001f5ba:	4604      	mov	r4, r0
9001f5bc:	2104      	movs	r1, #4
9001f5be:	f00c faec 	bl	9002bb9a <_ZdlPvj>
9001f5c2:	4620      	mov	r0, r4
9001f5c4:	bd10      	pop	{r4, pc}

9001f5c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001f5c6:	b510      	push	{r4, lr}
9001f5c8:	4604      	mov	r4, r0
9001f5ca:	2104      	movs	r1, #4
9001f5cc:	f00c fae5 	bl	9002bb9a <_ZdlPvj>
9001f5d0:	4620      	mov	r0, r4
9001f5d2:	bd10      	pop	{r4, pc}

9001f5d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001f5d4:	b510      	push	{r4, lr}
9001f5d6:	4604      	mov	r4, r0
9001f5d8:	2104      	movs	r1, #4
9001f5da:	f00c fade 	bl	9002bb9a <_ZdlPvj>
9001f5de:	4620      	mov	r0, r4
9001f5e0:	bd10      	pop	{r4, pc}

9001f5e2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001f5e2:	b510      	push	{r4, lr}
9001f5e4:	4604      	mov	r4, r0
9001f5e6:	2104      	movs	r1, #4
9001f5e8:	f00c fad7 	bl	9002bb9a <_ZdlPvj>
9001f5ec:	4620      	mov	r0, r4
9001f5ee:	bd10      	pop	{r4, pc}

9001f5f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001f5f0:	b510      	push	{r4, lr}
9001f5f2:	4604      	mov	r4, r0
9001f5f4:	2104      	movs	r1, #4
9001f5f6:	f00c fad0 	bl	9002bb9a <_ZdlPvj>
9001f5fa:	4620      	mov	r0, r4
9001f5fc:	bd10      	pop	{r4, pc}

9001f5fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001f5fe:	b510      	push	{r4, lr}
9001f600:	4604      	mov	r4, r0
9001f602:	2104      	movs	r1, #4
9001f604:	f00c fac9 	bl	9002bb9a <_ZdlPvj>
9001f608:	4620      	mov	r0, r4
9001f60a:	bd10      	pop	{r4, pc}

9001f60c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001f60c:	b510      	push	{r4, lr}
9001f60e:	4604      	mov	r4, r0
9001f610:	2104      	movs	r1, #4
9001f612:	f00c fac2 	bl	9002bb9a <_ZdlPvj>
9001f616:	4620      	mov	r0, r4
9001f618:	bd10      	pop	{r4, pc}

9001f61a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001f61a:	b510      	push	{r4, lr}
9001f61c:	4604      	mov	r4, r0
9001f61e:	2104      	movs	r1, #4
9001f620:	f00c fabb 	bl	9002bb9a <_ZdlPvj>
9001f624:	4620      	mov	r0, r4
9001f626:	bd10      	pop	{r4, pc}

9001f628 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001f628:	b510      	push	{r4, lr}
9001f62a:	4604      	mov	r4, r0
9001f62c:	2104      	movs	r1, #4
9001f62e:	f00c fab4 	bl	9002bb9a <_ZdlPvj>
9001f632:	4620      	mov	r0, r4
9001f634:	bd10      	pop	{r4, pc}

9001f636 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001f636:	b510      	push	{r4, lr}
9001f638:	4604      	mov	r4, r0
9001f63a:	2104      	movs	r1, #4
9001f63c:	f00c faad 	bl	9002bb9a <_ZdlPvj>
9001f640:	4620      	mov	r0, r4
9001f642:	bd10      	pop	{r4, pc}

9001f644 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001f644:	b510      	push	{r4, lr}
9001f646:	4604      	mov	r4, r0
9001f648:	2104      	movs	r1, #4
9001f64a:	f00c faa6 	bl	9002bb9a <_ZdlPvj>
9001f64e:	4620      	mov	r0, r4
9001f650:	bd10      	pop	{r4, pc}

9001f652 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001f652:	b510      	push	{r4, lr}
9001f654:	4604      	mov	r4, r0
9001f656:	2104      	movs	r1, #4
9001f658:	f00c fa9f 	bl	9002bb9a <_ZdlPvj>
9001f65c:	4620      	mov	r0, r4
9001f65e:	bd10      	pop	{r4, pc}

9001f660 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001f660:	b510      	push	{r4, lr}
9001f662:	4604      	mov	r4, r0
9001f664:	2104      	movs	r1, #4
9001f666:	f00c fa98 	bl	9002bb9a <_ZdlPvj>
9001f66a:	4620      	mov	r0, r4
9001f66c:	bd10      	pop	{r4, pc}

9001f66e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001f66e:	b510      	push	{r4, lr}
9001f670:	4604      	mov	r4, r0
9001f672:	2104      	movs	r1, #4
9001f674:	f00c fa91 	bl	9002bb9a <_ZdlPvj>
9001f678:	4620      	mov	r0, r4
9001f67a:	bd10      	pop	{r4, pc}

9001f67c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001f67c:	b510      	push	{r4, lr}
9001f67e:	4604      	mov	r4, r0
9001f680:	2104      	movs	r1, #4
9001f682:	f00c fa8a 	bl	9002bb9a <_ZdlPvj>
9001f686:	4620      	mov	r0, r4
9001f688:	bd10      	pop	{r4, pc}
	...

9001f68c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001f68c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f690:	b08f      	sub	sp, #60	@ 0x3c
9001f692:	4616      	mov	r6, r2
9001f694:	4682      	mov	sl, r0
9001f696:	460d      	mov	r5, r1
9001f698:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001f69c:	9205      	str	r2, [sp, #20]
9001f69e:	2a00      	cmp	r2, #0
9001f6a0:	f000 82b7 	beq.w	9001fc12 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001f6a4:	6830      	ldr	r0, [r6, #0]
9001f6a6:	ac0a      	add	r4, sp, #40	@ 0x28
9001f6a8:	6871      	ldr	r1, [r6, #4]
9001f6aa:	c403      	stmia	r4!, {r0, r1}
9001f6ac:	6818      	ldr	r0, [r3, #0]
9001f6ae:	ac0c      	add	r4, sp, #48	@ 0x30
9001f6b0:	6859      	ldr	r1, [r3, #4]
9001f6b2:	c403      	stmia	r4!, {r0, r1}
9001f6b4:	a80a      	add	r0, sp, #40	@ 0x28
9001f6b6:	f7f9 feb1 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f6ba:	4631      	mov	r1, r6
9001f6bc:	a80c      	add	r0, sp, #48	@ 0x30
9001f6be:	f7f9 fed5 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f6c2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001f6c6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001f6ca:	bfdb      	ittet	le
9001f6cc:	b293      	uxthle	r3, r2
9001f6ce:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f6d2:	2301      	movgt	r3, #1
9001f6d4:	fb91 f3f3 	sdivle	r3, r1, r3
9001f6d8:	9300      	str	r3, [sp, #0]
9001f6da:	f105 0308 	add.w	r3, r5, #8
9001f6de:	9900      	ldr	r1, [sp, #0]
9001f6e0:	9306      	str	r3, [sp, #24]
9001f6e2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001f6e6:	440b      	add	r3, r1
9001f6e8:	3b01      	subs	r3, #1
9001f6ea:	fb93 f3f1 	sdiv	r3, r3, r1
9001f6ee:	3b01      	subs	r3, #1
9001f6f0:	9906      	ldr	r1, [sp, #24]
9001f6f2:	b29b      	uxth	r3, r3
9001f6f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001f6f8:	9900      	ldr	r1, [sp, #0]
9001f6fa:	9307      	str	r3, [sp, #28]
9001f6fc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001f700:	fb93 f0f1 	sdiv	r0, r3, r1
9001f704:	b284      	uxth	r4, r0
9001f706:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001f70a:	9402      	str	r4, [sp, #8]
9001f70c:	9d02      	ldr	r5, [sp, #8]
9001f70e:	9c00      	ldr	r4, [sp, #0]
9001f710:	fb05 3414 	mls	r4, r5, r4, r3
9001f714:	fb14 f402 	smulbb	r4, r4, r2
9001f718:	440c      	add	r4, r1
9001f71a:	b2a4      	uxth	r4, r4
9001f71c:	2d00      	cmp	r5, #0
9001f71e:	d06c      	beq.n	9001f7fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001f720:	1e6a      	subs	r2, r5, #1
9001f722:	9806      	ldr	r0, [sp, #24]
9001f724:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001f728:	9a07      	ldr	r2, [sp, #28]
9001f72a:	ba36      	rev	r6, r6
9001f72c:	4416      	add	r6, r2
9001f72e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001f732:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001f736:	4411      	add	r1, r2
9001f738:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001f73c:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001fa6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001f740:	4413      	add	r3, r2
9001f742:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001f746:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001f74a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001f74e:	9301      	str	r3, [sp, #4]
9001f750:	4bc4      	ldr	r3, [pc, #784]	@ (9001fa64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001f752:	6818      	ldr	r0, [r3, #0]
9001f754:	6803      	ldr	r3, [r0, #0]
9001f756:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f758:	4798      	blx	r3
9001f75a:	4bc3      	ldr	r3, [pc, #780]	@ (9001fa68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001f75c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001f760:	881b      	ldrh	r3, [r3, #0]
9001f762:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001f766:	fb03 2808 	mla	r8, r3, r8, r2
9001f76a:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001f76e:	436b      	muls	r3, r5
9001f770:	2500      	movs	r5, #0
9001f772:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001f776:	4629      	mov	r1, r5
9001f778:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001f77c:	9309      	str	r3, [sp, #36]	@ 0x24
9001f77e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001f782:	fb94 f3f3 	sdiv	r3, r4, r3
9001f786:	9304      	str	r3, [sp, #16]
9001f788:	f10a 0304 	add.w	r3, sl, #4
9001f78c:	4618      	mov	r0, r3
9001f78e:	9308      	str	r3, [sp, #32]
9001f790:	f00d f816 	bl	9002c7c0 <memset>
9001f794:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f796:	4543      	cmp	r3, r8
9001f798:	f240 8236 	bls.w	9001fc08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001f79c:	2203      	movs	r2, #3
9001f79e:	2107      	movs	r1, #7
9001f7a0:	200b      	movs	r0, #11
9001f7a2:	2c00      	cmp	r4, #0
9001f7a4:	f000 8131 	beq.w	9001fa0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001f7a8:	7833      	ldrb	r3, [r6, #0]
9001f7aa:	b2db      	uxtb	r3, r3
9001f7ac:	2bfe      	cmp	r3, #254	@ 0xfe
9001f7ae:	d126      	bne.n	9001f7fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001f7b0:	f896 e001 	ldrb.w	lr, [r6, #1]
9001f7b4:	3c01      	subs	r4, #1
9001f7b6:	f896 c002 	ldrb.w	ip, [r6, #2]
9001f7ba:	1d37      	adds	r7, r6, #4
9001f7bc:	fa5f fe8e 	uxtb.w	lr, lr
9001f7c0:	f896 b003 	ldrb.w	fp, [r6, #3]
9001f7c4:	fa5f fc8c 	uxtb.w	ip, ip
9001f7c8:	f36e 0507 	bfi	r5, lr, #0, #8
9001f7cc:	fa5f fb8b 	uxtb.w	fp, fp
9001f7d0:	b2a4      	uxth	r4, r4
9001f7d2:	f36c 250f 	bfi	r5, ip, #8, #8
9001f7d6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001f7da:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001f7de:	f36b 4517 	bfi	r5, fp, #16, #8
9001f7e2:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001f7e6:	0e2b      	lsrs	r3, r5, #24
9001f7e8:	fb10 c303 	smlabb	r3, r0, r3, ip
9001f7ec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f7f0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001f7f4:	605d      	str	r5, [r3, #4]
9001f7f6:	463e      	mov	r6, r7
9001f7f8:	e7d3      	b.n	9001f7a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001f7fa:	9e07      	ldr	r6, [sp, #28]
9001f7fc:	e797      	b.n	9001f72e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001f7fe:	2bff      	cmp	r3, #255	@ 0xff
9001f800:	d127      	bne.n	9001f852 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001f802:	f896 c001 	ldrb.w	ip, [r6, #1]
9001f806:	3c01      	subs	r4, #1
9001f808:	78b3      	ldrb	r3, [r6, #2]
9001f80a:	1d77      	adds	r7, r6, #5
9001f80c:	fa5f fc8c 	uxtb.w	ip, ip
9001f810:	f896 e003 	ldrb.w	lr, [r6, #3]
9001f814:	b2db      	uxtb	r3, r3
9001f816:	f896 b004 	ldrb.w	fp, [r6, #4]
9001f81a:	f36c 0507 	bfi	r5, ip, #0, #8
9001f81e:	fa5f fe8e 	uxtb.w	lr, lr
9001f822:	fa5f fb8b 	uxtb.w	fp, fp
9001f826:	f363 250f 	bfi	r5, r3, #8, #8
9001f82a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001f82e:	b2a4      	uxth	r4, r4
9001f830:	fb12 330e 	smlabb	r3, r2, lr, r3
9001f834:	f36e 4517 	bfi	r5, lr, #16, #8
9001f838:	fb11 330c 	smlabb	r3, r1, ip, r3
9001f83c:	f36b 651f 	bfi	r5, fp, #24, #8
9001f840:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001f844:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001f848:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001f84c:	f8cb 5004 	str.w	r5, [fp, #4]
9001f850:	e7d1      	b.n	9001f7f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001f852:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001f856:	f106 0701 	add.w	r7, r6, #1
9001f85a:	d107      	bne.n	9001f86c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001f85c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f860:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001f864:	685d      	ldr	r5, [r3, #4]
9001f866:	3c01      	subs	r4, #1
9001f868:	b2a4      	uxth	r4, r4
9001f86a:	e7c4      	b.n	9001f7f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001f86c:	f1bc 0f01 	cmp.w	ip, #1
9001f870:	d12c      	bne.n	9001f8cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001f872:	f003 0e03 	and.w	lr, r3, #3
9001f876:	f003 0c0c 	and.w	ip, r3, #12
9001f87a:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001f87e:	f1ae 0e02 	sub.w	lr, lr, #2
9001f882:	f1ac 0c08 	sub.w	ip, ip, #8
9001f886:	3b02      	subs	r3, #2
9001f888:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001f88c:	fa5f fe8e 	uxtb.w	lr, lr
9001f890:	f36e 0507 	bfi	r5, lr, #0, #8
9001f894:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001f898:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001f89c:	f36c 250f 	bfi	r5, ip, #8, #8
9001f8a0:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001f8a4:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001f8a8:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001f8ac:	b2db      	uxtb	r3, r3
9001f8ae:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001f8b2:	f363 4517 	bfi	r5, r3, #16, #8
9001f8b6:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001f8ba:	0e2e      	lsrs	r6, r5, #24
9001f8bc:	fb10 c606 	smlabb	r6, r0, r6, ip
9001f8c0:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001f8c4:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001f8c8:	6075      	str	r5, [r6, #4]
9001f8ca:	e7cc      	b.n	9001f866 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001f8cc:	f1bc 0f02 	cmp.w	ip, #2
9001f8d0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f8d4:	d12a      	bne.n	9001f92c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001f8d6:	1cb7      	adds	r7, r6, #2
9001f8d8:	7876      	ldrb	r6, [r6, #1]
9001f8da:	3b20      	subs	r3, #32
9001f8dc:	b2f6      	uxtb	r6, r6
9001f8de:	f006 0c0f 	and.w	ip, r6, #15
9001f8e2:	1136      	asrs	r6, r6, #4
9001f8e4:	f1ac 0c08 	sub.w	ip, ip, #8
9001f8e8:	3e08      	subs	r6, #8
9001f8ea:	449c      	add	ip, r3
9001f8ec:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001f8f0:	fa5f fc8c 	uxtb.w	ip, ip
9001f8f4:	f36c 0507 	bfi	r5, ip, #0, #8
9001f8f8:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001f8fc:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001f900:	4433      	add	r3, r6
9001f902:	fa5f fe8e 	uxtb.w	lr, lr
9001f906:	f36e 250f 	bfi	r5, lr, #8, #8
9001f90a:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001f90e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001f912:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001f916:	b2db      	uxtb	r3, r3
9001f918:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001f91c:	f363 4517 	bfi	r5, r3, #16, #8
9001f920:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001f924:	0e2e      	lsrs	r6, r5, #24
9001f926:	fb10 e606 	smlabb	r6, r0, r6, lr
9001f92a:	e7c9      	b.n	9001f8c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001f92c:	1c5e      	adds	r6, r3, #1
9001f92e:	42a6      	cmp	r6, r4
9001f930:	dd4e      	ble.n	9001f9d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001f932:	1b36      	subs	r6, r6, r4
9001f934:	2e00      	cmp	r6, #0
9001f936:	dc4e      	bgt.n	9001f9d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001f938:	f8dd b004 	ldr.w	fp, [sp, #4]
9001f93c:	2400      	movs	r4, #0
9001f93e:	f1bb 0f00 	cmp.w	fp, #0
9001f942:	f340 8122 	ble.w	9001fb8a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001f946:	1c7b      	adds	r3, r7, #1
9001f948:	9303      	str	r3, [sp, #12]
9001f94a:	783b      	ldrb	r3, [r7, #0]
9001f94c:	b2db      	uxtb	r3, r3
9001f94e:	2bfe      	cmp	r3, #254	@ 0xfe
9001f950:	d160      	bne.n	9001fa14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001f952:	7879      	ldrb	r1, [r7, #1]
9001f954:	1d3b      	adds	r3, r7, #4
9001f956:	78ba      	ldrb	r2, [r7, #2]
9001f958:	b2c9      	uxtb	r1, r1
9001f95a:	78f8      	ldrb	r0, [r7, #3]
9001f95c:	b2d2      	uxtb	r2, r2
9001f95e:	9303      	str	r3, [sp, #12]
9001f960:	f361 0507 	bfi	r5, r1, #0, #8
9001f964:	b2c0      	uxtb	r0, r0
9001f966:	2303      	movs	r3, #3
9001f968:	f362 250f 	bfi	r5, r2, #8, #8
9001f96c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001f970:	fb13 2200 	smlabb	r2, r3, r0, r2
9001f974:	f360 4517 	bfi	r5, r0, #16, #8
9001f978:	2307      	movs	r3, #7
9001f97a:	0e2e      	lsrs	r6, r5, #24
9001f97c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001f980:	230b      	movs	r3, #11
9001f982:	fb13 1306 	smlabb	r3, r3, r6, r1
9001f986:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f98a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001f98e:	605d      	str	r5, [r3, #4]
9001f990:	2601      	movs	r6, #1
9001f992:	4637      	mov	r7, r6
9001f994:	0e2b      	lsrs	r3, r5, #24
9001f996:	ebab 0b07 	sub.w	fp, fp, r7
9001f99a:	eba6 0607 	sub.w	r6, r6, r7
9001f99e:	f040 80d3 	bne.w	9001fb48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001f9a2:	b18c      	cbz	r4, 9001f9c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001f9a4:	4648      	mov	r0, r9
9001f9a6:	00a1      	lsls	r1, r4, #2
9001f9a8:	f7e2 ffba 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
9001f9ac:	9b05      	ldr	r3, [sp, #20]
9001f9ae:	4622      	mov	r2, r4
9001f9b0:	4649      	mov	r1, r9
9001f9b2:	4640      	mov	r0, r8
9001f9b4:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001f9b8:	f7e3 f820 	bl	900029fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001f9bc:	4b2b      	ldr	r3, [pc, #172]	@ (9001fa6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001f9be:	4a2c      	ldr	r2, [pc, #176]	@ (9001fa70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001f9c0:	4599      	cmp	r9, r3
9001f9c2:	bf08      	it	eq
9001f9c4:	4613      	moveq	r3, r2
9001f9c6:	4699      	mov	r9, r3
9001f9c8:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001f9cc:	2400      	movs	r4, #0
9001f9ce:	e0da      	b.n	9001fb86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001f9d0:	1ba6      	subs	r6, r4, r6
9001f9d2:	b2b4      	uxth	r4, r6
9001f9d4:	e70f      	b.n	9001f7f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001f9d6:	9b01      	ldr	r3, [sp, #4]
9001f9d8:	9a01      	ldr	r2, [sp, #4]
9001f9da:	42b3      	cmp	r3, r6
9001f9dc:	bfa8      	it	ge
9001f9de:	4633      	movge	r3, r6
9001f9e0:	0e2c      	lsrs	r4, r5, #24
9001f9e2:	eba2 0b03 	sub.w	fp, r2, r3
9001f9e6:	eba6 0603 	sub.w	r6, r6, r3
9001f9ea:	d00b      	beq.n	9001fa04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001f9ec:	f1a9 0104 	sub.w	r1, r9, #4
9001f9f0:	461a      	mov	r2, r3
9001f9f2:	2a00      	cmp	r2, #0
9001f9f4:	dc02      	bgt.n	9001f9fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001f9f6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001f9fa:	e7a0      	b.n	9001f93e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001f9fc:	f841 5f04 	str.w	r5, [r1, #4]!
9001fa00:	3a01      	subs	r2, #1
9001fa02:	e7f6      	b.n	9001f9f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001fa04:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001fa08:	e799      	b.n	9001f93e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001fa0a:	4637      	mov	r7, r6
9001fa0c:	f8dd b004 	ldr.w	fp, [sp, #4]
9001fa10:	4626      	mov	r6, r4
9001fa12:	e794      	b.n	9001f93e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001fa14:	2bff      	cmp	r3, #255	@ 0xff
9001fa16:	d11d      	bne.n	9001fa54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001fa18:	7878      	ldrb	r0, [r7, #1]
9001fa1a:	1d7b      	adds	r3, r7, #5
9001fa1c:	78ba      	ldrb	r2, [r7, #2]
9001fa1e:	b2c0      	uxtb	r0, r0
9001fa20:	78fe      	ldrb	r6, [r7, #3]
9001fa22:	b2d2      	uxtb	r2, r2
9001fa24:	9303      	str	r3, [sp, #12]
9001fa26:	f360 0507 	bfi	r5, r0, #0, #8
9001fa2a:	793b      	ldrb	r3, [r7, #4]
9001fa2c:	b2f6      	uxtb	r6, r6
9001fa2e:	b2d9      	uxtb	r1, r3
9001fa30:	f362 250f 	bfi	r5, r2, #8, #8
9001fa34:	2303      	movs	r3, #3
9001fa36:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001fa3a:	f366 4517 	bfi	r5, r6, #16, #8
9001fa3e:	fb13 2206 	smlabb	r2, r3, r6, r2
9001fa42:	2307      	movs	r3, #7
9001fa44:	f361 651f 	bfi	r5, r1, #24, #8
9001fa48:	fb13 2000 	smlabb	r0, r3, r0, r2
9001fa4c:	230b      	movs	r3, #11
9001fa4e:	fb13 0301 	smlabb	r3, r3, r1, r0
9001fa52:	e798      	b.n	9001f986 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001fa54:	119e      	asrs	r6, r3, #6
9001fa56:	d10d      	bne.n	9001fa74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001fa58:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fa5c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001fa60:	685d      	ldr	r5, [r3, #4]
9001fa62:	e795      	b.n	9001f990 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001fa64:	240245a0 	.word	0x240245a0
9001fa68:	24024598 	.word	0x24024598
9001fa6c:	240003a0 	.word	0x240003a0
9001fa70:	240004a0 	.word	0x240004a0
9001fa74:	2e01      	cmp	r6, #1
9001fa76:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001fa7a:	d12b      	bne.n	9001fad4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001fa7c:	f003 0003 	and.w	r0, r3, #3
9001fa80:	f003 020c 	and.w	r2, r3, #12
9001fa84:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001fa88:	3802      	subs	r0, #2
9001fa8a:	3a08      	subs	r2, #8
9001fa8c:	1e9f      	subs	r7, r3, #2
9001fa8e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001fa92:	b2c0      	uxtb	r0, r0
9001fa94:	f360 0507 	bfi	r5, r0, #0, #8
9001fa98:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001fa9c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001faa0:	f362 250f 	bfi	r5, r2, #8, #8
9001faa4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001faa8:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001faac:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001fab0:	2703      	movs	r7, #3
9001fab2:	b2db      	uxtb	r3, r3
9001fab4:	fb17 2203 	smlabb	r2, r7, r3, r2
9001fab8:	2707      	movs	r7, #7
9001faba:	f363 4517 	bfi	r5, r3, #16, #8
9001fabe:	230b      	movs	r3, #11
9001fac0:	fb17 2000 	smlabb	r0, r7, r0, r2
9001fac4:	fb13 0101 	smlabb	r1, r3, r1, r0
9001fac8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001facc:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001fad0:	604d      	str	r5, [r1, #4]
9001fad2:	e75e      	b.n	9001f992 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001fad4:	2e02      	cmp	r6, #2
9001fad6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fada:	d12f      	bne.n	9001fb3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001fadc:	7878      	ldrb	r0, [r7, #1]
9001fade:	1cba      	adds	r2, r7, #2
9001fae0:	3b20      	subs	r3, #32
9001fae2:	b2c0      	uxtb	r0, r0
9001fae4:	9203      	str	r2, [sp, #12]
9001fae6:	f000 020f 	and.w	r2, r0, #15
9001faea:	1100      	asrs	r0, r0, #4
9001faec:	3a08      	subs	r2, #8
9001faee:	3808      	subs	r0, #8
9001faf0:	441a      	add	r2, r3
9001faf2:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001faf6:	b2d2      	uxtb	r2, r2
9001faf8:	f362 0507 	bfi	r5, r2, #0, #8
9001fafc:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001fb00:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001fb04:	4403      	add	r3, r0
9001fb06:	b2f6      	uxtb	r6, r6
9001fb08:	f366 250f 	bfi	r5, r6, #8, #8
9001fb0c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001fb10:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001fb14:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001fb18:	2003      	movs	r0, #3
9001fb1a:	b2db      	uxtb	r3, r3
9001fb1c:	fb10 6603 	smlabb	r6, r0, r3, r6
9001fb20:	2007      	movs	r0, #7
9001fb22:	f363 4517 	bfi	r5, r3, #16, #8
9001fb26:	230b      	movs	r3, #11
9001fb28:	fb10 6202 	smlabb	r2, r0, r2, r6
9001fb2c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001fb30:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001fb34:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001fb38:	604d      	str	r5, [r1, #4]
9001fb3a:	e729      	b.n	9001f990 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001fb3c:	1c5e      	adds	r6, r3, #1
9001fb3e:	465f      	mov	r7, fp
9001fb40:	45b3      	cmp	fp, r6
9001fb42:	bfa8      	it	ge
9001fb44:	4637      	movge	r7, r6
9001fb46:	e725      	b.n	9001f994 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001fb48:	193b      	adds	r3, r7, r4
9001fb4a:	2b40      	cmp	r3, #64	@ 0x40
9001fb4c:	dd13      	ble.n	9001fb76 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001fb4e:	4648      	mov	r0, r9
9001fb50:	00a1      	lsls	r1, r4, #2
9001fb52:	f7e2 fee5 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
9001fb56:	4649      	mov	r1, r9
9001fb58:	9b05      	ldr	r3, [sp, #20]
9001fb5a:	4622      	mov	r2, r4
9001fb5c:	4640      	mov	r0, r8
9001fb5e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001fb62:	f7e2 ff4b 	bl	900029fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001fb66:	4b2c      	ldr	r3, [pc, #176]	@ (9001fc18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001fb68:	2400      	movs	r4, #0
9001fb6a:	4599      	cmp	r9, r3
9001fb6c:	bf0c      	ite	eq
9001fb6e:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001fc24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001fb72:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001fc18 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001fb76:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001fb7a:	463b      	mov	r3, r7
9001fb7c:	3b01      	subs	r3, #1
9001fb7e:	f842 5b04 	str.w	r5, [r2], #4
9001fb82:	d1fb      	bne.n	9001fb7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001fb84:	443c      	add	r4, r7
9001fb86:	9f03      	ldr	r7, [sp, #12]
9001fb88:	e6d9      	b.n	9001f93e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001fb8a:	b15c      	cbz	r4, 9001fba4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001fb8c:	00a1      	lsls	r1, r4, #2
9001fb8e:	4648      	mov	r0, r9
9001fb90:	f7e2 fec6 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
9001fb94:	4640      	mov	r0, r8
9001fb96:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001fb9a:	9b05      	ldr	r3, [sp, #20]
9001fb9c:	4622      	mov	r2, r4
9001fb9e:	4649      	mov	r1, r9
9001fba0:	f7e2 ff2c 	bl	900029fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001fba4:	4b1d      	ldr	r3, [pc, #116]	@ (9001fc1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001fba6:	9a01      	ldr	r2, [sp, #4]
9001fba8:	881b      	ldrh	r3, [r3, #0]
9001fbaa:	1a9b      	subs	r3, r3, r2
9001fbac:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001fbb0:	9b04      	ldr	r3, [sp, #16]
9001fbb2:	3301      	adds	r3, #1
9001fbb4:	9304      	str	r3, [sp, #16]
9001fbb6:	9a04      	ldr	r2, [sp, #16]
9001fbb8:	9b00      	ldr	r3, [sp, #0]
9001fbba:	4293      	cmp	r3, r2
9001fbbc:	d11d      	bne.n	9001fbfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001fbbe:	9b02      	ldr	r3, [sp, #8]
9001fbc0:	2500      	movs	r5, #0
9001fbc2:	9a02      	ldr	r2, [sp, #8]
9001fbc4:	f103 0b01 	add.w	fp, r3, #1
9001fbc8:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001fbcc:	9b06      	ldr	r3, [sp, #24]
9001fbce:	4629      	mov	r1, r5
9001fbd0:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001fbd4:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001fbd8:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001fbdc:	1ba4      	subs	r4, r4, r6
9001fbde:	9b07      	ldr	r3, [sp, #28]
9001fbe0:	ba3f      	rev	r7, r7
9001fbe2:	9808      	ldr	r0, [sp, #32]
9001fbe4:	b2a4      	uxth	r4, r4
9001fbe6:	441f      	add	r7, r3
9001fbe8:	f00c fdea 	bl	9002c7c0 <memset>
9001fbec:	f8cd b008 	str.w	fp, [sp, #8]
9001fbf0:	9504      	str	r5, [sp, #16]
9001fbf2:	f7e2 fe8b 	bl	9000290c <_ZN8touchgfx5paint8tearDownEv>
9001fbf6:	463e      	mov	r6, r7
9001fbf8:	e5cc      	b.n	9001f794 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001fbfa:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001fbfe:	9b01      	ldr	r3, [sp, #4]
9001fc00:	1ae4      	subs	r4, r4, r3
9001fc02:	1ba4      	subs	r4, r4, r6
9001fc04:	b2a4      	uxth	r4, r4
9001fc06:	e7f4      	b.n	9001fbf2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001fc08:	4b05      	ldr	r3, [pc, #20]	@ (9001fc20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001fc0a:	6818      	ldr	r0, [r3, #0]
9001fc0c:	6803      	ldr	r3, [r0, #0]
9001fc0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fc10:	4798      	blx	r3
9001fc12:	b00f      	add	sp, #60	@ 0x3c
9001fc14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fc18:	240003a0 	.word	0x240003a0
9001fc1c:	24024598 	.word	0x24024598
9001fc20:	240245a0 	.word	0x240245a0
9001fc24:	240004a0 	.word	0x240004a0

9001fc28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001fc28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fc2c:	b08f      	sub	sp, #60	@ 0x3c
9001fc2e:	461c      	mov	r4, r3
9001fc30:	9205      	str	r2, [sp, #20]
9001fc32:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001fc36:	9100      	str	r1, [sp, #0]
9001fc38:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001fc3a:	9201      	str	r2, [sp, #4]
9001fc3c:	2a00      	cmp	r2, #0
9001fc3e:	f000 8116 	beq.w	9001fe6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001fc42:	6820      	ldr	r0, [r4, #0]
9001fc44:	aa0a      	add	r2, sp, #40	@ 0x28
9001fc46:	6861      	ldr	r1, [r4, #4]
9001fc48:	c203      	stmia	r2!, {r0, r1}
9001fc4a:	6818      	ldr	r0, [r3, #0]
9001fc4c:	aa0c      	add	r2, sp, #48	@ 0x30
9001fc4e:	6859      	ldr	r1, [r3, #4]
9001fc50:	c203      	stmia	r2!, {r0, r1}
9001fc52:	a80a      	add	r0, sp, #40	@ 0x28
9001fc54:	f7f9 fbe2 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fc58:	4621      	mov	r1, r4
9001fc5a:	a80c      	add	r0, sp, #48	@ 0x30
9001fc5c:	f7f9 fc06 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fc60:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001fc64:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001fc68:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001fc6c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001fc70:	bfdb      	ittet	le
9001fc72:	b2b3      	uxthle	r3, r6
9001fc74:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001fc78:	2301      	movgt	r3, #1
9001fc7a:	fb92 f3f3 	sdivle	r3, r2, r3
9001fc7e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001fc82:	441d      	add	r5, r3
9001fc84:	fb92 f1f3 	sdiv	r1, r2, r3
9001fc88:	fa1f fc81 	uxth.w	ip, r1
9001fc8c:	3d01      	subs	r5, #1
9001fc8e:	fb0c 2413 	mls	r4, ip, r3, r2
9001fc92:	4661      	mov	r1, ip
9001fc94:	fb14 f406 	smulbb	r4, r4, r6
9001fc98:	4404      	add	r4, r0
9001fc9a:	fb95 f5f3 	sdiv	r5, r5, r3
9001fc9e:	b2a4      	uxth	r4, r4
9001fca0:	b131      	cbz	r1, 9001fcb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001fca2:	9b05      	ldr	r3, [sp, #20]
9001fca4:	9900      	ldr	r1, [sp, #0]
9001fca6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001fcaa:	ba1b      	rev	r3, r3
9001fcac:	4419      	add	r1, r3
9001fcae:	9100      	str	r1, [sp, #0]
9001fcb0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001fcb4:	b2ad      	uxth	r5, r5
9001fcb6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001fcba:	4418      	add	r0, r3
9001fcbc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001fcc0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001fcc4:	00ad      	lsls	r5, r5, #2
9001fcc6:	441a      	add	r2, r3
9001fcc8:	4b6a      	ldr	r3, [pc, #424]	@ (9001fe74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001fcca:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001fcce:	6818      	ldr	r0, [r3, #0]
9001fcd0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001fcd4:	6803      	ldr	r3, [r0, #0]
9001fcd6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001fcd8:	4798      	blx	r3
9001fcda:	4967      	ldr	r1, [pc, #412]	@ (9001fe78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001fcdc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001fce0:	2c00      	cmp	r4, #0
9001fce2:	880b      	ldrh	r3, [r1, #0]
9001fce4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001fce8:	bf0c      	ite	eq
9001fcea:	46c6      	moveq	lr, r8
9001fcec:	f04f 0e00 	movne.w	lr, #0
9001fcf0:	9109      	str	r1, [sp, #36]	@ 0x24
9001fcf2:	fb03 c202 	mla	r2, r3, r2, ip
9001fcf6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001fcfa:	4373      	muls	r3, r6
9001fcfc:	fa1f fe8e 	uxth.w	lr, lr
9001fd00:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fd04:	9103      	str	r1, [sp, #12]
9001fd06:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fd0a:	9306      	str	r3, [sp, #24]
9001fd0c:	1d2b      	adds	r3, r5, #4
9001fd0e:	9307      	str	r3, [sp, #28]
9001fd10:	9b01      	ldr	r3, [sp, #4]
9001fd12:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001fd16:	2300      	movs	r3, #0
9001fd18:	b292      	uxth	r2, r2
9001fd1a:	9302      	str	r3, [sp, #8]
9001fd1c:	9204      	str	r2, [sp, #16]
9001fd1e:	9a06      	ldr	r2, [sp, #24]
9001fd20:	4282      	cmp	r2, r0
9001fd22:	f240 809f 	bls.w	9001fe64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001fd26:	b963      	cbnz	r3, 9001fd42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001fd28:	9b00      	ldr	r3, [sp, #0]
9001fd2a:	781a      	ldrb	r2, [r3, #0]
9001fd2c:	0993      	lsrs	r3, r2, #6
9001fd2e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001fd32:	9202      	str	r2, [sp, #8]
9001fd34:	1e5a      	subs	r2, r3, #1
9001fd36:	2a02      	cmp	r2, #2
9001fd38:	d815      	bhi.n	9001fd66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001fd3a:	9a00      	ldr	r2, [sp, #0]
9001fd3c:	b29b      	uxth	r3, r3
9001fd3e:	3201      	adds	r2, #1
9001fd40:	9200      	str	r2, [sp, #0]
9001fd42:	b1b4      	cbz	r4, 9001fd72 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001fd44:	429c      	cmp	r4, r3
9001fd46:	bf91      	iteee	ls
9001fd48:	1b1c      	subls	r4, r3, r4
9001fd4a:	1ae4      	subhi	r4, r4, r3
9001fd4c:	4671      	movhi	r1, lr
9001fd4e:	f04f 0a00 	movhi.w	sl, #0
9001fd52:	bf9b      	ittet	ls
9001fd54:	fa1f fa84 	uxthls.w	sl, r4
9001fd58:	2400      	movls	r4, #0
9001fd5a:	b2a4      	uxthhi	r4, r4
9001fd5c:	fa1f f188 	uxthls.w	r1, r8
9001fd60:	4653      	mov	r3, sl
9001fd62:	468e      	mov	lr, r1
9001fd64:	e7db      	b.n	9001fd1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001fd66:	9a00      	ldr	r2, [sp, #0]
9001fd68:	9b00      	ldr	r3, [sp, #0]
9001fd6a:	3202      	adds	r2, #2
9001fd6c:	785b      	ldrb	r3, [r3, #1]
9001fd6e:	9200      	str	r2, [sp, #0]
9001fd70:	e7e7      	b.n	9001fd42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001fd72:	2202      	movs	r2, #2
9001fd74:	9907      	ldr	r1, [sp, #28]
9001fd76:	4573      	cmp	r3, lr
9001fd78:	4615      	mov	r5, r2
9001fd7a:	9a02      	ldr	r2, [sp, #8]
9001fd7c:	bf24      	itt	cs
9001fd7e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001fd82:	46f1      	movcs	r9, lr
9001fd84:	fb15 1202 	smlabb	r2, r5, r2, r1
9001fd88:	9905      	ldr	r1, [sp, #20]
9001fd8a:	bf34      	ite	cc
9001fd8c:	4699      	movcc	r9, r3
9001fd8e:	fa1f fa8a 	uxthcs.w	sl, sl
9001fd92:	f831 c002 	ldrh.w	ip, [r1, r2]
9001fd96:	bf38      	it	cc
9001fd98:	ebae 0103 	subcc.w	r1, lr, r3
9001fd9c:	9a01      	ldr	r2, [sp, #4]
9001fd9e:	bf2e      	itee	cs
9001fda0:	4621      	movcs	r1, r4
9001fda2:	b289      	uxthcc	r1, r1
9001fda4:	46a2      	movcc	sl, r4
9001fda6:	2aff      	cmp	r2, #255	@ 0xff
9001fda8:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001fdac:	d105      	bne.n	9001fdba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001fdae:	4481      	add	r9, r0
9001fdb0:	4581      	cmp	r9, r0
9001fdb2:	d045      	beq.n	9001fe40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001fdb4:	f820 cb02 	strh.w	ip, [r0], #2
9001fdb8:	e7fa      	b.n	9001fdb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001fdba:	ea4f 222c 	mov.w	r2, ip, asr #8
9001fdbe:	9d03      	ldr	r5, [sp, #12]
9001fdc0:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001fdc4:	4481      	add	r9, r0
9001fdc6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001fdca:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001fdce:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001fdd2:	fa5f fc8c 	uxtb.w	ip, ip
9001fdd6:	436a      	muls	r2, r5
9001fdd8:	fb0b fb05 	mul.w	fp, fp, r5
9001fddc:	fb0c fc05 	mul.w	ip, ip, r5
9001fde0:	9208      	str	r2, [sp, #32]
9001fde2:	4581      	cmp	r9, r0
9001fde4:	d02c      	beq.n	9001fe40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001fde6:	8802      	ldrh	r2, [r0, #0]
9001fde8:	9d04      	ldr	r5, [sp, #16]
9001fdea:	1216      	asrs	r6, r2, #8
9001fdec:	9f04      	ldr	r7, [sp, #16]
9001fdee:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001fdf2:	fb16 f605 	smulbb	r6, r6, r5
9001fdf6:	9d08      	ldr	r5, [sp, #32]
9001fdf8:	442e      	add	r6, r5
9001fdfa:	10d5      	asrs	r5, r2, #3
9001fdfc:	00d2      	lsls	r2, r2, #3
9001fdfe:	b2b6      	uxth	r6, r6
9001fe00:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001fe04:	b2d2      	uxtb	r2, r2
9001fe06:	fb15 f507 	smulbb	r5, r5, r7
9001fe0a:	fb12 f207 	smulbb	r2, r2, r7
9001fe0e:	1c77      	adds	r7, r6, #1
9001fe10:	445d      	add	r5, fp
9001fe12:	4462      	add	r2, ip
9001fe14:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001fe18:	b2ad      	uxth	r5, r5
9001fe1a:	b292      	uxth	r2, r2
9001fe1c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001fe20:	1c57      	adds	r7, r2, #1
9001fe22:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001fe26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fe2a:	4316      	orrs	r6, r2
9001fe2c:	1c6a      	adds	r2, r5, #1
9001fe2e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001fe32:	096d      	lsrs	r5, r5, #5
9001fe34:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001fe38:	432e      	orrs	r6, r5
9001fe3a:	f820 6b02 	strh.w	r6, [r0], #2
9001fe3e:	e7d0      	b.n	9001fde2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001fe40:	4573      	cmp	r3, lr
9001fe42:	d38d      	bcc.n	9001fd60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001fe44:	fa1f f188 	uxth.w	r1, r8
9001fe48:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001fe4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fe4e:	1a64      	subs	r4, r4, r1
9001fe50:	881b      	ldrh	r3, [r3, #0]
9001fe52:	b2a4      	uxth	r4, r4
9001fe54:	eba3 0308 	sub.w	r3, r3, r8
9001fe58:	2c00      	cmp	r4, #0
9001fe5a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fe5e:	bf18      	it	ne
9001fe60:	2100      	movne	r1, #0
9001fe62:	e77d      	b.n	9001fd60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001fe64:	4b03      	ldr	r3, [pc, #12]	@ (9001fe74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001fe66:	6818      	ldr	r0, [r3, #0]
9001fe68:	6803      	ldr	r3, [r0, #0]
9001fe6a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fe6c:	4798      	blx	r3
9001fe6e:	b00f      	add	sp, #60	@ 0x3c
9001fe70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fe74:	240245a0 	.word	0x240245a0
9001fe78:	24024598 	.word	0x24024598

9001fe7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001fe7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fe80:	b09f      	sub	sp, #124	@ 0x7c
9001fe82:	461d      	mov	r5, r3
9001fe84:	4604      	mov	r4, r0
9001fe86:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001fe88:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001fe8c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001fe90:	9209      	str	r2, [sp, #36]	@ 0x24
9001fe92:	2a00      	cmp	r2, #0
9001fe94:	f000 81ed 	beq.w	90020272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001fe98:	6828      	ldr	r0, [r5, #0]
9001fe9a:	aa1a      	add	r2, sp, #104	@ 0x68
9001fe9c:	6869      	ldr	r1, [r5, #4]
9001fe9e:	c203      	stmia	r2!, {r0, r1}
9001fea0:	6818      	ldr	r0, [r3, #0]
9001fea2:	aa1c      	add	r2, sp, #112	@ 0x70
9001fea4:	6859      	ldr	r1, [r3, #4]
9001fea6:	c203      	stmia	r2!, {r0, r1}
9001fea8:	a81a      	add	r0, sp, #104	@ 0x68
9001feaa:	f7f9 fab7 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001feae:	4629      	mov	r1, r5
9001feb0:	a81c      	add	r0, sp, #112	@ 0x70
9001feb2:	f7f9 fadb 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001feb6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001feba:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001febe:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001fec2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001fec6:	bfdb      	ittet	le
9001fec8:	b29a      	uxthle	r2, r3
9001feca:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001fece:	2201      	movgt	r2, #1
9001fed0:	fb91 f2f2 	sdivle	r2, r1, r2
9001fed4:	9202      	str	r2, [sp, #8]
9001fed6:	9802      	ldr	r0, [sp, #8]
9001fed8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001fedc:	9902      	ldr	r1, [sp, #8]
9001fede:	fb92 f0f0 	sdiv	r0, r2, r0
9001fee2:	b280      	uxth	r0, r0
9001fee4:	4488      	add	r8, r1
9001fee6:	9010      	str	r0, [sp, #64]	@ 0x40
9001fee8:	f108 38ff 	add.w	r8, r8, #4294967295
9001feec:	9802      	ldr	r0, [sp, #8]
9001feee:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001fef0:	fb05 2510 	mls	r5, r5, r0, r2
9001fef4:	fb98 f8f1 	sdiv	r8, r8, r1
9001fef8:	fb15 f503 	smulbb	r5, r5, r3
9001fefc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001ff00:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001ff04:	f108 0801 	add.w	r8, r8, #1
9001ff08:	440d      	add	r5, r1
9001ff0a:	4419      	add	r1, r3
9001ff0c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001ff10:	fa1f f888 	uxth.w	r8, r8
9001ff14:	441a      	add	r2, r3
9001ff16:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001ff1a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001ff1e:	b2ad      	uxth	r5, r5
9001ff20:	9304      	str	r3, [sp, #16]
9001ff22:	4b94      	ldr	r3, [pc, #592]	@ (90020174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001ff24:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001ff28:	6818      	ldr	r0, [r3, #0]
9001ff2a:	6803      	ldr	r3, [r0, #0]
9001ff2c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001ff2e:	4798      	blx	r3
9001ff30:	4b91      	ldr	r3, [pc, #580]	@ (90020178 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001ff32:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001ff36:	2d00      	cmp	r5, #0
9001ff38:	881a      	ldrh	r2, [r3, #0]
9001ff3a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001ff3e:	fb02 f606 	mul.w	r6, r2, r6
9001ff42:	fb02 7101 	mla	r1, r2, r1, r7
9001ff46:	9318      	str	r3, [sp, #96]	@ 0x60
9001ff48:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ff4c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001ff50:	f04f 0100 	mov.w	r1, #0
9001ff54:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001ff58:	930f      	str	r3, [sp, #60]	@ 0x3c
9001ff5a:	4b88      	ldr	r3, [pc, #544]	@ (9002017c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001ff5c:	920a      	str	r2, [sp, #40]	@ 0x28
9001ff5e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ff60:	eba3 0304 	sub.w	r3, r3, r4
9001ff64:	910d      	str	r1, [sp, #52]	@ 0x34
9001ff66:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001ff6a:	9319      	str	r3, [sp, #100]	@ 0x64
9001ff6c:	f108 0204 	add.w	r2, r8, #4
9001ff70:	9211      	str	r2, [sp, #68]	@ 0x44
9001ff72:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001ff74:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001ff78:	9215      	str	r2, [sp, #84]	@ 0x54
9001ff7a:	9a04      	ldr	r2, [sp, #16]
9001ff7c:	bf18      	it	ne
9001ff7e:	2200      	movne	r2, #0
9001ff80:	b292      	uxth	r2, r2
9001ff82:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001ff84:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ff86:	fa11 f383 	uxtah	r3, r1, r3
9001ff8a:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001ff8c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001ff90:	3304      	adds	r3, #4
9001ff92:	9306      	str	r3, [sp, #24]
9001ff94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ff96:	4283      	cmp	r3, r0
9001ff98:	f240 8166 	bls.w	90020268 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001ff9c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001ffa0:	f04f 0a01 	mov.w	sl, #1
9001ffa4:	9902      	ldr	r1, [sp, #8]
9001ffa6:	9e06      	ldr	r6, [sp, #24]
9001ffa8:	46d3      	mov	fp, sl
9001ffaa:	4657      	mov	r7, sl
9001ffac:	7836      	ldrb	r6, [r6, #0]
9001ffae:	fbb5 f3f3 	udiv	r3, r5, r3
9001ffb2:	1acb      	subs	r3, r1, r3
9001ffb4:	9612      	str	r6, [sp, #72]	@ 0x48
9001ffb6:	3601      	adds	r6, #1
9001ffb8:	b29b      	uxth	r3, r3
9001ffba:	9605      	str	r6, [sp, #20]
9001ffbc:	9316      	str	r3, [sp, #88]	@ 0x58
9001ffbe:	9b06      	ldr	r3, [sp, #24]
9001ffc0:	7859      	ldrb	r1, [r3, #1]
9001ffc2:	789b      	ldrb	r3, [r3, #2]
9001ffc4:	021b      	lsls	r3, r3, #8
9001ffc6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001ffca:	9906      	ldr	r1, [sp, #24]
9001ffcc:	78c9      	ldrb	r1, [r1, #3]
9001ffce:	430b      	orrs	r3, r1
9001ffd0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001ffd2:	4419      	add	r1, r3
9001ffd4:	1c4e      	adds	r6, r1, #1
9001ffd6:	7849      	ldrb	r1, [r1, #1]
9001ffd8:	9603      	str	r6, [sp, #12]
9001ffda:	0209      	lsls	r1, r1, #8
9001ffdc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ffde:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001ffe2:	5cf3      	ldrb	r3, [r6, r3]
9001ffe4:	4319      	orrs	r1, r3
9001ffe6:	b28b      	uxth	r3, r1
9001ffe8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001ffec:	930c      	str	r3, [sp, #48]	@ 0x30
9001ffee:	2300      	movs	r3, #0
9001fff0:	9307      	str	r3, [sp, #28]
9001fff2:	469c      	mov	ip, r3
9001fff4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001fff8:	930e      	str	r3, [sp, #56]	@ 0x38
9001fffa:	2d00      	cmp	r5, #0
9001fffc:	d07e      	beq.n	900200fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001fffe:	42af      	cmp	r7, r5
90020000:	d26e      	bcs.n	900200e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
90020002:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020004:	1bed      	subs	r5, r5, r7
90020006:	9201      	str	r2, [sp, #4]
90020008:	4283      	cmp	r3, r0
9002000a:	b2ad      	uxth	r5, r5
9002000c:	d802      	bhi.n	90020014 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9002000e:	e073      	b.n	900200f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
90020010:	2b00      	cmp	r3, #0
90020012:	d15f      	bne.n	900200d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
90020014:	9b03      	ldr	r3, [sp, #12]
90020016:	f1cb 0207 	rsb	r2, fp, #7
9002001a:	785b      	ldrb	r3, [r3, #1]
9002001c:	4093      	lsls	r3, r2
9002001e:	005b      	lsls	r3, r3, #1
90020020:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
90020024:	9b03      	ldr	r3, [sp, #12]
90020026:	781b      	ldrb	r3, [r3, #0]
90020028:	fa43 f30b 	asr.w	r3, r3, fp
9002002c:	b2db      	uxtb	r3, r3
9002002e:	4313      	orrs	r3, r2
90020030:	f10b 0201 	add.w	r2, fp, #1
90020034:	fa5f fb82 	uxtb.w	fp, r2
90020038:	9a03      	ldr	r2, [sp, #12]
9002003a:	b29f      	uxth	r7, r3
9002003c:	f1bb 0f08 	cmp.w	fp, #8
90020040:	bf13      	iteet	ne
90020042:	3201      	addne	r2, #1
90020044:	3202      	addeq	r2, #2
90020046:	f04f 0b00 	moveq.w	fp, #0
9002004a:	9203      	strne	r2, [sp, #12]
9002004c:	bf08      	it	eq
9002004e:	9203      	streq	r2, [sp, #12]
90020050:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90020052:	42ba      	cmp	r2, r7
90020054:	d309      	bcc.n	9002006a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
90020056:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9002005a:	2301      	movs	r3, #1
9002005c:	9a05      	ldr	r2, [sp, #20]
9002005e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90020062:	d30e      	bcc.n	90020082 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90020064:	469a      	mov	sl, r3
90020066:	2600      	movs	r6, #0
90020068:	e035      	b.n	900200d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9002006a:	9b05      	ldr	r3, [sp, #20]
9002006c:	429f      	cmp	r7, r3
9002006e:	d318      	bcc.n	900200a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
90020070:	eb04 030a 	add.w	r3, r4, sl
90020074:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
90020078:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9002007c:	f10a 0301 	add.w	r3, sl, #1
90020080:	b29b      	uxth	r3, r3
90020082:	9a05      	ldr	r2, [sp, #20]
90020084:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
90020088:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9002008c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002008e:	7116      	strb	r6, [r2, #4]
90020090:	f10a 0601 	add.w	r6, sl, #1
90020094:	80d1      	strh	r1, [r2, #6]
90020096:	7156      	strb	r6, [r2, #5]
90020098:	9a05      	ldr	r2, [sp, #20]
9002009a:	3201      	adds	r2, #1
9002009c:	b292      	uxth	r2, r2
9002009e:	9205      	str	r2, [sp, #20]
900200a0:	e7e0      	b.n	90020064 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
900200a2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
900200a6:	463a      	mov	r2, r7
900200a8:	795b      	ldrb	r3, [r3, #5]
900200aa:	f603 0604 	addw	r6, r3, #2052	@ 0x804
900200ae:	4426      	add	r6, r4
900200b0:	9919      	ldr	r1, [sp, #100]	@ 0x64
900200b2:	eb01 0c06 	add.w	ip, r1, r6
900200b6:	f1bc 0f00 	cmp.w	ip, #0
900200ba:	dd07      	ble.n	900200cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
900200bc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
900200c0:	f892 c004 	ldrb.w	ip, [r2, #4]
900200c4:	f806 cd01 	strb.w	ip, [r6, #-1]!
900200c8:	88d2      	ldrh	r2, [r2, #6]
900200ca:	e7f1      	b.n	900200b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
900200cc:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
900200d0:	b29b      	uxth	r3, r3
900200d2:	e7c3      	b.n	9002005c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
900200d4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900200d6:	970c      	str	r7, [sp, #48]	@ 0x30
900200d8:	46b4      	mov	ip, r6
900200da:	9a01      	ldr	r2, [sp, #4]
900200dc:	461f      	mov	r7, r3
900200de:	e78c      	b.n	9001fffa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
900200e0:	1b7b      	subs	r3, r7, r5
900200e2:	eb0c 0605 	add.w	r6, ip, r5
900200e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900200ea:	b29b      	uxth	r3, r3
900200ec:	b2b6      	uxth	r6, r6
900200ee:	9201      	str	r2, [sp, #4]
900200f0:	2500      	movs	r5, #0
900200f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900200f4:	4282      	cmp	r2, r0
900200f6:	d88b      	bhi.n	90020010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
900200f8:	9a01      	ldr	r2, [sp, #4]
900200fa:	e74b      	b.n	9001ff94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
900200fc:	4297      	cmp	r7, r2
900200fe:	d332      	bcc.n	90020166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
90020100:	1abb      	subs	r3, r7, r2
90020102:	9208      	str	r2, [sp, #32]
90020104:	9501      	str	r5, [sp, #4]
90020106:	b29b      	uxth	r3, r3
90020108:	9909      	ldr	r1, [sp, #36]	@ 0x24
9002010a:	29ff      	cmp	r1, #255	@ 0xff
9002010c:	9908      	ldr	r1, [sp, #32]
9002010e:	eb0c 0601 	add.w	r6, ip, r1
90020112:	d135      	bne.n	90020180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
90020114:	f1a0 0e02 	sub.w	lr, r0, #2
90020118:	b2b6      	uxth	r6, r6
9002011a:	45b4      	cmp	ip, r6
9002011c:	f040 808c 	bne.w	90020238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
90020120:	9908      	ldr	r1, [sp, #32]
90020122:	4297      	cmp	r7, r2
90020124:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90020128:	d3e2      	bcc.n	900200f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9002012a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9002012c:	9904      	ldr	r1, [sp, #16]
9002012e:	8812      	ldrh	r2, [r2, #0]
90020130:	1a52      	subs	r2, r2, r1
90020132:	9916      	ldr	r1, [sp, #88]	@ 0x58
90020134:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020138:	9a07      	ldr	r2, [sp, #28]
9002013a:	3201      	adds	r2, #1
9002013c:	428a      	cmp	r2, r1
9002013e:	9207      	str	r2, [sp, #28]
90020140:	f040 8087 	bne.w	90020252 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
90020144:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
90020148:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9002014c:	9b04      	ldr	r3, [sp, #16]
9002014e:	1bed      	subs	r5, r5, r7
90020150:	b2ad      	uxth	r5, r5
90020152:	2d00      	cmp	r5, #0
90020154:	bf08      	it	eq
90020156:	461a      	moveq	r2, r3
90020158:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002015a:	bf18      	it	ne
9002015c:	2200      	movne	r2, #0
9002015e:	3301      	adds	r3, #1
90020160:	b292      	uxth	r2, r2
90020162:	930d      	str	r3, [sp, #52]	@ 0x34
90020164:	e70d      	b.n	9001ff82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
90020166:	1bd1      	subs	r1, r2, r7
90020168:	9708      	str	r7, [sp, #32]
9002016a:	b28b      	uxth	r3, r1
9002016c:	9301      	str	r3, [sp, #4]
9002016e:	462b      	mov	r3, r5
90020170:	e7ca      	b.n	90020108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
90020172:	bf00      	nop
90020174:	240245a0 	.word	0x240245a0
90020178:	24024598 	.word	0x24024598
9002017c:	fffff7fb 	.word	0xfffff7fb
90020180:	b2b6      	uxth	r6, r6
90020182:	900b      	str	r0, [sp, #44]	@ 0x2c
90020184:	45b4      	cmp	ip, r6
90020186:	d0cb      	beq.n	90020120 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
90020188:	f10c 0101 	add.w	r1, ip, #1
9002018c:	44a4      	add	ip, r4
9002018e:	9117      	str	r1, [sp, #92]	@ 0x5c
90020190:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
90020194:	9911      	ldr	r1, [sp, #68]	@ 0x44
90020196:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9002019a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9002019c:	ea4f 2825 	mov.w	r8, r5, asr #8
900201a0:	f8b1 c000 	ldrh.w	ip, [r1]
900201a4:	990e      	ldr	r1, [sp, #56]	@ 0x38
900201a6:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
900201aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
900201ae:	ea4f 09ec 	mov.w	r9, ip, asr #3
900201b2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
900201b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900201ba:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
900201be:	fb1e fe01 	smulbb	lr, lr, r1
900201c2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900201c4:	fa5f fc8c 	uxtb.w	ip, ip
900201c8:	fb08 e801 	mla	r8, r8, r1, lr
900201cc:	ea4f 0ee5 	mov.w	lr, r5, asr #3
900201d0:	990e      	ldr	r1, [sp, #56]	@ 0x38
900201d2:	00ed      	lsls	r5, r5, #3
900201d4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900201d8:	fa1f f888 	uxth.w	r8, r8
900201dc:	fb19 f901 	smulbb	r9, r9, r1
900201e0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900201e2:	b2ed      	uxtb	r5, r5
900201e4:	fb0e 9e01 	mla	lr, lr, r1, r9
900201e8:	990e      	ldr	r1, [sp, #56]	@ 0x38
900201ea:	fb1c fc01 	smulbb	ip, ip, r1
900201ee:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900201f0:	fa1f fe8e 	uxth.w	lr, lr
900201f4:	fb05 c501 	mla	r5, r5, r1, ip
900201f8:	f108 0c01 	add.w	ip, r8, #1
900201fc:	f10e 0901 	add.w	r9, lr, #1
90020200:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90020202:	b2ad      	uxth	r5, r5
90020204:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
90020208:	f105 0c01 	add.w	ip, r5, #1
9002020c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
90020210:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
90020214:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
90020218:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002021c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90020220:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90020224:	ea4c 0808 	orr.w	r8, ip, r8
90020228:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9002022c:	ea48 0809 	orr.w	r8, r8, r9
90020230:	f821 8b02 	strh.w	r8, [r1], #2
90020234:	910b      	str	r1, [sp, #44]	@ 0x2c
90020236:	e7a5      	b.n	90020184 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
90020238:	f10c 0801 	add.w	r8, ip, #1
9002023c:	44a4      	add	ip, r4
9002023e:	9911      	ldr	r1, [sp, #68]	@ 0x44
90020240:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
90020244:	fa1f fc88 	uxth.w	ip, r8
90020248:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9002024c:	f82e 5f02 	strh.w	r5, [lr, #2]!
90020250:	e763      	b.n	9002011a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
90020252:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020256:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9002025a:	1aad      	subs	r5, r5, r2
9002025c:	b2ad      	uxth	r5, r5
9002025e:	2d00      	cmp	r5, #0
90020260:	bf18      	it	ne
90020262:	2200      	movne	r2, #0
90020264:	9201      	str	r2, [sp, #4]
90020266:	e744      	b.n	900200f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
90020268:	4b03      	ldr	r3, [pc, #12]	@ (90020278 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9002026a:	6818      	ldr	r0, [r3, #0]
9002026c:	6803      	ldr	r3, [r0, #0]
9002026e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020270:	4798      	blx	r3
90020272:	b01f      	add	sp, #124	@ 0x7c
90020274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020278:	240245a0 	.word	0x240245a0

9002027c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9002027c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020280:	b093      	sub	sp, #76	@ 0x4c
90020282:	4616      	mov	r6, r2
90020284:	460d      	mov	r5, r1
90020286:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9002028a:	9003      	str	r0, [sp, #12]
9002028c:	9201      	str	r2, [sp, #4]
9002028e:	2a00      	cmp	r2, #0
90020290:	f000 8303 	beq.w	9002089a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
90020294:	6830      	ldr	r0, [r6, #0]
90020296:	ac0e      	add	r4, sp, #56	@ 0x38
90020298:	6871      	ldr	r1, [r6, #4]
9002029a:	c403      	stmia	r4!, {r0, r1}
9002029c:	6818      	ldr	r0, [r3, #0]
9002029e:	ac10      	add	r4, sp, #64	@ 0x40
900202a0:	6859      	ldr	r1, [r3, #4]
900202a2:	c403      	stmia	r4!, {r0, r1}
900202a4:	a80e      	add	r0, sp, #56	@ 0x38
900202a6:	f7f9 f8b9 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900202aa:	4631      	mov	r1, r6
900202ac:	a810      	add	r0, sp, #64	@ 0x40
900202ae:	f7f9 f8dd 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900202b2:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
900202b6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
900202ba:	bfdb      	ittet	le
900202bc:	b293      	uxthle	r3, r2
900202be:	f44f 6180 	movle.w	r1, #1024	@ 0x400
900202c2:	2301      	movgt	r3, #1
900202c4:	fb91 f3f3 	sdivle	r3, r1, r3
900202c8:	9304      	str	r3, [sp, #16]
900202ca:	f105 0308 	add.w	r3, r5, #8
900202ce:	9904      	ldr	r1, [sp, #16]
900202d0:	9308      	str	r3, [sp, #32]
900202d2:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
900202d6:	440b      	add	r3, r1
900202d8:	3b01      	subs	r3, #1
900202da:	fb93 f3f1 	sdiv	r3, r3, r1
900202de:	3b01      	subs	r3, #1
900202e0:	9908      	ldr	r1, [sp, #32]
900202e2:	b29b      	uxth	r3, r3
900202e4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
900202e8:	9904      	ldr	r1, [sp, #16]
900202ea:	9309      	str	r3, [sp, #36]	@ 0x24
900202ec:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
900202f0:	fb93 f0f1 	sdiv	r0, r3, r1
900202f4:	b284      	uxth	r4, r0
900202f6:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
900202fa:	9405      	str	r4, [sp, #20]
900202fc:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
90020300:	fb05 3914 	mls	r9, r5, r4, r3
90020304:	fb19 f902 	smulbb	r9, r9, r2
90020308:	4489      	add	r9, r1
9002030a:	fa1f f989 	uxth.w	r9, r9
9002030e:	2d00      	cmp	r5, #0
90020310:	d05d      	beq.n	900203ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
90020312:	1e6a      	subs	r2, r5, #1
90020314:	9808      	ldr	r0, [sp, #32]
90020316:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9002031a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002031c:	fa9a fa8a 	rev.w	sl, sl
90020320:	4492      	add	sl, r2
90020322:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
90020326:	f04f 0600 	mov.w	r6, #0
9002032a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9002032e:	4411      	add	r1, r2
90020330:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90020334:	4413      	add	r3, r2
90020336:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9002033a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9002033e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
90020342:	9302      	str	r3, [sp, #8]
90020344:	4bca      	ldr	r3, [pc, #808]	@ (90020670 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
90020346:	6818      	ldr	r0, [r3, #0]
90020348:	6803      	ldr	r3, [r0, #0]
9002034a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002034c:	4798      	blx	r3
9002034e:	4bc9      	ldr	r3, [pc, #804]	@ (90020674 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
90020350:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
90020354:	2100      	movs	r1, #0
90020356:	881b      	ldrh	r3, [r3, #0]
90020358:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9002035c:	fb03 2404 	mla	r4, r3, r4, r2
90020360:	2280      	movs	r2, #128	@ 0x80
90020362:	436b      	muls	r3, r5
90020364:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90020368:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002036c:	930d      	str	r3, [sp, #52]	@ 0x34
9002036e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
90020372:	fb99 f3f3 	sdiv	r3, r9, r3
90020376:	9306      	str	r3, [sp, #24]
90020378:	9b01      	ldr	r3, [sp, #4]
9002037a:	43db      	mvns	r3, r3
9002037c:	b2db      	uxtb	r3, r3
9002037e:	930a      	str	r3, [sp, #40]	@ 0x28
90020380:	9b03      	ldr	r3, [sp, #12]
90020382:	3304      	adds	r3, #4
90020384:	4618      	mov	r0, r3
90020386:	930b      	str	r3, [sp, #44]	@ 0x2c
90020388:	f00c fa1a 	bl	9002c7c0 <memset>
9002038c:	4bba      	ldr	r3, [pc, #744]	@ (90020678 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9002038e:	9300      	str	r3, [sp, #0]
90020390:	2300      	movs	r3, #0
90020392:	9307      	str	r3, [sp, #28]
90020394:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020396:	42a3      	cmp	r3, r4
90020398:	f240 827a 	bls.w	90020890 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9002039c:	f04f 0e07 	mov.w	lr, #7
900203a0:	f1b9 0f00 	cmp.w	r9, #0
900203a4:	f000 8159 	beq.w	9002065a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
900203a8:	f89a 5000 	ldrb.w	r5, [sl]
900203ac:	f10a 0701 	add.w	r7, sl, #1
900203b0:	b2ed      	uxtb	r5, r5
900203b2:	11aa      	asrs	r2, r5, #6
900203b4:	d10e      	bne.n	900203d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
900203b6:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
900203ba:	9b03      	ldr	r3, [sp, #12]
900203bc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
900203c0:	88ae      	ldrh	r6, [r5, #4]
900203c2:	f109 39ff 	add.w	r9, r9, #4294967295
900203c6:	fa1f f989 	uxth.w	r9, r9
900203ca:	46ba      	mov	sl, r7
900203cc:	e7e8      	b.n	900203a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
900203ce:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
900203d2:	e7a6      	b.n	90020322 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
900203d4:	2a01      	cmp	r2, #1
900203d6:	d129      	bne.n	9002042c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
900203d8:	f3c6 0304 	ubfx	r3, r6, #0, #5
900203dc:	f005 0203 	and.w	r2, r5, #3
900203e0:	2103      	movs	r1, #3
900203e2:	3b02      	subs	r3, #2
900203e4:	4413      	add	r3, r2
900203e6:	f3c5 0281 	ubfx	r2, r5, #2, #2
900203ea:	f3c5 1501 	ubfx	r5, r5, #4, #2
900203ee:	f003 031f 	and.w	r3, r3, #31
900203f2:	3a02      	subs	r2, #2
900203f4:	3d02      	subs	r5, #2
900203f6:	f363 0604 	bfi	r6, r3, #0, #5
900203fa:	eb02 1256 	add.w	r2, r2, r6, lsr #5
900203fe:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
90020402:	f362 164a 	bfi	r6, r2, #5, #6
90020406:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9002040a:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9002040e:	f005 051f 	and.w	r5, r5, #31
90020412:	fb11 2205 	smlabb	r2, r1, r5, r2
90020416:	f365 26cf 	bfi	r6, r5, #11, #5
9002041a:	fb1e 2303 	smlabb	r3, lr, r3, r2
9002041e:	9a03      	ldr	r2, [sp, #12]
90020420:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
90020424:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020428:	809e      	strh	r6, [r3, #4]
9002042a:	e7ca      	b.n	900203c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9002042c:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
90020430:	2a02      	cmp	r2, #2
90020432:	b2ab      	uxth	r3, r5
90020434:	d136      	bne.n	900204a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
90020436:	2101      	movs	r1, #1
90020438:	fb12 1205 	smlabb	r2, r2, r5, r1
9002043c:	4492      	add	sl, r2
9002043e:	463a      	mov	r2, r7
90020440:	4552      	cmp	r2, sl
90020442:	d01c      	beq.n	9002047e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
90020444:	4694      	mov	ip, r2
90020446:	f04f 0b03 	mov.w	fp, #3
9002044a:	f81c 1b02 	ldrb.w	r1, [ip], #2
9002044e:	7852      	ldrb	r2, [r2, #1]
90020450:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
90020454:	f3c1 1045 	ubfx	r0, r1, #5, #6
90020458:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9002045c:	f001 021f 	and.w	r2, r1, #31
90020460:	460e      	mov	r6, r1
90020462:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90020466:	fb1b 0008 	smlabb	r0, fp, r8, r0
9002046a:	fb1e 0002 	smlabb	r0, lr, r2, r0
9002046e:	9a03      	ldr	r2, [sp, #12]
90020470:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
90020474:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90020478:	4662      	mov	r2, ip
9002047a:	8081      	strh	r1, [r0, #4]
9002047c:	e7e0      	b.n	90020440 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9002047e:	4599      	cmp	r9, r3
90020480:	d20b      	bcs.n	9002049a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
90020482:	eba5 0509 	sub.w	r5, r5, r9
90020486:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9002048a:	2d00      	cmp	r5, #0
9002048c:	f300 8208 	bgt.w	900208a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
90020490:	f8dd 8008 	ldr.w	r8, [sp, #8]
90020494:	2301      	movs	r3, #1
90020496:	9307      	str	r3, [sp, #28]
90020498:	e00c      	b.n	900204b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9002049a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9002049e:	eba9 0903 	sub.w	r9, r9, r3
900204a2:	e790      	b.n	900203c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
900204a4:	4599      	cmp	r9, r3
900204a6:	d2fa      	bcs.n	9002049e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
900204a8:	eba5 0509 	sub.w	r5, r5, r9
900204ac:	2d00      	cmp	r5, #0
900204ae:	dc1d      	bgt.n	900204ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
900204b0:	f8dd 8008 	ldr.w	r8, [sp, #8]
900204b4:	f04f 0b00 	mov.w	fp, #0
900204b8:	f1b8 0f00 	cmp.w	r8, #0
900204bc:	f340 81a0 	ble.w	90020800 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
900204c0:	783b      	ldrb	r3, [r7, #0]
900204c2:	f107 0a01 	add.w	sl, r7, #1
900204c6:	b2db      	uxtb	r3, r3
900204c8:	119a      	asrs	r2, r3, #6
900204ca:	f040 80d7 	bne.w	9002067c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
900204ce:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
900204d2:	9a03      	ldr	r2, [sp, #12]
900204d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900204d8:	889e      	ldrh	r6, [r3, #4]
900204da:	9b01      	ldr	r3, [sp, #4]
900204dc:	2bff      	cmp	r3, #255	@ 0xff
900204de:	f040 81e8 	bne.w	900208b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
900204e2:	8026      	strh	r6, [r4, #0]
900204e4:	f108 38ff 	add.w	r8, r8, #4294967295
900204e8:	3402      	adds	r4, #2
900204ea:	e0be      	b.n	9002066a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
900204ec:	9b02      	ldr	r3, [sp, #8]
900204ee:	9a02      	ldr	r2, [sp, #8]
900204f0:	42ab      	cmp	r3, r5
900204f2:	bfa8      	it	ge
900204f4:	462b      	movge	r3, r5
900204f6:	eba2 0803 	sub.w	r8, r2, r3
900204fa:	9a07      	ldr	r2, [sp, #28]
900204fc:	1aed      	subs	r5, r5, r3
900204fe:	2a00      	cmp	r2, #0
90020500:	d05a      	beq.n	900205b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
90020502:	9a01      	ldr	r2, [sp, #4]
90020504:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90020508:	2aff      	cmp	r2, #255	@ 0xff
9002050a:	d049      	beq.n	900205a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9002050c:	f8bd e004 	ldrh.w	lr, [sp, #4]
90020510:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
90020514:	42a3      	cmp	r3, r4
90020516:	f240 80a5 	bls.w	90020664 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9002051a:	46bc      	mov	ip, r7
9002051c:	8820      	ldrh	r0, [r4, #0]
9002051e:	f81c 2b02 	ldrb.w	r2, [ip], #2
90020522:	ea4f 2a20 	mov.w	sl, r0, asr #8
90020526:	7879      	ldrb	r1, [r7, #1]
90020528:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9002052c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90020530:	fb1a fa09 	smulbb	sl, sl, r9
90020534:	b212      	sxth	r2, r2
90020536:	b291      	uxth	r1, r2
90020538:	00d2      	lsls	r2, r2, #3
9002053a:	120f      	asrs	r7, r1, #8
9002053c:	10c9      	asrs	r1, r1, #3
9002053e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90020542:	b2d2      	uxtb	r2, r2
90020544:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90020548:	fb07 a70e 	mla	r7, r7, lr, sl
9002054c:	ea4f 0ae0 	mov.w	sl, r0, asr #3
90020550:	00c0      	lsls	r0, r0, #3
90020552:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90020556:	b2bf      	uxth	r7, r7
90020558:	b2c0      	uxtb	r0, r0
9002055a:	fb1a fa09 	smulbb	sl, sl, r9
9002055e:	fb10 f009 	smulbb	r0, r0, r9
90020562:	fb01 a10e 	mla	r1, r1, lr, sl
90020566:	fb02 020e 	mla	r2, r2, lr, r0
9002056a:	1c78      	adds	r0, r7, #1
9002056c:	b289      	uxth	r1, r1
9002056e:	b292      	uxth	r2, r2
90020570:	eb00 2717 	add.w	r7, r0, r7, lsr #8
90020574:	f101 0a01 	add.w	sl, r1, #1
90020578:	1c50      	adds	r0, r2, #1
9002057a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9002057e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90020582:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90020586:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9002058a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002058e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90020592:	4307      	orrs	r7, r0
90020594:	ea47 070a 	orr.w	r7, r7, sl
90020598:	f824 7b02 	strh.w	r7, [r4], #2
9002059c:	4667      	mov	r7, ip
9002059e:	e7b9      	b.n	90020514 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
900205a0:	42a3      	cmp	r3, r4
900205a2:	d95f      	bls.n	90020664 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
900205a4:	463a      	mov	r2, r7
900205a6:	f812 1b02 	ldrb.w	r1, [r2], #2
900205aa:	7878      	ldrb	r0, [r7, #1]
900205ac:	4617      	mov	r7, r2
900205ae:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
900205b2:	f824 1b02 	strh.w	r1, [r4], #2
900205b6:	e7f3      	b.n	900205a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
900205b8:	9901      	ldr	r1, [sp, #4]
900205ba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900205be:	b2b2      	uxth	r2, r6
900205c0:	29ff      	cmp	r1, #255	@ 0xff
900205c2:	d044      	beq.n	9002064e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
900205c4:	ea4f 2922 	mov.w	r9, r2, asr #8
900205c8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
900205cc:	ea4f 0ee2 	mov.w	lr, r2, asr #3
900205d0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
900205d4:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
900205d8:	4608      	mov	r0, r1
900205da:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
900205de:	fb09 f901 	mul.w	r9, r9, r1
900205e2:	fb0e fe01 	mul.w	lr, lr, r1
900205e6:	00d1      	lsls	r1, r2, #3
900205e8:	b2c9      	uxtb	r1, r1
900205ea:	4341      	muls	r1, r0
900205ec:	429c      	cmp	r4, r3
900205ee:	f4bf af61 	bcs.w	900204b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
900205f2:	8822      	ldrh	r2, [r4, #0]
900205f4:	1210      	asrs	r0, r2, #8
900205f6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
900205fa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900205fe:	00d2      	lsls	r2, r2, #3
90020600:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90020604:	fb00 900a 	mla	r0, r0, sl, r9
90020608:	b2d2      	uxtb	r2, r2
9002060a:	fb0c ec0a 	mla	ip, ip, sl, lr
9002060e:	b280      	uxth	r0, r0
90020610:	fb02 120a 	mla	r2, r2, sl, r1
90020614:	fa1f fc8c 	uxth.w	ip, ip
90020618:	b292      	uxth	r2, r2
9002061a:	f100 0b01 	add.w	fp, r0, #1
9002061e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90020622:	1c50      	adds	r0, r2, #1
90020624:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90020628:	f10c 0201 	add.w	r2, ip, #1
9002062c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
90020630:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90020634:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90020638:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002063c:	ea40 0b0b 	orr.w	fp, r0, fp
90020640:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90020644:	ea4b 0b0c 	orr.w	fp, fp, ip
90020648:	f824 bb02 	strh.w	fp, [r4], #2
9002064c:	e7ce      	b.n	900205ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9002064e:	429c      	cmp	r4, r3
90020650:	f4bf af30 	bcs.w	900204b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
90020654:	f824 2b02 	strh.w	r2, [r4], #2
90020658:	e7f9      	b.n	9002064e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9002065a:	f8dd 8008 	ldr.w	r8, [sp, #8]
9002065e:	4657      	mov	r7, sl
90020660:	464d      	mov	r5, r9
90020662:	e727      	b.n	900204b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
90020664:	2300      	movs	r3, #0
90020666:	e716      	b.n	90020496 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
90020668:	44bb      	add	fp, r7
9002066a:	4657      	mov	r7, sl
9002066c:	e724      	b.n	900204b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9002066e:	bf00      	nop
90020670:	240245a0 	.word	0x240245a0
90020674:	24024598 	.word	0x24024598
90020678:	240003a0 	.word	0x240003a0
9002067c:	2a01      	cmp	r2, #1
9002067e:	d12a      	bne.n	900206d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
90020680:	f3c6 0104 	ubfx	r1, r6, #0, #5
90020684:	f003 0203 	and.w	r2, r3, #3
90020688:	f3c3 0081 	ubfx	r0, r3, #2, #2
9002068c:	f3c3 1301 	ubfx	r3, r3, #4, #2
90020690:	3902      	subs	r1, #2
90020692:	3802      	subs	r0, #2
90020694:	3b02      	subs	r3, #2
90020696:	4411      	add	r1, r2
90020698:	f001 011f 	and.w	r1, r1, #31
9002069c:	f361 0604 	bfi	r6, r1, #0, #5
900206a0:	eb00 1056 	add.w	r0, r0, r6, lsr #5
900206a4:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
900206a8:	f360 164a 	bfi	r6, r0, #5, #6
900206ac:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900206b0:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
900206b4:	f002 031f 	and.w	r3, r2, #31
900206b8:	2203      	movs	r2, #3
900206ba:	f363 26cf 	bfi	r6, r3, #11, #5
900206be:	fb12 0303 	smlabb	r3, r2, r3, r0
900206c2:	2207      	movs	r2, #7
900206c4:	fb12 3301 	smlabb	r3, r2, r1, r3
900206c8:	9a03      	ldr	r2, [sp, #12]
900206ca:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
900206ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900206d2:	809e      	strh	r6, [r3, #4]
900206d4:	e701      	b.n	900204da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
900206d6:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
900206da:	4647      	mov	r7, r8
900206dc:	45a8      	cmp	r8, r5
900206de:	bfa8      	it	ge
900206e0:	462f      	movge	r7, r5
900206e2:	2a02      	cmp	r2, #2
900206e4:	d154      	bne.n	90020790 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
900206e6:	9b01      	ldr	r3, [sp, #4]
900206e8:	2bff      	cmp	r3, #255	@ 0xff
900206ea:	d01a      	beq.n	90020722 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
900206ec:	eb0b 0307 	add.w	r3, fp, r7
900206f0:	2b40      	cmp	r3, #64	@ 0x40
900206f2:	dd16      	ble.n	90020722 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
900206f4:	ea4f 094b 	mov.w	r9, fp, lsl #1
900206f8:	9800      	ldr	r0, [sp, #0]
900206fa:	4649      	mov	r1, r9
900206fc:	f7e2 f910 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
90020700:	465a      	mov	r2, fp
90020702:	9b01      	ldr	r3, [sp, #4]
90020704:	4620      	mov	r0, r4
90020706:	9900      	ldr	r1, [sp, #0]
90020708:	444c      	add	r4, r9
9002070a:	f7e2 f94f 	bl	900029ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9002070e:	9b00      	ldr	r3, [sp, #0]
90020710:	f04f 0b00 	mov.w	fp, #0
90020714:	461a      	mov	r2, r3
90020716:	4b6a      	ldr	r3, [pc, #424]	@ (900208c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
90020718:	429a      	cmp	r2, r3
9002071a:	bf0c      	ite	eq
9002071c:	4b69      	ldreq	r3, [pc, #420]	@ (900208c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9002071e:	4b68      	ldrne	r3, [pc, #416]	@ (900208c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
90020720:	9300      	str	r3, [sp, #0]
90020722:	4652      	mov	r2, sl
90020724:	2100      	movs	r1, #0
90020726:	42a9      	cmp	r1, r5
90020728:	da2c      	bge.n	90020784 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9002072a:	4694      	mov	ip, r2
9002072c:	f04f 0903 	mov.w	r9, #3
90020730:	42b9      	cmp	r1, r7
90020732:	f81c 3b02 	ldrb.w	r3, [ip], #2
90020736:	7852      	ldrb	r2, [r2, #1]
90020738:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9002073c:	f3c3 1045 	ubfx	r0, r3, #5, #6
90020740:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
90020744:	f003 021f 	and.w	r2, r3, #31
90020748:	461e      	mov	r6, r3
9002074a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9002074e:	fb19 000e 	smlabb	r0, r9, lr, r0
90020752:	f04f 0e07 	mov.w	lr, #7
90020756:	fb1e 0002 	smlabb	r0, lr, r2, r0
9002075a:	9a03      	ldr	r2, [sp, #12]
9002075c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
90020760:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90020764:	8083      	strh	r3, [r0, #4]
90020766:	da0a      	bge.n	9002077e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
90020768:	9a01      	ldr	r2, [sp, #4]
9002076a:	2aff      	cmp	r2, #255	@ 0xff
9002076c:	bf13      	iteet	ne
9002076e:	9a00      	ldrne	r2, [sp, #0]
90020770:	8023      	strheq	r3, [r4, #0]
90020772:	3402      	addeq	r4, #2
90020774:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
90020778:	bf18      	it	ne
9002077a:	f10b 0b01 	addne.w	fp, fp, #1
9002077e:	3101      	adds	r1, #1
90020780:	4662      	mov	r2, ip
90020782:	e7d0      	b.n	90020726 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
90020784:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
90020788:	eba8 0807 	sub.w	r8, r8, r7
9002078c:	1bed      	subs	r5, r5, r7
9002078e:	e76c      	b.n	9002066a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
90020790:	9b01      	ldr	r3, [sp, #4]
90020792:	eba8 0807 	sub.w	r8, r8, r7
90020796:	1bed      	subs	r5, r5, r7
90020798:	fa1f f986 	uxth.w	r9, r6
9002079c:	2bff      	cmp	r3, #255	@ 0xff
9002079e:	d027      	beq.n	900207f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
900207a0:	eb0b 0307 	add.w	r3, fp, r7
900207a4:	2b40      	cmp	r3, #64	@ 0x40
900207a6:	dd18      	ble.n	900207da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
900207a8:	ea4f 034b 	mov.w	r3, fp, lsl #1
900207ac:	9800      	ldr	r0, [sp, #0]
900207ae:	4619      	mov	r1, r3
900207b0:	930c      	str	r3, [sp, #48]	@ 0x30
900207b2:	f7e2 f8b5 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
900207b6:	465a      	mov	r2, fp
900207b8:	9b01      	ldr	r3, [sp, #4]
900207ba:	4620      	mov	r0, r4
900207bc:	9900      	ldr	r1, [sp, #0]
900207be:	f04f 0b00 	mov.w	fp, #0
900207c2:	f7e2 f8f3 	bl	900029ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
900207c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900207c8:	441c      	add	r4, r3
900207ca:	9b00      	ldr	r3, [sp, #0]
900207cc:	461a      	mov	r2, r3
900207ce:	4b3c      	ldr	r3, [pc, #240]	@ (900208c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
900207d0:	429a      	cmp	r2, r3
900207d2:	bf0c      	ite	eq
900207d4:	4b3b      	ldreq	r3, [pc, #236]	@ (900208c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
900207d6:	4b3a      	ldrne	r3, [pc, #232]	@ (900208c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
900207d8:	9300      	str	r3, [sp, #0]
900207da:	9b00      	ldr	r3, [sp, #0]
900207dc:	eb03 024b 	add.w	r2, r3, fp, lsl #1
900207e0:	463b      	mov	r3, r7
900207e2:	2b00      	cmp	r3, #0
900207e4:	f43f af40 	beq.w	90020668 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
900207e8:	f822 9b02 	strh.w	r9, [r2], #2
900207ec:	3b01      	subs	r3, #1
900207ee:	e7f8      	b.n	900207e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
900207f0:	eb04 0747 	add.w	r7, r4, r7, lsl #1
900207f4:	42a7      	cmp	r7, r4
900207f6:	f67f af38 	bls.w	9002066a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
900207fa:	f824 9b02 	strh.w	r9, [r4], #2
900207fe:	e7f9      	b.n	900207f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
90020800:	f1bb 0f00 	cmp.w	fp, #0
90020804:	d00c      	beq.n	90020820 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
90020806:	ea4f 084b 	mov.w	r8, fp, lsl #1
9002080a:	9800      	ldr	r0, [sp, #0]
9002080c:	4641      	mov	r1, r8
9002080e:	f7e2 f887 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
90020812:	4620      	mov	r0, r4
90020814:	4444      	add	r4, r8
90020816:	9b01      	ldr	r3, [sp, #4]
90020818:	465a      	mov	r2, fp
9002081a:	9900      	ldr	r1, [sp, #0]
9002081c:	f7e2 f8c6 	bl	900029ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
90020820:	4b29      	ldr	r3, [pc, #164]	@ (900208c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
90020822:	9a02      	ldr	r2, [sp, #8]
90020824:	881b      	ldrh	r3, [r3, #0]
90020826:	1a9b      	subs	r3, r3, r2
90020828:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002082c:	9b06      	ldr	r3, [sp, #24]
9002082e:	3301      	adds	r3, #1
90020830:	9306      	str	r3, [sp, #24]
90020832:	9a06      	ldr	r2, [sp, #24]
90020834:	9b04      	ldr	r3, [sp, #16]
90020836:	4293      	cmp	r3, r2
90020838:	d120      	bne.n	9002087c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9002083a:	9b05      	ldr	r3, [sp, #20]
9002083c:	2100      	movs	r1, #0
9002083e:	9a05      	ldr	r2, [sp, #20]
90020840:	f04f 0600 	mov.w	r6, #0
90020844:	f103 0801 	add.w	r8, r3, #1
90020848:	9b08      	ldr	r3, [sp, #32]
9002084a:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9002084e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
90020852:	2280      	movs	r2, #128	@ 0x80
90020854:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90020858:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002085a:	ba3f      	rev	r7, r7
9002085c:	eba9 0905 	sub.w	r9, r9, r5
90020860:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020862:	441f      	add	r7, r3
90020864:	f00b ffac 	bl	9002c7c0 <memset>
90020868:	fa1f f989 	uxth.w	r9, r9
9002086c:	2300      	movs	r3, #0
9002086e:	f8cd 8014 	str.w	r8, [sp, #20]
90020872:	9306      	str	r3, [sp, #24]
90020874:	f7e2 f84a 	bl	9000290c <_ZN8touchgfx5paint8tearDownEv>
90020878:	46ba      	mov	sl, r7
9002087a:	e58b      	b.n	90020394 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9002087c:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
90020880:	9b02      	ldr	r3, [sp, #8]
90020882:	eba9 0903 	sub.w	r9, r9, r3
90020886:	eba9 0505 	sub.w	r5, r9, r5
9002088a:	fa1f f985 	uxth.w	r9, r5
9002088e:	e7f1      	b.n	90020874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
90020890:	4b0e      	ldr	r3, [pc, #56]	@ (900208cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
90020892:	6818      	ldr	r0, [r3, #0]
90020894:	6803      	ldr	r3, [r0, #0]
90020896:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020898:	4798      	blx	r3
9002089a:	b013      	add	sp, #76	@ 0x4c
9002089c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900208a0:	9b02      	ldr	r3, [sp, #8]
900208a2:	9a02      	ldr	r2, [sp, #8]
900208a4:	42ab      	cmp	r3, r5
900208a6:	bfa8      	it	ge
900208a8:	462b      	movge	r3, r5
900208aa:	eba2 0803 	sub.w	r8, r2, r3
900208ae:	1aed      	subs	r5, r5, r3
900208b0:	e627      	b.n	90020502 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
900208b2:	f108 38ff 	add.w	r8, r8, #4294967295
900208b6:	fa1f f986 	uxth.w	r9, r6
900208ba:	2500      	movs	r5, #0
900208bc:	2701      	movs	r7, #1
900208be:	e76f      	b.n	900207a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
900208c0:	240003a0 	.word	0x240003a0
900208c4:	240004a0 	.word	0x240004a0
900208c8:	24024598 	.word	0x24024598
900208cc:	240245a0 	.word	0x240245a0

900208d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
900208d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900208d4:	b08f      	sub	sp, #60	@ 0x3c
900208d6:	461c      	mov	r4, r3
900208d8:	460f      	mov	r7, r1
900208da:	9203      	str	r2, [sp, #12]
900208dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900208e0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900208e2:	9202      	str	r2, [sp, #8]
900208e4:	2a00      	cmp	r2, #0
900208e6:	f000 8128 	beq.w	90020b3a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
900208ea:	6820      	ldr	r0, [r4, #0]
900208ec:	aa0a      	add	r2, sp, #40	@ 0x28
900208ee:	6861      	ldr	r1, [r4, #4]
900208f0:	c203      	stmia	r2!, {r0, r1}
900208f2:	6818      	ldr	r0, [r3, #0]
900208f4:	aa0c      	add	r2, sp, #48	@ 0x30
900208f6:	6859      	ldr	r1, [r3, #4]
900208f8:	c203      	stmia	r2!, {r0, r1}
900208fa:	a80a      	add	r0, sp, #40	@ 0x28
900208fc:	f7f8 fd8e 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020900:	4621      	mov	r1, r4
90020902:	a80c      	add	r0, sp, #48	@ 0x30
90020904:	f7f8 fdb2 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020908:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9002090c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
90020910:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
90020914:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
90020918:	bfdb      	ittet	le
9002091a:	b2b3      	uxthle	r3, r6
9002091c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
90020920:	2301      	movgt	r3, #1
90020922:	fb92 f3f3 	sdivle	r3, r2, r3
90020926:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9002092a:	441d      	add	r5, r3
9002092c:	fb92 f1f3 	sdiv	r1, r2, r3
90020930:	fa1f fc81 	uxth.w	ip, r1
90020934:	3d01      	subs	r5, #1
90020936:	fb0c 2413 	mls	r4, ip, r3, r2
9002093a:	4661      	mov	r1, ip
9002093c:	fb14 f406 	smulbb	r4, r4, r6
90020940:	4404      	add	r4, r0
90020942:	fb95 f5f3 	sdiv	r5, r5, r3
90020946:	b2a4      	uxth	r4, r4
90020948:	b121      	cbz	r1, 90020954 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9002094a:	9b03      	ldr	r3, [sp, #12]
9002094c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
90020950:	ba1b      	rev	r3, r3
90020952:	441f      	add	r7, r3
90020954:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90020958:	b2ad      	uxth	r5, r5
9002095a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9002095e:	4418      	add	r0, r3
90020960:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90020964:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90020968:	00ad      	lsls	r5, r5, #2
9002096a:	441a      	add	r2, r3
9002096c:	4b74      	ldr	r3, [pc, #464]	@ (90020b40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9002096e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90020972:	6818      	ldr	r0, [r3, #0]
90020974:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90020978:	6803      	ldr	r3, [r0, #0]
9002097a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002097c:	4798      	blx	r3
9002097e:	4a71      	ldr	r2, [pc, #452]	@ (90020b44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
90020980:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90020984:	2c00      	cmp	r4, #0
90020986:	8813      	ldrh	r3, [r2, #0]
90020988:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9002098c:	bf0c      	ite	eq
9002098e:	46c8      	moveq	r8, r9
90020990:	f04f 0800 	movne.w	r8, #0
90020994:	9209      	str	r2, [sp, #36]	@ 0x24
90020996:	fb03 c101 	mla	r1, r3, r1, ip
9002099a:	4373      	muls	r3, r6
9002099c:	fa1f f888 	uxth.w	r8, r8
900209a0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900209a4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900209a8:	9304      	str	r3, [sp, #16]
900209aa:	1d2b      	adds	r3, r5, #4
900209ac:	9305      	str	r3, [sp, #20]
900209ae:	2300      	movs	r3, #0
900209b0:	9301      	str	r3, [sp, #4]
900209b2:	9a04      	ldr	r2, [sp, #16]
900209b4:	4282      	cmp	r2, r0
900209b6:	f240 80bb 	bls.w	90020b30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
900209ba:	b95b      	cbnz	r3, 900209d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
900209bc:	783a      	ldrb	r2, [r7, #0]
900209be:	0993      	lsrs	r3, r2, #6
900209c0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
900209c4:	9201      	str	r2, [sp, #4]
900209c6:	1e5a      	subs	r2, r3, #1
900209c8:	2a02      	cmp	r2, #2
900209ca:	bf8d      	iteet	hi
900209cc:	787b      	ldrbhi	r3, [r7, #1]
900209ce:	3701      	addls	r7, #1
900209d0:	b29b      	uxthls	r3, r3
900209d2:	3702      	addhi	r7, #2
900209d4:	b184      	cbz	r4, 900209f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
900209d6:	429c      	cmp	r4, r3
900209d8:	bf91      	iteee	ls
900209da:	1b1c      	subls	r4, r3, r4
900209dc:	1ae4      	subhi	r4, r4, r3
900209de:	46c4      	movhi	ip, r8
900209e0:	f04f 0a00 	movhi.w	sl, #0
900209e4:	bf9b      	ittet	ls
900209e6:	fa1f fa84 	uxthls.w	sl, r4
900209ea:	2400      	movls	r4, #0
900209ec:	b2a4      	uxthhi	r4, r4
900209ee:	fa1f fc89 	uxthls.w	ip, r9
900209f2:	4653      	mov	r3, sl
900209f4:	46e0      	mov	r8, ip
900209f6:	e7dc      	b.n	900209b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
900209f8:	2204      	movs	r2, #4
900209fa:	9905      	ldr	r1, [sp, #20]
900209fc:	4543      	cmp	r3, r8
900209fe:	4615      	mov	r5, r2
90020a00:	9a01      	ldr	r2, [sp, #4]
90020a02:	bf24      	itt	cs
90020a04:	eba3 0a08 	subcs.w	sl, r3, r8
90020a08:	46c6      	movcs	lr, r8
90020a0a:	fb15 1202 	smlabb	r2, r5, r2, r1
90020a0e:	9903      	ldr	r1, [sp, #12]
90020a10:	bf3c      	itt	cc
90020a12:	eba8 0c03 	subcc.w	ip, r8, r3
90020a16:	469e      	movcc	lr, r3
90020a18:	588a      	ldr	r2, [r1, r2]
90020a1a:	bf26      	itte	cs
90020a1c:	fa1f fa8a 	uxthcs.w	sl, sl
90020a20:	46a4      	movcs	ip, r4
90020a22:	fa1f fc8c 	uxthcc.w	ip, ip
90020a26:	ea4f 6112 	mov.w	r1, r2, lsr #24
90020a2a:	bf38      	it	cc
90020a2c:	46a2      	movcc	sl, r4
90020a2e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
90020a32:	2900      	cmp	r1, #0
90020a34:	d066      	beq.n	90020b04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
90020a36:	29ff      	cmp	r1, #255	@ 0xff
90020a38:	ea4f 2612 	mov.w	r6, r2, lsr #8
90020a3c:	d114      	bne.n	90020a68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
90020a3e:	9d02      	ldr	r5, [sp, #8]
90020a40:	2dff      	cmp	r5, #255	@ 0xff
90020a42:	d111      	bne.n	90020a68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
90020a44:	0951      	lsrs	r1, r2, #5
90020a46:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
90020a4a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020a4e:	4486      	add	lr, r0
90020a50:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90020a54:	f026 0607 	bic.w	r6, r6, #7
90020a58:	430e      	orrs	r6, r1
90020a5a:	4316      	orrs	r6, r2
90020a5c:	b2b6      	uxth	r6, r6
90020a5e:	4586      	cmp	lr, r0
90020a60:	d051      	beq.n	90020b06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
90020a62:	f820 6b02 	strh.w	r6, [r0], #2
90020a66:	e7fa      	b.n	90020a5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
90020a68:	9d02      	ldr	r5, [sp, #8]
90020a6a:	b2f6      	uxtb	r6, r6
90020a6c:	4486      	add	lr, r0
90020a6e:	4369      	muls	r1, r5
90020a70:	1c4d      	adds	r5, r1, #1
90020a72:	eb05 2521 	add.w	r5, r5, r1, asr #8
90020a76:	f3c2 4107 	ubfx	r1, r2, #16, #8
90020a7a:	b2d2      	uxtb	r2, r2
90020a7c:	122d      	asrs	r5, r5, #8
90020a7e:	ea6f 0b05 	mvn.w	fp, r5
90020a82:	b2ad      	uxth	r5, r5
90020a84:	fb11 f105 	smulbb	r1, r1, r5
90020a88:	fa5f fb8b 	uxtb.w	fp, fp
90020a8c:	fb16 f605 	smulbb	r6, r6, r5
90020a90:	fb12 f205 	smulbb	r2, r2, r5
90020a94:	b289      	uxth	r1, r1
90020a96:	b2b6      	uxth	r6, r6
90020a98:	b292      	uxth	r2, r2
90020a9a:	9106      	str	r1, [sp, #24]
90020a9c:	9607      	str	r6, [sp, #28]
90020a9e:	9208      	str	r2, [sp, #32]
90020aa0:	4586      	cmp	lr, r0
90020aa2:	d030      	beq.n	90020b06 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
90020aa4:	8802      	ldrh	r2, [r0, #0]
90020aa6:	9906      	ldr	r1, [sp, #24]
90020aa8:	1216      	asrs	r6, r2, #8
90020aaa:	10d5      	asrs	r5, r2, #3
90020aac:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020ab0:	00d2      	lsls	r2, r2, #3
90020ab2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020ab6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90020aba:	b2d2      	uxtb	r2, r2
90020abc:	fb06 160b 	mla	r6, r6, fp, r1
90020ac0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90020ac4:	9907      	ldr	r1, [sp, #28]
90020ac6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020aca:	b2b6      	uxth	r6, r6
90020acc:	fb05 150b 	mla	r5, r5, fp, r1
90020ad0:	9908      	ldr	r1, [sp, #32]
90020ad2:	fb02 120b 	mla	r2, r2, fp, r1
90020ad6:	1c71      	adds	r1, r6, #1
90020ad8:	b2ad      	uxth	r5, r5
90020ada:	b292      	uxth	r2, r2
90020adc:	eb01 2616 	add.w	r6, r1, r6, lsr #8
90020ae0:	1c51      	adds	r1, r2, #1
90020ae2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90020ae6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90020aea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020aee:	4316      	orrs	r6, r2
90020af0:	1c6a      	adds	r2, r5, #1
90020af2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
90020af6:	096d      	lsrs	r5, r5, #5
90020af8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020afc:	432e      	orrs	r6, r5
90020afe:	f820 6b02 	strh.w	r6, [r0], #2
90020b02:	e7cd      	b.n	90020aa0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
90020b04:	4470      	add	r0, lr
90020b06:	4543      	cmp	r3, r8
90020b08:	f4ff af73 	bcc.w	900209f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90020b0c:	fa1f fc89 	uxth.w	ip, r9
90020b10:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
90020b14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020b16:	eba4 040c 	sub.w	r4, r4, ip
90020b1a:	881b      	ldrh	r3, [r3, #0]
90020b1c:	b2a4      	uxth	r4, r4
90020b1e:	eba3 0309 	sub.w	r3, r3, r9
90020b22:	2c00      	cmp	r4, #0
90020b24:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020b28:	bf18      	it	ne
90020b2a:	f04f 0c00 	movne.w	ip, #0
90020b2e:	e760      	b.n	900209f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90020b30:	4b03      	ldr	r3, [pc, #12]	@ (90020b40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
90020b32:	6818      	ldr	r0, [r3, #0]
90020b34:	6803      	ldr	r3, [r0, #0]
90020b36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020b38:	4798      	blx	r3
90020b3a:	b00f      	add	sp, #60	@ 0x3c
90020b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020b40:	240245a0 	.word	0x240245a0
90020b44:	24024598 	.word	0x24024598

90020b48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90020b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020b4c:	b093      	sub	sp, #76	@ 0x4c
90020b4e:	461c      	mov	r4, r3
90020b50:	9205      	str	r2, [sp, #20]
90020b52:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
90020b56:	9101      	str	r1, [sp, #4]
90020b58:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90020b5a:	9202      	str	r2, [sp, #8]
90020b5c:	2a00      	cmp	r2, #0
90020b5e:	f000 812e 	beq.w	90020dbe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90020b62:	6820      	ldr	r0, [r4, #0]
90020b64:	aa0e      	add	r2, sp, #56	@ 0x38
90020b66:	6861      	ldr	r1, [r4, #4]
90020b68:	c203      	stmia	r2!, {r0, r1}
90020b6a:	6818      	ldr	r0, [r3, #0]
90020b6c:	aa10      	add	r2, sp, #64	@ 0x40
90020b6e:	6859      	ldr	r1, [r3, #4]
90020b70:	c203      	stmia	r2!, {r0, r1}
90020b72:	a80e      	add	r0, sp, #56	@ 0x38
90020b74:	f7f8 fc52 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020b78:	4621      	mov	r1, r4
90020b7a:	a810      	add	r0, sp, #64	@ 0x40
90020b7c:	f7f8 fc76 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020b80:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
90020b84:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
90020b88:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
90020b8c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
90020b90:	bfdb      	ittet	le
90020b92:	b2b3      	uxthle	r3, r6
90020b94:	f44f 6280 	movle.w	r2, #1024	@ 0x400
90020b98:	2301      	movgt	r3, #1
90020b9a:	fb92 f3f3 	sdivle	r3, r2, r3
90020b9e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90020ba2:	441d      	add	r5, r3
90020ba4:	fb92 f1f3 	sdiv	r1, r2, r3
90020ba8:	fa1f fc81 	uxth.w	ip, r1
90020bac:	3d01      	subs	r5, #1
90020bae:	fb0c 2413 	mls	r4, ip, r3, r2
90020bb2:	4661      	mov	r1, ip
90020bb4:	fb14 f406 	smulbb	r4, r4, r6
90020bb8:	4404      	add	r4, r0
90020bba:	fb95 f5f3 	sdiv	r5, r5, r3
90020bbe:	b2a4      	uxth	r4, r4
90020bc0:	b131      	cbz	r1, 90020bd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
90020bc2:	9b05      	ldr	r3, [sp, #20]
90020bc4:	9901      	ldr	r1, [sp, #4]
90020bc6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
90020bca:	ba1b      	rev	r3, r3
90020bcc:	4419      	add	r1, r3
90020bce:	9101      	str	r1, [sp, #4]
90020bd0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90020bd4:	b2ad      	uxth	r5, r5
90020bd6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90020bda:	4418      	add	r0, r3
90020bdc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
90020be0:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
90020be4:	00ad      	lsls	r5, r5, #2
90020be6:	441a      	add	r2, r3
90020be8:	4b76      	ldr	r3, [pc, #472]	@ (90020dc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
90020bea:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
90020bee:	6818      	ldr	r0, [r3, #0]
90020bf0:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
90020bf4:	6803      	ldr	r3, [r0, #0]
90020bf6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020bf8:	4798      	blx	r3
90020bfa:	4973      	ldr	r1, [pc, #460]	@ (90020dc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
90020bfc:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
90020c00:	2c00      	cmp	r4, #0
90020c02:	880b      	ldrh	r3, [r1, #0]
90020c04:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90020c08:	910d      	str	r1, [sp, #52]	@ 0x34
90020c0a:	fb03 c202 	mla	r2, r3, r2, ip
90020c0e:	bf08      	it	eq
90020c10:	46dc      	moveq	ip, fp
90020c12:	fb03 f306 	mul.w	r3, r3, r6
90020c16:	bf18      	it	ne
90020c18:	f04f 0c00 	movne.w	ip, #0
90020c1c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020c20:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020c24:	fa1f fc8c 	uxth.w	ip, ip
90020c28:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020c2c:	9106      	str	r1, [sp, #24]
90020c2e:	9308      	str	r3, [sp, #32]
90020c30:	1d2b      	adds	r3, r5, #4
90020c32:	9309      	str	r3, [sp, #36]	@ 0x24
90020c34:	9b02      	ldr	r3, [sp, #8]
90020c36:	43da      	mvns	r2, r3
90020c38:	2300      	movs	r3, #0
90020c3a:	b2d2      	uxtb	r2, r2
90020c3c:	9303      	str	r3, [sp, #12]
90020c3e:	9207      	str	r2, [sp, #28]
90020c40:	9a08      	ldr	r2, [sp, #32]
90020c42:	4282      	cmp	r2, r0
90020c44:	f240 80b6 	bls.w	90020db4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
90020c48:	b963      	cbnz	r3, 90020c64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
90020c4a:	9b01      	ldr	r3, [sp, #4]
90020c4c:	781a      	ldrb	r2, [r3, #0]
90020c4e:	0993      	lsrs	r3, r2, #6
90020c50:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
90020c54:	9203      	str	r2, [sp, #12]
90020c56:	1e5a      	subs	r2, r3, #1
90020c58:	2a02      	cmp	r2, #2
90020c5a:	d815      	bhi.n	90020c88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
90020c5c:	9a01      	ldr	r2, [sp, #4]
90020c5e:	b29b      	uxth	r3, r3
90020c60:	3201      	adds	r2, #1
90020c62:	9201      	str	r2, [sp, #4]
90020c64:	b1b4      	cbz	r4, 90020c94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
90020c66:	429c      	cmp	r4, r3
90020c68:	bf91      	iteee	ls
90020c6a:	1b1c      	subls	r4, r3, r4
90020c6c:	1ae4      	subhi	r4, r4, r3
90020c6e:	4666      	movhi	r6, ip
90020c70:	f04f 0800 	movhi.w	r8, #0
90020c74:	bf9b      	ittet	ls
90020c76:	fa1f f884 	uxthls.w	r8, r4
90020c7a:	2400      	movls	r4, #0
90020c7c:	b2a4      	uxthhi	r4, r4
90020c7e:	fa1f f68b 	uxthls.w	r6, fp
90020c82:	4643      	mov	r3, r8
90020c84:	46b4      	mov	ip, r6
90020c86:	e7db      	b.n	90020c40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
90020c88:	9a01      	ldr	r2, [sp, #4]
90020c8a:	9b01      	ldr	r3, [sp, #4]
90020c8c:	3202      	adds	r2, #2
90020c8e:	785b      	ldrb	r3, [r3, #1]
90020c90:	9201      	str	r2, [sp, #4]
90020c92:	e7e7      	b.n	90020c64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
90020c94:	2203      	movs	r2, #3
90020c96:	9909      	ldr	r1, [sp, #36]	@ 0x24
90020c98:	4563      	cmp	r3, ip
90020c9a:	4615      	mov	r5, r2
90020c9c:	9a03      	ldr	r2, [sp, #12]
90020c9e:	bf2c      	ite	cs
90020ca0:	eba3 080c 	subcs.w	r8, r3, ip
90020ca4:	ebac 0603 	subcc.w	r6, ip, r3
90020ca8:	fb15 1202 	smlabb	r2, r5, r2, r1
90020cac:	9905      	ldr	r1, [sp, #20]
90020cae:	bf24      	itt	cs
90020cb0:	fa1f f888 	uxthcs.w	r8, r8
90020cb4:	46e1      	movcs	r9, ip
90020cb6:	eb01 0502 	add.w	r5, r1, r2
90020cba:	9902      	ldr	r1, [sp, #8]
90020cbc:	bf2f      	iteee	cs
90020cbe:	4626      	movcs	r6, r4
90020cc0:	b2b6      	uxthcc	r6, r6
90020cc2:	4699      	movcc	r9, r3
90020cc4:	46a0      	movcc	r8, r4
90020cc6:	29ff      	cmp	r1, #255	@ 0xff
90020cc8:	d04a      	beq.n	90020d60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
90020cca:	9f06      	ldr	r7, [sp, #24]
90020ccc:	46ca      	mov	sl, r9
90020cce:	78a9      	ldrb	r1, [r5, #2]
90020cd0:	9004      	str	r0, [sp, #16]
90020cd2:	4379      	muls	r1, r7
90020cd4:	910a      	str	r1, [sp, #40]	@ 0x28
90020cd6:	7869      	ldrb	r1, [r5, #1]
90020cd8:	4379      	muls	r1, r7
90020cda:	910b      	str	r1, [sp, #44]	@ 0x2c
90020cdc:	9905      	ldr	r1, [sp, #20]
90020cde:	5c8a      	ldrb	r2, [r1, r2]
90020ce0:	437a      	muls	r2, r7
90020ce2:	920c      	str	r2, [sp, #48]	@ 0x30
90020ce4:	f1ba 0f00 	cmp.w	sl, #0
90020ce8:	d03d      	beq.n	90020d66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
90020cea:	9a04      	ldr	r2, [sp, #16]
90020cec:	f10a 3aff 	add.w	sl, sl, #4294967295
90020cf0:	9f07      	ldr	r7, [sp, #28]
90020cf2:	8812      	ldrh	r2, [r2, #0]
90020cf4:	fa1f fa8a 	uxth.w	sl, sl
90020cf8:	46be      	mov	lr, r7
90020cfa:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90020cfc:	1215      	asrs	r5, r2, #8
90020cfe:	10d1      	asrs	r1, r2, #3
90020d00:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020d04:	00d2      	lsls	r2, r2, #3
90020d06:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90020d0a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90020d0e:	b2d2      	uxtb	r2, r2
90020d10:	fb05 750e 	mla	r5, r5, lr, r7
90020d14:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90020d18:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90020d1a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020d1e:	b2ad      	uxth	r5, r5
90020d20:	fb01 710e 	mla	r1, r1, lr, r7
90020d24:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
90020d26:	fb02 720e 	mla	r2, r2, lr, r7
90020d2a:	f105 0e01 	add.w	lr, r5, #1
90020d2e:	b289      	uxth	r1, r1
90020d30:	b292      	uxth	r2, r2
90020d32:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90020d36:	f102 0e01 	add.w	lr, r2, #1
90020d3a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90020d3e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
90020d42:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020d46:	4315      	orrs	r5, r2
90020d48:	1c4a      	adds	r2, r1, #1
90020d4a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020d4e:	9a04      	ldr	r2, [sp, #16]
90020d50:	0949      	lsrs	r1, r1, #5
90020d52:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90020d56:	430d      	orrs	r5, r1
90020d58:	f822 5b02 	strh.w	r5, [r2], #2
90020d5c:	9204      	str	r2, [sp, #16]
90020d5e:	e7c1      	b.n	90020ce4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
90020d60:	4649      	mov	r1, r9
90020d62:	4686      	mov	lr, r0
90020d64:	b999      	cbnz	r1, 90020d8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
90020d66:	4563      	cmp	r3, ip
90020d68:	eb00 0049 	add.w	r0, r0, r9, lsl #1
90020d6c:	d389      	bcc.n	90020c82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
90020d6e:	fa1f f68b 	uxth.w	r6, fp
90020d72:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
90020d76:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020d78:	1ba4      	subs	r4, r4, r6
90020d7a:	881b      	ldrh	r3, [r3, #0]
90020d7c:	b2a4      	uxth	r4, r4
90020d7e:	eba3 030b 	sub.w	r3, r3, fp
90020d82:	2c00      	cmp	r4, #0
90020d84:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020d88:	bf18      	it	ne
90020d8a:	2600      	movne	r6, #0
90020d8c:	e779      	b.n	90020c82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
90020d8e:	78aa      	ldrb	r2, [r5, #2]
90020d90:	3901      	subs	r1, #1
90020d92:	4f0e      	ldr	r7, [pc, #56]	@ (90020dcc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
90020d94:	b289      	uxth	r1, r1
90020d96:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
90020d9a:	786a      	ldrb	r2, [r5, #1]
90020d9c:	00d2      	lsls	r2, r2, #3
90020d9e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90020da2:	ea4a 0202 	orr.w	r2, sl, r2
90020da6:	f895 a000 	ldrb.w	sl, [r5]
90020daa:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
90020dae:	f82e 2b02 	strh.w	r2, [lr], #2
90020db2:	e7d7      	b.n	90020d64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
90020db4:	4b03      	ldr	r3, [pc, #12]	@ (90020dc4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
90020db6:	6818      	ldr	r0, [r3, #0]
90020db8:	6803      	ldr	r3, [r0, #0]
90020dba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020dbc:	4798      	blx	r3
90020dbe:	b013      	add	sp, #76	@ 0x4c
90020dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020dc4:	240245a0 	.word	0x240245a0
90020dc8:	24024598 	.word	0x24024598
90020dcc:	fffff800 	.word	0xfffff800

90020dd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90020dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020dd4:	b09d      	sub	sp, #116	@ 0x74
90020dd6:	461c      	mov	r4, r3
90020dd8:	4683      	mov	fp, r0
90020dda:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90020ddc:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
90020de0:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
90020de4:	920e      	str	r2, [sp, #56]	@ 0x38
90020de6:	2a00      	cmp	r2, #0
90020de8:	f000 81e4 	beq.w	900211b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
90020dec:	6820      	ldr	r0, [r4, #0]
90020dee:	aa18      	add	r2, sp, #96	@ 0x60
90020df0:	6861      	ldr	r1, [r4, #4]
90020df2:	c203      	stmia	r2!, {r0, r1}
90020df4:	6818      	ldr	r0, [r3, #0]
90020df6:	aa1a      	add	r2, sp, #104	@ 0x68
90020df8:	6859      	ldr	r1, [r3, #4]
90020dfa:	c203      	stmia	r2!, {r0, r1}
90020dfc:	a818      	add	r0, sp, #96	@ 0x60
90020dfe:	f7f8 fb0d 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020e02:	4621      	mov	r1, r4
90020e04:	a81a      	add	r0, sp, #104	@ 0x68
90020e06:	f7f8 fb31 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020e0a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
90020e0e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
90020e12:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90020e16:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
90020e1a:	bfdb      	ittet	le
90020e1c:	b29a      	uxthle	r2, r3
90020e1e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
90020e22:	2201      	movgt	r2, #1
90020e24:	fb91 f2f2 	sdivle	r2, r1, r2
90020e28:	9202      	str	r2, [sp, #8]
90020e2a:	9802      	ldr	r0, [sp, #8]
90020e2c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
90020e30:	9902      	ldr	r1, [sp, #8]
90020e32:	fb92 f0f0 	sdiv	r0, r2, r0
90020e36:	b280      	uxth	r0, r0
90020e38:	440c      	add	r4, r1
90020e3a:	900f      	str	r0, [sp, #60]	@ 0x3c
90020e3c:	3c01      	subs	r4, #1
90020e3e:	9802      	ldr	r0, [sp, #8]
90020e40:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90020e42:	fb05 2510 	mls	r5, r5, r0, r2
90020e46:	fb94 f4f1 	sdiv	r4, r4, r1
90020e4a:	fb15 f503 	smulbb	r5, r5, r3
90020e4e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
90020e52:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
90020e56:	3401      	adds	r4, #1
90020e58:	440d      	add	r5, r1
90020e5a:	4419      	add	r1, r3
90020e5c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
90020e60:	b2a4      	uxth	r4, r4
90020e62:	441a      	add	r2, r3
90020e64:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
90020e68:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
90020e6c:	00a4      	lsls	r4, r4, #2
90020e6e:	9306      	str	r3, [sp, #24]
90020e70:	b2ad      	uxth	r5, r5
90020e72:	4bb3      	ldr	r3, [pc, #716]	@ (90021140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
90020e74:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
90020e78:	6818      	ldr	r0, [r3, #0]
90020e7a:	6803      	ldr	r3, [r0, #0]
90020e7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020e7e:	4798      	blx	r3
90020e80:	4bb0      	ldr	r3, [pc, #704]	@ (90021144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
90020e82:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
90020e86:	2d00      	cmp	r5, #0
90020e88:	881a      	ldrh	r2, [r3, #0]
90020e8a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
90020e8e:	fb02 f606 	mul.w	r6, r2, r6
90020e92:	fb02 7101 	mla	r1, r2, r1, r7
90020e96:	9316      	str	r3, [sp, #88]	@ 0x58
90020e98:	eb00 0841 	add.w	r8, r0, r1, lsl #1
90020e9c:	4baa      	ldr	r3, [pc, #680]	@ (90021148 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
90020e9e:	bf18      	it	ne
90020ea0:	2100      	movne	r1, #0
90020ea2:	eb08 0246 	add.w	r2, r8, r6, lsl #1
90020ea6:	eba3 030b 	sub.w	r3, r3, fp
90020eaa:	920a      	str	r2, [sp, #40]	@ 0x28
90020eac:	f104 0204 	add.w	r2, r4, #4
90020eb0:	9317      	str	r3, [sp, #92]	@ 0x5c
90020eb2:	9213      	str	r2, [sp, #76]	@ 0x4c
90020eb4:	9a06      	ldr	r2, [sp, #24]
90020eb6:	bf08      	it	eq
90020eb8:	4611      	moveq	r1, r2
90020eba:	2200      	movs	r2, #0
90020ebc:	b289      	uxth	r1, r1
90020ebe:	920d      	str	r2, [sp, #52]	@ 0x34
90020ec0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90020ec2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020ec4:	fa12 f383 	uxtah	r3, r2, r3
90020ec8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90020eca:	eb02 0383 	add.w	r3, r2, r3, lsl #2
90020ece:	3304      	adds	r3, #4
90020ed0:	9308      	str	r3, [sp, #32]
90020ed2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020ed4:	4543      	cmp	r3, r8
90020ed6:	f240 8168 	bls.w	900211aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
90020eda:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
90020ede:	f04f 0e01 	mov.w	lr, #1
90020ee2:	9a02      	ldr	r2, [sp, #8]
90020ee4:	9808      	ldr	r0, [sp, #32]
90020ee6:	fbb5 f3f3 	udiv	r3, r5, r3
90020eea:	1ad3      	subs	r3, r2, r3
90020eec:	7800      	ldrb	r0, [r0, #0]
90020eee:	b29b      	uxth	r3, r3
90020ef0:	9010      	str	r0, [sp, #64]	@ 0x40
90020ef2:	3001      	adds	r0, #1
90020ef4:	9314      	str	r3, [sp, #80]	@ 0x50
90020ef6:	9b08      	ldr	r3, [sp, #32]
90020ef8:	9007      	str	r0, [sp, #28]
90020efa:	785a      	ldrb	r2, [r3, #1]
90020efc:	789b      	ldrb	r3, [r3, #2]
90020efe:	021b      	lsls	r3, r3, #8
90020f00:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90020f04:	9a08      	ldr	r2, [sp, #32]
90020f06:	78d2      	ldrb	r2, [r2, #3]
90020f08:	4313      	orrs	r3, r2
90020f0a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90020f0c:	441a      	add	r2, r3
90020f0e:	1c50      	adds	r0, r2, #1
90020f10:	7852      	ldrb	r2, [r2, #1]
90020f12:	9005      	str	r0, [sp, #20]
90020f14:	0212      	lsls	r2, r2, #8
90020f16:	9811      	ldr	r0, [sp, #68]	@ 0x44
90020f18:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
90020f1c:	5cc3      	ldrb	r3, [r0, r3]
90020f1e:	431a      	orrs	r2, r3
90020f20:	b293      	uxth	r3, r2
90020f22:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
90020f26:	930b      	str	r3, [sp, #44]	@ 0x2c
90020f28:	2300      	movs	r3, #0
90020f2a:	9309      	str	r3, [sp, #36]	@ 0x24
90020f2c:	2301      	movs	r3, #1
90020f2e:	9301      	str	r3, [sp, #4]
90020f30:	9304      	str	r3, [sp, #16]
90020f32:	2300      	movs	r3, #0
90020f34:	9303      	str	r3, [sp, #12]
90020f36:	2d00      	cmp	r5, #0
90020f38:	d07d      	beq.n	90021036 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
90020f3a:	45ae      	cmp	lr, r5
90020f3c:	d26c      	bcs.n	90021018 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
90020f3e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020f40:	eba5 050e 	sub.w	r5, r5, lr
90020f44:	460c      	mov	r4, r1
90020f46:	4543      	cmp	r3, r8
90020f48:	b2ad      	uxth	r5, r5
90020f4a:	d802      	bhi.n	90020f52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
90020f4c:	e071      	b.n	90021032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
90020f4e:	2b00      	cmp	r3, #0
90020f50:	d15d      	bne.n	9002100e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
90020f52:	9b05      	ldr	r3, [sp, #20]
90020f54:	9a04      	ldr	r2, [sp, #16]
90020f56:	785b      	ldrb	r3, [r3, #1]
90020f58:	f1c2 0207 	rsb	r2, r2, #7
90020f5c:	9904      	ldr	r1, [sp, #16]
90020f5e:	4093      	lsls	r3, r2
90020f60:	005b      	lsls	r3, r3, #1
90020f62:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
90020f66:	9b05      	ldr	r3, [sp, #20]
90020f68:	781b      	ldrb	r3, [r3, #0]
90020f6a:	410b      	asrs	r3, r1
90020f6c:	3101      	adds	r1, #1
90020f6e:	b2c9      	uxtb	r1, r1
90020f70:	b2db      	uxtb	r3, r3
90020f72:	2908      	cmp	r1, #8
90020f74:	9104      	str	r1, [sp, #16]
90020f76:	9905      	ldr	r1, [sp, #20]
90020f78:	ea43 0302 	orr.w	r3, r3, r2
90020f7c:	bf0c      	ite	eq
90020f7e:	3102      	addeq	r1, #2
90020f80:	3101      	addne	r1, #1
90020f82:	b29a      	uxth	r2, r3
90020f84:	bf05      	ittet	eq
90020f86:	9105      	streq	r1, [sp, #20]
90020f88:	2100      	moveq	r1, #0
90020f8a:	9105      	strne	r1, [sp, #20]
90020f8c:	9104      	streq	r1, [sp, #16]
90020f8e:	9910      	ldr	r1, [sp, #64]	@ 0x40
90020f90:	4291      	cmp	r1, r2
90020f92:	d30a      	bcc.n	90020faa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
90020f94:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
90020f98:	2301      	movs	r3, #1
90020f9a:	9907      	ldr	r1, [sp, #28]
90020f9c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
90020fa0:	d30f      	bcc.n	90020fc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
90020fa2:	2100      	movs	r1, #0
90020fa4:	9301      	str	r3, [sp, #4]
90020fa6:	9103      	str	r1, [sp, #12]
90020fa8:	e032      	b.n	90021010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
90020faa:	9b07      	ldr	r3, [sp, #28]
90020fac:	429a      	cmp	r2, r3
90020fae:	d318      	bcc.n	90020fe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
90020fb0:	9b01      	ldr	r3, [sp, #4]
90020fb2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
90020fb6:	445b      	add	r3, fp
90020fb8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
90020fbc:	9b01      	ldr	r3, [sp, #4]
90020fbe:	3301      	adds	r3, #1
90020fc0:	b29b      	uxth	r3, r3
90020fc2:	9907      	ldr	r1, [sp, #28]
90020fc4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
90020fc8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
90020fcc:	7108      	strb	r0, [r1, #4]
90020fce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020fd0:	80c8      	strh	r0, [r1, #6]
90020fd2:	9801      	ldr	r0, [sp, #4]
90020fd4:	3001      	adds	r0, #1
90020fd6:	7148      	strb	r0, [r1, #5]
90020fd8:	9907      	ldr	r1, [sp, #28]
90020fda:	3101      	adds	r1, #1
90020fdc:	b289      	uxth	r1, r1
90020fde:	9107      	str	r1, [sp, #28]
90020fe0:	e7df      	b.n	90020fa2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
90020fe2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
90020fe6:	4611      	mov	r1, r2
90020fe8:	795b      	ldrb	r3, [r3, #5]
90020fea:	f603 0004 	addw	r0, r3, #2052	@ 0x804
90020fee:	4458      	add	r0, fp
90020ff0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
90020ff2:	4406      	add	r6, r0
90020ff4:	2e00      	cmp	r6, #0
90020ff6:	dd06      	ble.n	90021006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
90020ff8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
90020ffc:	790e      	ldrb	r6, [r1, #4]
90020ffe:	f800 6d01 	strb.w	r6, [r0, #-1]!
90021002:	88c9      	ldrh	r1, [r1, #6]
90021004:	e7f4      	b.n	90020ff0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
90021006:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9002100a:	b29b      	uxth	r3, r3
9002100c:	e7c5      	b.n	90020f9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9002100e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90021010:	4621      	mov	r1, r4
90021012:	920b      	str	r2, [sp, #44]	@ 0x2c
90021014:	469e      	mov	lr, r3
90021016:	e78e      	b.n	90020f36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
90021018:	9a03      	ldr	r2, [sp, #12]
9002101a:	ebae 0305 	sub.w	r3, lr, r5
9002101e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
90021022:	442a      	add	r2, r5
90021024:	b29b      	uxth	r3, r3
90021026:	b292      	uxth	r2, r2
90021028:	9203      	str	r2, [sp, #12]
9002102a:	2500      	movs	r5, #0
9002102c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002102e:	4542      	cmp	r2, r8
90021030:	d88d      	bhi.n	90020f4e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
90021032:	4621      	mov	r1, r4
90021034:	e74d      	b.n	90020ed2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
90021036:	458e      	cmp	lr, r1
90021038:	f04f 0900 	mov.w	r9, #0
9002103c:	bf2b      	itete	cs
9002103e:	ebae 0301 	subcs.w	r3, lr, r1
90021042:	eba1 040e 	subcc.w	r4, r1, lr
90021046:	462c      	movcs	r4, r5
90021048:	462b      	movcc	r3, r5
9002104a:	bf27      	ittee	cs
9002104c:	b29b      	uxthcs	r3, r3
9002104e:	910c      	strcs	r1, [sp, #48]	@ 0x30
90021050:	b2a4      	uxthcc	r4, r4
90021052:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
90021056:	9a03      	ldr	r2, [sp, #12]
90021058:	980c      	ldr	r0, [sp, #48]	@ 0x30
9002105a:	444a      	add	r2, r9
9002105c:	4548      	cmp	r0, r9
9002105e:	b292      	uxth	r2, r2
90021060:	d074      	beq.n	9002114c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
90021062:	2004      	movs	r0, #4
90021064:	445a      	add	r2, fp
90021066:	4605      	mov	r5, r0
90021068:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9002106c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9002106e:	fb15 0202 	smlabb	r2, r5, r2, r0
90021072:	9812      	ldr	r0, [sp, #72]	@ 0x48
90021074:	5880      	ldr	r0, [r0, r2]
90021076:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9002107a:	d014      	beq.n	900210a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9002107c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90021080:	ea4f 2510 	mov.w	r5, r0, lsr #8
90021084:	d112      	bne.n	900210ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
90021086:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90021088:	2aff      	cmp	r2, #255	@ 0xff
9002108a:	d10f      	bne.n	900210ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9002108c:	0942      	lsrs	r2, r0, #5
9002108e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
90021092:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90021096:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002109a:	f025 0507 	bic.w	r5, r5, #7
9002109e:	4315      	orrs	r5, r2
900210a0:	4305      	orrs	r5, r0
900210a2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
900210a6:	f109 0901 	add.w	r9, r9, #1
900210aa:	e7d4      	b.n	90021056 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
900210ac:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
900210b0:	b2ed      	uxtb	r5, r5
900210b2:	ea4f 06ec 	mov.w	r6, ip, asr #3
900210b6:	ea4f 272c 	mov.w	r7, ip, asr #8
900210ba:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
900210be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900210c2:	f3c0 4607 	ubfx	r6, r0, #16, #8
900210c6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900210ca:	9215      	str	r2, [sp, #84]	@ 0x54
900210cc:	fa5f fc8c 	uxtb.w	ip, ip
900210d0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900210d2:	b2c0      	uxtb	r0, r0
900210d4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
900210d8:	fb02 fa0a 	mul.w	sl, r2, sl
900210dc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
900210e0:	f10a 0201 	add.w	r2, sl, #1
900210e4:	eb02 222a 	add.w	r2, r2, sl, asr #8
900210e8:	1212      	asrs	r2, r2, #8
900210ea:	fa1f fa82 	uxth.w	sl, r2
900210ee:	43d2      	mvns	r2, r2
900210f0:	fb16 f60a 	smulbb	r6, r6, sl
900210f4:	b2d2      	uxtb	r2, r2
900210f6:	fb10 f00a 	smulbb	r0, r0, sl
900210fa:	fb07 6702 	mla	r7, r7, r2, r6
900210fe:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90021100:	fb0c 0002 	mla	r0, ip, r2, r0
90021104:	fb15 f50a 	smulbb	r5, r5, sl
90021108:	b2bf      	uxth	r7, r7
9002110a:	b280      	uxth	r0, r0
9002110c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90021110:	fb06 5602 	mla	r6, r6, r2, r5
90021114:	1c7a      	adds	r2, r7, #1
90021116:	1c45      	adds	r5, r0, #1
90021118:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9002111c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90021120:	b2b6      	uxth	r6, r6
90021122:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90021126:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9002112a:	432f      	orrs	r7, r5
9002112c:	1c75      	adds	r5, r6, #1
9002112e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
90021132:	096d      	lsrs	r5, r5, #5
90021134:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021138:	432f      	orrs	r7, r5
9002113a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9002113e:	e7b2      	b.n	900210a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
90021140:	240245a0 	.word	0x240245a0
90021144:	24024598 	.word	0x24024598
90021148:	fffff7fb 	.word	0xfffff7fb
9002114c:	9203      	str	r2, [sp, #12]
9002114e:	458e      	cmp	lr, r1
90021150:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90021152:	eb08 0842 	add.w	r8, r8, r2, lsl #1
90021156:	f4ff af68 	bcc.w	9002102a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9002115a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9002115c:	9906      	ldr	r1, [sp, #24]
9002115e:	8812      	ldrh	r2, [r2, #0]
90021160:	1a52      	subs	r2, r2, r1
90021162:	9914      	ldr	r1, [sp, #80]	@ 0x50
90021164:	eb08 0842 	add.w	r8, r8, r2, lsl #1
90021168:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002116a:	3201      	adds	r2, #1
9002116c:	428a      	cmp	r2, r1
9002116e:	9209      	str	r2, [sp, #36]	@ 0x24
90021170:	d111      	bne.n	90021196 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
90021172:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
90021176:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9002117a:	9b06      	ldr	r3, [sp, #24]
9002117c:	eba5 0509 	sub.w	r5, r5, r9
90021180:	b2ad      	uxth	r5, r5
90021182:	2d00      	cmp	r5, #0
90021184:	bf08      	it	eq
90021186:	4619      	moveq	r1, r3
90021188:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002118a:	bf18      	it	ne
9002118c:	2100      	movne	r1, #0
9002118e:	3301      	adds	r3, #1
90021190:	b289      	uxth	r1, r1
90021192:	930d      	str	r3, [sp, #52]	@ 0x34
90021194:	e694      	b.n	90020ec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
90021196:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9002119a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9002119e:	1b2d      	subs	r5, r5, r4
900211a0:	b2ad      	uxth	r5, r5
900211a2:	2d00      	cmp	r5, #0
900211a4:	bf18      	it	ne
900211a6:	2400      	movne	r4, #0
900211a8:	e740      	b.n	9002102c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
900211aa:	4b04      	ldr	r3, [pc, #16]	@ (900211bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
900211ac:	6818      	ldr	r0, [r3, #0]
900211ae:	6803      	ldr	r3, [r0, #0]
900211b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900211b2:	4798      	blx	r3
900211b4:	b01d      	add	sp, #116	@ 0x74
900211b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900211ba:	bf00      	nop
900211bc:	240245a0 	.word	0x240245a0

900211c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
900211c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900211c4:	b09f      	sub	sp, #124	@ 0x7c
900211c6:	461d      	mov	r5, r3
900211c8:	4604      	mov	r4, r0
900211ca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900211cc:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
900211d0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
900211d4:	920a      	str	r2, [sp, #40]	@ 0x28
900211d6:	2a00      	cmp	r2, #0
900211d8:	f000 81fe 	beq.w	900215d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
900211dc:	6828      	ldr	r0, [r5, #0]
900211de:	aa1a      	add	r2, sp, #104	@ 0x68
900211e0:	6869      	ldr	r1, [r5, #4]
900211e2:	c203      	stmia	r2!, {r0, r1}
900211e4:	6818      	ldr	r0, [r3, #0]
900211e6:	aa1c      	add	r2, sp, #112	@ 0x70
900211e8:	6859      	ldr	r1, [r3, #4]
900211ea:	c203      	stmia	r2!, {r0, r1}
900211ec:	a81a      	add	r0, sp, #104	@ 0x68
900211ee:	f7f8 f915 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900211f2:	4629      	mov	r1, r5
900211f4:	a81c      	add	r0, sp, #112	@ 0x70
900211f6:	f7f8 f939 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900211fa:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
900211fe:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
90021202:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90021206:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9002120a:	bfdb      	ittet	le
9002120c:	b29a      	uxthle	r2, r3
9002120e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
90021212:	2201      	movgt	r2, #1
90021214:	fb91 f2f2 	sdivle	r2, r1, r2
90021218:	9201      	str	r2, [sp, #4]
9002121a:	9801      	ldr	r0, [sp, #4]
9002121c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
90021220:	9901      	ldr	r1, [sp, #4]
90021222:	fb92 f0f0 	sdiv	r0, r2, r0
90021226:	b280      	uxth	r0, r0
90021228:	440e      	add	r6, r1
9002122a:	9010      	str	r0, [sp, #64]	@ 0x40
9002122c:	3e01      	subs	r6, #1
9002122e:	9801      	ldr	r0, [sp, #4]
90021230:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90021232:	fb05 2510 	mls	r5, r5, r0, r2
90021236:	fb96 f6f1 	sdiv	r6, r6, r1
9002123a:	fb15 f503 	smulbb	r5, r5, r3
9002123e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
90021242:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90021246:	3601      	adds	r6, #1
90021248:	440d      	add	r5, r1
9002124a:	4419      	add	r1, r3
9002124c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
90021250:	b2b6      	uxth	r6, r6
90021252:	441a      	add	r2, r3
90021254:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
90021258:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9002125c:	b2ad      	uxth	r5, r5
9002125e:	9304      	str	r3, [sp, #16]
90021260:	4b96      	ldr	r3, [pc, #600]	@ (900214bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
90021262:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
90021266:	6818      	ldr	r0, [r3, #0]
90021268:	6803      	ldr	r3, [r0, #0]
9002126a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002126c:	4798      	blx	r3
9002126e:	4b94      	ldr	r3, [pc, #592]	@ (900214c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
90021270:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
90021274:	2d00      	cmp	r5, #0
90021276:	881a      	ldrh	r2, [r3, #0]
90021278:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9002127c:	fb02 f707 	mul.w	r7, r2, r7
90021280:	fb02 c101 	mla	r1, r2, r1, ip
90021284:	9318      	str	r3, [sp, #96]	@ 0x60
90021286:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9002128a:	4b8e      	ldr	r3, [pc, #568]	@ (900214c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9002128c:	bf18      	it	ne
9002128e:	2100      	movne	r1, #0
90021290:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
90021294:	eba3 0304 	sub.w	r3, r3, r4
90021298:	920b      	str	r2, [sp, #44]	@ 0x2c
9002129a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002129c:	9319      	str	r3, [sp, #100]	@ 0x64
9002129e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
900212a2:	f106 0204 	add.w	r2, r6, #4
900212a6:	9206      	str	r2, [sp, #24]
900212a8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900212aa:	ea6f 0202 	mvn.w	r2, r2
900212ae:	b2d2      	uxtb	r2, r2
900212b0:	9215      	str	r2, [sp, #84]	@ 0x54
900212b2:	9a04      	ldr	r2, [sp, #16]
900212b4:	bf08      	it	eq
900212b6:	4611      	moveq	r1, r2
900212b8:	2200      	movs	r2, #0
900212ba:	b289      	uxth	r1, r1
900212bc:	920d      	str	r2, [sp, #52]	@ 0x34
900212be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900212c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900212c2:	fa12 f383 	uxtah	r3, r2, r3
900212c6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900212c8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
900212cc:	3304      	adds	r3, #4
900212ce:	9307      	str	r3, [sp, #28]
900212d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900212d2:	455b      	cmp	r3, fp
900212d4:	f240 817b 	bls.w	900215ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
900212d8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
900212dc:	f04f 0801 	mov.w	r8, #1
900212e0:	9a01      	ldr	r2, [sp, #4]
900212e2:	9807      	ldr	r0, [sp, #28]
900212e4:	46c4      	mov	ip, r8
900212e6:	f8cd 8008 	str.w	r8, [sp, #8]
900212ea:	7800      	ldrb	r0, [r0, #0]
900212ec:	fbb5 f3f3 	udiv	r3, r5, r3
900212f0:	1ad3      	subs	r3, r2, r3
900212f2:	9011      	str	r0, [sp, #68]	@ 0x44
900212f4:	3001      	adds	r0, #1
900212f6:	b29b      	uxth	r3, r3
900212f8:	9005      	str	r0, [sp, #20]
900212fa:	9316      	str	r3, [sp, #88]	@ 0x58
900212fc:	9b07      	ldr	r3, [sp, #28]
900212fe:	785a      	ldrb	r2, [r3, #1]
90021300:	789b      	ldrb	r3, [r3, #2]
90021302:	021b      	lsls	r3, r3, #8
90021304:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90021308:	9a07      	ldr	r2, [sp, #28]
9002130a:	78d2      	ldrb	r2, [r2, #3]
9002130c:	4313      	orrs	r3, r2
9002130e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90021310:	441a      	add	r2, r3
90021312:	1c50      	adds	r0, r2, #1
90021314:	7852      	ldrb	r2, [r2, #1]
90021316:	9003      	str	r0, [sp, #12]
90021318:	0212      	lsls	r2, r2, #8
9002131a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9002131c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
90021320:	5cc3      	ldrb	r3, [r0, r3]
90021322:	431a      	orrs	r2, r3
90021324:	b293      	uxth	r3, r2
90021326:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9002132a:	930c      	str	r3, [sp, #48]	@ 0x30
9002132c:	2300      	movs	r3, #0
9002132e:	9308      	str	r3, [sp, #32]
90021330:	461a      	mov	r2, r3
90021332:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90021336:	930e      	str	r3, [sp, #56]	@ 0x38
90021338:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9002133c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002133e:	2d00      	cmp	r5, #0
90021340:	d07d      	beq.n	9002143e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
90021342:	45ac      	cmp	ip, r5
90021344:	d26d      	bcs.n	90021422 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
90021346:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021348:	eba5 050c 	sub.w	r5, r5, ip
9002134c:	4608      	mov	r0, r1
9002134e:	455b      	cmp	r3, fp
90021350:	b2ad      	uxth	r5, r5
90021352:	d802      	bhi.n	9002135a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
90021354:	e071      	b.n	9002143a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
90021356:	2b00      	cmp	r3, #0
90021358:	d15d      	bne.n	90021416 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9002135a:	9b03      	ldr	r3, [sp, #12]
9002135c:	9a02      	ldr	r2, [sp, #8]
9002135e:	785b      	ldrb	r3, [r3, #1]
90021360:	f1c2 0207 	rsb	r2, r2, #7
90021364:	9902      	ldr	r1, [sp, #8]
90021366:	4093      	lsls	r3, r2
90021368:	005b      	lsls	r3, r3, #1
9002136a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9002136e:	9b03      	ldr	r3, [sp, #12]
90021370:	781b      	ldrb	r3, [r3, #0]
90021372:	410b      	asrs	r3, r1
90021374:	3101      	adds	r1, #1
90021376:	b2c9      	uxtb	r1, r1
90021378:	b2db      	uxtb	r3, r3
9002137a:	2908      	cmp	r1, #8
9002137c:	9102      	str	r1, [sp, #8]
9002137e:	9903      	ldr	r1, [sp, #12]
90021380:	ea43 0302 	orr.w	r3, r3, r2
90021384:	bf0c      	ite	eq
90021386:	3102      	addeq	r1, #2
90021388:	3101      	addne	r1, #1
9002138a:	b29a      	uxth	r2, r3
9002138c:	bf05      	ittet	eq
9002138e:	9103      	streq	r1, [sp, #12]
90021390:	2100      	moveq	r1, #0
90021392:	9103      	strne	r1, [sp, #12]
90021394:	9102      	streq	r1, [sp, #8]
90021396:	9911      	ldr	r1, [sp, #68]	@ 0x44
90021398:	4291      	cmp	r1, r2
9002139a:	d30a      	bcc.n	900213b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9002139c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
900213a0:	2301      	movs	r3, #1
900213a2:	9905      	ldr	r1, [sp, #20]
900213a4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
900213a8:	d30f      	bcc.n	900213ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
900213aa:	2100      	movs	r1, #0
900213ac:	4698      	mov	r8, r3
900213ae:	9100      	str	r1, [sp, #0]
900213b0:	e032      	b.n	90021418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
900213b2:	9b05      	ldr	r3, [sp, #20]
900213b4:	429a      	cmp	r2, r3
900213b6:	d318      	bcc.n	900213ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
900213b8:	eb04 0308 	add.w	r3, r4, r8
900213bc:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
900213c0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
900213c4:	f108 0301 	add.w	r3, r8, #1
900213c8:	b29b      	uxth	r3, r3
900213ca:	9905      	ldr	r1, [sp, #20]
900213cc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
900213d0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
900213d4:	710e      	strb	r6, [r1, #4]
900213d6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
900213d8:	80ce      	strh	r6, [r1, #6]
900213da:	f108 0601 	add.w	r6, r8, #1
900213de:	714e      	strb	r6, [r1, #5]
900213e0:	9905      	ldr	r1, [sp, #20]
900213e2:	3101      	adds	r1, #1
900213e4:	b289      	uxth	r1, r1
900213e6:	9105      	str	r1, [sp, #20]
900213e8:	e7df      	b.n	900213aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
900213ea:	eb04 0382 	add.w	r3, r4, r2, lsl #2
900213ee:	4611      	mov	r1, r2
900213f0:	795b      	ldrb	r3, [r3, #5]
900213f2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
900213f6:	4426      	add	r6, r4
900213f8:	9f19      	ldr	r7, [sp, #100]	@ 0x64
900213fa:	4437      	add	r7, r6
900213fc:	2f00      	cmp	r7, #0
900213fe:	dd06      	ble.n	9002140e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
90021400:	eb04 0181 	add.w	r1, r4, r1, lsl #2
90021404:	790f      	ldrb	r7, [r1, #4]
90021406:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002140a:	88c9      	ldrh	r1, [r1, #6]
9002140c:	e7f4      	b.n	900213f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9002140e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
90021412:	b29b      	uxth	r3, r3
90021414:	e7c5      	b.n	900213a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
90021416:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90021418:	920c      	str	r2, [sp, #48]	@ 0x30
9002141a:	4601      	mov	r1, r0
9002141c:	9a00      	ldr	r2, [sp, #0]
9002141e:	469c      	mov	ip, r3
90021420:	e78d      	b.n	9002133e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
90021422:	ebac 0305 	sub.w	r3, ip, r5
90021426:	1957      	adds	r7, r2, r5
90021428:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9002142c:	b2ba      	uxth	r2, r7
9002142e:	b29b      	uxth	r3, r3
90021430:	9200      	str	r2, [sp, #0]
90021432:	2500      	movs	r5, #0
90021434:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90021436:	455a      	cmp	r2, fp
90021438:	d88d      	bhi.n	90021356 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9002143a:	4601      	mov	r1, r0
9002143c:	e748      	b.n	900212d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9002143e:	458c      	cmp	ip, r1
90021440:	bf27      	ittee	cs
90021442:	ebac 0301 	subcs.w	r3, ip, r1
90021446:	4628      	movcs	r0, r5
90021448:	eba1 000c 	subcc.w	r0, r1, ip
9002144c:	462b      	movcc	r3, r5
9002144e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90021450:	bf27      	ittee	cs
90021452:	b29b      	uxthcs	r3, r3
90021454:	9109      	strcs	r1, [sp, #36]	@ 0x24
90021456:	b280      	uxthcc	r0, r0
90021458:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9002145c:	2dff      	cmp	r5, #255	@ 0xff
9002145e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90021460:	eb02 0705 	add.w	r7, r2, r5
90021464:	b2bd      	uxth	r5, r7
90021466:	9500      	str	r5, [sp, #0]
90021468:	d12e      	bne.n	900214c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9002146a:	465e      	mov	r6, fp
9002146c:	9d00      	ldr	r5, [sp, #0]
9002146e:	42aa      	cmp	r2, r5
90021470:	f040 8083 	bne.w	9002157a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
90021474:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90021476:	458c      	cmp	ip, r1
90021478:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9002147c:	d3d9      	bcc.n	90021432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9002147e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90021480:	9904      	ldr	r1, [sp, #16]
90021482:	8812      	ldrh	r2, [r2, #0]
90021484:	1a52      	subs	r2, r2, r1
90021486:	9916      	ldr	r1, [sp, #88]	@ 0x58
90021488:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9002148c:	9a08      	ldr	r2, [sp, #32]
9002148e:	3201      	adds	r2, #1
90021490:	428a      	cmp	r2, r1
90021492:	9208      	str	r2, [sp, #32]
90021494:	f040 8091 	bne.w	900215ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
90021498:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9002149c:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
900214a0:	9b04      	ldr	r3, [sp, #16]
900214a2:	eba5 050c 	sub.w	r5, r5, ip
900214a6:	b2ad      	uxth	r5, r5
900214a8:	2d00      	cmp	r5, #0
900214aa:	bf08      	it	eq
900214ac:	4619      	moveq	r1, r3
900214ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900214b0:	bf18      	it	ne
900214b2:	2100      	movne	r1, #0
900214b4:	3301      	adds	r3, #1
900214b6:	b289      	uxth	r1, r1
900214b8:	930d      	str	r3, [sp, #52]	@ 0x34
900214ba:	e700      	b.n	900212be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
900214bc:	240245a0 	.word	0x240245a0
900214c0:	24024598 	.word	0x24024598
900214c4:	fffff7fb 	.word	0xfffff7fb
900214c8:	46d9      	mov	r9, fp
900214ca:	9d00      	ldr	r5, [sp, #0]
900214cc:	42aa      	cmp	r2, r5
900214ce:	d0d1      	beq.n	90021474 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
900214d0:	1c55      	adds	r5, r2, #1
900214d2:	4422      	add	r2, r4
900214d4:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
900214d8:	9a06      	ldr	r2, [sp, #24]
900214da:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
900214de:	9517      	str	r5, [sp, #92]	@ 0x5c
900214e0:	4472      	add	r2, lr
900214e2:	9212      	str	r2, [sp, #72]	@ 0x48
900214e4:	f8b9 2000 	ldrh.w	r2, [r9]
900214e8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
900214ea:	1216      	asrs	r6, r2, #8
900214ec:	f897 a002 	ldrb.w	sl, [r7, #2]
900214f0:	10d5      	asrs	r5, r2, #3
900214f2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
900214f4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900214f8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900214fc:	00d2      	lsls	r2, r2, #3
900214fe:	fb1a fa07 	smulbb	sl, sl, r7
90021502:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90021506:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90021508:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9002150c:	b2d2      	uxtb	r2, r2
9002150e:	fb06 a607 	mla	r6, r6, r7, sl
90021512:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90021514:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90021518:	f897 a001 	ldrb.w	sl, [r7, #1]
9002151c:	b2b6      	uxth	r6, r6
9002151e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
90021520:	fb1a fa07 	smulbb	sl, sl, r7
90021524:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90021526:	fb05 a507 	mla	r5, r5, r7, sl
9002152a:	9f06      	ldr	r7, [sp, #24]
9002152c:	f106 0a01 	add.w	sl, r6, #1
90021530:	f817 e00e 	ldrb.w	lr, [r7, lr]
90021534:	b2ad      	uxth	r5, r5
90021536:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
90021538:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9002153c:	f105 0a01 	add.w	sl, r5, #1
90021540:	fb1e fe07 	smulbb	lr, lr, r7
90021544:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90021546:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9002154a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9002154e:	fb02 e207 	mla	r2, r2, r7, lr
90021552:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90021556:	b292      	uxth	r2, r2
90021558:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9002155c:	f102 0e01 	add.w	lr, r2, #1
90021560:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
90021564:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90021568:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9002156c:	ea4e 0606 	orr.w	r6, lr, r6
90021570:	ea46 060a 	orr.w	r6, r6, sl
90021574:	f829 6b02 	strh.w	r6, [r9], #2
90021578:	e7a7      	b.n	900214ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9002157a:	f102 0e01 	add.w	lr, r2, #1
9002157e:	4422      	add	r2, r4
90021580:	9f06      	ldr	r7, [sp, #24]
90021582:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
90021586:	9a06      	ldr	r2, [sp, #24]
90021588:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9002158c:	eb02 0a05 	add.w	sl, r2, r5
90021590:	4a13      	ldr	r2, [pc, #76]	@ (900215e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
90021592:	f89a 9002 	ldrb.w	r9, [sl, #2]
90021596:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9002159a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002159e:	00d2      	lsls	r2, r2, #3
900215a0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900215a4:	ea49 0202 	orr.w	r2, r9, r2
900215a8:	f817 9005 	ldrb.w	r9, [r7, r5]
900215ac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900215b0:	f826 2b02 	strh.w	r2, [r6], #2
900215b4:	fa1f f28e 	uxth.w	r2, lr
900215b8:	e758      	b.n	9002146c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
900215ba:	f8bd 0010 	ldrh.w	r0, [sp, #16]
900215be:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
900215c2:	1a2d      	subs	r5, r5, r0
900215c4:	b2ad      	uxth	r5, r5
900215c6:	2d00      	cmp	r5, #0
900215c8:	bf18      	it	ne
900215ca:	2000      	movne	r0, #0
900215cc:	e732      	b.n	90021434 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
900215ce:	4b05      	ldr	r3, [pc, #20]	@ (900215e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
900215d0:	6818      	ldr	r0, [r3, #0]
900215d2:	6803      	ldr	r3, [r0, #0]
900215d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900215d6:	4798      	blx	r3
900215d8:	b01f      	add	sp, #124	@ 0x7c
900215da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900215de:	bf00      	nop
900215e0:	fffff800 	.word	0xfffff800
900215e4:	240245a0 	.word	0x240245a0

900215e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
900215e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900215ec:	b091      	sub	sp, #68	@ 0x44
900215ee:	469b      	mov	fp, r3
900215f0:	4616      	mov	r6, r2
900215f2:	f9b3 2000 	ldrsh.w	r2, [r3]
900215f6:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
900215fa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900215fe:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
90021602:	4604      	mov	r4, r0
90021604:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
90021608:	4640      	mov	r0, r8
9002160a:	460d      	mov	r5, r1
9002160c:	4659      	mov	r1, fp
9002160e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90021612:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90021616:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9002161a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9002161e:	f7f1 ff81 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
90021622:	4631      	mov	r1, r6
90021624:	4640      	mov	r0, r8
90021626:	f7f1 ff7d 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
9002162a:	4b74      	ldr	r3, [pc, #464]	@ (900217fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9002162c:	8818      	ldrh	r0, [r3, #0]
9002162e:	4b74      	ldr	r3, [pc, #464]	@ (90021800 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
90021630:	b202      	sxth	r2, r0
90021632:	8819      	ldrh	r1, [r3, #0]
90021634:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90021638:	b20e      	sxth	r6, r1
9002163a:	2b00      	cmp	r3, #0
9002163c:	da07      	bge.n	9002164e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9002163e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90021642:	4463      	add	r3, ip
90021644:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90021648:	2300      	movs	r3, #0
9002164a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9002164e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90021652:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90021656:	1ad2      	subs	r2, r2, r3
90021658:	4594      	cmp	ip, r2
9002165a:	bfc4      	itt	gt
9002165c:	1ac2      	subgt	r2, r0, r3
9002165e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
90021662:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021666:	2a00      	cmp	r2, #0
90021668:	da07      	bge.n	9002167a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9002166a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9002166e:	4462      	add	r2, ip
90021670:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90021674:	2200      	movs	r2, #0
90021676:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9002167a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9002167e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
90021682:	eba6 060a 	sub.w	r6, r6, sl
90021686:	42b2      	cmp	r2, r6
90021688:	bfc4      	itt	gt
9002168a:	eba1 020a 	subgt.w	r2, r1, sl
9002168e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
90021692:	4a5c      	ldr	r2, [pc, #368]	@ (90021804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
90021694:	7812      	ldrb	r2, [r2, #0]
90021696:	b9a2      	cbnz	r2, 900216c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
90021698:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9002169c:	4286      	cmp	r6, r0
9002169e:	4640      	mov	r0, r8
900216a0:	9303      	str	r3, [sp, #12]
900216a2:	bf14      	ite	ne
900216a4:	2600      	movne	r6, #0
900216a6:	2601      	moveq	r6, #1
900216a8:	f7f1 ff7f 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
900216ac:	9b03      	ldr	r3, [sp, #12]
900216ae:	b160      	cbz	r0, 900216ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
900216b0:	2300      	movs	r3, #0
900216b2:	8023      	strh	r3, [r4, #0]
900216b4:	8063      	strh	r3, [r4, #2]
900216b6:	80a3      	strh	r3, [r4, #4]
900216b8:	4620      	mov	r0, r4
900216ba:	80e3      	strh	r3, [r4, #6]
900216bc:	b011      	add	sp, #68	@ 0x44
900216be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900216c2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
900216c6:	428e      	cmp	r6, r1
900216c8:	e7e9      	b.n	9002169e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
900216ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
900216ce:	a90e      	add	r1, sp, #56	@ 0x38
900216d0:	900e      	str	r0, [sp, #56]	@ 0x38
900216d2:	a80c      	add	r0, sp, #48	@ 0x30
900216d4:	9205      	str	r2, [sp, #20]
900216d6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
900216da:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
900216de:	9206      	str	r2, [sp, #24]
900216e0:	f8bb 2000 	ldrh.w	r2, [fp]
900216e4:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
900216e8:	1a9b      	subs	r3, r3, r2
900216ea:	b21b      	sxth	r3, r3
900216ec:	9303      	str	r3, [sp, #12]
900216ee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900216f2:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9002180c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
900216f6:	ebaa 0a03 	sub.w	sl, sl, r3
900216fa:	fa0f f38a 	sxth.w	r3, sl
900216fe:	9304      	str	r3, [sp, #16]
90021700:	9b03      	ldr	r3, [sp, #12]
90021702:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90021706:	9b04      	ldr	r3, [sp, #16]
90021708:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9002170c:	9b05      	ldr	r3, [sp, #20]
9002170e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
90021712:	9b06      	ldr	r3, [sp, #24]
90021714:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90021718:	f7f7 fea8 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002171c:	4640      	mov	r0, r8
9002171e:	f7f7 fe7d 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021722:	a80e      	add	r0, sp, #56	@ 0x38
90021724:	f7f7 fe7a 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021728:	4b37      	ldr	r3, [pc, #220]	@ (90021808 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9002172a:	4628      	mov	r0, r5
9002172c:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
90021730:	881b      	ldrh	r3, [r3, #0]
90021732:	9307      	str	r3, [sp, #28]
90021734:	682b      	ldr	r3, [r5, #0]
90021736:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021738:	4798      	blx	r3
9002173a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9002173e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90021742:	4681      	mov	r9, r0
90021744:	f8db 0000 	ldr.w	r0, [fp]
90021748:	fb1a 3305 	smlabb	r3, sl, r5, r3
9002174c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9002174e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
90021752:	6803      	ldr	r3, [r0, #0]
90021754:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021756:	4798      	blx	r3
90021758:	4607      	mov	r7, r0
9002175a:	f8db 0000 	ldr.w	r0, [fp]
9002175e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90021762:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021766:	6803      	ldr	r3, [r0, #0]
90021768:	9109      	str	r1, [sp, #36]	@ 0x24
9002176a:	9208      	str	r2, [sp, #32]
9002176c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002176e:	4798      	blx	r3
90021770:	f010 0f01 	tst.w	r0, #1
90021774:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90021778:	d012      	beq.n	900217a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9002177a:	f8db 0000 	ldr.w	r0, [fp]
9002177e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
90021782:	6803      	ldr	r3, [r0, #0]
90021784:	9200      	str	r2, [sp, #0]
90021786:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
90021788:	462b      	mov	r3, r5
9002178a:	e898 0006 	ldmia.w	r8, {r1, r2}
9002178e:	47b0      	blx	r6
90021790:	9b03      	ldr	r3, [sp, #12]
90021792:	8023      	strh	r3, [r4, #0]
90021794:	9b04      	ldr	r3, [sp, #16]
90021796:	8063      	strh	r3, [r4, #2]
90021798:	9b05      	ldr	r3, [sp, #20]
9002179a:	80a3      	strh	r3, [r4, #4]
9002179c:	9b06      	ldr	r3, [sp, #24]
9002179e:	e78b      	b.n	900216b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
900217a0:	fb09 f202 	mul.w	r2, r9, r2
900217a4:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
900217a8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
900217ac:	440f      	add	r7, r1
900217ae:	b166      	cbz	r6, 900217ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
900217b0:	9a07      	ldr	r2, [sp, #28]
900217b2:	4592      	cmp	sl, r2
900217b4:	d109      	bne.n	900217ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
900217b6:	f8db 0000 	ldr.w	r0, [fp]
900217ba:	fb09 f303 	mul.w	r3, r9, r3
900217be:	4629      	mov	r1, r5
900217c0:	6802      	ldr	r2, [r0, #0]
900217c2:	6b56      	ldr	r6, [r2, #52]	@ 0x34
900217c4:	463a      	mov	r2, r7
900217c6:	47b0      	blx	r6
900217c8:	e7e2      	b.n	90021790 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
900217ca:	fb0a f303 	mul.w	r3, sl, r3
900217ce:	ea4f 064a 	mov.w	r6, sl, lsl #1
900217d2:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9002180c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
900217d6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
900217da:	4545      	cmp	r5, r8
900217dc:	d2d8      	bcs.n	90021790 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
900217de:	f8db 0000 	ldr.w	r0, [fp]
900217e2:	4629      	mov	r1, r5
900217e4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900217e8:	4435      	add	r5, r6
900217ea:	6802      	ldr	r2, [r0, #0]
900217ec:	005b      	lsls	r3, r3, #1
900217ee:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
900217f2:	463a      	mov	r2, r7
900217f4:	47d0      	blx	sl
900217f6:	444f      	add	r7, r9
900217f8:	e7ef      	b.n	900217da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
900217fa:	bf00      	nop
900217fc:	24024592 	.word	0x24024592
90021800:	24024594 	.word	0x24024594
90021804:	24024596 	.word	0x24024596
90021808:	24024598 	.word	0x24024598
9002180c:	240245a0 	.word	0x240245a0

90021810 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
90021810:	b5f0      	push	{r4, r5, r6, r7, lr}
90021812:	4606      	mov	r6, r0
90021814:	b087      	sub	sp, #28
90021816:	460c      	mov	r4, r1
90021818:	4617      	mov	r7, r2
9002181a:	461d      	mov	r5, r3
9002181c:	b333      	cbz	r3, 9002186c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9002181e:	4608      	mov	r0, r1
90021820:	f7f1 fec3 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
90021824:	bb10      	cbnz	r0, 9002186c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
90021826:	6820      	ldr	r0, [r4, #0]
90021828:	ab04      	add	r3, sp, #16
9002182a:	6861      	ldr	r1, [r4, #4]
9002182c:	4c1b      	ldr	r4, [pc, #108]	@ (9002189c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9002182e:	c303      	stmia	r3!, {r0, r1}
90021830:	a804      	add	r0, sp, #16
90021832:	f7f7 fdf3 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021836:	6820      	ldr	r0, [r4, #0]
90021838:	6803      	ldr	r3, [r0, #0]
9002183a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002183c:	4798      	blx	r3
9002183e:	2dff      	cmp	r5, #255	@ 0xff
90021840:	d016      	beq.n	90021870 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
90021842:	f010 0f08 	tst.w	r0, #8
90021846:	6820      	ldr	r0, [r4, #0]
90021848:	d015      	beq.n	90021876 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9002184a:	2400      	movs	r4, #0
9002184c:	6801      	ldr	r1, [r0, #0]
9002184e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90021852:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021856:	e9cd 5402 	strd	r5, r4, [sp, #8]
9002185a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9002185e:	9401      	str	r4, [sp, #4]
90021860:	f8bd 4014 	ldrh.w	r4, [sp, #20]
90021864:	9400      	str	r4, [sp, #0]
90021866:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
90021868:	4639      	mov	r1, r7
9002186a:	47a0      	blx	r4
9002186c:	b007      	add	sp, #28
9002186e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90021870:	f010 0f02 	tst.w	r0, #2
90021874:	e7e7      	b.n	90021846 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
90021876:	6803      	ldr	r3, [r0, #0]
90021878:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002187a:	4798      	blx	r3
9002187c:	4b08      	ldr	r3, [pc, #32]	@ (900218a0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9002187e:	4601      	mov	r1, r0
90021880:	4630      	mov	r0, r6
90021882:	881a      	ldrh	r2, [r3, #0]
90021884:	6833      	ldr	r3, [r6, #0]
90021886:	e9cd 7500 	strd	r7, r5, [sp]
9002188a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9002188c:	ab04      	add	r3, sp, #16
9002188e:	47a8      	blx	r5
90021890:	6820      	ldr	r0, [r4, #0]
90021892:	6803      	ldr	r3, [r0, #0]
90021894:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021896:	4798      	blx	r3
90021898:	e7e8      	b.n	9002186c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9002189a:	bf00      	nop
9002189c:	240245a0 	.word	0x240245a0
900218a0:	24024598 	.word	0x24024598

900218a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
900218a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900218a8:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
900218ac:	4688      	mov	r8, r1
900218ae:	4614      	mov	r4, r2
900218b0:	461d      	mov	r5, r3
900218b2:	9e08      	ldr	r6, [sp, #32]
900218b4:	2f00      	cmp	r7, #0
900218b6:	f000 80ab 	beq.w	90021a10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900218ba:	4618      	mov	r0, r3
900218bc:	f7f1 fe75 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
900218c0:	2800      	cmp	r0, #0
900218c2:	f040 80a5 	bne.w	90021a10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900218c6:	f9b5 1000 	ldrsh.w	r1, [r5]
900218ca:	2fff      	cmp	r7, #255	@ 0xff
900218cc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
900218d0:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
900218d4:	fb04 1303 	mla	r3, r4, r3, r1
900218d8:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
900218dc:	eba4 0200 	sub.w	r2, r4, r0
900218e0:	eb08 0143 	add.w	r1, r8, r3, lsl #1
900218e4:	fb04 f505 	mul.w	r5, r4, r5
900218e8:	ea4f 2816 	mov.w	r8, r6, lsr #8
900218ec:	eb01 0545 	add.w	r5, r1, r5, lsl #1
900218f0:	d04a      	beq.n	90021988 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
900218f2:	b2bc      	uxth	r4, r7
900218f4:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
900218f8:	f3c6 4e07 	ubfx	lr, r6, #16, #8
900218fc:	fa5f f788 	uxtb.w	r7, r8
90021900:	b2f3      	uxtb	r3, r6
90021902:	0040      	lsls	r0, r0, #1
90021904:	fb0e fe04 	mul.w	lr, lr, r4
90021908:	4367      	muls	r7, r4
9002190a:	ea4f 0842 	mov.w	r8, r2, lsl #1
9002190e:	4363      	muls	r3, r4
90021910:	fa1f fc8c 	uxth.w	ip, ip
90021914:	42a9      	cmp	r1, r5
90021916:	d27b      	bcs.n	90021a10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021918:	eb01 0900 	add.w	r9, r1, r0
9002191c:	4549      	cmp	r1, r9
9002191e:	d231      	bcs.n	90021984 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
90021920:	880a      	ldrh	r2, [r1, #0]
90021922:	1214      	asrs	r4, r2, #8
90021924:	10d6      	asrs	r6, r2, #3
90021926:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002192a:	00d2      	lsls	r2, r2, #3
9002192c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90021930:	b2d2      	uxtb	r2, r2
90021932:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90021936:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9002193a:	fb14 f40c 	smulbb	r4, r4, ip
9002193e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90021942:	fb12 f20c 	smulbb	r2, r2, ip
90021946:	fb16 f60c 	smulbb	r6, r6, ip
9002194a:	4474      	add	r4, lr
9002194c:	441a      	add	r2, r3
9002194e:	b2a4      	uxth	r4, r4
90021950:	443e      	add	r6, r7
90021952:	b292      	uxth	r2, r2
90021954:	f104 0a01 	add.w	sl, r4, #1
90021958:	b2b6      	uxth	r6, r6
9002195a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9002195e:	f102 0a01 	add.w	sl, r2, #1
90021962:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
90021966:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002196a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002196e:	4322      	orrs	r2, r4
90021970:	1c74      	adds	r4, r6, #1
90021972:	eb04 2616 	add.w	r6, r4, r6, lsr #8
90021976:	0976      	lsrs	r6, r6, #5
90021978:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9002197c:	4332      	orrs	r2, r6
9002197e:	f821 2b02 	strh.w	r2, [r1], #2
90021982:	e7cb      	b.n	9002191c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
90021984:	4441      	add	r1, r8
90021986:	e7c5      	b.n	90021914 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
90021988:	0973      	lsrs	r3, r6, #5
9002198a:	4f22      	ldr	r7, [pc, #136]	@ (90021a14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9002198c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
90021990:	ea08 0707 	and.w	r7, r8, r7
90021994:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021998:	433b      	orrs	r3, r7
9002199a:	07e7      	lsls	r7, r4, #31
9002199c:	ea43 0306 	orr.w	r3, r3, r6
900219a0:	b29b      	uxth	r3, r3
900219a2:	d50b      	bpl.n	900219bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
900219a4:	0040      	lsls	r0, r0, #1
900219a6:	0052      	lsls	r2, r2, #1
900219a8:	42a9      	cmp	r1, r5
900219aa:	d231      	bcs.n	90021a10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900219ac:	180c      	adds	r4, r1, r0
900219ae:	42a1      	cmp	r1, r4
900219b0:	d202      	bcs.n	900219b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
900219b2:	f821 3b02 	strh.w	r3, [r1], #2
900219b6:	e7fa      	b.n	900219ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
900219b8:	4411      	add	r1, r2
900219ba:	e7f5      	b.n	900219a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
900219bc:	078e      	lsls	r6, r1, #30
900219be:	d008      	beq.n	900219d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
900219c0:	0066      	lsls	r6, r4, #1
900219c2:	460a      	mov	r2, r1
900219c4:	42aa      	cmp	r2, r5
900219c6:	d202      	bcs.n	900219ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
900219c8:	8013      	strh	r3, [r2, #0]
900219ca:	4432      	add	r2, r6
900219cc:	e7fa      	b.n	900219c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
900219ce:	3102      	adds	r1, #2
900219d0:	3801      	subs	r0, #1
900219d2:	07c2      	lsls	r2, r0, #31
900219d4:	d50b      	bpl.n	900219ee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
900219d6:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
900219da:	0066      	lsls	r6, r4, #1
900219dc:	3a01      	subs	r2, #1
900219de:	eb01 0242 	add.w	r2, r1, r2, lsl #1
900219e2:	42aa      	cmp	r2, r5
900219e4:	d202      	bcs.n	900219ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
900219e6:	8013      	strh	r3, [r2, #0]
900219e8:	4432      	add	r2, r6
900219ea:	e7fa      	b.n	900219e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
900219ec:	3801      	subs	r0, #1
900219ee:	b178      	cbz	r0, 90021a10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900219f0:	1040      	asrs	r0, r0, #1
900219f2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
900219f6:	0080      	lsls	r0, r0, #2
900219f8:	0064      	lsls	r4, r4, #1
900219fa:	42a9      	cmp	r1, r5
900219fc:	d208      	bcs.n	90021a10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900219fe:	180e      	adds	r6, r1, r0
90021a00:	460a      	mov	r2, r1
90021a02:	42b2      	cmp	r2, r6
90021a04:	d202      	bcs.n	90021a0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
90021a06:	f842 3b04 	str.w	r3, [r2], #4
90021a0a:	e7fa      	b.n	90021a02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
90021a0c:	4421      	add	r1, r4
90021a0e:	e7f4      	b.n	900219fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
90021a10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021a14:	00fff800 	.word	0x00fff800

90021a18 <_ZN8touchgfx8LCD16bppC1Ev>:
90021a18:	2200      	movs	r2, #0
90021a1a:	4912      	ldr	r1, [pc, #72]	@ (90021a64 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
90021a1c:	e9c0 2201 	strd	r2, r2, [r0, #4]
90021a20:	6001      	str	r1, [r0, #0]
90021a22:	e9c0 2203 	strd	r2, r2, [r0, #12]
90021a26:	e9c0 2205 	strd	r2, r2, [r0, #20]
90021a2a:	e9c0 2207 	strd	r2, r2, [r0, #28]
90021a2e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
90021a32:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
90021a36:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
90021a3a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90021a3e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
90021a42:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
90021a46:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
90021a4a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
90021a4e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
90021a52:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
90021a56:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
90021a5a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
90021a5e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
90021a62:	4770      	bx	lr
90021a64:	90030964 	.word	0x90030964

90021a68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
90021a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021a6c:	b08d      	sub	sp, #52	@ 0x34
90021a6e:	460d      	mov	r5, r1
90021a70:	4604      	mov	r4, r0
90021a72:	4699      	mov	r9, r3
90021a74:	6808      	ldr	r0, [r1, #0]
90021a76:	ab08      	add	r3, sp, #32
90021a78:	6849      	ldr	r1, [r1, #4]
90021a7a:	c303      	stmia	r3!, {r0, r1}
90021a7c:	6810      	ldr	r0, [r2, #0]
90021a7e:	ab0a      	add	r3, sp, #40	@ 0x28
90021a80:	6851      	ldr	r1, [r2, #4]
90021a82:	c303      	stmia	r3!, {r0, r1}
90021a84:	a808      	add	r0, sp, #32
90021a86:	f7f7 fcc9 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021a8a:	4629      	mov	r1, r5
90021a8c:	a80a      	add	r0, sp, #40	@ 0x28
90021a8e:	4d67      	ldr	r5, [pc, #412]	@ (90021c2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90021a90:	f7f7 fcec 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021a94:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90021a98:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
90021a9c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
90021aa0:	6828      	ldr	r0, [r5, #0]
90021aa2:	fb11 2103 	smlabb	r1, r1, r3, r2
90021aa6:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
90021aaa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90021aae:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90021ab2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
90021ab6:	440a      	add	r2, r1
90021ab8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90021abc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90021ac0:	4413      	add	r3, r2
90021ac2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90021ac6:	6803      	ldr	r3, [r0, #0]
90021ac8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021aca:	4798      	blx	r3
90021acc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90021ad0:	d119      	bne.n	90021b06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
90021ad2:	f010 0f20 	tst.w	r0, #32
90021ad6:	6828      	ldr	r0, [r5, #0]
90021ad8:	d018      	beq.n	90021b0c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
90021ada:	2500      	movs	r5, #0
90021adc:	6801      	ldr	r1, [r0, #0]
90021ade:	b2b6      	uxth	r6, r6
90021ae0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90021ae4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
90021ae8:	9601      	str	r6, [sp, #4]
90021aea:	e9cd 9503 	strd	r9, r5, [sp, #12]
90021aee:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
90021af2:	9502      	str	r5, [sp, #8]
90021af4:	fa1f f588 	uxth.w	r5, r8
90021af8:	9500      	str	r5, [sp, #0]
90021afa:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
90021afc:	4621      	mov	r1, r4
90021afe:	47a8      	blx	r5
90021b00:	b00d      	add	sp, #52	@ 0x34
90021b02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021b06:	f010 0f40 	tst.w	r0, #64	@ 0x40
90021b0a:	e7e4      	b.n	90021ad6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
90021b0c:	6803      	ldr	r3, [r0, #0]
90021b0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021b10:	4798      	blx	r3
90021b12:	4947      	ldr	r1, [pc, #284]	@ (90021c30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
90021b14:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021b18:	880b      	ldrh	r3, [r1, #0]
90021b1a:	468a      	mov	sl, r1
90021b1c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
90021b20:	fb03 5202 	mla	r2, r3, r2, r5
90021b24:	4373      	muls	r3, r6
90021b26:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021b2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90021b2e:	9307      	str	r3, [sp, #28]
90021b30:	ea4f 0348 	mov.w	r3, r8, lsl #1
90021b34:	9306      	str	r3, [sp, #24]
90021b36:	9b07      	ldr	r3, [sp, #28]
90021b38:	4298      	cmp	r0, r3
90021b3a:	d270      	bcs.n	90021c1e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
90021b3c:	9b06      	ldr	r3, [sp, #24]
90021b3e:	4621      	mov	r1, r4
90021b40:	eb00 0b03 	add.w	fp, r0, r3
90021b44:	4558      	cmp	r0, fp
90021b46:	d25d      	bcs.n	90021c04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
90021b48:	f851 4b04 	ldr.w	r4, [r1], #4
90021b4c:	0e23      	lsrs	r3, r4, #24
90021b4e:	d014      	beq.n	90021b7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90021b50:	2bff      	cmp	r3, #255	@ 0xff
90021b52:	ea4f 2c14 	mov.w	ip, r4, lsr #8
90021b56:	d112      	bne.n	90021b7e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90021b58:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90021b5c:	d10f      	bne.n	90021b7e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90021b5e:	0963      	lsrs	r3, r4, #5
90021b60:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90021b64:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90021b68:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021b6c:	f02c 0c07 	bic.w	ip, ip, #7
90021b70:	ea43 0c0c 	orr.w	ip, r3, ip
90021b74:	ea4c 0404 	orr.w	r4, ip, r4
90021b78:	8004      	strh	r4, [r0, #0]
90021b7a:	3002      	adds	r0, #2
90021b7c:	e7e2      	b.n	90021b44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
90021b7e:	fb09 f303 	mul.w	r3, r9, r3
90021b82:	8807      	ldrh	r7, [r0, #0]
90021b84:	f3c4 4e07 	ubfx	lr, r4, #16, #8
90021b88:	fa5f fc8c 	uxtb.w	ip, ip
90021b8c:	1c5a      	adds	r2, r3, #1
90021b8e:	123e      	asrs	r6, r7, #8
90021b90:	10fd      	asrs	r5, r7, #3
90021b92:	eb02 2223 	add.w	r2, r2, r3, asr #8
90021b96:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90021b9a:	00ff      	lsls	r7, r7, #3
90021b9c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90021ba0:	1212      	asrs	r2, r2, #8
90021ba2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90021ba6:	b293      	uxth	r3, r2
90021ba8:	43d2      	mvns	r2, r2
90021baa:	b2ff      	uxtb	r7, r7
90021bac:	fb1e fe03 	smulbb	lr, lr, r3
90021bb0:	b2d2      	uxtb	r2, r2
90021bb2:	fb1c fc03 	smulbb	ip, ip, r3
90021bb6:	b2e4      	uxtb	r4, r4
90021bb8:	fb06 e602 	mla	r6, r6, r2, lr
90021bbc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90021bc0:	fb14 f403 	smulbb	r4, r4, r3
90021bc4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
90021bc8:	b2b6      	uxth	r6, r6
90021bca:	fb05 c502 	mla	r5, r5, r2, ip
90021bce:	fb07 4702 	mla	r7, r7, r2, r4
90021bd2:	f106 0e01 	add.w	lr, r6, #1
90021bd6:	b2ad      	uxth	r5, r5
90021bd8:	b2bf      	uxth	r7, r7
90021bda:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
90021bde:	f105 0c01 	add.w	ip, r5, #1
90021be2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
90021be6:	1c7e      	adds	r6, r7, #1
90021be8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021bec:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90021bf0:	096d      	lsrs	r5, r5, #5
90021bf2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90021bf6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021bfa:	ea46 060e 	orr.w	r6, r6, lr
90021bfe:	432e      	orrs	r6, r5
90021c00:	8006      	strh	r6, [r0, #0]
90021c02:	e7ba      	b.n	90021b7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90021c04:	f8ba 3000 	ldrh.w	r3, [sl]
90021c08:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
90021c0c:	eba3 0308 	sub.w	r3, r3, r8
90021c10:	eba4 0408 	sub.w	r4, r4, r8
90021c14:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021c18:	eb01 0484 	add.w	r4, r1, r4, lsl #2
90021c1c:	e78b      	b.n	90021b36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
90021c1e:	4b03      	ldr	r3, [pc, #12]	@ (90021c2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90021c20:	6818      	ldr	r0, [r3, #0]
90021c22:	6803      	ldr	r3, [r0, #0]
90021c24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021c26:	4798      	blx	r3
90021c28:	e76a      	b.n	90021b00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
90021c2a:	bf00      	nop
90021c2c:	240245a0 	.word	0x240245a0
90021c30:	24024598 	.word	0x24024598

90021c34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
90021c34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90021c38:	b085      	sub	sp, #20
90021c3a:	6810      	ldr	r0, [r2, #0]
90021c3c:	460c      	mov	r4, r1
90021c3e:	6851      	ldr	r1, [r2, #4]
90021c40:	466d      	mov	r5, sp
90021c42:	4616      	mov	r6, r2
90021c44:	c503      	stmia	r5!, {r0, r1}
90021c46:	6818      	ldr	r0, [r3, #0]
90021c48:	6859      	ldr	r1, [r3, #4]
90021c4a:	c503      	stmia	r5!, {r0, r1}
90021c4c:	4668      	mov	r0, sp
90021c4e:	4d2e      	ldr	r5, [pc, #184]	@ (90021d08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
90021c50:	f7f7 fbe4 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021c54:	4631      	mov	r1, r6
90021c56:	a802      	add	r0, sp, #8
90021c58:	4e2c      	ldr	r6, [pc, #176]	@ (90021d0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
90021c5a:	f7f7 fc07 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021c5e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
90021c62:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90021c66:	f8bd 1004 	ldrh.w	r1, [sp, #4]
90021c6a:	6828      	ldr	r0, [r5, #0]
90021c6c:	fb11 2103 	smlabb	r1, r1, r3, r2
90021c70:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90021c74:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
90021c78:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90021c7c:	f8bd 1000 	ldrh.w	r1, [sp]
90021c80:	440a      	add	r2, r1
90021c82:	f8ad 2008 	strh.w	r2, [sp, #8]
90021c86:	f8bd 2002 	ldrh.w	r2, [sp, #2]
90021c8a:	4413      	add	r3, r2
90021c8c:	f8ad 300a 	strh.w	r3, [sp, #10]
90021c90:	6803      	ldr	r3, [r0, #0]
90021c92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021c94:	4798      	blx	r3
90021c96:	8833      	ldrh	r3, [r6, #0]
90021c98:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
90021c9c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
90021ca0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90021ca4:	f8df e068 	ldr.w	lr, [pc, #104]	@ 90021d10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
90021ca8:	fb03 1202 	mla	r2, r3, r2, r1
90021cac:	fb08 f303 	mul.w	r3, r8, r3
90021cb0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021cb4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90021cb8:	4298      	cmp	r0, r3
90021cba:	d21d      	bcs.n	90021cf8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
90021cbc:	eb00 080c 	add.w	r8, r0, ip
90021cc0:	4540      	cmp	r0, r8
90021cc2:	d20f      	bcs.n	90021ce4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
90021cc4:	f854 1b04 	ldr.w	r1, [r4], #4
90021cc8:	ea4f 1951 	mov.w	r9, r1, lsr #5
90021ccc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
90021cd0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90021cd4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90021cd8:	ea42 0209 	orr.w	r2, r2, r9
90021cdc:	430a      	orrs	r2, r1
90021cde:	f820 2b02 	strh.w	r2, [r0], #2
90021ce2:	e7ed      	b.n	90021cc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
90021ce4:	8832      	ldrh	r2, [r6, #0]
90021ce6:	1bd2      	subs	r2, r2, r7
90021ce8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021cec:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90021cf0:	1bd2      	subs	r2, r2, r7
90021cf2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
90021cf6:	e7df      	b.n	90021cb8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
90021cf8:	6828      	ldr	r0, [r5, #0]
90021cfa:	6803      	ldr	r3, [r0, #0]
90021cfc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021cfe:	4798      	blx	r3
90021d00:	b005      	add	sp, #20
90021d02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90021d06:	bf00      	nop
90021d08:	240245a0 	.word	0x240245a0
90021d0c:	24024598 	.word	0x24024598
90021d10:	fffff800 	.word	0xfffff800

90021d14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
90021d14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021d18:	b08e      	sub	sp, #56	@ 0x38
90021d1a:	460e      	mov	r6, r1
90021d1c:	4604      	mov	r4, r0
90021d1e:	461d      	mov	r5, r3
90021d20:	6808      	ldr	r0, [r1, #0]
90021d22:	ab0a      	add	r3, sp, #40	@ 0x28
90021d24:	6849      	ldr	r1, [r1, #4]
90021d26:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 90021efc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
90021d2a:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 90021f00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
90021d2e:	c303      	stmia	r3!, {r0, r1}
90021d30:	6810      	ldr	r0, [r2, #0]
90021d32:	ab0c      	add	r3, sp, #48	@ 0x30
90021d34:	6851      	ldr	r1, [r2, #4]
90021d36:	c303      	stmia	r3!, {r0, r1}
90021d38:	a80a      	add	r0, sp, #40	@ 0x28
90021d3a:	f7f7 fb6f 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021d3e:	4631      	mov	r1, r6
90021d40:	a80c      	add	r0, sp, #48	@ 0x30
90021d42:	f7f7 fb93 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021d46:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90021d4a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90021d4e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90021d52:	f8d8 0000 	ldr.w	r0, [r8]
90021d56:	fb11 2103 	smlabb	r1, r1, r3, r2
90021d5a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
90021d5e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90021d62:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90021d66:	440c      	add	r4, r1
90021d68:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
90021d6c:	440a      	add	r2, r1
90021d6e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90021d72:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
90021d76:	4413      	add	r3, r2
90021d78:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90021d7c:	6803      	ldr	r3, [r0, #0]
90021d7e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021d80:	4798      	blx	r3
90021d82:	2dff      	cmp	r5, #255	@ 0xff
90021d84:	d124      	bne.n	90021dd0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
90021d86:	f010 0f01 	tst.w	r0, #1
90021d8a:	f8d8 0000 	ldr.w	r0, [r8]
90021d8e:	d022      	beq.n	90021dd6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
90021d90:	2100      	movs	r1, #0
90021d92:	f04f 0e01 	mov.w	lr, #1
90021d96:	f8d0 c000 	ldr.w	ip, [r0]
90021d9a:	b2b6      	uxth	r6, r6
90021d9c:	f8cd e018 	str.w	lr, [sp, #24]
90021da0:	b2bf      	uxth	r7, r7
90021da2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90021da6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90021daa:	e9cd 1107 	strd	r1, r1, [sp, #28]
90021dae:	f8b9 e000 	ldrh.w	lr, [r9]
90021db2:	9503      	str	r5, [sp, #12]
90021db4:	9601      	str	r6, [sp, #4]
90021db6:	9700      	str	r7, [sp, #0]
90021db8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
90021dbc:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90021dc0:	9102      	str	r1, [sp, #8]
90021dc2:	4621      	mov	r1, r4
90021dc4:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
90021dc8:	47a8      	blx	r5
90021dca:	b00e      	add	sp, #56	@ 0x38
90021dcc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021dd0:	f010 0f04 	tst.w	r0, #4
90021dd4:	e7d9      	b.n	90021d8a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
90021dd6:	6803      	ldr	r3, [r0, #0]
90021dd8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021dda:	4798      	blx	r3
90021ddc:	f8b9 3000 	ldrh.w	r3, [r9]
90021de0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
90021de4:	ea4f 0e47 	mov.w	lr, r7, lsl #1
90021de8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
90021dec:	435e      	muls	r6, r3
90021dee:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90021df2:	2dff      	cmp	r5, #255	@ 0xff
90021df4:	fb03 1202 	mla	r2, r3, r2, r1
90021df8:	ebac 0c07 	sub.w	ip, ip, r7
90021dfc:	eba3 0707 	sub.w	r7, r3, r7
90021e00:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021e04:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90021e08:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90021e0c:	ea4f 0747 	mov.w	r7, r7, lsl #1
90021e10:	d049      	beq.n	90021ea6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
90021e12:	43eb      	mvns	r3, r5
90021e14:	fa1f f985 	uxth.w	r9, r5
90021e18:	b2db      	uxtb	r3, r3
90021e1a:	42b0      	cmp	r0, r6
90021e1c:	d266      	bcs.n	90021eec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90021e1e:	eb00 0a0e 	add.w	sl, r0, lr
90021e22:	4550      	cmp	r0, sl
90021e24:	4621      	mov	r1, r4
90021e26:	f104 0403 	add.w	r4, r4, #3
90021e2a:	d25b      	bcs.n	90021ee4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
90021e2c:	8802      	ldrh	r2, [r0, #0]
90021e2e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90021e32:	ea4f 2822 	mov.w	r8, r2, asr #8
90021e36:	fb11 f109 	smulbb	r1, r1, r9
90021e3a:	10d5      	asrs	r5, r2, #3
90021e3c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
90021e40:	00d2      	lsls	r2, r2, #3
90021e42:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90021e46:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
90021e4a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90021e4e:	fb08 1803 	mla	r8, r8, r3, r1
90021e52:	f814 1c02 	ldrb.w	r1, [r4, #-2]
90021e56:	b2d2      	uxtb	r2, r2
90021e58:	fb11 f109 	smulbb	r1, r1, r9
90021e5c:	fa1f f888 	uxth.w	r8, r8
90021e60:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90021e64:	fb05 1503 	mla	r5, r5, r3, r1
90021e68:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90021e6c:	fb11 f109 	smulbb	r1, r1, r9
90021e70:	b2ad      	uxth	r5, r5
90021e72:	fb02 1203 	mla	r2, r2, r3, r1
90021e76:	f108 0101 	add.w	r1, r8, #1
90021e7a:	b292      	uxth	r2, r2
90021e7c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
90021e80:	1c51      	adds	r1, r2, #1
90021e82:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
90021e86:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90021e8a:	1c69      	adds	r1, r5, #1
90021e8c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90021e90:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021e94:	096d      	lsrs	r5, r5, #5
90021e96:	ea42 0208 	orr.w	r2, r2, r8
90021e9a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021e9e:	432a      	orrs	r2, r5
90021ea0:	f820 2b02 	strh.w	r2, [r0], #2
90021ea4:	e7bd      	b.n	90021e22 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
90021ea6:	4a14      	ldr	r2, [pc, #80]	@ (90021ef8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
90021ea8:	42b0      	cmp	r0, r6
90021eaa:	d21f      	bcs.n	90021eec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90021eac:	eb00 050e 	add.w	r5, r0, lr
90021eb0:	42a8      	cmp	r0, r5
90021eb2:	4621      	mov	r1, r4
90021eb4:	f104 0403 	add.w	r4, r4, #3
90021eb8:	d210      	bcs.n	90021edc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
90021eba:	f814 3c02 	ldrb.w	r3, [r4, #-2]
90021ebe:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90021ec2:	00db      	lsls	r3, r3, #3
90021ec4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
90021ec8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021ecc:	430b      	orrs	r3, r1
90021ece:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90021ed2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
90021ed6:	f820 3b02 	strh.w	r3, [r0], #2
90021eda:	e7e9      	b.n	90021eb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
90021edc:	4438      	add	r0, r7
90021ede:	eb01 040c 	add.w	r4, r1, ip
90021ee2:	e7e1      	b.n	90021ea8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
90021ee4:	4438      	add	r0, r7
90021ee6:	eb01 040c 	add.w	r4, r1, ip
90021eea:	e796      	b.n	90021e1a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
90021eec:	4b03      	ldr	r3, [pc, #12]	@ (90021efc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
90021eee:	6818      	ldr	r0, [r3, #0]
90021ef0:	6803      	ldr	r3, [r0, #0]
90021ef2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021ef4:	4798      	blx	r3
90021ef6:	e768      	b.n	90021dca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
90021ef8:	fffff800 	.word	0xfffff800
90021efc:	240245a0 	.word	0x240245a0
90021f00:	24024598 	.word	0x24024598

90021f04 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
90021f04:	b4f0      	push	{r4, r5, r6, r7}
90021f06:	4616      	mov	r6, r2
90021f08:	461c      	mov	r4, r3
90021f0a:	460d      	mov	r5, r1
90021f0c:	9a04      	ldr	r2, [sp, #16]
90021f0e:	2e01      	cmp	r6, #1
90021f10:	f89d 3014 	ldrb.w	r3, [sp, #20]
90021f14:	f89d 7018 	ldrb.w	r7, [sp, #24]
90021f18:	d012      	beq.n	90021f40 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
90021f1a:	d303      	bcc.n	90021f24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
90021f1c:	2e02      	cmp	r6, #2
90021f1e:	d00a      	beq.n	90021f36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
90021f20:	bcf0      	pop	{r4, r5, r6, r7}
90021f22:	4770      	bx	lr
90021f24:	6805      	ldr	r5, [r0, #0]
90021f26:	e9cd 3704 	strd	r3, r7, [sp, #16]
90021f2a:	68ed      	ldr	r5, [r5, #12]
90021f2c:	4613      	mov	r3, r2
90021f2e:	4622      	mov	r2, r4
90021f30:	46ac      	mov	ip, r5
90021f32:	bcf0      	pop	{r4, r5, r6, r7}
90021f34:	4760      	bx	ip
90021f36:	4621      	mov	r1, r4
90021f38:	4628      	mov	r0, r5
90021f3a:	bcf0      	pop	{r4, r5, r6, r7}
90021f3c:	f7ff bd94 	b.w	90021a68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021f40:	4621      	mov	r1, r4
90021f42:	4628      	mov	r0, r5
90021f44:	bcf0      	pop	{r4, r5, r6, r7}
90021f46:	f7ff bee5 	b.w	90021d14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

90021f4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
90021f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f50:	b093      	sub	sp, #76	@ 0x4c
90021f52:	4681      	mov	r9, r0
90021f54:	4688      	mov	r8, r1
90021f56:	6810      	ldr	r0, [r2, #0]
90021f58:	6851      	ldr	r1, [r2, #4]
90021f5a:	ac0e      	add	r4, sp, #56	@ 0x38
90021f5c:	4616      	mov	r6, r2
90021f5e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
90021f62:	4f6b      	ldr	r7, [pc, #428]	@ (90022110 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90021f64:	c403      	stmia	r4!, {r0, r1}
90021f66:	6818      	ldr	r0, [r3, #0]
90021f68:	ac10      	add	r4, sp, #64	@ 0x40
90021f6a:	6859      	ldr	r1, [r3, #4]
90021f6c:	c403      	stmia	r4!, {r0, r1}
90021f6e:	a80e      	add	r0, sp, #56	@ 0x38
90021f70:	f7f7 fa54 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021f74:	4631      	mov	r1, r6
90021f76:	a810      	add	r0, sp, #64	@ 0x40
90021f78:	4e66      	ldr	r6, [pc, #408]	@ (90022114 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90021f7a:	f7f7 fa77 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021f7e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
90021f82:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
90021f86:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
90021f8a:	6830      	ldr	r0, [r6, #0]
90021f8c:	fb11 2103 	smlabb	r1, r1, r3, r2
90021f90:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
90021f94:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
90021f98:	4489      	add	r9, r1
90021f9a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
90021f9e:	440a      	add	r2, r1
90021fa0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
90021fa4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90021fa8:	4413      	add	r3, r2
90021faa:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
90021fae:	6803      	ldr	r3, [r0, #0]
90021fb0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021fb2:	4798      	blx	r3
90021fb4:	f010 0f80 	tst.w	r0, #128	@ 0x80
90021fb8:	6830      	ldr	r0, [r6, #0]
90021fba:	d01d      	beq.n	90021ff8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
90021fbc:	2200      	movs	r2, #0
90021fbe:	6801      	ldr	r1, [r0, #0]
90021fc0:	b2a4      	uxth	r4, r4
90021fc2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90021fc6:	b2ad      	uxth	r5, r5
90021fc8:	e9cd 2208 	strd	r2, r2, [sp, #32]
90021fcc:	220b      	movs	r2, #11
90021fce:	9207      	str	r2, [sp, #28]
90021fd0:	883a      	ldrh	r2, [r7, #0]
90021fd2:	9502      	str	r5, [sp, #8]
90021fd4:	9206      	str	r2, [sp, #24]
90021fd6:	2201      	movs	r2, #1
90021fd8:	9401      	str	r4, [sp, #4]
90021fda:	e9cd a204 	strd	sl, r2, [sp, #16]
90021fde:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
90021fe2:	9203      	str	r2, [sp, #12]
90021fe4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
90021fe8:	9200      	str	r2, [sp, #0]
90021fea:	4642      	mov	r2, r8
90021fec:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
90021fee:	4649      	mov	r1, r9
90021ff0:	47a0      	blx	r4
90021ff2:	b013      	add	sp, #76	@ 0x4c
90021ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021ff8:	6803      	ldr	r3, [r0, #0]
90021ffa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021ffc:	4798      	blx	r3
90021ffe:	883b      	ldrh	r3, [r7, #0]
90022000:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90022004:	f04f 0e04 	mov.w	lr, #4
90022008:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9002200c:	435d      	muls	r5, r3
9002200e:	fb03 1202 	mla	r2, r3, r2, r1
90022012:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90022016:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9002201a:	920c      	str	r2, [sp, #48]	@ 0x30
9002201c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
90022020:	1b12      	subs	r2, r2, r4
90022022:	920d      	str	r2, [sp, #52]	@ 0x34
90022024:	0062      	lsls	r2, r4, #1
90022026:	1b1c      	subs	r4, r3, r4
90022028:	920a      	str	r2, [sp, #40]	@ 0x28
9002202a:	0063      	lsls	r3, r4, #1
9002202c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002202e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022030:	4298      	cmp	r0, r3
90022032:	d266      	bcs.n	90022102 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
90022034:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022036:	eb00 0b03 	add.w	fp, r0, r3
9002203a:	4558      	cmp	r0, fp
9002203c:	d25c      	bcs.n	900220f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9002203e:	f819 3b01 	ldrb.w	r3, [r9], #1
90022042:	fb1e e303 	smlabb	r3, lr, r3, lr
90022046:	f858 2003 	ldr.w	r2, [r8, r3]
9002204a:	0e11      	lsrs	r1, r2, #24
9002204c:	d012      	beq.n	90022074 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9002204e:	29ff      	cmp	r1, #255	@ 0xff
90022050:	ea4f 2712 	mov.w	r7, r2, lsr #8
90022054:	d110      	bne.n	90022078 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90022056:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9002205a:	d10d      	bne.n	90022078 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9002205c:	0953      	lsrs	r3, r2, #5
9002205e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
90022062:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90022066:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002206a:	f027 0707 	bic.w	r7, r7, #7
9002206e:	431f      	orrs	r7, r3
90022070:	433a      	orrs	r2, r7
90022072:	8002      	strh	r2, [r0, #0]
90022074:	3002      	adds	r0, #2
90022076:	e7e0      	b.n	9002203a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90022078:	fb0a f101 	mul.w	r1, sl, r1
9002207c:	8806      	ldrh	r6, [r0, #0]
9002207e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
90022082:	b2d2      	uxtb	r2, r2
90022084:	1c4b      	adds	r3, r1, #1
90022086:	1235      	asrs	r5, r6, #8
90022088:	10f4      	asrs	r4, r6, #3
9002208a:	eb03 2321 	add.w	r3, r3, r1, asr #8
9002208e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022092:	00f6      	lsls	r6, r6, #3
90022094:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90022098:	121b      	asrs	r3, r3, #8
9002209a:	b2f6      	uxtb	r6, r6
9002209c:	b299      	uxth	r1, r3
9002209e:	43db      	mvns	r3, r3
900220a0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
900220a4:	fb1c fc01 	smulbb	ip, ip, r1
900220a8:	b2db      	uxtb	r3, r3
900220aa:	fb12 f201 	smulbb	r2, r2, r1
900220ae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900220b2:	fb05 c503 	mla	r5, r5, r3, ip
900220b6:	b2ff      	uxtb	r7, r7
900220b8:	fb06 2203 	mla	r2, r6, r3, r2
900220bc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
900220c0:	fb17 f701 	smulbb	r7, r7, r1
900220c4:	b2ad      	uxth	r5, r5
900220c6:	b292      	uxth	r2, r2
900220c8:	fb04 7403 	mla	r4, r4, r3, r7
900220cc:	f105 0c01 	add.w	ip, r5, #1
900220d0:	1c57      	adds	r7, r2, #1
900220d2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900220d6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900220da:	b2a4      	uxth	r4, r4
900220dc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900220e0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900220e4:	433d      	orrs	r5, r7
900220e6:	1c67      	adds	r7, r4, #1
900220e8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
900220ec:	0964      	lsrs	r4, r4, #5
900220ee:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900220f2:	4325      	orrs	r5, r4
900220f4:	8005      	strh	r5, [r0, #0]
900220f6:	e7bd      	b.n	90022074 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900220f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900220fa:	4418      	add	r0, r3
900220fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900220fe:	4499      	add	r9, r3
90022100:	e795      	b.n	9002202e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
90022102:	4b04      	ldr	r3, [pc, #16]	@ (90022114 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90022104:	6818      	ldr	r0, [r3, #0]
90022106:	6803      	ldr	r3, [r0, #0]
90022108:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002210a:	4798      	blx	r3
9002210c:	e771      	b.n	90021ff2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9002210e:	bf00      	nop
90022110:	24024598 	.word	0x24024598
90022114:	240245a0 	.word	0x240245a0

90022118 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
90022118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002211c:	b087      	sub	sp, #28
9002211e:	4680      	mov	r8, r0
90022120:	460d      	mov	r5, r1
90022122:	4614      	mov	r4, r2
90022124:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
90022128:	2e00      	cmp	r6, #0
9002212a:	f000 80b9 	beq.w	900222a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9002212e:	6810      	ldr	r0, [r2, #0]
90022130:	af02      	add	r7, sp, #8
90022132:	6851      	ldr	r1, [r2, #4]
90022134:	c703      	stmia	r7!, {r0, r1}
90022136:	6818      	ldr	r0, [r3, #0]
90022138:	af04      	add	r7, sp, #16
9002213a:	6859      	ldr	r1, [r3, #4]
9002213c:	c703      	stmia	r7!, {r0, r1}
9002213e:	a802      	add	r0, sp, #8
90022140:	f7f7 f96c 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90022144:	4621      	mov	r1, r4
90022146:	a804      	add	r0, sp, #16
90022148:	f7f7 f990 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002214c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90022150:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022154:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90022158:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9002215c:	fb14 2103 	smlabb	r1, r4, r3, r2
90022160:	eb08 0401 	add.w	r4, r8, r1
90022164:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90022168:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9002216c:	440a      	add	r2, r1
9002216e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
90022172:	f8ad 2010 	strh.w	r2, [sp, #16]
90022176:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9002217a:	4413      	add	r3, r2
9002217c:	f8ad 3012 	strh.w	r3, [sp, #18]
90022180:	4b49      	ldr	r3, [pc, #292]	@ (900222a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90022182:	6818      	ldr	r0, [r3, #0]
90022184:	6803      	ldr	r3, [r0, #0]
90022186:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90022188:	4798      	blx	r3
9002218a:	4b48      	ldr	r3, [pc, #288]	@ (900222ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9002218c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
90022190:	2eff      	cmp	r6, #255	@ 0xff
90022192:	881a      	ldrh	r2, [r3, #0]
90022194:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90022198:	fb02 c101 	mla	r1, r2, r1, ip
9002219c:	fb02 f207 	mul.w	r2, r2, r7
900221a0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900221a4:	f105 0104 	add.w	r1, r5, #4
900221a8:	461d      	mov	r5, r3
900221aa:	d05a      	beq.n	90022262 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
900221ac:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
900221b0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900221b4:	b2b6      	uxth	r6, r6
900221b6:	9301      	str	r3, [sp, #4]
900221b8:	fa1f fe8e 	uxth.w	lr, lr
900221bc:	4282      	cmp	r2, r0
900221be:	d96a      	bls.n	90022296 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
900221c0:	eb00 0b0a 	add.w	fp, r0, sl
900221c4:	4583      	cmp	fp, r0
900221c6:	d940      	bls.n	9002224a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
900221c8:	8805      	ldrh	r5, [r0, #0]
900221ca:	f814 3b01 	ldrb.w	r3, [r4], #1
900221ce:	122f      	asrs	r7, r5, #8
900221d0:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
900221d4:	ea4f 09e5 	mov.w	r9, r5, asr #3
900221d8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
900221dc:	00ed      	lsls	r5, r5, #3
900221de:	ea4f 2c23 	mov.w	ip, r3, asr #8
900221e2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
900221e6:	fb17 f70e 	smulbb	r7, r7, lr
900221ea:	b2ed      	uxtb	r5, r5
900221ec:	fb19 f90e 	smulbb	r9, r9, lr
900221f0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900221f4:	fb15 f50e 	smulbb	r5, r5, lr
900221f8:	fb0c 7c06 	mla	ip, ip, r6, r7
900221fc:	10df      	asrs	r7, r3, #3
900221fe:	00db      	lsls	r3, r3, #3
90022200:	fa1f fc8c 	uxth.w	ip, ip
90022204:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90022208:	b2db      	uxtb	r3, r3
9002220a:	fb07 9706 	mla	r7, r7, r6, r9
9002220e:	f10c 0901 	add.w	r9, ip, #1
90022212:	fb03 5306 	mla	r3, r3, r6, r5
90022216:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9002221a:	b29b      	uxth	r3, r3
9002221c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
90022220:	b2bf      	uxth	r7, r7
90022222:	f103 0c01 	add.w	ip, r3, #1
90022226:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9002222a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002222e:	ea4c 0c09 	orr.w	ip, ip, r9
90022232:	f107 0901 	add.w	r9, r7, #1
90022236:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9002223a:	097f      	lsrs	r7, r7, #5
9002223c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90022240:	ea4c 0c07 	orr.w	ip, ip, r7
90022244:	f820 cb02 	strh.w	ip, [r0], #2
90022248:	e7bc      	b.n	900221c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9002224a:	9b01      	ldr	r3, [sp, #4]
9002224c:	881b      	ldrh	r3, [r3, #0]
9002224e:	eba3 0308 	sub.w	r3, r3, r8
90022252:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022256:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002225a:	eba3 0308 	sub.w	r3, r3, r8
9002225e:	441c      	add	r4, r3
90022260:	e7ac      	b.n	900221bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
90022262:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90022266:	4282      	cmp	r2, r0
90022268:	d915      	bls.n	90022296 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002226a:	eb00 060a 	add.w	r6, r0, sl
9002226e:	4286      	cmp	r6, r0
90022270:	d906      	bls.n	90022280 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
90022272:	f814 3b01 	ldrb.w	r3, [r4], #1
90022276:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9002227a:	f820 3b02 	strh.w	r3, [r0], #2
9002227e:	e7f6      	b.n	9002226e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
90022280:	882b      	ldrh	r3, [r5, #0]
90022282:	eba3 0308 	sub.w	r3, r3, r8
90022286:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002228a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002228e:	eba3 0308 	sub.w	r3, r3, r8
90022292:	441c      	add	r4, r3
90022294:	e7e7      	b.n	90022266 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90022296:	4b04      	ldr	r3, [pc, #16]	@ (900222a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90022298:	6818      	ldr	r0, [r3, #0]
9002229a:	6803      	ldr	r3, [r0, #0]
9002229c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002229e:	4798      	blx	r3
900222a0:	b007      	add	sp, #28
900222a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900222a6:	bf00      	nop
900222a8:	240245a0 	.word	0x240245a0
900222ac:	24024598 	.word	0x24024598

900222b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
900222b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900222b4:	b091      	sub	sp, #68	@ 0x44
900222b6:	4680      	mov	r8, r0
900222b8:	460f      	mov	r7, r1
900222ba:	4614      	mov	r4, r2
900222bc:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
900222c0:	2d00      	cmp	r5, #0
900222c2:	d051      	beq.n	90022368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900222c4:	6810      	ldr	r0, [r2, #0]
900222c6:	ae0c      	add	r6, sp, #48	@ 0x30
900222c8:	6851      	ldr	r1, [r2, #4]
900222ca:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 900224cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
900222ce:	c603      	stmia	r6!, {r0, r1}
900222d0:	6818      	ldr	r0, [r3, #0]
900222d2:	ae0e      	add	r6, sp, #56	@ 0x38
900222d4:	6859      	ldr	r1, [r3, #4]
900222d6:	c603      	stmia	r6!, {r0, r1}
900222d8:	a80c      	add	r0, sp, #48	@ 0x30
900222da:	f7f7 f89f 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900222de:	4621      	mov	r1, r4
900222e0:	a80e      	add	r0, sp, #56	@ 0x38
900222e2:	f7f7 f8c3 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900222e6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
900222ea:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
900222ee:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900222f2:	f8d9 0000 	ldr.w	r0, [r9]
900222f6:	fb11 2103 	smlabb	r1, r1, r3, r2
900222fa:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
900222fe:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
90022302:	eb08 0401 	add.w	r4, r8, r1
90022306:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9002230a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 900224d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9002230e:	440a      	add	r2, r1
90022310:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90022314:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90022318:	4413      	add	r3, r2
9002231a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9002231e:	6803      	ldr	r3, [r0, #0]
90022320:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90022322:	4798      	blx	r3
90022324:	f010 0f80 	tst.w	r0, #128	@ 0x80
90022328:	f8d9 0000 	ldr.w	r0, [r9]
9002232c:	d01f      	beq.n	9002236e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9002232e:	2200      	movs	r2, #0
90022330:	6801      	ldr	r1, [r0, #0]
90022332:	b2b6      	uxth	r6, r6
90022334:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90022338:	e9cd 2208 	strd	r2, r2, [sp, #32]
9002233c:	220b      	movs	r2, #11
9002233e:	9207      	str	r2, [sp, #28]
90022340:	f8b8 2000 	ldrh.w	r2, [r8]
90022344:	9601      	str	r6, [sp, #4]
90022346:	9206      	str	r2, [sp, #24]
90022348:	2201      	movs	r2, #1
9002234a:	e9cd 5204 	strd	r5, r2, [sp, #16]
9002234e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
90022352:	9203      	str	r2, [sp, #12]
90022354:	fa1f f28a 	uxth.w	r2, sl
90022358:	9202      	str	r2, [sp, #8]
9002235a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9002235e:	9200      	str	r2, [sp, #0]
90022360:	463a      	mov	r2, r7
90022362:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
90022364:	4621      	mov	r1, r4
90022366:	47a8      	blx	r5
90022368:	b011      	add	sp, #68	@ 0x44
9002236a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002236e:	6803      	ldr	r3, [r0, #0]
90022370:	ea4f 0946 	mov.w	r9, r6, lsl #1
90022374:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90022376:	4798      	blx	r3
90022378:	f8b8 2000 	ldrh.w	r2, [r8]
9002237c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90022380:	2dff      	cmp	r5, #255	@ 0xff
90022382:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
90022386:	fb0a fa02 	mul.w	sl, sl, r2
9002238a:	fb02 1303 	mla	r3, r2, r3, r1
9002238e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022392:	d062      	beq.n	9002245a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90022394:	ea6f 0c05 	mvn.w	ip, r5
90022398:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9002239c:	b2ad      	uxth	r5, r5
9002239e:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
900223a2:	fa5f fc8c 	uxtb.w	ip, ip
900223a6:	930a      	str	r3, [sp, #40]	@ 0x28
900223a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900223aa:	4298      	cmp	r0, r3
900223ac:	f080 8085 	bcs.w	900224ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
900223b0:	eb00 0b09 	add.w	fp, r0, r9
900223b4:	4558      	cmp	r0, fp
900223b6:	d246      	bcs.n	90022446 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
900223b8:	f814 eb01 	ldrb.w	lr, [r4], #1
900223bc:	2303      	movs	r3, #3
900223be:	2204      	movs	r2, #4
900223c0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
900223c4:	8803      	ldrh	r3, [r0, #0]
900223c6:	eb07 0a0e 	add.w	sl, r7, lr
900223ca:	1219      	asrs	r1, r3, #8
900223cc:	10da      	asrs	r2, r3, #3
900223ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
900223d2:	f89a 8002 	ldrb.w	r8, [sl, #2]
900223d6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900223da:	00db      	lsls	r3, r3, #3
900223dc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900223e0:	fb18 f805 	smulbb	r8, r8, r5
900223e4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
900223e8:	fb1e fe05 	smulbb	lr, lr, r5
900223ec:	b2db      	uxtb	r3, r3
900223ee:	fb01 810c 	mla	r1, r1, ip, r8
900223f2:	f89a 8001 	ldrb.w	r8, [sl, #1]
900223f6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
900223fa:	fb18 f805 	smulbb	r8, r8, r5
900223fe:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
90022402:	b289      	uxth	r1, r1
90022404:	fb02 820c 	mla	r2, r2, ip, r8
90022408:	fb03 e30c 	mla	r3, r3, ip, lr
9002240c:	f101 0801 	add.w	r8, r1, #1
90022410:	b292      	uxth	r2, r2
90022412:	b29b      	uxth	r3, r3
90022414:	eb08 2111 	add.w	r1, r8, r1, lsr #8
90022418:	f102 0801 	add.w	r8, r2, #1
9002241c:	f103 0e01 	add.w	lr, r3, #1
90022420:	eb08 2812 	add.w	r8, r8, r2, lsr #8
90022424:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90022428:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9002242c:	ea4f 1858 	mov.w	r8, r8, lsr #5
90022430:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90022434:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90022438:	ea4e 0101 	orr.w	r1, lr, r1
9002243c:	ea41 0108 	orr.w	r1, r1, r8
90022440:	f820 1b02 	strh.w	r1, [r0], #2
90022444:	e7b6      	b.n	900223b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
90022446:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022448:	881b      	ldrh	r3, [r3, #0]
9002244a:	1b9b      	subs	r3, r3, r6
9002244c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022450:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90022454:	1b9b      	subs	r3, r3, r6
90022456:	441c      	add	r4, r3
90022458:	e7a6      	b.n	900223a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9002245a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9002245e:	2203      	movs	r2, #3
90022460:	2504      	movs	r5, #4
90022462:	4919      	ldr	r1, [pc, #100]	@ (900224c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90022464:	4550      	cmp	r0, sl
90022466:	d228      	bcs.n	900224ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90022468:	eb00 0c09 	add.w	ip, r0, r9
9002246c:	4560      	cmp	r0, ip
9002246e:	4623      	mov	r3, r4
90022470:	d219      	bcs.n	900224a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90022472:	f893 e000 	ldrb.w	lr, [r3]
90022476:	3401      	adds	r4, #1
90022478:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9002247c:	eb07 0b0e 	add.w	fp, r7, lr
90022480:	f817 e00e 	ldrb.w	lr, [r7, lr]
90022484:	f89b 3002 	ldrb.w	r3, [fp, #2]
90022488:	f89b b001 	ldrb.w	fp, [fp, #1]
9002248c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90022490:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90022494:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90022498:	ea43 030b 	orr.w	r3, r3, fp
9002249c:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
900224a0:	f820 3b02 	strh.w	r3, [r0], #2
900224a4:	e7e2      	b.n	9002246c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
900224a6:	f8b8 3000 	ldrh.w	r3, [r8]
900224aa:	1b9b      	subs	r3, r3, r6
900224ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900224b0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900224b4:	1b9b      	subs	r3, r3, r6
900224b6:	441c      	add	r4, r3
900224b8:	e7d4      	b.n	90022464 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
900224ba:	4b04      	ldr	r3, [pc, #16]	@ (900224cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
900224bc:	6818      	ldr	r0, [r3, #0]
900224be:	6803      	ldr	r3, [r0, #0]
900224c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900224c2:	4798      	blx	r3
900224c4:	e750      	b.n	90022368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
900224c6:	bf00      	nop
900224c8:	fffff800 	.word	0xfffff800
900224cc:	240245a0 	.word	0x240245a0
900224d0:	24024598 	.word	0x24024598

900224d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
900224d4:	b4f0      	push	{r4, r5, r6, r7}
900224d6:	460c      	mov	r4, r1
900224d8:	4611      	mov	r1, r2
900224da:	f89d 5014 	ldrb.w	r5, [sp, #20]
900224de:	461a      	mov	r2, r3
900224e0:	780f      	ldrb	r7, [r1, #0]
900224e2:	9b04      	ldr	r3, [sp, #16]
900224e4:	2f01      	cmp	r7, #1
900224e6:	784e      	ldrb	r6, [r1, #1]
900224e8:	d038      	beq.n	9002255c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
900224ea:	d31f      	bcc.n	9002252c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
900224ec:	2f02      	cmp	r7, #2
900224ee:	d14d      	bne.n	9002258c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900224f0:	2e03      	cmp	r6, #3
900224f2:	d84b      	bhi.n	9002258c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900224f4:	e8df f006 	tbb	[pc, r6]
900224f8:	17140702 	.word	0x17140702
900224fc:	9504      	str	r5, [sp, #16]
900224fe:	4620      	mov	r0, r4
90022500:	bcf0      	pop	{r4, r5, r6, r7}
90022502:	f7ff be09 	b.w	90022118 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
90022506:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90022508:	2800      	cmp	r0, #0
9002250a:	d03f      	beq.n	9002258c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9002250c:	6806      	ldr	r6, [r0, #0]
9002250e:	e9cd 3504 	strd	r3, r5, [sp, #16]
90022512:	68b5      	ldr	r5, [r6, #8]
90022514:	4613      	mov	r3, r2
90022516:	46ac      	mov	ip, r5
90022518:	460a      	mov	r2, r1
9002251a:	4621      	mov	r1, r4
9002251c:	bcf0      	pop	{r4, r5, r6, r7}
9002251e:	4760      	bx	ip
90022520:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90022524:	e7f0      	b.n	90022508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
90022526:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002252a:	e7ed      	b.n	90022508 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9002252c:	2e03      	cmp	r6, #3
9002252e:	d82d      	bhi.n	9002258c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90022530:	e8df f006 	tbb	[pc, r6]
90022534:	110e0702 	.word	0x110e0702
90022538:	9504      	str	r5, [sp, #16]
9002253a:	4620      	mov	r0, r4
9002253c:	bcf0      	pop	{r4, r5, r6, r7}
9002253e:	f7ff bd05 	b.w	90021f4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90022542:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90022544:	b310      	cbz	r0, 9002258c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90022546:	6806      	ldr	r6, [r0, #0]
90022548:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002254c:	68f5      	ldr	r5, [r6, #12]
9002254e:	e7e1      	b.n	90022514 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90022550:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90022554:	e7f6      	b.n	90022544 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90022556:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002255a:	e7f3      	b.n	90022544 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9002255c:	2e03      	cmp	r6, #3
9002255e:	d815      	bhi.n	9002258c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90022560:	e8df f006 	tbb	[pc, r6]
90022564:	110e0702 	.word	0x110e0702
90022568:	9504      	str	r5, [sp, #16]
9002256a:	4620      	mov	r0, r4
9002256c:	bcf0      	pop	{r4, r5, r6, r7}
9002256e:	f7ff be9f 	b.w	900222b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90022572:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90022574:	b150      	cbz	r0, 9002258c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90022576:	6806      	ldr	r6, [r0, #0]
90022578:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002257c:	6935      	ldr	r5, [r6, #16]
9002257e:	e7c9      	b.n	90022514 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90022580:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90022584:	e7f6      	b.n	90022574 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90022586:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002258a:	e7f3      	b.n	90022574 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9002258c:	bcf0      	pop	{r4, r5, r6, r7}
9002258e:	4770      	bx	lr

90022590 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90022590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022594:	b087      	sub	sp, #28
90022596:	4604      	mov	r4, r0
90022598:	460e      	mov	r6, r1
9002259a:	6810      	ldr	r0, [r2, #0]
9002259c:	6851      	ldr	r1, [r2, #4]
9002259e:	ad02      	add	r5, sp, #8
900225a0:	4617      	mov	r7, r2
900225a2:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
900225a6:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 900227d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
900225aa:	c503      	stmia	r5!, {r0, r1}
900225ac:	6818      	ldr	r0, [r3, #0]
900225ae:	ad04      	add	r5, sp, #16
900225b0:	6859      	ldr	r1, [r3, #4]
900225b2:	c503      	stmia	r5!, {r0, r1}
900225b4:	a802      	add	r0, sp, #8
900225b6:	f7f6 ff31 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900225ba:	4639      	mov	r1, r7
900225bc:	a804      	add	r0, sp, #16
900225be:	f7f6 ff55 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900225c2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900225c6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900225ca:	f8bd 100c 	ldrh.w	r1, [sp, #12]
900225ce:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
900225d2:	fb11 2103 	smlabb	r1, r1, r3, r2
900225d6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
900225da:	eb04 0441 	add.w	r4, r4, r1, lsl #1
900225de:	440e      	add	r6, r1
900225e0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900225e4:	440a      	add	r2, r1
900225e6:	f8ad 2010 	strh.w	r2, [sp, #16]
900225ea:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900225ee:	4413      	add	r3, r2
900225f0:	f8ad 3012 	strh.w	r3, [sp, #18]
900225f4:	4b77      	ldr	r3, [pc, #476]	@ (900227d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
900225f6:	6818      	ldr	r0, [r3, #0]
900225f8:	6803      	ldr	r3, [r0, #0]
900225fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900225fc:	4798      	blx	r3
900225fe:	f8b9 b000 	ldrh.w	fp, [r9]
90022602:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022606:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9002260a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9002260e:	fb05 f50b 	mul.w	r5, r5, fp
90022612:	fb0b 2303 	mla	r3, fp, r3, r2
90022616:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002261a:	ea4f 0348 	mov.w	r3, r8, lsl #1
9002261e:	9300      	str	r3, [sp, #0]
90022620:	d069      	beq.n	900226f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
90022622:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
90022626:	4558      	cmp	r0, fp
90022628:	f080 80cc 	bcs.w	900227c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9002262c:	9b00      	ldr	r3, [sp, #0]
9002262e:	4631      	mov	r1, r6
90022630:	18c3      	adds	r3, r0, r3
90022632:	9301      	str	r3, [sp, #4]
90022634:	9b01      	ldr	r3, [sp, #4]
90022636:	4298      	cmp	r0, r3
90022638:	d24f      	bcs.n	900226da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9002263a:	f811 2b01 	ldrb.w	r2, [r1], #1
9002263e:	2a00      	cmp	r2, #0
90022640:	d048      	beq.n	900226d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90022642:	fb0a f202 	mul.w	r2, sl, r2
90022646:	1c53      	adds	r3, r2, #1
90022648:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002264c:	121b      	asrs	r3, r3, #8
9002264e:	d041      	beq.n	900226d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90022650:	8802      	ldrh	r2, [r0, #0]
90022652:	b29e      	uxth	r6, r3
90022654:	f8b4 c000 	ldrh.w	ip, [r4]
90022658:	43db      	mvns	r3, r3
9002265a:	1215      	asrs	r5, r2, #8
9002265c:	b2db      	uxtb	r3, r3
9002265e:	ea4f 272c 	mov.w	r7, ip, asr #8
90022662:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022666:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9002266a:	fb15 f503 	smulbb	r5, r5, r3
9002266e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90022672:	00d2      	lsls	r2, r2, #3
90022674:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90022678:	fb07 5706 	mla	r7, r7, r6, r5
9002267c:	ea4f 05ec 	mov.w	r5, ip, asr #3
90022680:	b2d2      	uxtb	r2, r2
90022682:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90022686:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002268a:	fb1e fe03 	smulbb	lr, lr, r3
9002268e:	b2bf      	uxth	r7, r7
90022690:	fb12 f203 	smulbb	r2, r2, r3
90022694:	fa5f fc8c 	uxtb.w	ip, ip
90022698:	fb05 e506 	mla	r5, r5, r6, lr
9002269c:	f107 0e01 	add.w	lr, r7, #1
900226a0:	fb0c 2c06 	mla	ip, ip, r6, r2
900226a4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
900226a8:	fa1f fc8c 	uxth.w	ip, ip
900226ac:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
900226b0:	b2ad      	uxth	r5, r5
900226b2:	f10c 0701 	add.w	r7, ip, #1
900226b6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900226ba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900226be:	ea47 070e 	orr.w	r7, r7, lr
900226c2:	f105 0e01 	add.w	lr, r5, #1
900226c6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
900226ca:	096d      	lsrs	r5, r5, #5
900226cc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900226d0:	432f      	orrs	r7, r5
900226d2:	8007      	strh	r7, [r0, #0]
900226d4:	3002      	adds	r0, #2
900226d6:	3402      	adds	r4, #2
900226d8:	e7ac      	b.n	90022634 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
900226da:	f8b9 3000 	ldrh.w	r3, [r9]
900226de:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900226e2:	eba3 0308 	sub.w	r3, r3, r8
900226e6:	eba6 0608 	sub.w	r6, r6, r8
900226ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900226ee:	eb04 0446 	add.w	r4, r4, r6, lsl #1
900226f2:	440e      	add	r6, r1
900226f4:	e797      	b.n	90022626 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
900226f6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900226fa:	42a8      	cmp	r0, r5
900226fc:	d262      	bcs.n	900227c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900226fe:	9b00      	ldr	r3, [sp, #0]
90022700:	4631      	mov	r1, r6
90022702:	eb00 0b03 	add.w	fp, r0, r3
90022706:	4558      	cmp	r0, fp
90022708:	d24e      	bcs.n	900227a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9002270a:	f811 3b01 	ldrb.w	r3, [r1], #1
9002270e:	b12b      	cbz	r3, 9002271c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90022710:	2bff      	cmp	r3, #255	@ 0xff
90022712:	f8b4 e000 	ldrh.w	lr, [r4]
90022716:	d104      	bne.n	90022722 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
90022718:	f8a0 e000 	strh.w	lr, [r0]
9002271c:	3002      	adds	r0, #2
9002271e:	3402      	adds	r4, #2
90022720:	e7f1      	b.n	90022706 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
90022722:	8802      	ldrh	r2, [r0, #0]
90022724:	b29f      	uxth	r7, r3
90022726:	43db      	mvns	r3, r3
90022728:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9002272c:	1216      	asrs	r6, r2, #8
9002272e:	b2db      	uxtb	r3, r3
90022730:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90022734:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90022738:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9002273c:	00d2      	lsls	r2, r2, #3
9002273e:	fb16 f603 	smulbb	r6, r6, r3
90022742:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90022746:	b2d2      	uxtb	r2, r2
90022748:	fb0c 6c07 	mla	ip, ip, r7, r6
9002274c:	ea4f 06ee 	mov.w	r6, lr, asr #3
90022750:	fb1a fa03 	smulbb	sl, sl, r3
90022754:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90022758:	fa1f fc8c 	uxth.w	ip, ip
9002275c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90022760:	fb12 f303 	smulbb	r3, r2, r3
90022764:	fa5f fe8e 	uxtb.w	lr, lr
90022768:	fb06 a607 	mla	r6, r6, r7, sl
9002276c:	f10c 0201 	add.w	r2, ip, #1
90022770:	fb0e 3307 	mla	r3, lr, r7, r3
90022774:	b2b6      	uxth	r6, r6
90022776:	b29b      	uxth	r3, r3
90022778:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9002277c:	f106 0a01 	add.w	sl, r6, #1
90022780:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90022784:	f103 0c01 	add.w	ip, r3, #1
90022788:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9002278c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90022790:	0976      	lsrs	r6, r6, #5
90022792:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90022796:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9002279a:	ea4c 0c02 	orr.w	ip, ip, r2
9002279e:	ea4c 0c06 	orr.w	ip, ip, r6
900227a2:	f8a0 c000 	strh.w	ip, [r0]
900227a6:	e7b9      	b.n	9002271c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
900227a8:	f8b9 3000 	ldrh.w	r3, [r9]
900227ac:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900227b0:	eba3 0308 	sub.w	r3, r3, r8
900227b4:	eba6 0608 	sub.w	r6, r6, r8
900227b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900227bc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
900227c0:	440e      	add	r6, r1
900227c2:	e79a      	b.n	900226fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
900227c4:	4b03      	ldr	r3, [pc, #12]	@ (900227d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
900227c6:	6818      	ldr	r0, [r3, #0]
900227c8:	6803      	ldr	r3, [r0, #0]
900227ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900227cc:	4798      	blx	r3
900227ce:	b007      	add	sp, #28
900227d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900227d4:	240245a0 	.word	0x240245a0
900227d8:	24024598 	.word	0x24024598

900227dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
900227dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900227e0:	b089      	sub	sp, #36	@ 0x24
900227e2:	4607      	mov	r7, r0
900227e4:	4688      	mov	r8, r1
900227e6:	4692      	mov	sl, r2
900227e8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
900227ec:	4699      	mov	r9, r3
900227ee:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900227f0:	2e00      	cmp	r6, #0
900227f2:	d048      	beq.n	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900227f4:	4608      	mov	r0, r1
900227f6:	f7fa f813 	bl	9001c820 <_ZNK8touchgfx6Bitmap8getWidthEv>
900227fa:	4605      	mov	r5, r0
900227fc:	4640      	mov	r0, r8
900227fe:	f7fa f843 	bl	9001c888 <_ZNK8touchgfx6Bitmap9getHeightEv>
90022802:	f8ad 000e 	strh.w	r0, [sp, #14]
90022806:	4640      	mov	r0, r8
90022808:	f8ad a008 	strh.w	sl, [sp, #8]
9002280c:	f8ad 500c 	strh.w	r5, [sp, #12]
90022810:	f8ad 900a 	strh.w	r9, [sp, #10]
90022814:	f7fa f8f6 	bl	9001ca04 <_ZNK8touchgfx6Bitmap7getDataEv>
90022818:	4605      	mov	r5, r0
9002281a:	4640      	mov	r0, r8
9002281c:	f7fa f922 	bl	9001ca64 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90022820:	4682      	mov	sl, r0
90022822:	4640      	mov	r0, r8
90022824:	f7fa f972 	bl	9001cb0c <_ZNK8touchgfx6Bitmap9getFormatEv>
90022828:	2810      	cmp	r0, #16
9002282a:	d82c      	bhi.n	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9002282c:	e8df f010 	tbh	[pc, r0, lsl #1]
90022830:	00ba00ca 	.word	0x00ba00ca
90022834:	002b0011 	.word	0x002b0011
90022838:	002b002b 	.word	0x002b002b
9002283c:	002b002b 	.word	0x002b002b
90022840:	002b002b 	.word	0x002b002b
90022844:	00c1002b 	.word	0x00c1002b
90022848:	002b002b 	.word	0x002b002b
9002284c:	002b0180 	.word	0x002b0180
90022850:	0173      	.short	0x0173
90022852:	4bbc      	ldr	r3, [pc, #752]	@ (90022b44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
90022854:	6818      	ldr	r0, [r3, #0]
90022856:	6803      	ldr	r3, [r0, #0]
90022858:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002285a:	4798      	blx	r3
9002285c:	2eff      	cmp	r6, #255	@ 0xff
9002285e:	d101      	bne.n	90022864 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90022860:	0683      	lsls	r3, r0, #26
90022862:	d506      	bpl.n	90022872 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
90022864:	4633      	mov	r3, r6
90022866:	4622      	mov	r2, r4
90022868:	a902      	add	r1, sp, #8
9002286a:	4628      	mov	r0, r5
9002286c:	f7ff f8fc 	bl	90021a68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022870:	e009      	b.n	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022872:	4640      	mov	r0, r8
90022874:	f7fa f88e 	bl	9001c994 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90022878:	b940      	cbnz	r0, 9002288c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
9002287a:	4623      	mov	r3, r4
9002287c:	aa02      	add	r2, sp, #8
9002287e:	4629      	mov	r1, r5
90022880:	4638      	mov	r0, r7
90022882:	f7ff f9d7 	bl	90021c34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90022886:	b009      	add	sp, #36	@ 0x24
90022888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002288c:	f10d 0918 	add.w	r9, sp, #24
90022890:	4641      	mov	r1, r8
90022892:	f10d 0810 	add.w	r8, sp, #16
90022896:	4648      	mov	r0, r9
90022898:	f7fa f82a 	bl	9001c8f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9002289c:	e899 0003 	ldmia.w	r9, {r0, r1}
900228a0:	e888 0003 	stmia.w	r8, {r0, r1}
900228a4:	4640      	mov	r0, r8
900228a6:	4621      	mov	r1, r4
900228a8:	f7f0 fe3c 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
900228ac:	4640      	mov	r0, r8
900228ae:	f7f0 fe7c 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
900228b2:	2800      	cmp	r0, #0
900228b4:	d1d6      	bne.n	90022864 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
900228b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900228ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900228be:	4293      	cmp	r3, r2
900228c0:	dd12      	ble.n	900228e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
900228c2:	1a9b      	subs	r3, r3, r2
900228c4:	f9b4 0000 	ldrsh.w	r0, [r4]
900228c8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900228cc:	f8ad 0018 	strh.w	r0, [sp, #24]
900228d0:	4628      	mov	r0, r5
900228d2:	f8ad 201a 	strh.w	r2, [sp, #26]
900228d6:	464a      	mov	r2, r9
900228d8:	f8ad 101c 	strh.w	r1, [sp, #28]
900228dc:	a902      	add	r1, sp, #8
900228de:	f8ad 301e 	strh.w	r3, [sp, #30]
900228e2:	4633      	mov	r3, r6
900228e4:	f7ff f8c0 	bl	90021a68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900228e8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
900228ec:	f9b4 2000 	ldrsh.w	r2, [r4]
900228f0:	4293      	cmp	r3, r2
900228f2:	dd12      	ble.n	9002291a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
900228f4:	1a9b      	subs	r3, r3, r2
900228f6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
900228fa:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
900228fe:	f8ad 2018 	strh.w	r2, [sp, #24]
90022902:	464a      	mov	r2, r9
90022904:	f8ad 001a 	strh.w	r0, [sp, #26]
90022908:	4628      	mov	r0, r5
9002290a:	f8ad 301c 	strh.w	r3, [sp, #28]
9002290e:	23ff      	movs	r3, #255	@ 0xff
90022910:	f8ad 101e 	strh.w	r1, [sp, #30]
90022914:	a902      	add	r1, sp, #8
90022916:	f7ff f8a7 	bl	90021a68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9002291a:	4643      	mov	r3, r8
9002291c:	aa02      	add	r2, sp, #8
9002291e:	4629      	mov	r1, r5
90022920:	4638      	mov	r0, r7
90022922:	f7ff f987 	bl	90021c34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90022926:	88a2      	ldrh	r2, [r4, #4]
90022928:	8823      	ldrh	r3, [r4, #0]
9002292a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9002292e:	4413      	add	r3, r2
90022930:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90022934:	440a      	add	r2, r1
90022936:	b29b      	uxth	r3, r3
90022938:	b292      	uxth	r2, r2
9002293a:	b218      	sxth	r0, r3
9002293c:	b211      	sxth	r1, r2
9002293e:	4288      	cmp	r0, r1
90022940:	dd12      	ble.n	90022968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
90022942:	1a9b      	subs	r3, r3, r2
90022944:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90022948:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9002294c:	464a      	mov	r2, r9
9002294e:	f8ad 1018 	strh.w	r1, [sp, #24]
90022952:	a902      	add	r1, sp, #8
90022954:	f8ad 301c 	strh.w	r3, [sp, #28]
90022958:	23ff      	movs	r3, #255	@ 0xff
9002295a:	f8ad 001e 	strh.w	r0, [sp, #30]
9002295e:	4628      	mov	r0, r5
90022960:	f8ad 601a 	strh.w	r6, [sp, #26]
90022964:	f7ff f880 	bl	90021a68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022968:	88e2      	ldrh	r2, [r4, #6]
9002296a:	8863      	ldrh	r3, [r4, #2]
9002296c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90022970:	4413      	add	r3, r2
90022972:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90022976:	440a      	add	r2, r1
90022978:	b29b      	uxth	r3, r3
9002297a:	b292      	uxth	r2, r2
9002297c:	b218      	sxth	r0, r3
9002297e:	b211      	sxth	r1, r2
90022980:	4288      	cmp	r0, r1
90022982:	dd80      	ble.n	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022984:	1a9b      	subs	r3, r3, r2
90022986:	f9b4 6000 	ldrsh.w	r6, [r4]
9002298a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002298e:	464a      	mov	r2, r9
90022990:	f8ad 301e 	strh.w	r3, [sp, #30]
90022994:	23ff      	movs	r3, #255	@ 0xff
90022996:	f8ad 6018 	strh.w	r6, [sp, #24]
9002299a:	f8ad 101a 	strh.w	r1, [sp, #26]
9002299e:	f8ad 001c 	strh.w	r0, [sp, #28]
900229a2:	e761      	b.n	90022868 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
900229a4:	4633      	mov	r3, r6
900229a6:	4622      	mov	r2, r4
900229a8:	a902      	add	r1, sp, #8
900229aa:	4628      	mov	r0, r5
900229ac:	f7ff f9b2 	bl	90021d14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
900229b0:	e769      	b.n	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900229b2:	e9cd 4600 	strd	r4, r6, [sp]
900229b6:	ab02      	add	r3, sp, #8
900229b8:	4652      	mov	r2, sl
900229ba:	4629      	mov	r1, r5
900229bc:	4638      	mov	r0, r7
900229be:	f7ff fd89 	bl	900224d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
900229c2:	e760      	b.n	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900229c4:	4640      	mov	r0, r8
900229c6:	f7f9 ffe5 	bl	9001c994 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900229ca:	b948      	cbnz	r0, 900229e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
900229cc:	683b      	ldr	r3, [r7, #0]
900229ce:	aa02      	add	r2, sp, #8
900229d0:	4629      	mov	r1, r5
900229d2:	e9cd 6000 	strd	r6, r0, [sp]
900229d6:	4638      	mov	r0, r7
900229d8:	68de      	ldr	r6, [r3, #12]
900229da:	4623      	mov	r3, r4
900229dc:	47b0      	blx	r6
900229de:	e752      	b.n	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900229e0:	f10d 0918 	add.w	r9, sp, #24
900229e4:	4641      	mov	r1, r8
900229e6:	f10d 0810 	add.w	r8, sp, #16
900229ea:	4648      	mov	r0, r9
900229ec:	f7f9 ff80 	bl	9001c8f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900229f0:	e899 0003 	ldmia.w	r9, {r0, r1}
900229f4:	e888 0003 	stmia.w	r8, {r0, r1}
900229f8:	4640      	mov	r0, r8
900229fa:	4621      	mov	r1, r4
900229fc:	f7f0 fd92 	bl	90013524 <_ZN8touchgfx4RectaNERKS0_>
90022a00:	4640      	mov	r0, r8
90022a02:	f7f0 fdd2 	bl	900135aa <_ZNK8touchgfx4Rect7isEmptyEv>
90022a06:	b138      	cbz	r0, 90022a18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
90022a08:	4623      	mov	r3, r4
90022a0a:	9600      	str	r6, [sp, #0]
90022a0c:	aa02      	add	r2, sp, #8
90022a0e:	4651      	mov	r1, sl
90022a10:	4628      	mov	r0, r5
90022a12:	f7ff fdbd 	bl	90022590 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022a16:	e736      	b.n	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022a18:	683b      	ldr	r3, [r7, #0]
90022a1a:	aa02      	add	r2, sp, #8
90022a1c:	4629      	mov	r1, r5
90022a1e:	e9cd 6000 	strd	r6, r0, [sp]
90022a22:	4638      	mov	r0, r7
90022a24:	f8d3 b00c 	ldr.w	fp, [r3, #12]
90022a28:	4643      	mov	r3, r8
90022a2a:	47d8      	blx	fp
90022a2c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022a30:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90022a34:	4293      	cmp	r3, r2
90022a36:	dd13      	ble.n	90022a60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
90022a38:	f9b4 0000 	ldrsh.w	r0, [r4]
90022a3c:	1a9b      	subs	r3, r3, r2
90022a3e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90022a42:	f8ad 0018 	strh.w	r0, [sp, #24]
90022a46:	4628      	mov	r0, r5
90022a48:	f8ad 201a 	strh.w	r2, [sp, #26]
90022a4c:	aa02      	add	r2, sp, #8
90022a4e:	f8ad 101c 	strh.w	r1, [sp, #28]
90022a52:	4651      	mov	r1, sl
90022a54:	f8ad 301e 	strh.w	r3, [sp, #30]
90022a58:	464b      	mov	r3, r9
90022a5a:	9600      	str	r6, [sp, #0]
90022a5c:	f7ff fd98 	bl	90022590 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022a60:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90022a64:	f9b4 2000 	ldrsh.w	r2, [r4]
90022a68:	4293      	cmp	r3, r2
90022a6a:	dd13      	ble.n	90022a94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
90022a6c:	1a9b      	subs	r3, r3, r2
90022a6e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90022a72:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90022a76:	f8ad 2018 	strh.w	r2, [sp, #24]
90022a7a:	aa02      	add	r2, sp, #8
90022a7c:	f8ad 001a 	strh.w	r0, [sp, #26]
90022a80:	4628      	mov	r0, r5
90022a82:	f8ad 301c 	strh.w	r3, [sp, #28]
90022a86:	464b      	mov	r3, r9
90022a88:	f8ad 101e 	strh.w	r1, [sp, #30]
90022a8c:	4651      	mov	r1, sl
90022a8e:	9600      	str	r6, [sp, #0]
90022a90:	f7ff fd7e 	bl	90022590 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022a94:	88a2      	ldrh	r2, [r4, #4]
90022a96:	8823      	ldrh	r3, [r4, #0]
90022a98:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90022a9c:	4413      	add	r3, r2
90022a9e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90022aa2:	440a      	add	r2, r1
90022aa4:	b29b      	uxth	r3, r3
90022aa6:	b292      	uxth	r2, r2
90022aa8:	b218      	sxth	r0, r3
90022aaa:	b211      	sxth	r1, r2
90022aac:	4288      	cmp	r0, r1
90022aae:	dd13      	ble.n	90022ad8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90022ab0:	1a9b      	subs	r3, r3, r2
90022ab2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90022ab6:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90022aba:	aa02      	add	r2, sp, #8
90022abc:	f8ad 1018 	strh.w	r1, [sp, #24]
90022ac0:	4651      	mov	r1, sl
90022ac2:	f8ad 301c 	strh.w	r3, [sp, #28]
90022ac6:	464b      	mov	r3, r9
90022ac8:	f8ad 001e 	strh.w	r0, [sp, #30]
90022acc:	4628      	mov	r0, r5
90022ace:	9600      	str	r6, [sp, #0]
90022ad0:	f8ad 701a 	strh.w	r7, [sp, #26]
90022ad4:	f7ff fd5c 	bl	90022590 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022ad8:	88e2      	ldrh	r2, [r4, #6]
90022ada:	8863      	ldrh	r3, [r4, #2]
90022adc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90022ae0:	4413      	add	r3, r2
90022ae2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90022ae6:	440a      	add	r2, r1
90022ae8:	b29b      	uxth	r3, r3
90022aea:	b292      	uxth	r2, r2
90022aec:	b218      	sxth	r0, r3
90022aee:	b211      	sxth	r1, r2
90022af0:	4288      	cmp	r0, r1
90022af2:	f77f aec8 	ble.w	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022af6:	f9b4 7000 	ldrsh.w	r7, [r4]
90022afa:	1a9b      	subs	r3, r3, r2
90022afc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90022b00:	f8ad 301e 	strh.w	r3, [sp, #30]
90022b04:	464b      	mov	r3, r9
90022b06:	f8ad 7018 	strh.w	r7, [sp, #24]
90022b0a:	f8ad 101a 	strh.w	r1, [sp, #26]
90022b0e:	f8ad 001c 	strh.w	r0, [sp, #28]
90022b12:	9600      	str	r6, [sp, #0]
90022b14:	e77a      	b.n	90022a0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
90022b16:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90022b1a:	2800      	cmp	r0, #0
90022b1c:	f43f aeb3 	beq.w	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022b20:	6803      	ldr	r3, [r0, #0]
90022b22:	9600      	str	r6, [sp, #0]
90022b24:	68de      	ldr	r6, [r3, #12]
90022b26:	4623      	mov	r3, r4
90022b28:	aa02      	add	r2, sp, #8
90022b2a:	4629      	mov	r1, r5
90022b2c:	47b0      	blx	r6
90022b2e:	e6aa      	b.n	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022b30:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90022b34:	2800      	cmp	r0, #0
90022b36:	f43f aea6 	beq.w	90022886 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022b3a:	6803      	ldr	r3, [r0, #0]
90022b3c:	9600      	str	r6, [sp, #0]
90022b3e:	689e      	ldr	r6, [r3, #8]
90022b40:	e7f1      	b.n	90022b26 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
90022b42:	bf00      	nop
90022b44:	240245a0 	.word	0x240245a0

90022b48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90022b48:	b180      	cbz	r0, 90022b6c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90022b4a:	2903      	cmp	r1, #3
90022b4c:	d81c      	bhi.n	90022b88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90022b4e:	e8df f001 	tbb	[pc, r1]
90022b52:	1d02      	.short	0x1d02
90022b54:	1f08      	.short	0x1f08
90022b56:	4b10      	ldr	r3, [pc, #64]	@ (90022b98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90022b58:	8818      	ldrh	r0, [r3, #0]
90022b5a:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022b5e:	4240      	negs	r0, r0
90022b60:	4770      	bx	lr
90022b62:	4b0d      	ldr	r3, [pc, #52]	@ (90022b98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90022b64:	8818      	ldrh	r0, [r3, #0]
90022b66:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022b6a:	4770      	bx	lr
90022b6c:	2903      	cmp	r1, #3
90022b6e:	d80b      	bhi.n	90022b88 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90022b70:	a301      	add	r3, pc, #4	@ (adr r3, 90022b78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90022b72:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90022b76:	bf00      	nop
90022b78:	90022b8d 	.word	0x90022b8d
90022b7c:	90022b63 	.word	0x90022b63
90022b80:	90022b91 	.word	0x90022b91
90022b84:	90022b57 	.word	0x90022b57
90022b88:	2000      	movs	r0, #0
90022b8a:	4770      	bx	lr
90022b8c:	2001      	movs	r0, #1
90022b8e:	4770      	bx	lr
90022b90:	f04f 30ff 	mov.w	r0, #4294967295
90022b94:	4770      	bx	lr
90022b96:	bf00      	nop
90022b98:	24024598 	.word	0x24024598

90022b9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90022b9c:	b180      	cbz	r0, 90022bc0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90022b9e:	2903      	cmp	r1, #3
90022ba0:	d81c      	bhi.n	90022bdc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90022ba2:	e8df f001 	tbb	[pc, r1]
90022ba6:	021d      	.short	0x021d
90022ba8:	071f      	.short	0x071f
90022baa:	4b10      	ldr	r3, [pc, #64]	@ (90022bec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90022bac:	8818      	ldrh	r0, [r3, #0]
90022bae:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022bb2:	4770      	bx	lr
90022bb4:	4b0d      	ldr	r3, [pc, #52]	@ (90022bec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90022bb6:	8818      	ldrh	r0, [r3, #0]
90022bb8:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022bbc:	4240      	negs	r0, r0
90022bbe:	4770      	bx	lr
90022bc0:	2903      	cmp	r1, #3
90022bc2:	d80b      	bhi.n	90022bdc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90022bc4:	a301      	add	r3, pc, #4	@ (adr r3, 90022bcc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90022bc6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90022bca:	bf00      	nop
90022bcc:	90022bab 	.word	0x90022bab
90022bd0:	90022be5 	.word	0x90022be5
90022bd4:	90022bb5 	.word	0x90022bb5
90022bd8:	90022be1 	.word	0x90022be1
90022bdc:	2000      	movs	r0, #0
90022bde:	4770      	bx	lr
90022be0:	2001      	movs	r0, #1
90022be2:	4770      	bx	lr
90022be4:	f04f 30ff 	mov.w	r0, #4294967295
90022be8:	4770      	bx	lr
90022bea:	bf00      	nop
90022bec:	24024598 	.word	0x24024598

90022bf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90022bf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022bf4:	b099      	sub	sp, #100	@ 0x64
90022bf6:	910b      	str	r1, [sp, #44]	@ 0x2c
90022bf8:	a914      	add	r1, sp, #80	@ 0x50
90022bfa:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
90022bfe:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
90022c02:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
90022c06:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
90022c0a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
90022c0e:	e881 000c 	stmia.w	r1, {r2, r3}
90022c12:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
90022c16:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
90022c1a:	9309      	str	r3, [sp, #36]	@ 0x24
90022c1c:	f891 900d 	ldrb.w	r9, [r1, #13]
90022c20:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90022c24:	ea4f 1749 	mov.w	r7, r9, lsl #5
90022c28:	9310      	str	r3, [sp, #64]	@ 0x40
90022c2a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
90022c2e:	930c      	str	r3, [sp, #48]	@ 0x30
90022c30:	f407 7380 	and.w	r3, r7, #256	@ 0x100
90022c34:	798f      	ldrb	r7, [r1, #6]
90022c36:	431f      	orrs	r7, r3
90022c38:	f000 8195 	beq.w	90022f66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022c3c:	ea4f 1909 	mov.w	r9, r9, lsl #4
90022c40:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90022c44:	f891 9007 	ldrb.w	r9, [r1, #7]
90022c48:	ea59 0903 	orrs.w	r9, r9, r3
90022c4c:	f000 818b 	beq.w	90022f66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022c50:	f991 3009 	ldrsb.w	r3, [r1, #9]
90022c54:	b29b      	uxth	r3, r3
90022c56:	2d00      	cmp	r5, #0
90022c58:	f000 812e 	beq.w	90022eb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
90022c5c:	1aed      	subs	r5, r5, r3
90022c5e:	b2ad      	uxth	r5, r5
90022c60:	042b      	lsls	r3, r5, #16
90022c62:	d502      	bpl.n	90022c6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90022c64:	1b64      	subs	r4, r4, r5
90022c66:	2500      	movs	r5, #0
90022c68:	b224      	sxth	r4, r4
90022c6a:	f9b2 1000 	ldrsh.w	r1, [r2]
90022c6e:	a814      	add	r0, sp, #80	@ 0x50
90022c70:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
90022c74:	428c      	cmp	r4, r1
90022c76:	b28b      	uxth	r3, r1
90022c78:	bfbf      	itttt	lt
90022c7a:	18ed      	addlt	r5, r5, r3
90022c7c:	1b2c      	sublt	r4, r5, r4
90022c7e:	b2a5      	uxthlt	r5, r4
90022c80:	460c      	movlt	r4, r1
90022c82:	8891      	ldrh	r1, [r2, #4]
90022c84:	440b      	add	r3, r1
90022c86:	4621      	mov	r1, r4
90022c88:	b21b      	sxth	r3, r3
90022c8a:	930f      	str	r3, [sp, #60]	@ 0x3c
90022c8c:	88d3      	ldrh	r3, [r2, #6]
90022c8e:	8852      	ldrh	r2, [r2, #2]
90022c90:	4413      	add	r3, r2
90022c92:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90022c94:	b21b      	sxth	r3, r3
90022c96:	930d      	str	r3, [sp, #52]	@ 0x34
90022c98:	4bbd      	ldr	r3, [pc, #756]	@ (90022f90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
90022c9a:	f893 b000 	ldrb.w	fp, [r3]
90022c9e:	f10b 3cff 	add.w	ip, fp, #4294967295
90022ca2:	f1dc 0300 	rsbs	r3, ip, #0
90022ca6:	eb43 030c 	adc.w	r3, r3, ip
90022caa:	930e      	str	r3, [sp, #56]	@ 0x38
90022cac:	4653      	mov	r3, sl
90022cae:	f7f6 fa2a 	bl	90019106 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90022cb2:	4621      	mov	r1, r4
90022cb4:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90022cb8:	4653      	mov	r3, sl
90022cba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90022cbc:	a814      	add	r0, sp, #80	@ 0x50
90022cbe:	f7f6 fa3f 	bl	90019140 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90022cc2:	a918      	add	r1, sp, #96	@ 0x60
90022cc4:	f821 0d02 	strh.w	r0, [r1, #-2]!
90022cc8:	a817      	add	r0, sp, #92	@ 0x5c
90022cca:	f7f6 fb65 	bl	90019398 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90022cce:	f1ba 0f00 	cmp.w	sl, #0
90022cd2:	f040 80f4 	bne.w	90022ebe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90022cd6:	f1bb 0f01 	cmp.w	fp, #1
90022cda:	f040 80f8 	bne.w	90022ece <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
90022cde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022ce0:	2b00      	cmp	r3, #0
90022ce2:	f040 8145 	bne.w	90022f70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90022ce6:	b2ba      	uxth	r2, r7
90022ce8:	b905      	cbnz	r5, 90022cec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90022cea:	b16e      	cbz	r6, 90022d08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
90022cec:	fb06 5302 	mla	r3, r6, r2, r5
90022cf0:	9828      	ldr	r0, [sp, #160]	@ 0xa0
90022cf2:	4631      	mov	r1, r6
90022cf4:	fb08 f303 	mul.w	r3, r8, r3
90022cf8:	f003 0607 	and.w	r6, r3, #7
90022cfc:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
90022d00:	9328      	str	r3, [sp, #160]	@ 0xa0
90022d02:	eba9 0301 	sub.w	r3, r9, r1
90022d06:	930a      	str	r3, [sp, #40]	@ 0x28
90022d08:	4651      	mov	r1, sl
90022d0a:	980e      	ldr	r0, [sp, #56]	@ 0x38
90022d0c:	f7ff ff1c 	bl	90022b48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90022d10:	4681      	mov	r9, r0
90022d12:	980e      	ldr	r0, [sp, #56]	@ 0x38
90022d14:	f7ff ff42 	bl	90022b9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90022d18:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022d1a:	9909      	ldr	r1, [sp, #36]	@ 0x24
90022d1c:	4683      	mov	fp, r0
90022d1e:	eba3 0a01 	sub.w	sl, r3, r1
90022d22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022d24:	459a      	cmp	sl, r3
90022d26:	bfa8      	it	ge
90022d28:	469a      	movge	sl, r3
90022d2a:	f1ba 0f00 	cmp.w	sl, #0
90022d2e:	f340 811a 	ble.w	90022f66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022d32:	1b64      	subs	r4, r4, r5
90022d34:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022d36:	1b1c      	subs	r4, r3, r4
90022d38:	42bc      	cmp	r4, r7
90022d3a:	bfd4      	ite	le
90022d3c:	ebc5 0504 	rsble	r5, r5, r4
90022d40:	ebc5 0507 	rsbgt	r5, r5, r7
90022d44:	2d00      	cmp	r5, #0
90022d46:	f340 810e 	ble.w	90022f66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022d4a:	1b52      	subs	r2, r2, r5
90022d4c:	fb08 f302 	mul.w	r3, r8, r2
90022d50:	930f      	str	r3, [sp, #60]	@ 0x3c
90022d52:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022d54:	2b00      	cmp	r3, #0
90022d56:	f040 8116 	bne.w	90022f86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
90022d5a:	4b8e      	ldr	r3, [pc, #568]	@ (90022f94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
90022d5c:	6818      	ldr	r0, [r3, #0]
90022d5e:	6803      	ldr	r3, [r0, #0]
90022d60:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90022d62:	4798      	blx	r3
90022d64:	2301      	movs	r3, #1
90022d66:	4a8c      	ldr	r2, [pc, #560]	@ (90022f98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90022d68:	fa03 f308 	lsl.w	r3, r3, r8
90022d6c:	8811      	ldrh	r1, [r2, #0]
90022d6e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
90022d72:	3b01      	subs	r3, #1
90022d74:	b2db      	uxtb	r3, r3
90022d76:	930e      	str	r3, [sp, #56]	@ 0x38
90022d78:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
90022d7c:	fb01 2303 	mla	r3, r1, r3, r2
90022d80:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90022d84:	930a      	str	r3, [sp, #40]	@ 0x28
90022d86:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022d88:	f3c3 4307 	ubfx	r3, r3, #16, #8
90022d8c:	9313      	str	r3, [sp, #76]	@ 0x4c
90022d8e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022d90:	0a19      	lsrs	r1, r3, #8
90022d92:	b2cb      	uxtb	r3, r1
90022d94:	9312      	str	r3, [sp, #72]	@ 0x48
90022d96:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022d98:	b2db      	uxtb	r3, r3
90022d9a:	9311      	str	r3, [sp, #68]	@ 0x44
90022d9c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022d9e:	095a      	lsrs	r2, r3, #5
90022da0:	4b7e      	ldr	r3, [pc, #504]	@ (90022f9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
90022da2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022da6:	400b      	ands	r3, r1
90022da8:	4313      	orrs	r3, r2
90022daa:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90022dac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90022db0:	4313      	orrs	r3, r2
90022db2:	b29b      	uxth	r3, r3
90022db4:	9310      	str	r3, [sp, #64]	@ 0x40
90022db6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022db8:	781a      	ldrb	r2, [r3, #0]
90022dba:	ea4f 0349 	mov.w	r3, r9, lsl #1
90022dbe:	fb05 b919 	mls	r9, r5, r9, fp
90022dc2:	4132      	asrs	r2, r6
90022dc4:	fb03 fb05 	mul.w	fp, r3, r5
90022dc8:	930d      	str	r3, [sp, #52]	@ 0x34
90022dca:	b2d2      	uxtb	r2, r2
90022dcc:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
90022dd0:	f11a 3aff 	adds.w	sl, sl, #4294967295
90022dd4:	f0c0 80f5 	bcc.w	90022fc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
90022dd8:	46ae      	mov	lr, r5
90022dda:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
90022dde:	f11e 3eff 	adds.w	lr, lr, #4294967295
90022de2:	f0c0 80dd 	bcc.w	90022fa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
90022de6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022de8:	4013      	ands	r3, r2
90022dea:	d055      	beq.n	90022e98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
90022dec:	20ff      	movs	r0, #255	@ 0xff
90022dee:	990e      	ldr	r1, [sp, #56]	@ 0x38
90022df0:	fb90 f1f1 	sdiv	r1, r0, r1
90022df4:	434b      	muls	r3, r1
90022df6:	2bfe      	cmp	r3, #254	@ 0xfe
90022df8:	dd03      	ble.n	90022e02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
90022dfa:	990c      	ldr	r1, [sp, #48]	@ 0x30
90022dfc:	4281      	cmp	r1, r0
90022dfe:	f000 80c4 	beq.w	90022f8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
90022e02:	990c      	ldr	r1, [sp, #48]	@ 0x30
90022e04:	f8bc 4000 	ldrh.w	r4, [ip]
90022e08:	fb11 f303 	smulbb	r3, r1, r3
90022e0c:	1220      	asrs	r0, r4, #8
90022e0e:	b29b      	uxth	r3, r3
90022e10:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90022e14:	1c59      	adds	r1, r3, #1
90022e16:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
90022e1a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90022e1e:	10e1      	asrs	r1, r4, #3
90022e20:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022e24:	00e4      	lsls	r4, r4, #3
90022e26:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90022e2a:	b29f      	uxth	r7, r3
90022e2c:	43db      	mvns	r3, r3
90022e2e:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90022e32:	b2db      	uxtb	r3, r3
90022e34:	b2e4      	uxtb	r4, r4
90022e36:	9309      	str	r3, [sp, #36]	@ 0x24
90022e38:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90022e3a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90022e3e:	fb13 f907 	smulbb	r9, r3, r7
90022e42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022e44:	fb00 9003 	mla	r0, r0, r3, r9
90022e48:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90022e4a:	fb13 f907 	smulbb	r9, r3, r7
90022e4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022e50:	b280      	uxth	r0, r0
90022e52:	fb01 9103 	mla	r1, r1, r3, r9
90022e56:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022e58:	fb13 f707 	smulbb	r7, r3, r7
90022e5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022e5e:	b289      	uxth	r1, r1
90022e60:	fb04 7403 	mla	r4, r4, r3, r7
90022e64:	1c43      	adds	r3, r0, #1
90022e66:	b2a4      	uxth	r4, r4
90022e68:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90022e6c:	f104 0901 	add.w	r9, r4, #1
90022e70:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90022e74:	eb09 2914 	add.w	r9, r9, r4, lsr #8
90022e78:	f3c9 29c4 	ubfx	r9, r9, #11, #5
90022e7c:	ea49 0000 	orr.w	r0, r9, r0
90022e80:	f101 0901 	add.w	r9, r1, #1
90022e84:	eb09 2911 	add.w	r9, r9, r1, lsr #8
90022e88:	ea4f 1959 	mov.w	r9, r9, lsr #5
90022e8c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90022e90:	ea40 0009 	orr.w	r0, r0, r9
90022e94:	f8ac 0000 	strh.w	r0, [ip]
90022e98:	4446      	add	r6, r8
90022e9a:	b2b6      	uxth	r6, r6
90022e9c:	2e07      	cmp	r6, #7
90022e9e:	bf89      	itett	hi
90022ea0:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
90022ea2:	fa42 f208 	asrls.w	r2, r2, r8
90022ea6:	2600      	movhi	r6, #0
90022ea8:	785a      	ldrbhi	r2, [r3, #1]
90022eaa:	bf8a      	itet	hi
90022eac:	3301      	addhi	r3, #1
90022eae:	b2d2      	uxtbls	r2, r2
90022eb0:	9328      	strhi	r3, [sp, #160]	@ 0xa0
90022eb2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022eb4:	449c      	add	ip, r3
90022eb6:	e792      	b.n	90022dde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
90022eb8:	441c      	add	r4, r3
90022eba:	b224      	sxth	r4, r4
90022ebc:	e6d5      	b.n	90022c6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90022ebe:	f1ba 0f01 	cmp.w	sl, #1
90022ec2:	f47f af0c 	bne.w	90022cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022ec6:	f1bb 0f01 	cmp.w	fp, #1
90022eca:	f47f af08 	bne.w	90022cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022ece:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 90022f94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
90022ed2:	f8db 0000 	ldr.w	r0, [fp]
90022ed6:	6803      	ldr	r3, [r0, #0]
90022ed8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90022eda:	4798      	blx	r3
90022edc:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
90022ee0:	465a      	mov	r2, fp
90022ee2:	d006      	beq.n	90022ef2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90022ee4:	f1b8 0f04 	cmp.w	r8, #4
90022ee8:	d140      	bne.n	90022f6c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
90022eea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022eec:	3300      	adds	r3, #0
90022eee:	bf18      	it	ne
90022ef0:	2301      	movne	r3, #1
90022ef2:	0580      	lsls	r0, r0, #22
90022ef4:	d56e      	bpl.n	90022fd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90022ef6:	f1b8 0f08 	cmp.w	r8, #8
90022efa:	d16b      	bne.n	90022fd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90022efc:	2b00      	cmp	r3, #0
90022efe:	bf0c      	ite	eq
90022f00:	f44f 7100 	moveq.w	r1, #512	@ 0x200
90022f04:	f44f 7180 	movne.w	r1, #256	@ 0x100
90022f08:	2d00      	cmp	r5, #0
90022f0a:	f47f aee8 	bne.w	90022cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022f0e:	2e00      	cmp	r6, #0
90022f10:	f47f aee5 	bne.w	90022cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022f14:	19e3      	adds	r3, r4, r7
90022f16:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90022f18:	4283      	cmp	r3, r0
90022f1a:	f73f aee0 	bgt.w	90022cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022f1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022f20:	980d      	ldr	r0, [sp, #52]	@ 0x34
90022f22:	444b      	add	r3, r9
90022f24:	4283      	cmp	r3, r0
90022f26:	f73f aeda 	bgt.w	90022cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022f2a:	b2bf      	uxth	r7, r7
90022f2c:	f1b8 0f08 	cmp.w	r8, #8
90022f30:	6810      	ldr	r0, [r2, #0]
90022f32:	f04f 0500 	mov.w	r5, #0
90022f36:	bf18      	it	ne
90022f38:	3701      	addne	r7, #1
90022f3a:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
90022f3e:	6804      	ldr	r4, [r0, #0]
90022f40:	bf18      	it	ne
90022f42:	f027 0701 	bicne.w	r7, r7, #1
90022f46:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90022f4a:	e9cd 1505 	strd	r1, r5, [sp, #20]
90022f4e:	990c      	ldr	r1, [sp, #48]	@ 0x30
90022f50:	bf18      	it	ne
90022f52:	b2bf      	uxthne	r7, r7
90022f54:	9104      	str	r1, [sp, #16]
90022f56:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90022f58:	e9cd 7900 	strd	r7, r9, [sp]
90022f5c:	e9cd 7102 	strd	r7, r1, [sp, #8]
90022f60:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90022f62:	6d64      	ldr	r4, [r4, #84]	@ 0x54
90022f64:	47a0      	blx	r4
90022f66:	b019      	add	sp, #100	@ 0x64
90022f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022f6c:	2300      	movs	r3, #0
90022f6e:	e7c0      	b.n	90022ef2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90022f70:	2208      	movs	r2, #8
90022f72:	fb92 f3f8 	sdiv	r3, r2, r8
90022f76:	1e5a      	subs	r2, r3, #1
90022f78:	443a      	add	r2, r7
90022f7a:	fb92 f2f3 	sdiv	r2, r2, r3
90022f7e:	fb12 f203 	smulbb	r2, r2, r3
90022f82:	b292      	uxth	r2, r2
90022f84:	e6b0      	b.n	90022ce8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90022f86:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90022f88:	e6ec      	b.n	90022d64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
90022f8a:	9810      	ldr	r0, [sp, #64]	@ 0x40
90022f8c:	e782      	b.n	90022e94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
90022f8e:	bf00      	nop
90022f90:	24024596 	.word	0x24024596
90022f94:	240245a0 	.word	0x240245a0
90022f98:	24024598 	.word	0x24024598
90022f9c:	00fff800 	.word	0x00fff800
90022fa0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022fa2:	b153      	cbz	r3, 90022fba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
90022fa4:	441e      	add	r6, r3
90022fa6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022fa8:	b2b6      	uxth	r6, r6
90022faa:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
90022fae:	f006 0607 	and.w	r6, r6, #7
90022fb2:	781a      	ldrb	r2, [r3, #0]
90022fb4:	9328      	str	r3, [sp, #160]	@ 0xa0
90022fb6:	4132      	asrs	r2, r6
90022fb8:	b2d2      	uxtb	r2, r2
90022fba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022fbc:	445b      	add	r3, fp
90022fbe:	930a      	str	r3, [sp, #40]	@ 0x28
90022fc0:	e706      	b.n	90022dd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
90022fc2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022fc4:	2b00      	cmp	r3, #0
90022fc6:	d1ce      	bne.n	90022f66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022fc8:	4b05      	ldr	r3, [pc, #20]	@ (90022fe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
90022fca:	6818      	ldr	r0, [r3, #0]
90022fcc:	6803      	ldr	r3, [r0, #0]
90022fce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022fd0:	4798      	blx	r3
90022fd2:	e7c8      	b.n	90022f66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022fd4:	2b00      	cmp	r3, #0
90022fd6:	f43f ae82 	beq.w	90022cde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022fda:	f44f 7180 	mov.w	r1, #256	@ 0x100
90022fde:	e793      	b.n	90022f08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
90022fe0:	240245a0 	.word	0x240245a0

90022fe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90022fe4:	b538      	push	{r3, r4, r5, lr}
90022fe6:	4c15      	ldr	r4, [pc, #84]	@ (9002303c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90022fe8:	4605      	mov	r5, r0
90022fea:	7823      	ldrb	r3, [r4, #0]
90022fec:	f3bf 8f5b 	dmb	ish
90022ff0:	07da      	lsls	r2, r3, #31
90022ff2:	d40b      	bmi.n	9002300c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90022ff4:	4620      	mov	r0, r4
90022ff6:	f008 fdd2 	bl	9002bb9e <__cxa_guard_acquire>
90022ffa:	b138      	cbz	r0, 9002300c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90022ffc:	4620      	mov	r0, r4
90022ffe:	f008 fdda 	bl	9002bbb6 <__cxa_guard_release>
90023002:	4a0f      	ldr	r2, [pc, #60]	@ (90023040 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90023004:	490f      	ldr	r1, [pc, #60]	@ (90023044 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90023006:	4810      	ldr	r0, [pc, #64]	@ (90023048 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90023008:	f008 fdc2 	bl	9002bb90 <__aeabi_atexit>
9002300c:	4c0f      	ldr	r4, [pc, #60]	@ (9002304c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9002300e:	7823      	ldrb	r3, [r4, #0]
90023010:	f3bf 8f5b 	dmb	ish
90023014:	07db      	lsls	r3, r3, #31
90023016:	d40b      	bmi.n	90023030 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90023018:	4620      	mov	r0, r4
9002301a:	f008 fdc0 	bl	9002bb9e <__cxa_guard_acquire>
9002301e:	b138      	cbz	r0, 90023030 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90023020:	4620      	mov	r0, r4
90023022:	f008 fdc8 	bl	9002bbb6 <__cxa_guard_release>
90023026:	4a06      	ldr	r2, [pc, #24]	@ (90023040 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90023028:	4909      	ldr	r1, [pc, #36]	@ (90023050 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9002302a:	480a      	ldr	r0, [pc, #40]	@ (90023054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9002302c:	f008 fdb0 	bl	9002bb90 <__aeabi_atexit>
90023030:	4b05      	ldr	r3, [pc, #20]	@ (90023048 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90023032:	616b      	str	r3, [r5, #20]
90023034:	4b07      	ldr	r3, [pc, #28]	@ (90023054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90023036:	61ab      	str	r3, [r5, #24]
90023038:	bd38      	pop	{r3, r4, r5, pc}
9002303a:	bf00      	nop
9002303c:	24024684 	.word	0x24024684
90023040:	24000000 	.word	0x24000000
90023044:	9001f181 	.word	0x9001f181
90023048:	240002f8 	.word	0x240002f8
9002304c:	24024688 	.word	0x24024688
90023050:	9001f17f 	.word	0x9001f17f
90023054:	240002fc 	.word	0x240002fc

90023058 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90023058:	b538      	push	{r3, r4, r5, lr}
9002305a:	4c15      	ldr	r4, [pc, #84]	@ (900230b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9002305c:	4605      	mov	r5, r0
9002305e:	7823      	ldrb	r3, [r4, #0]
90023060:	f3bf 8f5b 	dmb	ish
90023064:	07da      	lsls	r2, r3, #31
90023066:	d40b      	bmi.n	90023080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90023068:	4620      	mov	r0, r4
9002306a:	f008 fd98 	bl	9002bb9e <__cxa_guard_acquire>
9002306e:	b138      	cbz	r0, 90023080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90023070:	4620      	mov	r0, r4
90023072:	f008 fda0 	bl	9002bbb6 <__cxa_guard_release>
90023076:	4a0f      	ldr	r2, [pc, #60]	@ (900230b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90023078:	490f      	ldr	r1, [pc, #60]	@ (900230b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9002307a:	4810      	ldr	r0, [pc, #64]	@ (900230bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002307c:	f008 fd88 	bl	9002bb90 <__aeabi_atexit>
90023080:	4c0f      	ldr	r4, [pc, #60]	@ (900230c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90023082:	7823      	ldrb	r3, [r4, #0]
90023084:	f3bf 8f5b 	dmb	ish
90023088:	07db      	lsls	r3, r3, #31
9002308a:	d40b      	bmi.n	900230a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9002308c:	4620      	mov	r0, r4
9002308e:	f008 fd86 	bl	9002bb9e <__cxa_guard_acquire>
90023092:	b138      	cbz	r0, 900230a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90023094:	4620      	mov	r0, r4
90023096:	f008 fd8e 	bl	9002bbb6 <__cxa_guard_release>
9002309a:	4a06      	ldr	r2, [pc, #24]	@ (900230b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9002309c:	4909      	ldr	r1, [pc, #36]	@ (900230c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9002309e:	480a      	ldr	r0, [pc, #40]	@ (900230c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
900230a0:	f008 fd76 	bl	9002bb90 <__aeabi_atexit>
900230a4:	4b05      	ldr	r3, [pc, #20]	@ (900230bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
900230a6:	60eb      	str	r3, [r5, #12]
900230a8:	4b07      	ldr	r3, [pc, #28]	@ (900230c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
900230aa:	612b      	str	r3, [r5, #16]
900230ac:	bd38      	pop	{r3, r4, r5, pc}
900230ae:	bf00      	nop
900230b0:	2402465c 	.word	0x2402465c
900230b4:	24000000 	.word	0x24000000
900230b8:	9001f185 	.word	0x9001f185
900230bc:	240002d0 	.word	0x240002d0
900230c0:	24024660 	.word	0x24024660
900230c4:	9001f183 	.word	0x9001f183
900230c8:	240002d4 	.word	0x240002d4

900230cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
900230cc:	b510      	push	{r4, lr}
900230ce:	4604      	mov	r4, r0
900230d0:	f7ff ff88 	bl	90022fe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
900230d4:	4620      	mov	r0, r4
900230d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900230da:	f7ff bfbd 	b.w	90023058 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

900230e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
900230e0:	b538      	push	{r3, r4, r5, lr}
900230e2:	4c15      	ldr	r4, [pc, #84]	@ (90023138 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
900230e4:	4605      	mov	r5, r0
900230e6:	7823      	ldrb	r3, [r4, #0]
900230e8:	f3bf 8f5b 	dmb	ish
900230ec:	07da      	lsls	r2, r3, #31
900230ee:	d40b      	bmi.n	90023108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900230f0:	4620      	mov	r0, r4
900230f2:	f008 fd54 	bl	9002bb9e <__cxa_guard_acquire>
900230f6:	b138      	cbz	r0, 90023108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900230f8:	4620      	mov	r0, r4
900230fa:	f008 fd5c 	bl	9002bbb6 <__cxa_guard_release>
900230fe:	4a0f      	ldr	r2, [pc, #60]	@ (9002313c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90023100:	490f      	ldr	r1, [pc, #60]	@ (90023140 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
90023102:	4810      	ldr	r0, [pc, #64]	@ (90023144 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
90023104:	f008 fd44 	bl	9002bb90 <__aeabi_atexit>
90023108:	4c0f      	ldr	r4, [pc, #60]	@ (90023148 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9002310a:	7823      	ldrb	r3, [r4, #0]
9002310c:	f3bf 8f5b 	dmb	ish
90023110:	07db      	lsls	r3, r3, #31
90023112:	d40b      	bmi.n	9002312c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
90023114:	4620      	mov	r0, r4
90023116:	f008 fd42 	bl	9002bb9e <__cxa_guard_acquire>
9002311a:	b138      	cbz	r0, 9002312c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9002311c:	4620      	mov	r0, r4
9002311e:	f008 fd4a 	bl	9002bbb6 <__cxa_guard_release>
90023122:	4a06      	ldr	r2, [pc, #24]	@ (9002313c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
90023124:	4909      	ldr	r1, [pc, #36]	@ (9002314c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
90023126:	480a      	ldr	r0, [pc, #40]	@ (90023150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90023128:	f008 fd32 	bl	9002bb90 <__aeabi_atexit>
9002312c:	4b05      	ldr	r3, [pc, #20]	@ (90023144 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9002312e:	626b      	str	r3, [r5, #36]	@ 0x24
90023130:	4b07      	ldr	r3, [pc, #28]	@ (90023150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
90023132:	62ab      	str	r3, [r5, #40]	@ 0x28
90023134:	bd38      	pop	{r3, r4, r5, pc}
90023136:	bf00      	nop
90023138:	2402468c 	.word	0x2402468c
9002313c:	24000000 	.word	0x24000000
90023140:	9001f179 	.word	0x9001f179
90023144:	24000300 	.word	0x24000300
90023148:	24024690 	.word	0x24024690
9002314c:	9001f177 	.word	0x9001f177
90023150:	24000304 	.word	0x24000304

90023154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90023154:	b538      	push	{r3, r4, r5, lr}
90023156:	4c15      	ldr	r4, [pc, #84]	@ (900231ac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90023158:	4605      	mov	r5, r0
9002315a:	7823      	ldrb	r3, [r4, #0]
9002315c:	f3bf 8f5b 	dmb	ish
90023160:	07da      	lsls	r2, r3, #31
90023162:	d40b      	bmi.n	9002317c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90023164:	4620      	mov	r0, r4
90023166:	f008 fd1a 	bl	9002bb9e <__cxa_guard_acquire>
9002316a:	b138      	cbz	r0, 9002317c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9002316c:	4620      	mov	r0, r4
9002316e:	f008 fd22 	bl	9002bbb6 <__cxa_guard_release>
90023172:	4a0f      	ldr	r2, [pc, #60]	@ (900231b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90023174:	490f      	ldr	r1, [pc, #60]	@ (900231b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90023176:	4810      	ldr	r0, [pc, #64]	@ (900231b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90023178:	f008 fd0a 	bl	9002bb90 <__aeabi_atexit>
9002317c:	4c0f      	ldr	r4, [pc, #60]	@ (900231bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9002317e:	7823      	ldrb	r3, [r4, #0]
90023180:	f3bf 8f5b 	dmb	ish
90023184:	07db      	lsls	r3, r3, #31
90023186:	d40b      	bmi.n	900231a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90023188:	4620      	mov	r0, r4
9002318a:	f008 fd08 	bl	9002bb9e <__cxa_guard_acquire>
9002318e:	b138      	cbz	r0, 900231a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90023190:	4620      	mov	r0, r4
90023192:	f008 fd10 	bl	9002bbb6 <__cxa_guard_release>
90023196:	4a06      	ldr	r2, [pc, #24]	@ (900231b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90023198:	4909      	ldr	r1, [pc, #36]	@ (900231c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9002319a:	480a      	ldr	r0, [pc, #40]	@ (900231c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002319c:	f008 fcf8 	bl	9002bb90 <__aeabi_atexit>
900231a0:	4b05      	ldr	r3, [pc, #20]	@ (900231b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
900231a2:	61eb      	str	r3, [r5, #28]
900231a4:	4b07      	ldr	r3, [pc, #28]	@ (900231c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
900231a6:	622b      	str	r3, [r5, #32]
900231a8:	bd38      	pop	{r3, r4, r5, pc}
900231aa:	bf00      	nop
900231ac:	24024664 	.word	0x24024664
900231b0:	24000000 	.word	0x24000000
900231b4:	9001f17d 	.word	0x9001f17d
900231b8:	240002d8 	.word	0x240002d8
900231bc:	24024668 	.word	0x24024668
900231c0:	9001f17b 	.word	0x9001f17b
900231c4:	240002dc 	.word	0x240002dc

900231c8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
900231c8:	b510      	push	{r4, lr}
900231ca:	4604      	mov	r4, r0
900231cc:	f7ff ff88 	bl	900230e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
900231d0:	4620      	mov	r0, r4
900231d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900231d6:	f7ff bfbd 	b.w	90023154 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

900231dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
900231dc:	b538      	push	{r3, r4, r5, lr}
900231de:	4c15      	ldr	r4, [pc, #84]	@ (90023234 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
900231e0:	4605      	mov	r5, r0
900231e2:	7823      	ldrb	r3, [r4, #0]
900231e4:	f3bf 8f5b 	dmb	ish
900231e8:	07da      	lsls	r2, r3, #31
900231ea:	d40b      	bmi.n	90023204 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900231ec:	4620      	mov	r0, r4
900231ee:	f008 fcd6 	bl	9002bb9e <__cxa_guard_acquire>
900231f2:	b138      	cbz	r0, 90023204 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900231f4:	4620      	mov	r0, r4
900231f6:	f008 fcde 	bl	9002bbb6 <__cxa_guard_release>
900231fa:	4a0f      	ldr	r2, [pc, #60]	@ (90023238 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900231fc:	490f      	ldr	r1, [pc, #60]	@ (9002323c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
900231fe:	4810      	ldr	r0, [pc, #64]	@ (90023240 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
90023200:	f008 fcc6 	bl	9002bb90 <__aeabi_atexit>
90023204:	4c0f      	ldr	r4, [pc, #60]	@ (90023244 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
90023206:	7823      	ldrb	r3, [r4, #0]
90023208:	f3bf 8f5b 	dmb	ish
9002320c:	07db      	lsls	r3, r3, #31
9002320e:	d40b      	bmi.n	90023228 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90023210:	4620      	mov	r0, r4
90023212:	f008 fcc4 	bl	9002bb9e <__cxa_guard_acquire>
90023216:	b138      	cbz	r0, 90023228 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
90023218:	4620      	mov	r0, r4
9002321a:	f008 fccc 	bl	9002bbb6 <__cxa_guard_release>
9002321e:	4a06      	ldr	r2, [pc, #24]	@ (90023238 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
90023220:	4909      	ldr	r1, [pc, #36]	@ (90023248 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
90023222:	480a      	ldr	r0, [pc, #40]	@ (9002324c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
90023224:	f008 fcb4 	bl	9002bb90 <__aeabi_atexit>
90023228:	4b05      	ldr	r3, [pc, #20]	@ (90023240 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9002322a:	636b      	str	r3, [r5, #52]	@ 0x34
9002322c:	4b07      	ldr	r3, [pc, #28]	@ (9002324c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9002322e:	63ab      	str	r3, [r5, #56]	@ 0x38
90023230:	bd38      	pop	{r3, r4, r5, pc}
90023232:	bf00      	nop
90023234:	2402469c 	.word	0x2402469c
90023238:	24000000 	.word	0x24000000
9002323c:	9001f171 	.word	0x9001f171
90023240:	24000310 	.word	0x24000310
90023244:	240246a0 	.word	0x240246a0
90023248:	9001f16f 	.word	0x9001f16f
9002324c:	24000314 	.word	0x24000314

90023250 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90023250:	b538      	push	{r3, r4, r5, lr}
90023252:	4c15      	ldr	r4, [pc, #84]	@ (900232a8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90023254:	4605      	mov	r5, r0
90023256:	7823      	ldrb	r3, [r4, #0]
90023258:	f3bf 8f5b 	dmb	ish
9002325c:	07da      	lsls	r2, r3, #31
9002325e:	d40b      	bmi.n	90023278 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90023260:	4620      	mov	r0, r4
90023262:	f008 fc9c 	bl	9002bb9e <__cxa_guard_acquire>
90023266:	b138      	cbz	r0, 90023278 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90023268:	4620      	mov	r0, r4
9002326a:	f008 fca4 	bl	9002bbb6 <__cxa_guard_release>
9002326e:	4a0f      	ldr	r2, [pc, #60]	@ (900232ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90023270:	490f      	ldr	r1, [pc, #60]	@ (900232b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90023272:	4810      	ldr	r0, [pc, #64]	@ (900232b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90023274:	f008 fc8c 	bl	9002bb90 <__aeabi_atexit>
90023278:	4c0f      	ldr	r4, [pc, #60]	@ (900232b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9002327a:	7823      	ldrb	r3, [r4, #0]
9002327c:	f3bf 8f5b 	dmb	ish
90023280:	07db      	lsls	r3, r3, #31
90023282:	d40b      	bmi.n	9002329c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90023284:	4620      	mov	r0, r4
90023286:	f008 fc8a 	bl	9002bb9e <__cxa_guard_acquire>
9002328a:	b138      	cbz	r0, 9002329c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9002328c:	4620      	mov	r0, r4
9002328e:	f008 fc92 	bl	9002bbb6 <__cxa_guard_release>
90023292:	4a06      	ldr	r2, [pc, #24]	@ (900232ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90023294:	4909      	ldr	r1, [pc, #36]	@ (900232bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90023296:	480a      	ldr	r0, [pc, #40]	@ (900232c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90023298:	f008 fc7a 	bl	9002bb90 <__aeabi_atexit>
9002329c:	4b05      	ldr	r3, [pc, #20]	@ (900232b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9002329e:	62eb      	str	r3, [r5, #44]	@ 0x2c
900232a0:	4b07      	ldr	r3, [pc, #28]	@ (900232c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
900232a2:	632b      	str	r3, [r5, #48]	@ 0x30
900232a4:	bd38      	pop	{r3, r4, r5, pc}
900232a6:	bf00      	nop
900232a8:	2402466c 	.word	0x2402466c
900232ac:	24000000 	.word	0x24000000
900232b0:	9001f175 	.word	0x9001f175
900232b4:	240002e0 	.word	0x240002e0
900232b8:	24024670 	.word	0x24024670
900232bc:	9001f173 	.word	0x9001f173
900232c0:	240002e4 	.word	0x240002e4

900232c4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
900232c4:	b510      	push	{r4, lr}
900232c6:	4604      	mov	r4, r0
900232c8:	f7ff ff88 	bl	900231dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
900232cc:	4620      	mov	r0, r4
900232ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900232d2:	f7ff bfbd 	b.w	90023250 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

900232d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
900232d8:	b538      	push	{r3, r4, r5, lr}
900232da:	4c15      	ldr	r4, [pc, #84]	@ (90023330 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
900232dc:	4605      	mov	r5, r0
900232de:	7823      	ldrb	r3, [r4, #0]
900232e0:	f3bf 8f5b 	dmb	ish
900232e4:	07da      	lsls	r2, r3, #31
900232e6:	d40b      	bmi.n	90023300 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900232e8:	4620      	mov	r0, r4
900232ea:	f008 fc58 	bl	9002bb9e <__cxa_guard_acquire>
900232ee:	b138      	cbz	r0, 90023300 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900232f0:	4620      	mov	r0, r4
900232f2:	f008 fc60 	bl	9002bbb6 <__cxa_guard_release>
900232f6:	4a0f      	ldr	r2, [pc, #60]	@ (90023334 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900232f8:	490f      	ldr	r1, [pc, #60]	@ (90023338 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
900232fa:	4810      	ldr	r0, [pc, #64]	@ (9002333c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900232fc:	f008 fc48 	bl	9002bb90 <__aeabi_atexit>
90023300:	4c0f      	ldr	r4, [pc, #60]	@ (90023340 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
90023302:	7823      	ldrb	r3, [r4, #0]
90023304:	f3bf 8f5b 	dmb	ish
90023308:	07db      	lsls	r3, r3, #31
9002330a:	d40b      	bmi.n	90023324 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9002330c:	4620      	mov	r0, r4
9002330e:	f008 fc46 	bl	9002bb9e <__cxa_guard_acquire>
90023312:	b138      	cbz	r0, 90023324 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
90023314:	4620      	mov	r0, r4
90023316:	f008 fc4e 	bl	9002bbb6 <__cxa_guard_release>
9002331a:	4a06      	ldr	r2, [pc, #24]	@ (90023334 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9002331c:	4909      	ldr	r1, [pc, #36]	@ (90023344 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9002331e:	480a      	ldr	r0, [pc, #40]	@ (90023348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
90023320:	f008 fc36 	bl	9002bb90 <__aeabi_atexit>
90023324:	4b05      	ldr	r3, [pc, #20]	@ (9002333c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
90023326:	656b      	str	r3, [r5, #84]	@ 0x54
90023328:	4b07      	ldr	r3, [pc, #28]	@ (90023348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9002332a:	65ab      	str	r3, [r5, #88]	@ 0x58
9002332c:	bd38      	pop	{r3, r4, r5, pc}
9002332e:	bf00      	nop
90023330:	240246a4 	.word	0x240246a4
90023334:	24000000 	.word	0x24000000
90023338:	9001f161 	.word	0x9001f161
9002333c:	24000318 	.word	0x24000318
90023340:	240246a8 	.word	0x240246a8
90023344:	9001f15f 	.word	0x9001f15f
90023348:	2400031c 	.word	0x2400031c

9002334c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9002334c:	b538      	push	{r3, r4, r5, lr}
9002334e:	4c15      	ldr	r4, [pc, #84]	@ (900233a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90023350:	4605      	mov	r5, r0
90023352:	7823      	ldrb	r3, [r4, #0]
90023354:	f3bf 8f5b 	dmb	ish
90023358:	07da      	lsls	r2, r3, #31
9002335a:	d40b      	bmi.n	90023374 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9002335c:	4620      	mov	r0, r4
9002335e:	f008 fc1e 	bl	9002bb9e <__cxa_guard_acquire>
90023362:	b138      	cbz	r0, 90023374 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90023364:	4620      	mov	r0, r4
90023366:	f008 fc26 	bl	9002bbb6 <__cxa_guard_release>
9002336a:	4a0f      	ldr	r2, [pc, #60]	@ (900233a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9002336c:	490f      	ldr	r1, [pc, #60]	@ (900233ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9002336e:	4810      	ldr	r0, [pc, #64]	@ (900233b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90023370:	f008 fc0e 	bl	9002bb90 <__aeabi_atexit>
90023374:	4c0f      	ldr	r4, [pc, #60]	@ (900233b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90023376:	7823      	ldrb	r3, [r4, #0]
90023378:	f3bf 8f5b 	dmb	ish
9002337c:	07db      	lsls	r3, r3, #31
9002337e:	d40b      	bmi.n	90023398 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90023380:	4620      	mov	r0, r4
90023382:	f008 fc0c 	bl	9002bb9e <__cxa_guard_acquire>
90023386:	b138      	cbz	r0, 90023398 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90023388:	4620      	mov	r0, r4
9002338a:	f008 fc14 	bl	9002bbb6 <__cxa_guard_release>
9002338e:	4a06      	ldr	r2, [pc, #24]	@ (900233a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90023390:	4909      	ldr	r1, [pc, #36]	@ (900233b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90023392:	480a      	ldr	r0, [pc, #40]	@ (900233bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90023394:	f008 fbfc 	bl	9002bb90 <__aeabi_atexit>
90023398:	4b05      	ldr	r3, [pc, #20]	@ (900233b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9002339a:	64eb      	str	r3, [r5, #76]	@ 0x4c
9002339c:	4b07      	ldr	r3, [pc, #28]	@ (900233bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9002339e:	652b      	str	r3, [r5, #80]	@ 0x50
900233a0:	bd38      	pop	{r3, r4, r5, pc}
900233a2:	bf00      	nop
900233a4:	240246ac 	.word	0x240246ac
900233a8:	24000000 	.word	0x24000000
900233ac:	9001f165 	.word	0x9001f165
900233b0:	24000320 	.word	0x24000320
900233b4:	240246b0 	.word	0x240246b0
900233b8:	9001f163 	.word	0x9001f163
900233bc:	24000324 	.word	0x24000324

900233c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
900233c0:	b538      	push	{r3, r4, r5, lr}
900233c2:	4c15      	ldr	r4, [pc, #84]	@ (90023418 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
900233c4:	4605      	mov	r5, r0
900233c6:	7823      	ldrb	r3, [r4, #0]
900233c8:	f3bf 8f5b 	dmb	ish
900233cc:	07da      	lsls	r2, r3, #31
900233ce:	d40b      	bmi.n	900233e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
900233d0:	4620      	mov	r0, r4
900233d2:	f008 fbe4 	bl	9002bb9e <__cxa_guard_acquire>
900233d6:	b138      	cbz	r0, 900233e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
900233d8:	4620      	mov	r0, r4
900233da:	f008 fbec 	bl	9002bbb6 <__cxa_guard_release>
900233de:	4a0f      	ldr	r2, [pc, #60]	@ (9002341c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900233e0:	490f      	ldr	r1, [pc, #60]	@ (90023420 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
900233e2:	4810      	ldr	r0, [pc, #64]	@ (90023424 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900233e4:	f008 fbd4 	bl	9002bb90 <__aeabi_atexit>
900233e8:	4c0f      	ldr	r4, [pc, #60]	@ (90023428 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
900233ea:	7823      	ldrb	r3, [r4, #0]
900233ec:	f3bf 8f5b 	dmb	ish
900233f0:	07db      	lsls	r3, r3, #31
900233f2:	d40b      	bmi.n	9002340c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900233f4:	4620      	mov	r0, r4
900233f6:	f008 fbd2 	bl	9002bb9e <__cxa_guard_acquire>
900233fa:	b138      	cbz	r0, 9002340c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900233fc:	4620      	mov	r0, r4
900233fe:	f008 fbda 	bl	9002bbb6 <__cxa_guard_release>
90023402:	4a06      	ldr	r2, [pc, #24]	@ (9002341c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90023404:	4909      	ldr	r1, [pc, #36]	@ (9002342c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
90023406:	480a      	ldr	r0, [pc, #40]	@ (90023430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90023408:	f008 fbc2 	bl	9002bb90 <__aeabi_atexit>
9002340c:	4b05      	ldr	r3, [pc, #20]	@ (90023424 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9002340e:	646b      	str	r3, [r5, #68]	@ 0x44
90023410:	4b07      	ldr	r3, [pc, #28]	@ (90023430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
90023412:	64ab      	str	r3, [r5, #72]	@ 0x48
90023414:	bd38      	pop	{r3, r4, r5, pc}
90023416:	bf00      	nop
90023418:	24024674 	.word	0x24024674
9002341c:	24000000 	.word	0x24000000
90023420:	9001f169 	.word	0x9001f169
90023424:	240002e8 	.word	0x240002e8
90023428:	24024678 	.word	0x24024678
9002342c:	9001f167 	.word	0x9001f167
90023430:	240002ec 	.word	0x240002ec

90023434 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
90023434:	b538      	push	{r3, r4, r5, lr}
90023436:	4c15      	ldr	r4, [pc, #84]	@ (9002348c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
90023438:	4605      	mov	r5, r0
9002343a:	7823      	ldrb	r3, [r4, #0]
9002343c:	f3bf 8f5b 	dmb	ish
90023440:	07da      	lsls	r2, r3, #31
90023442:	d40b      	bmi.n	9002345c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90023444:	4620      	mov	r0, r4
90023446:	f008 fbaa 	bl	9002bb9e <__cxa_guard_acquire>
9002344a:	b138      	cbz	r0, 9002345c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9002344c:	4620      	mov	r0, r4
9002344e:	f008 fbb2 	bl	9002bbb6 <__cxa_guard_release>
90023452:	4a0f      	ldr	r2, [pc, #60]	@ (90023490 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90023454:	490f      	ldr	r1, [pc, #60]	@ (90023494 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90023456:	4810      	ldr	r0, [pc, #64]	@ (90023498 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90023458:	f008 fb9a 	bl	9002bb90 <__aeabi_atexit>
9002345c:	4c0f      	ldr	r4, [pc, #60]	@ (9002349c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9002345e:	7823      	ldrb	r3, [r4, #0]
90023460:	f3bf 8f5b 	dmb	ish
90023464:	07db      	lsls	r3, r3, #31
90023466:	d40b      	bmi.n	90023480 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90023468:	4620      	mov	r0, r4
9002346a:	f008 fb98 	bl	9002bb9e <__cxa_guard_acquire>
9002346e:	b138      	cbz	r0, 90023480 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90023470:	4620      	mov	r0, r4
90023472:	f008 fba0 	bl	9002bbb6 <__cxa_guard_release>
90023476:	4a06      	ldr	r2, [pc, #24]	@ (90023490 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90023478:	4909      	ldr	r1, [pc, #36]	@ (900234a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9002347a:	480a      	ldr	r0, [pc, #40]	@ (900234a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9002347c:	f008 fb88 	bl	9002bb90 <__aeabi_atexit>
90023480:	4b05      	ldr	r3, [pc, #20]	@ (90023498 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90023482:	63eb      	str	r3, [r5, #60]	@ 0x3c
90023484:	4b07      	ldr	r3, [pc, #28]	@ (900234a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90023486:	642b      	str	r3, [r5, #64]	@ 0x40
90023488:	bd38      	pop	{r3, r4, r5, pc}
9002348a:	bf00      	nop
9002348c:	24024694 	.word	0x24024694
90023490:	24000000 	.word	0x24000000
90023494:	9001f16d 	.word	0x9001f16d
90023498:	24000308 	.word	0x24000308
9002349c:	24024698 	.word	0x24024698
900234a0:	9001f16b 	.word	0x9001f16b
900234a4:	2400030c 	.word	0x2400030c

900234a8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
900234a8:	b510      	push	{r4, lr}
900234aa:	4604      	mov	r4, r0
900234ac:	f7ff ff14 	bl	900232d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
900234b0:	4620      	mov	r0, r4
900234b2:	f7ff ff85 	bl	900233c0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
900234b6:	4620      	mov	r0, r4
900234b8:	f7ff ff48 	bl	9002334c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
900234bc:	4620      	mov	r0, r4
900234be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900234c2:	f7ff bfb7 	b.w	90023434 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

900234c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
900234c8:	b538      	push	{r3, r4, r5, lr}
900234ca:	4c15      	ldr	r4, [pc, #84]	@ (90023520 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
900234cc:	4605      	mov	r5, r0
900234ce:	7823      	ldrb	r3, [r4, #0]
900234d0:	f3bf 8f5b 	dmb	ish
900234d4:	07da      	lsls	r2, r3, #31
900234d6:	d40b      	bmi.n	900234f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
900234d8:	4620      	mov	r0, r4
900234da:	f008 fb60 	bl	9002bb9e <__cxa_guard_acquire>
900234de:	b138      	cbz	r0, 900234f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
900234e0:	4620      	mov	r0, r4
900234e2:	f008 fb68 	bl	9002bbb6 <__cxa_guard_release>
900234e6:	4a0f      	ldr	r2, [pc, #60]	@ (90023524 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900234e8:	490f      	ldr	r1, [pc, #60]	@ (90023528 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
900234ea:	4810      	ldr	r0, [pc, #64]	@ (9002352c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900234ec:	f008 fb50 	bl	9002bb90 <__aeabi_atexit>
900234f0:	4c0f      	ldr	r4, [pc, #60]	@ (90023530 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
900234f2:	7823      	ldrb	r3, [r4, #0]
900234f4:	f3bf 8f5b 	dmb	ish
900234f8:	07db      	lsls	r3, r3, #31
900234fa:	d40b      	bmi.n	90023514 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
900234fc:	4620      	mov	r0, r4
900234fe:	f008 fb4e 	bl	9002bb9e <__cxa_guard_acquire>
90023502:	b138      	cbz	r0, 90023514 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90023504:	4620      	mov	r0, r4
90023506:	f008 fb56 	bl	9002bbb6 <__cxa_guard_release>
9002350a:	4a06      	ldr	r2, [pc, #24]	@ (90023524 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9002350c:	4909      	ldr	r1, [pc, #36]	@ (90023534 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9002350e:	480a      	ldr	r0, [pc, #40]	@ (90023538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90023510:	f008 fb3e 	bl	9002bb90 <__aeabi_atexit>
90023514:	4b05      	ldr	r3, [pc, #20]	@ (9002352c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90023516:	666b      	str	r3, [r5, #100]	@ 0x64
90023518:	4b07      	ldr	r3, [pc, #28]	@ (90023538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9002351a:	66ab      	str	r3, [r5, #104]	@ 0x68
9002351c:	bd38      	pop	{r3, r4, r5, pc}
9002351e:	bf00      	nop
90023520:	2402467c 	.word	0x2402467c
90023524:	24000000 	.word	0x24000000
90023528:	9001f159 	.word	0x9001f159
9002352c:	240002f0 	.word	0x240002f0
90023530:	24024680 	.word	0x24024680
90023534:	9001f157 	.word	0x9001f157
90023538:	240002f4 	.word	0x240002f4

9002353c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9002353c:	b538      	push	{r3, r4, r5, lr}
9002353e:	4c15      	ldr	r4, [pc, #84]	@ (90023594 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90023540:	4605      	mov	r5, r0
90023542:	7823      	ldrb	r3, [r4, #0]
90023544:	f3bf 8f5b 	dmb	ish
90023548:	07da      	lsls	r2, r3, #31
9002354a:	d40b      	bmi.n	90023564 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9002354c:	4620      	mov	r0, r4
9002354e:	f008 fb26 	bl	9002bb9e <__cxa_guard_acquire>
90023552:	b138      	cbz	r0, 90023564 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90023554:	4620      	mov	r0, r4
90023556:	f008 fb2e 	bl	9002bbb6 <__cxa_guard_release>
9002355a:	4a0f      	ldr	r2, [pc, #60]	@ (90023598 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9002355c:	490f      	ldr	r1, [pc, #60]	@ (9002359c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9002355e:	4810      	ldr	r0, [pc, #64]	@ (900235a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90023560:	f008 fb16 	bl	9002bb90 <__aeabi_atexit>
90023564:	4c0f      	ldr	r4, [pc, #60]	@ (900235a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90023566:	7823      	ldrb	r3, [r4, #0]
90023568:	f3bf 8f5b 	dmb	ish
9002356c:	07db      	lsls	r3, r3, #31
9002356e:	d40b      	bmi.n	90023588 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90023570:	4620      	mov	r0, r4
90023572:	f008 fb14 	bl	9002bb9e <__cxa_guard_acquire>
90023576:	b138      	cbz	r0, 90023588 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90023578:	4620      	mov	r0, r4
9002357a:	f008 fb1c 	bl	9002bbb6 <__cxa_guard_release>
9002357e:	4a06      	ldr	r2, [pc, #24]	@ (90023598 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90023580:	4909      	ldr	r1, [pc, #36]	@ (900235a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90023582:	480a      	ldr	r0, [pc, #40]	@ (900235ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90023584:	f008 fb04 	bl	9002bb90 <__aeabi_atexit>
90023588:	4b05      	ldr	r3, [pc, #20]	@ (900235a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9002358a:	65eb      	str	r3, [r5, #92]	@ 0x5c
9002358c:	4b07      	ldr	r3, [pc, #28]	@ (900235ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9002358e:	662b      	str	r3, [r5, #96]	@ 0x60
90023590:	bd38      	pop	{r3, r4, r5, pc}
90023592:	bf00      	nop
90023594:	24024654 	.word	0x24024654
90023598:	24000000 	.word	0x24000000
9002359c:	9001f15d 	.word	0x9001f15d
900235a0:	240002c8 	.word	0x240002c8
900235a4:	24024658 	.word	0x24024658
900235a8:	9001f15b 	.word	0x9001f15b
900235ac:	240002cc 	.word	0x240002cc

900235b0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
900235b0:	b510      	push	{r4, lr}
900235b2:	4604      	mov	r4, r0
900235b4:	f7ff ff88 	bl	900234c8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
900235b8:	4620      	mov	r0, r4
900235ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900235be:	f7ff bfbd 	b.w	9002353c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

900235c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
900235c4:	b538      	push	{r3, r4, r5, lr}
900235c6:	4c15      	ldr	r4, [pc, #84]	@ (9002361c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
900235c8:	4605      	mov	r5, r0
900235ca:	7823      	ldrb	r3, [r4, #0]
900235cc:	f3bf 8f5b 	dmb	ish
900235d0:	07da      	lsls	r2, r3, #31
900235d2:	d40b      	bmi.n	900235ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900235d4:	4620      	mov	r0, r4
900235d6:	f008 fae2 	bl	9002bb9e <__cxa_guard_acquire>
900235da:	b138      	cbz	r0, 900235ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
900235dc:	4620      	mov	r0, r4
900235de:	f008 faea 	bl	9002bbb6 <__cxa_guard_release>
900235e2:	4a0f      	ldr	r2, [pc, #60]	@ (90023620 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900235e4:	490f      	ldr	r1, [pc, #60]	@ (90023624 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
900235e6:	4810      	ldr	r0, [pc, #64]	@ (90023628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900235e8:	f008 fad2 	bl	9002bb90 <__aeabi_atexit>
900235ec:	4c0f      	ldr	r4, [pc, #60]	@ (9002362c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
900235ee:	7823      	ldrb	r3, [r4, #0]
900235f0:	f3bf 8f5b 	dmb	ish
900235f4:	07db      	lsls	r3, r3, #31
900235f6:	d40b      	bmi.n	90023610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900235f8:	4620      	mov	r0, r4
900235fa:	f008 fad0 	bl	9002bb9e <__cxa_guard_acquire>
900235fe:	b138      	cbz	r0, 90023610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90023600:	4620      	mov	r0, r4
90023602:	f008 fad8 	bl	9002bbb6 <__cxa_guard_release>
90023606:	4a06      	ldr	r2, [pc, #24]	@ (90023620 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90023608:	4909      	ldr	r1, [pc, #36]	@ (90023630 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9002360a:	480a      	ldr	r0, [pc, #40]	@ (90023634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9002360c:	f008 fac0 	bl	9002bb90 <__aeabi_atexit>
90023610:	4b05      	ldr	r3, [pc, #20]	@ (90023628 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90023612:	676b      	str	r3, [r5, #116]	@ 0x74
90023614:	4b07      	ldr	r3, [pc, #28]	@ (90023634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90023616:	67ab      	str	r3, [r5, #120]	@ 0x78
90023618:	bd38      	pop	{r3, r4, r5, pc}
9002361a:	bf00      	nop
9002361c:	2402464c 	.word	0x2402464c
90023620:	24000000 	.word	0x24000000
90023624:	9001f151 	.word	0x9001f151
90023628:	240002c0 	.word	0x240002c0
9002362c:	24024650 	.word	0x24024650
90023630:	9001f14f 	.word	0x9001f14f
90023634:	240002c4 	.word	0x240002c4

90023638 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90023638:	b538      	push	{r3, r4, r5, lr}
9002363a:	4c15      	ldr	r4, [pc, #84]	@ (90023690 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9002363c:	4605      	mov	r5, r0
9002363e:	7823      	ldrb	r3, [r4, #0]
90023640:	f3bf 8f5b 	dmb	ish
90023644:	07da      	lsls	r2, r3, #31
90023646:	d40b      	bmi.n	90023660 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90023648:	4620      	mov	r0, r4
9002364a:	f008 faa8 	bl	9002bb9e <__cxa_guard_acquire>
9002364e:	b138      	cbz	r0, 90023660 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90023650:	4620      	mov	r0, r4
90023652:	f008 fab0 	bl	9002bbb6 <__cxa_guard_release>
90023656:	4a0f      	ldr	r2, [pc, #60]	@ (90023694 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90023658:	490f      	ldr	r1, [pc, #60]	@ (90023698 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9002365a:	4810      	ldr	r0, [pc, #64]	@ (9002369c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9002365c:	f008 fa98 	bl	9002bb90 <__aeabi_atexit>
90023660:	4c0f      	ldr	r4, [pc, #60]	@ (900236a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90023662:	7823      	ldrb	r3, [r4, #0]
90023664:	f3bf 8f5b 	dmb	ish
90023668:	07db      	lsls	r3, r3, #31
9002366a:	d40b      	bmi.n	90023684 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9002366c:	4620      	mov	r0, r4
9002366e:	f008 fa96 	bl	9002bb9e <__cxa_guard_acquire>
90023672:	b138      	cbz	r0, 90023684 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90023674:	4620      	mov	r0, r4
90023676:	f008 fa9e 	bl	9002bbb6 <__cxa_guard_release>
9002367a:	4a06      	ldr	r2, [pc, #24]	@ (90023694 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9002367c:	4909      	ldr	r1, [pc, #36]	@ (900236a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9002367e:	480a      	ldr	r0, [pc, #40]	@ (900236a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90023680:	f008 fa86 	bl	9002bb90 <__aeabi_atexit>
90023684:	4b05      	ldr	r3, [pc, #20]	@ (9002369c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90023686:	66eb      	str	r3, [r5, #108]	@ 0x6c
90023688:	4b07      	ldr	r3, [pc, #28]	@ (900236a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9002368a:	672b      	str	r3, [r5, #112]	@ 0x70
9002368c:	bd38      	pop	{r3, r4, r5, pc}
9002368e:	bf00      	nop
90023690:	24024644 	.word	0x24024644
90023694:	24000000 	.word	0x24000000
90023698:	9001f155 	.word	0x9001f155
9002369c:	240002b8 	.word	0x240002b8
900236a0:	24024648 	.word	0x24024648
900236a4:	9001f153 	.word	0x9001f153
900236a8:	240002bc 	.word	0x240002bc

900236ac <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
900236ac:	b510      	push	{r4, lr}
900236ae:	4604      	mov	r4, r0
900236b0:	f7ff ff88 	bl	900235c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
900236b4:	4620      	mov	r0, r4
900236b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900236ba:	f7ff bfbd 	b.w	90023638 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

900236be <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
900236be:	b510      	push	{r4, lr}
900236c0:	4604      	mov	r4, r0
900236c2:	f7ff fff3 	bl	900236ac <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
900236c6:	4620      	mov	r0, r4
900236c8:	f7ff ff72 	bl	900235b0 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
900236cc:	4620      	mov	r0, r4
900236ce:	f7ff fdf9 	bl	900232c4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
900236d2:	4620      	mov	r0, r4
900236d4:	f7ff fcfa 	bl	900230cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
900236d8:	4620      	mov	r0, r4
900236da:	f7ff fd75 	bl	900231c8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
900236de:	4620      	mov	r0, r4
900236e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900236e4:	f7ff bee0 	b.w	900234a8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

900236e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
900236e8:	b538      	push	{r3, r4, r5, lr}
900236ea:	4c0b      	ldr	r4, [pc, #44]	@ (90023718 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
900236ec:	4605      	mov	r5, r0
900236ee:	7823      	ldrb	r3, [r4, #0]
900236f0:	f3bf 8f5b 	dmb	ish
900236f4:	07db      	lsls	r3, r3, #31
900236f6:	d40b      	bmi.n	90023710 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
900236f8:	4620      	mov	r0, r4
900236fa:	f008 fa50 	bl	9002bb9e <__cxa_guard_acquire>
900236fe:	b138      	cbz	r0, 90023710 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90023700:	4620      	mov	r0, r4
90023702:	f008 fa58 	bl	9002bbb6 <__cxa_guard_release>
90023706:	4a05      	ldr	r2, [pc, #20]	@ (9002371c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90023708:	4905      	ldr	r1, [pc, #20]	@ (90023720 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9002370a:	4806      	ldr	r0, [pc, #24]	@ (90023724 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9002370c:	f008 fa40 	bl	9002bb90 <__aeabi_atexit>
90023710:	4b04      	ldr	r3, [pc, #16]	@ (90023724 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90023712:	67eb      	str	r3, [r5, #124]	@ 0x7c
90023714:	bd38      	pop	{r3, r4, r5, pc}
90023716:	bf00      	nop
90023718:	24024638 	.word	0x24024638
9002371c:	24000000 	.word	0x24000000
90023720:	9001f14d 	.word	0x9001f14d
90023724:	240002b0 	.word	0x240002b0

90023728 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90023728:	b538      	push	{r3, r4, r5, lr}
9002372a:	4c0b      	ldr	r4, [pc, #44]	@ (90023758 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9002372c:	4605      	mov	r5, r0
9002372e:	7823      	ldrb	r3, [r4, #0]
90023730:	f3bf 8f5b 	dmb	ish
90023734:	07db      	lsls	r3, r3, #31
90023736:	d40b      	bmi.n	90023750 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90023738:	4620      	mov	r0, r4
9002373a:	f008 fa30 	bl	9002bb9e <__cxa_guard_acquire>
9002373e:	b138      	cbz	r0, 90023750 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90023740:	4620      	mov	r0, r4
90023742:	f008 fa38 	bl	9002bbb6 <__cxa_guard_release>
90023746:	4a05      	ldr	r2, [pc, #20]	@ (9002375c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90023748:	4905      	ldr	r1, [pc, #20]	@ (90023760 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9002374a:	4806      	ldr	r0, [pc, #24]	@ (90023764 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9002374c:	f008 fa20 	bl	9002bb90 <__aeabi_atexit>
90023750:	4b04      	ldr	r3, [pc, #16]	@ (90023764 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90023752:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90023756:	bd38      	pop	{r3, r4, r5, pc}
90023758:	2402463c 	.word	0x2402463c
9002375c:	24000000 	.word	0x24000000
90023760:	9001f14b 	.word	0x9001f14b
90023764:	240002b4 	.word	0x240002b4

90023768 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90023768:	b570      	push	{r4, r5, r6, lr}
9002376a:	4d0d      	ldr	r5, [pc, #52]	@ (900237a0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9002376c:	4606      	mov	r6, r0
9002376e:	4c0d      	ldr	r4, [pc, #52]	@ (900237a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90023770:	782b      	ldrb	r3, [r5, #0]
90023772:	f3bf 8f5b 	dmb	ish
90023776:	f013 0f01 	tst.w	r3, #1
9002377a:	d10d      	bne.n	90023798 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9002377c:	4628      	mov	r0, r5
9002377e:	f008 fa0e 	bl	9002bb9e <__cxa_guard_acquire>
90023782:	b148      	cbz	r0, 90023798 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90023784:	4b08      	ldr	r3, [pc, #32]	@ (900237a8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90023786:	4628      	mov	r0, r5
90023788:	6023      	str	r3, [r4, #0]
9002378a:	f008 fa14 	bl	9002bbb6 <__cxa_guard_release>
9002378e:	4a07      	ldr	r2, [pc, #28]	@ (900237ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90023790:	4620      	mov	r0, r4
90023792:	4907      	ldr	r1, [pc, #28]	@ (900237b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90023794:	f008 f9fc 	bl	9002bb90 <__aeabi_atexit>
90023798:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
9002379c:	bd70      	pop	{r4, r5, r6, pc}
9002379e:	bf00      	nop
900237a0:	24024640 	.word	0x24024640
900237a4:	240247b8 	.word	0x240247b8
900237a8:	90030700 	.word	0x90030700
900237ac:	24000000 	.word	0x24000000
900237b0:	9001f149 	.word	0x9001f149

900237b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
900237b4:	b510      	push	{r4, lr}
900237b6:	4604      	mov	r4, r0
900237b8:	f7ff ff96 	bl	900236e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
900237bc:	4620      	mov	r0, r4
900237be:	f7ff ffb3 	bl	90023728 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
900237c2:	4620      	mov	r0, r4
900237c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900237c8:	f7ff bfce 	b.w	90023768 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

900237cc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
900237cc:	b570      	push	{r4, r5, r6, lr}
900237ce:	4d0d      	ldr	r5, [pc, #52]	@ (90023804 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
900237d0:	4606      	mov	r6, r0
900237d2:	4c0d      	ldr	r4, [pc, #52]	@ (90023808 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
900237d4:	782b      	ldrb	r3, [r5, #0]
900237d6:	f3bf 8f5b 	dmb	ish
900237da:	f013 0f01 	tst.w	r3, #1
900237de:	d10d      	bne.n	900237fc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
900237e0:	4628      	mov	r0, r5
900237e2:	f008 f9dc 	bl	9002bb9e <__cxa_guard_acquire>
900237e6:	b148      	cbz	r0, 900237fc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
900237e8:	4b08      	ldr	r3, [pc, #32]	@ (9002380c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
900237ea:	4628      	mov	r0, r5
900237ec:	6023      	str	r3, [r4, #0]
900237ee:	f008 f9e2 	bl	9002bbb6 <__cxa_guard_release>
900237f2:	4a07      	ldr	r2, [pc, #28]	@ (90023810 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
900237f4:	4620      	mov	r0, r4
900237f6:	4907      	ldr	r1, [pc, #28]	@ (90023814 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
900237f8:	f008 f9ca 	bl	9002bb90 <__aeabi_atexit>
900237fc:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
90023800:	bd70      	pop	{r4, r5, r6, pc}
90023802:	bf00      	nop
90023804:	24024634 	.word	0x24024634
90023808:	240246b4 	.word	0x240246b4
9002380c:	9003071c 	.word	0x9003071c
90023810:	24000000 	.word	0x24000000
90023814:	9001f147 	.word	0x9001f147

90023818 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90023818:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002381c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90023820:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
90023824:	2d00      	cmp	r5, #0
90023826:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
9002382a:	fb05 4c0e 	mla	ip, r5, lr, r4
9002382e:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
90023832:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
90023836:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
9002383a:	eb02 0a0c 	add.w	sl, r2, ip
9002383e:	8808      	ldrh	r0, [r1, #0]
90023840:	f2c0 80b0 	blt.w	900239a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90023844:	45ab      	cmp	fp, r5
90023846:	f340 80ad 	ble.w	900239a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9002384a:	2c00      	cmp	r4, #0
9002384c:	f2c0 80a8 	blt.w	900239a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90023850:	45a6      	cmp	lr, r4
90023852:	f340 80a5 	ble.w	900239a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90023856:	f812 200c 	ldrb.w	r2, [r2, ip]
9002385a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9002385e:	1c62      	adds	r2, r4, #1
90023860:	f100 80a3 	bmi.w	900239aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90023864:	4596      	cmp	lr, r2
90023866:	f340 80a0 	ble.w	900239aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002386a:	f1b9 0f00 	cmp.w	r9, #0
9002386e:	f000 809c 	beq.w	900239aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90023872:	f89a 2001 	ldrb.w	r2, [sl, #1]
90023876:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9002387a:	3501      	adds	r5, #1
9002387c:	f100 8099 	bmi.w	900239b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90023880:	45ab      	cmp	fp, r5
90023882:	f340 8096 	ble.w	900239b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90023886:	2f00      	cmp	r7, #0
90023888:	f000 8093 	beq.w	900239b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9002388c:	2c00      	cmp	r4, #0
9002388e:	f2c0 808e 	blt.w	900239ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90023892:	45a6      	cmp	lr, r4
90023894:	f340 808b 	ble.w	900239ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90023898:	f81a 200e 	ldrb.w	r2, [sl, lr]
9002389c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
900238a0:	3401      	adds	r4, #1
900238a2:	f100 8089 	bmi.w	900239b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
900238a6:	45a6      	cmp	lr, r4
900238a8:	f340 8086 	ble.w	900239b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
900238ac:	f1b9 0f00 	cmp.w	r9, #0
900238b0:	f000 8082 	beq.w	900239b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
900238b4:	44d6      	add	lr, sl
900238b6:	f89e 2001 	ldrb.w	r2, [lr, #1]
900238ba:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
900238be:	ea4f 4408 	mov.w	r4, r8, lsl #16
900238c2:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
900238c6:	fb19 fe07 	smulbb	lr, r9, r7
900238ca:	f1c7 0210 	rsb	r2, r7, #16
900238ce:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900238d2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900238d6:	eba2 0209 	sub.w	r2, r2, r9
900238da:	ea44 0808 	orr.w	r8, r4, r8
900238de:	ea4f 440c 	mov.w	r4, ip, lsl #16
900238e2:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900238e6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
900238ea:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900238ee:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900238f2:	ea44 0c0c 	orr.w	ip, r4, ip
900238f6:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900238fa:	fb04 f40c 	mul.w	r4, r4, ip
900238fe:	fb02 4808 	mla	r8, r2, r8, r4
90023902:	041a      	lsls	r2, r3, #16
90023904:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023908:	b2b4      	uxth	r4, r6
9002390a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002390e:	43f6      	mvns	r6, r6
90023910:	4313      	orrs	r3, r2
90023912:	042a      	lsls	r2, r5, #16
90023914:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90023918:	b2f6      	uxtb	r6, r6
9002391a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002391e:	fb0e 8303 	mla	r3, lr, r3, r8
90023922:	432a      	orrs	r2, r5
90023924:	fb07 3202 	mla	r2, r7, r2, r3
90023928:	10c7      	asrs	r7, r0, #3
9002392a:	0d53      	lsrs	r3, r2, #21
9002392c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90023930:	0952      	lsrs	r2, r2, #5
90023932:	fb17 f706 	smulbb	r7, r7, r6
90023936:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002393a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002393e:	431a      	orrs	r2, r3
90023940:	b293      	uxth	r3, r2
90023942:	1202      	asrs	r2, r0, #8
90023944:	121d      	asrs	r5, r3, #8
90023946:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9002394a:	00c0      	lsls	r0, r0, #3
9002394c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023950:	fb12 f206 	smulbb	r2, r2, r6
90023954:	b2c0      	uxtb	r0, r0
90023956:	fb05 2504 	mla	r5, r5, r4, r2
9002395a:	10da      	asrs	r2, r3, #3
9002395c:	fb10 f006 	smulbb	r0, r0, r6
90023960:	00db      	lsls	r3, r3, #3
90023962:	b2ad      	uxth	r5, r5
90023964:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023968:	b2db      	uxtb	r3, r3
9002396a:	fb02 7204 	mla	r2, r2, r4, r7
9002396e:	fb03 0004 	mla	r0, r3, r4, r0
90023972:	1c6b      	adds	r3, r5, #1
90023974:	b292      	uxth	r2, r2
90023976:	b280      	uxth	r0, r0
90023978:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002397c:	1c43      	adds	r3, r0, #1
9002397e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023982:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023986:	1c50      	adds	r0, r2, #1
90023988:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002398c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023990:	0952      	lsrs	r2, r2, #5
90023992:	432b      	orrs	r3, r5
90023994:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023998:	4313      	orrs	r3, r2
9002399a:	800b      	strh	r3, [r1, #0]
9002399c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900239a0:	4680      	mov	r8, r0
900239a2:	e75c      	b.n	9002385e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
900239a4:	4684      	mov	ip, r0
900239a6:	4680      	mov	r8, r0
900239a8:	e767      	b.n	9002387a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
900239aa:	4684      	mov	ip, r0
900239ac:	e765      	b.n	9002387a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
900239ae:	4605      	mov	r5, r0
900239b0:	e776      	b.n	900238a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
900239b2:	4603      	mov	r3, r0
900239b4:	4605      	mov	r5, r0
900239b6:	e782      	b.n	900238be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
900239b8:	4603      	mov	r3, r0
900239ba:	e780      	b.n	900238be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

900239bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900239bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900239c0:	b099      	sub	sp, #100	@ 0x64
900239c2:	9215      	str	r2, [sp, #84]	@ 0x54
900239c4:	9309      	str	r3, [sp, #36]	@ 0x24
900239c6:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
900239c8:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
900239cc:	9016      	str	r0, [sp, #88]	@ 0x58
900239ce:	930d      	str	r3, [sp, #52]	@ 0x34
900239d0:	6850      	ldr	r0, [r2, #4]
900239d2:	910c      	str	r1, [sp, #48]	@ 0x30
900239d4:	6812      	ldr	r2, [r2, #0]
900239d6:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
900239da:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
900239de:	fb00 1303 	mla	r3, r0, r3, r1
900239e2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
900239e6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900239e8:	681b      	ldr	r3, [r3, #0]
900239ea:	930b      	str	r3, [sp, #44]	@ 0x2c
900239ec:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900239ee:	685e      	ldr	r6, [r3, #4]
900239f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900239f2:	3604      	adds	r6, #4
900239f4:	43db      	mvns	r3, r3
900239f6:	b2db      	uxtb	r3, r3
900239f8:	930a      	str	r3, [sp, #40]	@ 0x28
900239fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900239fc:	2b00      	cmp	r3, #0
900239fe:	dc03      	bgt.n	90023a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90023a00:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90023a02:	2b00      	cmp	r3, #0
90023a04:	f340 8225 	ble.w	90023e52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90023a08:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023a0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023a0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023a12:	1e48      	subs	r0, r1, #1
90023a14:	1e57      	subs	r7, r2, #1
90023a16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023a18:	2b00      	cmp	r3, #0
90023a1a:	f340 80e3 	ble.w	90023be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90023a1e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90023a22:	ea4f 4325 	mov.w	r3, r5, asr #16
90023a26:	d406      	bmi.n	90023a36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023a28:	4584      	cmp	ip, r0
90023a2a:	da04      	bge.n	90023a36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023a2c:	2b00      	cmp	r3, #0
90023a2e:	db02      	blt.n	90023a36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90023a30:	42bb      	cmp	r3, r7
90023a32:	f2c0 80d8 	blt.w	90023be6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90023a36:	f11c 0c01 	adds.w	ip, ip, #1
90023a3a:	f100 80c9 	bmi.w	90023bd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023a3e:	4561      	cmp	r1, ip
90023a40:	f2c0 80c6 	blt.w	90023bd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023a44:	3301      	adds	r3, #1
90023a46:	f100 80c3 	bmi.w	90023bd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023a4a:	429a      	cmp	r2, r3
90023a4c:	f2c0 80c0 	blt.w	90023bd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023a50:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90023a54:	4647      	mov	r7, r8
90023a56:	f1bb 0f00 	cmp.w	fp, #0
90023a5a:	f340 80e3 	ble.w	90023c24 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90023a5e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90023a60:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023a64:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023a66:	f3ca 3003 	ubfx	r0, sl, #12, #4
90023a6a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023a6e:	ea5f 422a 	movs.w	r2, sl, asr #16
90023a72:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023a76:	689b      	ldr	r3, [r3, #8]
90023a78:	f100 8121 	bmi.w	90023cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023a7c:	f103 39ff 	add.w	r9, r3, #4294967295
90023a80:	454a      	cmp	r2, r9
90023a82:	f280 811c 	bge.w	90023cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023a86:	f1bc 0f00 	cmp.w	ip, #0
90023a8a:	f2c0 8118 	blt.w	90023cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023a8e:	f10e 39ff 	add.w	r9, lr, #4294967295
90023a92:	45cc      	cmp	ip, r9
90023a94:	f280 8113 	bge.w	90023cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023a98:	b21b      	sxth	r3, r3
90023a9a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023a9c:	fb0c 2203 	mla	r2, ip, r3, r2
90023aa0:	eb04 0902 	add.w	r9, r4, r2
90023aa4:	5ca2      	ldrb	r2, [r4, r2]
90023aa6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90023aaa:	2800      	cmp	r0, #0
90023aac:	f000 80fe 	beq.w	90023cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90023ab0:	f899 2001 	ldrb.w	r2, [r9, #1]
90023ab4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90023ab8:	9211      	str	r2, [sp, #68]	@ 0x44
90023aba:	b151      	cbz	r1, 90023ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023abc:	eb09 0203 	add.w	r2, r9, r3
90023ac0:	f819 3003 	ldrb.w	r3, [r9, r3]
90023ac4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023ac8:	930f      	str	r3, [sp, #60]	@ 0x3c
90023aca:	7853      	ldrb	r3, [r2, #1]
90023acc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023ad0:	9312      	str	r3, [sp, #72]	@ 0x48
90023ad2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023ad4:	fb10 f201 	smulbb	r2, r0, r1
90023ad8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023ada:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90023ade:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023ae2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90023ae6:	10d2      	asrs	r2, r2, #3
90023ae8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023aec:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90023af0:	ea4c 0c03 	orr.w	ip, ip, r3
90023af4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90023af6:	041b      	lsls	r3, r3, #16
90023af8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023afc:	4323      	orrs	r3, r4
90023afe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023b00:	4353      	muls	r3, r2
90023b02:	fb09 330c 	mla	r3, r9, ip, r3
90023b06:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90023b0a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023b0e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023b12:	ea4c 0e0e 	orr.w	lr, ip, lr
90023b16:	f1c1 0c10 	rsb	ip, r1, #16
90023b1a:	ebac 0c00 	sub.w	ip, ip, r0
90023b1e:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90023b22:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90023b26:	fb0c 3c0e 	mla	ip, ip, lr, r3
90023b2a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023b2c:	0418      	lsls	r0, r3, #16
90023b2e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023b32:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90023b36:	4318      	orrs	r0, r3
90023b38:	fb02 c200 	mla	r2, r2, r0, ip
90023b3c:	8838      	ldrh	r0, [r7, #0]
90023b3e:	0d53      	lsrs	r3, r2, #21
90023b40:	0952      	lsrs	r2, r2, #5
90023b42:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023b46:	1201      	asrs	r1, r0, #8
90023b48:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023b4c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90023b50:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023b54:	00c0      	lsls	r0, r0, #3
90023b56:	431a      	orrs	r2, r3
90023b58:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
90023b5c:	fb11 f104 	smulbb	r1, r1, r4
90023b60:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90023b64:	b292      	uxth	r2, r2
90023b66:	fb1e fe04 	smulbb	lr, lr, r4
90023b6a:	b2c0      	uxtb	r0, r0
90023b6c:	ea4f 2c22 	mov.w	ip, r2, asr #8
90023b70:	fb10 f004 	smulbb	r0, r0, r4
90023b74:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90023b78:	fb0c 1c03 	mla	ip, ip, r3, r1
90023b7c:	10d1      	asrs	r1, r2, #3
90023b7e:	00d2      	lsls	r2, r2, #3
90023b80:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023b84:	fa1f fc8c 	uxth.w	ip, ip
90023b88:	b2d2      	uxtb	r2, r2
90023b8a:	fb01 e103 	mla	r1, r1, r3, lr
90023b8e:	fb02 0303 	mla	r3, r2, r3, r0
90023b92:	b289      	uxth	r1, r1
90023b94:	b29a      	uxth	r2, r3
90023b96:	f10c 0301 	add.w	r3, ip, #1
90023b9a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023b9e:	1c53      	adds	r3, r2, #1
90023ba0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023ba4:	1c4a      	adds	r2, r1, #1
90023ba6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90023baa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023bae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023bb2:	0949      	lsrs	r1, r1, #5
90023bb4:	ea43 030c 	orr.w	r3, r3, ip
90023bb8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023bbc:	430b      	orrs	r3, r1
90023bbe:	803b      	strh	r3, [r7, #0]
90023bc0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023bc2:	3702      	adds	r7, #2
90023bc4:	f10b 3bff 	add.w	fp, fp, #4294967295
90023bc8:	449a      	add	sl, r3
90023bca:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023bcc:	441d      	add	r5, r3
90023bce:	e742      	b.n	90023a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90023bd0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023bd2:	f108 0802 	add.w	r8, r8, #2
90023bd6:	449a      	add	sl, r3
90023bd8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023bda:	441d      	add	r5, r3
90023bdc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023bde:	3b01      	subs	r3, #1
90023be0:	9309      	str	r3, [sp, #36]	@ 0x24
90023be2:	e718      	b.n	90023a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90023be4:	d023      	beq.n	90023c2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90023be6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023be8:	9825      	ldr	r0, [sp, #148]	@ 0x94
90023bea:	3b01      	subs	r3, #1
90023bec:	fb00 a003 	mla	r0, r0, r3, sl
90023bf0:	1400      	asrs	r0, r0, #16
90023bf2:	f53f af2d 	bmi.w	90023a50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023bf6:	3901      	subs	r1, #1
90023bf8:	4288      	cmp	r0, r1
90023bfa:	f6bf af29 	bge.w	90023a50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023bfe:	9926      	ldr	r1, [sp, #152]	@ 0x98
90023c00:	fb01 5303 	mla	r3, r1, r3, r5
90023c04:	141b      	asrs	r3, r3, #16
90023c06:	f53f af23 	bmi.w	90023a50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023c0a:	3a01      	subs	r2, #1
90023c0c:	4293      	cmp	r3, r2
90023c0e:	f6bf af1f 	bge.w	90023a50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023c12:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90023c16:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
90023c1a:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
90023c1e:	f1be 0f00 	cmp.w	lr, #0
90023c22:	dc6c      	bgt.n	90023cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023c24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023c26:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023c2a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90023c2e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023c30:	2b00      	cmp	r3, #0
90023c32:	f340 810e 	ble.w	90023e52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90023c36:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023c3a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023c3c:	ee30 0a04 	vadd.f32	s0, s0, s8
90023c40:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023c44:	eef0 6a62 	vmov.f32	s13, s5
90023c48:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023c4c:	ee31 1a05 	vadd.f32	s2, s2, s10
90023c50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023c54:	ee16 aa90 	vmov	sl, s13
90023c58:	eef0 6a43 	vmov.f32	s13, s6
90023c5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023c60:	ee16 5a90 	vmov	r5, s13
90023c64:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023c68:	ee61 7a27 	vmul.f32	s15, s2, s15
90023c6c:	ee77 2a62 	vsub.f32	s5, s14, s5
90023c70:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023c74:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023c78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023c7c:	ee12 2a90 	vmov	r2, s5
90023c80:	eef0 2a47 	vmov.f32	s5, s14
90023c84:	fb92 f3f3 	sdiv	r3, r2, r3
90023c88:	ee13 2a10 	vmov	r2, s6
90023c8c:	9325      	str	r3, [sp, #148]	@ 0x94
90023c8e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023c90:	eeb0 3a67 	vmov.f32	s6, s15
90023c94:	fb92 f3f3 	sdiv	r3, r2, r3
90023c98:	9326      	str	r3, [sp, #152]	@ 0x98
90023c9a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023c9c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90023c9e:	3b01      	subs	r3, #1
90023ca0:	930c      	str	r3, [sp, #48]	@ 0x30
90023ca2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023ca4:	bf08      	it	eq
90023ca6:	4613      	moveq	r3, r2
90023ca8:	9309      	str	r3, [sp, #36]	@ 0x24
90023caa:	e6a6      	b.n	900239fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023cac:	2900      	cmp	r1, #0
90023cae:	f43f af10 	beq.w	90023ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023cb2:	f819 3003 	ldrb.w	r3, [r9, r3]
90023cb6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023cba:	930f      	str	r3, [sp, #60]	@ 0x3c
90023cbc:	e709      	b.n	90023ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023cbe:	f112 0901 	adds.w	r9, r2, #1
90023cc2:	f53f af7d 	bmi.w	90023bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023cc6:	454b      	cmp	r3, r9
90023cc8:	f6ff af7a 	blt.w	90023bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023ccc:	f11c 0901 	adds.w	r9, ip, #1
90023cd0:	f53f af76 	bmi.w	90023bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023cd4:	45ce      	cmp	lr, r9
90023cd6:	f6ff af73 	blt.w	90023bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023cda:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023cdc:	b21b      	sxth	r3, r3
90023cde:	9202      	str	r2, [sp, #8]
90023ce0:	fa0f f28e 	sxth.w	r2, lr
90023ce4:	9300      	str	r3, [sp, #0]
90023ce6:	4633      	mov	r3, r6
90023ce8:	9201      	str	r2, [sp, #4]
90023cea:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023cec:	e9cd 1405 	strd	r1, r4, [sp, #20]
90023cf0:	e9cd c003 	strd	ip, r0, [sp, #12]
90023cf4:	4639      	mov	r1, r7
90023cf6:	9816      	ldr	r0, [sp, #88]	@ 0x58
90023cf8:	f7ff fd8e 	bl	90023818 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90023cfc:	e760      	b.n	90023bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023cfe:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023d00:	ea4f 422a 	mov.w	r2, sl, asr #16
90023d04:	1429      	asrs	r1, r5, #16
90023d06:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023d08:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90023d0c:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90023d10:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023d14:	fb03 2101 	mla	r1, r3, r1, r2
90023d18:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023d1a:	440a      	add	r2, r1
90023d1c:	5c61      	ldrb	r1, [r4, r1]
90023d1e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90023d22:	f1bc 0f00 	cmp.w	ip, #0
90023d26:	f000 808c 	beq.w	90023e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
90023d2a:	7857      	ldrb	r7, [r2, #1]
90023d2c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90023d30:	9413      	str	r4, [sp, #76]	@ 0x4c
90023d32:	b140      	cbz	r0, 90023d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023d34:	18d7      	adds	r7, r2, r3
90023d36:	5cd3      	ldrb	r3, [r2, r3]
90023d38:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023d3c:	9310      	str	r3, [sp, #64]	@ 0x40
90023d3e:	787b      	ldrb	r3, [r7, #1]
90023d40:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023d44:	9314      	str	r3, [sp, #80]	@ 0x50
90023d46:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90023d48:	fb1c f200 	smulbb	r2, ip, r0
90023d4c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023d4e:	f10e 3eff 	add.w	lr, lr, #4294967295
90023d52:	041f      	lsls	r7, r3, #16
90023d54:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023d58:	10d2      	asrs	r2, r2, #3
90023d5a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
90023d5e:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
90023d62:	431f      	orrs	r7, r3
90023d64:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90023d68:	9317      	str	r3, [sp, #92]	@ 0x5c
90023d6a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90023d6c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023d6e:	041b      	lsls	r3, r3, #16
90023d70:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023d74:	ea43 030b 	orr.w	r3, r3, fp
90023d78:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023d7c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023d80:	4353      	muls	r3, r2
90023d82:	fb04 3707 	mla	r7, r4, r7, r3
90023d86:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90023d8a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023d8c:	ea43 0b01 	orr.w	fp, r3, r1
90023d90:	f1c0 0110 	rsb	r1, r0, #16
90023d94:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023d96:	eba1 0c0c 	sub.w	ip, r1, ip
90023d9a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90023d9e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90023da2:	fb0c 770b 	mla	r7, ip, fp, r7
90023da6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90023daa:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
90023dae:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023db2:	ea4c 0c0b 	orr.w	ip, ip, fp
90023db6:	fb02 770c 	mla	r7, r2, ip, r7
90023dba:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90023dbc:	0d79      	lsrs	r1, r7, #21
90023dbe:	8812      	ldrh	r2, [r2, #0]
90023dc0:	097f      	lsrs	r7, r7, #5
90023dc2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023dc6:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90023dca:	430f      	orrs	r7, r1
90023dcc:	1211      	asrs	r1, r2, #8
90023dce:	b2bb      	uxth	r3, r7
90023dd0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023dd4:	10d7      	asrs	r7, r2, #3
90023dd6:	fb11 f104 	smulbb	r1, r1, r4
90023dda:	1218      	asrs	r0, r3, #8
90023ddc:	00d2      	lsls	r2, r2, #3
90023dde:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90023de2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023de6:	fb17 f704 	smulbb	r7, r7, r4
90023dea:	b2d2      	uxtb	r2, r2
90023dec:	fb00 1009 	mla	r0, r0, r9, r1
90023df0:	10d9      	asrs	r1, r3, #3
90023df2:	fb12 f204 	smulbb	r2, r2, r4
90023df6:	00db      	lsls	r3, r3, #3
90023df8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023dfc:	b280      	uxth	r0, r0
90023dfe:	b2db      	uxtb	r3, r3
90023e00:	fb01 7109 	mla	r1, r1, r9, r7
90023e04:	fb03 2309 	mla	r3, r3, r9, r2
90023e08:	1c42      	adds	r2, r0, #1
90023e0a:	b289      	uxth	r1, r1
90023e0c:	b29b      	uxth	r3, r3
90023e0e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023e12:	1c4f      	adds	r7, r1, #1
90023e14:	1c5a      	adds	r2, r3, #1
90023e16:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90023e1a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90023e1e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023e22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023e24:	0949      	lsrs	r1, r1, #5
90023e26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023e2a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023e2e:	4310      	orrs	r0, r2
90023e30:	4308      	orrs	r0, r1
90023e32:	f823 0b02 	strh.w	r0, [r3], #2
90023e36:	930e      	str	r3, [sp, #56]	@ 0x38
90023e38:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023e3a:	449a      	add	sl, r3
90023e3c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023e3e:	441d      	add	r5, r3
90023e40:	e6ed      	b.n	90023c1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90023e42:	2800      	cmp	r0, #0
90023e44:	f43f af7f 	beq.w	90023d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023e48:	5cd3      	ldrb	r3, [r2, r3]
90023e4a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023e4e:	9310      	str	r3, [sp, #64]	@ 0x40
90023e50:	e779      	b.n	90023d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023e52:	b019      	add	sp, #100	@ 0x64
90023e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023e58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90023e58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023e5c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
90023e60:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90023e64:	f1b8 0f00 	cmp.w	r8, #0
90023e68:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
90023e6c:	fb08 470e 	mla	r7, r8, lr, r4
90023e70:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90023e74:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90023e78:	eb02 0907 	add.w	r9, r2, r7
90023e7c:	8808      	ldrh	r0, [r1, #0]
90023e7e:	db67      	blt.n	90023f50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90023e80:	45c2      	cmp	sl, r8
90023e82:	dd65      	ble.n	90023f50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90023e84:	2c00      	cmp	r4, #0
90023e86:	db61      	blt.n	90023f4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90023e88:	45a6      	cmp	lr, r4
90023e8a:	dd5f      	ble.n	90023f4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90023e8c:	5dd2      	ldrb	r2, [r2, r7]
90023e8e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90023e92:	1c62      	adds	r2, r4, #1
90023e94:	d45f      	bmi.n	90023f56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90023e96:	4596      	cmp	lr, r2
90023e98:	dd5d      	ble.n	90023f56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90023e9a:	2d00      	cmp	r5, #0
90023e9c:	d05b      	beq.n	90023f56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90023e9e:	f899 2001 	ldrb.w	r2, [r9, #1]
90023ea2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90023ea6:	f118 0801 	adds.w	r8, r8, #1
90023eaa:	d458      	bmi.n	90023f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023eac:	45c2      	cmp	sl, r8
90023eae:	dd56      	ble.n	90023f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023eb0:	2e00      	cmp	r6, #0
90023eb2:	d054      	beq.n	90023f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023eb4:	2c00      	cmp	r4, #0
90023eb6:	db50      	blt.n	90023f5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90023eb8:	45a6      	cmp	lr, r4
90023eba:	dd4e      	ble.n	90023f5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90023ebc:	f819 200e 	ldrb.w	r2, [r9, lr]
90023ec0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90023ec4:	3401      	adds	r4, #1
90023ec6:	d407      	bmi.n	90023ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90023ec8:	45a6      	cmp	lr, r4
90023eca:	dd05      	ble.n	90023ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90023ecc:	b125      	cbz	r5, 90023ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90023ece:	44ce      	add	lr, r9
90023ed0:	f89e 0001 	ldrb.w	r0, [lr, #1]
90023ed4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90023ed8:	fb15 f406 	smulbb	r4, r5, r6
90023edc:	ea4f 430c 	mov.w	r3, ip, lsl #16
90023ee0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90023ee4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90023ee8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023eec:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90023ef0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90023ef4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90023ef8:	ea43 0c0c 	orr.w	ip, r3, ip
90023efc:	f1c6 0310 	rsb	r3, r6, #16
90023f00:	ea4e 0707 	orr.w	r7, lr, r7
90023f04:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90023f08:	1b5b      	subs	r3, r3, r5
90023f0a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90023f0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90023f12:	437d      	muls	r5, r7
90023f14:	fb03 5c0c 	mla	ip, r3, ip, r5
90023f18:	0403      	lsls	r3, r0, #16
90023f1a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023f1e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023f22:	4318      	orrs	r0, r3
90023f24:	0413      	lsls	r3, r2, #16
90023f26:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023f2a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023f2e:	fb04 c000 	mla	r0, r4, r0, ip
90023f32:	4313      	orrs	r3, r2
90023f34:	fb06 0003 	mla	r0, r6, r3, r0
90023f38:	0d43      	lsrs	r3, r0, #21
90023f3a:	0940      	lsrs	r0, r0, #5
90023f3c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023f40:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023f44:	4318      	orrs	r0, r3
90023f46:	8008      	strh	r0, [r1, #0]
90023f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90023f4c:	4684      	mov	ip, r0
90023f4e:	e7a0      	b.n	90023e92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90023f50:	4607      	mov	r7, r0
90023f52:	4684      	mov	ip, r0
90023f54:	e7a7      	b.n	90023ea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90023f56:	4607      	mov	r7, r0
90023f58:	e7a5      	b.n	90023ea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90023f5a:	4602      	mov	r2, r0
90023f5c:	e7b2      	b.n	90023ec4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90023f5e:	4602      	mov	r2, r0
90023f60:	e7ba      	b.n	90023ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90023f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023f62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023f66:	b093      	sub	sp, #76	@ 0x4c
90023f68:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90023f6c:	920f      	str	r2, [sp, #60]	@ 0x3c
90023f6e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90023f70:	9010      	str	r0, [sp, #64]	@ 0x40
90023f72:	9108      	str	r1, [sp, #32]
90023f74:	6850      	ldr	r0, [r2, #4]
90023f76:	9306      	str	r3, [sp, #24]
90023f78:	6812      	ldr	r2, [r2, #0]
90023f7a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90023f7e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90023f82:	fb00 1303 	mla	r3, r0, r3, r1
90023f86:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90023f8a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023f8c:	681b      	ldr	r3, [r3, #0]
90023f8e:	9307      	str	r3, [sp, #28]
90023f90:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023f92:	685f      	ldr	r7, [r3, #4]
90023f94:	3704      	adds	r7, #4
90023f96:	9b08      	ldr	r3, [sp, #32]
90023f98:	2b00      	cmp	r3, #0
90023f9a:	dc03      	bgt.n	90023fa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90023f9c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023f9e:	2b00      	cmp	r3, #0
90023fa0:	f340 81b2 	ble.w	90024308 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90023fa4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023fa6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023faa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023fae:	1e48      	subs	r0, r1, #1
90023fb0:	f102 3cff 	add.w	ip, r2, #4294967295
90023fb4:	9b06      	ldr	r3, [sp, #24]
90023fb6:	2b00      	cmp	r3, #0
90023fb8:	f340 80a9 	ble.w	9002410e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023fbc:	ea5f 4e24 	movs.w	lr, r4, asr #16
90023fc0:	ea4f 4326 	mov.w	r3, r6, asr #16
90023fc4:	d406      	bmi.n	90023fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90023fc6:	4586      	cmp	lr, r0
90023fc8:	da04      	bge.n	90023fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90023fca:	2b00      	cmp	r3, #0
90023fcc:	db02      	blt.n	90023fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90023fce:	4563      	cmp	r3, ip
90023fd0:	f2c0 809e 	blt.w	90024110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90023fd4:	f11e 0e01 	adds.w	lr, lr, #1
90023fd8:	f100 808f 	bmi.w	900240fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023fdc:	4571      	cmp	r1, lr
90023fde:	f2c0 808c 	blt.w	900240fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023fe2:	3301      	adds	r3, #1
90023fe4:	f100 8089 	bmi.w	900240fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023fe8:	429a      	cmp	r2, r3
90023fea:	f2c0 8086 	blt.w	900240fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023fee:	f8dd b018 	ldr.w	fp, [sp, #24]
90023ff2:	46c8      	mov	r8, r9
90023ff4:	f1bb 0f00 	cmp.w	fp, #0
90023ff8:	f340 80a6 	ble.w	90024148 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90023ffc:	9a24      	ldr	r2, [sp, #144]	@ 0x90
90023ffe:	ea4f 4c26 	mov.w	ip, r6, asr #16
90024002:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024004:	f3c4 3003 	ubfx	r0, r4, #12, #4
90024008:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002400c:	1422      	asrs	r2, r4, #16
9002400e:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024012:	689b      	ldr	r3, [r3, #8]
90024014:	f100 80e3 	bmi.w	900241de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90024018:	f103 3aff 	add.w	sl, r3, #4294967295
9002401c:	4552      	cmp	r2, sl
9002401e:	f280 80de 	bge.w	900241de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90024022:	f1bc 0f00 	cmp.w	ip, #0
90024026:	f2c0 80da 	blt.w	900241de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9002402a:	f10e 3aff 	add.w	sl, lr, #4294967295
9002402e:	45d4      	cmp	ip, sl
90024030:	f280 80d5 	bge.w	900241de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90024034:	b21b      	sxth	r3, r3
90024036:	9d07      	ldr	r5, [sp, #28]
90024038:	fb0c 2203 	mla	r2, ip, r3, r2
9002403c:	eb05 0a02 	add.w	sl, r5, r2
90024040:	5caa      	ldrb	r2, [r5, r2]
90024042:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
90024046:	2800      	cmp	r0, #0
90024048:	f000 80c0 	beq.w	900241cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9002404c:	f89a 2001 	ldrb.w	r2, [sl, #1]
90024050:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90024054:	920b      	str	r2, [sp, #44]	@ 0x2c
90024056:	b151      	cbz	r1, 9002406e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90024058:	eb0a 0203 	add.w	r2, sl, r3
9002405c:	f81a 3003 	ldrb.w	r3, [sl, r3]
90024060:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90024064:	9309      	str	r3, [sp, #36]	@ 0x24
90024066:	7853      	ldrb	r3, [r2, #1]
90024068:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002406c:	930c      	str	r3, [sp, #48]	@ 0x30
9002406e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024070:	fb10 f201 	smulbb	r2, r0, r1
90024074:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024076:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002407a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002407e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90024082:	10d2      	asrs	r2, r2, #3
90024084:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024088:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9002408c:	ea4c 0c03 	orr.w	ip, ip, r3
90024090:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024092:	041b      	lsls	r3, r3, #16
90024094:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90024098:	432b      	orrs	r3, r5
9002409a:	4353      	muls	r3, r2
9002409c:	fb0a 330c 	mla	r3, sl, ip, r3
900240a0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900240a4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900240a8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900240ac:	ea4c 0e0e 	orr.w	lr, ip, lr
900240b0:	f1c1 0c10 	rsb	ip, r1, #16
900240b4:	ebac 0c00 	sub.w	ip, ip, r0
900240b8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900240bc:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900240c0:	fb0c 3c0e 	mla	ip, ip, lr, r3
900240c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900240c6:	0418      	lsls	r0, r3, #16
900240c8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900240cc:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900240d0:	4318      	orrs	r0, r3
900240d2:	fb02 c200 	mla	r2, r2, r0, ip
900240d6:	0d53      	lsrs	r3, r2, #21
900240d8:	0952      	lsrs	r2, r2, #5
900240da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900240de:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900240e2:	431a      	orrs	r2, r3
900240e4:	f8a8 2000 	strh.w	r2, [r8]
900240e8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900240ea:	f108 0802 	add.w	r8, r8, #2
900240ee:	f10b 3bff 	add.w	fp, fp, #4294967295
900240f2:	441c      	add	r4, r3
900240f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900240f6:	441e      	add	r6, r3
900240f8:	e77c      	b.n	90023ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900240fa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900240fc:	f109 0902 	add.w	r9, r9, #2
90024100:	441c      	add	r4, r3
90024102:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024104:	441e      	add	r6, r3
90024106:	9b06      	ldr	r3, [sp, #24]
90024108:	3b01      	subs	r3, #1
9002410a:	9306      	str	r3, [sp, #24]
9002410c:	e752      	b.n	90023fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002410e:	d020      	beq.n	90024152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90024110:	9b06      	ldr	r3, [sp, #24]
90024112:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90024114:	3b01      	subs	r3, #1
90024116:	fb00 4003 	mla	r0, r0, r3, r4
9002411a:	1400      	asrs	r0, r0, #16
9002411c:	f53f af67 	bmi.w	90023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90024120:	3901      	subs	r1, #1
90024122:	4288      	cmp	r0, r1
90024124:	f6bf af63 	bge.w	90023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90024128:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002412a:	fb01 6303 	mla	r3, r1, r3, r6
9002412e:	141b      	asrs	r3, r3, #16
90024130:	f53f af5d 	bmi.w	90023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90024134:	3a01      	subs	r2, #1
90024136:	4293      	cmp	r3, r2
90024138:	f6bf af59 	bge.w	90023fee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002413c:	f8dd 8018 	ldr.w	r8, [sp, #24]
90024140:	46ca      	mov	sl, r9
90024142:	f1b8 0f00 	cmp.w	r8, #0
90024146:	dc67      	bgt.n	90024218 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90024148:	9b06      	ldr	r3, [sp, #24]
9002414a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002414e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90024152:	9b08      	ldr	r3, [sp, #32]
90024154:	2b00      	cmp	r3, #0
90024156:	f340 80d7 	ble.w	90024308 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002415a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002415e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024160:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024164:	eeb0 6a62 	vmov.f32	s12, s5
90024168:	eec6 7a80 	vdiv.f32	s15, s13, s0
9002416c:	ee31 1a05 	vadd.f32	s2, s2, s10
90024170:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90024174:	ee16 4a10 	vmov	r4, s12
90024178:	eeb0 6a43 	vmov.f32	s12, s6
9002417c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90024180:	ee16 6a10 	vmov	r6, s12
90024184:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024188:	ee61 7a27 	vmul.f32	s15, s2, s15
9002418c:	ee77 2a62 	vsub.f32	s5, s14, s5
90024190:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024194:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024198:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002419c:	ee12 2a90 	vmov	r2, s5
900241a0:	eef0 2a47 	vmov.f32	s5, s14
900241a4:	fb92 f3f3 	sdiv	r3, r2, r3
900241a8:	ee13 2a10 	vmov	r2, s6
900241ac:	931f      	str	r3, [sp, #124]	@ 0x7c
900241ae:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900241b0:	eeb0 3a67 	vmov.f32	s6, s15
900241b4:	fb92 f3f3 	sdiv	r3, r2, r3
900241b8:	9320      	str	r3, [sp, #128]	@ 0x80
900241ba:	9b08      	ldr	r3, [sp, #32]
900241bc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900241be:	3b01      	subs	r3, #1
900241c0:	9308      	str	r3, [sp, #32]
900241c2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900241c4:	bf08      	it	eq
900241c6:	4613      	moveq	r3, r2
900241c8:	9306      	str	r3, [sp, #24]
900241ca:	e6e4      	b.n	90023f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
900241cc:	2900      	cmp	r1, #0
900241ce:	f43f af4e 	beq.w	9002406e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900241d2:	f81a 3003 	ldrb.w	r3, [sl, r3]
900241d6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900241da:	9309      	str	r3, [sp, #36]	@ 0x24
900241dc:	e747      	b.n	9002406e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
900241de:	f112 0a01 	adds.w	sl, r2, #1
900241e2:	d481      	bmi.n	900240e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900241e4:	4553      	cmp	r3, sl
900241e6:	f6ff af7f 	blt.w	900240e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900241ea:	f11c 0a01 	adds.w	sl, ip, #1
900241ee:	f53f af7b 	bmi.w	900240e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900241f2:	45d6      	cmp	lr, sl
900241f4:	f6ff af78 	blt.w	900240e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900241f8:	b21b      	sxth	r3, r3
900241fa:	e9cd 2c02 	strd	r2, ip, [sp, #8]
900241fe:	fa0f f28e 	sxth.w	r2, lr
90024202:	9300      	str	r3, [sp, #0]
90024204:	463b      	mov	r3, r7
90024206:	9201      	str	r2, [sp, #4]
90024208:	9a07      	ldr	r2, [sp, #28]
9002420a:	e9cd 0104 	strd	r0, r1, [sp, #16]
9002420e:	4641      	mov	r1, r8
90024210:	9810      	ldr	r0, [sp, #64]	@ 0x40
90024212:	f7ff fe21 	bl	90023e58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90024216:	e767      	b.n	900240e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90024218:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002421a:	1422      	asrs	r2, r4, #16
9002421c:	1431      	asrs	r1, r6, #16
9002421e:	9d07      	ldr	r5, [sp, #28]
90024220:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90024224:	f3c4 3e03 	ubfx	lr, r4, #12, #4
90024228:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002422c:	fb03 2101 	mla	r1, r3, r1, r2
90024230:	9a07      	ldr	r2, [sp, #28]
90024232:	440a      	add	r2, r1
90024234:	5c69      	ldrb	r1, [r5, r1]
90024236:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9002423a:	f1be 0f00 	cmp.w	lr, #0
9002423e:	d05c      	beq.n	900242fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90024240:	f892 c001 	ldrb.w	ip, [r2, #1]
90024244:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90024248:	950d      	str	r5, [sp, #52]	@ 0x34
9002424a:	b150      	cbz	r0, 90024262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002424c:	eb02 0c03 	add.w	ip, r2, r3
90024250:	5cd3      	ldrb	r3, [r2, r3]
90024252:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90024256:	930a      	str	r3, [sp, #40]	@ 0x28
90024258:	f89c 3001 	ldrb.w	r3, [ip, #1]
9002425c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90024260:	930e      	str	r3, [sp, #56]	@ 0x38
90024262:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90024264:	fb1e f200 	smulbb	r2, lr, r0
90024268:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002426a:	f108 38ff 	add.w	r8, r8, #4294967295
9002426e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90024272:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90024276:	10d2      	asrs	r2, r2, #3
90024278:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
9002427c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024280:	ea4c 0c03 	orr.w	ip, ip, r3
90024284:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90024288:	9311      	str	r3, [sp, #68]	@ 0x44
9002428a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002428c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002428e:	041b      	lsls	r3, r3, #16
90024290:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90024294:	ea43 030b 	orr.w	r3, r3, fp
90024298:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002429c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900242a0:	4353      	muls	r3, r2
900242a2:	fb05 3c0c 	mla	ip, r5, ip, r3
900242a6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
900242aa:	ea43 0b01 	orr.w	fp, r3, r1
900242ae:	f1c0 0110 	rsb	r1, r0, #16
900242b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900242b4:	eba1 0e0e 	sub.w	lr, r1, lr
900242b8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
900242bc:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
900242c0:	fb0e cc0b 	mla	ip, lr, fp, ip
900242c4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
900242c8:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
900242cc:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900242d0:	ea4b 0e0e 	orr.w	lr, fp, lr
900242d4:	fb02 cc0e 	mla	ip, r2, lr, ip
900242d8:	ea4f 535c 	mov.w	r3, ip, lsr #21
900242dc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900242e0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900242e4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900242e8:	ea43 0c0c 	orr.w	ip, r3, ip
900242ec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900242ee:	441c      	add	r4, r3
900242f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900242f2:	f82a cb02 	strh.w	ip, [sl], #2
900242f6:	441e      	add	r6, r3
900242f8:	e723      	b.n	90024142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900242fa:	2800      	cmp	r0, #0
900242fc:	d0b1      	beq.n	90024262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900242fe:	5cd3      	ldrb	r3, [r2, r3]
90024300:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90024304:	930a      	str	r3, [sp, #40]	@ 0x28
90024306:	e7ac      	b.n	90024262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
90024308:	b013      	add	sp, #76	@ 0x4c
9002430a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002430e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9002430e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024312:	880d      	ldrh	r5, [r1, #0]
90024314:	b087      	sub	sp, #28
90024316:	10ef      	asrs	r7, r5, #3
90024318:	9103      	str	r1, [sp, #12]
9002431a:	ea4f 2a25 	mov.w	sl, r5, asr #8
9002431e:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
90024322:	00ed      	lsls	r5, r5, #3
90024324:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90024328:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9002432c:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90024330:	b2ed      	uxtb	r5, r5
90024332:	9701      	str	r7, [sp, #4]
90024334:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
90024338:	9502      	str	r5, [sp, #8]
9002433a:	9d01      	ldr	r5, [sp, #4]
9002433c:	9902      	ldr	r1, [sp, #8]
9002433e:	022d      	lsls	r5, r5, #8
90024340:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90024344:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
90024348:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
9002434c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90024350:	430d      	orrs	r5, r1
90024352:	fb06 0709 	mla	r7, r6, r9, r0
90024356:	2e00      	cmp	r6, #0
90024358:	9505      	str	r5, [sp, #20]
9002435a:	eb02 0c07 	add.w	ip, r2, r7
9002435e:	f2c0 80b6 	blt.w	900244ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90024362:	45b3      	cmp	fp, r6
90024364:	f340 80b3 	ble.w	900244ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90024368:	2800      	cmp	r0, #0
9002436a:	f2c0 80ae 	blt.w	900244ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002436e:	4581      	cmp	r9, r0
90024370:	f340 80ab 	ble.w	900244ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90024374:	5dd7      	ldrb	r7, [r2, r7]
90024376:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002437a:	441f      	add	r7, r3
9002437c:	1c42      	adds	r2, r0, #1
9002437e:	f100 80a9 	bmi.w	900244d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90024382:	4591      	cmp	r9, r2
90024384:	f340 80a6 	ble.w	900244d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90024388:	2c00      	cmp	r4, #0
9002438a:	f000 80a3 	beq.w	900244d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002438e:	f89c 5001 	ldrb.w	r5, [ip, #1]
90024392:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90024396:	441d      	add	r5, r3
90024398:	3601      	adds	r6, #1
9002439a:	f100 809f 	bmi.w	900244dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002439e:	45b3      	cmp	fp, r6
900243a0:	f340 809c 	ble.w	900244dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900243a4:	f1be 0f00 	cmp.w	lr, #0
900243a8:	f000 8098 	beq.w	900244dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
900243ac:	2800      	cmp	r0, #0
900243ae:	f2c0 8093 	blt.w	900244d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
900243b2:	4581      	cmp	r9, r0
900243b4:	f340 8090 	ble.w	900244d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
900243b8:	f81c 6009 	ldrb.w	r6, [ip, r9]
900243bc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900243c0:	441e      	add	r6, r3
900243c2:	3001      	adds	r0, #1
900243c4:	f100 808d 	bmi.w	900244e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900243c8:	4581      	cmp	r9, r0
900243ca:	f340 808a 	ble.w	900244e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900243ce:	2c00      	cmp	r4, #0
900243d0:	f000 8087 	beq.w	900244e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
900243d4:	44e1      	add	r9, ip
900243d6:	f899 2001 	ldrb.w	r2, [r9, #1]
900243da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900243de:	4413      	add	r3, r2
900243e0:	b2a4      	uxth	r4, r4
900243e2:	f897 c002 	ldrb.w	ip, [r7, #2]
900243e6:	fa1f fe8e 	uxth.w	lr, lr
900243ea:	9901      	ldr	r1, [sp, #4]
900243ec:	fb04 fb0e 	mul.w	fp, r4, lr
900243f0:	0124      	lsls	r4, r4, #4
900243f2:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
900243f6:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
900243fa:	eba4 040b 	sub.w	r4, r4, fp
900243fe:	fa1f f08e 	uxth.w	r0, lr
90024402:	b2a2      	uxth	r2, r4
90024404:	78ac      	ldrb	r4, [r5, #2]
90024406:	eba9 0900 	sub.w	r9, r9, r0
9002440a:	fa1f fe88 	uxth.w	lr, r8
9002440e:	4354      	muls	r4, r2
90024410:	ea6f 0808 	mvn.w	r8, r8
90024414:	fa1f f989 	uxth.w	r9, r9
90024418:	fa5f f888 	uxtb.w	r8, r8
9002441c:	fb09 440c 	mla	r4, r9, ip, r4
90024420:	f896 c002 	ldrb.w	ip, [r6, #2]
90024424:	fb1a fa08 	smulbb	sl, sl, r8
90024428:	fb00 440c 	mla	r4, r0, ip, r4
9002442c:	f893 c002 	ldrb.w	ip, [r3, #2]
90024430:	fb0b 4c0c 	mla	ip, fp, ip, r4
90024434:	787c      	ldrb	r4, [r7, #1]
90024436:	783f      	ldrb	r7, [r7, #0]
90024438:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9002443c:	fb0c ac0e 	mla	ip, ip, lr, sl
90024440:	f895 a001 	ldrb.w	sl, [r5, #1]
90024444:	782d      	ldrb	r5, [r5, #0]
90024446:	fb02 fa0a 	mul.w	sl, r2, sl
9002444a:	fa1f fc8c 	uxth.w	ip, ip
9002444e:	436a      	muls	r2, r5
90024450:	7835      	ldrb	r5, [r6, #0]
90024452:	fb09 aa04 	mla	sl, r9, r4, sl
90024456:	7874      	ldrb	r4, [r6, #1]
90024458:	fb09 2207 	mla	r2, r9, r7, r2
9002445c:	fb00 aa04 	mla	sl, r0, r4, sl
90024460:	785c      	ldrb	r4, [r3, #1]
90024462:	fb00 2005 	mla	r0, r0, r5, r2
90024466:	781b      	ldrb	r3, [r3, #0]
90024468:	fb0b a404 	mla	r4, fp, r4, sl
9002446c:	fb11 fa08 	smulbb	sl, r1, r8
90024470:	fb0b 0b03 	mla	fp, fp, r3, r0
90024474:	9b02      	ldr	r3, [sp, #8]
90024476:	f3c4 2407 	ubfx	r4, r4, #8, #8
9002447a:	fb13 f808 	smulbb	r8, r3, r8
9002447e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90024482:	fb04 a40e 	mla	r4, r4, lr, sl
90024486:	f10c 0301 	add.w	r3, ip, #1
9002448a:	fb0b 8e0e 	mla	lr, fp, lr, r8
9002448e:	b2a4      	uxth	r4, r4
90024490:	fa1f fe8e 	uxth.w	lr, lr
90024494:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90024498:	f104 0a01 	add.w	sl, r4, #1
9002449c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
900244a0:	f10e 0c01 	add.w	ip, lr, #1
900244a4:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
900244a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900244ac:	0964      	lsrs	r4, r4, #5
900244ae:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900244b2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900244b6:	ea4c 0c03 	orr.w	ip, ip, r3
900244ba:	9b03      	ldr	r3, [sp, #12]
900244bc:	ea4c 0c04 	orr.w	ip, ip, r4
900244c0:	f8a3 c000 	strh.w	ip, [r3]
900244c4:	b007      	add	sp, #28
900244c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900244ca:	af05      	add	r7, sp, #20
900244cc:	e756      	b.n	9002437c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
900244ce:	ad05      	add	r5, sp, #20
900244d0:	462f      	mov	r7, r5
900244d2:	e761      	b.n	90024398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900244d4:	ad05      	add	r5, sp, #20
900244d6:	e75f      	b.n	90024398 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
900244d8:	ae05      	add	r6, sp, #20
900244da:	e772      	b.n	900243c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
900244dc:	ab05      	add	r3, sp, #20
900244de:	461e      	mov	r6, r3
900244e0:	e77e      	b.n	900243e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
900244e2:	ab05      	add	r3, sp, #20
900244e4:	e77c      	b.n	900243e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

900244e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900244e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900244ea:	b095      	sub	sp, #84	@ 0x54
900244ec:	9212      	str	r2, [sp, #72]	@ 0x48
900244ee:	9309      	str	r3, [sp, #36]	@ 0x24
900244f0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900244f2:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
900244f6:	9013      	str	r0, [sp, #76]	@ 0x4c
900244f8:	930f      	str	r3, [sp, #60]	@ 0x3c
900244fa:	6850      	ldr	r0, [r2, #4]
900244fc:	910e      	str	r1, [sp, #56]	@ 0x38
900244fe:	6812      	ldr	r2, [r2, #0]
90024500:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90024504:	fb00 1303 	mla	r3, r0, r3, r1
90024508:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002450c:	930a      	str	r3, [sp, #40]	@ 0x28
9002450e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024510:	681b      	ldr	r3, [r3, #0]
90024512:	930d      	str	r3, [sp, #52]	@ 0x34
90024514:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024516:	685c      	ldr	r4, [r3, #4]
90024518:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002451a:	3404      	adds	r4, #4
9002451c:	43db      	mvns	r3, r3
9002451e:	b2db      	uxtb	r3, r3
90024520:	930b      	str	r3, [sp, #44]	@ 0x2c
90024522:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024524:	2b00      	cmp	r3, #0
90024526:	dc03      	bgt.n	90024530 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90024528:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002452a:	2b00      	cmp	r3, #0
9002452c:	f340 8255 	ble.w	900249da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90024530:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90024532:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024536:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002453a:	1e48      	subs	r0, r1, #1
9002453c:	1e55      	subs	r5, r2, #1
9002453e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024540:	2b00      	cmp	r3, #0
90024542:	f340 80f9 	ble.w	90024738 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90024546:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90024548:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002454a:	1436      	asrs	r6, r6, #16
9002454c:	ea4f 4323 	mov.w	r3, r3, asr #16
90024550:	d406      	bmi.n	90024560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90024552:	4286      	cmp	r6, r0
90024554:	da04      	bge.n	90024560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90024556:	2b00      	cmp	r3, #0
90024558:	db02      	blt.n	90024560 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002455a:	42ab      	cmp	r3, r5
9002455c:	f2c0 80ed 	blt.w	9002473a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90024560:	3601      	adds	r6, #1
90024562:	f100 80da 	bmi.w	9002471a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024566:	42b1      	cmp	r1, r6
90024568:	f2c0 80d7 	blt.w	9002471a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002456c:	3301      	adds	r3, #1
9002456e:	f100 80d4 	bmi.w	9002471a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024572:	429a      	cmp	r2, r3
90024574:	f2c0 80d1 	blt.w	9002471a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024578:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002457a:	9311      	str	r3, [sp, #68]	@ 0x44
9002457c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002457e:	930c      	str	r3, [sp, #48]	@ 0x30
90024580:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024582:	2b00      	cmp	r3, #0
90024584:	f340 80fa 	ble.w	9002477c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90024588:	9826      	ldr	r0, [sp, #152]	@ 0x98
9002458a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002458c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9002458e:	68c6      	ldr	r6, [r0, #12]
90024590:	141d      	asrs	r5, r3, #16
90024592:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90024594:	f3c2 3103 	ubfx	r1, r2, #12, #4
90024598:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002459a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9002459c:	1400      	asrs	r0, r0, #16
9002459e:	f3c3 3303 	ubfx	r3, r3, #12, #4
900245a2:	6892      	ldr	r2, [r2, #8]
900245a4:	f100 813e 	bmi.w	90024824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900245a8:	1e57      	subs	r7, r2, #1
900245aa:	42b8      	cmp	r0, r7
900245ac:	f280 813a 	bge.w	90024824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900245b0:	2d00      	cmp	r5, #0
900245b2:	f2c0 8137 	blt.w	90024824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900245b6:	1e77      	subs	r7, r6, #1
900245b8:	42bd      	cmp	r5, r7
900245ba:	f280 8133 	bge.w	90024824 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
900245be:	b212      	sxth	r2, r2
900245c0:	fb05 0002 	mla	r0, r5, r2, r0
900245c4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900245c6:	f815 a000 	ldrb.w	sl, [r5, r0]
900245ca:	182e      	adds	r6, r5, r0
900245cc:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
900245d0:	eb04 050a 	add.w	r5, r4, sl
900245d4:	2b00      	cmp	r3, #0
900245d6:	f000 8117 	beq.w	90024808 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
900245da:	f896 c001 	ldrb.w	ip, [r6, #1]
900245de:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900245e2:	44a4      	add	ip, r4
900245e4:	2900      	cmp	r1, #0
900245e6:	f000 8117 	beq.w	90024818 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
900245ea:	18b0      	adds	r0, r6, r2
900245ec:	5cb2      	ldrb	r2, [r6, r2]
900245ee:	7840      	ldrb	r0, [r0, #1]
900245f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900245f4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900245f8:	4422      	add	r2, r4
900245fa:	4420      	add	r0, r4
900245fc:	b29b      	uxth	r3, r3
900245fe:	f89c 7002 	ldrb.w	r7, [ip, #2]
90024602:	b289      	uxth	r1, r1
90024604:	f895 b002 	ldrb.w	fp, [r5, #2]
90024608:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002460a:	fb03 f901 	mul.w	r9, r3, r1
9002460e:	011b      	lsls	r3, r3, #4
90024610:	f8b6 e000 	ldrh.w	lr, [r6]
90024614:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024618:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
9002461c:	eba3 0309 	sub.w	r3, r3, r9
90024620:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90024624:	b289      	uxth	r1, r1
90024626:	f814 a00a 	ldrb.w	sl, [r4, sl]
9002462a:	b29b      	uxth	r3, r3
9002462c:	eba8 0801 	sub.w	r8, r8, r1
90024630:	435f      	muls	r7, r3
90024632:	fa1f f888 	uxth.w	r8, r8
90024636:	9310      	str	r3, [sp, #64]	@ 0x40
90024638:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002463a:	fb08 770b 	mla	r7, r8, fp, r7
9002463e:	f892 b002 	ldrb.w	fp, [r2, #2]
90024642:	fb01 770b 	mla	r7, r1, fp, r7
90024646:	f890 b002 	ldrb.w	fp, [r0, #2]
9002464a:	fb09 770b 	mla	r7, r9, fp, r7
9002464e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90024652:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90024656:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002465a:	fb1b fb03 	smulbb	fp, fp, r3
9002465e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024660:	fb07 b706 	mla	r7, r7, r6, fp
90024664:	f895 b001 	ldrb.w	fp, [r5, #1]
90024668:	f89c 5001 	ldrb.w	r5, [ip, #1]
9002466c:	f89c c000 	ldrb.w	ip, [ip]
90024670:	b2bf      	uxth	r7, r7
90024672:	435d      	muls	r5, r3
90024674:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024676:	fb08 550b 	mla	r5, r8, fp, r5
9002467a:	f892 b001 	ldrb.w	fp, [r2, #1]
9002467e:	fb01 550b 	mla	r5, r1, fp, r5
90024682:	f890 b001 	ldrb.w	fp, [r0, #1]
90024686:	fb09 550b 	mla	r5, r9, fp, r5
9002468a:	ea4f 0bee 	mov.w	fp, lr, asr #3
9002468e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90024692:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90024696:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002469a:	fa5f fe8e 	uxtb.w	lr, lr
9002469e:	fb1b fb03 	smulbb	fp, fp, r3
900246a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900246a4:	fb03 f30c 	mul.w	r3, r3, ip
900246a8:	f892 c000 	ldrb.w	ip, [r2]
900246ac:	fb05 b506 	mla	r5, r5, r6, fp
900246b0:	fb08 330a 	mla	r3, r8, sl, r3
900246b4:	b2ad      	uxth	r5, r5
900246b6:	fb01 330c 	mla	r3, r1, ip, r3
900246ba:	f890 c000 	ldrb.w	ip, [r0]
900246be:	f105 0b01 	add.w	fp, r5, #1
900246c2:	fb09 3c0c 	mla	ip, r9, ip, r3
900246c6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900246c8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
900246cc:	fb1e fe03 	smulbb	lr, lr, r3
900246d0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900246d4:	1c7b      	adds	r3, r7, #1
900246d6:	096d      	lsrs	r5, r5, #5
900246d8:	fb0c e606 	mla	r6, ip, r6, lr
900246dc:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900246e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900246e4:	b2b6      	uxth	r6, r6
900246e6:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
900246ea:	1c77      	adds	r7, r6, #1
900246ec:	eb07 2716 	add.w	r7, r7, r6, lsr #8
900246f0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900246f4:	431f      	orrs	r7, r3
900246f6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900246f8:	433d      	orrs	r5, r7
900246fa:	801d      	strh	r5, [r3, #0]
900246fc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900246fe:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024700:	3302      	adds	r3, #2
90024702:	930c      	str	r3, [sp, #48]	@ 0x30
90024704:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024706:	4413      	add	r3, r2
90024708:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002470a:	931f      	str	r3, [sp, #124]	@ 0x7c
9002470c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002470e:	4413      	add	r3, r2
90024710:	9320      	str	r3, [sp, #128]	@ 0x80
90024712:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024714:	3b01      	subs	r3, #1
90024716:	9311      	str	r3, [sp, #68]	@ 0x44
90024718:	e732      	b.n	90024580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9002471a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002471c:	9e21      	ldr	r6, [sp, #132]	@ 0x84
9002471e:	4433      	add	r3, r6
90024720:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90024722:	931f      	str	r3, [sp, #124]	@ 0x7c
90024724:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024726:	4433      	add	r3, r6
90024728:	9320      	str	r3, [sp, #128]	@ 0x80
9002472a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002472c:	3b01      	subs	r3, #1
9002472e:	9309      	str	r3, [sp, #36]	@ 0x24
90024730:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024732:	3302      	adds	r3, #2
90024734:	930a      	str	r3, [sp, #40]	@ 0x28
90024736:	e702      	b.n	9002453e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90024738:	d027      	beq.n	9002478a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9002473a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002473c:	9821      	ldr	r0, [sp, #132]	@ 0x84
9002473e:	3b01      	subs	r3, #1
90024740:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90024742:	fb00 5003 	mla	r0, r0, r3, r5
90024746:	1400      	asrs	r0, r0, #16
90024748:	f53f af16 	bmi.w	90024578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002474c:	3901      	subs	r1, #1
9002474e:	4288      	cmp	r0, r1
90024750:	f6bf af12 	bge.w	90024578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024754:	9922      	ldr	r1, [sp, #136]	@ 0x88
90024756:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024758:	fb01 0303 	mla	r3, r1, r3, r0
9002475c:	141b      	asrs	r3, r3, #16
9002475e:	f53f af0b 	bmi.w	90024578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024762:	3a01      	subs	r2, #1
90024764:	4293      	cmp	r3, r2
90024766:	f6bf af07 	bge.w	90024578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002476a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002476c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90024770:	9311      	str	r3, [sp, #68]	@ 0x44
90024772:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024774:	930c      	str	r3, [sp, #48]	@ 0x30
90024776:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024778:	2b00      	cmp	r3, #0
9002477a:	dc70      	bgt.n	9002485e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9002477c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002477e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90024780:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90024784:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024788:	930a      	str	r3, [sp, #40]	@ 0x28
9002478a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002478c:	2b00      	cmp	r3, #0
9002478e:	f340 8124 	ble.w	900249da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90024792:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024796:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024798:	ee30 0a04 	vadd.f32	s0, s0, s8
9002479c:	ee70 0aa4 	vadd.f32	s1, s1, s9
900247a0:	eef0 6a62 	vmov.f32	s13, s5
900247a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
900247a8:	ee31 1a05 	vadd.f32	s2, s2, s10
900247ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900247b0:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
900247b4:	eef0 6a43 	vmov.f32	s13, s6
900247b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900247bc:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
900247c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
900247c4:	ee61 7a27 	vmul.f32	s15, s2, s15
900247c8:	ee77 2a62 	vsub.f32	s5, s14, s5
900247cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
900247d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900247d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900247d8:	ee12 2a90 	vmov	r2, s5
900247dc:	eef0 2a47 	vmov.f32	s5, s14
900247e0:	fb92 f3f3 	sdiv	r3, r2, r3
900247e4:	ee13 2a10 	vmov	r2, s6
900247e8:	9321      	str	r3, [sp, #132]	@ 0x84
900247ea:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900247ec:	eeb0 3a67 	vmov.f32	s6, s15
900247f0:	fb92 f3f3 	sdiv	r3, r2, r3
900247f4:	9322      	str	r3, [sp, #136]	@ 0x88
900247f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900247f8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900247fa:	3b01      	subs	r3, #1
900247fc:	930e      	str	r3, [sp, #56]	@ 0x38
900247fe:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024800:	bf08      	it	eq
90024802:	4613      	moveq	r3, r2
90024804:	9309      	str	r3, [sp, #36]	@ 0x24
90024806:	e68c      	b.n	90024522 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90024808:	b149      	cbz	r1, 9002481e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
9002480a:	5cb2      	ldrb	r2, [r6, r2]
9002480c:	4628      	mov	r0, r5
9002480e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024812:	4422      	add	r2, r4
90024814:	46ac      	mov	ip, r5
90024816:	e6f1      	b.n	900245fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90024818:	4628      	mov	r0, r5
9002481a:	462a      	mov	r2, r5
9002481c:	e6ee      	b.n	900245fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002481e:	4628      	mov	r0, r5
90024820:	462a      	mov	r2, r5
90024822:	e7f7      	b.n	90024814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90024824:	1c47      	adds	r7, r0, #1
90024826:	f53f af69 	bmi.w	900246fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002482a:	42ba      	cmp	r2, r7
9002482c:	f6ff af66 	blt.w	900246fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90024830:	1c6f      	adds	r7, r5, #1
90024832:	f53f af63 	bmi.w	900246fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90024836:	42be      	cmp	r6, r7
90024838:	f6ff af60 	blt.w	900246fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002483c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9002483e:	b236      	sxth	r6, r6
90024840:	b212      	sxth	r2, r2
90024842:	9002      	str	r0, [sp, #8]
90024844:	9601      	str	r6, [sp, #4]
90024846:	9200      	str	r2, [sp, #0]
90024848:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9002484a:	e9cd 1705 	strd	r1, r7, [sp, #20]
9002484e:	e9cd 5303 	strd	r5, r3, [sp, #12]
90024852:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90024856:	4623      	mov	r3, r4
90024858:	f7ff fd59 	bl	9002430e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
9002485c:	e74e      	b.n	900246fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002485e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024860:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024862:	f3c2 3103 	ubfx	r1, r2, #12, #4
90024866:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90024868:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9002486a:	1400      	asrs	r0, r0, #16
9002486c:	142d      	asrs	r5, r5, #16
9002486e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024870:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90024874:	f3c3 3303 	ubfx	r3, r3, #12, #4
90024878:	fb02 5000 	mla	r0, r2, r0, r5
9002487c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002487e:	f815 9000 	ldrb.w	r9, [r5, r0]
90024882:	182e      	adds	r6, r5, r0
90024884:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90024888:	eb04 0509 	add.w	r5, r4, r9
9002488c:	2b00      	cmp	r3, #0
9002488e:	f000 8096 	beq.w	900249be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90024892:	7877      	ldrb	r7, [r6, #1]
90024894:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90024898:	4427      	add	r7, r4
9002489a:	2900      	cmp	r1, #0
9002489c:	f000 8097 	beq.w	900249ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
900248a0:	18b0      	adds	r0, r6, r2
900248a2:	5cb2      	ldrb	r2, [r6, r2]
900248a4:	7840      	ldrb	r0, [r0, #1]
900248a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900248aa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900248ae:	4422      	add	r2, r4
900248b0:	4420      	add	r0, r4
900248b2:	b29b      	uxth	r3, r3
900248b4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
900248b6:	b289      	uxth	r1, r1
900248b8:	f895 b002 	ldrb.w	fp, [r5, #2]
900248bc:	f8b6 c000 	ldrh.w	ip, [r6]
900248c0:	fb03 f801 	mul.w	r8, r3, r1
900248c4:	011b      	lsls	r3, r3, #4
900248c6:	78be      	ldrb	r6, [r7, #2]
900248c8:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
900248cc:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
900248d0:	eba3 0308 	sub.w	r3, r3, r8
900248d4:	f814 9009 	ldrb.w	r9, [r4, r9]
900248d8:	b289      	uxth	r1, r1
900248da:	b29b      	uxth	r3, r3
900248dc:	ebae 0e01 	sub.w	lr, lr, r1
900248e0:	435e      	muls	r6, r3
900248e2:	fa1f fe8e 	uxth.w	lr, lr
900248e6:	9310      	str	r3, [sp, #64]	@ 0x40
900248e8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900248ea:	fb0e 660b 	mla	r6, lr, fp, r6
900248ee:	f892 b002 	ldrb.w	fp, [r2, #2]
900248f2:	fb01 660b 	mla	r6, r1, fp, r6
900248f6:	f890 b002 	ldrb.w	fp, [r0, #2]
900248fa:	fb08 660b 	mla	r6, r8, fp, r6
900248fe:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90024902:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90024906:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002490a:	fb1b fb03 	smulbb	fp, fp, r3
9002490e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024910:	fb06 b60a 	mla	r6, r6, sl, fp
90024914:	f895 b001 	ldrb.w	fp, [r5, #1]
90024918:	787d      	ldrb	r5, [r7, #1]
9002491a:	783f      	ldrb	r7, [r7, #0]
9002491c:	b2b6      	uxth	r6, r6
9002491e:	435d      	muls	r5, r3
90024920:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024922:	fb0e 550b 	mla	r5, lr, fp, r5
90024926:	f892 b001 	ldrb.w	fp, [r2, #1]
9002492a:	fb01 550b 	mla	r5, r1, fp, r5
9002492e:	f890 b001 	ldrb.w	fp, [r0, #1]
90024932:	fb08 550b 	mla	r5, r8, fp, r5
90024936:	ea4f 0bec 	mov.w	fp, ip, asr #3
9002493a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002493e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90024942:	f3c5 2507 	ubfx	r5, r5, #8, #8
90024946:	fa5f fc8c 	uxtb.w	ip, ip
9002494a:	fb1b fb03 	smulbb	fp, fp, r3
9002494e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024950:	437b      	muls	r3, r7
90024952:	7817      	ldrb	r7, [r2, #0]
90024954:	fb05 b50a 	mla	r5, r5, sl, fp
90024958:	fb0e 3309 	mla	r3, lr, r9, r3
9002495c:	b2ad      	uxth	r5, r5
9002495e:	fb01 3307 	mla	r3, r1, r7, r3
90024962:	7807      	ldrb	r7, [r0, #0]
90024964:	f105 0b01 	add.w	fp, r5, #1
90024968:	fb08 3707 	mla	r7, r8, r7, r3
9002496c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002496e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90024972:	fb1c fc03 	smulbb	ip, ip, r3
90024976:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002497a:	1c73      	adds	r3, r6, #1
9002497c:	096d      	lsrs	r5, r5, #5
9002497e:	fb07 c70a 	mla	r7, r7, sl, ip
90024982:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90024986:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002498a:	b2bf      	uxth	r7, r7
9002498c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002498e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90024992:	1c7a      	adds	r2, r7, #1
90024994:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90024998:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002499c:	4316      	orrs	r6, r2
9002499e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900249a0:	432e      	orrs	r6, r5
900249a2:	f823 6b02 	strh.w	r6, [r3], #2
900249a6:	930c      	str	r3, [sp, #48]	@ 0x30
900249a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900249aa:	4413      	add	r3, r2
900249ac:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900249ae:	931f      	str	r3, [sp, #124]	@ 0x7c
900249b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900249b2:	4413      	add	r3, r2
900249b4:	9320      	str	r3, [sp, #128]	@ 0x80
900249b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900249b8:	3b01      	subs	r3, #1
900249ba:	9311      	str	r3, [sp, #68]	@ 0x44
900249bc:	e6db      	b.n	90024776 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
900249be:	b149      	cbz	r1, 900249d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
900249c0:	5cb2      	ldrb	r2, [r6, r2]
900249c2:	4628      	mov	r0, r5
900249c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900249c8:	4422      	add	r2, r4
900249ca:	462f      	mov	r7, r5
900249cc:	e771      	b.n	900248b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900249ce:	4628      	mov	r0, r5
900249d0:	462a      	mov	r2, r5
900249d2:	e76e      	b.n	900248b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
900249d4:	4628      	mov	r0, r5
900249d6:	462a      	mov	r2, r5
900249d8:	e7f7      	b.n	900249ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900249da:	b015      	add	sp, #84	@ 0x54
900249dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900249e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
900249e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900249e4:	880f      	ldrh	r7, [r1, #0]
900249e6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
900249ea:	023c      	lsls	r4, r7, #8
900249ec:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
900249f0:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
900249f4:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
900249f8:	017c      	lsls	r4, r7, #5
900249fa:	00ff      	lsls	r7, r7, #3
900249fc:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90024a00:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90024a04:	b2ff      	uxtb	r7, r7
90024a06:	ea4b 0404 	orr.w	r4, fp, r4
90024a0a:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90024a0e:	4327      	orrs	r7, r4
90024a10:	fb05 ca0e 	mla	sl, r5, lr, ip
90024a14:	2d00      	cmp	r5, #0
90024a16:	9701      	str	r7, [sp, #4]
90024a18:	eb02 080a 	add.w	r8, r2, sl
90024a1c:	db7e      	blt.n	90024b1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90024a1e:	45a9      	cmp	r9, r5
90024a20:	dd7c      	ble.n	90024b1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90024a22:	f1bc 0f00 	cmp.w	ip, #0
90024a26:	db77      	blt.n	90024b18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90024a28:	45e6      	cmp	lr, ip
90024a2a:	dd75      	ble.n	90024b18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90024a2c:	f812 700a 	ldrb.w	r7, [r2, sl]
90024a30:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90024a34:	441f      	add	r7, r3
90024a36:	f11c 0201 	adds.w	r2, ip, #1
90024a3a:	d472      	bmi.n	90024b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024a3c:	4596      	cmp	lr, r2
90024a3e:	dd70      	ble.n	90024b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024a40:	2800      	cmp	r0, #0
90024a42:	d06e      	beq.n	90024b22 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024a44:	f898 4001 	ldrb.w	r4, [r8, #1]
90024a48:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90024a4c:	441c      	add	r4, r3
90024a4e:	3501      	adds	r5, #1
90024a50:	d46b      	bmi.n	90024b2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024a52:	45a9      	cmp	r9, r5
90024a54:	dd69      	ble.n	90024b2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024a56:	2e00      	cmp	r6, #0
90024a58:	d067      	beq.n	90024b2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024a5a:	f1bc 0f00 	cmp.w	ip, #0
90024a5e:	db62      	blt.n	90024b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024a60:	45e6      	cmp	lr, ip
90024a62:	dd60      	ble.n	90024b26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024a64:	f818 500e 	ldrb.w	r5, [r8, lr]
90024a68:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90024a6c:	441d      	add	r5, r3
90024a6e:	f11c 0201 	adds.w	r2, ip, #1
90024a72:	d45d      	bmi.n	90024b30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024a74:	4596      	cmp	lr, r2
90024a76:	dd5b      	ble.n	90024b30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024a78:	2800      	cmp	r0, #0
90024a7a:	d059      	beq.n	90024b30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024a7c:	44c6      	add	lr, r8
90024a7e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024a82:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024a86:	4413      	add	r3, r2
90024a88:	b280      	uxth	r0, r0
90024a8a:	f897 e002 	ldrb.w	lr, [r7, #2]
90024a8e:	b2b2      	uxth	r2, r6
90024a90:	f897 9000 	ldrb.w	r9, [r7]
90024a94:	787f      	ldrb	r7, [r7, #1]
90024a96:	fb00 f602 	mul.w	r6, r0, r2
90024a9a:	0100      	lsls	r0, r0, #4
90024a9c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90024aa0:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90024aa4:	1b80      	subs	r0, r0, r6
90024aa6:	fa1f fc82 	uxth.w	ip, r2
90024aaa:	b282      	uxth	r2, r0
90024aac:	78a0      	ldrb	r0, [r4, #2]
90024aae:	eba8 080c 	sub.w	r8, r8, ip
90024ab2:	4350      	muls	r0, r2
90024ab4:	fa1f f888 	uxth.w	r8, r8
90024ab8:	fb08 0e0e 	mla	lr, r8, lr, r0
90024abc:	78a8      	ldrb	r0, [r5, #2]
90024abe:	fb0c e000 	mla	r0, ip, r0, lr
90024ac2:	f893 e002 	ldrb.w	lr, [r3, #2]
90024ac6:	fb06 0e0e 	mla	lr, r6, lr, r0
90024aca:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90024ace:	f894 e000 	ldrb.w	lr, [r4]
90024ad2:	fb02 fe0e 	mul.w	lr, r2, lr
90024ad6:	fb08 e909 	mla	r9, r8, r9, lr
90024ada:	f895 e000 	ldrb.w	lr, [r5]
90024ade:	fb0c 990e 	mla	r9, ip, lr, r9
90024ae2:	f893 e000 	ldrb.w	lr, [r3]
90024ae6:	785b      	ldrb	r3, [r3, #1]
90024ae8:	fb06 9e0e 	mla	lr, r6, lr, r9
90024aec:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90024af0:	ea4e 0e00 	orr.w	lr, lr, r0
90024af4:	7860      	ldrb	r0, [r4, #1]
90024af6:	4350      	muls	r0, r2
90024af8:	786a      	ldrb	r2, [r5, #1]
90024afa:	fb08 0007 	mla	r0, r8, r7, r0
90024afe:	fb0c 0202 	mla	r2, ip, r2, r0
90024b02:	fb06 2303 	mla	r3, r6, r3, r2
90024b06:	095b      	lsrs	r3, r3, #5
90024b08:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024b0c:	ea4e 0303 	orr.w	r3, lr, r3
90024b10:	800b      	strh	r3, [r1, #0]
90024b12:	b003      	add	sp, #12
90024b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024b18:	af01      	add	r7, sp, #4
90024b1a:	e78c      	b.n	90024a36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90024b1c:	ac01      	add	r4, sp, #4
90024b1e:	4627      	mov	r7, r4
90024b20:	e795      	b.n	90024a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90024b22:	ac01      	add	r4, sp, #4
90024b24:	e793      	b.n	90024a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90024b26:	ad01      	add	r5, sp, #4
90024b28:	e7a1      	b.n	90024a6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90024b2a:	ab01      	add	r3, sp, #4
90024b2c:	461d      	mov	r5, r3
90024b2e:	e7ab      	b.n	90024a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90024b30:	ab01      	add	r3, sp, #4
90024b32:	e7a9      	b.n	90024a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90024b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024b38:	b08f      	sub	sp, #60	@ 0x3c
90024b3a:	920c      	str	r2, [sp, #48]	@ 0x30
90024b3c:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
90024b3e:	900d      	str	r0, [sp, #52]	@ 0x34
90024b40:	910a      	str	r1, [sp, #40]	@ 0x28
90024b42:	6850      	ldr	r0, [r2, #4]
90024b44:	9306      	str	r3, [sp, #24]
90024b46:	6812      	ldr	r2, [r2, #0]
90024b48:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
90024b4c:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
90024b50:	fb00 1303 	mla	r3, r0, r3, r1
90024b54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024b58:	9307      	str	r3, [sp, #28]
90024b5a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024b5c:	681b      	ldr	r3, [r3, #0]
90024b5e:	9308      	str	r3, [sp, #32]
90024b60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024b62:	685c      	ldr	r4, [r3, #4]
90024b64:	3404      	adds	r4, #4
90024b66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024b68:	2b00      	cmp	r3, #0
90024b6a:	dc03      	bgt.n	90024b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90024b6c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024b6e:	2b00      	cmp	r3, #0
90024b70:	f340 81d5 	ble.w	90024f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90024b74:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024b76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024b7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024b7e:	1e48      	subs	r0, r1, #1
90024b80:	1e56      	subs	r6, r2, #1
90024b82:	9b06      	ldr	r3, [sp, #24]
90024b84:	2b00      	cmp	r3, #0
90024b86:	f340 80b6 	ble.w	90024cf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024b8a:	ea5f 472b 	movs.w	r7, fp, asr #16
90024b8e:	ea4f 4325 	mov.w	r3, r5, asr #16
90024b92:	d406      	bmi.n	90024ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024b94:	4287      	cmp	r7, r0
90024b96:	da04      	bge.n	90024ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024b98:	2b00      	cmp	r3, #0
90024b9a:	db02      	blt.n	90024ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024b9c:	42b3      	cmp	r3, r6
90024b9e:	f2c0 80ab 	blt.w	90024cf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90024ba2:	3701      	adds	r7, #1
90024ba4:	f100 809c 	bmi.w	90024ce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024ba8:	42b9      	cmp	r1, r7
90024baa:	f2c0 8099 	blt.w	90024ce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024bae:	3301      	adds	r3, #1
90024bb0:	f100 8096 	bmi.w	90024ce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024bb4:	429a      	cmp	r2, r3
90024bb6:	f2c0 8093 	blt.w	90024ce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024bba:	9b06      	ldr	r3, [sp, #24]
90024bbc:	930b      	str	r3, [sp, #44]	@ 0x2c
90024bbe:	9b07      	ldr	r3, [sp, #28]
90024bc0:	9309      	str	r3, [sp, #36]	@ 0x24
90024bc2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024bc4:	2b00      	cmp	r3, #0
90024bc6:	f340 80b4 	ble.w	90024d32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90024bca:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024bcc:	142e      	asrs	r6, r5, #16
90024bce:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024bd0:	f3cb 3303 	ubfx	r3, fp, #12, #4
90024bd4:	68c7      	ldr	r7, [r0, #12]
90024bd6:	ea5f 402b 	movs.w	r0, fp, asr #16
90024bda:	f3c5 3103 	ubfx	r1, r5, #12, #4
90024bde:	6892      	ldr	r2, [r2, #8]
90024be0:	f100 80fb 	bmi.w	90024dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024be4:	f102 3cff 	add.w	ip, r2, #4294967295
90024be8:	4560      	cmp	r0, ip
90024bea:	f280 80f6 	bge.w	90024dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024bee:	2e00      	cmp	r6, #0
90024bf0:	f2c0 80f3 	blt.w	90024dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024bf4:	f107 3cff 	add.w	ip, r7, #4294967295
90024bf8:	4566      	cmp	r6, ip
90024bfa:	f280 80ee 	bge.w	90024dda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024bfe:	b212      	sxth	r2, r2
90024c00:	fb06 0002 	mla	r0, r6, r2, r0
90024c04:	9e08      	ldr	r6, [sp, #32]
90024c06:	1837      	adds	r7, r6, r0
90024c08:	5c30      	ldrb	r0, [r6, r0]
90024c0a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90024c0e:	eb04 0c08 	add.w	ip, r4, r8
90024c12:	2b00      	cmp	r3, #0
90024c14:	f000 80d3 	beq.w	90024dbe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90024c18:	787e      	ldrb	r6, [r7, #1]
90024c1a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90024c1e:	4426      	add	r6, r4
90024c20:	2900      	cmp	r1, #0
90024c22:	f000 80d4 	beq.w	90024dce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90024c26:	18b8      	adds	r0, r7, r2
90024c28:	5cba      	ldrb	r2, [r7, r2]
90024c2a:	7840      	ldrb	r0, [r0, #1]
90024c2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024c30:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90024c34:	4422      	add	r2, r4
90024c36:	4420      	add	r0, r4
90024c38:	b29b      	uxth	r3, r3
90024c3a:	78b7      	ldrb	r7, [r6, #2]
90024c3c:	b289      	uxth	r1, r1
90024c3e:	f89c a002 	ldrb.w	sl, [ip, #2]
90024c42:	f89c c001 	ldrb.w	ip, [ip, #1]
90024c46:	fb03 f901 	mul.w	r9, r3, r1
90024c4a:	011b      	lsls	r3, r3, #4
90024c4c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024c50:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90024c54:	eba3 0309 	sub.w	r3, r3, r9
90024c58:	b289      	uxth	r1, r1
90024c5a:	b29b      	uxth	r3, r3
90024c5c:	ebae 0e01 	sub.w	lr, lr, r1
90024c60:	435f      	muls	r7, r3
90024c62:	fa1f fe8e 	uxth.w	lr, lr
90024c66:	fb0e 770a 	mla	r7, lr, sl, r7
90024c6a:	f892 a002 	ldrb.w	sl, [r2, #2]
90024c6e:	fb01 770a 	mla	r7, r1, sl, r7
90024c72:	f890 a002 	ldrb.w	sl, [r0, #2]
90024c76:	fb09 7a0a 	mla	sl, r9, sl, r7
90024c7a:	f814 7008 	ldrb.w	r7, [r4, r8]
90024c7e:	f896 8000 	ldrb.w	r8, [r6]
90024c82:	7876      	ldrb	r6, [r6, #1]
90024c84:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90024c88:	fb03 f808 	mul.w	r8, r3, r8
90024c8c:	4373      	muls	r3, r6
90024c8e:	fb0e 8807 	mla	r8, lr, r7, r8
90024c92:	7817      	ldrb	r7, [r2, #0]
90024c94:	fb0e 330c 	mla	r3, lr, ip, r3
90024c98:	fb01 8807 	mla	r8, r1, r7, r8
90024c9c:	7807      	ldrb	r7, [r0, #0]
90024c9e:	fb09 8707 	mla	r7, r9, r7, r8
90024ca2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024ca6:	ea47 070a 	orr.w	r7, r7, sl
90024caa:	f892 a001 	ldrb.w	sl, [r2, #1]
90024cae:	fb01 310a 	mla	r1, r1, sl, r3
90024cb2:	f890 a001 	ldrb.w	sl, [r0, #1]
90024cb6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024cb8:	fb09 1a0a 	mla	sl, r9, sl, r1
90024cbc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90024cc0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90024cc4:	ea47 070a 	orr.w	r7, r7, sl
90024cc8:	801f      	strh	r7, [r3, #0]
90024cca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024ccc:	3302      	adds	r3, #2
90024cce:	9309      	str	r3, [sp, #36]	@ 0x24
90024cd0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024cd2:	449b      	add	fp, r3
90024cd4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024cd6:	441d      	add	r5, r3
90024cd8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024cda:	3b01      	subs	r3, #1
90024cdc:	930b      	str	r3, [sp, #44]	@ 0x2c
90024cde:	e770      	b.n	90024bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024ce0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024ce2:	449b      	add	fp, r3
90024ce4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024ce6:	441d      	add	r5, r3
90024ce8:	9b06      	ldr	r3, [sp, #24]
90024cea:	3b01      	subs	r3, #1
90024cec:	9306      	str	r3, [sp, #24]
90024cee:	9b07      	ldr	r3, [sp, #28]
90024cf0:	3302      	adds	r3, #2
90024cf2:	9307      	str	r3, [sp, #28]
90024cf4:	e745      	b.n	90024b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90024cf6:	d023      	beq.n	90024d40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90024cf8:	9b06      	ldr	r3, [sp, #24]
90024cfa:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90024cfc:	3b01      	subs	r3, #1
90024cfe:	fb00 b003 	mla	r0, r0, r3, fp
90024d02:	1400      	asrs	r0, r0, #16
90024d04:	f53f af59 	bmi.w	90024bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024d08:	3901      	subs	r1, #1
90024d0a:	4288      	cmp	r0, r1
90024d0c:	f6bf af55 	bge.w	90024bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024d10:	991c      	ldr	r1, [sp, #112]	@ 0x70
90024d12:	fb01 5303 	mla	r3, r1, r3, r5
90024d16:	141b      	asrs	r3, r3, #16
90024d18:	f53f af4f 	bmi.w	90024bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024d1c:	3a01      	subs	r2, #1
90024d1e:	4293      	cmp	r3, r2
90024d20:	f6bf af4b 	bge.w	90024bba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024d24:	9b06      	ldr	r3, [sp, #24]
90024d26:	9309      	str	r3, [sp, #36]	@ 0x24
90024d28:	9b07      	ldr	r3, [sp, #28]
90024d2a:	930b      	str	r3, [sp, #44]	@ 0x2c
90024d2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024d2e:	2b00      	cmp	r3, #0
90024d30:	dc70      	bgt.n	90024e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90024d32:	9b06      	ldr	r3, [sp, #24]
90024d34:	9a07      	ldr	r2, [sp, #28]
90024d36:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90024d3a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024d3e:	9307      	str	r3, [sp, #28]
90024d40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024d42:	2b00      	cmp	r3, #0
90024d44:	f340 80eb 	ble.w	90024f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90024d48:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024d4c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024d4e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024d52:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024d56:	eef0 6a62 	vmov.f32	s13, s5
90024d5a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024d5e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024d62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d66:	ee16 ba90 	vmov	fp, s13
90024d6a:	eef0 6a43 	vmov.f32	s13, s6
90024d6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d72:	ee16 5a90 	vmov	r5, s13
90024d76:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024d7a:	ee61 7a27 	vmul.f32	s15, s2, s15
90024d7e:	ee77 2a62 	vsub.f32	s5, s14, s5
90024d82:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024d86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024d8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024d8e:	ee12 2a90 	vmov	r2, s5
90024d92:	eef0 2a47 	vmov.f32	s5, s14
90024d96:	fb92 f3f3 	sdiv	r3, r2, r3
90024d9a:	ee13 2a10 	vmov	r2, s6
90024d9e:	931b      	str	r3, [sp, #108]	@ 0x6c
90024da0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024da2:	eeb0 3a67 	vmov.f32	s6, s15
90024da6:	fb92 f3f3 	sdiv	r3, r2, r3
90024daa:	931c      	str	r3, [sp, #112]	@ 0x70
90024dac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024dae:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90024db0:	3b01      	subs	r3, #1
90024db2:	930a      	str	r3, [sp, #40]	@ 0x28
90024db4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024db6:	bf08      	it	eq
90024db8:	4613      	moveq	r3, r2
90024dba:	9306      	str	r3, [sp, #24]
90024dbc:	e6d3      	b.n	90024b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90024dbe:	b149      	cbz	r1, 90024dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90024dc0:	5cba      	ldrb	r2, [r7, r2]
90024dc2:	4660      	mov	r0, ip
90024dc4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024dc8:	4422      	add	r2, r4
90024dca:	4666      	mov	r6, ip
90024dcc:	e734      	b.n	90024c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90024dce:	4660      	mov	r0, ip
90024dd0:	4662      	mov	r2, ip
90024dd2:	e731      	b.n	90024c38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90024dd4:	4660      	mov	r0, ip
90024dd6:	4662      	mov	r2, ip
90024dd8:	e7f7      	b.n	90024dca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90024dda:	f110 0c01 	adds.w	ip, r0, #1
90024dde:	f53f af74 	bmi.w	90024cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024de2:	4562      	cmp	r2, ip
90024de4:	f6ff af71 	blt.w	90024cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024de8:	f116 0c01 	adds.w	ip, r6, #1
90024dec:	f53f af6d 	bmi.w	90024cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024df0:	4567      	cmp	r7, ip
90024df2:	f6ff af6a 	blt.w	90024cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024df6:	b23f      	sxth	r7, r7
90024df8:	b212      	sxth	r2, r2
90024dfa:	9701      	str	r7, [sp, #4]
90024dfc:	9200      	str	r2, [sp, #0]
90024dfe:	e9cd 3104 	strd	r3, r1, [sp, #16]
90024e02:	e9cd 0602 	strd	r0, r6, [sp, #8]
90024e06:	4623      	mov	r3, r4
90024e08:	980d      	ldr	r0, [sp, #52]	@ 0x34
90024e0a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90024e0e:	f7ff fde7 	bl	900249e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90024e12:	e75a      	b.n	90024cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024e14:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024e16:	ea4f 462b 	mov.w	r6, fp, asr #16
90024e1a:	1428      	asrs	r0, r5, #16
90024e1c:	f3cb 3303 	ubfx	r3, fp, #12, #4
90024e20:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90024e24:	f3c5 3103 	ubfx	r1, r5, #12, #4
90024e28:	fb02 6000 	mla	r0, r2, r0, r6
90024e2c:	9e08      	ldr	r6, [sp, #32]
90024e2e:	f816 8000 	ldrb.w	r8, [r6, r0]
90024e32:	1837      	adds	r7, r6, r0
90024e34:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90024e38:	eb04 0c08 	add.w	ip, r4, r8
90024e3c:	2b00      	cmp	r3, #0
90024e3e:	d060      	beq.n	90024f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90024e40:	787e      	ldrb	r6, [r7, #1]
90024e42:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90024e46:	4426      	add	r6, r4
90024e48:	2900      	cmp	r1, #0
90024e4a:	d062      	beq.n	90024f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90024e4c:	18b8      	adds	r0, r7, r2
90024e4e:	5cba      	ldrb	r2, [r7, r2]
90024e50:	7840      	ldrb	r0, [r0, #1]
90024e52:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024e56:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90024e5a:	4422      	add	r2, r4
90024e5c:	4420      	add	r0, r4
90024e5e:	b29b      	uxth	r3, r3
90024e60:	78b7      	ldrb	r7, [r6, #2]
90024e62:	b289      	uxth	r1, r1
90024e64:	f89c a002 	ldrb.w	sl, [ip, #2]
90024e68:	f89c c001 	ldrb.w	ip, [ip, #1]
90024e6c:	fb03 f901 	mul.w	r9, r3, r1
90024e70:	011b      	lsls	r3, r3, #4
90024e72:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024e76:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90024e7a:	eba3 0309 	sub.w	r3, r3, r9
90024e7e:	b289      	uxth	r1, r1
90024e80:	b29b      	uxth	r3, r3
90024e82:	ebae 0e01 	sub.w	lr, lr, r1
90024e86:	435f      	muls	r7, r3
90024e88:	fa1f fe8e 	uxth.w	lr, lr
90024e8c:	fb0e 770a 	mla	r7, lr, sl, r7
90024e90:	f892 a002 	ldrb.w	sl, [r2, #2]
90024e94:	fb01 770a 	mla	r7, r1, sl, r7
90024e98:	f890 a002 	ldrb.w	sl, [r0, #2]
90024e9c:	fb09 7a0a 	mla	sl, r9, sl, r7
90024ea0:	f814 7008 	ldrb.w	r7, [r4, r8]
90024ea4:	f896 8000 	ldrb.w	r8, [r6]
90024ea8:	7876      	ldrb	r6, [r6, #1]
90024eaa:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90024eae:	fb03 f808 	mul.w	r8, r3, r8
90024eb2:	4373      	muls	r3, r6
90024eb4:	7856      	ldrb	r6, [r2, #1]
90024eb6:	fb0e 8807 	mla	r8, lr, r7, r8
90024eba:	7817      	ldrb	r7, [r2, #0]
90024ebc:	fb0e 330c 	mla	r3, lr, ip, r3
90024ec0:	fb01 8807 	mla	r8, r1, r7, r8
90024ec4:	7807      	ldrb	r7, [r0, #0]
90024ec6:	fb01 3306 	mla	r3, r1, r6, r3
90024eca:	fb09 8707 	mla	r7, r9, r7, r8
90024ece:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024ed2:	ea47 070a 	orr.w	r7, r7, sl
90024ed6:	f890 a001 	ldrb.w	sl, [r0, #1]
90024eda:	fb09 3a0a 	mla	sl, r9, sl, r3
90024ede:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024ee0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90024ee4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90024ee8:	ea47 070a 	orr.w	r7, r7, sl
90024eec:	f823 7b02 	strh.w	r7, [r3], #2
90024ef0:	930b      	str	r3, [sp, #44]	@ 0x2c
90024ef2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024ef4:	449b      	add	fp, r3
90024ef6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024ef8:	441d      	add	r5, r3
90024efa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024efc:	3b01      	subs	r3, #1
90024efe:	9309      	str	r3, [sp, #36]	@ 0x24
90024f00:	e714      	b.n	90024d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90024f02:	b149      	cbz	r1, 90024f18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90024f04:	5cba      	ldrb	r2, [r7, r2]
90024f06:	4660      	mov	r0, ip
90024f08:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024f0c:	4422      	add	r2, r4
90024f0e:	4666      	mov	r6, ip
90024f10:	e7a5      	b.n	90024e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90024f12:	4660      	mov	r0, ip
90024f14:	4662      	mov	r2, ip
90024f16:	e7a2      	b.n	90024e5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90024f18:	4660      	mov	r0, ip
90024f1a:	4662      	mov	r2, ip
90024f1c:	e7f7      	b.n	90024f0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90024f1e:	b00f      	add	sp, #60	@ 0x3c
90024f20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024f24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90024f24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024f28:	b085      	sub	sp, #20
90024f2a:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
90024f2e:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
90024f32:	9102      	str	r1, [sp, #8]
90024f34:	2c00      	cmp	r4, #0
90024f36:	fb04 710c 	mla	r1, r4, ip, r7
90024f3a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
90024f3e:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
90024f42:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90024f46:	eb02 0e01 	add.w	lr, r2, r1
90024f4a:	f2c0 8122 	blt.w	90025192 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90024f4e:	45a0      	cmp	r8, r4
90024f50:	f340 811f 	ble.w	90025192 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90024f54:	2f00      	cmp	r7, #0
90024f56:	f2c0 811a 	blt.w	9002518e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90024f5a:	45bc      	cmp	ip, r7
90024f5c:	f340 8117 	ble.w	9002518e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90024f60:	5c52      	ldrb	r2, [r2, r1]
90024f62:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90024f66:	1c7a      	adds	r2, r7, #1
90024f68:	f100 8116 	bmi.w	90025198 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90024f6c:	4594      	cmp	ip, r2
90024f6e:	f340 8113 	ble.w	90025198 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90024f72:	2e00      	cmp	r6, #0
90024f74:	f000 8112 	beq.w	9002519c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90024f78:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024f7c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90024f80:	3401      	adds	r4, #1
90024f82:	f100 810f 	bmi.w	900251a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90024f86:	45a0      	cmp	r8, r4
90024f88:	f340 810c 	ble.w	900251a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90024f8c:	2800      	cmp	r0, #0
90024f8e:	f000 810c 	beq.w	900251aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90024f92:	2f00      	cmp	r7, #0
90024f94:	f2c0 8104 	blt.w	900251a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90024f98:	45bc      	cmp	ip, r7
90024f9a:	f340 8101 	ble.w	900251a0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90024f9e:	f81e 200c 	ldrb.w	r2, [lr, ip]
90024fa2:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90024fa6:	3701      	adds	r7, #1
90024fa8:	f100 8102 	bmi.w	900251b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90024fac:	45bc      	cmp	ip, r7
90024fae:	f340 80ff 	ble.w	900251b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90024fb2:	2e00      	cmp	r6, #0
90024fb4:	f000 80fe 	beq.w	900251b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90024fb8:	44f4      	add	ip, lr
90024fba:	f89c 2001 	ldrb.w	r2, [ip, #1]
90024fbe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90024fc2:	b2b6      	uxth	r6, r6
90024fc4:	b280      	uxth	r0, r0
90024fc6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90024fca:	fb00 fe06 	mul.w	lr, r0, r6
90024fce:	0136      	lsls	r6, r6, #4
90024fd0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90024fd4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90024fd8:	eba6 070e 	sub.w	r7, r6, lr
90024fdc:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90024fe0:	ea4f 6914 	mov.w	r9, r4, lsr #24
90024fe4:	b280      	uxth	r0, r0
90024fe6:	b2bf      	uxth	r7, r7
90024fe8:	1a1b      	subs	r3, r3, r0
90024fea:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024fee:	fb0a f607 	mul.w	r6, sl, r7
90024ff2:	b29b      	uxth	r3, r3
90024ff4:	fb0b 6603 	mla	r6, fp, r3, r6
90024ff8:	fb00 6609 	mla	r6, r0, r9, r6
90024ffc:	fb0e 6608 	mla	r6, lr, r8, r6
90025000:	f3c6 2607 	ubfx	r6, r6, #8, #8
90025004:	9600      	str	r6, [sp, #0]
90025006:	2e00      	cmp	r6, #0
90025008:	f000 80be 	beq.w	90025188 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
9002500c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025010:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90025014:	9e02      	ldr	r6, [sp, #8]
90025016:	fb0b fc0c 	mul.w	ip, fp, ip
9002501a:	fb0b f505 	mul.w	r5, fp, r5
9002501e:	8836      	ldrh	r6, [r6, #0]
90025020:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90025024:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025028:	9501      	str	r5, [sp, #4]
9002502a:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
9002502e:	44dc      	add	ip, fp
90025030:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025034:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90025038:	9503      	str	r5, [sp, #12]
9002503a:	9d01      	ldr	r5, [sp, #4]
9002503c:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90025040:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90025044:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90025048:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002504c:	fb0a fc0c 	mul.w	ip, sl, ip
90025050:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90025054:	fb0a fa01 	mul.w	sl, sl, r1
90025058:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002505c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025060:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90025064:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025068:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002506c:	4465      	add	r5, ip
9002506e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025072:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90025076:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002507a:	fb09 fc0c 	mul.w	ip, r9, ip
9002507e:	0a2d      	lsrs	r5, r5, #8
90025080:	fb09 f904 	mul.w	r9, r9, r4
90025084:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025088:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002508c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025090:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90025094:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025098:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002509c:	437d      	muls	r5, r7
9002509e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900250a2:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
900250a6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900250aa:	4461      	add	r1, ip
900250ac:	fb08 f404 	mul.w	r4, r8, r4
900250b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
900250b4:	fb08 f802 	mul.w	r8, r8, r2
900250b8:	0a09      	lsrs	r1, r1, #8
900250ba:	0a22      	lsrs	r2, r4, #8
900250bc:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900250c0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900250c4:	fb07 f70a 	mul.w	r7, r7, sl
900250c8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900250cc:	4414      	add	r4, r2
900250ce:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900250d2:	0a24      	lsrs	r4, r4, #8
900250d4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900250d8:	9a03      	ldr	r2, [sp, #12]
900250da:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900250de:	fb02 5503 	mla	r5, r2, r3, r5
900250e2:	ea4f 2818 	mov.w	r8, r8, lsr #8
900250e6:	9a00      	ldr	r2, [sp, #0]
900250e8:	fb04 540e 	mla	r4, r4, lr, r5
900250ec:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900250f0:	1235      	asrs	r5, r6, #8
900250f2:	fb01 4100 	mla	r1, r1, r0, r4
900250f6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900250fa:	0a09      	lsrs	r1, r1, #8
900250fc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90025100:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90025104:	fb03 7101 	mla	r1, r3, r1, r7
90025108:	fb0e 1e08 	mla	lr, lr, r8, r1
9002510c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90025110:	fb00 e101 	mla	r1, r0, r1, lr
90025114:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90025118:	b287      	uxth	r7, r0
9002511a:	0a09      	lsrs	r1, r1, #8
9002511c:	437a      	muls	r2, r7
9002511e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025122:	1c53      	adds	r3, r2, #1
90025124:	4321      	orrs	r1, r4
90025126:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002512a:	0c0a      	lsrs	r2, r1, #16
9002512c:	f3c1 2407 	ubfx	r4, r1, #8, #8
90025130:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90025134:	b2c8      	uxtb	r0, r1
90025136:	fb12 f207 	smulbb	r2, r2, r7
9002513a:	fb14 f407 	smulbb	r4, r4, r7
9002513e:	b2db      	uxtb	r3, r3
90025140:	fb10 f007 	smulbb	r0, r0, r7
90025144:	fb05 2503 	mla	r5, r5, r3, r2
90025148:	10f2      	asrs	r2, r6, #3
9002514a:	00f6      	lsls	r6, r6, #3
9002514c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025150:	b2ad      	uxth	r5, r5
90025152:	b2f6      	uxtb	r6, r6
90025154:	fb02 4203 	mla	r2, r2, r3, r4
90025158:	fb06 0303 	mla	r3, r6, r3, r0
9002515c:	b294      	uxth	r4, r2
9002515e:	b299      	uxth	r1, r3
90025160:	1c6b      	adds	r3, r5, #1
90025162:	1c62      	adds	r2, r4, #1
90025164:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025168:	1c4b      	adds	r3, r1, #1
9002516a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002516e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90025172:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025176:	0952      	lsrs	r2, r2, #5
90025178:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002517c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025180:	432b      	orrs	r3, r5
90025182:	4313      	orrs	r3, r2
90025184:	9a02      	ldr	r2, [sp, #8]
90025186:	8013      	strh	r3, [r2, #0]
90025188:	b005      	add	sp, #20
9002518a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002518e:	2500      	movs	r5, #0
90025190:	e6e9      	b.n	90024f66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90025192:	2100      	movs	r1, #0
90025194:	460d      	mov	r5, r1
90025196:	e6f3      	b.n	90024f80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90025198:	2100      	movs	r1, #0
9002519a:	e6f1      	b.n	90024f80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002519c:	4631      	mov	r1, r6
9002519e:	e6ef      	b.n	90024f80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
900251a0:	2400      	movs	r4, #0
900251a2:	e700      	b.n	90024fa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
900251a4:	2200      	movs	r2, #0
900251a6:	4614      	mov	r4, r2
900251a8:	e70b      	b.n	90024fc2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900251aa:	4602      	mov	r2, r0
900251ac:	4604      	mov	r4, r0
900251ae:	e708      	b.n	90024fc2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900251b0:	2200      	movs	r2, #0
900251b2:	e706      	b.n	90024fc2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
900251b4:	4632      	mov	r2, r6
900251b6:	e704      	b.n	90024fc2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

900251b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900251b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900251bc:	b09f      	sub	sp, #124	@ 0x7c
900251be:	921b      	str	r2, [sp, #108]	@ 0x6c
900251c0:	9309      	str	r3, [sp, #36]	@ 0x24
900251c2:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
900251c4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
900251c8:	901d      	str	r0, [sp, #116]	@ 0x74
900251ca:	931c      	str	r3, [sp, #112]	@ 0x70
900251cc:	6850      	ldr	r0, [r2, #4]
900251ce:	9119      	str	r1, [sp, #100]	@ 0x64
900251d0:	6812      	ldr	r2, [r2, #0]
900251d2:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900251d4:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
900251d8:	fb00 1303 	mla	r3, r0, r3, r1
900251dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900251e0:	930c      	str	r3, [sp, #48]	@ 0x30
900251e2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900251e4:	681b      	ldr	r3, [r3, #0]
900251e6:	9312      	str	r3, [sp, #72]	@ 0x48
900251e8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900251ea:	685e      	ldr	r6, [r3, #4]
900251ec:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
900251f0:	3604      	adds	r6, #4
900251f2:	930d      	str	r3, [sp, #52]	@ 0x34
900251f4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900251f6:	2b00      	cmp	r3, #0
900251f8:	dc03      	bgt.n	90025202 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900251fa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900251fc:	2b00      	cmp	r3, #0
900251fe:	f340 8387 	ble.w	90025910 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90025202:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90025204:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025208:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002520c:	1e48      	subs	r0, r1, #1
9002520e:	1e57      	subs	r7, r2, #1
90025210:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025212:	2b00      	cmp	r3, #0
90025214:	f340 8194 	ble.w	90025540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
90025218:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002521a:	142b      	asrs	r3, r5, #16
9002521c:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025220:	d406      	bmi.n	90025230 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025222:	4584      	cmp	ip, r0
90025224:	da04      	bge.n	90025230 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90025226:	2b00      	cmp	r3, #0
90025228:	db02      	blt.n	90025230 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002522a:	42bb      	cmp	r3, r7
9002522c:	f2c0 8189 	blt.w	90025542 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90025230:	f11c 0c01 	adds.w	ip, ip, #1
90025234:	f100 8177 	bmi.w	90025526 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90025238:	4561      	cmp	r1, ip
9002523a:	f2c0 8174 	blt.w	90025526 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002523e:	3301      	adds	r3, #1
90025240:	f100 8171 	bmi.w	90025526 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90025244:	429a      	cmp	r2, r3
90025246:	f2c0 816e 	blt.w	90025526 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002524a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002524c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9002524e:	931a      	str	r3, [sp, #104]	@ 0x68
90025250:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90025252:	2b00      	cmp	r3, #0
90025254:	f340 8193 	ble.w	9002557e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90025258:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002525a:	ea4f 4c25 	mov.w	ip, r5, asr #16
9002525e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90025262:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025266:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90025268:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
9002526c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002526e:	141b      	asrs	r3, r3, #16
90025270:	f100 81d6 	bmi.w	90025620 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90025274:	f100 38ff 	add.w	r8, r0, #4294967295
90025278:	4543      	cmp	r3, r8
9002527a:	f280 81d1 	bge.w	90025620 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002527e:	f1bc 0f00 	cmp.w	ip, #0
90025282:	f2c0 81cd 	blt.w	90025620 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90025286:	f10e 38ff 	add.w	r8, lr, #4294967295
9002528a:	45c4      	cmp	ip, r8
9002528c:	f280 81c8 	bge.w	90025620 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90025290:	b200      	sxth	r0, r0
90025292:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025294:	fb0c 3300 	mla	r3, ip, r0, r3
90025298:	eb04 0803 	add.w	r8, r4, r3
9002529c:	5ce3      	ldrb	r3, [r4, r3]
9002529e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900252a2:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900252a6:	2a00      	cmp	r2, #0
900252a8:	f000 81af 	beq.w	9002560a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900252ac:	f898 c001 	ldrb.w	ip, [r8, #1]
900252b0:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900252b4:	940e      	str	r4, [sp, #56]	@ 0x38
900252b6:	0e24      	lsrs	r4, r4, #24
900252b8:	9415      	str	r4, [sp, #84]	@ 0x54
900252ba:	b179      	cbz	r1, 900252dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900252bc:	eb08 0c00 	add.w	ip, r8, r0
900252c0:	f818 0000 	ldrb.w	r0, [r8, r0]
900252c4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900252c8:	900a      	str	r0, [sp, #40]	@ 0x28
900252ca:	0e00      	lsrs	r0, r0, #24
900252cc:	9013      	str	r0, [sp, #76]	@ 0x4c
900252ce:	f89c 0001 	ldrb.w	r0, [ip, #1]
900252d2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900252d6:	900f      	str	r0, [sp, #60]	@ 0x3c
900252d8:	0e00      	lsrs	r0, r0, #24
900252da:	9016      	str	r0, [sp, #88]	@ 0x58
900252dc:	b292      	uxth	r2, r2
900252de:	9815      	ldr	r0, [sp, #84]	@ 0x54
900252e0:	b289      	uxth	r1, r1
900252e2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900252e4:	fb02 f901 	mul.w	r9, r2, r1
900252e8:	0112      	lsls	r2, r2, #4
900252ea:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900252ee:	eba2 0809 	sub.w	r8, r2, r9
900252f2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900252f6:	b289      	uxth	r1, r1
900252f8:	fa1f f888 	uxth.w	r8, r8
900252fc:	1a52      	subs	r2, r2, r1
900252fe:	fb08 f000 	mul.w	r0, r8, r0
90025302:	b292      	uxth	r2, r2
90025304:	fb02 000e 	mla	r0, r2, lr, r0
90025308:	fb01 0004 	mla	r0, r1, r4, r0
9002530c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
9002530e:	fb09 0004 	mla	r0, r9, r4, r0
90025312:	f3c0 2007 	ubfx	r0, r0, #8, #8
90025316:	2800      	cmp	r0, #0
90025318:	f000 80fa 	beq.w	90025510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002531c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90025320:	d01b      	beq.n	9002535a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90025322:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025326:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002532a:	fb0e fa0a 	mul.w	sl, lr, sl
9002532e:	fb0e fe03 	mul.w	lr, lr, r3
90025332:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025336:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002533a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002533e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025342:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90025346:	4453      	add	r3, sl
90025348:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002534c:	0a1b      	lsrs	r3, r3, #8
9002534e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025352:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025356:	ea43 030c 	orr.w	r3, r3, ip
9002535a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002535c:	2cff      	cmp	r4, #255	@ 0xff
9002535e:	d021      	beq.n	900253a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90025360:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025362:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025366:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025368:	fb04 fb0b 	mul.w	fp, r4, fp
9002536c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002536e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025372:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025374:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025378:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002537c:	fb04 fa0a 	mul.w	sl, r4, sl
90025380:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025384:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025388:	44de      	add	lr, fp
9002538a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002538e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025392:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025396:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002539a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002539e:	ea4e 040a 	orr.w	r4, lr, sl
900253a2:	940e      	str	r4, [sp, #56]	@ 0x38
900253a4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900253a6:	2cff      	cmp	r4, #255	@ 0xff
900253a8:	d021      	beq.n	900253ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900253aa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900253ac:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900253b0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900253b2:	fb04 fb0b 	mul.w	fp, r4, fp
900253b6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900253b8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900253bc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900253be:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900253c2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900253c6:	fb04 fa0a 	mul.w	sl, r4, sl
900253ca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900253ce:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900253d2:	44de      	add	lr, fp
900253d4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900253d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900253dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900253e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900253e4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900253e8:	ea4e 040a 	orr.w	r4, lr, sl
900253ec:	940a      	str	r4, [sp, #40]	@ 0x28
900253ee:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900253f0:	2cff      	cmp	r4, #255	@ 0xff
900253f2:	d021      	beq.n	90025438 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
900253f4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900253f6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900253fa:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900253fc:	fb04 fb0b 	mul.w	fp, r4, fp
90025400:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025402:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025406:	9c16      	ldr	r4, [sp, #88]	@ 0x58
90025408:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002540c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025410:	fb04 fa0a 	mul.w	sl, r4, sl
90025414:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025418:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002541c:	44de      	add	lr, fp
9002541e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025422:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025426:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002542a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002542e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025432:	ea4e 040a 	orr.w	r4, lr, sl
90025436:	940f      	str	r4, [sp, #60]	@ 0x3c
90025438:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002543a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
9002543e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025442:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025446:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025448:	fb08 fc0c 	mul.w	ip, r8, ip
9002544c:	fb02 cc0e 	mla	ip, r2, lr, ip
90025450:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90025454:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025456:	fb01 cc0e 	mla	ip, r1, lr, ip
9002545a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
9002545e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025460:	fb09 cc0e 	mla	ip, r9, lr, ip
90025464:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90025468:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002546a:	fb08 f80e 	mul.w	r8, r8, lr
9002546e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025472:	fb02 8303 	mla	r3, r2, r3, r8
90025476:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90025478:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002547c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90025480:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90025482:	fb01 330a 	mla	r3, r1, sl, r3
90025486:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
9002548a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002548c:	fb09 3901 	mla	r9, r9, r1, r3
90025490:	883b      	ldrh	r3, [r7, #0]
90025492:	4342      	muls	r2, r0
90025494:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025498:	1c50      	adds	r0, r2, #1
9002549a:	1219      	asrs	r1, r3, #8
9002549c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900254a0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900254a4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900254a8:	ea4c 0c09 	orr.w	ip, ip, r9
900254ac:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900254b0:	ea4f 421c 	mov.w	r2, ip, lsr #16
900254b4:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900254b8:	b2c0      	uxtb	r0, r0
900254ba:	fb12 f204 	smulbb	r2, r2, r4
900254be:	fa5f fc8c 	uxtb.w	ip, ip
900254c2:	fb1e fe04 	smulbb	lr, lr, r4
900254c6:	fb01 2100 	mla	r1, r1, r0, r2
900254ca:	10da      	asrs	r2, r3, #3
900254cc:	fb1c fc04 	smulbb	ip, ip, r4
900254d0:	00db      	lsls	r3, r3, #3
900254d2:	b289      	uxth	r1, r1
900254d4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900254d8:	b2db      	uxtb	r3, r3
900254da:	fb02 e200 	mla	r2, r2, r0, lr
900254de:	fb03 c300 	mla	r3, r3, r0, ip
900254e2:	b292      	uxth	r2, r2
900254e4:	fa1f fc83 	uxth.w	ip, r3
900254e8:	1c4b      	adds	r3, r1, #1
900254ea:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900254ee:	f10c 0301 	add.w	r3, ip, #1
900254f2:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900254f6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900254fa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900254fe:	430b      	orrs	r3, r1
90025500:	1c51      	adds	r1, r2, #1
90025502:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025506:	0952      	lsrs	r2, r2, #5
90025508:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002550c:	4313      	orrs	r3, r2
9002550e:	803b      	strh	r3, [r7, #0]
90025510:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90025512:	3702      	adds	r7, #2
90025514:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90025516:	441a      	add	r2, r3
90025518:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002551a:	441d      	add	r5, r3
9002551c:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
9002551e:	9229      	str	r2, [sp, #164]	@ 0xa4
90025520:	3b01      	subs	r3, #1
90025522:	931a      	str	r3, [sp, #104]	@ 0x68
90025524:	e694      	b.n	90025250 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90025526:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90025528:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002552a:	441c      	add	r4, r3
9002552c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002552e:	441d      	add	r5, r3
90025530:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025532:	9429      	str	r4, [sp, #164]	@ 0xa4
90025534:	3b01      	subs	r3, #1
90025536:	9309      	str	r3, [sp, #36]	@ 0x24
90025538:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002553a:	3302      	adds	r3, #2
9002553c:	930c      	str	r3, [sp, #48]	@ 0x30
9002553e:	e667      	b.n	90025210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025540:	d024      	beq.n	9002558c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90025542:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025544:	982b      	ldr	r0, [sp, #172]	@ 0xac
90025546:	3b01      	subs	r3, #1
90025548:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002554a:	fb00 4003 	mla	r0, r0, r3, r4
9002554e:	1400      	asrs	r0, r0, #16
90025550:	f53f ae7b 	bmi.w	9002524a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025554:	3901      	subs	r1, #1
90025556:	4288      	cmp	r0, r1
90025558:	f6bf ae77 	bge.w	9002524a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002555c:	992c      	ldr	r1, [sp, #176]	@ 0xb0
9002555e:	fb01 5303 	mla	r3, r1, r3, r5
90025562:	141b      	asrs	r3, r3, #16
90025564:	f53f ae71 	bmi.w	9002524a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025568:	3a01      	subs	r2, #1
9002556a:	4293      	cmp	r3, r2
9002556c:	f6bf ae6d 	bge.w	9002524a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025570:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90025574:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90025578:	f1bb 0f00 	cmp.w	fp, #0
9002557c:	dc70      	bgt.n	90025660 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9002557e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025580:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025584:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90025586:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002558a:	930c      	str	r3, [sp, #48]	@ 0x30
9002558c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002558e:	2b00      	cmp	r3, #0
90025590:	f340 81be 	ble.w	90025910 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90025594:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025598:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002559a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002559e:	ee70 0aa4 	vadd.f32	s1, s1, s9
900255a2:	eef0 6a62 	vmov.f32	s13, s5
900255a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900255aa:	ee31 1a05 	vadd.f32	s2, s2, s10
900255ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900255b2:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
900255b6:	eef0 6a43 	vmov.f32	s13, s6
900255ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900255be:	ee16 5a90 	vmov	r5, s13
900255c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900255c6:	ee61 7a27 	vmul.f32	s15, s2, s15
900255ca:	ee77 2a62 	vsub.f32	s5, s14, s5
900255ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
900255d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900255d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900255da:	ee12 2a90 	vmov	r2, s5
900255de:	eef0 2a47 	vmov.f32	s5, s14
900255e2:	fb92 f3f3 	sdiv	r3, r2, r3
900255e6:	ee13 2a10 	vmov	r2, s6
900255ea:	932b      	str	r3, [sp, #172]	@ 0xac
900255ec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900255ee:	eeb0 3a67 	vmov.f32	s6, s15
900255f2:	fb92 f3f3 	sdiv	r3, r2, r3
900255f6:	932c      	str	r3, [sp, #176]	@ 0xb0
900255f8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900255fa:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
900255fc:	3b01      	subs	r3, #1
900255fe:	9319      	str	r3, [sp, #100]	@ 0x64
90025600:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025602:	bf08      	it	eq
90025604:	4613      	moveq	r3, r2
90025606:	9309      	str	r3, [sp, #36]	@ 0x24
90025608:	e5f4      	b.n	900251f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002560a:	2900      	cmp	r1, #0
9002560c:	f43f ae66 	beq.w	900252dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90025610:	f818 0000 	ldrb.w	r0, [r8, r0]
90025614:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90025618:	900a      	str	r0, [sp, #40]	@ 0x28
9002561a:	0e00      	lsrs	r0, r0, #24
9002561c:	9013      	str	r0, [sp, #76]	@ 0x4c
9002561e:	e65d      	b.n	900252dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90025620:	f113 0801 	adds.w	r8, r3, #1
90025624:	f53f af74 	bmi.w	90025510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025628:	4540      	cmp	r0, r8
9002562a:	f6ff af71 	blt.w	90025510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002562e:	f11c 0801 	adds.w	r8, ip, #1
90025632:	f53f af6d 	bmi.w	90025510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025636:	45c6      	cmp	lr, r8
90025638:	f6ff af6a 	blt.w	90025510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002563c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
9002563e:	b200      	sxth	r0, r0
90025640:	9302      	str	r3, [sp, #8]
90025642:	fa0f f38e 	sxth.w	r3, lr
90025646:	9000      	str	r0, [sp, #0]
90025648:	9301      	str	r3, [sp, #4]
9002564a:	4633      	mov	r3, r6
9002564c:	981d      	ldr	r0, [sp, #116]	@ 0x74
9002564e:	e9cd 1405 	strd	r1, r4, [sp, #20]
90025652:	e9cd c203 	strd	ip, r2, [sp, #12]
90025656:	4639      	mov	r1, r7
90025658:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9002565a:	f7ff fc63 	bl	90024f24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
9002565e:	e757      	b.n	90025510 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025660:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90025662:	f3c5 3003 	ubfx	r0, r5, #12, #4
90025666:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90025668:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002566c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002566e:	1427      	asrs	r7, r4, #16
90025670:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025672:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025676:	142b      	asrs	r3, r5, #16
90025678:	fb01 7303 	mla	r3, r1, r3, r7
9002567c:	18e7      	adds	r7, r4, r3
9002567e:	5ce3      	ldrb	r3, [r4, r3]
90025680:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025684:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025688:	2a00      	cmp	r2, #0
9002568a:	f000 8137 	beq.w	900258fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
9002568e:	f897 e001 	ldrb.w	lr, [r7, #1]
90025692:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90025696:	9410      	str	r4, [sp, #64]	@ 0x40
90025698:	0e24      	lsrs	r4, r4, #24
9002569a:	9417      	str	r4, [sp, #92]	@ 0x5c
9002569c:	b170      	cbz	r0, 900256bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002569e:	eb07 0e01 	add.w	lr, r7, r1
900256a2:	5c79      	ldrb	r1, [r7, r1]
900256a4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900256a8:	910b      	str	r1, [sp, #44]	@ 0x2c
900256aa:	0e09      	lsrs	r1, r1, #24
900256ac:	9114      	str	r1, [sp, #80]	@ 0x50
900256ae:	f89e 1001 	ldrb.w	r1, [lr, #1]
900256b2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900256b6:	9111      	str	r1, [sp, #68]	@ 0x44
900256b8:	0e09      	lsrs	r1, r1, #24
900256ba:	9118      	str	r1, [sp, #96]	@ 0x60
900256bc:	b292      	uxth	r2, r2
900256be:	9917      	ldr	r1, [sp, #92]	@ 0x5c
900256c0:	b280      	uxth	r0, r0
900256c2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900256c4:	fb02 f800 	mul.w	r8, r2, r0
900256c8:	0112      	lsls	r2, r2, #4
900256ca:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900256ce:	eba2 0e08 	sub.w	lr, r2, r8
900256d2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900256d6:	b280      	uxth	r0, r0
900256d8:	fa1f fe8e 	uxth.w	lr, lr
900256dc:	1a12      	subs	r2, r2, r0
900256de:	fb0e f101 	mul.w	r1, lr, r1
900256e2:	b292      	uxth	r2, r2
900256e4:	fb02 110c 	mla	r1, r2, ip, r1
900256e8:	fb00 1104 	mla	r1, r0, r4, r1
900256ec:	9c18      	ldr	r4, [sp, #96]	@ 0x60
900256ee:	fb08 1104 	mla	r1, r8, r4, r1
900256f2:	f3c1 2107 	ubfx	r1, r1, #8, #8
900256f6:	2900      	cmp	r1, #0
900256f8:	f000 80f5 	beq.w	900258e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
900256fc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90025700:	d019      	beq.n	90025736 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90025702:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025706:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002570a:	fb0c fa0a 	mul.w	sl, ip, sl
9002570e:	fb0c fc03 	mul.w	ip, ip, r3
90025712:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025716:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002571a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002571e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025722:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90025726:	4453      	add	r3, sl
90025728:	0a3f      	lsrs	r7, r7, #8
9002572a:	0a1b      	lsrs	r3, r3, #8
9002572c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90025730:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025734:	433b      	orrs	r3, r7
90025736:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90025738:	2cff      	cmp	r4, #255	@ 0xff
9002573a:	d020      	beq.n	9002577e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
9002573c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002573e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025742:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90025744:	4367      	muls	r7, r4
90025746:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025748:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002574c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025750:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90025752:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025756:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002575a:	fb04 fa0a 	mul.w	sl, r4, sl
9002575e:	44bc      	add	ip, r7
90025760:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025764:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025768:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002576c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025770:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025774:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025778:	ea4c 040a 	orr.w	r4, ip, sl
9002577c:	9410      	str	r4, [sp, #64]	@ 0x40
9002577e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025780:	2cff      	cmp	r4, #255	@ 0xff
90025782:	d020      	beq.n	900257c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90025784:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025786:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002578a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002578c:	4367      	muls	r7, r4
9002578e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025790:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025794:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025798:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002579a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002579e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900257a2:	fb04 fa0a 	mul.w	sl, r4, sl
900257a6:	44bc      	add	ip, r7
900257a8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900257ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900257b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900257b4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900257b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900257bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900257c0:	ea4c 040a 	orr.w	r4, ip, sl
900257c4:	940b      	str	r4, [sp, #44]	@ 0x2c
900257c6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
900257c8:	2cff      	cmp	r4, #255	@ 0xff
900257ca:	d020      	beq.n	9002580e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
900257cc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900257ce:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900257d2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
900257d4:	4367      	muls	r7, r4
900257d6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900257d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900257dc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900257e0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
900257e2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900257e6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900257ea:	fb04 fa0a 	mul.w	sl, r4, sl
900257ee:	44bc      	add	ip, r7
900257f0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900257f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900257f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900257fc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025800:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025804:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025808:	ea4c 040a 	orr.w	r4, ip, sl
9002580c:	9411      	str	r4, [sp, #68]	@ 0x44
9002580e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025810:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90025814:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025818:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002581c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002581e:	fb0e f707 	mul.w	r7, lr, r7
90025822:	fb02 770c 	mla	r7, r2, ip, r7
90025826:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
9002582a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002582c:	fb00 770c 	mla	r7, r0, ip, r7
90025830:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025834:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025836:	fb08 770c 	mla	r7, r8, ip, r7
9002583a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
9002583e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025840:	fb0e fe0c 	mul.w	lr, lr, ip
90025844:	0a3f      	lsrs	r7, r7, #8
90025846:	fb02 e303 	mla	r3, r2, r3, lr
9002584a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002584c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90025850:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90025854:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90025856:	fb00 330a 	mla	r3, r0, sl, r3
9002585a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
9002585e:	f8b9 0000 	ldrh.w	r0, [r9]
90025862:	fb08 3c0c 	mla	ip, r8, ip, r3
90025866:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025868:	1202      	asrs	r2, r0, #8
9002586a:	434b      	muls	r3, r1
9002586c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025870:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025874:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025878:	1c59      	adds	r1, r3, #1
9002587a:	ea47 070c 	orr.w	r7, r7, ip
9002587e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90025882:	0c3b      	lsrs	r3, r7, #16
90025884:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90025888:	f3c7 2c07 	ubfx	ip, r7, #8, #8
9002588c:	b2ff      	uxtb	r7, r7
9002588e:	fb13 f304 	smulbb	r3, r3, r4
90025892:	b2c9      	uxtb	r1, r1
90025894:	fb1c fc04 	smulbb	ip, ip, r4
90025898:	fb02 3201 	mla	r2, r2, r1, r3
9002589c:	10c3      	asrs	r3, r0, #3
9002589e:	fb17 f704 	smulbb	r7, r7, r4
900258a2:	00c0      	lsls	r0, r0, #3
900258a4:	b292      	uxth	r2, r2
900258a6:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900258aa:	b2c0      	uxtb	r0, r0
900258ac:	fb03 c301 	mla	r3, r3, r1, ip
900258b0:	f102 0c01 	add.w	ip, r2, #1
900258b4:	fb00 7001 	mla	r0, r0, r1, r7
900258b8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
900258bc:	b280      	uxth	r0, r0
900258be:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
900258c2:	b29b      	uxth	r3, r3
900258c4:	1c42      	adds	r2, r0, #1
900258c6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900258ca:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900258ce:	ea42 020c 	orr.w	r2, r2, ip
900258d2:	f103 0c01 	add.w	ip, r3, #1
900258d6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900258da:	095b      	lsrs	r3, r3, #5
900258dc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900258e0:	431a      	orrs	r2, r3
900258e2:	f8a9 2000 	strh.w	r2, [r9]
900258e6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900258e8:	f109 0902 	add.w	r9, r9, #2
900258ec:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900258ee:	f10b 3bff 	add.w	fp, fp, #4294967295
900258f2:	441a      	add	r2, r3
900258f4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900258f6:	9229      	str	r2, [sp, #164]	@ 0xa4
900258f8:	441d      	add	r5, r3
900258fa:	e63d      	b.n	90025578 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
900258fc:	2800      	cmp	r0, #0
900258fe:	f43f aedd 	beq.w	900256bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90025902:	5c79      	ldrb	r1, [r7, r1]
90025904:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025908:	910b      	str	r1, [sp, #44]	@ 0x2c
9002590a:	0e09      	lsrs	r1, r1, #24
9002590c:	9114      	str	r1, [sp, #80]	@ 0x50
9002590e:	e6d5      	b.n	900256bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90025910:	b01f      	add	sp, #124	@ 0x7c
90025912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90025916 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90025916:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002591a:	b089      	sub	sp, #36	@ 0x24
9002591c:	9101      	str	r1, [sp, #4]
9002591e:	9801      	ldr	r0, [sp, #4]
90025920:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90025924:	8800      	ldrh	r0, [r0, #0]
90025926:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
9002592a:	1206      	asrs	r6, r0, #8
9002592c:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90025930:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90025934:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90025938:	9602      	str	r6, [sp, #8]
9002593a:	10c6      	asrs	r6, r0, #3
9002593c:	00c0      	lsls	r0, r0, #3
9002593e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90025942:	b2c0      	uxtb	r0, r0
90025944:	9603      	str	r6, [sp, #12]
90025946:	9004      	str	r0, [sp, #16]
90025948:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
9002594c:	fb07 100c 	mla	r0, r7, ip, r1
90025950:	2f00      	cmp	r7, #0
90025952:	eb02 0e00 	add.w	lr, r2, r0
90025956:	f2c0 810a 	blt.w	90025b6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
9002595a:	45b8      	cmp	r8, r7
9002595c:	f340 8107 	ble.w	90025b6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90025960:	2900      	cmp	r1, #0
90025962:	f2c0 8102 	blt.w	90025b6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90025966:	458c      	cmp	ip, r1
90025968:	f340 80ff 	ble.w	90025b6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002596c:	5c12      	ldrb	r2, [r2, r0]
9002596e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90025972:	1c4a      	adds	r2, r1, #1
90025974:	f100 80fe 	bmi.w	90025b74 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90025978:	4594      	cmp	ip, r2
9002597a:	f340 80fb 	ble.w	90025b74 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
9002597e:	2d00      	cmp	r5, #0
90025980:	f000 80fa 	beq.w	90025b78 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90025984:	f89e 2001 	ldrb.w	r2, [lr, #1]
90025988:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9002598c:	3701      	adds	r7, #1
9002598e:	f100 80f7 	bmi.w	90025b80 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90025992:	45b8      	cmp	r8, r7
90025994:	f340 80f4 	ble.w	90025b80 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90025998:	2c00      	cmp	r4, #0
9002599a:	f000 80f4 	beq.w	90025b86 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
9002599e:	2900      	cmp	r1, #0
900259a0:	eb0e 020c 	add.w	r2, lr, ip
900259a4:	f2c0 80ea 	blt.w	90025b7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900259a8:	458c      	cmp	ip, r1
900259aa:	f340 80e7 	ble.w	90025b7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900259ae:	f81e 700c 	ldrb.w	r7, [lr, ip]
900259b2:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
900259b6:	3101      	adds	r1, #1
900259b8:	f100 80e8 	bmi.w	90025b8c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900259bc:	458c      	cmp	ip, r1
900259be:	f340 80e5 	ble.w	90025b8c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900259c2:	2d00      	cmp	r5, #0
900259c4:	f000 80e4 	beq.w	90025b90 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
900259c8:	7852      	ldrb	r2, [r2, #1]
900259ca:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900259ce:	0e0b      	lsrs	r3, r1, #24
900259d0:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
900259d4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
900259d8:	9300      	str	r3, [sp, #0]
900259da:	b2a4      	uxth	r4, r4
900259dc:	b2ab      	uxth	r3, r5
900259de:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
900259e2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
900259e6:	fb03 f904 	mul.w	r9, r3, r4
900259ea:	011b      	lsls	r3, r3, #4
900259ec:	fb0a f505 	mul.w	r5, sl, r5
900259f0:	ea4f 6817 	mov.w	r8, r7, lsr #24
900259f4:	eba3 0e09 	sub.w	lr, r3, r9
900259f8:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
900259fc:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90025a00:	0a28      	lsrs	r0, r5, #8
90025a02:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90025a06:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90025a0a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90025a0e:	fb0a f303 	mul.w	r3, sl, r3
90025a12:	fb08 f707 	mul.w	r7, r8, r7
90025a16:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90025a1a:	4405      	add	r5, r0
90025a1c:	fb08 fc0c 	mul.w	ip, r8, ip
90025a20:	b2a4      	uxth	r4, r4
90025a22:	0a2d      	lsrs	r5, r5, #8
90025a24:	fa1f fe8e 	uxth.w	lr, lr
90025a28:	1b12      	subs	r2, r2, r4
90025a2a:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90025a2e:	b292      	uxth	r2, r2
90025a30:	9005      	str	r0, [sp, #20]
90025a32:	f503 7080 	add.w	r0, r3, #256	@ 0x100
90025a36:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90025a3a:	ea4f 201c 	mov.w	r0, ip, lsr #8
90025a3e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025a42:	0a1b      	lsrs	r3, r3, #8
90025a44:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90025a48:	9306      	str	r3, [sp, #24]
90025a4a:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
90025a4e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90025a52:	4460      	add	r0, ip
90025a54:	fb0b f303 	mul.w	r3, fp, r3
90025a58:	fb0b f606 	mul.w	r6, fp, r6
90025a5c:	0a00      	lsrs	r0, r0, #8
90025a5e:	0a1d      	lsrs	r5, r3, #8
90025a60:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90025a64:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90025a68:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025a6c:	441d      	add	r5, r3
90025a6e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90025a72:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90025a76:	f507 7380 	add.w	r3, r7, #256	@ 0x100
90025a7a:	0a2d      	lsrs	r5, r5, #8
90025a7c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90025a80:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90025a84:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025a88:	0a36      	lsrs	r6, r6, #8
90025a8a:	0a1b      	lsrs	r3, r3, #8
90025a8c:	fb05 f50e 	mul.w	r5, r5, lr
90025a90:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90025a94:	9307      	str	r3, [sp, #28]
90025a96:	0e0b      	lsrs	r3, r1, #24
90025a98:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025a9c:	fb0e f606 	mul.w	r6, lr, r6
90025aa0:	435f      	muls	r7, r3
90025aa2:	4359      	muls	r1, r3
90025aa4:	9b05      	ldr	r3, [sp, #20]
90025aa6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025aaa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025aae:	fb03 5502 	mla	r5, r3, r2, r5
90025ab2:	9b06      	ldr	r3, [sp, #24]
90025ab4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025ab8:	fb0e fe0b 	mul.w	lr, lr, fp
90025abc:	44bc      	add	ip, r7
90025abe:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90025ac2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025ac6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90025aca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025ace:	0a09      	lsrs	r1, r1, #8
90025ad0:	fb0c 5509 	mla	r5, ip, r9, r5
90025ad4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025ad8:	fb00 5504 	mla	r5, r0, r4, r5
90025adc:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90025ae0:	9b07      	ldr	r3, [sp, #28]
90025ae2:	fb02 6000 	mla	r0, r2, r0, r6
90025ae6:	0a2d      	lsrs	r5, r5, #8
90025ae8:	fb02 e20a 	mla	r2, r2, sl, lr
90025aec:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025af0:	fb09 0001 	mla	r0, r9, r1, r0
90025af4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025af8:	fb04 0003 	mla	r0, r4, r3, r0
90025afc:	9b00      	ldr	r3, [sp, #0]
90025afe:	fb04 2408 	mla	r4, r4, r8, r2
90025b02:	9a04      	ldr	r2, [sp, #16]
90025b04:	0a00      	lsrs	r0, r0, #8
90025b06:	fb09 4903 	mla	r9, r9, r3, r4
90025b0a:	9b02      	ldr	r3, [sp, #8]
90025b0c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90025b10:	ea6f 2929 	mvn.w	r9, r9, asr #8
90025b14:	4305      	orrs	r5, r0
90025b16:	fa5f f989 	uxtb.w	r9, r9
90025b1a:	fb03 f109 	mul.w	r1, r3, r9
90025b1e:	9b03      	ldr	r3, [sp, #12]
90025b20:	fb03 f309 	mul.w	r3, r3, r9
90025b24:	fb02 f909 	mul.w	r9, r2, r9
90025b28:	1c4a      	adds	r2, r1, #1
90025b2a:	1c58      	adds	r0, r3, #1
90025b2c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025b30:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025b34:	0c2a      	lsrs	r2, r5, #16
90025b36:	0a2b      	lsrs	r3, r5, #8
90025b38:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90025b3c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025b40:	0212      	lsls	r2, r2, #8
90025b42:	00db      	lsls	r3, r3, #3
90025b44:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90025b48:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025b4c:	4313      	orrs	r3, r2
90025b4e:	f109 0201 	add.w	r2, r9, #1
90025b52:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90025b56:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90025b5a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90025b5e:	431d      	orrs	r5, r3
90025b60:	9b01      	ldr	r3, [sp, #4]
90025b62:	801d      	strh	r5, [r3, #0]
90025b64:	b009      	add	sp, #36	@ 0x24
90025b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025b6a:	2000      	movs	r0, #0
90025b6c:	e701      	b.n	90025972 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90025b6e:	2600      	movs	r6, #0
90025b70:	4630      	mov	r0, r6
90025b72:	e70b      	b.n	9002598c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025b74:	2600      	movs	r6, #0
90025b76:	e709      	b.n	9002598c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025b78:	462e      	mov	r6, r5
90025b7a:	e707      	b.n	9002598c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025b7c:	2700      	movs	r7, #0
90025b7e:	e71a      	b.n	900259b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90025b80:	2100      	movs	r1, #0
90025b82:	460f      	mov	r7, r1
90025b84:	e723      	b.n	900259ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025b86:	4621      	mov	r1, r4
90025b88:	4627      	mov	r7, r4
90025b8a:	e720      	b.n	900259ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025b8c:	2100      	movs	r1, #0
90025b8e:	e71e      	b.n	900259ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025b90:	4629      	mov	r1, r5
90025b92:	e71c      	b.n	900259ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90025b94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025b98:	b09b      	sub	sp, #108	@ 0x6c
90025b9a:	9218      	str	r2, [sp, #96]	@ 0x60
90025b9c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90025b9e:	9019      	str	r0, [sp, #100]	@ 0x64
90025ba0:	9116      	str	r1, [sp, #88]	@ 0x58
90025ba2:	6850      	ldr	r0, [r2, #4]
90025ba4:	9307      	str	r3, [sp, #28]
90025ba6:	6812      	ldr	r2, [r2, #0]
90025ba8:	9d26      	ldr	r5, [sp, #152]	@ 0x98
90025baa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90025bae:	fb00 1303 	mla	r3, r0, r3, r1
90025bb2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025bb6:	930a      	str	r3, [sp, #40]	@ 0x28
90025bb8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025bba:	681b      	ldr	r3, [r3, #0]
90025bbc:	930f      	str	r3, [sp, #60]	@ 0x3c
90025bbe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025bc0:	685e      	ldr	r6, [r3, #4]
90025bc2:	3604      	adds	r6, #4
90025bc4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025bc6:	2b00      	cmp	r3, #0
90025bc8:	dc03      	bgt.n	90025bd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90025bca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025bcc:	2b00      	cmp	r3, #0
90025bce:	f340 8373 	ble.w	900262b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90025bd2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025bd4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025bd8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025bdc:	1e48      	subs	r0, r1, #1
90025bde:	1e57      	subs	r7, r2, #1
90025be0:	9b07      	ldr	r3, [sp, #28]
90025be2:	2b00      	cmp	r3, #0
90025be4:	f340 818f 	ble.w	90025f06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90025be8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90025bea:	142b      	asrs	r3, r5, #16
90025bec:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025bf0:	d406      	bmi.n	90025c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025bf2:	4584      	cmp	ip, r0
90025bf4:	da04      	bge.n	90025c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025bf6:	2b00      	cmp	r3, #0
90025bf8:	db02      	blt.n	90025c00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025bfa:	42bb      	cmp	r3, r7
90025bfc:	f2c0 8184 	blt.w	90025f08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90025c00:	f11c 0c01 	adds.w	ip, ip, #1
90025c04:	f100 8172 	bmi.w	90025eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025c08:	4561      	cmp	r1, ip
90025c0a:	f2c0 816f 	blt.w	90025eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025c0e:	3301      	adds	r3, #1
90025c10:	f100 816c 	bmi.w	90025eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025c14:	429a      	cmp	r2, r3
90025c16:	f2c0 8169 	blt.w	90025eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025c1a:	9b07      	ldr	r3, [sp, #28]
90025c1c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90025c1e:	9317      	str	r3, [sp, #92]	@ 0x5c
90025c20:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025c22:	2b00      	cmp	r3, #0
90025c24:	f340 818e 	ble.w	90025f44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90025c28:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90025c2a:	ea4f 4c25 	mov.w	ip, r5, asr #16
90025c2e:	f3c5 3003 	ubfx	r0, r5, #12, #4
90025c32:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025c36:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025c38:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90025c3c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90025c3e:	141b      	asrs	r3, r3, #16
90025c40:	f100 81d1 	bmi.w	90025fe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c44:	f101 38ff 	add.w	r8, r1, #4294967295
90025c48:	4543      	cmp	r3, r8
90025c4a:	f280 81cc 	bge.w	90025fe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c4e:	f1bc 0f00 	cmp.w	ip, #0
90025c52:	f2c0 81c8 	blt.w	90025fe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c56:	f10e 38ff 	add.w	r8, lr, #4294967295
90025c5a:	45c4      	cmp	ip, r8
90025c5c:	f280 81c3 	bge.w	90025fe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c60:	b209      	sxth	r1, r1
90025c62:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025c64:	fb0c 3301 	mla	r3, ip, r1, r3
90025c68:	eb04 0803 	add.w	r8, r4, r3
90025c6c:	5ce3      	ldrb	r3, [r4, r3]
90025c6e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025c72:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90025c76:	2a00      	cmp	r2, #0
90025c78:	f000 81aa 	beq.w	90025fd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90025c7c:	f898 c001 	ldrb.w	ip, [r8, #1]
90025c80:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90025c84:	940b      	str	r4, [sp, #44]	@ 0x2c
90025c86:	0e24      	lsrs	r4, r4, #24
90025c88:	9412      	str	r4, [sp, #72]	@ 0x48
90025c8a:	b178      	cbz	r0, 90025cac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025c8c:	eb08 0c01 	add.w	ip, r8, r1
90025c90:	f818 1001 	ldrb.w	r1, [r8, r1]
90025c94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025c98:	9108      	str	r1, [sp, #32]
90025c9a:	0e09      	lsrs	r1, r1, #24
90025c9c:	9110      	str	r1, [sp, #64]	@ 0x40
90025c9e:	f89c 1001 	ldrb.w	r1, [ip, #1]
90025ca2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025ca6:	910c      	str	r1, [sp, #48]	@ 0x30
90025ca8:	0e09      	lsrs	r1, r1, #24
90025caa:	9113      	str	r1, [sp, #76]	@ 0x4c
90025cac:	b292      	uxth	r2, r2
90025cae:	9912      	ldr	r1, [sp, #72]	@ 0x48
90025cb0:	b280      	uxth	r0, r0
90025cb2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025cb4:	fb02 f900 	mul.w	r9, r2, r0
90025cb8:	0112      	lsls	r2, r2, #4
90025cba:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025cbe:	eba2 0809 	sub.w	r8, r2, r9
90025cc2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90025cc6:	b280      	uxth	r0, r0
90025cc8:	fa1f f888 	uxth.w	r8, r8
90025ccc:	1a12      	subs	r2, r2, r0
90025cce:	fb08 f101 	mul.w	r1, r8, r1
90025cd2:	b292      	uxth	r2, r2
90025cd4:	fb02 110e 	mla	r1, r2, lr, r1
90025cd8:	fb00 1104 	mla	r1, r0, r4, r1
90025cdc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025cde:	fb09 1104 	mla	r1, r9, r4, r1
90025ce2:	f3c1 2107 	ubfx	r1, r1, #8, #8
90025ce6:	2900      	cmp	r1, #0
90025ce8:	f000 80f5 	beq.w	90025ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025cec:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90025cf0:	d01b      	beq.n	90025d2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90025cf2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025cf6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025cfa:	fb0e fa0a 	mul.w	sl, lr, sl
90025cfe:	fb0e fe03 	mul.w	lr, lr, r3
90025d02:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025d06:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025d0a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90025d0e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025d12:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90025d16:	4453      	add	r3, sl
90025d18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025d1c:	0a1b      	lsrs	r3, r3, #8
90025d1e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025d22:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025d26:	ea43 030c 	orr.w	r3, r3, ip
90025d2a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025d2c:	2cff      	cmp	r4, #255	@ 0xff
90025d2e:	d021      	beq.n	90025d74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90025d30:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025d32:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025d36:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025d38:	fb04 fb0b 	mul.w	fp, r4, fp
90025d3c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025d3e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025d42:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025d44:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025d48:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025d4c:	fb04 fa0a 	mul.w	sl, r4, sl
90025d50:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d54:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025d58:	44de      	add	lr, fp
90025d5a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025d5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025d62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025d66:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d6a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025d6e:	ea4e 040a 	orr.w	r4, lr, sl
90025d72:	940b      	str	r4, [sp, #44]	@ 0x2c
90025d74:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025d76:	2cff      	cmp	r4, #255	@ 0xff
90025d78:	d021      	beq.n	90025dbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90025d7a:	9c08      	ldr	r4, [sp, #32]
90025d7c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025d80:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025d82:	fb04 fb0b 	mul.w	fp, r4, fp
90025d86:	9c08      	ldr	r4, [sp, #32]
90025d88:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025d8c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025d8e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025d92:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025d96:	fb04 fa0a 	mul.w	sl, r4, sl
90025d9a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d9e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025da2:	44de      	add	lr, fp
90025da4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025da8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025dac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025db0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025db4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025db8:	ea4e 040a 	orr.w	r4, lr, sl
90025dbc:	9408      	str	r4, [sp, #32]
90025dbe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025dc0:	2cff      	cmp	r4, #255	@ 0xff
90025dc2:	d021      	beq.n	90025e08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90025dc4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025dc6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025dca:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025dcc:	fb04 fb0b 	mul.w	fp, r4, fp
90025dd0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025dd2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025dd6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025dd8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025ddc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025de0:	fb04 fa0a 	mul.w	sl, r4, sl
90025de4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025de8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025dec:	44de      	add	lr, fp
90025dee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025df2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025df6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025dfa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025dfe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025e02:	ea4e 040a 	orr.w	r4, lr, sl
90025e06:	940c      	str	r4, [sp, #48]	@ 0x30
90025e08:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025e0a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90025e0e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025e12:	43c9      	mvns	r1, r1
90025e14:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025e18:	9c08      	ldr	r4, [sp, #32]
90025e1a:	fb08 fc0c 	mul.w	ip, r8, ip
90025e1e:	fb02 cc0e 	mla	ip, r2, lr, ip
90025e22:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90025e26:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025e28:	fb00 cc0e 	mla	ip, r0, lr, ip
90025e2c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90025e30:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025e32:	fb09 cc0e 	mla	ip, r9, lr, ip
90025e36:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90025e3a:	fb08 f80e 	mul.w	r8, r8, lr
90025e3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025e42:	fa5f fe81 	uxtb.w	lr, r1
90025e46:	fb02 8303 	mla	r3, r2, r3, r8
90025e4a:	9a08      	ldr	r2, [sp, #32]
90025e4c:	f8b7 8000 	ldrh.w	r8, [r7]
90025e50:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025e54:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90025e58:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90025e5a:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90025e5e:	fb00 330a 	mla	r3, r0, sl, r3
90025e62:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90025e66:	ea4f 2228 	mov.w	r2, r8, asr #8
90025e6a:	fb09 3900 	mla	r9, r9, r0, r3
90025e6e:	ea4f 00e8 	mov.w	r0, r8, asr #3
90025e72:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025e76:	b2c9      	uxtb	r1, r1
90025e78:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025e7c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025e80:	fb02 f20e 	mul.w	r2, r2, lr
90025e84:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90025e88:	fb00 f00e 	mul.w	r0, r0, lr
90025e8c:	1c53      	adds	r3, r2, #1
90025e8e:	fb01 f10e 	mul.w	r1, r1, lr
90025e92:	ea4c 0c09 	orr.w	ip, ip, r9
90025e96:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90025e9a:	ea4f 431c 	mov.w	r3, ip, lsr #16
90025e9e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025ea2:	4a60      	ldr	r2, [pc, #384]	@ (90026024 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90025ea4:	b2db      	uxtb	r3, r3
90025ea6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90025eaa:	1c43      	adds	r3, r0, #1
90025eac:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025eb0:	ea4f 231c 	mov.w	r3, ip, lsr #8
90025eb4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025eb8:	00db      	lsls	r3, r3, #3
90025eba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025ebe:	4313      	orrs	r3, r2
90025ec0:	1c4a      	adds	r2, r1, #1
90025ec2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025ec6:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90025eca:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90025ece:	ea4c 0c03 	orr.w	ip, ip, r3
90025ed2:	f8a7 c000 	strh.w	ip, [r7]
90025ed6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90025ed8:	3702      	adds	r7, #2
90025eda:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90025edc:	441a      	add	r2, r3
90025ede:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025ee0:	441d      	add	r5, r3
90025ee2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025ee4:	9225      	str	r2, [sp, #148]	@ 0x94
90025ee6:	3b01      	subs	r3, #1
90025ee8:	9317      	str	r3, [sp, #92]	@ 0x5c
90025eea:	e699      	b.n	90025c20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90025eec:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90025eee:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90025ef0:	441c      	add	r4, r3
90025ef2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025ef4:	441d      	add	r5, r3
90025ef6:	9b07      	ldr	r3, [sp, #28]
90025ef8:	9425      	str	r4, [sp, #148]	@ 0x94
90025efa:	3b01      	subs	r3, #1
90025efc:	9307      	str	r3, [sp, #28]
90025efe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025f00:	3302      	adds	r3, #2
90025f02:	930a      	str	r3, [sp, #40]	@ 0x28
90025f04:	e66c      	b.n	90025be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90025f06:	d024      	beq.n	90025f52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90025f08:	9b07      	ldr	r3, [sp, #28]
90025f0a:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90025f0c:	3b01      	subs	r3, #1
90025f0e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90025f10:	fb00 4003 	mla	r0, r0, r3, r4
90025f14:	1400      	asrs	r0, r0, #16
90025f16:	f53f ae80 	bmi.w	90025c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025f1a:	3901      	subs	r1, #1
90025f1c:	4288      	cmp	r0, r1
90025f1e:	f6bf ae7c 	bge.w	90025c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025f22:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90025f24:	fb01 5303 	mla	r3, r1, r3, r5
90025f28:	141b      	asrs	r3, r3, #16
90025f2a:	f53f ae76 	bmi.w	90025c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025f2e:	3a01      	subs	r2, #1
90025f30:	4293      	cmp	r3, r2
90025f32:	f6bf ae72 	bge.w	90025c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025f36:	f8dd b01c 	ldr.w	fp, [sp, #28]
90025f3a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90025f3e:	f1bb 0f00 	cmp.w	fp, #0
90025f42:	dc71      	bgt.n	90026028 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025f44:	9b07      	ldr	r3, [sp, #28]
90025f46:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025f4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025f4c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025f50:	930a      	str	r3, [sp, #40]	@ 0x28
90025f52:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025f54:	2b00      	cmp	r3, #0
90025f56:	f340 81af 	ble.w	900262b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90025f5a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025f5e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025f60:	ee30 0a04 	vadd.f32	s0, s0, s8
90025f64:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025f68:	eef0 6a62 	vmov.f32	s13, s5
90025f6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025f70:	ee31 1a05 	vadd.f32	s2, s2, s10
90025f74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f78:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
90025f7c:	eef0 6a43 	vmov.f32	s13, s6
90025f80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f84:	ee16 5a90 	vmov	r5, s13
90025f88:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025f8c:	ee61 7a27 	vmul.f32	s15, s2, s15
90025f90:	ee77 2a62 	vsub.f32	s5, s14, s5
90025f94:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025f98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025f9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025fa0:	ee12 2a90 	vmov	r2, s5
90025fa4:	eef0 2a47 	vmov.f32	s5, s14
90025fa8:	fb92 f3f3 	sdiv	r3, r2, r3
90025fac:	ee13 2a10 	vmov	r2, s6
90025fb0:	9327      	str	r3, [sp, #156]	@ 0x9c
90025fb2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025fb4:	eeb0 3a67 	vmov.f32	s6, s15
90025fb8:	fb92 f3f3 	sdiv	r3, r2, r3
90025fbc:	9328      	str	r3, [sp, #160]	@ 0xa0
90025fbe:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025fc0:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90025fc2:	3b01      	subs	r3, #1
90025fc4:	9316      	str	r3, [sp, #88]	@ 0x58
90025fc6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025fc8:	bf08      	it	eq
90025fca:	4613      	moveq	r3, r2
90025fcc:	9307      	str	r3, [sp, #28]
90025fce:	e5f9      	b.n	90025bc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90025fd0:	2800      	cmp	r0, #0
90025fd2:	f43f ae6b 	beq.w	90025cac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025fd6:	f818 1001 	ldrb.w	r1, [r8, r1]
90025fda:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025fde:	9108      	str	r1, [sp, #32]
90025fe0:	0e09      	lsrs	r1, r1, #24
90025fe2:	9110      	str	r1, [sp, #64]	@ 0x40
90025fe4:	e662      	b.n	90025cac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025fe6:	f113 0801 	adds.w	r8, r3, #1
90025fea:	f53f af74 	bmi.w	90025ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025fee:	4541      	cmp	r1, r8
90025ff0:	f6ff af71 	blt.w	90025ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025ff4:	f11c 0801 	adds.w	r8, ip, #1
90025ff8:	f53f af6d 	bmi.w	90025ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025ffc:	45c6      	cmp	lr, r8
90025ffe:	f6ff af6a 	blt.w	90025ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90026002:	b209      	sxth	r1, r1
90026004:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90026008:	fa0f f38e 	sxth.w	r3, lr
9002600c:	9100      	str	r1, [sp, #0]
9002600e:	4639      	mov	r1, r7
90026010:	9301      	str	r3, [sp, #4]
90026012:	4633      	mov	r3, r6
90026014:	e9cd 2004 	strd	r2, r0, [sp, #16]
90026018:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002601a:	9819      	ldr	r0, [sp, #100]	@ 0x64
9002601c:	f7ff fc7b 	bl	90025916 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90026020:	e759      	b.n	90025ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90026022:	bf00      	nop
90026024:	fffff800 	.word	0xfffff800
90026028:	9b25      	ldr	r3, [sp, #148]	@ 0x94
9002602a:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002602e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90026030:	f3c3 3203 	ubfx	r2, r3, #12, #4
90026034:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026036:	1427      	asrs	r7, r4, #16
90026038:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
9002603a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002603e:	142b      	asrs	r3, r5, #16
90026040:	fb01 7303 	mla	r3, r1, r3, r7
90026044:	18e7      	adds	r7, r4, r3
90026046:	5ce3      	ldrb	r3, [r4, r3]
90026048:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002604c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90026050:	2a00      	cmp	r2, #0
90026052:	f000 8127 	beq.w	900262a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90026056:	f897 e001 	ldrb.w	lr, [r7, #1]
9002605a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002605e:	940d      	str	r4, [sp, #52]	@ 0x34
90026060:	0e24      	lsrs	r4, r4, #24
90026062:	9414      	str	r4, [sp, #80]	@ 0x50
90026064:	b170      	cbz	r0, 90026084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90026066:	eb07 0e01 	add.w	lr, r7, r1
9002606a:	5c79      	ldrb	r1, [r7, r1]
9002606c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90026070:	9109      	str	r1, [sp, #36]	@ 0x24
90026072:	0e09      	lsrs	r1, r1, #24
90026074:	9111      	str	r1, [sp, #68]	@ 0x44
90026076:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002607a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002607e:	910e      	str	r1, [sp, #56]	@ 0x38
90026080:	0e09      	lsrs	r1, r1, #24
90026082:	9115      	str	r1, [sp, #84]	@ 0x54
90026084:	b292      	uxth	r2, r2
90026086:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90026088:	b280      	uxth	r0, r0
9002608a:	fb02 f800 	mul.w	r8, r2, r0
9002608e:	0112      	lsls	r2, r2, #4
90026090:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90026094:	eba2 0e08 	sub.w	lr, r2, r8
90026098:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
9002609c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002609e:	b280      	uxth	r0, r0
900260a0:	fa1f fe8e 	uxth.w	lr, lr
900260a4:	1a09      	subs	r1, r1, r0
900260a6:	fb0e f202 	mul.w	r2, lr, r2
900260aa:	b289      	uxth	r1, r1
900260ac:	fb01 220c 	mla	r2, r1, ip, r2
900260b0:	fb00 2204 	mla	r2, r0, r4, r2
900260b4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900260b6:	fb08 2204 	mla	r2, r8, r4, r2
900260ba:	f3c2 2207 	ubfx	r2, r2, #8, #8
900260be:	2a00      	cmp	r2, #0
900260c0:	f000 80e5 	beq.w	9002628e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
900260c4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900260c8:	d019      	beq.n	900260fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
900260ca:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900260ce:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900260d2:	fb0c fa0a 	mul.w	sl, ip, sl
900260d6:	fb0c fc03 	mul.w	ip, ip, r3
900260da:	ea4f 231a 	mov.w	r3, sl, lsr #8
900260de:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900260e2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900260e6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900260ea:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900260ee:	4453      	add	r3, sl
900260f0:	0a3f      	lsrs	r7, r7, #8
900260f2:	0a1b      	lsrs	r3, r3, #8
900260f4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900260f8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900260fc:	433b      	orrs	r3, r7
900260fe:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90026100:	2cff      	cmp	r4, #255	@ 0xff
90026102:	d020      	beq.n	90026146 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90026104:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026106:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002610a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002610c:	4367      	muls	r7, r4
9002610e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026110:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026114:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90026118:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002611a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002611e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026122:	fb04 fa0a 	mul.w	sl, r4, sl
90026126:	44bc      	add	ip, r7
90026128:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002612c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026130:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026134:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026138:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002613c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026140:	ea4c 040a 	orr.w	r4, ip, sl
90026144:	940d      	str	r4, [sp, #52]	@ 0x34
90026146:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90026148:	2cff      	cmp	r4, #255	@ 0xff
9002614a:	d020      	beq.n	9002618e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
9002614c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
9002614e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90026152:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90026154:	4367      	muls	r7, r4
90026156:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90026158:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002615c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90026160:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90026162:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026166:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002616a:	fb04 fa0a 	mul.w	sl, r4, sl
9002616e:	44bc      	add	ip, r7
90026170:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026174:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026178:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002617c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026180:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026184:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026188:	ea4c 040a 	orr.w	r4, ip, sl
9002618c:	9409      	str	r4, [sp, #36]	@ 0x24
9002618e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90026190:	2cff      	cmp	r4, #255	@ 0xff
90026192:	d020      	beq.n	900261d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90026194:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90026196:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002619a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002619c:	4367      	muls	r7, r4
9002619e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900261a0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900261a4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900261a8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
900261aa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900261ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900261b2:	fb04 fa0a 	mul.w	sl, r4, sl
900261b6:	44bc      	add	ip, r7
900261b8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900261bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900261c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900261c4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900261c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900261cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900261d0:	ea4c 040a 	orr.w	r4, ip, sl
900261d4:	940e      	str	r4, [sp, #56]	@ 0x38
900261d6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900261d8:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900261dc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900261e0:	43d2      	mvns	r2, r2
900261e2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900261e6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900261e8:	b2d2      	uxtb	r2, r2
900261ea:	fb0e f707 	mul.w	r7, lr, r7
900261ee:	fb01 770c 	mla	r7, r1, ip, r7
900261f2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900261f6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900261f8:	fb00 770c 	mla	r7, r0, ip, r7
900261fc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026200:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026202:	fb08 770c 	mla	r7, r8, ip, r7
90026206:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
9002620a:	fb0e fe0c 	mul.w	lr, lr, ip
9002620e:	0a3f      	lsrs	r7, r7, #8
90026210:	fb01 e303 	mla	r3, r1, r3, lr
90026214:	9909      	ldr	r1, [sp, #36]	@ 0x24
90026216:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
9002621a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002621e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90026220:	fb00 330a 	mla	r3, r0, sl, r3
90026224:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90026228:	fb08 3c0c 	mla	ip, r8, ip, r3
9002622c:	f8b9 3000 	ldrh.w	r3, [r9]
90026230:	1218      	asrs	r0, r3, #8
90026232:	10d9      	asrs	r1, r3, #3
90026234:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026238:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002623c:	00db      	lsls	r3, r3, #3
9002623e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90026242:	4350      	muls	r0, r2
90026244:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026248:	b2db      	uxtb	r3, r3
9002624a:	4351      	muls	r1, r2
9002624c:	ea47 070c 	orr.w	r7, r7, ip
90026250:	4353      	muls	r3, r2
90026252:	1c42      	adds	r2, r0, #1
90026254:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026258:	0c3a      	lsrs	r2, r7, #16
9002625a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002625e:	4a18      	ldr	r2, [pc, #96]	@ (900262c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90026260:	b2c0      	uxtb	r0, r0
90026262:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90026266:	1c4a      	adds	r2, r1, #1
90026268:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002626c:	0a3a      	lsrs	r2, r7, #8
9002626e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90026272:	00c9      	lsls	r1, r1, #3
90026274:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026278:	4301      	orrs	r1, r0
9002627a:	1c58      	adds	r0, r3, #1
9002627c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026280:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90026284:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90026288:	4308      	orrs	r0, r1
9002628a:	f8a9 0000 	strh.w	r0, [r9]
9002628e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026290:	f109 0902 	add.w	r9, r9, #2
90026294:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90026296:	f10b 3bff 	add.w	fp, fp, #4294967295
9002629a:	441a      	add	r2, r3
9002629c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002629e:	9225      	str	r2, [sp, #148]	@ 0x94
900262a0:	441d      	add	r5, r3
900262a2:	e64c      	b.n	90025f3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900262a4:	2800      	cmp	r0, #0
900262a6:	f43f aeed 	beq.w	90026084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900262aa:	5c79      	ldrb	r1, [r7, r1]
900262ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900262b0:	9109      	str	r1, [sp, #36]	@ 0x24
900262b2:	0e09      	lsrs	r1, r1, #24
900262b4:	9111      	str	r1, [sp, #68]	@ 0x44
900262b6:	e6e5      	b.n	90026084 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
900262b8:	b01b      	add	sp, #108	@ 0x6c
900262ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900262be:	bf00      	nop
900262c0:	fffff800 	.word	0xfffff800

900262c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
900262c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900262c8:	b085      	sub	sp, #20
900262ca:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
900262ce:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
900262d2:	2800      	cmp	r0, #0
900262d4:	9103      	str	r1, [sp, #12]
900262d6:	fb00 7406 	mla	r4, r0, r6, r7
900262da:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
900262de:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
900262e2:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900262e6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
900262ea:	eb03 0904 	add.w	r9, r3, r4
900262ee:	9501      	str	r5, [sp, #4]
900262f0:	f2c0 8150 	blt.w	90026594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900262f4:	4583      	cmp	fp, r0
900262f6:	f340 814d 	ble.w	90026594 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900262fa:	2f00      	cmp	r7, #0
900262fc:	f2c0 8146 	blt.w	9002658c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90026300:	42be      	cmp	r6, r7
90026302:	f340 8143 	ble.w	9002658c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90026306:	f813 c004 	ldrb.w	ip, [r3, r4]
9002630a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
9002630e:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90026312:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026316:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
9002631a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002631e:	4355      	muls	r5, r2
90026320:	fb0c f203 	mul.w	r2, ip, r3
90026324:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90026328:	f605 0501 	addw	r5, r5, #2049	@ 0x801
9002632c:	441d      	add	r5, r3
9002632e:	f102 0320 	add.w	r3, r2, #32
90026332:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026336:	ea04 1455 	and.w	r4, r4, r5, lsr #5
9002633a:	0a1b      	lsrs	r3, r3, #8
9002633c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026340:	431c      	orrs	r4, r3
90026342:	1c7b      	adds	r3, r7, #1
90026344:	f100 812b 	bmi.w	9002659e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90026348:	429e      	cmp	r6, r3
9002634a:	f340 8128 	ble.w	9002659e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
9002634e:	2900      	cmp	r1, #0
90026350:	f000 8128 	beq.w	900265a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90026354:	9a01      	ldr	r2, [sp, #4]
90026356:	f899 3001 	ldrb.w	r3, [r9, #1]
9002635a:	8855      	ldrh	r5, [r2, #2]
9002635c:	ea4f 08e3 	mov.w	r8, r3, asr #3
90026360:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90026364:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026368:	fb08 f802 	mul.w	r8, r8, r2
9002636c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90026370:	435d      	muls	r5, r3
90026372:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90026376:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002637a:	44d0      	add	r8, sl
9002637c:	f105 0a20 	add.w	sl, r5, #32
90026380:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90026384:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90026388:	0a2d      	lsrs	r5, r5, #8
9002638a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002638e:	432a      	orrs	r2, r5
90026390:	3001      	adds	r0, #1
90026392:	f100 810d 	bmi.w	900265b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90026396:	4583      	cmp	fp, r0
90026398:	f340 810a 	ble.w	900265b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
9002639c:	f1be 0f00 	cmp.w	lr, #0
900263a0:	f000 810b 	beq.w	900265ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
900263a4:	2f00      	cmp	r7, #0
900263a6:	f2c0 8100 	blt.w	900265aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900263aa:	42be      	cmp	r6, r7
900263ac:	f340 80fd 	ble.w	900265aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
900263b0:	9801      	ldr	r0, [sp, #4]
900263b2:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
900263b6:	f819 5006 	ldrb.w	r5, [r9, r6]
900263ba:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
900263be:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900263c2:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
900263c6:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900263ca:	fb0a fa00 	mul.w	sl, sl, r0
900263ce:	fb05 f808 	mul.w	r8, r5, r8
900263d2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900263d6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
900263da:	4482      	add	sl, r0
900263dc:	f108 0020 	add.w	r0, r8, #32
900263e0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900263e4:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900263e8:	0a00      	lsrs	r0, r0, #8
900263ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900263ee:	ea4b 0b00 	orr.w	fp, fp, r0
900263f2:	3701      	adds	r7, #1
900263f4:	f100 80e6 	bmi.w	900265c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900263f8:	42be      	cmp	r6, r7
900263fa:	f340 80e3 	ble.w	900265c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900263fe:	2900      	cmp	r1, #0
90026400:	f000 80e3 	beq.w	900265ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90026404:	3601      	adds	r6, #1
90026406:	9801      	ldr	r0, [sp, #4]
90026408:	f819 7006 	ldrb.w	r7, [r9, r6]
9002640c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90026410:	ea4f 09e7 	mov.w	r9, r7, asr #3
90026414:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90026418:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002641c:	fb09 f906 	mul.w	r9, r9, r6
90026420:	fb07 f800 	mul.w	r8, r7, r0
90026424:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90026428:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
9002642c:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90026430:	44d1      	add	r9, sl
90026432:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90026436:	f108 0020 	add.w	r0, r8, #32
9002643a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002643e:	0a00      	lsrs	r0, r0, #8
90026440:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026444:	4330      	orrs	r0, r6
90026446:	b28e      	uxth	r6, r1
90026448:	fa1f f98e 	uxth.w	r9, lr
9002644c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90026450:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90026454:	fb06 f809 	mul.w	r8, r6, r9
90026458:	0136      	lsls	r6, r6, #4
9002645a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002645e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90026462:	9601      	str	r6, [sp, #4]
90026464:	ea4a 0404 	orr.w	r4, sl, r4
90026468:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002646c:	fa1f f689 	uxth.w	r6, r9
90026470:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026474:	fb11 f90e 	smulbb	r9, r1, lr
90026478:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002647c:	9602      	str	r6, [sp, #8]
9002647e:	4626      	mov	r6, r4
90026480:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90026484:	f1ce 0410 	rsb	r4, lr, #16
90026488:	ea4a 0202 	orr.w	r2, sl, r2
9002648c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026490:	1a64      	subs	r4, r4, r1
90026492:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90026496:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002649a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002649e:	434a      	muls	r2, r1
900264a0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900264a4:	ea4a 0000 	orr.w	r0, sl, r0
900264a8:	9903      	ldr	r1, [sp, #12]
900264aa:	fb04 2406 	mla	r4, r4, r6, r2
900264ae:	9e02      	ldr	r6, [sp, #8]
900264b0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
900264b4:	fb09 4200 	mla	r2, r9, r0, r4
900264b8:	ea4f 440b 	mov.w	r4, fp, lsl #16
900264bc:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900264c0:	8808      	ldrh	r0, [r1, #0]
900264c2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900264c6:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
900264ca:	ea44 0b0b 	orr.w	fp, r4, fp
900264ce:	9c01      	ldr	r4, [sp, #4]
900264d0:	b289      	uxth	r1, r1
900264d2:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
900264d6:	fb0e 2e0b 	mla	lr, lr, fp, r2
900264da:	1ba4      	subs	r4, r4, r6
900264dc:	9e01      	ldr	r6, [sp, #4]
900264de:	ea4f 525e 	mov.w	r2, lr, lsr #21
900264e2:	eba6 0608 	sub.w	r6, r6, r8
900264e6:	b2a4      	uxth	r4, r4
900264e8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900264ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900264f0:	b2b6      	uxth	r6, r6
900264f2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900264f6:	4373      	muls	r3, r6
900264f8:	ea42 0e0e 	orr.w	lr, r2, lr
900264fc:	fb0c 3304 	mla	r3, ip, r4, r3
90026500:	9c02      	ldr	r4, [sp, #8]
90026502:	fa1f f28e 	uxth.w	r2, lr
90026506:	fb04 3505 	mla	r5, r4, r5, r3
9002650a:	10d4      	asrs	r4, r2, #3
9002650c:	fb08 5707 	mla	r7, r8, r7, r5
90026510:	1215      	asrs	r5, r2, #8
90026512:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90026516:	00d2      	lsls	r2, r2, #3
90026518:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002651c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026520:	b2d2      	uxtb	r2, r2
90026522:	434f      	muls	r7, r1
90026524:	1c7b      	adds	r3, r7, #1
90026526:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9002652a:	1203      	asrs	r3, r0, #8
9002652c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90026530:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90026534:	b2ff      	uxtb	r7, r7
90026536:	fb13 f307 	smulbb	r3, r3, r7
9002653a:	fb05 3501 	mla	r5, r5, r1, r3
9002653e:	10c3      	asrs	r3, r0, #3
90026540:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90026544:	b2ad      	uxth	r5, r5
90026546:	fb13 f307 	smulbb	r3, r3, r7
9002654a:	fb04 3401 	mla	r4, r4, r1, r3
9002654e:	00c3      	lsls	r3, r0, #3
90026550:	b2db      	uxtb	r3, r3
90026552:	b2a4      	uxth	r4, r4
90026554:	fb13 f307 	smulbb	r3, r3, r7
90026558:	fb02 3101 	mla	r1, r2, r1, r3
9002655c:	1c6b      	adds	r3, r5, #1
9002655e:	1c62      	adds	r2, r4, #1
90026560:	b289      	uxth	r1, r1
90026562:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026566:	1c4b      	adds	r3, r1, #1
90026568:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002656c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026570:	9a03      	ldr	r2, [sp, #12]
90026572:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026576:	0964      	lsrs	r4, r4, #5
90026578:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002657c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90026580:	432b      	orrs	r3, r5
90026582:	4323      	orrs	r3, r4
90026584:	8013      	strh	r3, [r2, #0]
90026586:	b005      	add	sp, #20
90026588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002658c:	f04f 0c00 	mov.w	ip, #0
90026590:	4664      	mov	r4, ip
90026592:	e6d6      	b.n	90026342 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90026594:	2300      	movs	r3, #0
90026596:	469c      	mov	ip, r3
90026598:	461a      	mov	r2, r3
9002659a:	461c      	mov	r4, r3
9002659c:	e6f8      	b.n	90026390 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002659e:	2300      	movs	r3, #0
900265a0:	461a      	mov	r2, r3
900265a2:	e6f5      	b.n	90026390 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900265a4:	460b      	mov	r3, r1
900265a6:	460a      	mov	r2, r1
900265a8:	e6f2      	b.n	90026390 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900265aa:	2500      	movs	r5, #0
900265ac:	46ab      	mov	fp, r5
900265ae:	e720      	b.n	900263f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
900265b0:	2700      	movs	r7, #0
900265b2:	463d      	mov	r5, r7
900265b4:	4638      	mov	r0, r7
900265b6:	46bb      	mov	fp, r7
900265b8:	e745      	b.n	90026446 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900265ba:	4677      	mov	r7, lr
900265bc:	4675      	mov	r5, lr
900265be:	4670      	mov	r0, lr
900265c0:	46f3      	mov	fp, lr
900265c2:	e740      	b.n	90026446 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900265c4:	2700      	movs	r7, #0
900265c6:	4638      	mov	r0, r7
900265c8:	e73d      	b.n	90026446 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900265ca:	460f      	mov	r7, r1
900265cc:	4608      	mov	r0, r1
900265ce:	e73a      	b.n	90026446 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

900265d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900265d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900265d4:	b097      	sub	sp, #92	@ 0x5c
900265d6:	9214      	str	r2, [sp, #80]	@ 0x50
900265d8:	9308      	str	r3, [sp, #32]
900265da:	9a25      	ldr	r2, [sp, #148]	@ 0x94
900265dc:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900265e0:	9015      	str	r0, [sp, #84]	@ 0x54
900265e2:	9312      	str	r3, [sp, #72]	@ 0x48
900265e4:	6850      	ldr	r0, [r2, #4]
900265e6:	9111      	str	r1, [sp, #68]	@ 0x44
900265e8:	6812      	ldr	r2, [r2, #0]
900265ea:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
900265ee:	fb00 1303 	mla	r3, r0, r3, r1
900265f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900265f6:	9309      	str	r3, [sp, #36]	@ 0x24
900265f8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900265fa:	681b      	ldr	r3, [r3, #0]
900265fc:	930b      	str	r3, [sp, #44]	@ 0x2c
900265fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026600:	685b      	ldr	r3, [r3, #4]
90026602:	930c      	str	r3, [sp, #48]	@ 0x30
90026604:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90026608:	930a      	str	r3, [sp, #40]	@ 0x28
9002660a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002660c:	2b00      	cmp	r3, #0
9002660e:	dc03      	bgt.n	90026618 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026610:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90026612:	2b00      	cmp	r3, #0
90026614:	f340 83cd 	ble.w	90026db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90026618:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002661a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002661e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026622:	1e48      	subs	r0, r1, #1
90026624:	1e55      	subs	r5, r2, #1
90026626:	9b08      	ldr	r3, [sp, #32]
90026628:	2b00      	cmp	r3, #0
9002662a:	f340 81a5 	ble.w	90026978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
9002662e:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90026630:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026632:	1436      	asrs	r6, r6, #16
90026634:	ea4f 4323 	mov.w	r3, r3, asr #16
90026638:	d406      	bmi.n	90026648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002663a:	4286      	cmp	r6, r0
9002663c:	da04      	bge.n	90026648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002663e:	2b00      	cmp	r3, #0
90026640:	db02      	blt.n	90026648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026642:	42ab      	cmp	r3, r5
90026644:	f2c0 8199 	blt.w	9002697a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90026648:	3601      	adds	r6, #1
9002664a:	f100 8186 	bmi.w	9002695a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002664e:	42b1      	cmp	r1, r6
90026650:	f2c0 8183 	blt.w	9002695a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90026654:	3301      	adds	r3, #1
90026656:	f100 8180 	bmi.w	9002695a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002665a:	429a      	cmp	r2, r3
9002665c:	f2c0 817d 	blt.w	9002695a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90026660:	9b08      	ldr	r3, [sp, #32]
90026662:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90026666:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90026668:	9313      	str	r3, [sp, #76]	@ 0x4c
9002666a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002666c:	2b00      	cmp	r3, #0
9002666e:	f340 81a6 	ble.w	900269be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90026672:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026674:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90026676:	1418      	asrs	r0, r3, #16
90026678:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002667a:	142d      	asrs	r5, r5, #16
9002667c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90026680:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026682:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90026686:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026688:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9002668c:	f100 81fa 	bmi.w	90026a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026690:	f102 3eff 	add.w	lr, r2, #4294967295
90026694:	4575      	cmp	r5, lr
90026696:	f280 81f5 	bge.w	90026a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002669a:	2800      	cmp	r0, #0
9002669c:	f2c0 81f2 	blt.w	90026a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900266a0:	f103 3eff 	add.w	lr, r3, #4294967295
900266a4:	4570      	cmp	r0, lr
900266a6:	f280 81ed 	bge.w	90026a84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900266aa:	b212      	sxth	r2, r2
900266ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900266ae:	fa1f fe81 	uxth.w	lr, r1
900266b2:	fb00 5002 	mla	r0, r0, r2, r5
900266b6:	ea4f 150e 	mov.w	r5, lr, lsl #4
900266ba:	eb03 0a00 	add.w	sl, r3, r0
900266be:	f813 9000 	ldrb.w	r9, [r3, r0]
900266c2:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
900266c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
900266ca:	b29b      	uxth	r3, r3
900266cc:	f1bc 0f00 	cmp.w	ip, #0
900266d0:	f000 81bb 	beq.w	90026a4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
900266d4:	f81a 4002 	ldrb.w	r4, [sl, r2]
900266d8:	eb0a 0b02 	add.w	fp, sl, r2
900266dc:	fa1f fa8c 	uxth.w	sl, ip
900266e0:	940d      	str	r4, [sp, #52]	@ 0x34
900266e2:	fb0a fe0e 	mul.w	lr, sl, lr
900266e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
900266ea:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900266ee:	eba5 050e 	sub.w	r5, r5, lr
900266f2:	940e      	str	r4, [sp, #56]	@ 0x38
900266f4:	fa1f fa8a 	uxth.w	sl, sl
900266f8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900266fa:	b2ad      	uxth	r5, r5
900266fc:	eba3 030a 	sub.w	r3, r3, sl
90026700:	fb08 f505 	mul.w	r5, r8, r5
90026704:	b29b      	uxth	r3, r3
90026706:	fb09 5303 	mla	r3, r9, r3, r5
9002670a:	fb0a 3304 	mla	r3, sl, r4, r3
9002670e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90026710:	fb0e 3304 	mla	r3, lr, r4, r3
90026714:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026718:	2b00      	cmp	r3, #0
9002671a:	f000 8111 	beq.w	90026940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002671e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90026720:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90026724:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90026728:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
9002672c:	f000 8192 	beq.w	90026a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90026730:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90026734:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90026738:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002673c:	fb0a fe0e 	mul.w	lr, sl, lr
90026740:	fb09 f000 	mul.w	r0, r9, r0
90026744:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90026748:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
9002674c:	f100 0b20 	add.w	fp, r0, #32
90026750:	44ce      	add	lr, r9
90026752:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90026756:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002675a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002675e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026762:	ea4e 0909 	orr.w	r9, lr, r9
90026766:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002676a:	8868      	ldrh	r0, [r5, #2]
9002676c:	d019      	beq.n	900267a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9002676e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90026772:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026776:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002677a:	fb0a fe0e 	mul.w	lr, sl, lr
9002677e:	fb08 f800 	mul.w	r8, r8, r0
90026782:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90026786:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
9002678a:	f108 0b20 	add.w	fp, r8, #32
9002678e:	4486      	add	lr, r0
90026790:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90026794:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90026798:	0a00      	lsrs	r0, r0, #8
9002679a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002679e:	ea4e 0000 	orr.w	r0, lr, r0
900267a2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900267a6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900267aa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900267ae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900267b2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900267b6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900267ba:	ea4e 0909 	orr.w	r9, lr, r9
900267be:	ea4a 0000 	orr.w	r0, sl, r0
900267c2:	f1bc 0f00 	cmp.w	ip, #0
900267c6:	f000 8147 	beq.w	90026a58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
900267ca:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
900267ce:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900267d0:	3a01      	subs	r2, #1
900267d2:	2cff      	cmp	r4, #255	@ 0xff
900267d4:	ea4f 0242 	mov.w	r2, r2, lsl #1
900267d8:	f102 0202 	add.w	r2, r2, #2
900267dc:	eb05 0e02 	add.w	lr, r5, r2
900267e0:	5aaa      	ldrh	r2, [r5, r2]
900267e2:	d018      	beq.n	90026816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
900267e4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
900267e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900267ec:	ea4f 08e4 	mov.w	r8, r4, asr #3
900267f0:	fb04 fa02 	mul.w	sl, r4, r2
900267f4:	fb08 f805 	mul.w	r8, r8, r5
900267f8:	f10a 0520 	add.w	r5, sl, #32
900267fc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90026800:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026804:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90026808:	4442      	add	r2, r8
9002680a:	0a2d      	lsrs	r5, r5, #8
9002680c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90026810:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026814:	432a      	orrs	r2, r5
90026816:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90026818:	f8be 5002 	ldrh.w	r5, [lr, #2]
9002681c:	2cff      	cmp	r4, #255	@ 0xff
9002681e:	d01a      	beq.n	90026856 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90026820:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90026824:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026828:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002682c:	fb04 fa05 	mul.w	sl, r4, r5
90026830:	fb08 f80e 	mul.w	r8, r8, lr
90026834:	f10a 0e20 	add.w	lr, sl, #32
90026838:	ea06 1558 	and.w	r5, r6, r8, lsr #5
9002683c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026840:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90026844:	4445      	add	r5, r8
90026846:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002684a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
9002684e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90026852:	ea45 050e 	orr.w	r5, r5, lr
90026856:	fb1c fe01 	smulbb	lr, ip, r1
9002685a:	f1cc 0810 	rsb	r8, ip, #16
9002685e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026862:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026866:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002686a:	eba8 0801 	sub.w	r8, r8, r1
9002686e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90026872:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026876:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002687a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002687e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90026882:	ea4a 0202 	orr.w	r2, sl, r2
90026886:	4341      	muls	r1, r0
90026888:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
9002688c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026890:	fb09 1108 	mla	r1, r9, r8, r1
90026894:	ea4b 0505 	orr.w	r5, fp, r5
90026898:	fb0c 1102 	mla	r1, ip, r2, r1
9002689c:	fb0e 1e05 	mla	lr, lr, r5, r1
900268a0:	ea4f 525e 	mov.w	r2, lr, lsr #21
900268a4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900268a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900268ac:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900268b0:	ea42 0e0e 	orr.w	lr, r2, lr
900268b4:	fa1f f28e 	uxth.w	r2, lr
900268b8:	2bff      	cmp	r3, #255	@ 0xff
900268ba:	d103      	bne.n	900268c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900268bc:	9912      	ldr	r1, [sp, #72]	@ 0x48
900268be:	29ff      	cmp	r1, #255	@ 0xff
900268c0:	f000 80de 	beq.w	90026a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
900268c4:	990a      	ldr	r1, [sp, #40]	@ 0x28
900268c6:	1215      	asrs	r5, r2, #8
900268c8:	8838      	ldrh	r0, [r7, #0]
900268ca:	434b      	muls	r3, r1
900268cc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900268d0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900268d2:	f103 0c01 	add.w	ip, r3, #1
900268d6:	eb0c 2323 	add.w	r3, ip, r3, asr #8
900268da:	ea6f 2323 	mvn.w	r3, r3, asr #8
900268de:	fa5f fc83 	uxtb.w	ip, r3
900268e2:	1203      	asrs	r3, r0, #8
900268e4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900268e8:	fb13 f30c 	smulbb	r3, r3, ip
900268ec:	fb05 3501 	mla	r5, r5, r1, r3
900268f0:	10c3      	asrs	r3, r0, #3
900268f2:	10d1      	asrs	r1, r2, #3
900268f4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900268f8:	00d2      	lsls	r2, r2, #3
900268fa:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900268fe:	b2ad      	uxth	r5, r5
90026900:	fb13 f30c 	smulbb	r3, r3, ip
90026904:	b2d2      	uxtb	r2, r2
90026906:	fb01 3104 	mla	r1, r1, r4, r3
9002690a:	00c3      	lsls	r3, r0, #3
9002690c:	b2db      	uxtb	r3, r3
9002690e:	b289      	uxth	r1, r1
90026910:	fb13 f30c 	smulbb	r3, r3, ip
90026914:	fb02 3304 	mla	r3, r2, r4, r3
90026918:	b29a      	uxth	r2, r3
9002691a:	1c6b      	adds	r3, r5, #1
9002691c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026920:	1c53      	adds	r3, r2, #1
90026922:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026926:	1c4a      	adds	r2, r1, #1
90026928:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002692c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90026930:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026934:	0949      	lsrs	r1, r1, #5
90026936:	432b      	orrs	r3, r5
90026938:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002693c:	430b      	orrs	r3, r1
9002693e:	803b      	strh	r3, [r7, #0]
90026940:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026942:	3702      	adds	r7, #2
90026944:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90026946:	4413      	add	r3, r2
90026948:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002694a:	9321      	str	r3, [sp, #132]	@ 0x84
9002694c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002694e:	441a      	add	r2, r3
90026950:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026952:	3b01      	subs	r3, #1
90026954:	9222      	str	r2, [sp, #136]	@ 0x88
90026956:	9313      	str	r3, [sp, #76]	@ 0x4c
90026958:	e687      	b.n	9002666a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9002695a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002695c:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
9002695e:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90026960:	4433      	add	r3, r6
90026962:	9321      	str	r3, [sp, #132]	@ 0x84
90026964:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026966:	441c      	add	r4, r3
90026968:	9b08      	ldr	r3, [sp, #32]
9002696a:	3b01      	subs	r3, #1
9002696c:	9422      	str	r4, [sp, #136]	@ 0x88
9002696e:	9308      	str	r3, [sp, #32]
90026970:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026972:	3302      	adds	r3, #2
90026974:	9309      	str	r3, [sp, #36]	@ 0x24
90026976:	e656      	b.n	90026626 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90026978:	d028      	beq.n	900269cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002697a:	9b08      	ldr	r3, [sp, #32]
9002697c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002697e:	3b01      	subs	r3, #1
90026980:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90026982:	fb00 5003 	mla	r0, r0, r3, r5
90026986:	1400      	asrs	r0, r0, #16
90026988:	f53f ae6a 	bmi.w	90026660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002698c:	3901      	subs	r1, #1
9002698e:	4288      	cmp	r0, r1
90026990:	f6bf ae66 	bge.w	90026660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026994:	9924      	ldr	r1, [sp, #144]	@ 0x90
90026996:	9822      	ldr	r0, [sp, #136]	@ 0x88
90026998:	fb01 0303 	mla	r3, r1, r3, r0
9002699c:	141b      	asrs	r3, r3, #16
9002699e:	f53f ae5f 	bmi.w	90026660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900269a2:	3a01      	subs	r2, #1
900269a4:	4293      	cmp	r3, r2
900269a6:	f6bf ae5b 	bge.w	90026660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900269aa:	9b08      	ldr	r3, [sp, #32]
900269ac:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900269b0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
900269b4:	9313      	str	r3, [sp, #76]	@ 0x4c
900269b6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900269b8:	2b00      	cmp	r3, #0
900269ba:	f300 8082 	bgt.w	90026ac2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
900269be:	9b08      	ldr	r3, [sp, #32]
900269c0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900269c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900269c6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900269ca:	9309      	str	r3, [sp, #36]	@ 0x24
900269cc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900269ce:	2b00      	cmp	r3, #0
900269d0:	f340 81ef 	ble.w	90026db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900269d4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900269d8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900269da:	ee30 0a04 	vadd.f32	s0, s0, s8
900269de:	ee70 0aa4 	vadd.f32	s1, s1, s9
900269e2:	eef0 6a62 	vmov.f32	s13, s5
900269e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900269ea:	ee31 1a05 	vadd.f32	s2, s2, s10
900269ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900269f2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
900269f6:	eef0 6a43 	vmov.f32	s13, s6
900269fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900269fe:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90026a02:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026a06:	ee61 7a27 	vmul.f32	s15, s2, s15
90026a0a:	ee77 2a62 	vsub.f32	s5, s14, s5
90026a0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026a12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026a16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026a1a:	ee12 2a90 	vmov	r2, s5
90026a1e:	eef0 2a47 	vmov.f32	s5, s14
90026a22:	fb92 f3f3 	sdiv	r3, r2, r3
90026a26:	ee13 2a10 	vmov	r2, s6
90026a2a:	9323      	str	r3, [sp, #140]	@ 0x8c
90026a2c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026a2e:	eeb0 3a67 	vmov.f32	s6, s15
90026a32:	fb92 f3f3 	sdiv	r3, r2, r3
90026a36:	9324      	str	r3, [sp, #144]	@ 0x90
90026a38:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90026a3a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90026a3c:	3b01      	subs	r3, #1
90026a3e:	9311      	str	r3, [sp, #68]	@ 0x44
90026a40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026a42:	bf08      	it	eq
90026a44:	4613      	moveq	r3, r2
90026a46:	9308      	str	r3, [sp, #32]
90026a48:	e5df      	b.n	9002660a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026a4a:	fb08 f505 	mul.w	r5, r8, r5
90026a4e:	fb09 5303 	mla	r3, r9, r3, r5
90026a52:	e65f      	b.n	90026714 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90026a54:	4681      	mov	r9, r0
90026a56:	e686      	b.n	90026766 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90026a58:	f1c1 0210 	rsb	r2, r1, #16
90026a5c:	4341      	muls	r1, r0
90026a5e:	fb09 1902 	mla	r9, r9, r2, r1
90026a62:	ea4f 0949 	mov.w	r9, r9, lsl #1
90026a66:	ea4f 5259 	mov.w	r2, r9, lsr #21
90026a6a:	ea4f 1959 	mov.w	r9, r9, lsr #5
90026a6e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026a72:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026a76:	ea42 0909 	orr.w	r9, r2, r9
90026a7a:	fa1f f289 	uxth.w	r2, r9
90026a7e:	e71b      	b.n	900268b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90026a80:	803a      	strh	r2, [r7, #0]
90026a82:	e75d      	b.n	90026940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a84:	f115 0e01 	adds.w	lr, r5, #1
90026a88:	f53f af5a 	bmi.w	90026940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a8c:	4572      	cmp	r2, lr
90026a8e:	f6ff af57 	blt.w	90026940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a92:	f110 0e01 	adds.w	lr, r0, #1
90026a96:	f53f af53 	bmi.w	90026940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a9a:	4573      	cmp	r3, lr
90026a9c:	f6ff af50 	blt.w	90026940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026aa0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90026aa2:	b21b      	sxth	r3, r3
90026aa4:	b212      	sxth	r2, r2
90026aa6:	9502      	str	r5, [sp, #8]
90026aa8:	9301      	str	r3, [sp, #4]
90026aaa:	9200      	str	r2, [sp, #0]
90026aac:	e9cd 0103 	strd	r0, r1, [sp, #12]
90026ab0:	e9cd c405 	strd	ip, r4, [sp, #20]
90026ab4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90026ab8:	4639      	mov	r1, r7
90026aba:	9815      	ldr	r0, [sp, #84]	@ 0x54
90026abc:	f7ff fc02 	bl	900262c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90026ac0:	e73e      	b.n	90026940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026ac2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026ac4:	f3c3 3203 	ubfx	r2, r3, #12, #4
90026ac8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026aca:	f3c3 3503 	ubfx	r5, r3, #12, #4
90026ace:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026ad0:	fa1f fc82 	uxth.w	ip, r2
90026ad4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026ad8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026ada:	ea4f 100c 	mov.w	r0, ip, lsl #4
90026ade:	141f      	asrs	r7, r3, #16
90026ae0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026ae2:	141b      	asrs	r3, r3, #16
90026ae4:	fb01 3707 	mla	r7, r1, r7, r3
90026ae8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90026aea:	eb03 0a07 	add.w	sl, r3, r7
90026aee:	f813 9007 	ldrb.w	r9, [r3, r7]
90026af2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90026af6:	f89a 8001 	ldrb.w	r8, [sl, #1]
90026afa:	b29b      	uxth	r3, r3
90026afc:	2d00      	cmp	r5, #0
90026afe:	f000 813d 	beq.w	90026d7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90026b02:	f81a 4001 	ldrb.w	r4, [sl, r1]
90026b06:	eb0a 0b01 	add.w	fp, sl, r1
90026b0a:	fa1f fa85 	uxth.w	sl, r5
90026b0e:	940f      	str	r4, [sp, #60]	@ 0x3c
90026b10:	fb0a fc0c 	mul.w	ip, sl, ip
90026b14:	f89b 4001 	ldrb.w	r4, [fp, #1]
90026b18:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90026b1c:	eba0 000c 	sub.w	r0, r0, ip
90026b20:	9410      	str	r4, [sp, #64]	@ 0x40
90026b22:	fa1f fa8a 	uxth.w	sl, sl
90026b26:	b280      	uxth	r0, r0
90026b28:	eba3 030a 	sub.w	r3, r3, sl
90026b2c:	fb08 f000 	mul.w	r0, r8, r0
90026b30:	b29b      	uxth	r3, r3
90026b32:	fb09 0303 	mla	r3, r9, r3, r0
90026b36:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90026b38:	fb0a 3300 	mla	r3, sl, r0, r3
90026b3c:	fb0c 3304 	mla	r3, ip, r4, r3
90026b40:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026b44:	2b00      	cmp	r3, #0
90026b46:	f000 810b 	beq.w	90026d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90026b4a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90026b4c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90026b50:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90026b52:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90026b56:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90026b5a:	f000 8114 	beq.w	90026d86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90026b5e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026b62:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90026b66:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026b6a:	fb0a fc0c 	mul.w	ip, sl, ip
90026b6e:	fb09 f707 	mul.w	r7, r9, r7
90026b72:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90026b76:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90026b7a:	f107 0b20 	add.w	fp, r7, #32
90026b7e:	44cc      	add	ip, r9
90026b80:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90026b84:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90026b88:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026b8c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026b90:	ea4c 0909 	orr.w	r9, ip, r9
90026b94:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90026b98:	8847      	ldrh	r7, [r0, #2]
90026b9a:	d019      	beq.n	90026bd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90026b9c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026ba0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026ba4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026ba8:	fb0a fc0c 	mul.w	ip, sl, ip
90026bac:	fb08 f807 	mul.w	r8, r8, r7
90026bb0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90026bb4:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90026bb8:	f108 0b20 	add.w	fp, r8, #32
90026bbc:	44bc      	add	ip, r7
90026bbe:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90026bc2:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90026bc6:	0a3f      	lsrs	r7, r7, #8
90026bc8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026bcc:	ea4c 0707 	orr.w	r7, ip, r7
90026bd0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90026bd4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026bd8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90026bdc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90026be0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90026be4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026be8:	ea4c 0909 	orr.w	r9, ip, r9
90026bec:	ea4a 0707 	orr.w	r7, sl, r7
90026bf0:	2d00      	cmp	r5, #0
90026bf2:	f000 80ca 	beq.w	90026d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90026bf6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90026bfa:	3901      	subs	r1, #1
90026bfc:	0049      	lsls	r1, r1, #1
90026bfe:	3102      	adds	r1, #2
90026c00:	eb00 0c01 	add.w	ip, r0, r1
90026c04:	5a41      	ldrh	r1, [r0, r1]
90026c06:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90026c08:	28ff      	cmp	r0, #255	@ 0xff
90026c0a:	d019      	beq.n	90026c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90026c0c:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90026c10:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90026c12:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026c16:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026c1a:	fb04 fa01 	mul.w	sl, r4, r1
90026c1e:	fb08 f800 	mul.w	r8, r8, r0
90026c22:	f10a 0020 	add.w	r0, sl, #32
90026c26:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90026c2a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026c2e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90026c32:	4441      	add	r1, r8
90026c34:	0a00      	lsrs	r0, r0, #8
90026c36:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90026c3a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026c3e:	4301      	orrs	r1, r0
90026c40:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90026c42:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90026c46:	2cff      	cmp	r4, #255	@ 0xff
90026c48:	d01a      	beq.n	90026c80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90026c4a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90026c4e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026c52:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026c56:	fb04 fa00 	mul.w	sl, r4, r0
90026c5a:	fb08 f80c 	mul.w	r8, r8, ip
90026c5e:	f10a 0c20 	add.w	ip, sl, #32
90026c62:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90026c66:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026c6a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90026c6e:	4440      	add	r0, r8
90026c70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026c74:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90026c78:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90026c7c:	ea40 000c 	orr.w	r0, r0, ip
90026c80:	fb15 fc02 	smulbb	ip, r5, r2
90026c84:	f1c5 0810 	rsb	r8, r5, #16
90026c88:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90026c8c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026c90:	ea4f 0cec 	mov.w	ip, ip, asr #3
90026c94:	eba8 0802 	sub.w	r8, r8, r2
90026c98:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90026c9c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026ca0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90026ca4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026ca8:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90026cac:	ea4a 0101 	orr.w	r1, sl, r1
90026cb0:	437a      	muls	r2, r7
90026cb2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90026cb6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026cba:	fb09 2208 	mla	r2, r9, r8, r2
90026cbe:	ea4b 0000 	orr.w	r0, fp, r0
90026cc2:	fb05 2201 	mla	r2, r5, r1, r2
90026cc6:	fb0c 2200 	mla	r2, ip, r0, r2
90026cca:	0d57      	lsrs	r7, r2, #21
90026ccc:	0952      	lsrs	r2, r2, #5
90026cce:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026cd2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026cd6:	433a      	orrs	r2, r7
90026cd8:	2bff      	cmp	r3, #255	@ 0xff
90026cda:	b292      	uxth	r2, r2
90026cdc:	d102      	bne.n	90026ce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90026cde:	9912      	ldr	r1, [sp, #72]	@ 0x48
90026ce0:	29ff      	cmp	r1, #255	@ 0xff
90026ce2:	d063      	beq.n	90026dac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90026ce4:	980a      	ldr	r0, [sp, #40]	@ 0x28
90026ce6:	1215      	asrs	r5, r2, #8
90026ce8:	f8be 1000 	ldrh.w	r1, [lr]
90026cec:	4343      	muls	r3, r0
90026cee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90026cf0:	10cf      	asrs	r7, r1, #3
90026cf2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026cf6:	1c58      	adds	r0, r3, #1
90026cf8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90026cfc:	eb00 2323 	add.w	r3, r0, r3, asr #8
90026d00:	1208      	asrs	r0, r1, #8
90026d02:	ea6f 2323 	mvn.w	r3, r3, asr #8
90026d06:	00c9      	lsls	r1, r1, #3
90026d08:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026d0c:	b2db      	uxtb	r3, r3
90026d0e:	b2c9      	uxtb	r1, r1
90026d10:	fb10 f003 	smulbb	r0, r0, r3
90026d14:	fb11 f103 	smulbb	r1, r1, r3
90026d18:	fb05 0504 	mla	r5, r5, r4, r0
90026d1c:	10d0      	asrs	r0, r2, #3
90026d1e:	fb17 f703 	smulbb	r7, r7, r3
90026d22:	00d2      	lsls	r2, r2, #3
90026d24:	b2ad      	uxth	r5, r5
90026d26:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026d2a:	b2d2      	uxtb	r2, r2
90026d2c:	fb00 7004 	mla	r0, r0, r4, r7
90026d30:	1c6b      	adds	r3, r5, #1
90026d32:	fb02 1204 	mla	r2, r2, r4, r1
90026d36:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026d3a:	b292      	uxth	r2, r2
90026d3c:	b280      	uxth	r0, r0
90026d3e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026d42:	1c57      	adds	r7, r2, #1
90026d44:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90026d48:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90026d4c:	433d      	orrs	r5, r7
90026d4e:	1c47      	adds	r7, r0, #1
90026d50:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90026d54:	097f      	lsrs	r7, r7, #5
90026d56:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026d5a:	433d      	orrs	r5, r7
90026d5c:	f8ae 5000 	strh.w	r5, [lr]
90026d60:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026d62:	f10e 0e02 	add.w	lr, lr, #2
90026d66:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90026d68:	4413      	add	r3, r2
90026d6a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90026d6c:	9321      	str	r3, [sp, #132]	@ 0x84
90026d6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026d70:	441a      	add	r2, r3
90026d72:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026d74:	3b01      	subs	r3, #1
90026d76:	9222      	str	r2, [sp, #136]	@ 0x88
90026d78:	9313      	str	r3, [sp, #76]	@ 0x4c
90026d7a:	e61c      	b.n	900269b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90026d7c:	fb08 f000 	mul.w	r0, r8, r0
90026d80:	fb09 0303 	mla	r3, r9, r3, r0
90026d84:	e6dc      	b.n	90026b40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90026d86:	46b9      	mov	r9, r7
90026d88:	e704      	b.n	90026b94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90026d8a:	f1c2 0110 	rsb	r1, r2, #16
90026d8e:	437a      	muls	r2, r7
90026d90:	fb09 2901 	mla	r9, r9, r1, r2
90026d94:	ea4f 0949 	mov.w	r9, r9, lsl #1
90026d98:	ea4f 5059 	mov.w	r0, r9, lsr #21
90026d9c:	ea4f 1259 	mov.w	r2, r9, lsr #5
90026da0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026da4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026da8:	4302      	orrs	r2, r0
90026daa:	e795      	b.n	90026cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90026dac:	f8ae 2000 	strh.w	r2, [lr]
90026db0:	e7d6      	b.n	90026d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90026db2:	b017      	add	sp, #92	@ 0x5c
90026db4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026db8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90026db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026dbc:	b085      	sub	sp, #20
90026dbe:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90026dc2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90026dc6:	2800      	cmp	r0, #0
90026dc8:	9103      	str	r1, [sp, #12]
90026dca:	fb00 7406 	mla	r4, r0, r6, r7
90026dce:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90026dd2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90026dd6:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90026dda:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90026dde:	eb02 0904 	add.w	r9, r2, r4
90026de2:	9501      	str	r5, [sp, #4]
90026de4:	f2c0 8141 	blt.w	9002706a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90026de8:	4583      	cmp	fp, r0
90026dea:	f340 813e 	ble.w	9002706a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90026dee:	2f00      	cmp	r7, #0
90026df0:	f2c0 8137 	blt.w	90027062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90026df4:	42be      	cmp	r6, r7
90026df6:	f340 8134 	ble.w	90027062 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90026dfa:	f812 c004 	ldrb.w	ip, [r2, r4]
90026dfe:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90026e02:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90026e06:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026e0a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90026e0e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026e12:	4355      	muls	r5, r2
90026e14:	fb0c f203 	mul.w	r2, ip, r3
90026e18:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90026e1c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90026e20:	441d      	add	r5, r3
90026e22:	f102 0320 	add.w	r3, r2, #32
90026e26:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026e2a:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90026e2e:	0a1b      	lsrs	r3, r3, #8
90026e30:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026e34:	431c      	orrs	r4, r3
90026e36:	1c7b      	adds	r3, r7, #1
90026e38:	f100 811c 	bmi.w	90027074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90026e3c:	429e      	cmp	r6, r3
90026e3e:	f340 8119 	ble.w	90027074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90026e42:	2900      	cmp	r1, #0
90026e44:	f000 8119 	beq.w	9002707a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90026e48:	9a01      	ldr	r2, [sp, #4]
90026e4a:	f899 3001 	ldrb.w	r3, [r9, #1]
90026e4e:	8855      	ldrh	r5, [r2, #2]
90026e50:	ea4f 08e3 	mov.w	r8, r3, asr #3
90026e54:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90026e58:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026e5c:	fb08 f802 	mul.w	r8, r8, r2
90026e60:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90026e64:	435d      	muls	r5, r3
90026e66:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90026e6a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026e6e:	44d0      	add	r8, sl
90026e70:	f105 0a20 	add.w	sl, r5, #32
90026e74:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90026e78:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90026e7c:	0a2d      	lsrs	r5, r5, #8
90026e7e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026e82:	432a      	orrs	r2, r5
90026e84:	3001      	adds	r0, #1
90026e86:	f100 80fe 	bmi.w	90027086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90026e8a:	4583      	cmp	fp, r0
90026e8c:	f340 80fb 	ble.w	90027086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90026e90:	f1be 0f00 	cmp.w	lr, #0
90026e94:	f000 80fc 	beq.w	90027090 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90026e98:	2f00      	cmp	r7, #0
90026e9a:	f2c0 80f1 	blt.w	90027080 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90026e9e:	42be      	cmp	r6, r7
90026ea0:	f340 80ee 	ble.w	90027080 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90026ea4:	9801      	ldr	r0, [sp, #4]
90026ea6:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90026eaa:	f819 5006 	ldrb.w	r5, [r9, r6]
90026eae:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90026eb2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90026eb6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90026eba:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90026ebe:	fb0a fa00 	mul.w	sl, sl, r0
90026ec2:	fb05 f808 	mul.w	r8, r5, r8
90026ec6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90026eca:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90026ece:	4482      	add	sl, r0
90026ed0:	f108 0020 	add.w	r0, r8, #32
90026ed4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90026ed8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90026edc:	0a00      	lsrs	r0, r0, #8
90026ede:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026ee2:	ea4b 0b00 	orr.w	fp, fp, r0
90026ee6:	3701      	adds	r7, #1
90026ee8:	f100 80d7 	bmi.w	9002709a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90026eec:	42be      	cmp	r6, r7
90026eee:	f340 80d4 	ble.w	9002709a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90026ef2:	2900      	cmp	r1, #0
90026ef4:	f000 80d4 	beq.w	900270a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90026ef8:	3601      	adds	r6, #1
90026efa:	9801      	ldr	r0, [sp, #4]
90026efc:	f819 7006 	ldrb.w	r7, [r9, r6]
90026f00:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90026f04:	ea4f 09e7 	mov.w	r9, r7, asr #3
90026f08:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90026f0c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026f10:	fb09 f906 	mul.w	r9, r9, r6
90026f14:	fb07 f800 	mul.w	r8, r7, r0
90026f18:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90026f1c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90026f20:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90026f24:	44d1      	add	r9, sl
90026f26:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90026f2a:	f108 0020 	add.w	r0, r8, #32
90026f2e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90026f32:	0a00      	lsrs	r0, r0, #8
90026f34:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026f38:	4330      	orrs	r0, r6
90026f3a:	b28e      	uxth	r6, r1
90026f3c:	fa1f f98e 	uxth.w	r9, lr
90026f40:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90026f44:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90026f48:	fb06 f809 	mul.w	r8, r6, r9
90026f4c:	0136      	lsls	r6, r6, #4
90026f4e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026f52:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90026f56:	9601      	str	r6, [sp, #4]
90026f58:	ea4a 0404 	orr.w	r4, sl, r4
90026f5c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026f60:	fa1f f689 	uxth.w	r6, r9
90026f64:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026f68:	fb11 f90e 	smulbb	r9, r1, lr
90026f6c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026f70:	9602      	str	r6, [sp, #8]
90026f72:	4626      	mov	r6, r4
90026f74:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90026f78:	f1ce 0410 	rsb	r4, lr, #16
90026f7c:	ea4a 0202 	orr.w	r2, sl, r2
90026f80:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026f84:	1a64      	subs	r4, r4, r1
90026f86:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90026f8a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026f8e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026f92:	434a      	muls	r2, r1
90026f94:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90026f98:	ea4a 0000 	orr.w	r0, sl, r0
90026f9c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90026fa0:	fb04 2406 	mla	r4, r4, r6, r2
90026fa4:	9903      	ldr	r1, [sp, #12]
90026fa6:	fb09 4200 	mla	r2, r9, r0, r4
90026faa:	ea4f 440b 	mov.w	r4, fp, lsl #16
90026fae:	9801      	ldr	r0, [sp, #4]
90026fb0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90026fb4:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90026fb8:	8809      	ldrh	r1, [r1, #0]
90026fba:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
90026fbe:	ea44 0b0b 	orr.w	fp, r4, fp
90026fc2:	9c02      	ldr	r4, [sp, #8]
90026fc4:	1b00      	subs	r0, r0, r4
90026fc6:	9c01      	ldr	r4, [sp, #4]
90026fc8:	fb0e 2e0b 	mla	lr, lr, fp, r2
90026fcc:	eba4 0608 	sub.w	r6, r4, r8
90026fd0:	b280      	uxth	r0, r0
90026fd2:	ea4f 525e 	mov.w	r2, lr, lsr #21
90026fd6:	b2b6      	uxth	r6, r6
90026fd8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026fdc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026fe0:	4373      	muls	r3, r6
90026fe2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90026fe6:	fb0c 3300 	mla	r3, ip, r0, r3
90026fea:	9802      	ldr	r0, [sp, #8]
90026fec:	ea42 0e0e 	orr.w	lr, r2, lr
90026ff0:	fb00 3505 	mla	r5, r0, r5, r3
90026ff4:	120b      	asrs	r3, r1, #8
90026ff6:	10c8      	asrs	r0, r1, #3
90026ff8:	fb08 5707 	mla	r7, r8, r7, r5
90026ffc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90027000:	00c9      	lsls	r1, r1, #3
90027002:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027006:	ea6f 2727 	mvn.w	r7, r7, asr #8
9002700a:	fa1f f28e 	uxth.w	r2, lr
9002700e:	b2c9      	uxtb	r1, r1
90027010:	b2ff      	uxtb	r7, r7
90027012:	437b      	muls	r3, r7
90027014:	4378      	muls	r0, r7
90027016:	434f      	muls	r7, r1
90027018:	1c59      	adds	r1, r3, #1
9002701a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002701e:	1213      	asrs	r3, r2, #8
90027020:	f023 0307 	bic.w	r3, r3, #7
90027024:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90027028:	1c41      	adds	r1, r0, #1
9002702a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002702e:	10d1      	asrs	r1, r2, #3
90027030:	021b      	lsls	r3, r3, #8
90027032:	f021 0103 	bic.w	r1, r1, #3
90027036:	00d2      	lsls	r2, r2, #3
90027038:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
9002703c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027040:	00c9      	lsls	r1, r1, #3
90027042:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027046:	430b      	orrs	r3, r1
90027048:	1c79      	adds	r1, r7, #1
9002704a:	eb01 2717 	add.w	r7, r1, r7, lsr #8
9002704e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90027052:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027056:	431a      	orrs	r2, r3
90027058:	9b03      	ldr	r3, [sp, #12]
9002705a:	801a      	strh	r2, [r3, #0]
9002705c:	b005      	add	sp, #20
9002705e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027062:	f04f 0c00 	mov.w	ip, #0
90027066:	4664      	mov	r4, ip
90027068:	e6e5      	b.n	90026e36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
9002706a:	2300      	movs	r3, #0
9002706c:	469c      	mov	ip, r3
9002706e:	461a      	mov	r2, r3
90027070:	461c      	mov	r4, r3
90027072:	e707      	b.n	90026e84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90027074:	2300      	movs	r3, #0
90027076:	461a      	mov	r2, r3
90027078:	e704      	b.n	90026e84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002707a:	460b      	mov	r3, r1
9002707c:	460a      	mov	r2, r1
9002707e:	e701      	b.n	90026e84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90027080:	2500      	movs	r5, #0
90027082:	46ab      	mov	fp, r5
90027084:	e72f      	b.n	90026ee6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90027086:	2700      	movs	r7, #0
90027088:	463d      	mov	r5, r7
9002708a:	4638      	mov	r0, r7
9002708c:	46bb      	mov	fp, r7
9002708e:	e754      	b.n	90026f3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90027090:	4677      	mov	r7, lr
90027092:	4675      	mov	r5, lr
90027094:	4670      	mov	r0, lr
90027096:	46f3      	mov	fp, lr
90027098:	e74f      	b.n	90026f3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002709a:	2700      	movs	r7, #0
9002709c:	4638      	mov	r0, r7
9002709e:	e74c      	b.n	90026f3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
900270a0:	460f      	mov	r7, r1
900270a2:	4608      	mov	r0, r1
900270a4:	e749      	b.n	90026f3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

900270a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900270a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900270ac:	b093      	sub	sp, #76	@ 0x4c
900270ae:	9210      	str	r2, [sp, #64]	@ 0x40
900270b0:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900270b2:	9011      	str	r0, [sp, #68]	@ 0x44
900270b4:	910e      	str	r1, [sp, #56]	@ 0x38
900270b6:	6850      	ldr	r0, [r2, #4]
900270b8:	9306      	str	r3, [sp, #24]
900270ba:	6812      	ldr	r2, [r2, #0]
900270bc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
900270c0:	fb00 1303 	mla	r3, r0, r3, r1
900270c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900270c8:	9307      	str	r3, [sp, #28]
900270ca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900270cc:	681b      	ldr	r3, [r3, #0]
900270ce:	9308      	str	r3, [sp, #32]
900270d0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900270d2:	685b      	ldr	r3, [r3, #4]
900270d4:	9309      	str	r3, [sp, #36]	@ 0x24
900270d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900270d8:	2b00      	cmp	r3, #0
900270da:	dc03      	bgt.n	900270e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900270dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900270de:	2b00      	cmp	r3, #0
900270e0:	f340 83b6 	ble.w	90027850 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900270e4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900270e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900270ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900270ee:	1e48      	subs	r0, r1, #1
900270f0:	1e55      	subs	r5, r2, #1
900270f2:	9b06      	ldr	r3, [sp, #24]
900270f4:	2b00      	cmp	r3, #0
900270f6:	f340 8165 	ble.w	900273c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900270fa:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
900270fc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900270fe:	1436      	asrs	r6, r6, #16
90027100:	ea4f 4323 	mov.w	r3, r3, asr #16
90027104:	d406      	bmi.n	90027114 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90027106:	4286      	cmp	r6, r0
90027108:	da04      	bge.n	90027114 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002710a:	2b00      	cmp	r3, #0
9002710c:	db02      	blt.n	90027114 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002710e:	42ab      	cmp	r3, r5
90027110:	f2c0 8159 	blt.w	900273c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90027114:	3601      	adds	r6, #1
90027116:	f100 8146 	bmi.w	900273a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002711a:	42b1      	cmp	r1, r6
9002711c:	f2c0 8143 	blt.w	900273a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90027120:	3301      	adds	r3, #1
90027122:	f100 8140 	bmi.w	900273a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90027126:	429a      	cmp	r2, r3
90027128:	f2c0 813d 	blt.w	900273a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
9002712c:	9b06      	ldr	r3, [sp, #24]
9002712e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90027132:	9f07      	ldr	r7, [sp, #28]
90027134:	930f      	str	r3, [sp, #60]	@ 0x3c
90027136:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90027138:	2b00      	cmp	r3, #0
9002713a:	f340 8166 	ble.w	9002740a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002713e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90027140:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90027142:	1418      	asrs	r0, r3, #16
90027144:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027146:	142d      	asrs	r5, r5, #16
90027148:	f3c3 3103 	ubfx	r1, r3, #12, #4
9002714c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002714e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90027152:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027154:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90027158:	f100 81f0 	bmi.w	9002753c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002715c:	f102 3eff 	add.w	lr, r2, #4294967295
90027160:	4575      	cmp	r5, lr
90027162:	f280 81eb 	bge.w	9002753c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90027166:	2800      	cmp	r0, #0
90027168:	f2c0 81e8 	blt.w	9002753c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002716c:	f103 3eff 	add.w	lr, r3, #4294967295
90027170:	4570      	cmp	r0, lr
90027172:	f280 81e3 	bge.w	9002753c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90027176:	b212      	sxth	r2, r2
90027178:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002717a:	fa1f fe81 	uxth.w	lr, r1
9002717e:	fb00 5002 	mla	r0, r0, r2, r5
90027182:	ea4f 150e 	mov.w	r5, lr, lsl #4
90027186:	eb03 0a00 	add.w	sl, r3, r0
9002718a:	f813 9000 	ldrb.w	r9, [r3, r0]
9002718e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90027192:	f89a 8001 	ldrb.w	r8, [sl, #1]
90027196:	b29b      	uxth	r3, r3
90027198:	f1bc 0f00 	cmp.w	ip, #0
9002719c:	f000 817b 	beq.w	90027496 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900271a0:	f81a 4002 	ldrb.w	r4, [sl, r2]
900271a4:	eb0a 0b02 	add.w	fp, sl, r2
900271a8:	fa1f fa8c 	uxth.w	sl, ip
900271ac:	940a      	str	r4, [sp, #40]	@ 0x28
900271ae:	fb0a fe0e 	mul.w	lr, sl, lr
900271b2:	f89b 4001 	ldrb.w	r4, [fp, #1]
900271b6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900271ba:	eba5 050e 	sub.w	r5, r5, lr
900271be:	940b      	str	r4, [sp, #44]	@ 0x2c
900271c0:	fa1f fa8a 	uxth.w	sl, sl
900271c4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900271c6:	b2ad      	uxth	r5, r5
900271c8:	eba3 030a 	sub.w	r3, r3, sl
900271cc:	fb08 f505 	mul.w	r5, r8, r5
900271d0:	b29b      	uxth	r3, r3
900271d2:	fb09 5303 	mla	r3, r9, r3, r5
900271d6:	fb0a 3304 	mla	r3, sl, r4, r3
900271da:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900271dc:	fb0e 3304 	mla	r3, lr, r4, r3
900271e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900271e4:	2b00      	cmp	r3, #0
900271e6:	f000 80d1 	beq.w	9002738c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900271ea:	9c08      	ldr	r4, [sp, #32]
900271ec:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900271f0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900271f4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900271f8:	f000 8152 	beq.w	900274a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900271fc:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90027200:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90027204:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027208:	fb0a fe0e 	mul.w	lr, sl, lr
9002720c:	fb09 f000 	mul.w	r0, r9, r0
90027210:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90027214:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90027218:	f100 0b20 	add.w	fp, r0, #32
9002721c:	44ce      	add	lr, r9
9002721e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90027222:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90027226:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002722a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9002722e:	ea4e 0909 	orr.w	r9, lr, r9
90027232:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90027236:	8868      	ldrh	r0, [r5, #2]
90027238:	d019      	beq.n	9002726e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
9002723a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
9002723e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90027242:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027246:	fb0a fe0e 	mul.w	lr, sl, lr
9002724a:	fb08 f800 	mul.w	r8, r8, r0
9002724e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90027252:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90027256:	f108 0b20 	add.w	fp, r8, #32
9002725a:	4486      	add	lr, r0
9002725c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90027260:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90027264:	0a00      	lsrs	r0, r0, #8
90027266:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002726a:	ea4e 0000 	orr.w	r0, lr, r0
9002726e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90027272:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90027276:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002727a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002727e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90027282:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027286:	ea4e 0909 	orr.w	r9, lr, r9
9002728a:	ea4a 0000 	orr.w	r0, sl, r0
9002728e:	f1bc 0f00 	cmp.w	ip, #0
90027292:	f000 8107 	beq.w	900274a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90027296:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
9002729a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002729c:	3a01      	subs	r2, #1
9002729e:	2cff      	cmp	r4, #255	@ 0xff
900272a0:	ea4f 0242 	mov.w	r2, r2, lsl #1
900272a4:	f102 0202 	add.w	r2, r2, #2
900272a8:	eb05 0e02 	add.w	lr, r5, r2
900272ac:	5aaa      	ldrh	r2, [r5, r2]
900272ae:	d018      	beq.n	900272e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
900272b0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
900272b4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900272b8:	ea4f 08e4 	mov.w	r8, r4, asr #3
900272bc:	fb04 fa02 	mul.w	sl, r4, r2
900272c0:	fb08 f805 	mul.w	r8, r8, r5
900272c4:	f10a 0520 	add.w	r5, sl, #32
900272c8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900272cc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900272d0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900272d4:	4442      	add	r2, r8
900272d6:	0a2d      	lsrs	r5, r5, #8
900272d8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900272dc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900272e0:	432a      	orrs	r2, r5
900272e2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900272e4:	f8be 5002 	ldrh.w	r5, [lr, #2]
900272e8:	2cff      	cmp	r4, #255	@ 0xff
900272ea:	d01a      	beq.n	90027322 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
900272ec:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
900272f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900272f4:	ea4f 08e4 	mov.w	r8, r4, asr #3
900272f8:	fb04 fa05 	mul.w	sl, r4, r5
900272fc:	fb08 f80e 	mul.w	r8, r8, lr
90027300:	f10a 0e20 	add.w	lr, sl, #32
90027304:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90027308:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002730c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90027310:	4445      	add	r5, r8
90027312:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90027316:	ea06 1555 	and.w	r5, r6, r5, lsr #5
9002731a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
9002731e:	ea45 050e 	orr.w	r5, r5, lr
90027322:	fb1c fe01 	smulbb	lr, ip, r1
90027326:	f1cc 0810 	rsb	r8, ip, #16
9002732a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002732e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027332:	ea4f 0eee 	mov.w	lr, lr, asr #3
90027336:	eba8 0801 	sub.w	r8, r8, r1
9002733a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002733e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027342:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90027346:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002734a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002734e:	ea4a 0202 	orr.w	r2, sl, r2
90027352:	4341      	muls	r1, r0
90027354:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90027358:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002735c:	fb09 1108 	mla	r1, r9, r8, r1
90027360:	ea4b 0505 	orr.w	r5, fp, r5
90027364:	fb0c 1102 	mla	r1, ip, r2, r1
90027368:	fb0e 1e05 	mla	lr, lr, r5, r1
9002736c:	ea4f 525e 	mov.w	r2, lr, lsr #21
90027370:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90027374:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027378:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002737c:	ea42 0e0e 	orr.w	lr, r2, lr
90027380:	fa1f f28e 	uxth.w	r2, lr
90027384:	2bff      	cmp	r3, #255	@ 0xff
90027386:	f040 80a1 	bne.w	900274cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
9002738a:	803a      	strh	r2, [r7, #0]
9002738c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002738e:	3702      	adds	r7, #2
90027390:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90027392:	4413      	add	r3, r2
90027394:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90027396:	931d      	str	r3, [sp, #116]	@ 0x74
90027398:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002739a:	441a      	add	r2, r3
9002739c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002739e:	3b01      	subs	r3, #1
900273a0:	921e      	str	r2, [sp, #120]	@ 0x78
900273a2:	930f      	str	r3, [sp, #60]	@ 0x3c
900273a4:	e6c7      	b.n	90027136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900273a6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900273a8:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
900273aa:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
900273ac:	4433      	add	r3, r6
900273ae:	931d      	str	r3, [sp, #116]	@ 0x74
900273b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900273b2:	441c      	add	r4, r3
900273b4:	9b06      	ldr	r3, [sp, #24]
900273b6:	3b01      	subs	r3, #1
900273b8:	941e      	str	r4, [sp, #120]	@ 0x78
900273ba:	9306      	str	r3, [sp, #24]
900273bc:	9b07      	ldr	r3, [sp, #28]
900273be:	3302      	adds	r3, #2
900273c0:	9307      	str	r3, [sp, #28]
900273c2:	e696      	b.n	900270f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900273c4:	d028      	beq.n	90027418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900273c6:	9b06      	ldr	r3, [sp, #24]
900273c8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900273ca:	3b01      	subs	r3, #1
900273cc:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900273ce:	fb00 5003 	mla	r0, r0, r3, r5
900273d2:	1400      	asrs	r0, r0, #16
900273d4:	f53f aeaa 	bmi.w	9002712c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900273d8:	3901      	subs	r1, #1
900273da:	4288      	cmp	r0, r1
900273dc:	f6bf aea6 	bge.w	9002712c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900273e0:	9920      	ldr	r1, [sp, #128]	@ 0x80
900273e2:	981e      	ldr	r0, [sp, #120]	@ 0x78
900273e4:	fb01 0303 	mla	r3, r1, r3, r0
900273e8:	141b      	asrs	r3, r3, #16
900273ea:	f53f ae9f 	bmi.w	9002712c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900273ee:	3a01      	subs	r2, #1
900273f0:	4293      	cmp	r3, r2
900273f2:	f6bf ae9b 	bge.w	9002712c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900273f6:	9b06      	ldr	r3, [sp, #24]
900273f8:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900273fc:	f8dd e01c 	ldr.w	lr, [sp, #28]
90027400:	930f      	str	r3, [sp, #60]	@ 0x3c
90027402:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90027404:	2b00      	cmp	r3, #0
90027406:	f300 80b6 	bgt.w	90027576 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
9002740a:	9b06      	ldr	r3, [sp, #24]
9002740c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90027410:	9b07      	ldr	r3, [sp, #28]
90027412:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90027416:	9307      	str	r3, [sp, #28]
90027418:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002741a:	2b00      	cmp	r3, #0
9002741c:	f340 8218 	ble.w	90027850 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90027420:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027424:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027426:	ee30 0a04 	vadd.f32	s0, s0, s8
9002742a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002742e:	eef0 6a62 	vmov.f32	s13, s5
90027432:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027436:	ee31 1a05 	vadd.f32	s2, s2, s10
9002743a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002743e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90027442:	eef0 6a43 	vmov.f32	s13, s6
90027446:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002744a:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
9002744e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027452:	ee61 7a27 	vmul.f32	s15, s2, s15
90027456:	ee77 2a62 	vsub.f32	s5, s14, s5
9002745a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002745e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027462:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027466:	ee12 2a90 	vmov	r2, s5
9002746a:	eef0 2a47 	vmov.f32	s5, s14
9002746e:	fb92 f3f3 	sdiv	r3, r2, r3
90027472:	ee13 2a10 	vmov	r2, s6
90027476:	931f      	str	r3, [sp, #124]	@ 0x7c
90027478:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002747a:	eeb0 3a67 	vmov.f32	s6, s15
9002747e:	fb92 f3f3 	sdiv	r3, r2, r3
90027482:	9320      	str	r3, [sp, #128]	@ 0x80
90027484:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027486:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027488:	3b01      	subs	r3, #1
9002748a:	930e      	str	r3, [sp, #56]	@ 0x38
9002748c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002748e:	bf08      	it	eq
90027490:	4613      	moveq	r3, r2
90027492:	9306      	str	r3, [sp, #24]
90027494:	e61f      	b.n	900270d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90027496:	fb08 f505 	mul.w	r5, r8, r5
9002749a:	fb09 5303 	mla	r3, r9, r3, r5
9002749e:	e69f      	b.n	900271e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
900274a0:	4681      	mov	r9, r0
900274a2:	e6c6      	b.n	90027232 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
900274a4:	f1c1 0210 	rsb	r2, r1, #16
900274a8:	4341      	muls	r1, r0
900274aa:	fb09 1902 	mla	r9, r9, r2, r1
900274ae:	ea4f 0949 	mov.w	r9, r9, lsl #1
900274b2:	ea4f 5259 	mov.w	r2, r9, lsr #21
900274b6:	ea4f 1959 	mov.w	r9, r9, lsr #5
900274ba:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900274be:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
900274c2:	ea42 0909 	orr.w	r9, r2, r9
900274c6:	fa1f f289 	uxth.w	r2, r9
900274ca:	e75b      	b.n	90027384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
900274cc:	f8b7 c000 	ldrh.w	ip, [r7]
900274d0:	43db      	mvns	r3, r3
900274d2:	ea4f 202c 	mov.w	r0, ip, asr #8
900274d6:	fa5f fe83 	uxtb.w	lr, r3
900274da:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900274de:	ea4f 05ec 	mov.w	r5, ip, asr #3
900274e2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
900274e6:	fb00 f00e 	mul.w	r0, r0, lr
900274ea:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900274ee:	b2db      	uxtb	r3, r3
900274f0:	1c41      	adds	r1, r0, #1
900274f2:	fb05 f50e 	mul.w	r5, r5, lr
900274f6:	fb03 f30e 	mul.w	r3, r3, lr
900274fa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900274fe:	1211      	asrs	r1, r2, #8
90027500:	f021 0107 	bic.w	r1, r1, #7
90027504:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027508:	48d3      	ldr	r0, [pc, #844]	@ (90027858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
9002750a:	b2c9      	uxtb	r1, r1
9002750c:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90027510:	1c69      	adds	r1, r5, #1
90027512:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90027516:	10d1      	asrs	r1, r2, #3
90027518:	00d2      	lsls	r2, r2, #3
9002751a:	f021 0103 	bic.w	r1, r1, #3
9002751e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90027522:	00c9      	lsls	r1, r1, #3
90027524:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027528:	4301      	orrs	r1, r0
9002752a:	1c58      	adds	r0, r3, #1
9002752c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90027530:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90027534:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027538:	430a      	orrs	r2, r1
9002753a:	e726      	b.n	9002738a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
9002753c:	f115 0e01 	adds.w	lr, r5, #1
90027540:	f53f af24 	bmi.w	9002738c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027544:	4572      	cmp	r2, lr
90027546:	f6ff af21 	blt.w	9002738c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002754a:	f110 0e01 	adds.w	lr, r0, #1
9002754e:	f53f af1d 	bmi.w	9002738c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027552:	4573      	cmp	r3, lr
90027554:	f6ff af1a 	blt.w	9002738c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027558:	b21b      	sxth	r3, r3
9002755a:	b212      	sxth	r2, r2
9002755c:	9301      	str	r3, [sp, #4]
9002755e:	9200      	str	r2, [sp, #0]
90027560:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90027564:	e9cd 5002 	strd	r5, r0, [sp, #8]
90027568:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
9002756c:	4639      	mov	r1, r7
9002756e:	9811      	ldr	r0, [sp, #68]	@ 0x44
90027570:	f7ff fc22 	bl	90026db8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90027574:	e70a      	b.n	9002738c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027576:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027578:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002757c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002757e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90027582:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027584:	fa1f fc82 	uxth.w	ip, r2
90027588:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002758c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002758e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90027592:	141f      	asrs	r7, r3, #16
90027594:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027596:	141b      	asrs	r3, r3, #16
90027598:	fb01 3707 	mla	r7, r1, r7, r3
9002759c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002759e:	eb03 0a07 	add.w	sl, r3, r7
900275a2:	f813 9007 	ldrb.w	r9, [r3, r7]
900275a6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900275aa:	f89a 8001 	ldrb.w	r8, [sl, #1]
900275ae:	b29b      	uxth	r3, r3
900275b0:	2d00      	cmp	r5, #0
900275b2:	f000 80fe 	beq.w	900277b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
900275b6:	f81a 4001 	ldrb.w	r4, [sl, r1]
900275ba:	eb0a 0b01 	add.w	fp, sl, r1
900275be:	fa1f fa85 	uxth.w	sl, r5
900275c2:	940c      	str	r4, [sp, #48]	@ 0x30
900275c4:	fb0a fc0c 	mul.w	ip, sl, ip
900275c8:	f89b 4001 	ldrb.w	r4, [fp, #1]
900275cc:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900275d0:	eba0 000c 	sub.w	r0, r0, ip
900275d4:	940d      	str	r4, [sp, #52]	@ 0x34
900275d6:	fa1f fa8a 	uxth.w	sl, sl
900275da:	b280      	uxth	r0, r0
900275dc:	eba3 030a 	sub.w	r3, r3, sl
900275e0:	fb08 f000 	mul.w	r0, r8, r0
900275e4:	b29b      	uxth	r3, r3
900275e6:	fb09 0303 	mla	r3, r9, r3, r0
900275ea:	980c      	ldr	r0, [sp, #48]	@ 0x30
900275ec:	fb0a 3300 	mla	r3, sl, r0, r3
900275f0:	fb0c 3304 	mla	r3, ip, r4, r3
900275f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900275f8:	2b00      	cmp	r3, #0
900275fa:	f000 80cc 	beq.w	90027796 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900275fe:	9808      	ldr	r0, [sp, #32]
90027600:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90027604:	9c08      	ldr	r4, [sp, #32]
90027606:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002760a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
9002760e:	f000 80d5 	beq.w	900277bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90027612:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90027616:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002761a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002761e:	fb0a fc0c 	mul.w	ip, sl, ip
90027622:	fb09 f707 	mul.w	r7, r9, r7
90027626:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002762a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002762e:	f107 0b20 	add.w	fp, r7, #32
90027632:	44cc      	add	ip, r9
90027634:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90027638:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002763c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027640:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90027644:	ea4c 0909 	orr.w	r9, ip, r9
90027648:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002764c:	8847      	ldrh	r7, [r0, #2]
9002764e:	d019      	beq.n	90027684 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90027650:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90027654:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90027658:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002765c:	fb0a fc0c 	mul.w	ip, sl, ip
90027660:	fb08 f807 	mul.w	r8, r8, r7
90027664:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90027668:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002766c:	f108 0b20 	add.w	fp, r8, #32
90027670:	44bc      	add	ip, r7
90027672:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90027676:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002767a:	0a3f      	lsrs	r7, r7, #8
9002767c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027680:	ea4c 0707 	orr.w	r7, ip, r7
90027684:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90027688:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002768c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90027690:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90027694:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90027698:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002769c:	ea4c 0909 	orr.w	r9, ip, r9
900276a0:	ea4a 0707 	orr.w	r7, sl, r7
900276a4:	2d00      	cmp	r5, #0
900276a6:	f000 808b 	beq.w	900277c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
900276aa:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900276ae:	3901      	subs	r1, #1
900276b0:	0049      	lsls	r1, r1, #1
900276b2:	3102      	adds	r1, #2
900276b4:	eb00 0c01 	add.w	ip, r0, r1
900276b8:	5a41      	ldrh	r1, [r0, r1]
900276ba:	980c      	ldr	r0, [sp, #48]	@ 0x30
900276bc:	28ff      	cmp	r0, #255	@ 0xff
900276be:	d019      	beq.n	900276f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
900276c0:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
900276c4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900276c6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900276ca:	ea4f 08e4 	mov.w	r8, r4, asr #3
900276ce:	fb04 fa01 	mul.w	sl, r4, r1
900276d2:	fb08 f800 	mul.w	r8, r8, r0
900276d6:	f10a 0020 	add.w	r0, sl, #32
900276da:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900276de:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900276e2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900276e6:	4441      	add	r1, r8
900276e8:	0a00      	lsrs	r0, r0, #8
900276ea:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900276ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900276f2:	4301      	orrs	r1, r0
900276f4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900276f6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900276fa:	2cff      	cmp	r4, #255	@ 0xff
900276fc:	d01a      	beq.n	90027734 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
900276fe:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90027702:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027706:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002770a:	fb04 fa00 	mul.w	sl, r4, r0
9002770e:	fb08 f80c 	mul.w	r8, r8, ip
90027712:	f10a 0c20 	add.w	ip, sl, #32
90027716:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002771a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002771e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90027722:	4440      	add	r0, r8
90027724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90027728:	ea06 1050 	and.w	r0, r6, r0, lsr #5
9002772c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90027730:	ea40 000c 	orr.w	r0, r0, ip
90027734:	fb15 fc02 	smulbb	ip, r5, r2
90027738:	f1c5 0810 	rsb	r8, r5, #16
9002773c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90027740:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90027744:	ea4f 0cec 	mov.w	ip, ip, asr #3
90027748:	eba8 0802 	sub.w	r8, r8, r2
9002774c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90027750:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027754:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90027758:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002775c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90027760:	ea4a 0101 	orr.w	r1, sl, r1
90027764:	437a      	muls	r2, r7
90027766:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002776a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002776e:	fb09 2208 	mla	r2, r9, r8, r2
90027772:	ea4b 0000 	orr.w	r0, fp, r0
90027776:	fb05 2201 	mla	r2, r5, r1, r2
9002777a:	fb0c 2200 	mla	r2, ip, r0, r2
9002777e:	0d57      	lsrs	r7, r2, #21
90027780:	0952      	lsrs	r2, r2, #5
90027782:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027786:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002778a:	433a      	orrs	r2, r7
9002778c:	2bff      	cmp	r3, #255	@ 0xff
9002778e:	b292      	uxth	r2, r2
90027790:	d127      	bne.n	900277e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90027792:	f8ae 2000 	strh.w	r2, [lr]
90027796:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027798:	f10e 0e02 	add.w	lr, lr, #2
9002779c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
9002779e:	4413      	add	r3, r2
900277a0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
900277a2:	931d      	str	r3, [sp, #116]	@ 0x74
900277a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900277a6:	441a      	add	r2, r3
900277a8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900277aa:	3b01      	subs	r3, #1
900277ac:	921e      	str	r2, [sp, #120]	@ 0x78
900277ae:	930f      	str	r3, [sp, #60]	@ 0x3c
900277b0:	e627      	b.n	90027402 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900277b2:	fb08 f000 	mul.w	r0, r8, r0
900277b6:	fb09 0303 	mla	r3, r9, r3, r0
900277ba:	e71b      	b.n	900275f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
900277bc:	46b9      	mov	r9, r7
900277be:	e743      	b.n	90027648 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
900277c0:	f1c2 0110 	rsb	r1, r2, #16
900277c4:	437a      	muls	r2, r7
900277c6:	fb09 2901 	mla	r9, r9, r1, r2
900277ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
900277ce:	ea4f 5059 	mov.w	r0, r9, lsr #21
900277d2:	ea4f 1259 	mov.w	r2, r9, lsr #5
900277d6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900277da:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900277de:	4302      	orrs	r2, r0
900277e0:	e7d4      	b.n	9002778c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
900277e2:	f8be 7000 	ldrh.w	r7, [lr]
900277e6:	43db      	mvns	r3, r3
900277e8:	4c1b      	ldr	r4, [pc, #108]	@ (90027858 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900277ea:	1238      	asrs	r0, r7, #8
900277ec:	fa5f fc83 	uxtb.w	ip, r3
900277f0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900277f4:	10fd      	asrs	r5, r7, #3
900277f6:	00fb      	lsls	r3, r7, #3
900277f8:	fb00 f00c 	mul.w	r0, r0, ip
900277fc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90027800:	b2db      	uxtb	r3, r3
90027802:	fb05 f10c 	mul.w	r1, r5, ip
90027806:	1c45      	adds	r5, r0, #1
90027808:	fb03 f30c 	mul.w	r3, r3, ip
9002780c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90027810:	1215      	asrs	r5, r2, #8
90027812:	f025 0507 	bic.w	r5, r5, #7
90027816:	eb05 2010 	add.w	r0, r5, r0, lsr #8
9002781a:	1c4d      	adds	r5, r1, #1
9002781c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90027820:	10d1      	asrs	r1, r2, #3
90027822:	b2c0      	uxtb	r0, r0
90027824:	f021 0103 	bic.w	r1, r1, #3
90027828:	00d2      	lsls	r2, r2, #3
9002782a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
9002782e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90027832:	00c9      	lsls	r1, r1, #3
90027834:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027838:	4308      	orrs	r0, r1
9002783a:	1c59      	adds	r1, r3, #1
9002783c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90027840:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027844:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90027848:	4318      	orrs	r0, r3
9002784a:	f8ae 0000 	strh.w	r0, [lr]
9002784e:	e7a2      	b.n	90027796 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90027850:	b013      	add	sp, #76	@ 0x4c
90027852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027856:	bf00      	nop
90027858:	fffff800 	.word	0xfffff800

9002785c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
9002785c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027860:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90027864:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90027868:	fb05 4c03 	mla	ip, r5, r3, r4
9002786c:	2d00      	cmp	r5, #0
9002786e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90027872:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90027876:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
9002787a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
9002787e:	8808      	ldrh	r0, [r1, #0]
90027880:	f2c0 80a7 	blt.w	900279d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90027884:	45aa      	cmp	sl, r5
90027886:	f340 80a4 	ble.w	900279d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002788a:	2c00      	cmp	r4, #0
9002788c:	f2c0 809f 	blt.w	900279ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90027890:	42a3      	cmp	r3, r4
90027892:	f340 809c 	ble.w	900279ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90027896:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
9002789a:	1c62      	adds	r2, r4, #1
9002789c:	f100 809c 	bmi.w	900279d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900278a0:	4293      	cmp	r3, r2
900278a2:	f340 8099 	ble.w	900279d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900278a6:	f1b9 0f00 	cmp.w	r9, #0
900278aa:	f000 8095 	beq.w	900279d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900278ae:	f8be c002 	ldrh.w	ip, [lr, #2]
900278b2:	3501      	adds	r5, #1
900278b4:	f100 8094 	bmi.w	900279e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900278b8:	45aa      	cmp	sl, r5
900278ba:	f340 8091 	ble.w	900279e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900278be:	2f00      	cmp	r7, #0
900278c0:	f000 808e 	beq.w	900279e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900278c4:	2c00      	cmp	r4, #0
900278c6:	f2c0 8089 	blt.w	900279dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900278ca:	42a3      	cmp	r3, r4
900278cc:	f340 8086 	ble.w	900279dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900278d0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
900278d4:	3401      	adds	r4, #1
900278d6:	f100 8086 	bmi.w	900279e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900278da:	42a3      	cmp	r3, r4
900278dc:	f340 8083 	ble.w	900279e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900278e0:	f1b9 0f00 	cmp.w	r9, #0
900278e4:	d07f      	beq.n	900279e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900278e6:	3301      	adds	r3, #1
900278e8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
900278ec:	ea4f 4408 	mov.w	r4, r8, lsl #16
900278f0:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
900278f4:	fb19 fe07 	smulbb	lr, r9, r7
900278f8:	f1c7 0210 	rsb	r2, r7, #16
900278fc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90027900:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90027904:	eba2 0209 	sub.w	r2, r2, r9
90027908:	ea44 0808 	orr.w	r8, r4, r8
9002790c:	ea4f 440c 	mov.w	r4, ip, lsl #16
90027910:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90027914:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90027918:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
9002791c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90027920:	ea44 0c0c 	orr.w	ip, r4, ip
90027924:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90027928:	fb04 f40c 	mul.w	r4, r4, ip
9002792c:	fb02 4808 	mla	r8, r2, r8, r4
90027930:	041a      	lsls	r2, r3, #16
90027932:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90027936:	b2b4      	uxth	r4, r6
90027938:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002793c:	43f6      	mvns	r6, r6
9002793e:	4313      	orrs	r3, r2
90027940:	042a      	lsls	r2, r5, #16
90027942:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90027946:	b2f6      	uxtb	r6, r6
90027948:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002794c:	fb0e 8303 	mla	r3, lr, r3, r8
90027950:	432a      	orrs	r2, r5
90027952:	fb07 3202 	mla	r2, r7, r2, r3
90027956:	10c7      	asrs	r7, r0, #3
90027958:	0d53      	lsrs	r3, r2, #21
9002795a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002795e:	0952      	lsrs	r2, r2, #5
90027960:	fb17 f706 	smulbb	r7, r7, r6
90027964:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027968:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002796c:	431a      	orrs	r2, r3
9002796e:	b293      	uxth	r3, r2
90027970:	1202      	asrs	r2, r0, #8
90027972:	121d      	asrs	r5, r3, #8
90027974:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90027978:	00c0      	lsls	r0, r0, #3
9002797a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002797e:	fb12 f206 	smulbb	r2, r2, r6
90027982:	b2c0      	uxtb	r0, r0
90027984:	fb05 2504 	mla	r5, r5, r4, r2
90027988:	10da      	asrs	r2, r3, #3
9002798a:	fb10 f006 	smulbb	r0, r0, r6
9002798e:	00db      	lsls	r3, r3, #3
90027990:	b2ad      	uxth	r5, r5
90027992:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027996:	b2db      	uxtb	r3, r3
90027998:	fb02 7204 	mla	r2, r2, r4, r7
9002799c:	fb03 0004 	mla	r0, r3, r4, r0
900279a0:	1c6b      	adds	r3, r5, #1
900279a2:	b292      	uxth	r2, r2
900279a4:	b280      	uxth	r0, r0
900279a6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900279aa:	1c43      	adds	r3, r0, #1
900279ac:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900279b0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900279b4:	1c50      	adds	r0, r2, #1
900279b6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900279ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900279be:	0952      	lsrs	r2, r2, #5
900279c0:	432b      	orrs	r3, r5
900279c2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900279c6:	4313      	orrs	r3, r2
900279c8:	800b      	strh	r3, [r1, #0]
900279ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900279ce:	4680      	mov	r8, r0
900279d0:	e763      	b.n	9002789a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
900279d2:	4684      	mov	ip, r0
900279d4:	4680      	mov	r8, r0
900279d6:	e76c      	b.n	900278b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900279d8:	4684      	mov	ip, r0
900279da:	e76a      	b.n	900278b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900279dc:	4605      	mov	r5, r0
900279de:	e779      	b.n	900278d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
900279e0:	4603      	mov	r3, r0
900279e2:	4605      	mov	r5, r0
900279e4:	e782      	b.n	900278ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
900279e6:	4603      	mov	r3, r0
900279e8:	e780      	b.n	900278ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

900279ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900279ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900279ee:	b093      	sub	sp, #76	@ 0x4c
900279f0:	461d      	mov	r5, r3
900279f2:	9210      	str	r2, [sp, #64]	@ 0x40
900279f4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900279f6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
900279fa:	910a      	str	r1, [sp, #40]	@ 0x28
900279fc:	920b      	str	r2, [sp, #44]	@ 0x2c
900279fe:	6859      	ldr	r1, [r3, #4]
90027a00:	681b      	ldr	r3, [r3, #0]
90027a02:	9011      	str	r0, [sp, #68]	@ 0x44
90027a04:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90027a08:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90027a0c:	fb01 2707 	mla	r7, r1, r7, r2
90027a10:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90027a14:	9307      	str	r3, [sp, #28]
90027a16:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027a18:	681b      	ldr	r3, [r3, #0]
90027a1a:	9309      	str	r3, [sp, #36]	@ 0x24
90027a1c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90027a1e:	43db      	mvns	r3, r3
90027a20:	b2db      	uxtb	r3, r3
90027a22:	9308      	str	r3, [sp, #32]
90027a24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027a26:	2b00      	cmp	r3, #0
90027a28:	dc03      	bgt.n	90027a32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90027a2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90027a2c:	2b00      	cmp	r3, #0
90027a2e:	f340 8205 	ble.w	90027e3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027a32:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027a34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027a38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027a3c:	1e48      	subs	r0, r1, #1
90027a3e:	f102 3cff 	add.w	ip, r2, #4294967295
90027a42:	2d00      	cmp	r5, #0
90027a44:	f340 80da 	ble.w	90027bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90027a48:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027a4c:	ea4f 4326 	mov.w	r3, r6, asr #16
90027a50:	d406      	bmi.n	90027a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027a52:	4586      	cmp	lr, r0
90027a54:	da04      	bge.n	90027a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027a56:	2b00      	cmp	r3, #0
90027a58:	db02      	blt.n	90027a60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027a5a:	4563      	cmp	r3, ip
90027a5c:	f2c0 80cf 	blt.w	90027bfe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90027a60:	f11e 0e01 	adds.w	lr, lr, #1
90027a64:	f100 80c1 	bmi.w	90027bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027a68:	4571      	cmp	r1, lr
90027a6a:	f2c0 80be 	blt.w	90027bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027a6e:	3301      	adds	r3, #1
90027a70:	f100 80bb 	bmi.w	90027bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027a74:	429a      	cmp	r2, r3
90027a76:	f2c0 80b8 	blt.w	90027bea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027a7a:	46a9      	mov	r9, r5
90027a7c:	f8dd 801c 	ldr.w	r8, [sp, #28]
90027a80:	f1b9 0f00 	cmp.w	r9, #0
90027a84:	f340 80d8 	ble.w	90027c38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90027a88:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027a8a:	1421      	asrs	r1, r4, #16
90027a8c:	ea4f 4026 	mov.w	r0, r6, asr #16
90027a90:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027a94:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90027a98:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90027a9c:	f100 8112 	bmi.w	90027cc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027aa0:	f10e 3aff 	add.w	sl, lr, #4294967295
90027aa4:	4551      	cmp	r1, sl
90027aa6:	f280 810d 	bge.w	90027cc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027aaa:	2800      	cmp	r0, #0
90027aac:	f2c0 810a 	blt.w	90027cc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027ab0:	f103 3aff 	add.w	sl, r3, #4294967295
90027ab4:	4550      	cmp	r0, sl
90027ab6:	f280 8105 	bge.w	90027cc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027aba:	fa0f f38e 	sxth.w	r3, lr
90027abe:	fb00 1103 	mla	r1, r0, r3, r1
90027ac2:	9809      	ldr	r0, [sp, #36]	@ 0x24
90027ac4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90027ac8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90027acc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90027ad0:	f1bc 0f00 	cmp.w	ip, #0
90027ad4:	d007      	beq.n	90027ae6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90027ad6:	005b      	lsls	r3, r3, #1
90027ad8:	eb0a 0003 	add.w	r0, sl, r3
90027adc:	f83a 3003 	ldrh.w	r3, [sl, r3]
90027ae0:	930c      	str	r3, [sp, #48]	@ 0x30
90027ae2:	8843      	ldrh	r3, [r0, #2]
90027ae4:	930d      	str	r3, [sp, #52]	@ 0x34
90027ae6:	ea4f 400e 	mov.w	r0, lr, lsl #16
90027aea:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90027aee:	fb12 f30c 	smulbb	r3, r2, ip
90027af2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90027af6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90027afa:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90027afe:	10db      	asrs	r3, r3, #3
90027b00:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027b04:	ea40 000e 	orr.w	r0, r0, lr
90027b08:	f1cc 0e10 	rsb	lr, ip, #16
90027b0c:	ea4a 0101 	orr.w	r1, sl, r1
90027b10:	9f08      	ldr	r7, [sp, #32]
90027b12:	ebae 0e02 	sub.w	lr, lr, r2
90027b16:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90027b1a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90027b1e:	4351      	muls	r1, r2
90027b20:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90027b22:	fb0e 1e00 	mla	lr, lr, r0, r1
90027b26:	990c      	ldr	r1, [sp, #48]	@ 0x30
90027b28:	0410      	lsls	r0, r2, #16
90027b2a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027b2e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90027b32:	4310      	orrs	r0, r2
90027b34:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90027b36:	0412      	lsls	r2, r2, #16
90027b38:	fb03 e000 	mla	r0, r3, r0, lr
90027b3c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90027b40:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90027b44:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027b48:	ea42 020e 	orr.w	r2, r2, lr
90027b4c:	fb03 0302 	mla	r3, r3, r2, r0
90027b50:	f8b8 0000 	ldrh.w	r0, [r8]
90027b54:	0d5a      	lsrs	r2, r3, #21
90027b56:	095b      	lsrs	r3, r3, #5
90027b58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027b5c:	1201      	asrs	r1, r0, #8
90027b5e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90027b62:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90027b66:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027b6a:	00c0      	lsls	r0, r0, #3
90027b6c:	4313      	orrs	r3, r2
90027b6e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90027b72:	fb11 f107 	smulbb	r1, r1, r7
90027b76:	b2c0      	uxtb	r0, r0
90027b78:	b29b      	uxth	r3, r3
90027b7a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90027b7e:	fb10 f007 	smulbb	r0, r0, r7
90027b82:	fb1e fe07 	smulbb	lr, lr, r7
90027b86:	ea4f 2c23 	mov.w	ip, r3, asr #8
90027b8a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90027b8e:	fb0c 1c02 	mla	ip, ip, r2, r1
90027b92:	10d9      	asrs	r1, r3, #3
90027b94:	00db      	lsls	r3, r3, #3
90027b96:	fa1f fc8c 	uxth.w	ip, ip
90027b9a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027b9e:	b2db      	uxtb	r3, r3
90027ba0:	fb01 e102 	mla	r1, r1, r2, lr
90027ba4:	fb03 0302 	mla	r3, r3, r2, r0
90027ba8:	b289      	uxth	r1, r1
90027baa:	b29a      	uxth	r2, r3
90027bac:	f10c 0301 	add.w	r3, ip, #1
90027bb0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90027bb4:	1c53      	adds	r3, r2, #1
90027bb6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027bba:	1c4a      	adds	r2, r1, #1
90027bbc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90027bc0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90027bc4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027bc8:	0949      	lsrs	r1, r1, #5
90027bca:	ea43 030c 	orr.w	r3, r3, ip
90027bce:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027bd2:	430b      	orrs	r3, r1
90027bd4:	f8a8 3000 	strh.w	r3, [r8]
90027bd8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027bda:	f108 0802 	add.w	r8, r8, #2
90027bde:	f109 39ff 	add.w	r9, r9, #4294967295
90027be2:	441c      	add	r4, r3
90027be4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027be6:	441e      	add	r6, r3
90027be8:	e74a      	b.n	90027a80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90027bea:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027bec:	3d01      	subs	r5, #1
90027bee:	441c      	add	r4, r3
90027bf0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027bf2:	441e      	add	r6, r3
90027bf4:	9b07      	ldr	r3, [sp, #28]
90027bf6:	3302      	adds	r3, #2
90027bf8:	9307      	str	r3, [sp, #28]
90027bfa:	e722      	b.n	90027a42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90027bfc:	d022      	beq.n	90027c44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90027bfe:	1e6b      	subs	r3, r5, #1
90027c00:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90027c02:	fb00 4003 	mla	r0, r0, r3, r4
90027c06:	1400      	asrs	r0, r0, #16
90027c08:	f53f af37 	bmi.w	90027a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90027c0c:	3901      	subs	r1, #1
90027c0e:	4288      	cmp	r0, r1
90027c10:	f6bf af33 	bge.w	90027a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90027c14:	9920      	ldr	r1, [sp, #128]	@ 0x80
90027c16:	fb01 6303 	mla	r3, r1, r3, r6
90027c1a:	141b      	asrs	r3, r3, #16
90027c1c:	f53f af2d 	bmi.w	90027a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90027c20:	3a01      	subs	r2, #1
90027c22:	4293      	cmp	r3, r2
90027c24:	f6bf af29 	bge.w	90027a7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90027c28:	46a8      	mov	r8, r5
90027c2a:	f8dd 901c 	ldr.w	r9, [sp, #28]
90027c2e:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90027c32:	f1b8 0f00 	cmp.w	r8, #0
90027c36:	dc60      	bgt.n	90027cfa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90027c38:	9b07      	ldr	r3, [sp, #28]
90027c3a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027c3e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027c42:	9307      	str	r3, [sp, #28]
90027c44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027c46:	2b00      	cmp	r3, #0
90027c48:	f340 80f8 	ble.w	90027e3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027c4c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027c50:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027c52:	ee30 0a04 	vadd.f32	s0, s0, s8
90027c56:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027c5a:	eef0 6a62 	vmov.f32	s13, s5
90027c5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027c62:	ee31 1a05 	vadd.f32	s2, s2, s10
90027c66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027c6a:	ee16 4a90 	vmov	r4, s13
90027c6e:	eef0 6a43 	vmov.f32	s13, s6
90027c72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027c76:	ee16 6a90 	vmov	r6, s13
90027c7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027c7e:	ee61 7a27 	vmul.f32	s15, s2, s15
90027c82:	ee77 2a62 	vsub.f32	s5, s14, s5
90027c86:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027c8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027c8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027c92:	ee12 2a90 	vmov	r2, s5
90027c96:	eef0 2a47 	vmov.f32	s5, s14
90027c9a:	fb92 f3f3 	sdiv	r3, r2, r3
90027c9e:	ee13 2a10 	vmov	r2, s6
90027ca2:	931f      	str	r3, [sp, #124]	@ 0x7c
90027ca4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027ca6:	eeb0 3a67 	vmov.f32	s6, s15
90027caa:	fb92 f3f3 	sdiv	r3, r2, r3
90027cae:	9320      	str	r3, [sp, #128]	@ 0x80
90027cb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027cb2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027cb4:	3b01      	subs	r3, #1
90027cb6:	930a      	str	r3, [sp, #40]	@ 0x28
90027cb8:	bf08      	it	eq
90027cba:	4615      	moveq	r5, r2
90027cbc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027cbe:	bf18      	it	ne
90027cc0:	461d      	movne	r5, r3
90027cc2:	e6af      	b.n	90027a24 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027cc4:	f111 0a01 	adds.w	sl, r1, #1
90027cc8:	d486      	bmi.n	90027bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027cca:	45d6      	cmp	lr, sl
90027ccc:	db84      	blt.n	90027bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027cce:	f110 0a01 	adds.w	sl, r0, #1
90027cd2:	d481      	bmi.n	90027bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027cd4:	4553      	cmp	r3, sl
90027cd6:	f6ff af7f 	blt.w	90027bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027cda:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90027cdc:	b21b      	sxth	r3, r3
90027cde:	9101      	str	r1, [sp, #4]
90027ce0:	4641      	mov	r1, r8
90027ce2:	9300      	str	r3, [sp, #0]
90027ce4:	fa0f f38e 	sxth.w	r3, lr
90027ce8:	e9cd 0202 	strd	r0, r2, [sp, #8]
90027cec:	e9cd c704 	strd	ip, r7, [sp, #16]
90027cf0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90027cf2:	9811      	ldr	r0, [sp, #68]	@ 0x44
90027cf4:	f7ff fdb2 	bl	9002785c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90027cf8:	e76e      	b.n	90027bd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027cfa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027cfc:	1430      	asrs	r0, r6, #16
90027cfe:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90027d00:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90027d04:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027d08:	1423      	asrs	r3, r4, #16
90027d0a:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027d0e:	fb01 3000 	mla	r0, r1, r0, r3
90027d12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027d14:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90027d18:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90027d1c:	8858      	ldrh	r0, [r3, #2]
90027d1e:	f1be 0f00 	cmp.w	lr, #0
90027d22:	d00b      	beq.n	90027d3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90027d24:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90027d28:	3901      	subs	r1, #1
90027d2a:	0049      	lsls	r1, r1, #1
90027d2c:	3102      	adds	r1, #2
90027d2e:	eb03 0b01 	add.w	fp, r3, r1
90027d32:	5a5b      	ldrh	r3, [r3, r1]
90027d34:	930e      	str	r3, [sp, #56]	@ 0x38
90027d36:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90027d3a:	930f      	str	r3, [sp, #60]	@ 0x3c
90027d3c:	ea4f 410c 	mov.w	r1, ip, lsl #16
90027d40:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90027d44:	fb12 f30e 	smulbb	r3, r2, lr
90027d48:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90027d4c:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
90027d50:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027d54:	10db      	asrs	r3, r3, #3
90027d56:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027d5a:	ea41 010c 	orr.w	r1, r1, ip
90027d5e:	f1ce 0c10 	rsb	ip, lr, #16
90027d62:	ea4b 0000 	orr.w	r0, fp, r0
90027d66:	9f08      	ldr	r7, [sp, #32]
90027d68:	ebac 0c02 	sub.w	ip, ip, r2
90027d6c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90027d70:	f108 38ff 	add.w	r8, r8, #4294967295
90027d74:	4350      	muls	r0, r2
90027d76:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90027d7a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027d7c:	fb0c 0c01 	mla	ip, ip, r1, r0
90027d80:	980e      	ldr	r0, [sp, #56]	@ 0x38
90027d82:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90027d86:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
90027d8a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90027d8c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027d90:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027d94:	0412      	lsls	r2, r2, #16
90027d96:	ea4b 0101 	orr.w	r1, fp, r1
90027d9a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027d9e:	fb03 c101 	mla	r1, r3, r1, ip
90027da2:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90027da6:	4302      	orrs	r2, r0
90027da8:	fb03 1202 	mla	r2, r3, r2, r1
90027dac:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90027db0:	0952      	lsrs	r2, r2, #5
90027db2:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90027db6:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
90027dba:	f8b9 2000 	ldrh.w	r2, [r9]
90027dbe:	ea4b 0303 	orr.w	r3, fp, r3
90027dc2:	1211      	asrs	r1, r2, #8
90027dc4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90027dc8:	b29b      	uxth	r3, r3
90027dca:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027dce:	00d2      	lsls	r2, r2, #3
90027dd0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90027dd4:	fb11 f107 	smulbb	r1, r1, r7
90027dd8:	1218      	asrs	r0, r3, #8
90027dda:	fb1c fc07 	smulbb	ip, ip, r7
90027dde:	b2d2      	uxtb	r2, r2
90027de0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027de4:	fb12 f207 	smulbb	r2, r2, r7
90027de8:	fb00 100a 	mla	r0, r0, sl, r1
90027dec:	10d9      	asrs	r1, r3, #3
90027dee:	00db      	lsls	r3, r3, #3
90027df0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027df4:	b280      	uxth	r0, r0
90027df6:	b2db      	uxtb	r3, r3
90027df8:	fb01 c10a 	mla	r1, r1, sl, ip
90027dfc:	fb03 230a 	mla	r3, r3, sl, r2
90027e00:	1c42      	adds	r2, r0, #1
90027e02:	b289      	uxth	r1, r1
90027e04:	b29b      	uxth	r3, r3
90027e06:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027e0a:	f101 0c01 	add.w	ip, r1, #1
90027e0e:	1c5a      	adds	r2, r3, #1
90027e10:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90027e14:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90027e18:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90027e1c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027e1e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027e22:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90027e26:	441c      	add	r4, r3
90027e28:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90027e2c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027e2e:	4310      	orrs	r0, r2
90027e30:	441e      	add	r6, r3
90027e32:	ea40 000c 	orr.w	r0, r0, ip
90027e36:	f829 0b02 	strh.w	r0, [r9], #2
90027e3a:	e6fa      	b.n	90027c32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90027e3c:	b013      	add	sp, #76	@ 0x4c
90027e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027e42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90027e42:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90027e46:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90027e4a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90027e4e:	fb0e 4703 	mla	r7, lr, r3, r4
90027e52:	f1be 0f00 	cmp.w	lr, #0
90027e56:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
90027e5a:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
90027e5e:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90027e62:	8808      	ldrh	r0, [r1, #0]
90027e64:	db60      	blt.n	90027f28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90027e66:	45f1      	cmp	r9, lr
90027e68:	dd5e      	ble.n	90027f28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90027e6a:	2c00      	cmp	r4, #0
90027e6c:	db5a      	blt.n	90027f24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90027e6e:	42a3      	cmp	r3, r4
90027e70:	dd58      	ble.n	90027f24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90027e72:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90027e76:	1c62      	adds	r2, r4, #1
90027e78:	d459      	bmi.n	90027f2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027e7a:	4293      	cmp	r3, r2
90027e7c:	dd57      	ble.n	90027f2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027e7e:	2d00      	cmp	r5, #0
90027e80:	d055      	beq.n	90027f2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027e82:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90027e86:	f11e 0e01 	adds.w	lr, lr, #1
90027e8a:	d454      	bmi.n	90027f36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027e8c:	45f1      	cmp	r9, lr
90027e8e:	dd52      	ble.n	90027f36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027e90:	2e00      	cmp	r6, #0
90027e92:	d050      	beq.n	90027f36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027e94:	2c00      	cmp	r4, #0
90027e96:	db4c      	blt.n	90027f32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90027e98:	42a3      	cmp	r3, r4
90027e9a:	dd4a      	ble.n	90027f32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90027e9c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90027ea0:	3401      	adds	r4, #1
90027ea2:	d405      	bmi.n	90027eb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90027ea4:	42a3      	cmp	r3, r4
90027ea6:	dd03      	ble.n	90027eb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90027ea8:	b115      	cbz	r5, 90027eb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90027eaa:	3301      	adds	r3, #1
90027eac:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90027eb0:	fb15 f406 	smulbb	r4, r5, r6
90027eb4:	ea4f 430c 	mov.w	r3, ip, lsl #16
90027eb8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90027ebc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90027ec0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90027ec4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90027ec8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90027ecc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90027ed0:	ea43 0c0c 	orr.w	ip, r3, ip
90027ed4:	f1c6 0310 	rsb	r3, r6, #16
90027ed8:	ea4e 0707 	orr.w	r7, lr, r7
90027edc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90027ee0:	1b5b      	subs	r3, r3, r5
90027ee2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90027ee6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90027eea:	437d      	muls	r5, r7
90027eec:	fb03 5c0c 	mla	ip, r3, ip, r5
90027ef0:	0403      	lsls	r3, r0, #16
90027ef2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027ef6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90027efa:	4318      	orrs	r0, r3
90027efc:	0413      	lsls	r3, r2, #16
90027efe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027f02:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90027f06:	fb04 c000 	mla	r0, r4, r0, ip
90027f0a:	4313      	orrs	r3, r2
90027f0c:	fb06 0003 	mla	r0, r6, r3, r0
90027f10:	0d43      	lsrs	r3, r0, #21
90027f12:	0940      	lsrs	r0, r0, #5
90027f14:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027f18:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027f1c:	4318      	orrs	r0, r3
90027f1e:	8008      	strh	r0, [r1, #0]
90027f20:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90027f24:	4684      	mov	ip, r0
90027f26:	e7a6      	b.n	90027e76 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90027f28:	4607      	mov	r7, r0
90027f2a:	4684      	mov	ip, r0
90027f2c:	e7ab      	b.n	90027e86 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90027f2e:	4607      	mov	r7, r0
90027f30:	e7a9      	b.n	90027e86 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90027f32:	4602      	mov	r2, r0
90027f34:	e7b4      	b.n	90027ea0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90027f36:	4602      	mov	r2, r0
90027f38:	e7ba      	b.n	90027eb0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90027f3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027f3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027f3e:	b08f      	sub	sp, #60	@ 0x3c
90027f40:	461d      	mov	r5, r3
90027f42:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027f44:	9107      	str	r1, [sp, #28]
90027f46:	920c      	str	r2, [sp, #48]	@ 0x30
90027f48:	6859      	ldr	r1, [r3, #4]
90027f4a:	681b      	ldr	r3, [r3, #0]
90027f4c:	900d      	str	r0, [sp, #52]	@ 0x34
90027f4e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
90027f52:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
90027f56:	fb01 2707 	mla	r7, r1, r7, r2
90027f5a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90027f5e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027f60:	f8d3 8000 	ldr.w	r8, [r3]
90027f64:	9b07      	ldr	r3, [sp, #28]
90027f66:	2b00      	cmp	r3, #0
90027f68:	dc03      	bgt.n	90027f72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90027f6a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90027f6c:	2b00      	cmp	r3, #0
90027f6e:	f340 8182 	ble.w	90028276 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90027f72:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027f74:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027f78:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027f7c:	1e48      	subs	r0, r1, #1
90027f7e:	f102 3cff 	add.w	ip, r2, #4294967295
90027f82:	2d00      	cmp	r5, #0
90027f84:	f340 809b 	ble.w	900280be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90027f88:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027f8c:	ea4f 4326 	mov.w	r3, r6, asr #16
90027f90:	d406      	bmi.n	90027fa0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027f92:	4586      	cmp	lr, r0
90027f94:	da04      	bge.n	90027fa0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027f96:	2b00      	cmp	r3, #0
90027f98:	db02      	blt.n	90027fa0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027f9a:	4563      	cmp	r3, ip
90027f9c:	f2c0 8090 	blt.w	900280c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90027fa0:	f11e 0e01 	adds.w	lr, lr, #1
90027fa4:	f100 8084 	bmi.w	900280b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027fa8:	4571      	cmp	r1, lr
90027faa:	f2c0 8081 	blt.w	900280b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027fae:	3301      	adds	r3, #1
90027fb0:	d47e      	bmi.n	900280b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027fb2:	429a      	cmp	r2, r3
90027fb4:	db7c      	blt.n	900280b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027fb6:	46aa      	mov	sl, r5
90027fb8:	46b9      	mov	r9, r7
90027fba:	f1ba 0f00 	cmp.w	sl, #0
90027fbe:	f340 8099 	ble.w	900280f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90027fc2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027fc4:	1421      	asrs	r1, r4, #16
90027fc6:	ea4f 4026 	mov.w	r0, r6, asr #16
90027fca:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027fce:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90027fd2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90027fd6:	f100 80d1 	bmi.w	9002817c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027fda:	f10e 3bff 	add.w	fp, lr, #4294967295
90027fde:	4559      	cmp	r1, fp
90027fe0:	f280 80cc 	bge.w	9002817c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027fe4:	2800      	cmp	r0, #0
90027fe6:	f2c0 80c9 	blt.w	9002817c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027fea:	f103 3bff 	add.w	fp, r3, #4294967295
90027fee:	4558      	cmp	r0, fp
90027ff0:	f280 80c4 	bge.w	9002817c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027ff4:	fa0f fe8e 	sxth.w	lr, lr
90027ff8:	fb00 110e 	mla	r1, r0, lr, r1
90027ffc:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90028000:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90028004:	8841      	ldrh	r1, [r0, #2]
90028006:	f1bc 0f00 	cmp.w	ip, #0
9002800a:	d00b      	beq.n	90028024 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
9002800c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90028010:	3b01      	subs	r3, #1
90028012:	005b      	lsls	r3, r3, #1
90028014:	3302      	adds	r3, #2
90028016:	eb00 0e03 	add.w	lr, r0, r3
9002801a:	5ac3      	ldrh	r3, [r0, r3]
9002801c:	9308      	str	r3, [sp, #32]
9002801e:	f8be 3002 	ldrh.w	r3, [lr, #2]
90028022:	9309      	str	r3, [sp, #36]	@ 0x24
90028024:	ea4f 400b 	mov.w	r0, fp, lsl #16
90028028:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
9002802c:	fb12 f30c 	smulbb	r3, r2, ip
90028030:	f1cc 0e10 	rsb	lr, ip, #16
90028034:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90028038:	10db      	asrs	r3, r3, #3
9002803a:	ebae 0e02 	sub.w	lr, lr, r2
9002803e:	ea40 000b 	orr.w	r0, r0, fp
90028042:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90028046:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002804a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002804e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90028052:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90028056:	ea4b 0101 	orr.w	r1, fp, r1
9002805a:	4351      	muls	r1, r2
9002805c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002805e:	fb0e 1e00 	mla	lr, lr, r0, r1
90028062:	0410      	lsls	r0, r2, #16
90028064:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90028068:	9908      	ldr	r1, [sp, #32]
9002806a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002806e:	4310      	orrs	r0, r2
90028070:	9a08      	ldr	r2, [sp, #32]
90028072:	0412      	lsls	r2, r2, #16
90028074:	fb03 e000 	mla	r0, r3, r0, lr
90028078:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
9002807c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90028080:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90028084:	ea42 020e 	orr.w	r2, r2, lr
90028088:	fb03 0302 	mla	r3, r3, r2, r0
9002808c:	0d5a      	lsrs	r2, r3, #21
9002808e:	095b      	lsrs	r3, r3, #5
90028090:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028094:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90028098:	4313      	orrs	r3, r2
9002809a:	f8a9 3000 	strh.w	r3, [r9]
9002809e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900280a0:	f109 0902 	add.w	r9, r9, #2
900280a4:	f10a 3aff 	add.w	sl, sl, #4294967295
900280a8:	441c      	add	r4, r3
900280aa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900280ac:	441e      	add	r6, r3
900280ae:	e784      	b.n	90027fba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
900280b0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900280b2:	3d01      	subs	r5, #1
900280b4:	3702      	adds	r7, #2
900280b6:	441c      	add	r4, r3
900280b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900280ba:	441e      	add	r6, r3
900280bc:	e761      	b.n	90027f82 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900280be:	d01d      	beq.n	900280fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900280c0:	1e6b      	subs	r3, r5, #1
900280c2:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900280c4:	fb00 4003 	mla	r0, r0, r3, r4
900280c8:	1400      	asrs	r0, r0, #16
900280ca:	f53f af74 	bmi.w	90027fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900280ce:	3901      	subs	r1, #1
900280d0:	4288      	cmp	r0, r1
900280d2:	f6bf af70 	bge.w	90027fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900280d6:	991c      	ldr	r1, [sp, #112]	@ 0x70
900280d8:	fb01 6303 	mla	r3, r1, r3, r6
900280dc:	141b      	asrs	r3, r3, #16
900280de:	f53f af6a 	bmi.w	90027fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900280e2:	3a01      	subs	r2, #1
900280e4:	4293      	cmp	r3, r2
900280e6:	f6bf af66 	bge.w	90027fb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900280ea:	46a9      	mov	r9, r5
900280ec:	46ba      	mov	sl, r7
900280ee:	f1b9 0f00 	cmp.w	r9, #0
900280f2:	dc5b      	bgt.n	900281ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900280f4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900280f8:	eb07 0745 	add.w	r7, r7, r5, lsl #1
900280fc:	9b07      	ldr	r3, [sp, #28]
900280fe:	2b00      	cmp	r3, #0
90028100:	f340 80b9 	ble.w	90028276 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90028104:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90028108:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002810a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002810e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028112:	eef0 6a62 	vmov.f32	s13, s5
90028116:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002811a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002811e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90028122:	ee16 4a90 	vmov	r4, s13
90028126:	eef0 6a43 	vmov.f32	s13, s6
9002812a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002812e:	ee16 6a90 	vmov	r6, s13
90028132:	ee20 7aa7 	vmul.f32	s14, s1, s15
90028136:	ee61 7a27 	vmul.f32	s15, s2, s15
9002813a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002813e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90028142:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028146:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002814a:	ee12 2a90 	vmov	r2, s5
9002814e:	eef0 2a47 	vmov.f32	s5, s14
90028152:	fb92 f3f3 	sdiv	r3, r2, r3
90028156:	ee13 2a10 	vmov	r2, s6
9002815a:	931b      	str	r3, [sp, #108]	@ 0x6c
9002815c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002815e:	eeb0 3a67 	vmov.f32	s6, s15
90028162:	fb92 f3f3 	sdiv	r3, r2, r3
90028166:	931c      	str	r3, [sp, #112]	@ 0x70
90028168:	9b07      	ldr	r3, [sp, #28]
9002816a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002816c:	3b01      	subs	r3, #1
9002816e:	9307      	str	r3, [sp, #28]
90028170:	bf08      	it	eq
90028172:	4615      	moveq	r5, r2
90028174:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028176:	bf18      	it	ne
90028178:	461d      	movne	r5, r3
9002817a:	e6f3      	b.n	90027f64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9002817c:	f111 0b01 	adds.w	fp, r1, #1
90028180:	d48d      	bmi.n	9002809e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90028182:	45de      	cmp	lr, fp
90028184:	db8b      	blt.n	9002809e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90028186:	f110 0b01 	adds.w	fp, r0, #1
9002818a:	d488      	bmi.n	9002809e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002818c:	455b      	cmp	r3, fp
9002818e:	db86      	blt.n	9002809e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90028190:	b21b      	sxth	r3, r3
90028192:	e9cd 1001 	strd	r1, r0, [sp, #4]
90028196:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002819a:	9300      	str	r3, [sp, #0]
9002819c:	4642      	mov	r2, r8
9002819e:	fa0f f38e 	sxth.w	r3, lr
900281a2:	4649      	mov	r1, r9
900281a4:	980d      	ldr	r0, [sp, #52]	@ 0x34
900281a6:	f7ff fe4c 	bl	90027e42 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
900281aa:	e778      	b.n	9002809e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900281ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900281ae:	1420      	asrs	r0, r4, #16
900281b0:	1431      	asrs	r1, r6, #16
900281b2:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900281b6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900281ba:	f3c4 3203 	ubfx	r2, r4, #12, #4
900281be:	fb03 0101 	mla	r1, r3, r1, r0
900281c2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900281c6:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
900281ca:	8841      	ldrh	r1, [r0, #2]
900281cc:	f1be 0f00 	cmp.w	lr, #0
900281d0:	d00b      	beq.n	900281ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
900281d2:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
900281d6:	3b01      	subs	r3, #1
900281d8:	005b      	lsls	r3, r3, #1
900281da:	3302      	adds	r3, #2
900281dc:	eb00 0b03 	add.w	fp, r0, r3
900281e0:	5ac3      	ldrh	r3, [r0, r3]
900281e2:	930a      	str	r3, [sp, #40]	@ 0x28
900281e4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900281e8:	930b      	str	r3, [sp, #44]	@ 0x2c
900281ea:	ea4f 400c 	mov.w	r0, ip, lsl #16
900281ee:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900281f2:	fb12 f30e 	smulbb	r3, r2, lr
900281f6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900281fa:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900281fe:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90028202:	10db      	asrs	r3, r3, #3
90028204:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90028208:	ea40 000c 	orr.w	r0, r0, ip
9002820c:	f1ce 0c10 	rsb	ip, lr, #16
90028210:	ea4b 0101 	orr.w	r1, fp, r1
90028214:	f109 39ff 	add.w	r9, r9, #4294967295
90028218:	ebac 0c02 	sub.w	ip, ip, r2
9002821c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90028220:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90028224:	4351      	muls	r1, r2
90028226:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90028228:	fb0c 1c00 	mla	ip, ip, r0, r1
9002822c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002822e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90028232:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
90028236:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90028238:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002823c:	0412      	lsls	r2, r2, #16
9002823e:	ea4b 0000 	orr.w	r0, fp, r0
90028242:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
90028246:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002824a:	fb03 c000 	mla	r0, r3, r0, ip
9002824e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90028252:	ea42 0b0b 	orr.w	fp, r2, fp
90028256:	fb03 000b 	mla	r0, r3, fp, r0
9002825a:	0d43      	lsrs	r3, r0, #21
9002825c:	0940      	lsrs	r0, r0, #5
9002825e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90028262:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90028266:	4318      	orrs	r0, r3
90028268:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002826a:	441c      	add	r4, r3
9002826c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002826e:	f82a 0b02 	strh.w	r0, [sl], #2
90028272:	441e      	add	r6, r3
90028274:	e73b      	b.n	900280ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90028276:	b00f      	add	sp, #60	@ 0x3c
90028278:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002827c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
9002827c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028280:	b085      	sub	sp, #20
90028282:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90028286:	9102      	str	r1, [sp, #8]
90028288:	2c00      	cmp	r4, #0
9002828a:	fb04 7103 	mla	r1, r4, r3, r7
9002828e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90028292:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90028296:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002829a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
9002829e:	f2c0 811b 	blt.w	900284d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
900282a2:	45a6      	cmp	lr, r4
900282a4:	f340 8118 	ble.w	900284d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
900282a8:	2f00      	cmp	r7, #0
900282aa:	f2c0 8113 	blt.w	900284d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
900282ae:	42bb      	cmp	r3, r7
900282b0:	f340 8110 	ble.w	900284d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
900282b4:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900282b8:	1c7a      	adds	r2, r7, #1
900282ba:	f100 8110 	bmi.w	900284de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900282be:	4293      	cmp	r3, r2
900282c0:	f340 810d 	ble.w	900284de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
900282c4:	2e00      	cmp	r6, #0
900282c6:	f000 810c 	beq.w	900284e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
900282ca:	f8dc 1004 	ldr.w	r1, [ip, #4]
900282ce:	3401      	adds	r4, #1
900282d0:	f100 810b 	bmi.w	900284ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900282d4:	45a6      	cmp	lr, r4
900282d6:	f340 8108 	ble.w	900284ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
900282da:	2800      	cmp	r0, #0
900282dc:	f000 8108 	beq.w	900284f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
900282e0:	2f00      	cmp	r7, #0
900282e2:	f2c0 8100 	blt.w	900284e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900282e6:	42bb      	cmp	r3, r7
900282e8:	f340 80fd 	ble.w	900284e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900282ec:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900282f0:	3701      	adds	r7, #1
900282f2:	f100 8100 	bmi.w	900284f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900282f6:	42bb      	cmp	r3, r7
900282f8:	f340 80fd 	ble.w	900284f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900282fc:	2e00      	cmp	r6, #0
900282fe:	f000 80fc 	beq.w	900284fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90028302:	3301      	adds	r3, #1
90028304:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90028308:	b2b6      	uxth	r6, r6
9002830a:	b280      	uxth	r0, r0
9002830c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90028310:	fb00 fe06 	mul.w	lr, r0, r6
90028314:	0136      	lsls	r6, r6, #4
90028316:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002831a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002831e:	eba6 070e 	sub.w	r7, r6, lr
90028322:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90028326:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002832a:	b280      	uxth	r0, r0
9002832c:	b2bf      	uxth	r7, r7
9002832e:	1a1b      	subs	r3, r3, r0
90028330:	ea4f 6812 	mov.w	r8, r2, lsr #24
90028334:	fb0a f607 	mul.w	r6, sl, r7
90028338:	b29b      	uxth	r3, r3
9002833a:	fb0b 6603 	mla	r6, fp, r3, r6
9002833e:	fb00 6609 	mla	r6, r0, r9, r6
90028342:	fb0e 6608 	mla	r6, lr, r8, r6
90028346:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002834a:	9600      	str	r6, [sp, #0]
9002834c:	2e00      	cmp	r6, #0
9002834e:	f000 80be 	beq.w	900284ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90028352:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028356:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
9002835a:	9e02      	ldr	r6, [sp, #8]
9002835c:	fb0b fc0c 	mul.w	ip, fp, ip
90028360:	fb0b f505 	mul.w	r5, fp, r5
90028364:	8836      	ldrh	r6, [r6, #0]
90028366:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002836a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002836e:	9501      	str	r5, [sp, #4]
90028370:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90028374:	44dc      	add	ip, fp
90028376:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002837a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002837e:	9503      	str	r5, [sp, #12]
90028380:	9d01      	ldr	r5, [sp, #4]
90028382:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90028386:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002838a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002838e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90028392:	fb0a fc0c 	mul.w	ip, sl, ip
90028396:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002839a:	fb0a fa01 	mul.w	sl, sl, r1
9002839e:	ea4f 251c 	mov.w	r5, ip, lsr #8
900283a2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900283a6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
900283aa:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900283ae:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900283b2:	4465      	add	r5, ip
900283b4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900283b8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
900283bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900283c0:	fb09 fc0c 	mul.w	ip, r9, ip
900283c4:	0a2d      	lsrs	r5, r5, #8
900283c6:	fb09 f904 	mul.w	r9, r9, r4
900283ca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900283ce:	ea4f 211c 	mov.w	r1, ip, lsr #8
900283d2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900283d6:	f509 7480 	add.w	r4, r9, #256	@ 0x100
900283da:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900283de:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900283e2:	437d      	muls	r5, r7
900283e4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900283e8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
900283ec:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900283f0:	4461      	add	r1, ip
900283f2:	fb08 f404 	mul.w	r4, r8, r4
900283f6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900283fa:	fb08 f802 	mul.w	r8, r8, r2
900283fe:	0a09      	lsrs	r1, r1, #8
90028400:	0a22      	lsrs	r2, r4, #8
90028402:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90028406:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002840a:	fb07 f70a 	mul.w	r7, r7, sl
9002840e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028412:	4414      	add	r4, r2
90028414:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90028418:	0a24      	lsrs	r4, r4, #8
9002841a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9002841e:	9a03      	ldr	r2, [sp, #12]
90028420:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90028424:	fb02 5503 	mla	r5, r2, r3, r5
90028428:	ea4f 2818 	mov.w	r8, r8, lsr #8
9002842c:	9a00      	ldr	r2, [sp, #0]
9002842e:	fb04 540e 	mla	r4, r4, lr, r5
90028432:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90028436:	1235      	asrs	r5, r6, #8
90028438:	fb01 4100 	mla	r1, r1, r0, r4
9002843c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90028440:	0a09      	lsrs	r1, r1, #8
90028442:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90028446:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002844a:	fb03 7101 	mla	r1, r3, r1, r7
9002844e:	fb0e 1e08 	mla	lr, lr, r8, r1
90028452:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90028456:	fb00 e101 	mla	r1, r0, r1, lr
9002845a:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
9002845e:	b287      	uxth	r7, r0
90028460:	0a09      	lsrs	r1, r1, #8
90028462:	437a      	muls	r2, r7
90028464:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90028468:	1c53      	adds	r3, r2, #1
9002846a:	4321      	orrs	r1, r4
9002846c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028470:	0c0a      	lsrs	r2, r1, #16
90028472:	f3c1 2407 	ubfx	r4, r1, #8, #8
90028476:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9002847a:	b2c8      	uxtb	r0, r1
9002847c:	fb12 f207 	smulbb	r2, r2, r7
90028480:	fb14 f407 	smulbb	r4, r4, r7
90028484:	b2db      	uxtb	r3, r3
90028486:	fb10 f007 	smulbb	r0, r0, r7
9002848a:	fb05 2503 	mla	r5, r5, r3, r2
9002848e:	10f2      	asrs	r2, r6, #3
90028490:	00f6      	lsls	r6, r6, #3
90028492:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90028496:	b2ad      	uxth	r5, r5
90028498:	b2f6      	uxtb	r6, r6
9002849a:	fb02 4203 	mla	r2, r2, r3, r4
9002849e:	fb06 0303 	mla	r3, r6, r3, r0
900284a2:	b294      	uxth	r4, r2
900284a4:	b299      	uxth	r1, r3
900284a6:	1c6b      	adds	r3, r5, #1
900284a8:	1c62      	adds	r2, r4, #1
900284aa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900284ae:	1c4b      	adds	r3, r1, #1
900284b0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
900284b4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900284b8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900284bc:	0952      	lsrs	r2, r2, #5
900284be:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900284c2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900284c6:	432b      	orrs	r3, r5
900284c8:	4313      	orrs	r3, r2
900284ca:	9a02      	ldr	r2, [sp, #8]
900284cc:	8013      	strh	r3, [r2, #0]
900284ce:	b005      	add	sp, #20
900284d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900284d4:	2500      	movs	r5, #0
900284d6:	e6ef      	b.n	900282b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
900284d8:	2100      	movs	r1, #0
900284da:	460d      	mov	r5, r1
900284dc:	e6f7      	b.n	900282ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900284de:	2100      	movs	r1, #0
900284e0:	e6f5      	b.n	900282ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900284e2:	4631      	mov	r1, r6
900284e4:	e6f3      	b.n	900282ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900284e6:	2400      	movs	r4, #0
900284e8:	e702      	b.n	900282f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
900284ea:	2200      	movs	r2, #0
900284ec:	4614      	mov	r4, r2
900284ee:	e70b      	b.n	90028308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900284f0:	4602      	mov	r2, r0
900284f2:	4604      	mov	r4, r0
900284f4:	e708      	b.n	90028308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900284f6:	2200      	movs	r2, #0
900284f8:	e706      	b.n	90028308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900284fa:	4632      	mov	r2, r6
900284fc:	e704      	b.n	90028308 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

900284fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900284fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028502:	b09d      	sub	sp, #116	@ 0x74
90028504:	9219      	str	r2, [sp, #100]	@ 0x64
90028506:	9307      	str	r3, [sp, #28]
90028508:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
9002850a:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
9002850e:	901b      	str	r0, [sp, #108]	@ 0x6c
90028510:	931a      	str	r3, [sp, #104]	@ 0x68
90028512:	6850      	ldr	r0, [r2, #4]
90028514:	9117      	str	r1, [sp, #92]	@ 0x5c
90028516:	6812      	ldr	r2, [r2, #0]
90028518:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
9002851c:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90028520:	fb00 1303 	mla	r3, r0, r3, r1
90028524:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90028528:	930a      	str	r3, [sp, #40]	@ 0x28
9002852a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002852c:	681b      	ldr	r3, [r3, #0]
9002852e:	9310      	str	r3, [sp, #64]	@ 0x40
90028530:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90028534:	930b      	str	r3, [sp, #44]	@ 0x2c
90028536:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028538:	2b00      	cmp	r3, #0
9002853a:	dc03      	bgt.n	90028544 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9002853c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002853e:	2b00      	cmp	r3, #0
90028540:	f340 8375 	ble.w	90028c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90028544:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90028546:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002854a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002854e:	1e48      	subs	r0, r1, #1
90028550:	1e57      	subs	r7, r2, #1
90028552:	9b07      	ldr	r3, [sp, #28]
90028554:	2b00      	cmp	r3, #0
90028556:	f340 818e 	ble.w	90028876 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9002855a:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002855e:	ea4f 4326 	mov.w	r3, r6, asr #16
90028562:	d406      	bmi.n	90028572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90028564:	4584      	cmp	ip, r0
90028566:	da04      	bge.n	90028572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90028568:	2b00      	cmp	r3, #0
9002856a:	db02      	blt.n	90028572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002856c:	42bb      	cmp	r3, r7
9002856e:	f2c0 8183 	blt.w	90028878 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90028572:	f11c 0c01 	adds.w	ip, ip, #1
90028576:	f100 8173 	bmi.w	90028860 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002857a:	4561      	cmp	r1, ip
9002857c:	f2c0 8170 	blt.w	90028860 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90028580:	3301      	adds	r3, #1
90028582:	f100 816d 	bmi.w	90028860 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90028586:	429a      	cmp	r2, r3
90028588:	f2c0 816a 	blt.w	90028860 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002858c:	9b07      	ldr	r3, [sp, #28]
9002858e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90028590:	9318      	str	r3, [sp, #96]	@ 0x60
90028592:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028594:	2b00      	cmp	r3, #0
90028596:	f340 818c 	ble.w	900288b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
9002859a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
9002859c:	ea4f 4c26 	mov.w	ip, r6, asr #16
900285a0:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900285a2:	f3c4 3003 	ubfx	r0, r4, #12, #4
900285a6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900285aa:	1422      	asrs	r2, r4, #16
900285ac:	f3c6 3103 	ubfx	r1, r6, #12, #4
900285b0:	689b      	ldr	r3, [r3, #8]
900285b2:	f100 81cd 	bmi.w	90028950 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900285b6:	f103 38ff 	add.w	r8, r3, #4294967295
900285ba:	4542      	cmp	r2, r8
900285bc:	f280 81c8 	bge.w	90028950 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900285c0:	f1bc 0f00 	cmp.w	ip, #0
900285c4:	f2c0 81c4 	blt.w	90028950 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900285c8:	f10e 38ff 	add.w	r8, lr, #4294967295
900285cc:	45c4      	cmp	ip, r8
900285ce:	f280 81bf 	bge.w	90028950 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900285d2:	b21b      	sxth	r3, r3
900285d4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900285d6:	fb0c 2203 	mla	r2, ip, r3, r2
900285da:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900285de:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900285e2:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900285e6:	2800      	cmp	r0, #0
900285e8:	f000 81a9 	beq.w	9002893e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
900285ec:	f8d8 5004 	ldr.w	r5, [r8, #4]
900285f0:	950c      	str	r5, [sp, #48]	@ 0x30
900285f2:	0e2d      	lsrs	r5, r5, #24
900285f4:	9513      	str	r5, [sp, #76]	@ 0x4c
900285f6:	b181      	cbz	r1, 9002861a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900285f8:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
900285fc:	3b01      	subs	r3, #1
900285fe:	009b      	lsls	r3, r3, #2
90028600:	3304      	adds	r3, #4
90028602:	eb08 0c03 	add.w	ip, r8, r3
90028606:	f858 3003 	ldr.w	r3, [r8, r3]
9002860a:	9308      	str	r3, [sp, #32]
9002860c:	0e1b      	lsrs	r3, r3, #24
9002860e:	9311      	str	r3, [sp, #68]	@ 0x44
90028610:	f8dc 3004 	ldr.w	r3, [ip, #4]
90028614:	930d      	str	r3, [sp, #52]	@ 0x34
90028616:	0e1b      	lsrs	r3, r3, #24
90028618:	9314      	str	r3, [sp, #80]	@ 0x50
9002861a:	b280      	uxth	r0, r0
9002861c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002861e:	b289      	uxth	r1, r1
90028620:	fb00 f901 	mul.w	r9, r0, r1
90028624:	0100      	lsls	r0, r0, #4
90028626:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002862a:	eba0 0809 	sub.w	r8, r0, r9
9002862e:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90028632:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90028634:	b289      	uxth	r1, r1
90028636:	fa1f f888 	uxth.w	r8, r8
9002863a:	1a5b      	subs	r3, r3, r1
9002863c:	fb08 f000 	mul.w	r0, r8, r0
90028640:	b29b      	uxth	r3, r3
90028642:	fb03 000e 	mla	r0, r3, lr, r0
90028646:	fb01 0005 	mla	r0, r1, r5, r0
9002864a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002864c:	fb09 0005 	mla	r0, r9, r5, r0
90028650:	f3c0 2007 	ubfx	r0, r0, #8, #8
90028654:	2800      	cmp	r0, #0
90028656:	f000 80fa 	beq.w	9002884e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002865a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002865e:	d01b      	beq.n	90028698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90028660:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90028664:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028668:	fb0e fa0a 	mul.w	sl, lr, sl
9002866c:	fb0e fe02 	mul.w	lr, lr, r2
90028670:	ea4f 221a 	mov.w	r2, sl, lsr #8
90028674:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90028678:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002867c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028680:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90028684:	4452      	add	r2, sl
90028686:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002868a:	0a12      	lsrs	r2, r2, #8
9002868c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028690:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028694:	ea42 020c 	orr.w	r2, r2, ip
90028698:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002869a:	2dff      	cmp	r5, #255	@ 0xff
9002869c:	d021      	beq.n	900286e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
9002869e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900286a0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900286a4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900286a6:	fb05 fb0b 	mul.w	fp, r5, fp
900286aa:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900286ac:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900286b0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900286b2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900286b6:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900286ba:	fb05 fa0a 	mul.w	sl, r5, sl
900286be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900286c2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900286c6:	44de      	add	lr, fp
900286c8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900286cc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900286d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900286d4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900286d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900286dc:	ea4e 050a 	orr.w	r5, lr, sl
900286e0:	950c      	str	r5, [sp, #48]	@ 0x30
900286e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900286e4:	2dff      	cmp	r5, #255	@ 0xff
900286e6:	d021      	beq.n	9002872c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
900286e8:	9d08      	ldr	r5, [sp, #32]
900286ea:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900286ee:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900286f0:	fb05 fb0b 	mul.w	fp, r5, fp
900286f4:	9d08      	ldr	r5, [sp, #32]
900286f6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900286fa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900286fc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028700:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90028704:	fb05 fa0a 	mul.w	sl, r5, sl
90028708:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002870c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90028710:	44de      	add	lr, fp
90028712:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028716:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002871a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002871e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028722:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028726:	ea4e 050a 	orr.w	r5, lr, sl
9002872a:	9508      	str	r5, [sp, #32]
9002872c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002872e:	2dff      	cmp	r5, #255	@ 0xff
90028730:	d021      	beq.n	90028776 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90028732:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028734:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028738:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002873a:	fb05 fb0b 	mul.w	fp, r5, fp
9002873e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028740:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028744:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90028746:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002874a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002874e:	fb05 fa0a 	mul.w	sl, r5, sl
90028752:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028756:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002875a:	44de      	add	lr, fp
9002875c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028760:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028764:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028768:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002876c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028770:	ea4e 050a 	orr.w	r5, lr, sl
90028774:	950d      	str	r5, [sp, #52]	@ 0x34
90028776:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028778:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
9002877c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028780:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028784:	9d08      	ldr	r5, [sp, #32]
90028786:	fb08 fc0c 	mul.w	ip, r8, ip
9002878a:	fb03 cc0e 	mla	ip, r3, lr, ip
9002878e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028792:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028794:	fb01 cc0e 	mla	ip, r1, lr, ip
90028798:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
9002879c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002879e:	fb09 cc0e 	mla	ip, r9, lr, ip
900287a2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900287a6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900287a8:	fb08 f80e 	mul.w	r8, r8, lr
900287ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900287b0:	fb03 8202 	mla	r2, r3, r2, r8
900287b4:	9b08      	ldr	r3, [sp, #32]
900287b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900287ba:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
900287be:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900287c0:	fb01 220a 	mla	r2, r1, sl, r2
900287c4:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
900287c8:	883b      	ldrh	r3, [r7, #0]
900287ca:	fb09 2901 	mla	r9, r9, r1, r2
900287ce:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900287d0:	1219      	asrs	r1, r3, #8
900287d2:	4342      	muls	r2, r0
900287d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
900287d8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
900287dc:	1c50      	adds	r0, r2, #1
900287de:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900287e2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900287e6:	ea4c 0c09 	orr.w	ip, ip, r9
900287ea:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900287ee:	ea4f 421c 	mov.w	r2, ip, lsr #16
900287f2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900287f6:	fa5f fc8c 	uxtb.w	ip, ip
900287fa:	fb12 f205 	smulbb	r2, r2, r5
900287fe:	b2c0      	uxtb	r0, r0
90028800:	fb1c fc05 	smulbb	ip, ip, r5
90028804:	fb01 2100 	mla	r1, r1, r0, r2
90028808:	10da      	asrs	r2, r3, #3
9002880a:	fb1e fe05 	smulbb	lr, lr, r5
9002880e:	00db      	lsls	r3, r3, #3
90028810:	b289      	uxth	r1, r1
90028812:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90028816:	b2db      	uxtb	r3, r3
90028818:	fb02 e200 	mla	r2, r2, r0, lr
9002881c:	fb03 c300 	mla	r3, r3, r0, ip
90028820:	b292      	uxth	r2, r2
90028822:	fa1f fc83 	uxth.w	ip, r3
90028826:	1c4b      	adds	r3, r1, #1
90028828:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002882c:	f10c 0301 	add.w	r3, ip, #1
90028830:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90028834:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90028838:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002883c:	430b      	orrs	r3, r1
9002883e:	1c51      	adds	r1, r2, #1
90028840:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90028844:	0952      	lsrs	r2, r2, #5
90028846:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002884a:	4313      	orrs	r3, r2
9002884c:	803b      	strh	r3, [r7, #0]
9002884e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90028850:	3702      	adds	r7, #2
90028852:	441c      	add	r4, r3
90028854:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90028856:	441e      	add	r6, r3
90028858:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002885a:	3b01      	subs	r3, #1
9002885c:	9318      	str	r3, [sp, #96]	@ 0x60
9002885e:	e698      	b.n	90028592 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90028860:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90028862:	441c      	add	r4, r3
90028864:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90028866:	441e      	add	r6, r3
90028868:	9b07      	ldr	r3, [sp, #28]
9002886a:	3b01      	subs	r3, #1
9002886c:	9307      	str	r3, [sp, #28]
9002886e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90028870:	3302      	adds	r3, #2
90028872:	930a      	str	r3, [sp, #40]	@ 0x28
90028874:	e66d      	b.n	90028552 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90028876:	d023      	beq.n	900288c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90028878:	9b07      	ldr	r3, [sp, #28]
9002887a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
9002887c:	3b01      	subs	r3, #1
9002887e:	fb00 4003 	mla	r0, r0, r3, r4
90028882:	1400      	asrs	r0, r0, #16
90028884:	f53f ae82 	bmi.w	9002858c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028888:	3901      	subs	r1, #1
9002888a:	4288      	cmp	r0, r1
9002888c:	f6bf ae7e 	bge.w	9002858c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028890:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90028892:	fb01 6303 	mla	r3, r1, r3, r6
90028896:	141b      	asrs	r3, r3, #16
90028898:	f53f ae78 	bmi.w	9002858c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002889c:	3a01      	subs	r2, #1
9002889e:	4293      	cmp	r3, r2
900288a0:	f6bf ae74 	bge.w	9002858c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900288a4:	f8dd b01c 	ldr.w	fp, [sp, #28]
900288a8:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900288ac:	f1bb 0f00 	cmp.w	fp, #0
900288b0:	dc6c      	bgt.n	9002898c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900288b2:	9b07      	ldr	r3, [sp, #28]
900288b4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900288b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900288ba:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900288be:	930a      	str	r3, [sp, #40]	@ 0x28
900288c0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900288c2:	2b00      	cmp	r3, #0
900288c4:	f340 81b3 	ble.w	90028c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900288c8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900288cc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900288ce:	ee30 0a04 	vadd.f32	s0, s0, s8
900288d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900288d6:	eef0 6a62 	vmov.f32	s13, s5
900288da:	eec7 7a00 	vdiv.f32	s15, s14, s0
900288de:	ee31 1a05 	vadd.f32	s2, s2, s10
900288e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900288e6:	ee16 4a90 	vmov	r4, s13
900288ea:	eef0 6a43 	vmov.f32	s13, s6
900288ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900288f2:	ee16 6a90 	vmov	r6, s13
900288f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900288fa:	ee61 7a27 	vmul.f32	s15, s2, s15
900288fe:	ee77 2a62 	vsub.f32	s5, s14, s5
90028902:	ee37 3ac3 	vsub.f32	s6, s15, s6
90028906:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002890a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002890e:	ee12 2a90 	vmov	r2, s5
90028912:	eef0 2a47 	vmov.f32	s5, s14
90028916:	fb92 f3f3 	sdiv	r3, r2, r3
9002891a:	ee13 2a10 	vmov	r2, s6
9002891e:	9329      	str	r3, [sp, #164]	@ 0xa4
90028920:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90028922:	eeb0 3a67 	vmov.f32	s6, s15
90028926:	fb92 f3f3 	sdiv	r3, r2, r3
9002892a:	932a      	str	r3, [sp, #168]	@ 0xa8
9002892c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
9002892e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90028930:	3b01      	subs	r3, #1
90028932:	9317      	str	r3, [sp, #92]	@ 0x5c
90028934:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90028936:	bf08      	it	eq
90028938:	4613      	moveq	r3, r2
9002893a:	9307      	str	r3, [sp, #28]
9002893c:	e5fb      	b.n	90028536 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9002893e:	2900      	cmp	r1, #0
90028940:	f43f ae6b 	beq.w	9002861a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90028944:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90028948:	9308      	str	r3, [sp, #32]
9002894a:	0e1b      	lsrs	r3, r3, #24
9002894c:	9311      	str	r3, [sp, #68]	@ 0x44
9002894e:	e664      	b.n	9002861a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90028950:	f112 0801 	adds.w	r8, r2, #1
90028954:	f53f af7b 	bmi.w	9002884e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028958:	4543      	cmp	r3, r8
9002895a:	f6ff af78 	blt.w	9002884e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002895e:	f11c 0801 	adds.w	r8, ip, #1
90028962:	f53f af74 	bmi.w	9002884e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028966:	45c6      	cmp	lr, r8
90028968:	f6ff af71 	blt.w	9002884e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002896c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9002896e:	b21b      	sxth	r3, r3
90028970:	9201      	str	r2, [sp, #4]
90028972:	fa0f f28e 	sxth.w	r2, lr
90028976:	e9cd 1504 	strd	r1, r5, [sp, #16]
9002897a:	e9cd c002 	strd	ip, r0, [sp, #8]
9002897e:	9200      	str	r2, [sp, #0]
90028980:	4639      	mov	r1, r7
90028982:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028984:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90028986:	f7ff fc79 	bl	9002827c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
9002898a:	e760      	b.n	9002884e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002898c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002898e:	1427      	asrs	r7, r4, #16
90028990:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028992:	f3c4 3203 	ubfx	r2, r4, #12, #4
90028996:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002899a:	1433      	asrs	r3, r6, #16
9002899c:	f3c6 3003 	ubfx	r0, r6, #12, #4
900289a0:	fb01 7303 	mla	r3, r1, r3, r7
900289a4:	eb05 0783 	add.w	r7, r5, r3, lsl #2
900289a8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900289ac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900289b0:	2a00      	cmp	r2, #0
900289b2:	f000 8133 	beq.w	90028c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
900289b6:	687d      	ldr	r5, [r7, #4]
900289b8:	950e      	str	r5, [sp, #56]	@ 0x38
900289ba:	0e2d      	lsrs	r5, r5, #24
900289bc:	9515      	str	r5, [sp, #84]	@ 0x54
900289be:	b178      	cbz	r0, 900289e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900289c0:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
900289c4:	3901      	subs	r1, #1
900289c6:	0089      	lsls	r1, r1, #2
900289c8:	3104      	adds	r1, #4
900289ca:	eb07 0e01 	add.w	lr, r7, r1
900289ce:	5879      	ldr	r1, [r7, r1]
900289d0:	9109      	str	r1, [sp, #36]	@ 0x24
900289d2:	0e09      	lsrs	r1, r1, #24
900289d4:	9112      	str	r1, [sp, #72]	@ 0x48
900289d6:	f8de 1004 	ldr.w	r1, [lr, #4]
900289da:	910f      	str	r1, [sp, #60]	@ 0x3c
900289dc:	0e09      	lsrs	r1, r1, #24
900289de:	9116      	str	r1, [sp, #88]	@ 0x58
900289e0:	b292      	uxth	r2, r2
900289e2:	9915      	ldr	r1, [sp, #84]	@ 0x54
900289e4:	b280      	uxth	r0, r0
900289e6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900289e8:	fb02 f800 	mul.w	r8, r2, r0
900289ec:	0112      	lsls	r2, r2, #4
900289ee:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900289f2:	eba2 0e08 	sub.w	lr, r2, r8
900289f6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900289fa:	b280      	uxth	r0, r0
900289fc:	fa1f fe8e 	uxth.w	lr, lr
90028a00:	1a12      	subs	r2, r2, r0
90028a02:	fb0e f101 	mul.w	r1, lr, r1
90028a06:	b292      	uxth	r2, r2
90028a08:	fb02 110c 	mla	r1, r2, ip, r1
90028a0c:	fb00 1105 	mla	r1, r0, r5, r1
90028a10:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90028a12:	fb08 1105 	mla	r1, r8, r5, r1
90028a16:	f3c1 2107 	ubfx	r1, r1, #8, #8
90028a1a:	2900      	cmp	r1, #0
90028a1c:	f000 80f5 	beq.w	90028c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90028a20:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90028a24:	d019      	beq.n	90028a5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90028a26:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90028a2a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90028a2e:	fb0c fa0a 	mul.w	sl, ip, sl
90028a32:	fb0c fc03 	mul.w	ip, ip, r3
90028a36:	ea4f 231a 	mov.w	r3, sl, lsr #8
90028a3a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90028a3e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90028a42:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90028a46:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90028a4a:	4453      	add	r3, sl
90028a4c:	0a3f      	lsrs	r7, r7, #8
90028a4e:	0a1b      	lsrs	r3, r3, #8
90028a50:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90028a54:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90028a58:	433b      	orrs	r3, r7
90028a5a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028a5c:	2dff      	cmp	r5, #255	@ 0xff
90028a5e:	d020      	beq.n	90028aa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90028a60:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028a62:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028a66:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028a68:	436f      	muls	r7, r5
90028a6a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028a6c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028a70:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028a74:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028a76:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028a7a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a7e:	fb05 fa0a 	mul.w	sl, r5, sl
90028a82:	44bc      	add	ip, r7
90028a84:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028a88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028a8c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028a90:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a94:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028a98:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028a9c:	ea4c 050a 	orr.w	r5, ip, sl
90028aa0:	950e      	str	r5, [sp, #56]	@ 0x38
90028aa2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028aa4:	2dff      	cmp	r5, #255	@ 0xff
90028aa6:	d020      	beq.n	90028aea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90028aa8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028aaa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028aae:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028ab0:	436f      	muls	r7, r5
90028ab2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028ab4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028ab8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028abc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028abe:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028ac2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028ac6:	fb05 fa0a 	mul.w	sl, r5, sl
90028aca:	44bc      	add	ip, r7
90028acc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028ad0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028ad4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028ad8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028adc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028ae0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028ae4:	ea4c 050a 	orr.w	r5, ip, sl
90028ae8:	9509      	str	r5, [sp, #36]	@ 0x24
90028aea:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90028aec:	2dff      	cmp	r5, #255	@ 0xff
90028aee:	d020      	beq.n	90028b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90028af0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028af2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028af6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90028af8:	436f      	muls	r7, r5
90028afa:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028afc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028b00:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028b04:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90028b06:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028b0a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028b0e:	fb05 fa0a 	mul.w	sl, r5, sl
90028b12:	44bc      	add	ip, r7
90028b14:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028b18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028b1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028b20:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028b24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028b28:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028b2c:	ea4c 050a 	orr.w	r5, ip, sl
90028b30:	950f      	str	r5, [sp, #60]	@ 0x3c
90028b32:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028b34:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90028b38:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90028b3c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028b40:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028b42:	fb0e f707 	mul.w	r7, lr, r7
90028b46:	fb02 770c 	mla	r7, r2, ip, r7
90028b4a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028b4e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028b50:	fb00 770c 	mla	r7, r0, ip, r7
90028b54:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028b58:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028b5a:	fb08 770c 	mla	r7, r8, ip, r7
90028b5e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90028b62:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028b64:	fb0e fe0c 	mul.w	lr, lr, ip
90028b68:	0a3f      	lsrs	r7, r7, #8
90028b6a:	fb02 e303 	mla	r3, r2, r3, lr
90028b6e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028b70:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90028b74:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90028b78:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90028b7a:	fb00 330a 	mla	r3, r0, sl, r3
90028b7e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90028b82:	f8b9 0000 	ldrh.w	r0, [r9]
90028b86:	fb08 3c0c 	mla	ip, r8, ip, r3
90028b8a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90028b8c:	1202      	asrs	r2, r0, #8
90028b8e:	4359      	muls	r1, r3
90028b90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028b94:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90028b98:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028b9c:	1c4b      	adds	r3, r1, #1
90028b9e:	ea47 070c 	orr.w	r7, r7, ip
90028ba2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90028ba6:	0c3b      	lsrs	r3, r7, #16
90028ba8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90028bac:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90028bb0:	b2ff      	uxtb	r7, r7
90028bb2:	fb13 f305 	smulbb	r3, r3, r5
90028bb6:	b2c9      	uxtb	r1, r1
90028bb8:	fb17 f705 	smulbb	r7, r7, r5
90028bbc:	fb02 3201 	mla	r2, r2, r1, r3
90028bc0:	10c3      	asrs	r3, r0, #3
90028bc2:	fb1c fc05 	smulbb	ip, ip, r5
90028bc6:	00c0      	lsls	r0, r0, #3
90028bc8:	b292      	uxth	r2, r2
90028bca:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90028bce:	b2c0      	uxtb	r0, r0
90028bd0:	fb03 c301 	mla	r3, r3, r1, ip
90028bd4:	fb00 7001 	mla	r0, r0, r1, r7
90028bd8:	1c51      	adds	r1, r2, #1
90028bda:	b29b      	uxth	r3, r3
90028bdc:	b280      	uxth	r0, r0
90028bde:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90028be2:	f100 0c01 	add.w	ip, r0, #1
90028be6:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90028bea:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90028bee:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90028bf2:	ea4c 0202 	orr.w	r2, ip, r2
90028bf6:	f103 0c01 	add.w	ip, r3, #1
90028bfa:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90028bfe:	095b      	lsrs	r3, r3, #5
90028c00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90028c04:	431a      	orrs	r2, r3
90028c06:	f8a9 2000 	strh.w	r2, [r9]
90028c0a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90028c0c:	f109 0902 	add.w	r9, r9, #2
90028c10:	f10b 3bff 	add.w	fp, fp, #4294967295
90028c14:	441c      	add	r4, r3
90028c16:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90028c18:	441e      	add	r6, r3
90028c1a:	e647      	b.n	900288ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90028c1c:	2800      	cmp	r0, #0
90028c1e:	f43f aedf 	beq.w	900289e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90028c22:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90028c26:	9109      	str	r1, [sp, #36]	@ 0x24
90028c28:	0e09      	lsrs	r1, r1, #24
90028c2a:	9112      	str	r1, [sp, #72]	@ 0x48
90028c2c:	e6d8      	b.n	900289e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90028c2e:	b01d      	add	sp, #116	@ 0x74
90028c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90028c34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90028c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028c38:	b085      	sub	sp, #20
90028c3a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90028c3e:	9102      	str	r1, [sp, #8]
90028c40:	2c00      	cmp	r4, #0
90028c42:	fb04 7103 	mla	r1, r4, r3, r7
90028c46:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90028c4a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90028c4e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90028c52:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90028c56:	f2c0 810c 	blt.w	90028e72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90028c5a:	45a6      	cmp	lr, r4
90028c5c:	f340 8109 	ble.w	90028e72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90028c60:	2f00      	cmp	r7, #0
90028c62:	f2c0 8104 	blt.w	90028e6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90028c66:	42bb      	cmp	r3, r7
90028c68:	f340 8101 	ble.w	90028e6e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90028c6c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90028c70:	1c7a      	adds	r2, r7, #1
90028c72:	f100 8101 	bmi.w	90028e78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90028c76:	4293      	cmp	r3, r2
90028c78:	f340 80fe 	ble.w	90028e78 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90028c7c:	2e00      	cmp	r6, #0
90028c7e:	f000 80fd 	beq.w	90028e7c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90028c82:	f8dc 1004 	ldr.w	r1, [ip, #4]
90028c86:	3401      	adds	r4, #1
90028c88:	f100 80fc 	bmi.w	90028e84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90028c8c:	45a6      	cmp	lr, r4
90028c8e:	f340 80f9 	ble.w	90028e84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90028c92:	2800      	cmp	r0, #0
90028c94:	f000 80f9 	beq.w	90028e8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90028c98:	2f00      	cmp	r7, #0
90028c9a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90028c9e:	f2c0 80ef 	blt.w	90028e80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90028ca2:	42bb      	cmp	r3, r7
90028ca4:	f340 80ec 	ble.w	90028e80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90028ca8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90028cac:	3701      	adds	r7, #1
90028cae:	f100 80ef 	bmi.w	90028e90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90028cb2:	42bb      	cmp	r3, r7
90028cb4:	f340 80ec 	ble.w	90028e90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90028cb8:	2e00      	cmp	r6, #0
90028cba:	f000 80eb 	beq.w	90028e94 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90028cbe:	6852      	ldr	r2, [r2, #4]
90028cc0:	b2b6      	uxth	r6, r6
90028cc2:	b280      	uxth	r0, r0
90028cc4:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90028cc8:	fb00 fe06 	mul.w	lr, r0, r6
90028ccc:	0136      	lsls	r6, r6, #4
90028cce:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90028cd2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90028cd6:	eba6 070e 	sub.w	r7, r6, lr
90028cda:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90028cde:	ea4f 6914 	mov.w	r9, r4, lsr #24
90028ce2:	b280      	uxth	r0, r0
90028ce4:	b2bf      	uxth	r7, r7
90028ce6:	1a1b      	subs	r3, r3, r0
90028ce8:	ea4f 6812 	mov.w	r8, r2, lsr #24
90028cec:	fb07 f60a 	mul.w	r6, r7, sl
90028cf0:	b29b      	uxth	r3, r3
90028cf2:	fb0b 6603 	mla	r6, fp, r3, r6
90028cf6:	fb00 6609 	mla	r6, r0, r9, r6
90028cfa:	fb0e 6608 	mla	r6, lr, r8, r6
90028cfe:	f3c6 2607 	ubfx	r6, r6, #8, #8
90028d02:	9600      	str	r6, [sp, #0]
90028d04:	2e00      	cmp	r6, #0
90028d06:	f000 80af 	beq.w	90028e68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90028d0a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028d0e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90028d12:	9e02      	ldr	r6, [sp, #8]
90028d14:	fb0b fc0c 	mul.w	ip, fp, ip
90028d18:	fb0b f505 	mul.w	r5, fp, r5
90028d1c:	8836      	ldrh	r6, [r6, #0]
90028d1e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90028d22:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028d26:	9501      	str	r5, [sp, #4]
90028d28:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90028d2c:	44dc      	add	ip, fp
90028d2e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028d32:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90028d36:	9503      	str	r5, [sp, #12]
90028d38:	9d01      	ldr	r5, [sp, #4]
90028d3a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90028d3e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90028d42:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90028d46:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90028d4a:	fb0a fc0c 	mul.w	ip, sl, ip
90028d4e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90028d52:	fb0a fa01 	mul.w	sl, sl, r1
90028d56:	ea4f 251c 	mov.w	r5, ip, lsr #8
90028d5a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028d5e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90028d62:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90028d66:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90028d6a:	4465      	add	r5, ip
90028d6c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90028d70:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90028d74:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028d78:	fb09 fc0c 	mul.w	ip, r9, ip
90028d7c:	0a2d      	lsrs	r5, r5, #8
90028d7e:	fb09 f904 	mul.w	r9, r9, r4
90028d82:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028d86:	ea4f 211c 	mov.w	r1, ip, lsr #8
90028d8a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90028d8e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90028d92:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028d96:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90028d9a:	437d      	muls	r5, r7
90028d9c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90028da0:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90028da4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028da8:	4461      	add	r1, ip
90028daa:	fb08 f404 	mul.w	r4, r8, r4
90028dae:	ea4f 2919 	mov.w	r9, r9, lsr #8
90028db2:	fb08 f802 	mul.w	r8, r8, r2
90028db6:	0a09      	lsrs	r1, r1, #8
90028db8:	0a22      	lsrs	r2, r4, #8
90028dba:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90028dbe:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90028dc2:	fb07 f70a 	mul.w	r7, r7, sl
90028dc6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028dca:	4414      	add	r4, r2
90028dcc:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90028dd0:	0a24      	lsrs	r4, r4, #8
90028dd2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90028dd6:	9a03      	ldr	r2, [sp, #12]
90028dd8:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90028ddc:	fb02 5503 	mla	r5, r2, r3, r5
90028de0:	ea4f 2818 	mov.w	r8, r8, lsr #8
90028de4:	fb04 540e 	mla	r4, r4, lr, r5
90028de8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90028dec:	fb01 4100 	mla	r1, r1, r0, r4
90028df0:	0a09      	lsrs	r1, r1, #8
90028df2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90028df6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90028dfa:	fb03 7101 	mla	r1, r3, r1, r7
90028dfe:	9b00      	ldr	r3, [sp, #0]
90028e00:	fb0e 1e08 	mla	lr, lr, r8, r1
90028e04:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90028e08:	43da      	mvns	r2, r3
90028e0a:	1233      	asrs	r3, r6, #8
90028e0c:	fb00 e101 	mla	r1, r0, r1, lr
90028e10:	10f0      	asrs	r0, r6, #3
90028e12:	b2d2      	uxtb	r2, r2
90028e14:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90028e18:	0a09      	lsrs	r1, r1, #8
90028e1a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028e1e:	00f6      	lsls	r6, r6, #3
90028e20:	4353      	muls	r3, r2
90028e22:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90028e26:	4350      	muls	r0, r2
90028e28:	b2f6      	uxtb	r6, r6
90028e2a:	4321      	orrs	r1, r4
90028e2c:	4356      	muls	r6, r2
90028e2e:	1c5a      	adds	r2, r3, #1
90028e30:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90028e34:	0c0b      	lsrs	r3, r1, #16
90028e36:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028e3a:	1c42      	adds	r2, r0, #1
90028e3c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028e40:	0a0a      	lsrs	r2, r1, #8
90028e42:	021b      	lsls	r3, r3, #8
90028e44:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90028e48:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90028e4c:	00d2      	lsls	r2, r2, #3
90028e4e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028e52:	4313      	orrs	r3, r2
90028e54:	1c72      	adds	r2, r6, #1
90028e56:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90028e5a:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90028e5e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028e62:	4319      	orrs	r1, r3
90028e64:	9b02      	ldr	r3, [sp, #8]
90028e66:	8019      	strh	r1, [r3, #0]
90028e68:	b005      	add	sp, #20
90028e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028e6e:	2500      	movs	r5, #0
90028e70:	e6fe      	b.n	90028c70 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90028e72:	2100      	movs	r1, #0
90028e74:	460d      	mov	r5, r1
90028e76:	e706      	b.n	90028c86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028e78:	2100      	movs	r1, #0
90028e7a:	e704      	b.n	90028c86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028e7c:	4631      	mov	r1, r6
90028e7e:	e702      	b.n	90028c86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028e80:	2400      	movs	r4, #0
90028e82:	e713      	b.n	90028cac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90028e84:	2200      	movs	r2, #0
90028e86:	4614      	mov	r4, r2
90028e88:	e71a      	b.n	90028cc0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028e8a:	4602      	mov	r2, r0
90028e8c:	4604      	mov	r4, r0
90028e8e:	e717      	b.n	90028cc0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028e90:	2200      	movs	r2, #0
90028e92:	e715      	b.n	90028cc0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028e94:	4632      	mov	r2, r6
90028e96:	e713      	b.n	90028cc0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90028e98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028e9c:	b09b      	sub	sp, #108	@ 0x6c
90028e9e:	9218      	str	r2, [sp, #96]	@ 0x60
90028ea0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90028ea2:	9019      	str	r0, [sp, #100]	@ 0x64
90028ea4:	9116      	str	r1, [sp, #88]	@ 0x58
90028ea6:	6850      	ldr	r0, [r2, #4]
90028ea8:	9307      	str	r3, [sp, #28]
90028eaa:	6812      	ldr	r2, [r2, #0]
90028eac:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90028eb0:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90028eb4:	fb00 1303 	mla	r3, r0, r3, r1
90028eb8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90028ebc:	930a      	str	r3, [sp, #40]	@ 0x28
90028ebe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028ec0:	681b      	ldr	r3, [r3, #0]
90028ec2:	930f      	str	r3, [sp, #60]	@ 0x3c
90028ec4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90028ec6:	2b00      	cmp	r3, #0
90028ec8:	dc03      	bgt.n	90028ed2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90028eca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028ecc:	2b00      	cmp	r3, #0
90028ece:	f340 8387 	ble.w	900295e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90028ed2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028ed4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028ed8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90028edc:	1e48      	subs	r0, r1, #1
90028ede:	1e57      	subs	r7, r2, #1
90028ee0:	9b07      	ldr	r3, [sp, #28]
90028ee2:	2b00      	cmp	r3, #0
90028ee4:	f340 8166 	ble.w	900291b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90028ee8:	ea5f 4c24 	movs.w	ip, r4, asr #16
90028eec:	ea4f 4326 	mov.w	r3, r6, asr #16
90028ef0:	d406      	bmi.n	90028f00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90028ef2:	4584      	cmp	ip, r0
90028ef4:	da04      	bge.n	90028f00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90028ef6:	2b00      	cmp	r3, #0
90028ef8:	db02      	blt.n	90028f00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90028efa:	42bb      	cmp	r3, r7
90028efc:	f2c0 815b 	blt.w	900291b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90028f00:	f11c 0c01 	adds.w	ip, ip, #1
90028f04:	f100 814b 	bmi.w	9002919e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90028f08:	4561      	cmp	r1, ip
90028f0a:	f2c0 8148 	blt.w	9002919e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90028f0e:	3301      	adds	r3, #1
90028f10:	f100 8145 	bmi.w	9002919e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90028f14:	429a      	cmp	r2, r3
90028f16:	f2c0 8142 	blt.w	9002919e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90028f1a:	9b07      	ldr	r3, [sp, #28]
90028f1c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90028f1e:	9317      	str	r3, [sp, #92]	@ 0x5c
90028f20:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028f22:	2b00      	cmp	r3, #0
90028f24:	f340 8165 	ble.w	900291f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90028f28:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
90028f2a:	ea4f 4c26 	mov.w	ip, r6, asr #16
90028f2e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028f30:	f3c4 3103 	ubfx	r1, r4, #12, #4
90028f34:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90028f38:	1422      	asrs	r2, r4, #16
90028f3a:	f3c6 3003 	ubfx	r0, r6, #12, #4
90028f3e:	689b      	ldr	r3, [r3, #8]
90028f40:	f100 81d5 	bmi.w	900292ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028f44:	f103 38ff 	add.w	r8, r3, #4294967295
90028f48:	4542      	cmp	r2, r8
90028f4a:	f280 81d0 	bge.w	900292ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028f4e:	f1bc 0f00 	cmp.w	ip, #0
90028f52:	f2c0 81cc 	blt.w	900292ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028f56:	f10e 38ff 	add.w	r8, lr, #4294967295
90028f5a:	45c4      	cmp	ip, r8
90028f5c:	f280 81c7 	bge.w	900292ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028f60:	b21b      	sxth	r3, r3
90028f62:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028f64:	fb0c 2203 	mla	r2, ip, r3, r2
90028f68:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90028f6c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90028f70:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90028f74:	2900      	cmp	r1, #0
90028f76:	f000 8182 	beq.w	9002927e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90028f7a:	f8d8 5004 	ldr.w	r5, [r8, #4]
90028f7e:	950b      	str	r5, [sp, #44]	@ 0x2c
90028f80:	0e2d      	lsrs	r5, r5, #24
90028f82:	9512      	str	r5, [sp, #72]	@ 0x48
90028f84:	b180      	cbz	r0, 90028fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90028f86:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90028f8a:	3b01      	subs	r3, #1
90028f8c:	009b      	lsls	r3, r3, #2
90028f8e:	3304      	adds	r3, #4
90028f90:	eb08 0c03 	add.w	ip, r8, r3
90028f94:	f858 3003 	ldr.w	r3, [r8, r3]
90028f98:	9308      	str	r3, [sp, #32]
90028f9a:	0e1b      	lsrs	r3, r3, #24
90028f9c:	9310      	str	r3, [sp, #64]	@ 0x40
90028f9e:	f8dc 3004 	ldr.w	r3, [ip, #4]
90028fa2:	930c      	str	r3, [sp, #48]	@ 0x30
90028fa4:	0e1b      	lsrs	r3, r3, #24
90028fa6:	9313      	str	r3, [sp, #76]	@ 0x4c
90028fa8:	b289      	uxth	r1, r1
90028faa:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90028fac:	b280      	uxth	r0, r0
90028fae:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028fb0:	fb01 f900 	mul.w	r9, r1, r0
90028fb4:	0109      	lsls	r1, r1, #4
90028fb6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90028fba:	eba1 0809 	sub.w	r8, r1, r9
90028fbe:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90028fc2:	b280      	uxth	r0, r0
90028fc4:	fa1f f888 	uxth.w	r8, r8
90028fc8:	1a09      	subs	r1, r1, r0
90028fca:	fb08 f303 	mul.w	r3, r8, r3
90028fce:	b289      	uxth	r1, r1
90028fd0:	fb01 330e 	mla	r3, r1, lr, r3
90028fd4:	fb00 3305 	mla	r3, r0, r5, r3
90028fd8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028fda:	fb09 3305 	mla	r3, r9, r5, r3
90028fde:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028fe2:	2b00      	cmp	r3, #0
90028fe4:	f000 80d2 	beq.w	9002918c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028fe8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90028fec:	d01b      	beq.n	90029026 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90028fee:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90028ff2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028ff6:	fb0e fa0a 	mul.w	sl, lr, sl
90028ffa:	fb0e fe02 	mul.w	lr, lr, r2
90028ffe:	ea4f 221a 	mov.w	r2, sl, lsr #8
90029002:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90029006:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002900a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002900e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90029012:	4452      	add	r2, sl
90029014:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029018:	0a12      	lsrs	r2, r2, #8
9002901a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002901e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90029022:	ea42 020c 	orr.w	r2, r2, ip
90029026:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029028:	2dff      	cmp	r5, #255	@ 0xff
9002902a:	d021      	beq.n	90029070 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
9002902c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002902e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90029032:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029034:	fb05 fb0b 	mul.w	fp, r5, fp
90029038:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002903a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002903e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029040:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90029044:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90029048:	fb05 fa0a 	mul.w	sl, r5, sl
9002904c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90029050:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90029054:	44de      	add	lr, fp
90029056:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002905a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002905e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029062:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90029066:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002906a:	ea4e 050a 	orr.w	r5, lr, sl
9002906e:	950b      	str	r5, [sp, #44]	@ 0x2c
90029070:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90029072:	2dff      	cmp	r5, #255	@ 0xff
90029074:	d021      	beq.n	900290ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90029076:	9d08      	ldr	r5, [sp, #32]
90029078:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002907c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002907e:	fb05 fb0b 	mul.w	fp, r5, fp
90029082:	9d08      	ldr	r5, [sp, #32]
90029084:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90029088:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002908a:	fb05 fa0e 	mul.w	sl, r5, lr
9002908e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90029092:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90029096:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002909a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002909e:	44de      	add	lr, fp
900290a0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900290a4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900290a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900290ac:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900290b0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900290b4:	ea4e 050a 	orr.w	r5, lr, sl
900290b8:	9508      	str	r5, [sp, #32]
900290ba:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900290bc:	2dff      	cmp	r5, #255	@ 0xff
900290be:	d021      	beq.n	90029104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
900290c0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900290c2:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900290c6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900290c8:	fb05 fb0b 	mul.w	fp, r5, fp
900290cc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900290ce:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900290d2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900290d4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900290d8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900290dc:	fb05 fa0a 	mul.w	sl, r5, sl
900290e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900290e4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900290e8:	44de      	add	lr, fp
900290ea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900290ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900290f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900290f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900290fa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900290fe:	ea4e 050a 	orr.w	r5, lr, sl
90029102:	950c      	str	r5, [sp, #48]	@ 0x30
90029104:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90029106:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
9002910a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002910e:	2bff      	cmp	r3, #255	@ 0xff
90029110:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90029114:	9d08      	ldr	r5, [sp, #32]
90029116:	fb08 fc0c 	mul.w	ip, r8, ip
9002911a:	fb01 cc0e 	mla	ip, r1, lr, ip
9002911e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90029122:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90029124:	fb00 cc0e 	mla	ip, r0, lr, ip
90029128:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
9002912c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
9002912e:	fb09 cc0e 	mla	ip, r9, lr, ip
90029132:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90029136:	fb08 f80e 	mul.w	r8, r8, lr
9002913a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002913e:	fb01 8202 	mla	r2, r1, r2, r8
90029142:	9908      	ldr	r1, [sp, #32]
90029144:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029148:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002914c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002914e:	fb00 220a 	mla	r2, r0, sl, r2
90029152:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90029156:	fb09 2900 	mla	r9, r9, r0, r2
9002915a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002915e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90029162:	ea4c 0c09 	orr.w	ip, ip, r9
90029166:	ea4f 221c 	mov.w	r2, ip, lsr #8
9002916a:	f040 8091 	bne.w	90029290 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002916e:	ea4f 135c 	mov.w	r3, ip, lsr #5
90029172:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90029176:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002917a:	f022 0207 	bic.w	r2, r2, #7
9002917e:	431a      	orrs	r2, r3
90029180:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90029184:	ea4c 0c02 	orr.w	ip, ip, r2
90029188:	f8a7 c000 	strh.w	ip, [r7]
9002918c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002918e:	3702      	adds	r7, #2
90029190:	441c      	add	r4, r3
90029192:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029194:	441e      	add	r6, r3
90029196:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90029198:	3b01      	subs	r3, #1
9002919a:	9317      	str	r3, [sp, #92]	@ 0x5c
9002919c:	e6c0      	b.n	90028f20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
9002919e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
900291a0:	441c      	add	r4, r3
900291a2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900291a4:	441e      	add	r6, r3
900291a6:	9b07      	ldr	r3, [sp, #28]
900291a8:	3b01      	subs	r3, #1
900291aa:	9307      	str	r3, [sp, #28]
900291ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900291ae:	3302      	adds	r3, #2
900291b0:	930a      	str	r3, [sp, #40]	@ 0x28
900291b2:	e695      	b.n	90028ee0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900291b4:	d024      	beq.n	90029200 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
900291b6:	9b07      	ldr	r3, [sp, #28]
900291b8:	9827      	ldr	r0, [sp, #156]	@ 0x9c
900291ba:	3b01      	subs	r3, #1
900291bc:	fb00 4003 	mla	r0, r0, r3, r4
900291c0:	1400      	asrs	r0, r0, #16
900291c2:	f53f aeaa 	bmi.w	90028f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900291c6:	3901      	subs	r1, #1
900291c8:	4288      	cmp	r0, r1
900291ca:	f6bf aea6 	bge.w	90028f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900291ce:	9928      	ldr	r1, [sp, #160]	@ 0xa0
900291d0:	fb01 6303 	mla	r3, r1, r3, r6
900291d4:	141b      	asrs	r3, r3, #16
900291d6:	f53f aea0 	bmi.w	90028f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900291da:	3a01      	subs	r2, #1
900291dc:	4293      	cmp	r3, r2
900291de:	f6bf ae9c 	bge.w	90028f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900291e2:	f8dd b01c 	ldr.w	fp, [sp, #28]
900291e6:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
900291ea:	f1bb 0f00 	cmp.w	fp, #0
900291ee:	f300 809a 	bgt.w	90029326 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900291f2:	9b07      	ldr	r3, [sp, #28]
900291f4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900291f8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900291fa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900291fe:	930a      	str	r3, [sp, #40]	@ 0x28
90029200:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90029202:	2b00      	cmp	r3, #0
90029204:	f340 81ec 	ble.w	900295e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90029208:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002920c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002920e:	ee30 0a04 	vadd.f32	s0, s0, s8
90029212:	ee70 0aa4 	vadd.f32	s1, s1, s9
90029216:	eef0 6a62 	vmov.f32	s13, s5
9002921a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002921e:	ee31 1a05 	vadd.f32	s2, s2, s10
90029222:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029226:	ee16 4a90 	vmov	r4, s13
9002922a:	eef0 6a43 	vmov.f32	s13, s6
9002922e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029232:	ee16 6a90 	vmov	r6, s13
90029236:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002923a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002923e:	ee77 2a62 	vsub.f32	s5, s14, s5
90029242:	ee37 3ac3 	vsub.f32	s6, s15, s6
90029246:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002924a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002924e:	ee12 2a90 	vmov	r2, s5
90029252:	eef0 2a47 	vmov.f32	s5, s14
90029256:	fb92 f3f3 	sdiv	r3, r2, r3
9002925a:	ee13 2a10 	vmov	r2, s6
9002925e:	9327      	str	r3, [sp, #156]	@ 0x9c
90029260:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029262:	eeb0 3a67 	vmov.f32	s6, s15
90029266:	fb92 f3f3 	sdiv	r3, r2, r3
9002926a:	9328      	str	r3, [sp, #160]	@ 0xa0
9002926c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002926e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90029270:	3b01      	subs	r3, #1
90029272:	9316      	str	r3, [sp, #88]	@ 0x58
90029274:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029276:	bf08      	it	eq
90029278:	4613      	moveq	r3, r2
9002927a:	9307      	str	r3, [sp, #28]
9002927c:	e622      	b.n	90028ec4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
9002927e:	2800      	cmp	r0, #0
90029280:	f43f ae92 	beq.w	90028fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90029284:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90029288:	9308      	str	r3, [sp, #32]
9002928a:	0e1b      	lsrs	r3, r3, #24
9002928c:	9310      	str	r3, [sp, #64]	@ 0x40
9002928e:	e68b      	b.n	90028fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90029290:	8839      	ldrh	r1, [r7, #0]
90029292:	43db      	mvns	r3, r3
90029294:	4dd4      	ldr	r5, [pc, #848]	@ (900295e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90029296:	ea4f 2e21 	mov.w	lr, r1, asr #8
9002929a:	fa5f f883 	uxtb.w	r8, r3
9002929e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
900292a2:	10c8      	asrs	r0, r1, #3
900292a4:	00cb      	lsls	r3, r1, #3
900292a6:	fb0e fe08 	mul.w	lr, lr, r8
900292aa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900292ae:	b2db      	uxtb	r3, r3
900292b0:	f10e 0101 	add.w	r1, lr, #1
900292b4:	fb00 f008 	mul.w	r0, r0, r8
900292b8:	fb03 f308 	mul.w	r3, r3, r8
900292bc:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
900292c0:	ea4f 411c 	mov.w	r1, ip, lsr #16
900292c4:	eb01 211e 	add.w	r1, r1, lr, lsr #8
900292c8:	f100 0e01 	add.w	lr, r0, #1
900292cc:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
900292d0:	b2c9      	uxtb	r1, r1
900292d2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900292d6:	ea05 2101 	and.w	r1, r5, r1, lsl #8
900292da:	00d2      	lsls	r2, r2, #3
900292dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900292e0:	430a      	orrs	r2, r1
900292e2:	1c59      	adds	r1, r3, #1
900292e4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900292e8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900292ec:	e748      	b.n	90029180 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900292ee:	f112 0801 	adds.w	r8, r2, #1
900292f2:	f53f af4b 	bmi.w	9002918c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900292f6:	4543      	cmp	r3, r8
900292f8:	f6ff af48 	blt.w	9002918c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900292fc:	f11c 0801 	adds.w	r8, ip, #1
90029300:	f53f af44 	bmi.w	9002918c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90029304:	45c6      	cmp	lr, r8
90029306:	f6ff af41 	blt.w	9002918c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002930a:	b21b      	sxth	r3, r3
9002930c:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90029310:	fa0f f28e 	sxth.w	r2, lr
90029314:	e9cd 1003 	strd	r1, r0, [sp, #12]
90029318:	9200      	str	r2, [sp, #0]
9002931a:	4639      	mov	r1, r7
9002931c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002931e:	9819      	ldr	r0, [sp, #100]	@ 0x64
90029320:	f7ff fc88 	bl	90028c34 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90029324:	e732      	b.n	9002918c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90029326:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90029328:	1421      	asrs	r1, r4, #16
9002932a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9002932c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90029330:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90029334:	1433      	asrs	r3, r6, #16
90029336:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002933a:	fb07 1303 	mla	r3, r7, r3, r1
9002933e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90029340:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90029344:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90029348:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9002934c:	2a00      	cmp	r2, #0
9002934e:	f000 8108 	beq.w	90029562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90029352:	684d      	ldr	r5, [r1, #4]
90029354:	950d      	str	r5, [sp, #52]	@ 0x34
90029356:	0e2d      	lsrs	r5, r5, #24
90029358:	9514      	str	r5, [sp, #80]	@ 0x50
9002935a:	b178      	cbz	r0, 9002937c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002935c:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90029360:	3f01      	subs	r7, #1
90029362:	00bf      	lsls	r7, r7, #2
90029364:	3704      	adds	r7, #4
90029366:	eb01 0e07 	add.w	lr, r1, r7
9002936a:	59c9      	ldr	r1, [r1, r7]
9002936c:	9109      	str	r1, [sp, #36]	@ 0x24
9002936e:	0e09      	lsrs	r1, r1, #24
90029370:	9111      	str	r1, [sp, #68]	@ 0x44
90029372:	f8de 1004 	ldr.w	r1, [lr, #4]
90029376:	910e      	str	r1, [sp, #56]	@ 0x38
90029378:	0e09      	lsrs	r1, r1, #24
9002937a:	9115      	str	r1, [sp, #84]	@ 0x54
9002937c:	b292      	uxth	r2, r2
9002937e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90029380:	b280      	uxth	r0, r0
90029382:	fb02 f900 	mul.w	r9, r2, r0
90029386:	0112      	lsls	r2, r2, #4
90029388:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002938c:	eba2 0e09 	sub.w	lr, r2, r9
90029390:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90029394:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90029396:	b280      	uxth	r0, r0
90029398:	fa1f fe8e 	uxth.w	lr, lr
9002939c:	1a09      	subs	r1, r1, r0
9002939e:	fb0e f202 	mul.w	r2, lr, r2
900293a2:	b289      	uxth	r1, r1
900293a4:	fb01 220c 	mla	r2, r1, ip, r2
900293a8:	fb00 2205 	mla	r2, r0, r5, r2
900293ac:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900293ae:	fb09 2205 	mla	r2, r9, r5, r2
900293b2:	f3c2 2207 	ubfx	r2, r2, #8, #8
900293b6:	2a00      	cmp	r2, #0
900293b8:	f000 80ca 	beq.w	90029550 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900293bc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900293c0:	d019      	beq.n	900293f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
900293c2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900293c6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900293ca:	fb0c fa0a 	mul.w	sl, ip, sl
900293ce:	fb0c fc03 	mul.w	ip, ip, r3
900293d2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900293d6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900293da:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900293de:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900293e2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900293e6:	4453      	add	r3, sl
900293e8:	0a3f      	lsrs	r7, r7, #8
900293ea:	0a1b      	lsrs	r3, r3, #8
900293ec:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900293f0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900293f4:	433b      	orrs	r3, r7
900293f6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900293f8:	2dff      	cmp	r5, #255	@ 0xff
900293fa:	d020      	beq.n	9002943e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
900293fc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900293fe:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90029402:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90029404:	436f      	muls	r7, r5
90029406:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90029408:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002940c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90029410:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90029412:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90029416:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002941a:	fb05 fa0a 	mul.w	sl, r5, sl
9002941e:	44bc      	add	ip, r7
90029420:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90029424:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029428:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002942c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029430:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029434:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029438:	ea4c 050a 	orr.w	r5, ip, sl
9002943c:	950d      	str	r5, [sp, #52]	@ 0x34
9002943e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90029440:	2dff      	cmp	r5, #255	@ 0xff
90029442:	d020      	beq.n	90029486 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90029444:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90029446:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002944a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002944c:	436f      	muls	r7, r5
9002944e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90029450:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90029454:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90029456:	fb05 fa0c 	mul.w	sl, r5, ip
9002945a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002945e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90029462:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029466:	44bc      	add	ip, r7
90029468:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002946c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90029470:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029474:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029478:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002947c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029480:	ea4c 050a 	orr.w	r5, ip, sl
90029484:	9509      	str	r5, [sp, #36]	@ 0x24
90029486:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90029488:	2dff      	cmp	r5, #255	@ 0xff
9002948a:	d020      	beq.n	900294ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
9002948c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002948e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90029492:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90029494:	436f      	muls	r7, r5
90029496:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90029498:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002949c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900294a0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
900294a2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900294a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900294aa:	fb05 fa0a 	mul.w	sl, r5, sl
900294ae:	44bc      	add	ip, r7
900294b0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900294b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900294b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900294bc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900294c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900294c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900294c8:	ea4c 050a 	orr.w	r5, ip, sl
900294cc:	950e      	str	r5, [sp, #56]	@ 0x38
900294ce:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900294d0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900294d4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900294d8:	2aff      	cmp	r2, #255	@ 0xff
900294da:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900294de:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900294e0:	fb0e f707 	mul.w	r7, lr, r7
900294e4:	fb01 770c 	mla	r7, r1, ip, r7
900294e8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900294ec:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900294ee:	fb00 770c 	mla	r7, r0, ip, r7
900294f2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900294f6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900294f8:	fb09 770c 	mla	r7, r9, ip, r7
900294fc:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90029500:	fb0e fe0c 	mul.w	lr, lr, ip
90029504:	ea4f 2717 	mov.w	r7, r7, lsr #8
90029508:	fb01 e303 	mla	r3, r1, r3, lr
9002950c:	9909      	ldr	r1, [sp, #36]	@ 0x24
9002950e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90029512:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90029516:	990e      	ldr	r1, [sp, #56]	@ 0x38
90029518:	fb00 330a 	mla	r3, r0, sl, r3
9002951c:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90029520:	fb09 3c0c 	mla	ip, r9, ip, r3
90029524:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029528:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002952c:	ea47 070c 	orr.w	r7, r7, ip
90029530:	ea4f 2317 	mov.w	r3, r7, lsr #8
90029534:	d11e      	bne.n	90029574 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90029536:	097a      	lsrs	r2, r7, #5
90029538:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
9002953c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90029540:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90029544:	f023 0307 	bic.w	r3, r3, #7
90029548:	4313      	orrs	r3, r2
9002954a:	431f      	orrs	r7, r3
9002954c:	f8a8 7000 	strh.w	r7, [r8]
90029550:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90029552:	f108 0802 	add.w	r8, r8, #2
90029556:	f10b 3bff 	add.w	fp, fp, #4294967295
9002955a:	441c      	add	r4, r3
9002955c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002955e:	441e      	add	r6, r3
90029560:	e643      	b.n	900291ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90029562:	2800      	cmp	r0, #0
90029564:	f43f af0a 	beq.w	9002937c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90029568:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
9002956c:	9109      	str	r1, [sp, #36]	@ 0x24
9002956e:	0e09      	lsrs	r1, r1, #24
90029570:	9111      	str	r1, [sp, #68]	@ 0x44
90029572:	e703      	b.n	9002937c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90029574:	f8b8 1000 	ldrh.w	r1, [r8]
90029578:	43d2      	mvns	r2, r2
9002957a:	ea4f 2c21 	mov.w	ip, r1, asr #8
9002957e:	fa5f fe82 	uxtb.w	lr, r2
90029582:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90029586:	10c8      	asrs	r0, r1, #3
90029588:	00ca      	lsls	r2, r1, #3
9002958a:	fb0c fc0e 	mul.w	ip, ip, lr
9002958e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029592:	b2d2      	uxtb	r2, r2
90029594:	f10c 0101 	add.w	r1, ip, #1
90029598:	fb00 f00e 	mul.w	r0, r0, lr
9002959c:	fb02 f20e 	mul.w	r2, r2, lr
900295a0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900295a4:	0c39      	lsrs	r1, r7, #16
900295a6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900295aa:	490f      	ldr	r1, [pc, #60]	@ (900295e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900295ac:	fa5f fc8c 	uxtb.w	ip, ip
900295b0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
900295b4:	1c41      	adds	r1, r0, #1
900295b6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900295ba:	1c51      	adds	r1, r2, #1
900295bc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900295c0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900295c4:	00c0      	lsls	r0, r0, #3
900295c6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900295ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900295ce:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900295d2:	ea4c 0c00 	orr.w	ip, ip, r0
900295d6:	ea47 0c0c 	orr.w	ip, r7, ip
900295da:	f8a8 c000 	strh.w	ip, [r8]
900295de:	e7b7      	b.n	90029550 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900295e0:	b01b      	add	sp, #108	@ 0x6c
900295e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900295e6:	bf00      	nop
900295e8:	fffff800 	.word	0xfffff800

900295ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
900295ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900295f0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900295f4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900295f8:	2d00      	cmp	r5, #0
900295fa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900295fe:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90029602:	fb05 0e03 	mla	lr, r5, r3, r0
90029606:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
9002960a:	f2c0 808c 	blt.w	90029726 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
9002960e:	45a9      	cmp	r9, r5
90029610:	f340 8089 	ble.w	90029726 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90029614:	2800      	cmp	r0, #0
90029616:	f2c0 8084 	blt.w	90029722 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
9002961a:	4580      	cmp	r8, r0
9002961c:	f340 8081 	ble.w	90029722 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90029620:	ea4f 045e 	mov.w	r4, lr, lsr #1
90029624:	f01e 0f01 	tst.w	lr, #1
90029628:	5d16      	ldrb	r6, [r2, r4]
9002962a:	bf0c      	ite	eq
9002962c:	f006 060f 	andeq.w	r6, r6, #15
90029630:	1136      	asrne	r6, r6, #4
90029632:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90029636:	b2f6      	uxtb	r6, r6
90029638:	1c44      	adds	r4, r0, #1
9002963a:	d477      	bmi.n	9002972c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
9002963c:	45a0      	cmp	r8, r4
9002963e:	dd75      	ble.n	9002972c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90029640:	2f00      	cmp	r7, #0
90029642:	d075      	beq.n	90029730 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90029644:	f10e 0a01 	add.w	sl, lr, #1
90029648:	ea4f 045a 	mov.w	r4, sl, lsr #1
9002964c:	f01a 0f01 	tst.w	sl, #1
90029650:	5d14      	ldrb	r4, [r2, r4]
90029652:	bf0c      	ite	eq
90029654:	f004 040f 	andeq.w	r4, r4, #15
90029658:	1124      	asrne	r4, r4, #4
9002965a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9002965e:	b2e4      	uxtb	r4, r4
90029660:	3501      	adds	r5, #1
90029662:	d469      	bmi.n	90029738 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90029664:	45a9      	cmp	r9, r5
90029666:	dd67      	ble.n	90029738 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90029668:	f1bc 0f00 	cmp.w	ip, #0
9002966c:	d067      	beq.n	9002973e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
9002966e:	2800      	cmp	r0, #0
90029670:	db60      	blt.n	90029734 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90029672:	4580      	cmp	r8, r0
90029674:	dd5e      	ble.n	90029734 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90029676:	eb03 090e 	add.w	r9, r3, lr
9002967a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002967e:	f019 0f01 	tst.w	r9, #1
90029682:	5d55      	ldrb	r5, [r2, r5]
90029684:	bf0c      	ite	eq
90029686:	f005 050f 	andeq.w	r5, r5, #15
9002968a:	112d      	asrne	r5, r5, #4
9002968c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90029690:	b2ed      	uxtb	r5, r5
90029692:	3001      	adds	r0, #1
90029694:	d456      	bmi.n	90029744 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90029696:	4580      	cmp	r8, r0
90029698:	dd54      	ble.n	90029744 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002969a:	2f00      	cmp	r7, #0
9002969c:	d054      	beq.n	90029748 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
9002969e:	3301      	adds	r3, #1
900296a0:	449e      	add	lr, r3
900296a2:	ea4f 035e 	mov.w	r3, lr, lsr #1
900296a6:	f01e 0f01 	tst.w	lr, #1
900296aa:	5cd0      	ldrb	r0, [r2, r3]
900296ac:	bf0c      	ite	eq
900296ae:	f000 000f 	andeq.w	r0, r0, #15
900296b2:	1100      	asrne	r0, r0, #4
900296b4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900296b8:	b2c3      	uxtb	r3, r0
900296ba:	b2ba      	uxth	r2, r7
900296bc:	fa1f fc8c 	uxth.w	ip, ip
900296c0:	fb02 f00c 	mul.w	r0, r2, ip
900296c4:	0112      	lsls	r2, r2, #4
900296c6:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900296ca:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
900296ce:	1a12      	subs	r2, r2, r0
900296d0:	fa1f fc8c 	uxth.w	ip, ip
900296d4:	b292      	uxth	r2, r2
900296d6:	eba7 070c 	sub.w	r7, r7, ip
900296da:	4362      	muls	r2, r4
900296dc:	b2bf      	uxth	r7, r7
900296de:	fb06 2207 	mla	r2, r6, r7, r2
900296e2:	fb0c 2505 	mla	r5, ip, r5, r2
900296e6:	fb00 5303 	mla	r3, r0, r3, r5
900296ea:	f3c3 2307 	ubfx	r3, r3, #8, #8
900296ee:	b1b3      	cbz	r3, 9002971e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900296f0:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
900296f4:	435a      	muls	r2, r3
900296f6:	1c53      	adds	r3, r2, #1
900296f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900296fc:	4a2d      	ldr	r2, [pc, #180]	@ (900297b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
900296fe:	121b      	asrs	r3, r3, #8
90029700:	6812      	ldr	r2, [r2, #0]
90029702:	2bff      	cmp	r3, #255	@ 0xff
90029704:	ea4f 2612 	mov.w	r6, r2, lsr #8
90029708:	d120      	bne.n	9002974c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
9002970a:	0950      	lsrs	r0, r2, #5
9002970c:	4b2a      	ldr	r3, [pc, #168]	@ (900297b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
9002970e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90029712:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029716:	4033      	ands	r3, r6
90029718:	4318      	orrs	r0, r3
9002971a:	4302      	orrs	r2, r0
9002971c:	800a      	strh	r2, [r1, #0]
9002971e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90029722:	2600      	movs	r6, #0
90029724:	e788      	b.n	90029638 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90029726:	2400      	movs	r4, #0
90029728:	4626      	mov	r6, r4
9002972a:	e799      	b.n	90029660 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
9002972c:	2400      	movs	r4, #0
9002972e:	e797      	b.n	90029660 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90029730:	463c      	mov	r4, r7
90029732:	e795      	b.n	90029660 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90029734:	2500      	movs	r5, #0
90029736:	e7ac      	b.n	90029692 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90029738:	2300      	movs	r3, #0
9002973a:	461d      	mov	r5, r3
9002973c:	e7bd      	b.n	900296ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002973e:	4663      	mov	r3, ip
90029740:	4665      	mov	r5, ip
90029742:	e7ba      	b.n	900296ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90029744:	2300      	movs	r3, #0
90029746:	e7b8      	b.n	900296ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90029748:	463b      	mov	r3, r7
9002974a:	e7b6      	b.n	900296ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002974c:	880d      	ldrh	r5, [r1, #0]
9002974e:	b29f      	uxth	r7, r3
90029750:	f3c2 4007 	ubfx	r0, r2, #16, #8
90029754:	43db      	mvns	r3, r3
90029756:	122c      	asrs	r4, r5, #8
90029758:	fb10 f007 	smulbb	r0, r0, r7
9002975c:	b2db      	uxtb	r3, r3
9002975e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029762:	b2f6      	uxtb	r6, r6
90029764:	b2d2      	uxtb	r2, r2
90029766:	fb04 0403 	mla	r4, r4, r3, r0
9002976a:	10e8      	asrs	r0, r5, #3
9002976c:	fb12 f207 	smulbb	r2, r2, r7
90029770:	00ed      	lsls	r5, r5, #3
90029772:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029776:	b2a4      	uxth	r4, r4
90029778:	fb16 f607 	smulbb	r6, r6, r7
9002977c:	b2ed      	uxtb	r5, r5
9002977e:	fb00 6603 	mla	r6, r0, r3, r6
90029782:	fb05 2303 	mla	r3, r5, r3, r2
90029786:	b2b0      	uxth	r0, r6
90029788:	b29a      	uxth	r2, r3
9002978a:	1c63      	adds	r3, r4, #1
9002978c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90029790:	1c53      	adds	r3, r2, #1
90029792:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90029796:	1c42      	adds	r2, r0, #1
90029798:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002979c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900297a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900297a4:	0940      	lsrs	r0, r0, #5
900297a6:	4323      	orrs	r3, r4
900297a8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900297ac:	4303      	orrs	r3, r0
900297ae:	800b      	strh	r3, [r1, #0]
900297b0:	e7b5      	b.n	9002971e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900297b2:	bf00      	nop
900297b4:	240245b0 	.word	0x240245b0
900297b8:	00fff800 	.word	0x00fff800

900297bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900297bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900297c0:	b097      	sub	sp, #92	@ 0x5c
900297c2:	9214      	str	r2, [sp, #80]	@ 0x50
900297c4:	9309      	str	r3, [sp, #36]	@ 0x24
900297c6:	9a25      	ldr	r2, [sp, #148]	@ 0x94
900297c8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900297cc:	9015      	str	r0, [sp, #84]	@ 0x54
900297ce:	910d      	str	r1, [sp, #52]	@ 0x34
900297d0:	6850      	ldr	r0, [r2, #4]
900297d2:	930f      	str	r3, [sp, #60]	@ 0x3c
900297d4:	6812      	ldr	r2, [r2, #0]
900297d6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
900297da:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
900297de:	fb00 1303 	mla	r3, r0, r3, r1
900297e2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900297e6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900297e8:	689b      	ldr	r3, [r3, #8]
900297ea:	3301      	adds	r3, #1
900297ec:	f023 0301 	bic.w	r3, r3, #1
900297f0:	930a      	str	r3, [sp, #40]	@ 0x28
900297f2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900297f4:	681f      	ldr	r7, [r3, #0]
900297f6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900297f8:	2b00      	cmp	r3, #0
900297fa:	dc03      	bgt.n	90029804 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900297fc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900297fe:	2b00      	cmp	r3, #0
90029800:	f340 8289 	ble.w	90029d16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90029804:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029806:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002980a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002980e:	1e48      	subs	r0, r1, #1
90029810:	f102 3cff 	add.w	ip, r2, #4294967295
90029814:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029816:	2b00      	cmp	r3, #0
90029818:	f340 80c5 	ble.w	900299a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
9002981c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90029820:	ea4f 4326 	mov.w	r3, r6, asr #16
90029824:	d406      	bmi.n	90029834 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90029826:	4586      	cmp	lr, r0
90029828:	da04      	bge.n	90029834 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002982a:	2b00      	cmp	r3, #0
9002982c:	db02      	blt.n	90029834 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002982e:	4563      	cmp	r3, ip
90029830:	f2c0 80ba 	blt.w	900299a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90029834:	f11e 0e01 	adds.w	lr, lr, #1
90029838:	f100 80ab 	bmi.w	90029992 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002983c:	4571      	cmp	r1, lr
9002983e:	f2c0 80a8 	blt.w	90029992 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90029842:	3301      	adds	r3, #1
90029844:	f100 80a5 	bmi.w	90029992 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90029848:	429a      	cmp	r2, r3
9002984a:	f2c0 80a2 	blt.w	90029992 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002984e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029850:	46c8      	mov	r8, r9
90029852:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90029856:	930e      	str	r3, [sp, #56]	@ 0x38
90029858:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002985a:	2b00      	cmp	r3, #0
9002985c:	f340 80c4 	ble.w	900299e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90029860:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029862:	1430      	asrs	r0, r6, #16
90029864:	f3c4 3203 	ubfx	r2, r4, #12, #4
90029868:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002986c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90029870:	1423      	asrs	r3, r4, #16
90029872:	f100 814f 	bmi.w	90029b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029876:	f10c 3bff 	add.w	fp, ip, #4294967295
9002987a:	455b      	cmp	r3, fp
9002987c:	f280 814a 	bge.w	90029b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029880:	2800      	cmp	r0, #0
90029882:	f2c0 8147 	blt.w	90029b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029886:	f10e 3bff 	add.w	fp, lr, #4294967295
9002988a:	4558      	cmp	r0, fp
9002988c:	f280 8142 	bge.w	90029b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029890:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90029892:	fb00 3305 	mla	r3, r0, r5, r3
90029896:	0858      	lsrs	r0, r3, #1
90029898:	07dd      	lsls	r5, r3, #31
9002989a:	f817 c000 	ldrb.w	ip, [r7, r0]
9002989e:	bf54      	ite	pl
900298a0:	f00c 0c0f 	andpl.w	ip, ip, #15
900298a4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900298a8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900298ac:	fa5f fc8c 	uxtb.w	ip, ip
900298b0:	2a00      	cmp	r2, #0
900298b2:	f000 80dd 	beq.w	90029a70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
900298b6:	1c58      	adds	r0, r3, #1
900298b8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
900298bc:	07c0      	lsls	r0, r0, #31
900298be:	f817 e00e 	ldrb.w	lr, [r7, lr]
900298c2:	bf54      	ite	pl
900298c4:	f00e 0e0f 	andpl.w	lr, lr, #15
900298c8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900298cc:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900298d0:	fa5f f08e 	uxtb.w	r0, lr
900298d4:	9010      	str	r0, [sp, #64]	@ 0x40
900298d6:	b1d9      	cbz	r1, 90029910 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900298d8:	4453      	add	r3, sl
900298da:	0858      	lsrs	r0, r3, #1
900298dc:	07dd      	lsls	r5, r3, #31
900298de:	f103 0301 	add.w	r3, r3, #1
900298e2:	5c38      	ldrb	r0, [r7, r0]
900298e4:	bf54      	ite	pl
900298e6:	f000 000f 	andpl.w	r0, r0, #15
900298ea:	1100      	asrmi	r0, r0, #4
900298ec:	07dd      	lsls	r5, r3, #31
900298ee:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900298f2:	b2c0      	uxtb	r0, r0
900298f4:	900b      	str	r0, [sp, #44]	@ 0x2c
900298f6:	ea4f 0053 	mov.w	r0, r3, lsr #1
900298fa:	f817 e000 	ldrb.w	lr, [r7, r0]
900298fe:	bf54      	ite	pl
90029900:	f00e 030f 	andpl.w	r3, lr, #15
90029904:	ea4f 132e 	movmi.w	r3, lr, asr #4
90029908:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002990c:	b2db      	uxtb	r3, r3
9002990e:	9311      	str	r3, [sp, #68]	@ 0x44
90029910:	b292      	uxth	r2, r2
90029912:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90029914:	b289      	uxth	r1, r1
90029916:	fb02 f301 	mul.w	r3, r2, r1
9002991a:	0112      	lsls	r2, r2, #4
9002991c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90029920:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90029924:	1ad2      	subs	r2, r2, r3
90029926:	b289      	uxth	r1, r1
90029928:	b292      	uxth	r2, r2
9002992a:	1a40      	subs	r0, r0, r1
9002992c:	436a      	muls	r2, r5
9002992e:	b280      	uxth	r0, r0
90029930:	fb0c 2c00 	mla	ip, ip, r0, r2
90029934:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90029936:	fb01 c102 	mla	r1, r1, r2, ip
9002993a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9002993c:	fb03 1302 	mla	r3, r3, r2, r1
90029940:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029944:	b1db      	cbz	r3, 9002997e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029946:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90029948:	4353      	muls	r3, r2
9002994a:	1c5a      	adds	r2, r3, #1
9002994c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90029950:	4ac6      	ldr	r2, [pc, #792]	@ (90029c6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90029952:	121b      	asrs	r3, r3, #8
90029954:	6812      	ldr	r2, [r2, #0]
90029956:	2bff      	cmp	r3, #255	@ 0xff
90029958:	ea4f 2c12 	mov.w	ip, r2, lsr #8
9002995c:	f040 8099 	bne.w	90029a92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90029960:	0953      	lsrs	r3, r2, #5
90029962:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90029966:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002996a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002996e:	f02c 0c07 	bic.w	ip, ip, #7
90029972:	ea43 0c0c 	orr.w	ip, r3, ip
90029976:	ea4c 0202 	orr.w	r2, ip, r2
9002997a:	f8a8 2000 	strh.w	r2, [r8]
9002997e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029980:	f108 0802 	add.w	r8, r8, #2
90029984:	441c      	add	r4, r3
90029986:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029988:	441e      	add	r6, r3
9002998a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002998c:	3b01      	subs	r3, #1
9002998e:	930e      	str	r3, [sp, #56]	@ 0x38
90029990:	e762      	b.n	90029858 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90029992:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029994:	f109 0902 	add.w	r9, r9, #2
90029998:	441c      	add	r4, r3
9002999a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002999c:	441e      	add	r6, r3
9002999e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900299a0:	3b01      	subs	r3, #1
900299a2:	9309      	str	r3, [sp, #36]	@ 0x24
900299a4:	e736      	b.n	90029814 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900299a6:	d024      	beq.n	900299f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900299a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900299aa:	9823      	ldr	r0, [sp, #140]	@ 0x8c
900299ac:	3b01      	subs	r3, #1
900299ae:	fb00 4003 	mla	r0, r0, r3, r4
900299b2:	1400      	asrs	r0, r0, #16
900299b4:	f53f af4b 	bmi.w	9002984e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900299b8:	3901      	subs	r1, #1
900299ba:	4288      	cmp	r0, r1
900299bc:	f6bf af47 	bge.w	9002984e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900299c0:	9924      	ldr	r1, [sp, #144]	@ 0x90
900299c2:	fb01 6303 	mla	r3, r1, r3, r6
900299c6:	141b      	asrs	r3, r3, #16
900299c8:	f53f af41 	bmi.w	9002984e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900299cc:	3a01      	subs	r2, #1
900299ce:	4293      	cmp	r3, r2
900299d0:	f6bf af3d 	bge.w	9002984e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900299d4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
900299d8:	46c8      	mov	r8, r9
900299da:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
900299de:	930e      	str	r3, [sp, #56]	@ 0x38
900299e0:	f1bb 0f00 	cmp.w	fp, #0
900299e4:	f300 80b7 	bgt.w	90029b56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
900299e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900299ea:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900299ee:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900299f2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900299f4:	2b00      	cmp	r3, #0
900299f6:	f340 818e 	ble.w	90029d16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900299fa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900299fe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029a00:	ee30 0a04 	vadd.f32	s0, s0, s8
90029a04:	ee70 0aa4 	vadd.f32	s1, s1, s9
90029a08:	eef0 6a62 	vmov.f32	s13, s5
90029a0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029a10:	ee31 1a05 	vadd.f32	s2, s2, s10
90029a14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029a18:	ee16 4a90 	vmov	r4, s13
90029a1c:	eef0 6a43 	vmov.f32	s13, s6
90029a20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90029a24:	ee16 6a90 	vmov	r6, s13
90029a28:	ee20 7aa7 	vmul.f32	s14, s1, s15
90029a2c:	ee61 7a27 	vmul.f32	s15, s2, s15
90029a30:	ee77 2a62 	vsub.f32	s5, s14, s5
90029a34:	ee37 3ac3 	vsub.f32	s6, s15, s6
90029a38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90029a3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90029a40:	ee12 2a90 	vmov	r2, s5
90029a44:	eef0 2a47 	vmov.f32	s5, s14
90029a48:	fb92 f3f3 	sdiv	r3, r2, r3
90029a4c:	ee13 2a10 	vmov	r2, s6
90029a50:	9323      	str	r3, [sp, #140]	@ 0x8c
90029a52:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029a54:	eeb0 3a67 	vmov.f32	s6, s15
90029a58:	fb92 f3f3 	sdiv	r3, r2, r3
90029a5c:	9324      	str	r3, [sp, #144]	@ 0x90
90029a5e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90029a60:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90029a62:	3b01      	subs	r3, #1
90029a64:	930d      	str	r3, [sp, #52]	@ 0x34
90029a66:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029a68:	bf08      	it	eq
90029a6a:	4613      	moveq	r3, r2
90029a6c:	9309      	str	r3, [sp, #36]	@ 0x24
90029a6e:	e6c2      	b.n	900297f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90029a70:	2900      	cmp	r1, #0
90029a72:	f43f af4d 	beq.w	90029910 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029a76:	eb0a 0003 	add.w	r0, sl, r3
90029a7a:	0843      	lsrs	r3, r0, #1
90029a7c:	07c0      	lsls	r0, r0, #31
90029a7e:	5cfb      	ldrb	r3, [r7, r3]
90029a80:	bf54      	ite	pl
90029a82:	f003 030f 	andpl.w	r3, r3, #15
90029a86:	111b      	asrmi	r3, r3, #4
90029a88:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90029a8c:	b2db      	uxtb	r3, r3
90029a8e:	930b      	str	r3, [sp, #44]	@ 0x2c
90029a90:	e73e      	b.n	90029910 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029a92:	f8b8 e000 	ldrh.w	lr, [r8]
90029a96:	fa1f fb83 	uxth.w	fp, r3
90029a9a:	f3c2 4107 	ubfx	r1, r2, #16, #8
90029a9e:	43db      	mvns	r3, r3
90029aa0:	ea4f 202e 	mov.w	r0, lr, asr #8
90029aa4:	fb11 f10b 	smulbb	r1, r1, fp
90029aa8:	b2db      	uxtb	r3, r3
90029aaa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90029aae:	fa5f fc8c 	uxtb.w	ip, ip
90029ab2:	b2d2      	uxtb	r2, r2
90029ab4:	fb00 1003 	mla	r0, r0, r3, r1
90029ab8:	ea4f 01ee 	mov.w	r1, lr, asr #3
90029abc:	fb1c fc0b 	smulbb	ip, ip, fp
90029ac0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90029ac4:	b280      	uxth	r0, r0
90029ac6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90029aca:	fb12 fb0b 	smulbb	fp, r2, fp
90029ace:	fa5f fe8e 	uxtb.w	lr, lr
90029ad2:	fb01 cc03 	mla	ip, r1, r3, ip
90029ad6:	fb0e bb03 	mla	fp, lr, r3, fp
90029ada:	1c43      	adds	r3, r0, #1
90029adc:	fa1f fc8c 	uxth.w	ip, ip
90029ae0:	fa1f fb8b 	uxth.w	fp, fp
90029ae4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90029ae8:	f10c 0101 	add.w	r1, ip, #1
90029aec:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90029af0:	f10b 0001 	add.w	r0, fp, #1
90029af4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90029af8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90029afc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90029b00:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90029b04:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90029b08:	4318      	orrs	r0, r3
90029b0a:	ea40 000c 	orr.w	r0, r0, ip
90029b0e:	f8a8 0000 	strh.w	r0, [r8]
90029b12:	e734      	b.n	9002997e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029b14:	f113 0b01 	adds.w	fp, r3, #1
90029b18:	f53f af31 	bmi.w	9002997e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029b1c:	45dc      	cmp	ip, fp
90029b1e:	f6ff af2e 	blt.w	9002997e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029b22:	f110 0b01 	adds.w	fp, r0, #1
90029b26:	f53f af2a 	bmi.w	9002997e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029b2a:	45de      	cmp	lr, fp
90029b2c:	f6ff af27 	blt.w	9002997e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029b30:	9302      	str	r3, [sp, #8]
90029b32:	fa0f f38e 	sxth.w	r3, lr
90029b36:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90029b38:	9301      	str	r3, [sp, #4]
90029b3a:	fa0f f38c 	sxth.w	r3, ip
90029b3e:	e9cd 0203 	strd	r0, r2, [sp, #12]
90029b42:	e9cd 1505 	strd	r1, r5, [sp, #20]
90029b46:	9300      	str	r3, [sp, #0]
90029b48:	463a      	mov	r2, r7
90029b4a:	4653      	mov	r3, sl
90029b4c:	4641      	mov	r1, r8
90029b4e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90029b50:	f7ff fd4c 	bl	900295ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90029b54:	e713      	b.n	9002997e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029b56:	1422      	asrs	r2, r4, #16
90029b58:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90029b5a:	1433      	asrs	r3, r6, #16
90029b5c:	f3c4 3103 	ubfx	r1, r4, #12, #4
90029b60:	f3c6 3003 	ubfx	r0, r6, #12, #4
90029b64:	fb05 2303 	mla	r3, r5, r3, r2
90029b68:	085a      	lsrs	r2, r3, #1
90029b6a:	07dd      	lsls	r5, r3, #31
90029b6c:	5cba      	ldrb	r2, [r7, r2]
90029b6e:	bf54      	ite	pl
90029b70:	f002 020f 	andpl.w	r2, r2, #15
90029b74:	1112      	asrmi	r2, r2, #4
90029b76:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90029b7a:	b2d2      	uxtb	r2, r2
90029b7c:	2900      	cmp	r1, #0
90029b7e:	d077      	beq.n	90029c70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90029b80:	f103 0e01 	add.w	lr, r3, #1
90029b84:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90029b88:	f01e 0f01 	tst.w	lr, #1
90029b8c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029b90:	bf0c      	ite	eq
90029b92:	f00c 0c0f 	andeq.w	ip, ip, #15
90029b96:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90029b9a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029b9e:	fa5f f58c 	uxtb.w	r5, ip
90029ba2:	9512      	str	r5, [sp, #72]	@ 0x48
90029ba4:	b308      	cbz	r0, 90029bea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90029ba6:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90029ba8:	442b      	add	r3, r5
90029baa:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029bae:	07dd      	lsls	r5, r3, #31
90029bb0:	f103 0301 	add.w	r3, r3, #1
90029bb4:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029bb8:	bf54      	ite	pl
90029bba:	f00c 0c0f 	andpl.w	ip, ip, #15
90029bbe:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029bc2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029bc6:	fa5f f58c 	uxtb.w	r5, ip
90029bca:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029bce:	950c      	str	r5, [sp, #48]	@ 0x30
90029bd0:	07dd      	lsls	r5, r3, #31
90029bd2:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029bd6:	bf54      	ite	pl
90029bd8:	f00c 0c0f 	andpl.w	ip, ip, #15
90029bdc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029be0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029be4:	fa5f f38c 	uxtb.w	r3, ip
90029be8:	9313      	str	r3, [sp, #76]	@ 0x4c
90029bea:	b289      	uxth	r1, r1
90029bec:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029bee:	b280      	uxth	r0, r0
90029bf0:	fb01 f300 	mul.w	r3, r1, r0
90029bf4:	0109      	lsls	r1, r1, #4
90029bf6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90029bfa:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90029bfe:	1ac9      	subs	r1, r1, r3
90029c00:	b280      	uxth	r0, r0
90029c02:	b289      	uxth	r1, r1
90029c04:	ebac 0c00 	sub.w	ip, ip, r0
90029c08:	4369      	muls	r1, r5
90029c0a:	fa1f fc8c 	uxth.w	ip, ip
90029c0e:	fb02 120c 	mla	r2, r2, ip, r1
90029c12:	990c      	ldr	r1, [sp, #48]	@ 0x30
90029c14:	fb00 2001 	mla	r0, r0, r1, r2
90029c18:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90029c1a:	fb03 0302 	mla	r3, r3, r2, r0
90029c1e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029c22:	b1d3      	cbz	r3, 90029c5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90029c24:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90029c26:	4353      	muls	r3, r2
90029c28:	1c5a      	adds	r2, r3, #1
90029c2a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90029c2e:	4a0f      	ldr	r2, [pc, #60]	@ (90029c6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90029c30:	121b      	asrs	r3, r3, #8
90029c32:	6812      	ldr	r2, [r2, #0]
90029c34:	2bff      	cmp	r3, #255	@ 0xff
90029c36:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90029c3a:	d12d      	bne.n	90029c98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90029c3c:	0953      	lsrs	r3, r2, #5
90029c3e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90029c42:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90029c46:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90029c4a:	f02c 0c07 	bic.w	ip, ip, #7
90029c4e:	ea43 0c0c 	orr.w	ip, r3, ip
90029c52:	ea4c 0202 	orr.w	r2, ip, r2
90029c56:	f8a8 2000 	strh.w	r2, [r8]
90029c5a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029c5c:	f108 0802 	add.w	r8, r8, #2
90029c60:	f10b 3bff 	add.w	fp, fp, #4294967295
90029c64:	441c      	add	r4, r3
90029c66:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029c68:	441e      	add	r6, r3
90029c6a:	e6b9      	b.n	900299e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90029c6c:	240245b0 	.word	0x240245b0
90029c70:	2800      	cmp	r0, #0
90029c72:	d0ba      	beq.n	90029bea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90029c74:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90029c76:	442b      	add	r3, r5
90029c78:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029c7c:	07db      	lsls	r3, r3, #31
90029c7e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029c82:	bf54      	ite	pl
90029c84:	f00c 0c0f 	andpl.w	ip, ip, #15
90029c88:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029c8c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029c90:	fa5f f38c 	uxtb.w	r3, ip
90029c94:	930c      	str	r3, [sp, #48]	@ 0x30
90029c96:	e7a8      	b.n	90029bea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90029c98:	f8b8 e000 	ldrh.w	lr, [r8]
90029c9c:	fa1f fa83 	uxth.w	sl, r3
90029ca0:	f3c2 4107 	ubfx	r1, r2, #16, #8
90029ca4:	43db      	mvns	r3, r3
90029ca6:	ea4f 202e 	mov.w	r0, lr, asr #8
90029caa:	fb11 f10a 	smulbb	r1, r1, sl
90029cae:	b2db      	uxtb	r3, r3
90029cb0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90029cb4:	b2d2      	uxtb	r2, r2
90029cb6:	fa5f fc8c 	uxtb.w	ip, ip
90029cba:	fb00 1003 	mla	r0, r0, r3, r1
90029cbe:	ea4f 01ee 	mov.w	r1, lr, asr #3
90029cc2:	fb12 f20a 	smulbb	r2, r2, sl
90029cc6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90029cca:	b280      	uxth	r0, r0
90029ccc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90029cd0:	fb1c fc0a 	smulbb	ip, ip, sl
90029cd4:	fa5f fe8e 	uxtb.w	lr, lr
90029cd8:	fb0e 2203 	mla	r2, lr, r3, r2
90029cdc:	fb01 cc03 	mla	ip, r1, r3, ip
90029ce0:	1c43      	adds	r3, r0, #1
90029ce2:	b292      	uxth	r2, r2
90029ce4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90029ce8:	1c51      	adds	r1, r2, #1
90029cea:	fa1f fc8c 	uxth.w	ip, ip
90029cee:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90029cf2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90029cf6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90029cfa:	4308      	orrs	r0, r1
90029cfc:	f10c 0101 	add.w	r1, ip, #1
90029d00:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90029d04:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90029d08:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90029d0c:	ea40 000c 	orr.w	r0, r0, ip
90029d10:	f8a8 0000 	strh.w	r0, [r8]
90029d14:	e7a1      	b.n	90029c5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90029d16:	b017      	add	sp, #92	@ 0x5c
90029d18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90029d1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90029d1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90029d20:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90029d24:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90029d28:	2d00      	cmp	r5, #0
90029d2a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90029d2e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90029d32:	fb05 0e03 	mla	lr, r5, r3, r0
90029d36:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90029d3a:	f2c0 80b0 	blt.w	90029e9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90029d3e:	45a9      	cmp	r9, r5
90029d40:	f340 80ad 	ble.w	90029e9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90029d44:	2800      	cmp	r0, #0
90029d46:	f2c0 80a8 	blt.w	90029e9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90029d4a:	4580      	cmp	r8, r0
90029d4c:	f340 80a5 	ble.w	90029e9a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90029d50:	ea4f 045e 	mov.w	r4, lr, lsr #1
90029d54:	f01e 0f01 	tst.w	lr, #1
90029d58:	5d16      	ldrb	r6, [r2, r4]
90029d5a:	bf0c      	ite	eq
90029d5c:	f006 060f 	andeq.w	r6, r6, #15
90029d60:	1136      	asrne	r6, r6, #4
90029d62:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90029d66:	b2f6      	uxtb	r6, r6
90029d68:	1c44      	adds	r4, r0, #1
90029d6a:	f100 809b 	bmi.w	90029ea4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90029d6e:	45a0      	cmp	r8, r4
90029d70:	f340 8098 	ble.w	90029ea4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90029d74:	2f00      	cmp	r7, #0
90029d76:	f000 8097 	beq.w	90029ea8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90029d7a:	f10e 0a01 	add.w	sl, lr, #1
90029d7e:	ea4f 045a 	mov.w	r4, sl, lsr #1
90029d82:	f01a 0f01 	tst.w	sl, #1
90029d86:	5d14      	ldrb	r4, [r2, r4]
90029d88:	bf0c      	ite	eq
90029d8a:	f004 040f 	andeq.w	r4, r4, #15
90029d8e:	1124      	asrne	r4, r4, #4
90029d90:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90029d94:	b2e4      	uxtb	r4, r4
90029d96:	3501      	adds	r5, #1
90029d98:	f100 808a 	bmi.w	90029eb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90029d9c:	45a9      	cmp	r9, r5
90029d9e:	f340 8087 	ble.w	90029eb0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90029da2:	f1bc 0f00 	cmp.w	ip, #0
90029da6:	f000 8086 	beq.w	90029eb6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90029daa:	2800      	cmp	r0, #0
90029dac:	db7e      	blt.n	90029eac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90029dae:	4580      	cmp	r8, r0
90029db0:	dd7c      	ble.n	90029eac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90029db2:	eb03 090e 	add.w	r9, r3, lr
90029db6:	ea4f 0559 	mov.w	r5, r9, lsr #1
90029dba:	f019 0f01 	tst.w	r9, #1
90029dbe:	5d55      	ldrb	r5, [r2, r5]
90029dc0:	bf0c      	ite	eq
90029dc2:	f005 050f 	andeq.w	r5, r5, #15
90029dc6:	112d      	asrne	r5, r5, #4
90029dc8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90029dcc:	b2ed      	uxtb	r5, r5
90029dce:	3001      	adds	r0, #1
90029dd0:	d474      	bmi.n	90029ebc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90029dd2:	4580      	cmp	r8, r0
90029dd4:	dd72      	ble.n	90029ebc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90029dd6:	2f00      	cmp	r7, #0
90029dd8:	d072      	beq.n	90029ec0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90029dda:	3301      	adds	r3, #1
90029ddc:	449e      	add	lr, r3
90029dde:	ea4f 035e 	mov.w	r3, lr, lsr #1
90029de2:	f01e 0f01 	tst.w	lr, #1
90029de6:	5cd0      	ldrb	r0, [r2, r3]
90029de8:	bf0c      	ite	eq
90029dea:	f000 000f 	andeq.w	r0, r0, #15
90029dee:	1100      	asrne	r0, r0, #4
90029df0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029df4:	b2c3      	uxtb	r3, r0
90029df6:	b2ba      	uxth	r2, r7
90029df8:	fa1f fc8c 	uxth.w	ip, ip
90029dfc:	fb02 f00c 	mul.w	r0, r2, ip
90029e00:	0112      	lsls	r2, r2, #4
90029e02:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90029e06:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90029e0a:	1a12      	subs	r2, r2, r0
90029e0c:	fa1f fc8c 	uxth.w	ip, ip
90029e10:	b292      	uxth	r2, r2
90029e12:	eba7 070c 	sub.w	r7, r7, ip
90029e16:	4362      	muls	r2, r4
90029e18:	b2bf      	uxth	r7, r7
90029e1a:	fb06 2207 	mla	r2, r6, r7, r2
90029e1e:	fb0c 2505 	mla	r5, ip, r5, r2
90029e22:	fb00 5303 	mla	r3, r0, r3, r5
90029e26:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029e2a:	b3a3      	cbz	r3, 90029e96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90029e2c:	4a25      	ldr	r2, [pc, #148]	@ (90029ec4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90029e2e:	880e      	ldrh	r6, [r1, #0]
90029e30:	6815      	ldr	r5, [r2, #0]
90029e32:	b29a      	uxth	r2, r3
90029e34:	1234      	asrs	r4, r6, #8
90029e36:	43db      	mvns	r3, r3
90029e38:	f3c5 4007 	ubfx	r0, r5, #16, #8
90029e3c:	f3c5 2707 	ubfx	r7, r5, #8, #8
90029e40:	b2db      	uxtb	r3, r3
90029e42:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029e46:	fb10 f002 	smulbb	r0, r0, r2
90029e4a:	b2ed      	uxtb	r5, r5
90029e4c:	fb17 f702 	smulbb	r7, r7, r2
90029e50:	fb04 0403 	mla	r4, r4, r3, r0
90029e54:	10f0      	asrs	r0, r6, #3
90029e56:	fb15 f202 	smulbb	r2, r5, r2
90029e5a:	00f6      	lsls	r6, r6, #3
90029e5c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029e60:	b2a4      	uxth	r4, r4
90029e62:	b2f6      	uxtb	r6, r6
90029e64:	fb00 7003 	mla	r0, r0, r3, r7
90029e68:	fb06 2303 	mla	r3, r6, r3, r2
90029e6c:	b280      	uxth	r0, r0
90029e6e:	b29a      	uxth	r2, r3
90029e70:	1c63      	adds	r3, r4, #1
90029e72:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90029e76:	1c53      	adds	r3, r2, #1
90029e78:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90029e7c:	1c42      	adds	r2, r0, #1
90029e7e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90029e82:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90029e86:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90029e8a:	0940      	lsrs	r0, r0, #5
90029e8c:	4323      	orrs	r3, r4
90029e8e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029e92:	4303      	orrs	r3, r0
90029e94:	800b      	strh	r3, [r1, #0]
90029e96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90029e9a:	2600      	movs	r6, #0
90029e9c:	e764      	b.n	90029d68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90029e9e:	2400      	movs	r4, #0
90029ea0:	4626      	mov	r6, r4
90029ea2:	e778      	b.n	90029d96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029ea4:	2400      	movs	r4, #0
90029ea6:	e776      	b.n	90029d96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029ea8:	463c      	mov	r4, r7
90029eaa:	e774      	b.n	90029d96 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029eac:	2500      	movs	r5, #0
90029eae:	e78e      	b.n	90029dce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90029eb0:	2300      	movs	r3, #0
90029eb2:	461d      	mov	r5, r3
90029eb4:	e79f      	b.n	90029df6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029eb6:	4663      	mov	r3, ip
90029eb8:	4665      	mov	r5, ip
90029eba:	e79c      	b.n	90029df6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029ebc:	2300      	movs	r3, #0
90029ebe:	e79a      	b.n	90029df6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029ec0:	463b      	mov	r3, r7
90029ec2:	e798      	b.n	90029df6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029ec4:	240245b0 	.word	0x240245b0

90029ec8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90029ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029ecc:	b093      	sub	sp, #76	@ 0x4c
90029ece:	461d      	mov	r5, r3
90029ed0:	920c      	str	r2, [sp, #48]	@ 0x30
90029ed2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90029ed4:	9011      	str	r0, [sp, #68]	@ 0x44
90029ed6:	9107      	str	r1, [sp, #28]
90029ed8:	6850      	ldr	r0, [r2, #4]
90029eda:	6812      	ldr	r2, [r2, #0]
90029edc:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90029ee0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90029ee4:	fb00 1303 	mla	r3, r0, r3, r1
90029ee8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90029eec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029eee:	689b      	ldr	r3, [r3, #8]
90029ef0:	3301      	adds	r3, #1
90029ef2:	f023 0301 	bic.w	r3, r3, #1
90029ef6:	9306      	str	r3, [sp, #24]
90029ef8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029efa:	681f      	ldr	r7, [r3, #0]
90029efc:	9b07      	ldr	r3, [sp, #28]
90029efe:	2b00      	cmp	r3, #0
90029f00:	dc03      	bgt.n	90029f0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90029f02:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90029f04:	2b00      	cmp	r3, #0
90029f06:	f340 8267 	ble.w	9002a3d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90029f0a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029f0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90029f10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90029f14:	1e48      	subs	r0, r1, #1
90029f16:	f102 3cff 	add.w	ip, r2, #4294967295
90029f1a:	2d00      	cmp	r5, #0
90029f1c:	f340 80b7 	ble.w	9002a08e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90029f20:	ea5f 4e24 	movs.w	lr, r4, asr #16
90029f24:	ea4f 4326 	mov.w	r3, r6, asr #16
90029f28:	d406      	bmi.n	90029f38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90029f2a:	4586      	cmp	lr, r0
90029f2c:	da04      	bge.n	90029f38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90029f2e:	2b00      	cmp	r3, #0
90029f30:	db02      	blt.n	90029f38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90029f32:	4563      	cmp	r3, ip
90029f34:	f2c0 80ac 	blt.w	9002a090 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90029f38:	f11e 0e01 	adds.w	lr, lr, #1
90029f3c:	f100 809f 	bmi.w	9002a07e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029f40:	4571      	cmp	r1, lr
90029f42:	f2c0 809c 	blt.w	9002a07e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029f46:	3301      	adds	r3, #1
90029f48:	f100 8099 	bmi.w	9002a07e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029f4c:	429a      	cmp	r2, r3
90029f4e:	f2c0 8096 	blt.w	9002a07e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029f52:	46c8      	mov	r8, r9
90029f54:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90029f58:	9509      	str	r5, [sp, #36]	@ 0x24
90029f5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029f5c:	2b00      	cmp	r3, #0
90029f5e:	f340 80b5 	ble.w	9002a0cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90029f62:	f3c4 3303 	ubfx	r3, r4, #12, #4
90029f66:	1430      	asrs	r0, r6, #16
90029f68:	f3c6 3103 	ubfx	r1, r6, #12, #4
90029f6c:	9308      	str	r3, [sp, #32]
90029f6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029f70:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90029f74:	1423      	asrs	r3, r4, #16
90029f76:	f100 813f 	bmi.w	9002a1f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029f7a:	f10c 3bff 	add.w	fp, ip, #4294967295
90029f7e:	455b      	cmp	r3, fp
90029f80:	f280 813a 	bge.w	9002a1f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029f84:	2800      	cmp	r0, #0
90029f86:	f2c0 8137 	blt.w	9002a1f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029f8a:	f10e 3bff 	add.w	fp, lr, #4294967295
90029f8e:	4558      	cmp	r0, fp
90029f90:	f280 8132 	bge.w	9002a1f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029f94:	9a06      	ldr	r2, [sp, #24]
90029f96:	fb00 3302 	mla	r3, r0, r2, r3
90029f9a:	0858      	lsrs	r0, r3, #1
90029f9c:	07da      	lsls	r2, r3, #31
90029f9e:	9a08      	ldr	r2, [sp, #32]
90029fa0:	f817 c000 	ldrb.w	ip, [r7, r0]
90029fa4:	bf54      	ite	pl
90029fa6:	f00c 0c0f 	andpl.w	ip, ip, #15
90029faa:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029fae:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029fb2:	fa5f fc8c 	uxtb.w	ip, ip
90029fb6:	2a00      	cmp	r2, #0
90029fb8:	f000 80cc 	beq.w	9002a154 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90029fbc:	1c58      	adds	r0, r3, #1
90029fbe:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90029fc2:	07c0      	lsls	r0, r0, #31
90029fc4:	f817 e00e 	ldrb.w	lr, [r7, lr]
90029fc8:	bf54      	ite	pl
90029fca:	f00e 0e0f 	andpl.w	lr, lr, #15
90029fce:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90029fd2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90029fd6:	fa5f fe8e 	uxtb.w	lr, lr
90029fda:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
90029fde:	b1b9      	cbz	r1, 9002a010 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90029fe0:	4453      	add	r3, sl
90029fe2:	0858      	lsrs	r0, r3, #1
90029fe4:	07da      	lsls	r2, r3, #31
90029fe6:	5c38      	ldrb	r0, [r7, r0]
90029fe8:	bf54      	ite	pl
90029fea:	f000 000f 	andpl.w	r0, r0, #15
90029fee:	1100      	asrmi	r0, r0, #4
90029ff0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029ff4:	b2c0      	uxtb	r0, r0
90029ff6:	900a      	str	r0, [sp, #40]	@ 0x28
90029ff8:	1c58      	adds	r0, r3, #1
90029ffa:	0843      	lsrs	r3, r0, #1
90029ffc:	07c2      	lsls	r2, r0, #31
90029ffe:	5cfb      	ldrb	r3, [r7, r3]
9002a000:	bf54      	ite	pl
9002a002:	f003 030f 	andpl.w	r3, r3, #15
9002a006:	111b      	asrmi	r3, r3, #4
9002a008:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002a00c:	b2db      	uxtb	r3, r3
9002a00e:	930e      	str	r3, [sp, #56]	@ 0x38
9002a010:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9002a014:	b289      	uxth	r1, r1
9002a016:	fb02 f301 	mul.w	r3, r2, r1
9002a01a:	0112      	lsls	r2, r2, #4
9002a01c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
9002a020:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
9002a024:	1ad2      	subs	r2, r2, r3
9002a026:	b289      	uxth	r1, r1
9002a028:	b292      	uxth	r2, r2
9002a02a:	1a40      	subs	r0, r0, r1
9002a02c:	fa1f fe80 	uxth.w	lr, r0
9002a030:	980d      	ldr	r0, [sp, #52]	@ 0x34
9002a032:	4342      	muls	r2, r0
9002a034:	fb0c 2c0e 	mla	ip, ip, lr, r2
9002a038:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002a03a:	fb01 c102 	mla	r1, r1, r2, ip
9002a03e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002a040:	fb03 1302 	mla	r3, r3, r2, r1
9002a044:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002a048:	2bff      	cmp	r3, #255	@ 0xff
9002a04a:	f040 8094 	bne.w	9002a176 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
9002a04e:	4bbf      	ldr	r3, [pc, #764]	@ (9002a34c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002a050:	681a      	ldr	r2, [r3, #0]
9002a052:	4bbf      	ldr	r3, [pc, #764]	@ (9002a350 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002a054:	0951      	lsrs	r1, r2, #5
9002a056:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002a05a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002a05e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002a062:	430b      	orrs	r3, r1
9002a064:	4313      	orrs	r3, r2
9002a066:	f8a8 3000 	strh.w	r3, [r8]
9002a06a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002a06c:	f108 0802 	add.w	r8, r8, #2
9002a070:	441c      	add	r4, r3
9002a072:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002a074:	441e      	add	r6, r3
9002a076:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a078:	3b01      	subs	r3, #1
9002a07a:	9309      	str	r3, [sp, #36]	@ 0x24
9002a07c:	e76d      	b.n	90029f5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002a07e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002a080:	3d01      	subs	r5, #1
9002a082:	f109 0902 	add.w	r9, r9, #2
9002a086:	441c      	add	r4, r3
9002a088:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002a08a:	441e      	add	r6, r3
9002a08c:	e745      	b.n	90029f1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002a08e:	d021      	beq.n	9002a0d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9002a090:	1e6b      	subs	r3, r5, #1
9002a092:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002a094:	fb00 4003 	mla	r0, r0, r3, r4
9002a098:	1400      	asrs	r0, r0, #16
9002a09a:	f53f af5a 	bmi.w	90029f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a09e:	3901      	subs	r1, #1
9002a0a0:	4288      	cmp	r0, r1
9002a0a2:	f6bf af56 	bge.w	90029f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a0a6:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002a0a8:	fb01 6303 	mla	r3, r1, r3, r6
9002a0ac:	141b      	asrs	r3, r3, #16
9002a0ae:	f53f af50 	bmi.w	90029f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a0b2:	3a01      	subs	r2, #1
9002a0b4:	4293      	cmp	r3, r2
9002a0b6:	f6bf af4c 	bge.w	90029f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a0ba:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9002a0be:	46a8      	mov	r8, r5
9002a0c0:	46ce      	mov	lr, r9
9002a0c2:	9308      	str	r3, [sp, #32]
9002a0c4:	f1b8 0f00 	cmp.w	r8, #0
9002a0c8:	f300 80b6 	bgt.w	9002a238 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002a0cc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002a0d0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002a0d4:	9b07      	ldr	r3, [sp, #28]
9002a0d6:	2b00      	cmp	r3, #0
9002a0d8:	f340 817e 	ble.w	9002a3d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002a0dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002a0e0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002a0e2:	ee30 0a04 	vadd.f32	s0, s0, s8
9002a0e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002a0ea:	eef0 6a62 	vmov.f32	s13, s5
9002a0ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a0f2:	ee31 1a05 	vadd.f32	s2, s2, s10
9002a0f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002a0fa:	ee16 4a90 	vmov	r4, s13
9002a0fe:	eef0 6a43 	vmov.f32	s13, s6
9002a102:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002a106:	ee16 6a90 	vmov	r6, s13
9002a10a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002a10e:	ee61 7a27 	vmul.f32	s15, s2, s15
9002a112:	ee77 2a62 	vsub.f32	s5, s14, s5
9002a116:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002a11a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002a11e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002a122:	ee12 2a90 	vmov	r2, s5
9002a126:	eef0 2a47 	vmov.f32	s5, s14
9002a12a:	fb92 f3f3 	sdiv	r3, r2, r3
9002a12e:	ee13 2a10 	vmov	r2, s6
9002a132:	931f      	str	r3, [sp, #124]	@ 0x7c
9002a134:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002a136:	eeb0 3a67 	vmov.f32	s6, s15
9002a13a:	fb92 f3f3 	sdiv	r3, r2, r3
9002a13e:	9320      	str	r3, [sp, #128]	@ 0x80
9002a140:	9b07      	ldr	r3, [sp, #28]
9002a142:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002a144:	3b01      	subs	r3, #1
9002a146:	9307      	str	r3, [sp, #28]
9002a148:	bf08      	it	eq
9002a14a:	4615      	moveq	r5, r2
9002a14c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002a14e:	bf18      	it	ne
9002a150:	461d      	movne	r5, r3
9002a152:	e6d3      	b.n	90029efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002a154:	2900      	cmp	r1, #0
9002a156:	f43f af5b 	beq.w	9002a010 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002a15a:	eb0a 0003 	add.w	r0, sl, r3
9002a15e:	0843      	lsrs	r3, r0, #1
9002a160:	07c0      	lsls	r0, r0, #31
9002a162:	5cfb      	ldrb	r3, [r7, r3]
9002a164:	bf54      	ite	pl
9002a166:	f003 030f 	andpl.w	r3, r3, #15
9002a16a:	111b      	asrmi	r3, r3, #4
9002a16c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002a170:	b2db      	uxtb	r3, r3
9002a172:	930a      	str	r3, [sp, #40]	@ 0x28
9002a174:	e74c      	b.n	9002a010 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002a176:	2b00      	cmp	r3, #0
9002a178:	f43f af77 	beq.w	9002a06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a17c:	4a73      	ldr	r2, [pc, #460]	@ (9002a34c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002a17e:	fa1f fe83 	uxth.w	lr, r3
9002a182:	f8b8 c000 	ldrh.w	ip, [r8]
9002a186:	43db      	mvns	r3, r3
9002a188:	6810      	ldr	r0, [r2, #0]
9002a18a:	ea4f 212c 	mov.w	r1, ip, asr #8
9002a18e:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002a192:	b2db      	uxtb	r3, r3
9002a194:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002a198:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002a19c:	fb12 f20e 	smulbb	r2, r2, lr
9002a1a0:	b2c0      	uxtb	r0, r0
9002a1a2:	fb1b fb0e 	smulbb	fp, fp, lr
9002a1a6:	fb01 2103 	mla	r1, r1, r3, r2
9002a1aa:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002a1ae:	fb10 fe0e 	smulbb	lr, r0, lr
9002a1b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002a1b6:	b289      	uxth	r1, r1
9002a1b8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002a1bc:	fa5f fc8c 	uxtb.w	ip, ip
9002a1c0:	fb02 b203 	mla	r2, r2, r3, fp
9002a1c4:	1c48      	adds	r0, r1, #1
9002a1c6:	fb0c e303 	mla	r3, ip, r3, lr
9002a1ca:	b292      	uxth	r2, r2
9002a1cc:	b29b      	uxth	r3, r3
9002a1ce:	eb00 2111 	add.w	r1, r0, r1, lsr #8
9002a1d2:	f102 0b01 	add.w	fp, r2, #1
9002a1d6:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
9002a1da:	1c59      	adds	r1, r3, #1
9002a1dc:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002a1e0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002a1e4:	0952      	lsrs	r2, r2, #5
9002a1e6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002a1ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002a1ee:	4301      	orrs	r1, r0
9002a1f0:	4311      	orrs	r1, r2
9002a1f2:	f8a8 1000 	strh.w	r1, [r8]
9002a1f6:	e738      	b.n	9002a06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a1f8:	f113 0b01 	adds.w	fp, r3, #1
9002a1fc:	f53f af35 	bmi.w	9002a06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a200:	45dc      	cmp	ip, fp
9002a202:	f6ff af32 	blt.w	9002a06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a206:	f110 0b01 	adds.w	fp, r0, #1
9002a20a:	f53f af2e 	bmi.w	9002a06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a20e:	45de      	cmp	lr, fp
9002a210:	f6ff af2b 	blt.w	9002a06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a214:	9302      	str	r3, [sp, #8]
9002a216:	fa0f f38e 	sxth.w	r3, lr
9002a21a:	9a08      	ldr	r2, [sp, #32]
9002a21c:	9301      	str	r3, [sp, #4]
9002a21e:	fa0f f38c 	sxth.w	r3, ip
9002a222:	9105      	str	r1, [sp, #20]
9002a224:	4641      	mov	r1, r8
9002a226:	9300      	str	r3, [sp, #0]
9002a228:	4653      	mov	r3, sl
9002a22a:	e9cd 0203 	strd	r0, r2, [sp, #12]
9002a22e:	463a      	mov	r2, r7
9002a230:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002a232:	f7ff fd73 	bl	90029d1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002a236:	e718      	b.n	9002a06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a238:	1422      	asrs	r2, r4, #16
9002a23a:	9906      	ldr	r1, [sp, #24]
9002a23c:	1433      	asrs	r3, r6, #16
9002a23e:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002a242:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002a246:	fb01 2303 	mla	r3, r1, r3, r2
9002a24a:	085a      	lsrs	r2, r3, #1
9002a24c:	07d9      	lsls	r1, r3, #31
9002a24e:	5cba      	ldrb	r2, [r7, r2]
9002a250:	bf54      	ite	pl
9002a252:	f002 020f 	andpl.w	r2, r2, #15
9002a256:	1112      	asrmi	r2, r2, #4
9002a258:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002a25c:	b2d2      	uxtb	r2, r2
9002a25e:	2800      	cmp	r0, #0
9002a260:	d063      	beq.n	9002a32a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
9002a262:	f103 0a01 	add.w	sl, r3, #1
9002a266:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002a26a:	f01a 0f01 	tst.w	sl, #1
9002a26e:	5c79      	ldrb	r1, [r7, r1]
9002a270:	bf0c      	ite	eq
9002a272:	f001 010f 	andeq.w	r1, r1, #15
9002a276:	1109      	asrne	r1, r1, #4
9002a278:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a27c:	b2c9      	uxtb	r1, r1
9002a27e:	910f      	str	r1, [sp, #60]	@ 0x3c
9002a280:	f1bc 0f00 	cmp.w	ip, #0
9002a284:	d01a      	beq.n	9002a2bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002a286:	9908      	ldr	r1, [sp, #32]
9002a288:	440b      	add	r3, r1
9002a28a:	0859      	lsrs	r1, r3, #1
9002a28c:	f013 0f01 	tst.w	r3, #1
9002a290:	f103 0301 	add.w	r3, r3, #1
9002a294:	5c79      	ldrb	r1, [r7, r1]
9002a296:	bf0c      	ite	eq
9002a298:	f001 010f 	andeq.w	r1, r1, #15
9002a29c:	1109      	asrne	r1, r1, #4
9002a29e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a2a2:	b2c9      	uxtb	r1, r1
9002a2a4:	910b      	str	r1, [sp, #44]	@ 0x2c
9002a2a6:	0859      	lsrs	r1, r3, #1
9002a2a8:	07db      	lsls	r3, r3, #31
9002a2aa:	5c79      	ldrb	r1, [r7, r1]
9002a2ac:	bf54      	ite	pl
9002a2ae:	f001 010f 	andpl.w	r1, r1, #15
9002a2b2:	1109      	asrmi	r1, r1, #4
9002a2b4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a2b8:	b2c9      	uxtb	r1, r1
9002a2ba:	9110      	str	r1, [sp, #64]	@ 0x40
9002a2bc:	b280      	uxth	r0, r0
9002a2be:	fa1f fc8c 	uxth.w	ip, ip
9002a2c2:	fb00 f30c 	mul.w	r3, r0, ip
9002a2c6:	0100      	lsls	r0, r0, #4
9002a2c8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
9002a2cc:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
9002a2d0:	1ac0      	subs	r0, r0, r3
9002a2d2:	fa1f fc8c 	uxth.w	ip, ip
9002a2d6:	b280      	uxth	r0, r0
9002a2d8:	eba1 010c 	sub.w	r1, r1, ip
9002a2dc:	fa1f fa81 	uxth.w	sl, r1
9002a2e0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9002a2e2:	4348      	muls	r0, r1
9002a2e4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9002a2e6:	fb02 020a 	mla	r2, r2, sl, r0
9002a2ea:	fb0c 2c01 	mla	ip, ip, r1, r2
9002a2ee:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9002a2f0:	fb03 c302 	mla	r3, r3, r2, ip
9002a2f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002a2f8:	2bff      	cmp	r3, #255	@ 0xff
9002a2fa:	d12b      	bne.n	9002a354 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
9002a2fc:	4b13      	ldr	r3, [pc, #76]	@ (9002a34c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002a2fe:	681a      	ldr	r2, [r3, #0]
9002a300:	4b13      	ldr	r3, [pc, #76]	@ (9002a350 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002a302:	0951      	lsrs	r1, r2, #5
9002a304:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002a308:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002a30c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002a310:	430b      	orrs	r3, r1
9002a312:	4313      	orrs	r3, r2
9002a314:	f8ae 3000 	strh.w	r3, [lr]
9002a318:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002a31a:	f10e 0e02 	add.w	lr, lr, #2
9002a31e:	f108 38ff 	add.w	r8, r8, #4294967295
9002a322:	441c      	add	r4, r3
9002a324:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002a326:	441e      	add	r6, r3
9002a328:	e6cc      	b.n	9002a0c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9002a32a:	f1bc 0f00 	cmp.w	ip, #0
9002a32e:	d0c5      	beq.n	9002a2bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002a330:	9908      	ldr	r1, [sp, #32]
9002a332:	440b      	add	r3, r1
9002a334:	0859      	lsrs	r1, r3, #1
9002a336:	07db      	lsls	r3, r3, #31
9002a338:	5c79      	ldrb	r1, [r7, r1]
9002a33a:	bf54      	ite	pl
9002a33c:	f001 010f 	andpl.w	r1, r1, #15
9002a340:	1109      	asrmi	r1, r1, #4
9002a342:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a346:	b2c9      	uxtb	r1, r1
9002a348:	910b      	str	r1, [sp, #44]	@ 0x2c
9002a34a:	e7b7      	b.n	9002a2bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002a34c:	240245b0 	.word	0x240245b0
9002a350:	fffff800 	.word	0xfffff800
9002a354:	2b00      	cmp	r3, #0
9002a356:	d0df      	beq.n	9002a318 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002a358:	4a21      	ldr	r2, [pc, #132]	@ (9002a3e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
9002a35a:	fa1f fa83 	uxth.w	sl, r3
9002a35e:	f8be c000 	ldrh.w	ip, [lr]
9002a362:	43db      	mvns	r3, r3
9002a364:	6810      	ldr	r0, [r2, #0]
9002a366:	ea4f 212c 	mov.w	r1, ip, asr #8
9002a36a:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002a36e:	b2db      	uxtb	r3, r3
9002a370:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002a374:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002a378:	fb12 f20a 	smulbb	r2, r2, sl
9002a37c:	b2c0      	uxtb	r0, r0
9002a37e:	fb1b fb0a 	smulbb	fp, fp, sl
9002a382:	fb01 2103 	mla	r1, r1, r3, r2
9002a386:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002a38a:	fb10 f00a 	smulbb	r0, r0, sl
9002a38e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002a392:	b289      	uxth	r1, r1
9002a394:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002a398:	fa5f fc8c 	uxtb.w	ip, ip
9002a39c:	fb02 b203 	mla	r2, r2, r3, fp
9002a3a0:	fb0c 0003 	mla	r0, ip, r3, r0
9002a3a4:	1c4b      	adds	r3, r1, #1
9002a3a6:	b292      	uxth	r2, r2
9002a3a8:	b280      	uxth	r0, r0
9002a3aa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002a3ae:	f100 0b01 	add.w	fp, r0, #1
9002a3b2:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002a3b6:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002a3ba:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9002a3be:	ea4b 0101 	orr.w	r1, fp, r1
9002a3c2:	f102 0b01 	add.w	fp, r2, #1
9002a3c6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002a3ca:	0952      	lsrs	r2, r2, #5
9002a3cc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002a3d0:	4311      	orrs	r1, r2
9002a3d2:	f8ae 1000 	strh.w	r1, [lr]
9002a3d6:	e79f      	b.n	9002a318 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002a3d8:	b013      	add	sp, #76	@ 0x4c
9002a3da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a3de:	bf00      	nop
9002a3e0:	240245b0 	.word	0x240245b0

9002a3e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
9002a3e4:	b570      	push	{r4, r5, r6, lr}
9002a3e6:	1208      	asrs	r0, r1, #8
9002a3e8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
9002a3ec:	b29e      	uxth	r6, r3
9002a3ee:	1213      	asrs	r3, r2, #8
9002a3f0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002a3f4:	10cc      	asrs	r4, r1, #3
9002a3f6:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002a3fa:	00c9      	lsls	r1, r1, #3
9002a3fc:	fb10 f006 	smulbb	r0, r0, r6
9002a400:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9002a404:	fb13 f305 	smulbb	r3, r3, r5
9002a408:	fb14 f406 	smulbb	r4, r4, r6
9002a40c:	4418      	add	r0, r3
9002a40e:	10d3      	asrs	r3, r2, #3
9002a410:	00d2      	lsls	r2, r2, #3
9002a412:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002a416:	b280      	uxth	r0, r0
9002a418:	b2d2      	uxtb	r2, r2
9002a41a:	fb13 f305 	smulbb	r3, r3, r5
9002a41e:	fb12 f205 	smulbb	r2, r2, r5
9002a422:	441c      	add	r4, r3
9002a424:	b2cb      	uxtb	r3, r1
9002a426:	fb13 f306 	smulbb	r3, r3, r6
9002a42a:	b2a4      	uxth	r4, r4
9002a42c:	4413      	add	r3, r2
9002a42e:	1c42      	adds	r2, r0, #1
9002a430:	b29b      	uxth	r3, r3
9002a432:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002a436:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
9002a43a:	1c58      	adds	r0, r3, #1
9002a43c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002a440:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002a444:	4310      	orrs	r0, r2
9002a446:	1c62      	adds	r2, r4, #1
9002a448:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002a44c:	0964      	lsrs	r4, r4, #5
9002a44e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002a452:	4320      	orrs	r0, r4
9002a454:	bd70      	pop	{r4, r5, r6, pc}
	...

9002a458 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9002a458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a45c:	b08f      	sub	sp, #60	@ 0x3c
9002a45e:	461c      	mov	r4, r3
9002a460:	460d      	mov	r5, r1
9002a462:	4616      	mov	r6, r2
9002a464:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
9002a468:	9004      	str	r0, [sp, #16]
9002a46a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002a46c:	2f00      	cmp	r7, #0
9002a46e:	f000 80f6 	beq.w	9002a65e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9002a472:	6820      	ldr	r0, [r4, #0]
9002a474:	aa0a      	add	r2, sp, #40	@ 0x28
9002a476:	6861      	ldr	r1, [r4, #4]
9002a478:	f04f 0802 	mov.w	r8, #2
9002a47c:	3604      	adds	r6, #4
9002a47e:	c203      	stmia	r2!, {r0, r1}
9002a480:	6818      	ldr	r0, [r3, #0]
9002a482:	aa0c      	add	r2, sp, #48	@ 0x30
9002a484:	6859      	ldr	r1, [r3, #4]
9002a486:	c203      	stmia	r2!, {r0, r1}
9002a488:	a80a      	add	r0, sp, #40	@ 0x28
9002a48a:	f7ee ffc7 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002a48e:	4621      	mov	r1, r4
9002a490:	a80c      	add	r0, sp, #48	@ 0x30
9002a492:	f7ee ffeb 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002a496:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002a49a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002a49e:	f002 0301 	and.w	r3, r2, #1
9002a4a2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9002a4a6:	9306      	str	r3, [sp, #24]
9002a4a8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002a4ac:	f003 0101 	and.w	r1, r3, #1
9002a4b0:	9105      	str	r1, [sp, #20]
9002a4b2:	9805      	ldr	r0, [sp, #20]
9002a4b4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9002a4b8:	4403      	add	r3, r0
9002a4ba:	fb01 2303 	mla	r3, r1, r3, r2
9002a4be:	fb93 f3f8 	sdiv	r3, r3, r8
9002a4c2:	441d      	add	r5, r3
9002a4c4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9002a4c8:	441a      	add	r2, r3
9002a4ca:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002a4ce:	4419      	add	r1, r3
9002a4d0:	4b64      	ldr	r3, [pc, #400]	@ (9002a664 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002a4d2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002a4d6:	6818      	ldr	r0, [r3, #0]
9002a4d8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
9002a4dc:	6803      	ldr	r3, [r0, #0]
9002a4de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002a4e0:	4798      	blx	r3
9002a4e2:	4a61      	ldr	r2, [pc, #388]	@ (9002a668 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
9002a4e4:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002a4e8:	2fff      	cmp	r7, #255	@ 0xff
9002a4ea:	8813      	ldrh	r3, [r2, #0]
9002a4ec:	4611      	mov	r1, r2
9002a4ee:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
9002a4f2:	fb03 fb0b 	mul.w	fp, r3, fp
9002a4f6:	fb03 a404 	mla	r4, r3, r4, sl
9002a4fa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002a4fe:	d06b      	beq.n	9002a5d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
9002a500:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
9002a504:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
9002a508:	9303      	str	r3, [sp, #12]
9002a50a:	eb04 034b 	add.w	r3, r4, fp, lsl #1
9002a50e:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002a512:	9b07      	ldr	r3, [sp, #28]
9002a514:	42a3      	cmp	r3, r4
9002a516:	f240 809d 	bls.w	9002a654 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002a51a:	9b06      	ldr	r3, [sp, #24]
9002a51c:	2b00      	cmp	r3, #0
9002a51e:	d039      	beq.n	9002a594 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
9002a520:	782b      	ldrb	r3, [r5, #0]
9002a522:	f105 0801 	add.w	r8, r5, #1
9002a526:	f109 3bff 	add.w	fp, r9, #4294967295
9002a52a:	8822      	ldrh	r2, [r4, #0]
9002a52c:	f003 030f 	and.w	r3, r3, #15
9002a530:	9804      	ldr	r0, [sp, #16]
9002a532:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002a536:	9b03      	ldr	r3, [sp, #12]
9002a538:	9300      	str	r3, [sp, #0]
9002a53a:	463b      	mov	r3, r7
9002a53c:	f7ff ff52 	bl	9002a3e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002a540:	f824 0b02 	strh.w	r0, [r4], #2
9002a544:	f1bb 0f01 	cmp.w	fp, #1
9002a548:	46a2      	mov	sl, r4
9002a54a:	f104 0404 	add.w	r4, r4, #4
9002a54e:	dd24      	ble.n	9002a59a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
9002a550:	f898 3000 	ldrb.w	r3, [r8]
9002a554:	f1ab 0b02 	sub.w	fp, fp, #2
9002a558:	f834 2c04 	ldrh.w	r2, [r4, #-4]
9002a55c:	091b      	lsrs	r3, r3, #4
9002a55e:	9804      	ldr	r0, [sp, #16]
9002a560:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002a564:	9b03      	ldr	r3, [sp, #12]
9002a566:	9300      	str	r3, [sp, #0]
9002a568:	463b      	mov	r3, r7
9002a56a:	f7ff ff3b 	bl	9002a3e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002a56e:	f824 0c04 	strh.w	r0, [r4, #-4]
9002a572:	f818 3b01 	ldrb.w	r3, [r8], #1
9002a576:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002a57a:	f003 030f 	and.w	r3, r3, #15
9002a57e:	9804      	ldr	r0, [sp, #16]
9002a580:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002a584:	9b03      	ldr	r3, [sp, #12]
9002a586:	9300      	str	r3, [sp, #0]
9002a588:	463b      	mov	r3, r7
9002a58a:	f7ff ff2b 	bl	9002a3e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002a58e:	f824 0c02 	strh.w	r0, [r4, #-2]
9002a592:	e7d7      	b.n	9002a544 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002a594:	46a8      	mov	r8, r5
9002a596:	46cb      	mov	fp, r9
9002a598:	e7d4      	b.n	9002a544 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002a59a:	d10e      	bne.n	9002a5ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
9002a59c:	f898 3000 	ldrb.w	r3, [r8]
9002a5a0:	f8ba 2000 	ldrh.w	r2, [sl]
9002a5a4:	091b      	lsrs	r3, r3, #4
9002a5a6:	9804      	ldr	r0, [sp, #16]
9002a5a8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002a5ac:	9b03      	ldr	r3, [sp, #12]
9002a5ae:	9300      	str	r3, [sp, #0]
9002a5b0:	463b      	mov	r3, r7
9002a5b2:	f7ff ff17 	bl	9002a3e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002a5b6:	f82a 0b02 	strh.w	r0, [sl], #2
9002a5ba:	9b08      	ldr	r3, [sp, #32]
9002a5bc:	9a05      	ldr	r2, [sp, #20]
9002a5be:	881c      	ldrh	r4, [r3, #0]
9002a5c0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002a5c4:	eba4 0409 	sub.w	r4, r4, r9
9002a5c8:	4413      	add	r3, r2
9002a5ca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002a5cc:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
9002a5d0:	fb93 f3f2 	sdiv	r3, r3, r2
9002a5d4:	441d      	add	r5, r3
9002a5d6:	e79c      	b.n	9002a512 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
9002a5d8:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
9002a5dc:	45a3      	cmp	fp, r4
9002a5de:	d939      	bls.n	9002a654 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002a5e0:	9b06      	ldr	r3, [sp, #24]
9002a5e2:	b1fb      	cbz	r3, 9002a624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
9002a5e4:	782b      	ldrb	r3, [r5, #0]
9002a5e6:	1c6a      	adds	r2, r5, #1
9002a5e8:	f109 30ff 	add.w	r0, r9, #4294967295
9002a5ec:	3402      	adds	r4, #2
9002a5ee:	f003 030f 	and.w	r3, r3, #15
9002a5f2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002a5f6:	f824 3c02 	strh.w	r3, [r4, #-2]
9002a5fa:	2801      	cmp	r0, #1
9002a5fc:	4623      	mov	r3, r4
9002a5fe:	f104 0404 	add.w	r4, r4, #4
9002a602:	dd12      	ble.n	9002a62a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
9002a604:	7813      	ldrb	r3, [r2, #0]
9002a606:	3802      	subs	r0, #2
9002a608:	091b      	lsrs	r3, r3, #4
9002a60a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002a60e:	f824 3c04 	strh.w	r3, [r4, #-4]
9002a612:	f812 3b01 	ldrb.w	r3, [r2], #1
9002a616:	f003 030f 	and.w	r3, r3, #15
9002a61a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002a61e:	f824 3c02 	strh.w	r3, [r4, #-2]
9002a622:	e7ea      	b.n	9002a5fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002a624:	462a      	mov	r2, r5
9002a626:	4648      	mov	r0, r9
9002a628:	e7e7      	b.n	9002a5fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002a62a:	d106      	bne.n	9002a63a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
9002a62c:	7812      	ldrb	r2, [r2, #0]
9002a62e:	3302      	adds	r3, #2
9002a630:	0912      	lsrs	r2, r2, #4
9002a632:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002a636:	f823 2c02 	strh.w	r2, [r3, #-2]
9002a63a:	880c      	ldrh	r4, [r1, #0]
9002a63c:	9a05      	ldr	r2, [sp, #20]
9002a63e:	eba4 0409 	sub.w	r4, r4, r9
9002a642:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002a646:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002a64a:	4413      	add	r3, r2
9002a64c:	fb93 f3f8 	sdiv	r3, r3, r8
9002a650:	441d      	add	r5, r3
9002a652:	e7c3      	b.n	9002a5dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
9002a654:	4b03      	ldr	r3, [pc, #12]	@ (9002a664 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002a656:	6818      	ldr	r0, [r3, #0]
9002a658:	6803      	ldr	r3, [r0, #0]
9002a65a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002a65c:	4798      	blx	r3
9002a65e:	b00f      	add	sp, #60	@ 0x3c
9002a660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a664:	240245a0 	.word	0x240245a0
9002a668:	24024598 	.word	0x24024598

9002a66c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
9002a66c:	b5f0      	push	{r4, r5, r6, r7, lr}
9002a66e:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002a672:	0a0f      	lsrs	r7, r1, #8
9002a674:	2dff      	cmp	r5, #255	@ 0xff
9002a676:	d10c      	bne.n	9002a692 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
9002a678:	2bff      	cmp	r3, #255	@ 0xff
9002a67a:	d10a      	bne.n	9002a692 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
9002a67c:	0948      	lsrs	r0, r1, #5
9002a67e:	4b25      	ldr	r3, [pc, #148]	@ (9002a714 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
9002a680:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002a684:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002a688:	403b      	ands	r3, r7
9002a68a:	4318      	orrs	r0, r3
9002a68c:	4308      	orrs	r0, r1
9002a68e:	b280      	uxth	r0, r0
9002a690:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002a692:	fb15 f503 	smulbb	r5, r5, r3
9002a696:	1214      	asrs	r4, r2, #8
9002a698:	10d6      	asrs	r6, r2, #3
9002a69a:	b2ab      	uxth	r3, r5
9002a69c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002a6a0:	00d0      	lsls	r0, r2, #3
9002a6a2:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002a6a6:	1c5d      	adds	r5, r3, #1
9002a6a8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002a6ac:	b2c0      	uxtb	r0, r0
9002a6ae:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9002a6b2:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002a6b6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9002a6ba:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002a6be:	fa1f fc85 	uxth.w	ip, r5
9002a6c2:	43ed      	mvns	r5, r5
9002a6c4:	fb12 f20c 	smulbb	r2, r2, ip
9002a6c8:	b2eb      	uxtb	r3, r5
9002a6ca:	b2fd      	uxtb	r5, r7
9002a6cc:	fb04 2403 	mla	r4, r4, r3, r2
9002a6d0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
9002a6d4:	fb15 f50c 	smulbb	r5, r5, ip
9002a6d8:	b2c8      	uxtb	r0, r1
9002a6da:	b2a4      	uxth	r4, r4
9002a6dc:	fb10 f00c 	smulbb	r0, r0, ip
9002a6e0:	fb06 5503 	mla	r5, r6, r3, r5
9002a6e4:	fb02 0003 	mla	r0, r2, r3, r0
9002a6e8:	b2ad      	uxth	r5, r5
9002a6ea:	b283      	uxth	r3, r0
9002a6ec:	1c60      	adds	r0, r4, #1
9002a6ee:	eb00 2414 	add.w	r4, r0, r4, lsr #8
9002a6f2:	1c58      	adds	r0, r3, #1
9002a6f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002a6f8:	1c6b      	adds	r3, r5, #1
9002a6fa:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002a6fe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002a702:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002a706:	096d      	lsrs	r5, r5, #5
9002a708:	4320      	orrs	r0, r4
9002a70a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002a70e:	4328      	orrs	r0, r5
9002a710:	e7be      	b.n	9002a690 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
9002a712:	bf00      	nop
9002a714:	00fff800 	.word	0x00fff800

9002a718 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9002a718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a71c:	461c      	mov	r4, r3
9002a71e:	b08d      	sub	sp, #52	@ 0x34
9002a720:	460d      	mov	r5, r1
9002a722:	4616      	mov	r6, r2
9002a724:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002a726:	4680      	mov	r8, r0
9002a728:	6861      	ldr	r1, [r4, #4]
9002a72a:	aa08      	add	r2, sp, #32
9002a72c:	6820      	ldr	r0, [r4, #0]
9002a72e:	f04f 0a02 	mov.w	sl, #2
9002a732:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
9002a736:	3604      	adds	r6, #4
9002a738:	c203      	stmia	r2!, {r0, r1}
9002a73a:	6818      	ldr	r0, [r3, #0]
9002a73c:	aa0a      	add	r2, sp, #40	@ 0x28
9002a73e:	6859      	ldr	r1, [r3, #4]
9002a740:	c203      	stmia	r2!, {r0, r1}
9002a742:	a808      	add	r0, sp, #32
9002a744:	f7ee fe6a 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002a748:	4621      	mov	r1, r4
9002a74a:	a80a      	add	r0, sp, #40	@ 0x28
9002a74c:	f7ee fe8e 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002a750:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9002a754:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
9002a758:	f002 0301 	and.w	r3, r2, #1
9002a75c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
9002a760:	9303      	str	r3, [sp, #12]
9002a762:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
9002a766:	f003 0101 	and.w	r1, r3, #1
9002a76a:	9102      	str	r1, [sp, #8]
9002a76c:	9802      	ldr	r0, [sp, #8]
9002a76e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
9002a772:	4403      	add	r3, r0
9002a774:	fb01 2303 	mla	r3, r1, r3, r2
9002a778:	fb93 f3fa 	sdiv	r3, r3, sl
9002a77c:	441d      	add	r5, r3
9002a77e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9002a782:	441a      	add	r2, r3
9002a784:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9002a788:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9002a78c:	4419      	add	r1, r3
9002a78e:	4a3e      	ldr	r2, [pc, #248]	@ (9002a888 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
9002a790:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
9002a794:	6810      	ldr	r0, [r2, #0]
9002a796:	9205      	str	r2, [sp, #20]
9002a798:	6803      	ldr	r3, [r0, #0]
9002a79a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002a79c:	4798      	blx	r3
9002a79e:	4b3b      	ldr	r3, [pc, #236]	@ (9002a88c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
9002a7a0:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
9002a7a4:	8819      	ldrh	r1, [r3, #0]
9002a7a6:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
9002a7aa:	434f      	muls	r7, r1
9002a7ac:	fb01 c404 	mla	r4, r1, r4, ip
9002a7b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002a7b4:	eb04 0247 	add.w	r2, r4, r7, lsl #1
9002a7b8:	e9cd 3a06 	strd	r3, sl, [sp, #24]
9002a7bc:	9204      	str	r2, [sp, #16]
9002a7be:	9b04      	ldr	r3, [sp, #16]
9002a7c0:	429c      	cmp	r4, r3
9002a7c2:	d258      	bcs.n	9002a876 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
9002a7c4:	9b03      	ldr	r3, [sp, #12]
9002a7c6:	2b00      	cmp	r3, #0
9002a7c8:	d034      	beq.n	9002a834 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
9002a7ca:	782b      	ldrb	r3, [r5, #0]
9002a7cc:	1c6f      	adds	r7, r5, #1
9002a7ce:	f003 030f 	and.w	r3, r3, #15
9002a7d2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002a7d6:	0e0b      	lsrs	r3, r1, #24
9002a7d8:	d006      	beq.n	9002a7e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
9002a7da:	8822      	ldrh	r2, [r4, #0]
9002a7dc:	4640      	mov	r0, r8
9002a7de:	9300      	str	r3, [sp, #0]
9002a7e0:	464b      	mov	r3, r9
9002a7e2:	f7ff ff43 	bl	9002a66c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002a7e6:	8020      	strh	r0, [r4, #0]
9002a7e8:	3402      	adds	r4, #2
9002a7ea:	f10b 3aff 	add.w	sl, fp, #4294967295
9002a7ee:	f1ba 0f01 	cmp.w	sl, #1
9002a7f2:	dd22      	ble.n	9002a83a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9002a7f4:	783b      	ldrb	r3, [r7, #0]
9002a7f6:	091b      	lsrs	r3, r3, #4
9002a7f8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002a7fc:	0e0b      	lsrs	r3, r1, #24
9002a7fe:	d006      	beq.n	9002a80e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
9002a800:	8822      	ldrh	r2, [r4, #0]
9002a802:	4640      	mov	r0, r8
9002a804:	9300      	str	r3, [sp, #0]
9002a806:	464b      	mov	r3, r9
9002a808:	f7ff ff30 	bl	9002a66c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002a80c:	8020      	strh	r0, [r4, #0]
9002a80e:	f817 3b01 	ldrb.w	r3, [r7], #1
9002a812:	f003 030f 	and.w	r3, r3, #15
9002a816:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002a81a:	0e0b      	lsrs	r3, r1, #24
9002a81c:	d006      	beq.n	9002a82c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
9002a81e:	8862      	ldrh	r2, [r4, #2]
9002a820:	4640      	mov	r0, r8
9002a822:	9300      	str	r3, [sp, #0]
9002a824:	464b      	mov	r3, r9
9002a826:	f7ff ff21 	bl	9002a66c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002a82a:	8060      	strh	r0, [r4, #2]
9002a82c:	3404      	adds	r4, #4
9002a82e:	f1aa 0a02 	sub.w	sl, sl, #2
9002a832:	e7dc      	b.n	9002a7ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002a834:	462f      	mov	r7, r5
9002a836:	46da      	mov	sl, fp
9002a838:	e7d9      	b.n	9002a7ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002a83a:	d10d      	bne.n	9002a858 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
9002a83c:	783b      	ldrb	r3, [r7, #0]
9002a83e:	091b      	lsrs	r3, r3, #4
9002a840:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002a844:	0e0b      	lsrs	r3, r1, #24
9002a846:	d006      	beq.n	9002a856 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
9002a848:	8822      	ldrh	r2, [r4, #0]
9002a84a:	4640      	mov	r0, r8
9002a84c:	9300      	str	r3, [sp, #0]
9002a84e:	464b      	mov	r3, r9
9002a850:	f7ff ff0c 	bl	9002a66c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002a854:	8020      	strh	r0, [r4, #0]
9002a856:	3402      	adds	r4, #2
9002a858:	9b06      	ldr	r3, [sp, #24]
9002a85a:	9a02      	ldr	r2, [sp, #8]
9002a85c:	881b      	ldrh	r3, [r3, #0]
9002a85e:	eba3 030b 	sub.w	r3, r3, fp
9002a862:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002a866:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
9002a86a:	4413      	add	r3, r2
9002a86c:	9a07      	ldr	r2, [sp, #28]
9002a86e:	fb93 f3f2 	sdiv	r3, r3, r2
9002a872:	441d      	add	r5, r3
9002a874:	e7a3      	b.n	9002a7be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002a876:	9b05      	ldr	r3, [sp, #20]
9002a878:	6818      	ldr	r0, [r3, #0]
9002a87a:	6803      	ldr	r3, [r0, #0]
9002a87c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002a87e:	4798      	blx	r3
9002a880:	b00d      	add	sp, #52	@ 0x34
9002a882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a886:	bf00      	nop
9002a888:	240245a0 	.word	0x240245a0
9002a88c:	24024598 	.word	0x24024598

9002a890 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
9002a890:	b570      	push	{r4, r5, r6, lr}
9002a892:	1214      	asrs	r4, r2, #8
9002a894:	788d      	ldrb	r5, [r1, #2]
9002a896:	f89d 6010 	ldrb.w	r6, [sp, #16]
9002a89a:	10d0      	asrs	r0, r2, #3
9002a89c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002a8a0:	00d2      	lsls	r2, r2, #3
9002a8a2:	fb15 f503 	smulbb	r5, r5, r3
9002a8a6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002a8aa:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002a8ae:	b2d2      	uxtb	r2, r2
9002a8b0:	fb04 5506 	mla	r5, r4, r6, r5
9002a8b4:	784c      	ldrb	r4, [r1, #1]
9002a8b6:	7809      	ldrb	r1, [r1, #0]
9002a8b8:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
9002a8bc:	fb14 f403 	smulbb	r4, r4, r3
9002a8c0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9002a8c4:	fb11 f303 	smulbb	r3, r1, r3
9002a8c8:	b2ad      	uxth	r5, r5
9002a8ca:	fb00 4406 	mla	r4, r0, r6, r4
9002a8ce:	fb02 3306 	mla	r3, r2, r6, r3
9002a8d2:	1c68      	adds	r0, r5, #1
9002a8d4:	b2a4      	uxth	r4, r4
9002a8d6:	b29b      	uxth	r3, r3
9002a8d8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
9002a8dc:	1c62      	adds	r2, r4, #1
9002a8de:	1c58      	adds	r0, r3, #1
9002a8e0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002a8e4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002a8e8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002a8ec:	0964      	lsrs	r4, r4, #5
9002a8ee:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002a8f2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002a8f6:	4328      	orrs	r0, r5
9002a8f8:	4320      	orrs	r0, r4
9002a8fa:	bd70      	pop	{r4, r5, r6, pc}

9002a8fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9002a8fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a900:	b08f      	sub	sp, #60	@ 0x3c
9002a902:	461c      	mov	r4, r3
9002a904:	4682      	mov	sl, r0
9002a906:	460e      	mov	r6, r1
9002a908:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
9002a90c:	4615      	mov	r5, r2
9002a90e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002a910:	2f00      	cmp	r7, #0
9002a912:	f000 8141 	beq.w	9002ab98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002a916:	6820      	ldr	r0, [r4, #0]
9002a918:	aa0a      	add	r2, sp, #40	@ 0x28
9002a91a:	6861      	ldr	r1, [r4, #4]
9002a91c:	f04f 0802 	mov.w	r8, #2
9002a920:	3504      	adds	r5, #4
9002a922:	c203      	stmia	r2!, {r0, r1}
9002a924:	6818      	ldr	r0, [r3, #0]
9002a926:	aa0c      	add	r2, sp, #48	@ 0x30
9002a928:	6859      	ldr	r1, [r3, #4]
9002a92a:	c203      	stmia	r2!, {r0, r1}
9002a92c:	a80a      	add	r0, sp, #40	@ 0x28
9002a92e:	f7ee fd75 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002a932:	4621      	mov	r1, r4
9002a934:	a80c      	add	r0, sp, #48	@ 0x30
9002a936:	f7ee fd99 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002a93a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002a93e:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002a942:	f002 0301 	and.w	r3, r2, #1
9002a946:	9306      	str	r3, [sp, #24]
9002a948:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002a94c:	f003 0101 	and.w	r1, r3, #1
9002a950:	9105      	str	r1, [sp, #20]
9002a952:	9805      	ldr	r0, [sp, #20]
9002a954:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9002a958:	4403      	add	r3, r0
9002a95a:	fb01 2303 	mla	r3, r1, r3, r2
9002a95e:	fb93 f3f8 	sdiv	r3, r3, r8
9002a962:	441e      	add	r6, r3
9002a964:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9002a968:	441a      	add	r2, r3
9002a96a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002a96e:	4419      	add	r1, r3
9002a970:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9002a974:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002a978:	9303      	str	r3, [sp, #12]
9002a97a:	4b89      	ldr	r3, [pc, #548]	@ (9002aba0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
9002a97c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
9002a980:	6818      	ldr	r0, [r3, #0]
9002a982:	6803      	ldr	r3, [r0, #0]
9002a984:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002a986:	4798      	blx	r3
9002a988:	4a86      	ldr	r2, [pc, #536]	@ (9002aba4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
9002a98a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002a98e:	2fff      	cmp	r7, #255	@ 0xff
9002a990:	8813      	ldrh	r3, [r2, #0]
9002a992:	4694      	mov	ip, r2
9002a994:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
9002a998:	fb03 9404 	mla	r4, r3, r4, r9
9002a99c:	fb03 f30b 	mul.w	r3, r3, fp
9002a9a0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002a9a4:	d071      	beq.n	9002aa8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002a9a6:	43f9      	mvns	r1, r7
9002a9a8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002a9ac:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
9002a9b0:	b2c9      	uxtb	r1, r1
9002a9b2:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002a9b6:	9104      	str	r1, [sp, #16]
9002a9b8:	9b07      	ldr	r3, [sp, #28]
9002a9ba:	42a3      	cmp	r3, r4
9002a9bc:	f240 80e7 	bls.w	9002ab8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002a9c0:	9b06      	ldr	r3, [sp, #24]
9002a9c2:	2b00      	cmp	r3, #0
9002a9c4:	d03d      	beq.n	9002aa42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002a9c6:	7831      	ldrb	r1, [r6, #0]
9002a9c8:	4650      	mov	r0, sl
9002a9ca:	9b04      	ldr	r3, [sp, #16]
9002a9cc:	f106 0801 	add.w	r8, r6, #1
9002a9d0:	f001 010f 	and.w	r1, r1, #15
9002a9d4:	8822      	ldrh	r2, [r4, #0]
9002a9d6:	9300      	str	r3, [sp, #0]
9002a9d8:	463b      	mov	r3, r7
9002a9da:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002a9de:	4429      	add	r1, r5
9002a9e0:	f7ff ff56 	bl	9002a890 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002a9e4:	9b03      	ldr	r3, [sp, #12]
9002a9e6:	f824 0b02 	strh.w	r0, [r4], #2
9002a9ea:	f103 3bff 	add.w	fp, r3, #4294967295
9002a9ee:	f1bb 0f01 	cmp.w	fp, #1
9002a9f2:	46a1      	mov	r9, r4
9002a9f4:	f104 0404 	add.w	r4, r4, #4
9002a9f8:	dd27      	ble.n	9002aa4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
9002a9fa:	f898 1000 	ldrb.w	r1, [r8]
9002a9fe:	4650      	mov	r0, sl
9002aa00:	9b04      	ldr	r3, [sp, #16]
9002aa02:	f1ab 0b02 	sub.w	fp, fp, #2
9002aa06:	0909      	lsrs	r1, r1, #4
9002aa08:	f834 2c04 	ldrh.w	r2, [r4, #-4]
9002aa0c:	9300      	str	r3, [sp, #0]
9002aa0e:	463b      	mov	r3, r7
9002aa10:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002aa14:	4429      	add	r1, r5
9002aa16:	f7ff ff3b 	bl	9002a890 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002aa1a:	f824 0c04 	strh.w	r0, [r4, #-4]
9002aa1e:	f818 1b01 	ldrb.w	r1, [r8], #1
9002aa22:	4650      	mov	r0, sl
9002aa24:	9b04      	ldr	r3, [sp, #16]
9002aa26:	f001 010f 	and.w	r1, r1, #15
9002aa2a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002aa2e:	9300      	str	r3, [sp, #0]
9002aa30:	463b      	mov	r3, r7
9002aa32:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002aa36:	4429      	add	r1, r5
9002aa38:	f7ff ff2a 	bl	9002a890 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002aa3c:	f824 0c02 	strh.w	r0, [r4, #-2]
9002aa40:	e7d5      	b.n	9002a9ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002aa42:	46b0      	mov	r8, r6
9002aa44:	f8dd b00c 	ldr.w	fp, [sp, #12]
9002aa48:	e7d1      	b.n	9002a9ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002aa4a:	d10f      	bne.n	9002aa6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
9002aa4c:	f898 1000 	ldrb.w	r1, [r8]
9002aa50:	4650      	mov	r0, sl
9002aa52:	9b04      	ldr	r3, [sp, #16]
9002aa54:	0909      	lsrs	r1, r1, #4
9002aa56:	f8b9 2000 	ldrh.w	r2, [r9]
9002aa5a:	9300      	str	r3, [sp, #0]
9002aa5c:	463b      	mov	r3, r7
9002aa5e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002aa62:	4429      	add	r1, r5
9002aa64:	f7ff ff14 	bl	9002a890 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002aa68:	f829 0b02 	strh.w	r0, [r9], #2
9002aa6c:	9b08      	ldr	r3, [sp, #32]
9002aa6e:	9a05      	ldr	r2, [sp, #20]
9002aa70:	881c      	ldrh	r4, [r3, #0]
9002aa72:	9b03      	ldr	r3, [sp, #12]
9002aa74:	1ae4      	subs	r4, r4, r3
9002aa76:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002aa7a:	4413      	add	r3, r2
9002aa7c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002aa7e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002aa82:	fb93 f3f2 	sdiv	r3, r3, r2
9002aa86:	441e      	add	r6, r3
9002aa88:	e796      	b.n	9002a9b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002aa8a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002aa8e:	4f46      	ldr	r7, [pc, #280]	@ (9002aba8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
9002aa90:	42a3      	cmp	r3, r4
9002aa92:	d97c      	bls.n	9002ab8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002aa94:	9a06      	ldr	r2, [sp, #24]
9002aa96:	2a00      	cmp	r2, #0
9002aa98:	d054      	beq.n	9002ab44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002aa9a:	7830      	ldrb	r0, [r6, #0]
9002aa9c:	1c71      	adds	r1, r6, #1
9002aa9e:	f000 000f 	and.w	r0, r0, #15
9002aaa2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002aaa6:	eb05 0e00 	add.w	lr, r5, r0
9002aaaa:	5c28      	ldrb	r0, [r5, r0]
9002aaac:	f89e 2002 	ldrb.w	r2, [lr, #2]
9002aab0:	f89e e001 	ldrb.w	lr, [lr, #1]
9002aab4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002aab8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002aabc:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
9002aac0:	ea42 020e 	orr.w	r2, r2, lr
9002aac4:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
9002aac8:	f824 2b02 	strh.w	r2, [r4], #2
9002aacc:	9a03      	ldr	r2, [sp, #12]
9002aace:	f102 3eff 	add.w	lr, r2, #4294967295
9002aad2:	f1be 0f01 	cmp.w	lr, #1
9002aad6:	4620      	mov	r0, r4
9002aad8:	f104 0404 	add.w	r4, r4, #4
9002aadc:	dd36      	ble.n	9002ab4c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
9002aade:	7808      	ldrb	r0, [r1, #0]
9002aae0:	f1ae 0e02 	sub.w	lr, lr, #2
9002aae4:	0900      	lsrs	r0, r0, #4
9002aae6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002aaea:	eb05 0a00 	add.w	sl, r5, r0
9002aaee:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002aaf2:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002aaf6:	00d2      	lsls	r2, r2, #3
9002aaf8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002aafc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002ab00:	ea49 0202 	orr.w	r2, r9, r2
9002ab04:	f815 9000 	ldrb.w	r9, [r5, r0]
9002ab08:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002ab0c:	f824 2c04 	strh.w	r2, [r4, #-4]
9002ab10:	f811 0b01 	ldrb.w	r0, [r1], #1
9002ab14:	f000 000f 	and.w	r0, r0, #15
9002ab18:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002ab1c:	eb05 0a00 	add.w	sl, r5, r0
9002ab20:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002ab24:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002ab28:	00d2      	lsls	r2, r2, #3
9002ab2a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002ab2e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002ab32:	ea49 0202 	orr.w	r2, r9, r2
9002ab36:	f815 9000 	ldrb.w	r9, [r5, r0]
9002ab3a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002ab3e:	f824 2c02 	strh.w	r2, [r4, #-2]
9002ab42:	e7c6      	b.n	9002aad2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002ab44:	4631      	mov	r1, r6
9002ab46:	f8dd e00c 	ldr.w	lr, [sp, #12]
9002ab4a:	e7c2      	b.n	9002aad2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002ab4c:	d111      	bne.n	9002ab72 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9002ab4e:	7809      	ldrb	r1, [r1, #0]
9002ab50:	0909      	lsrs	r1, r1, #4
9002ab52:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002ab56:	186c      	adds	r4, r5, r1
9002ab58:	5c69      	ldrb	r1, [r5, r1]
9002ab5a:	78a2      	ldrb	r2, [r4, #2]
9002ab5c:	7864      	ldrb	r4, [r4, #1]
9002ab5e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002ab62:	00e4      	lsls	r4, r4, #3
9002ab64:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002ab68:	4322      	orrs	r2, r4
9002ab6a:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
9002ab6e:	f820 2b02 	strh.w	r2, [r0], #2
9002ab72:	9a03      	ldr	r2, [sp, #12]
9002ab74:	f8bc 4000 	ldrh.w	r4, [ip]
9002ab78:	9905      	ldr	r1, [sp, #20]
9002ab7a:	1aa4      	subs	r4, r4, r2
9002ab7c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9002ab80:	440a      	add	r2, r1
9002ab82:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002ab86:	fb92 f2f8 	sdiv	r2, r2, r8
9002ab8a:	4416      	add	r6, r2
9002ab8c:	e780      	b.n	9002aa90 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
9002ab8e:	4b04      	ldr	r3, [pc, #16]	@ (9002aba0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
9002ab90:	6818      	ldr	r0, [r3, #0]
9002ab92:	6803      	ldr	r3, [r0, #0]
9002ab94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002ab96:	4798      	blx	r3
9002ab98:	b00f      	add	sp, #60	@ 0x3c
9002ab9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002ab9e:	bf00      	nop
9002aba0:	240245a0 	.word	0x240245a0
9002aba4:	24024598 	.word	0x24024598
9002aba8:	fffff800 	.word	0xfffff800

9002abac <CRC_Lock>:
9002abac:	4a2d      	ldr	r2, [pc, #180]	@ (9002ac64 <CRC_Lock+0xb8>)
9002abae:	b530      	push	{r4, r5, lr}
9002abb0:	6813      	ldr	r3, [r2, #0]
9002abb2:	f24c 2540 	movw	r5, #49728	@ 0xc240
9002abb6:	f023 0301 	bic.w	r3, r3, #1
9002abba:	6013      	str	r3, [r2, #0]
9002abbc:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
9002abc0:	4b29      	ldr	r3, [pc, #164]	@ (9002ac68 <CRC_Lock+0xbc>)
9002abc2:	681c      	ldr	r4, [r3, #0]
9002abc4:	4014      	ands	r4, r2
9002abc6:	42ac      	cmp	r4, r5
9002abc8:	d005      	beq.n	9002abd6 <CRC_Lock+0x2a>
9002abca:	681c      	ldr	r4, [r3, #0]
9002abcc:	f24c 2570 	movw	r5, #49776	@ 0xc270
9002abd0:	4014      	ands	r4, r2
9002abd2:	42ac      	cmp	r4, r5
9002abd4:	d125      	bne.n	9002ac22 <CRC_Lock+0x76>
9002abd6:	4b25      	ldr	r3, [pc, #148]	@ (9002ac6c <CRC_Lock+0xc0>)
9002abd8:	681b      	ldr	r3, [r3, #0]
9002abda:	2b00      	cmp	r3, #0
9002abdc:	d139      	bne.n	9002ac52 <CRC_Lock+0xa6>
9002abde:	4b24      	ldr	r3, [pc, #144]	@ (9002ac70 <CRC_Lock+0xc4>)
9002abe0:	681a      	ldr	r2, [r3, #0]
9002abe2:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002abe6:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
9002abea:	d00d      	beq.n	9002ac08 <CRC_Lock+0x5c>
9002abec:	681a      	ldr	r2, [r3, #0]
9002abee:	f240 4483 	movw	r4, #1155	@ 0x483
9002abf2:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002abf6:	42a2      	cmp	r2, r4
9002abf8:	d006      	beq.n	9002ac08 <CRC_Lock+0x5c>
9002abfa:	681b      	ldr	r3, [r3, #0]
9002abfc:	f240 4285 	movw	r2, #1157	@ 0x485
9002ac00:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002ac04:	4293      	cmp	r3, r2
9002ac06:	d124      	bne.n	9002ac52 <CRC_Lock+0xa6>
9002ac08:	4b1a      	ldr	r3, [pc, #104]	@ (9002ac74 <CRC_Lock+0xc8>)
9002ac0a:	2201      	movs	r2, #1
9002ac0c:	601a      	str	r2, [r3, #0]
9002ac0e:	681a      	ldr	r2, [r3, #0]
9002ac10:	2a00      	cmp	r2, #0
9002ac12:	d1fc      	bne.n	9002ac0e <CRC_Lock+0x62>
9002ac14:	4b18      	ldr	r3, [pc, #96]	@ (9002ac78 <CRC_Lock+0xcc>)
9002ac16:	6018      	str	r0, [r3, #0]
9002ac18:	6818      	ldr	r0, [r3, #0]
9002ac1a:	1a43      	subs	r3, r0, r1
9002ac1c:	4258      	negs	r0, r3
9002ac1e:	4158      	adcs	r0, r3
9002ac20:	e00e      	b.n	9002ac40 <CRC_Lock+0x94>
9002ac22:	681b      	ldr	r3, [r3, #0]
9002ac24:	4013      	ands	r3, r2
9002ac26:	f24d 2220 	movw	r2, #53792	@ 0xd220
9002ac2a:	4293      	cmp	r3, r2
9002ac2c:	d111      	bne.n	9002ac52 <CRC_Lock+0xa6>
9002ac2e:	4b13      	ldr	r3, [pc, #76]	@ (9002ac7c <CRC_Lock+0xd0>)
9002ac30:	f240 4286 	movw	r2, #1158	@ 0x486
9002ac34:	681b      	ldr	r3, [r3, #0]
9002ac36:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002ac3a:	4293      	cmp	r3, r2
9002ac3c:	d001      	beq.n	9002ac42 <CRC_Lock+0x96>
9002ac3e:	2000      	movs	r0, #0
9002ac40:	bd30      	pop	{r4, r5, pc}
9002ac42:	4b0f      	ldr	r3, [pc, #60]	@ (9002ac80 <CRC_Lock+0xd4>)
9002ac44:	2201      	movs	r2, #1
9002ac46:	601a      	str	r2, [r3, #0]
9002ac48:	681a      	ldr	r2, [r3, #0]
9002ac4a:	2a00      	cmp	r2, #0
9002ac4c:	d1fc      	bne.n	9002ac48 <CRC_Lock+0x9c>
9002ac4e:	4b0d      	ldr	r3, [pc, #52]	@ (9002ac84 <CRC_Lock+0xd8>)
9002ac50:	e7e1      	b.n	9002ac16 <CRC_Lock+0x6a>
9002ac52:	4b0d      	ldr	r3, [pc, #52]	@ (9002ac88 <CRC_Lock+0xdc>)
9002ac54:	2201      	movs	r2, #1
9002ac56:	601a      	str	r2, [r3, #0]
9002ac58:	681a      	ldr	r2, [r3, #0]
9002ac5a:	2a00      	cmp	r2, #0
9002ac5c:	d1fc      	bne.n	9002ac58 <CRC_Lock+0xac>
9002ac5e:	4b0b      	ldr	r3, [pc, #44]	@ (9002ac8c <CRC_Lock+0xe0>)
9002ac60:	e7d9      	b.n	9002ac16 <CRC_Lock+0x6a>
9002ac62:	bf00      	nop
9002ac64:	e0002000 	.word	0xe0002000
9002ac68:	e000ed00 	.word	0xe000ed00
9002ac6c:	e0042000 	.word	0xe0042000
9002ac70:	5c001000 	.word	0x5c001000
9002ac74:	58024c08 	.word	0x58024c08
9002ac78:	58024c00 	.word	0x58024c00
9002ac7c:	46008ff0 	.word	0x46008ff0
9002ac80:	46024c08 	.word	0x46024c08
9002ac84:	46024c00 	.word	0x46024c00
9002ac88:	40023008 	.word	0x40023008
9002ac8c:	40023000 	.word	0x40023000

9002ac90 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
9002ac90:	6101      	str	r1, [r0, #16]
9002ac92:	4770      	bx	lr

9002ac94 <_ZN8touchgfx8Gestures4tickEv>:
9002ac94:	7b83      	ldrb	r3, [r0, #14]
9002ac96:	b14b      	cbz	r3, 9002acac <_ZN8touchgfx8Gestures4tickEv+0x18>
9002ac98:	8903      	ldrh	r3, [r0, #8]
9002ac9a:	3301      	adds	r3, #1
9002ac9c:	b29b      	uxth	r3, r3
9002ac9e:	2b07      	cmp	r3, #7
9002aca0:	8103      	strh	r3, [r0, #8]
9002aca2:	bf81      	itttt	hi
9002aca4:	2300      	movhi	r3, #0
9002aca6:	8143      	strhhi	r3, [r0, #10]
9002aca8:	8183      	strhhi	r3, [r0, #12]
9002acaa:	7383      	strbhi	r3, [r0, #14]
9002acac:	4770      	bx	lr
	...

9002acb0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
9002acb0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9002acb4:	4698      	mov	r8, r3
9002acb6:	8883      	ldrh	r3, [r0, #4]
9002acb8:	4604      	mov	r4, r0
9002acba:	4617      	mov	r7, r2
9002acbc:	f8ad 3006 	strh.w	r3, [sp, #6]
9002acc0:	eba8 0303 	sub.w	r3, r8, r3
9002acc4:	4a19      	ldr	r2, [pc, #100]	@ (9002ad2c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002acc6:	460e      	mov	r6, r1
9002acc8:	b21b      	sxth	r3, r3
9002acca:	88c1      	ldrh	r1, [r0, #6]
9002accc:	9200      	str	r2, [sp, #0]
9002acce:	2000      	movs	r0, #0
9002acd0:	2b00      	cmp	r3, #0
9002acd2:	8aa2      	ldrh	r2, [r4, #20]
9002acd4:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
9002acd8:	bfb8      	it	lt
9002acda:	425b      	neglt	r3, r3
9002acdc:	f88d 0004 	strb.w	r0, [sp, #4]
9002ace0:	f8ad 1008 	strh.w	r1, [sp, #8]
9002ace4:	b21b      	sxth	r3, r3
9002ace6:	f8ad 800a 	strh.w	r8, [sp, #10]
9002acea:	f8ad 500c 	strh.w	r5, [sp, #12]
9002acee:	4293      	cmp	r3, r2
9002acf0:	dc07      	bgt.n	9002ad02 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
9002acf2:	1a69      	subs	r1, r5, r1
9002acf4:	b209      	sxth	r1, r1
9002acf6:	2900      	cmp	r1, #0
9002acf8:	bfb8      	it	lt
9002acfa:	4249      	neglt	r1, r1
9002acfc:	b209      	sxth	r1, r1
9002acfe:	428a      	cmp	r2, r1
9002ad00:	da10      	bge.n	9002ad24 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
9002ad02:	6920      	ldr	r0, [r4, #16]
9002ad04:	4669      	mov	r1, sp
9002ad06:	eba8 0606 	sub.w	r6, r8, r6
9002ad0a:	1bef      	subs	r7, r5, r7
9002ad0c:	6803      	ldr	r3, [r0, #0]
9002ad0e:	685b      	ldr	r3, [r3, #4]
9002ad10:	4798      	blx	r3
9002ad12:	2300      	movs	r3, #0
9002ad14:	2001      	movs	r0, #1
9002ad16:	8166      	strh	r6, [r4, #10]
9002ad18:	8123      	strh	r3, [r4, #8]
9002ad1a:	81a7      	strh	r7, [r4, #12]
9002ad1c:	f8a4 8004 	strh.w	r8, [r4, #4]
9002ad20:	80e5      	strh	r5, [r4, #6]
9002ad22:	73a0      	strb	r0, [r4, #14]
9002ad24:	b004      	add	sp, #16
9002ad26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002ad2a:	bf00      	nop
9002ad2c:	9003066c 	.word	0x9003066c

9002ad30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
9002ad30:	b5f0      	push	{r4, r5, r6, r7, lr}
9002ad32:	461e      	mov	r6, r3
9002ad34:	1e4b      	subs	r3, r1, #1
9002ad36:	b085      	sub	sp, #20
9002ad38:	4604      	mov	r4, r0
9002ad3a:	2b01      	cmp	r3, #1
9002ad3c:	460d      	mov	r5, r1
9002ad3e:	4617      	mov	r7, r2
9002ad40:	d84b      	bhi.n	9002adda <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
9002ad42:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9002ad46:	1cd3      	adds	r3, r2, #3
9002ad48:	b29b      	uxth	r3, r3
9002ad4a:	2b06      	cmp	r3, #6
9002ad4c:	d916      	bls.n	9002ad7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
9002ad4e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 9002adf0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002ad52:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002ad56:	f8cd c004 	str.w	ip, [sp, #4]
9002ad5a:	f04f 0c00 	mov.w	ip, #0
9002ad5e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002ad62:	6900      	ldr	r0, [r0, #16]
9002ad64:	f8ad 100c 	strh.w	r1, [sp, #12]
9002ad68:	a901      	add	r1, sp, #4
9002ad6a:	f88d c008 	strb.w	ip, [sp, #8]
9002ad6e:	f8ad 200a 	strh.w	r2, [sp, #10]
9002ad72:	f8ad 300e 	strh.w	r3, [sp, #14]
9002ad76:	6803      	ldr	r3, [r0, #0]
9002ad78:	689b      	ldr	r3, [r3, #8]
9002ad7a:	4798      	blx	r3
9002ad7c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002ad80:	1cd3      	adds	r3, r2, #3
9002ad82:	b29b      	uxth	r3, r3
9002ad84:	2b06      	cmp	r3, #6
9002ad86:	d916      	bls.n	9002adb6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002ad88:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9002adf0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002ad8c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002ad90:	f8cd c004 	str.w	ip, [sp, #4]
9002ad94:	f04f 0c01 	mov.w	ip, #1
9002ad98:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002ad9c:	6920      	ldr	r0, [r4, #16]
9002ad9e:	f8ad 100c 	strh.w	r1, [sp, #12]
9002ada2:	a901      	add	r1, sp, #4
9002ada4:	f88d c008 	strb.w	ip, [sp, #8]
9002ada8:	f8ad 200a 	strh.w	r2, [sp, #10]
9002adac:	f8ad 300e 	strh.w	r3, [sp, #14]
9002adb0:	6803      	ldr	r3, [r0, #0]
9002adb2:	689b      	ldr	r3, [r3, #8]
9002adb4:	4798      	blx	r3
9002adb6:	4b0d      	ldr	r3, [pc, #52]	@ (9002adec <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
9002adb8:	a901      	add	r1, sp, #4
9002adba:	6920      	ldr	r0, [r4, #16]
9002adbc:	9301      	str	r3, [sp, #4]
9002adbe:	2300      	movs	r3, #0
9002adc0:	f88d 5008 	strb.w	r5, [sp, #8]
9002adc4:	f8ad 700a 	strh.w	r7, [sp, #10]
9002adc8:	f8ad 600c 	strh.w	r6, [sp, #12]
9002adcc:	f8ad 300e 	strh.w	r3, [sp, #14]
9002add0:	6803      	ldr	r3, [r0, #0]
9002add2:	681b      	ldr	r3, [r3, #0]
9002add4:	4798      	blx	r3
9002add6:	b005      	add	sp, #20
9002add8:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002adda:	2900      	cmp	r1, #0
9002addc:	d1eb      	bne.n	9002adb6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002adde:	80a2      	strh	r2, [r4, #4]
9002ade0:	80c6      	strh	r6, [r0, #6]
9002ade2:	60a1      	str	r1, [r4, #8]
9002ade4:	81a1      	strh	r1, [r4, #12]
9002ade6:	73a1      	strb	r1, [r4, #14]
9002ade8:	e7e5      	b.n	9002adb6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002adea:	bf00      	nop
9002adec:	900303f0 	.word	0x900303f0
9002adf0:	90030680 	.word	0x90030680

9002adf4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
9002adf4:	10c9      	asrs	r1, r1, #3
9002adf6:	2900      	cmp	r1, #0
9002adf8:	bfb8      	it	lt
9002adfa:	4249      	neglt	r1, r1
9002adfc:	2801      	cmp	r0, #1
9002adfe:	d108      	bne.n	9002ae12 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002ae00:	f3c1 0008 	ubfx	r0, r1, #0, #9
9002ae04:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9002ae08:	4601      	mov	r1, r0
9002ae0a:	dd02      	ble.n	9002ae12 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002ae0c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
9002ae10:	4770      	bx	lr
9002ae12:	29ff      	cmp	r1, #255	@ 0xff
9002ae14:	bfa8      	it	ge
9002ae16:	21ff      	movge	r1, #255	@ 0xff
9002ae18:	4608      	mov	r0, r1
9002ae1a:	4770      	bx	lr

9002ae1c <_ZN8touchgfx10Rasterizer6lineToEii>:
9002ae1c:	b410      	push	{r4}
9002ae1e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
9002ae22:	429c      	cmp	r4, r3
9002ae24:	d803      	bhi.n	9002ae2e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
9002ae26:	f85d 4b04 	ldr.w	r4, [sp], #4
9002ae2a:	f7ec bded 	b.w	90017a08 <_ZN8touchgfx7Outline6lineToEii>
9002ae2e:	f85d 4b04 	ldr.w	r4, [sp], #4
9002ae32:	4770      	bx	lr

9002ae34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
9002ae34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002ae38:	b08b      	sub	sp, #44	@ 0x2c
9002ae3a:	4606      	mov	r6, r0
9002ae3c:	468a      	mov	sl, r1
9002ae3e:	e9cd 2306 	strd	r2, r3, [sp, #24]
9002ae42:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
9002ae46:	9308      	str	r3, [sp, #32]
9002ae48:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9002ae4c:	9309      	str	r3, [sp, #36]	@ 0x24
9002ae4e:	f7ec ff46 	bl	90017cde <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
9002ae52:	68b5      	ldr	r5, [r6, #8]
9002ae54:	4604      	mov	r4, r0
9002ae56:	2d00      	cmp	r5, #0
9002ae58:	d044      	beq.n	9002aee4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002ae5a:	6873      	ldr	r3, [r6, #4]
9002ae5c:	42ab      	cmp	r3, r5
9002ae5e:	d33d      	bcc.n	9002aedc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
9002ae60:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9002ae64:	f04f 0800 	mov.w	r8, #0
9002ae68:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
9002ae6c:	eb02 0b03 	add.w	fp, r2, r3
9002ae70:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
9002ae74:	fb02 1203 	mla	r2, r2, r3, r1
9002ae78:	9205      	str	r2, [sp, #20]
9002ae7a:	1e6a      	subs	r2, r5, #1
9002ae7c:	9204      	str	r2, [sp, #16]
9002ae7e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
9002ae82:	f9b4 7000 	ldrsh.w	r7, [r4]
9002ae86:	454b      	cmp	r3, r9
9002ae88:	463a      	mov	r2, r7
9002ae8a:	d008      	beq.n	9002ae9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
9002ae8c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
9002ae90:	eb03 0b09 	add.w	fp, r3, r9
9002ae94:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
9002ae98:	fb03 1309 	mla	r3, r3, r9, r1
9002ae9c:	9305      	str	r3, [sp, #20]
9002ae9e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9002aea2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002aea6:	4498      	add	r8, r3
9002aea8:	9b04      	ldr	r3, [sp, #16]
9002aeaa:	3b01      	subs	r3, #1
9002aeac:	9304      	str	r3, [sp, #16]
9002aeae:	9b04      	ldr	r3, [sp, #16]
9002aeb0:	3301      	adds	r3, #1
9002aeb2:	d015      	beq.n	9002aee0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
9002aeb4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
9002aeb8:	42bb      	cmp	r3, r7
9002aeba:	d117      	bne.n	9002aeec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
9002aebc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
9002aec0:	9b04      	ldr	r3, [sp, #16]
9002aec2:	4548      	cmp	r0, r9
9002aec4:	f103 33ff 	add.w	r3, r3, #4294967295
9002aec8:	d17d      	bne.n	9002afc6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002aeca:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002aece:	4401      	add	r1, r0
9002aed0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002aed4:	4480      	add	r8, r0
9002aed6:	e7e9      	b.n	9002aeac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
9002aed8:	461f      	mov	r7, r3
9002aeda:	e042      	b.n	9002af62 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
9002aedc:	2000      	movs	r0, #0
9002aede:	e002      	b.n	9002aee6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
9002aee0:	2900      	cmp	r1, #0
9002aee2:	d16d      	bne.n	9002afc0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
9002aee4:	2001      	movs	r0, #1
9002aee6:	b00b      	add	sp, #44	@ 0x2c
9002aee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002aeec:	b379      	cbz	r1, 9002af4e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
9002aeee:	2f00      	cmp	r7, #0
9002aef0:	db29      	blt.n	9002af46 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002aef2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002aef6:	42bb      	cmp	r3, r7
9002aef8:	dd25      	ble.n	9002af46 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002aefa:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
9002aefe:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002af02:	f7ff ff77 	bl	9002adf4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002af06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002af08:	fb10 f003 	smulbb	r0, r0, r3
9002af0c:	b280      	uxth	r0, r0
9002af0e:	1c41      	adds	r1, r0, #1
9002af10:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002af14:	1209      	asrs	r1, r1, #8
9002af16:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002af1a:	d014      	beq.n	9002af46 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002af1c:	b2c9      	uxtb	r1, r1
9002af1e:	9808      	ldr	r0, [sp, #32]
9002af20:	b2ba      	uxth	r2, r7
9002af22:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002af24:	9102      	str	r1, [sp, #8]
9002af26:	2101      	movs	r1, #1
9002af28:	4413      	add	r3, r2
9002af2a:	4402      	add	r2, r0
9002af2c:	9101      	str	r1, [sp, #4]
9002af2e:	fa0f f18b 	sxth.w	r1, fp
9002af32:	f8da 0000 	ldr.w	r0, [sl]
9002af36:	b21b      	sxth	r3, r3
9002af38:	9100      	str	r1, [sp, #0]
9002af3a:	b212      	sxth	r2, r2
9002af3c:	6941      	ldr	r1, [r0, #20]
9002af3e:	4650      	mov	r0, sl
9002af40:	460d      	mov	r5, r1
9002af42:	9905      	ldr	r1, [sp, #20]
9002af44:	47a8      	blx	r5
9002af46:	9b04      	ldr	r3, [sp, #16]
9002af48:	1c7a      	adds	r2, r7, #1
9002af4a:	3301      	adds	r3, #1
9002af4c:	d0ca      	beq.n	9002aee4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002af4e:	f9b4 7000 	ldrsh.w	r7, [r4]
9002af52:	1abb      	subs	r3, r7, r2
9002af54:	2b00      	cmp	r3, #0
9002af56:	dd31      	ble.n	9002afbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002af58:	2a00      	cmp	r2, #0
9002af5a:	dabd      	bge.n	9002aed8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
9002af5c:	2f00      	cmp	r7, #0
9002af5e:	dd2d      	ble.n	9002afbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002af60:	2200      	movs	r2, #0
9002af62:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002af66:	19d1      	adds	r1, r2, r7
9002af68:	4299      	cmp	r1, r3
9002af6a:	db02      	blt.n	9002af72 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
9002af6c:	1a9f      	subs	r7, r3, r2
9002af6e:	2f00      	cmp	r7, #0
9002af70:	dd24      	ble.n	9002afbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002af72:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002af76:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002af7a:	f7ff ff3b 	bl	9002adf4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002af7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002af80:	fb10 f003 	smulbb	r0, r0, r3
9002af84:	b280      	uxth	r0, r0
9002af86:	1c41      	adds	r1, r0, #1
9002af88:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002af8c:	1209      	asrs	r1, r1, #8
9002af8e:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002af92:	d013      	beq.n	9002afbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002af94:	b292      	uxth	r2, r2
9002af96:	9808      	ldr	r0, [sp, #32]
9002af98:	b2c9      	uxtb	r1, r1
9002af9a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002af9c:	b23f      	sxth	r7, r7
9002af9e:	4413      	add	r3, r2
9002afa0:	9102      	str	r1, [sp, #8]
9002afa2:	4402      	add	r2, r0
9002afa4:	fa0f f18b 	sxth.w	r1, fp
9002afa8:	f8da 0000 	ldr.w	r0, [sl]
9002afac:	b21b      	sxth	r3, r3
9002afae:	9100      	str	r1, [sp, #0]
9002afb0:	b212      	sxth	r2, r2
9002afb2:	9701      	str	r7, [sp, #4]
9002afb4:	9905      	ldr	r1, [sp, #20]
9002afb6:	6947      	ldr	r7, [r0, #20]
9002afb8:	4650      	mov	r0, sl
9002afba:	47b8      	blx	r7
9002afbc:	464b      	mov	r3, r9
9002afbe:	e75e      	b.n	9002ae7e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
9002afc0:	2f00      	cmp	r7, #0
9002afc2:	da96      	bge.n	9002aef2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
9002afc4:	e78e      	b.n	9002aee4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002afc6:	2900      	cmp	r1, #0
9002afc8:	d0f8      	beq.n	9002afbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002afca:	e790      	b.n	9002aeee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

9002afcc <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
9002afcc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002afd0:	461e      	mov	r6, r3
9002afd2:	4b36      	ldr	r3, [pc, #216]	@ (9002b0ac <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
9002afd4:	2500      	movs	r5, #0
9002afd6:	f100 0814 	add.w	r8, r0, #20
9002afda:	4604      	mov	r4, r0
9002afdc:	4617      	mov	r7, r2
9002afde:	e9c0 3100 	strd	r3, r1, [r0]
9002afe2:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9002afe6:	8185      	strh	r5, [r0, #12]
9002afe8:	8103      	strh	r3, [r0, #8]
9002afea:	f89d 3020 	ldrb.w	r3, [sp, #32]
9002afee:	81c5      	strh	r5, [r0, #14]
9002aff0:	7283      	strb	r3, [r0, #10]
9002aff2:	8205      	strh	r5, [r0, #16]
9002aff4:	8245      	strh	r5, [r0, #18]
9002aff6:	4640      	mov	r0, r8
9002aff8:	f7ec f84c 	bl	90017094 <_ZN8touchgfx7OutlineC1Ev>
9002affc:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
9002b000:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
9002b004:	466b      	mov	r3, sp
9002b006:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
9002b00a:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
9002b00e:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
9002b012:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
9002b016:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
9002b01a:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
9002b01e:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
9002b022:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
9002b026:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
9002b02a:	6830      	ldr	r0, [r6, #0]
9002b02c:	6871      	ldr	r1, [r6, #4]
9002b02e:	8872      	ldrh	r2, [r6, #2]
9002b030:	8835      	ldrh	r5, [r6, #0]
9002b032:	c303      	stmia	r3!, {r0, r1}
9002b034:	887b      	ldrh	r3, [r7, #2]
9002b036:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
9002b03a:	4413      	add	r3, r2
9002b03c:	883a      	ldrh	r2, [r7, #0]
9002b03e:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
9002b042:	442a      	add	r2, r5
9002b044:	81e3      	strh	r3, [r4, #14]
9002b046:	8220      	strh	r0, [r4, #16]
9002b048:	4668      	mov	r0, sp
9002b04a:	81a2      	strh	r2, [r4, #12]
9002b04c:	8261      	strh	r1, [r4, #18]
9002b04e:	4639      	mov	r1, r7
9002b050:	f7ee fa0c 	bl	9001946c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002b054:	f104 000c 	add.w	r0, r4, #12
9002b058:	f7ee f9e0 	bl	9001941c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002b05c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002b060:	f8bd 2000 	ldrh.w	r2, [sp]
9002b064:	4640      	mov	r0, r8
9002b066:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
9002b06a:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
9002b06e:	f7eb fff6 	bl	9001705e <_ZN8touchgfx7Outline5resetEv>
9002b072:	f9bd 3000 	ldrsh.w	r3, [sp]
9002b076:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
9002b07a:	4620      	mov	r0, r4
9002b07c:	015b      	lsls	r3, r3, #5
9002b07e:	64e3      	str	r3, [r4, #76]	@ 0x4c
9002b080:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002b084:	015b      	lsls	r3, r3, #5
9002b086:	6523      	str	r3, [r4, #80]	@ 0x50
9002b088:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002b08c:	015b      	lsls	r3, r3, #5
9002b08e:	6563      	str	r3, [r4, #84]	@ 0x54
9002b090:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9002b094:	015b      	lsls	r3, r3, #5
9002b096:	65a3      	str	r3, [r4, #88]	@ 0x58
9002b098:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
9002b09c:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
9002b0a0:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
9002b0a4:	b002      	add	sp, #8
9002b0a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b0aa:	bf00      	nop
9002b0ac:	900309bc 	.word	0x900309bc

9002b0b0 <_ZN8touchgfx6Canvas5closeEv>:
9002b0b0:	b538      	push	{r3, r4, r5, lr}
9002b0b2:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002b0b6:	4604      	mov	r4, r0
9002b0b8:	b193      	cbz	r3, 9002b0e0 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002b0ba:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
9002b0be:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
9002b0c2:	4213      	tst	r3, r2
9002b0c4:	d10c      	bne.n	9002b0e0 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002b0c6:	f100 0514 	add.w	r5, r0, #20
9002b0ca:	b123      	cbz	r3, 9002b0d6 <_ZN8touchgfx6Canvas5closeEv+0x26>
9002b0cc:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
9002b0d0:	4628      	mov	r0, r5
9002b0d2:	f7ff fea3 	bl	9002ae1c <_ZN8touchgfx10Rasterizer6lineToEii>
9002b0d6:	4628      	mov	r0, r5
9002b0d8:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
9002b0dc:	f7ff fe9e 	bl	9002ae1c <_ZN8touchgfx10Rasterizer6lineToEii>
9002b0e0:	2300      	movs	r3, #0
9002b0e2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002b0e6:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002b0ea:	4298      	cmp	r0, r3
9002b0ec:	bf34      	ite	cc
9002b0ee:	2000      	movcc	r0, #0
9002b0f0:	2001      	movcs	r0, #1
9002b0f2:	bd38      	pop	{r3, r4, r5, pc}

9002b0f4 <_ZN8touchgfx6Canvas6renderEh>:
9002b0f4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002b0f8:	7a85      	ldrb	r5, [r0, #10]
9002b0fa:	4604      	mov	r4, r0
9002b0fc:	4369      	muls	r1, r5
9002b0fe:	1c4d      	adds	r5, r1, #1
9002b100:	eb05 2511 	add.w	r5, r5, r1, lsr #8
9002b104:	122d      	asrs	r5, r5, #8
9002b106:	f000 8098 	beq.w	9002b23a <_ZN8touchgfx6Canvas6renderEh+0x146>
9002b10a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
9002b10e:	2b00      	cmp	r3, #0
9002b110:	f000 8093 	beq.w	9002b23a <_ZN8touchgfx6Canvas6renderEh+0x146>
9002b114:	f7ff ffcc 	bl	9002b0b0 <_ZN8touchgfx6Canvas5closeEv>
9002b118:	4607      	mov	r7, r0
9002b11a:	2800      	cmp	r0, #0
9002b11c:	d045      	beq.n	9002b1aa <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002b11e:	6860      	ldr	r0, [r4, #4]
9002b120:	4e47      	ldr	r6, [pc, #284]	@ (9002b240 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
9002b122:	6803      	ldr	r3, [r0, #0]
9002b124:	6837      	ldr	r7, [r6, #0]
9002b126:	689b      	ldr	r3, [r3, #8]
9002b128:	4798      	blx	r3
9002b12a:	4601      	mov	r1, r0
9002b12c:	4638      	mov	r0, r7
9002b12e:	f7e9 f919 	bl	90014364 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
9002b132:	4607      	mov	r7, r0
9002b134:	f7e8 fcda 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
9002b138:	6803      	ldr	r3, [r0, #0]
9002b13a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002b13c:	4798      	blx	r3
9002b13e:	4680      	mov	r8, r0
9002b140:	f7e8 fcd4 	bl	90013aec <_ZN8touchgfx3HAL3lcdEv>
9002b144:	6803      	ldr	r3, [r0, #0]
9002b146:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002b148:	4798      	blx	r3
9002b14a:	280b      	cmp	r0, #11
9002b14c:	d85a      	bhi.n	9002b204 <_ZN8touchgfx6Canvas6renderEh+0x110>
9002b14e:	e8df f000 	tbb	[pc, r0]
9002b152:	5b50      	.short	0x5b50
9002b154:	3059066b 	.word	0x3059066b
9002b158:	64646440 	.word	0x64646440
9002b15c:	6464      	.short	0x6464
9002b15e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002b162:	2208      	movs	r2, #8
9002b164:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b168:	fb91 f2f2 	sdiv	r2, r1, r2
9002b16c:	fb08 2303 	mla	r3, r8, r3, r2
9002b170:	441f      	add	r7, r3
9002b172:	424b      	negs	r3, r1
9002b174:	f001 0107 	and.w	r1, r1, #7
9002b178:	f003 0307 	and.w	r3, r3, #7
9002b17c:	bf58      	it	pl
9002b17e:	4259      	negpl	r1, r3
9002b180:	b2c9      	uxtb	r1, r1
9002b182:	b2ed      	uxtb	r5, r5
9002b184:	463a      	mov	r2, r7
9002b186:	fa0f f388 	sxth.w	r3, r8
9002b18a:	f104 0014 	add.w	r0, r4, #20
9002b18e:	e9cd 1500 	strd	r1, r5, [sp]
9002b192:	6861      	ldr	r1, [r4, #4]
9002b194:	f7ff fe4e 	bl	9002ae34 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
9002b198:	4607      	mov	r7, r0
9002b19a:	6860      	ldr	r0, [r4, #4]
9002b19c:	6803      	ldr	r3, [r0, #0]
9002b19e:	691b      	ldr	r3, [r3, #16]
9002b1a0:	4798      	blx	r3
9002b1a2:	6830      	ldr	r0, [r6, #0]
9002b1a4:	6803      	ldr	r3, [r0, #0]
9002b1a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002b1a8:	4798      	blx	r3
9002b1aa:	4638      	mov	r0, r7
9002b1ac:	b002      	add	sp, #8
9002b1ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b1b2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002b1b6:	2204      	movs	r2, #4
9002b1b8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b1bc:	fb91 f2f2 	sdiv	r2, r1, r2
9002b1c0:	fb08 2303 	mla	r3, r8, r3, r2
9002b1c4:	441f      	add	r7, r3
9002b1c6:	424b      	negs	r3, r1
9002b1c8:	f001 0103 	and.w	r1, r1, #3
9002b1cc:	f003 0303 	and.w	r3, r3, #3
9002b1d0:	e7d4      	b.n	9002b17c <_ZN8touchgfx6Canvas6renderEh+0x88>
9002b1d2:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002b1d6:	2202      	movs	r2, #2
9002b1d8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b1dc:	2900      	cmp	r1, #0
9002b1de:	fb91 f2f2 	sdiv	r2, r1, r2
9002b1e2:	f001 0101 	and.w	r1, r1, #1
9002b1e6:	fb08 2303 	mla	r3, r8, r3, r2
9002b1ea:	bfb8      	it	lt
9002b1ec:	4249      	neglt	r1, r1
9002b1ee:	441f      	add	r7, r3
9002b1f0:	e7c6      	b.n	9002b180 <_ZN8touchgfx6Canvas6renderEh+0x8c>
9002b1f2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b1f6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002b1fa:	fb08 f303 	mul.w	r3, r8, r3
9002b1fe:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002b202:	441f      	add	r7, r3
9002b204:	2100      	movs	r1, #0
9002b206:	e7bc      	b.n	9002b182 <_ZN8touchgfx6Canvas6renderEh+0x8e>
9002b208:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b20c:	2103      	movs	r1, #3
9002b20e:	fb08 f203 	mul.w	r2, r8, r3
9002b212:	89a3      	ldrh	r3, [r4, #12]
9002b214:	fb13 2301 	smlabb	r3, r3, r1, r2
9002b218:	e7f3      	b.n	9002b202 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002b21a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b21e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002b222:	fb08 2303 	mla	r3, r8, r3, r2
9002b226:	e7ec      	b.n	9002b202 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002b228:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b22c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002b230:	fb08 f303 	mul.w	r3, r8, r3
9002b234:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9002b238:	e7e3      	b.n	9002b202 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002b23a:	2701      	movs	r7, #1
9002b23c:	e7b5      	b.n	9002b1aa <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002b23e:	bf00      	nop
9002b240:	240245a0 	.word	0x240245a0

9002b244 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
9002b244:	4b06      	ldr	r3, [pc, #24]	@ (9002b260 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
9002b246:	b510      	push	{r4, lr}
9002b248:	781b      	ldrb	r3, [r3, #0]
9002b24a:	2b01      	cmp	r3, #1
9002b24c:	d107      	bne.n	9002b25e <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
9002b24e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
9002b252:	680b      	ldr	r3, [r1, #0]
9002b254:	6814      	ldr	r4, [r2, #0]
9002b256:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
9002b25a:	6013      	str	r3, [r2, #0]
9002b25c:	600c      	str	r4, [r1, #0]
9002b25e:	bd10      	pop	{r4, pc}
9002b260:	24024596 	.word	0x24024596

9002b264 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
9002b264:	b513      	push	{r0, r1, r4, lr}
9002b266:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002b26a:	4604      	mov	r4, r0
9002b26c:	e9cd 2100 	strd	r2, r1, [sp]
9002b270:	b9a3      	cbnz	r3, 9002b29c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
9002b272:	466a      	mov	r2, sp
9002b274:	a901      	add	r1, sp, #4
9002b276:	4620      	mov	r0, r4
9002b278:	f7ff ffe4 	bl	9002b244 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002b27c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002b27e:	9901      	ldr	r1, [sp, #4]
9002b280:	9a00      	ldr	r2, [sp, #0]
9002b282:	1ac9      	subs	r1, r1, r3
9002b284:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9002b286:	1ad2      	subs	r2, r2, r3
9002b288:	9101      	str	r1, [sp, #4]
9002b28a:	2a00      	cmp	r2, #0
9002b28c:	9200      	str	r2, [sp, #0]
9002b28e:	da0b      	bge.n	9002b2a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
9002b290:	2301      	movs	r3, #1
9002b292:	2900      	cmp	r1, #0
9002b294:	da0e      	bge.n	9002b2b4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
9002b296:	f043 0304 	orr.w	r3, r3, #4
9002b29a:	e013      	b.n	9002b2c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
9002b29c:	f7ff ff08 	bl	9002b0b0 <_ZN8touchgfx6Canvas5closeEv>
9002b2a0:	2800      	cmp	r0, #0
9002b2a2:	d1e6      	bne.n	9002b272 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
9002b2a4:	b002      	add	sp, #8
9002b2a6:	bd10      	pop	{r4, pc}
9002b2a8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002b2aa:	429a      	cmp	r2, r3
9002b2ac:	bfac      	ite	ge
9002b2ae:	2302      	movge	r3, #2
9002b2b0:	2300      	movlt	r3, #0
9002b2b2:	e7ee      	b.n	9002b292 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
9002b2b4:	6d60      	ldr	r0, [r4, #84]	@ 0x54
9002b2b6:	4281      	cmp	r1, r0
9002b2b8:	bfac      	ite	ge
9002b2ba:	2008      	movge	r0, #8
9002b2bc:	2000      	movlt	r0, #0
9002b2be:	4318      	orrs	r0, r3
9002b2c0:	b2c3      	uxtb	r3, r0
9002b2c2:	b158      	cbz	r0, 9002b2dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
9002b2c4:	2200      	movs	r2, #0
9002b2c6:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
9002b2ca:	9901      	ldr	r1, [sp, #4]
9002b2cc:	9a00      	ldr	r2, [sp, #0]
9002b2ce:	66e1      	str	r1, [r4, #108]	@ 0x6c
9002b2d0:	6722      	str	r2, [r4, #112]	@ 0x70
9002b2d2:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
9002b2d6:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
9002b2da:	e7e3      	b.n	9002b2a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002b2dc:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002b2e0:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
9002b2e4:	4298      	cmp	r0, r3
9002b2e6:	d803      	bhi.n	9002b2f0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
9002b2e8:	f104 0014 	add.w	r0, r4, #20
9002b2ec:	f7ec fba6 	bl	90017a3c <_ZN8touchgfx7Outline6moveToEii>
9002b2f0:	2301      	movs	r3, #1
9002b2f2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002b2f6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002b2fa:	2300      	movs	r3, #0
9002b2fc:	e7e5      	b.n	9002b2ca <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002b2fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002b300:	ab02      	add	r3, sp, #8
9002b302:	4604      	mov	r4, r0
9002b304:	9101      	str	r1, [sp, #4]
9002b306:	a901      	add	r1, sp, #4
9002b308:	f843 2d08 	str.w	r2, [r3, #-8]!
9002b30c:	461a      	mov	r2, r3
9002b30e:	f7ff ff99 	bl	9002b244 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002b312:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002b314:	9901      	ldr	r1, [sp, #4]
9002b316:	9a00      	ldr	r2, [sp, #0]
9002b318:	1ac9      	subs	r1, r1, r3
9002b31a:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9002b31c:	1ad2      	subs	r2, r2, r3
9002b31e:	9101      	str	r1, [sp, #4]
9002b320:	2a00      	cmp	r2, #0
9002b322:	9200      	str	r2, [sp, #0]
9002b324:	db1c      	blt.n	9002b360 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
9002b326:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002b328:	429a      	cmp	r2, r3
9002b32a:	bfac      	ite	ge
9002b32c:	2002      	movge	r0, #2
9002b32e:	2000      	movlt	r0, #0
9002b330:	2900      	cmp	r1, #0
9002b332:	db17      	blt.n	9002b364 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
9002b334:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9002b336:	4299      	cmp	r1, r3
9002b338:	bfac      	ite	ge
9002b33a:	2308      	movge	r3, #8
9002b33c:	2300      	movlt	r3, #0
9002b33e:	4303      	orrs	r3, r0
9002b340:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
9002b344:	b2dd      	uxtb	r5, r3
9002b346:	b978      	cbnz	r0, 9002b368 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
9002b348:	f104 0014 	add.w	r0, r4, #20
9002b34c:	f7ff fd66 	bl	9002ae1c <_ZN8touchgfx10Rasterizer6lineToEii>
9002b350:	9b01      	ldr	r3, [sp, #4]
9002b352:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
9002b356:	6623      	str	r3, [r4, #96]	@ 0x60
9002b358:	9b00      	ldr	r3, [sp, #0]
9002b35a:	6663      	str	r3, [r4, #100]	@ 0x64
9002b35c:	b002      	add	sp, #8
9002b35e:	bd70      	pop	{r4, r5, r6, pc}
9002b360:	2001      	movs	r0, #1
9002b362:	e7e5      	b.n	9002b330 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
9002b364:	2304      	movs	r3, #4
9002b366:	e7ea      	b.n	9002b33e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
9002b368:	b113      	cbz	r3, 9002b370 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
9002b36a:	ea10 0305 	ands.w	r3, r0, r5
9002b36e:	d11c      	bne.n	9002b3aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
9002b370:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
9002b374:	f104 0614 	add.w	r6, r4, #20
9002b378:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
9002b37c:	b98b      	cbnz	r3, 9002b3a2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002b37e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002b382:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
9002b386:	4298      	cmp	r0, r3
9002b388:	d802      	bhi.n	9002b390 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
9002b38a:	4630      	mov	r0, r6
9002b38c:	f7ec fb56 	bl	90017a3c <_ZN8touchgfx7Outline6moveToEii>
9002b390:	2301      	movs	r3, #1
9002b392:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002b396:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002b39a:	4630      	mov	r0, r6
9002b39c:	e9dd 2100 	ldrd	r2, r1, [sp]
9002b3a0:	e7d4      	b.n	9002b34c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
9002b3a2:	4630      	mov	r0, r6
9002b3a4:	f7ff fd3a 	bl	9002ae1c <_ZN8touchgfx10Rasterizer6lineToEii>
9002b3a8:	e7f7      	b.n	9002b39a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
9002b3aa:	461d      	mov	r5, r3
9002b3ac:	e7d0      	b.n	9002b350 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

9002b3b0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
9002b3b0:	b538      	push	{r3, r4, r5, lr}
9002b3b2:	ed2d 8b10 	vpush	{d8-d15}
9002b3b6:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
9002b3ba:	4605      	mov	r5, r0
9002b3bc:	eeb0 ca40 	vmov.f32	s24, s0
9002b3c0:	460c      	mov	r4, r1
9002b3c2:	eef0 ca60 	vmov.f32	s25, s1
9002b3c6:	ed9f ba57 	vldr	s22, [pc, #348]	@ 9002b524 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
9002b3ca:	eeb0 da41 	vmov.f32	s26, s2
9002b3ce:	eef0 da61 	vmov.f32	s27, s3
9002b3d2:	eeb0 ea42 	vmov.f32	s28, s4
9002b3d6:	eef0 ea62 	vmov.f32	s29, s5
9002b3da:	eef0 aa6b 	vmov.f32	s21, s23
9002b3de:	2c08      	cmp	r4, #8
9002b3e0:	d86e      	bhi.n	9002b4c0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
9002b3e2:	ee7e 6a4c 	vsub.f32	s13, s28, s24
9002b3e6:	ee7d 7aee 	vsub.f32	s15, s27, s29
9002b3ea:	ee3d 6a4e 	vsub.f32	s12, s26, s28
9002b3ee:	ee3e 7aec 	vsub.f32	s14, s29, s25
9002b3f2:	ee66 7ae7 	vnmul.f32	s15, s13, s15
9002b3f6:	ee3c fa0d 	vadd.f32	s30, s24, s26
9002b3fa:	ee7c faad 	vadd.f32	s31, s25, s27
9002b3fe:	eee6 7a07 	vfma.f32	s15, s12, s14
9002b402:	ee7d 9a0e 	vadd.f32	s19, s26, s28
9002b406:	ee3d aaae 	vadd.f32	s20, s27, s29
9002b40a:	ee2f fa2b 	vmul.f32	s30, s30, s23
9002b40e:	ee6f faab 	vmul.f32	s31, s31, s23
9002b412:	ee69 9aab 	vmul.f32	s19, s19, s23
9002b416:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9002b41a:	ee2a aa2b 	vmul.f32	s20, s20, s23
9002b41e:	ee7f 8a29 	vadd.f32	s17, s30, s19
9002b422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b426:	ee3f 9a8a 	vadd.f32	s18, s31, s20
9002b42a:	ee68 8aab 	vmul.f32	s17, s17, s23
9002b42e:	bf48      	it	mi
9002b430:	eef1 7a67 	vnegmi.f32	s15, s15
9002b434:	ee29 9a2b 	vmul.f32	s18, s18, s23
9002b438:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
9002b43c:	eef4 7acb 	vcmpe.f32	s15, s22
9002b440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b444:	dd3f      	ble.n	9002b4c6 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
9002b446:	ee27 7a07 	vmul.f32	s14, s14, s14
9002b44a:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002b44e:	eea6 7aa6 	vfma.f32	s14, s13, s13
9002b452:	ee27 7a06 	vmul.f32	s14, s14, s12
9002b456:	eef4 7ac7 	vcmpe.f32	s15, s14
9002b45a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b45e:	d847      	bhi.n	9002b4f0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002b460:	ee7e 0a4d 	vsub.f32	s1, s28, s26
9002b464:	ee3e 0aed 	vsub.f32	s0, s29, s27
9002b468:	f000 fbbf 	bl	9002bbea <atan2f>
9002b46c:	eeb0 8a40 	vmov.f32	s16, s0
9002b470:	ee7d 0a4c 	vsub.f32	s1, s26, s24
9002b474:	ee3d 0aec 	vsub.f32	s0, s27, s25
9002b478:	f000 fbb7 	bl	9002bbea <atan2f>
9002b47c:	ee38 0a40 	vsub.f32	s0, s16, s0
9002b480:	eddf 7a29 	vldr	s15, [pc, #164]	@ 9002b528 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
9002b484:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002b488:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b48c:	bf48      	it	mi
9002b48e:	eeb1 0a40 	vnegmi.f32	s0, s0
9002b492:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b49a:	bfa4      	itt	ge
9002b49c:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 9002b52c <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
9002b4a0:	ee37 0ac0 	vsubge.f32	s0, s15, s0
9002b4a4:	eddf 7a22 	vldr	s15, [pc, #136]	@ 9002b530 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
9002b4a8:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b4ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b4b0:	d51e      	bpl.n	9002b4f0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002b4b2:	eef0 0a49 	vmov.f32	s1, s18
9002b4b6:	4628      	mov	r0, r5
9002b4b8:	eeb0 0a68 	vmov.f32	s0, s17
9002b4bc:	f7ea f8c6 	bl	9001564c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002b4c0:	ecbd 8b10 	vpop	{d8-d15}
9002b4c4:	bd38      	pop	{r3, r4, r5, pc}
9002b4c6:	ee7c 7a0e 	vadd.f32	s15, s24, s28
9002b4ca:	eeb0 7a68 	vmov.f32	s14, s17
9002b4ce:	eef0 6a49 	vmov.f32	s13, s18
9002b4d2:	eea7 7aea 	vfms.f32	s14, s15, s21
9002b4d6:	ee7c 7aae 	vadd.f32	s15, s25, s29
9002b4da:	eee7 6aea 	vfms.f32	s13, s15, s21
9002b4de:	ee66 7aa6 	vmul.f32	s15, s13, s13
9002b4e2:	eee7 7a07 	vfma.f32	s15, s14, s14
9002b4e6:	eef4 7ac6 	vcmpe.f32	s15, s12
9002b4ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b4ee:	d9e0      	bls.n	9002b4b2 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
9002b4f0:	3401      	adds	r4, #1
9002b4f2:	eef0 0a6c 	vmov.f32	s1, s25
9002b4f6:	eeb0 0a4c 	vmov.f32	s0, s24
9002b4fa:	4628      	mov	r0, r5
9002b4fc:	4621      	mov	r1, r4
9002b4fe:	eef0 2a49 	vmov.f32	s5, s18
9002b502:	eeb0 2a68 	vmov.f32	s4, s17
9002b506:	eef0 1a6f 	vmov.f32	s3, s31
9002b50a:	eeb0 1a4f 	vmov.f32	s2, s30
9002b50e:	f7ff ff4f 	bl	9002b3b0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
9002b512:	eef0 da4a 	vmov.f32	s27, s20
9002b516:	eeb0 da69 	vmov.f32	s26, s19
9002b51a:	eef0 ca49 	vmov.f32	s25, s18
9002b51e:	eeb0 ca68 	vmov.f32	s24, s17
9002b522:	e75c      	b.n	9002b3de <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
9002b524:	2edbe6ff 	.word	0x2edbe6ff
9002b528:	40490fdb 	.word	0x40490fdb
9002b52c:	40c90fdb 	.word	0x40c90fdb
9002b530:	3dcccccd 	.word	0x3dcccccd

9002b534 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
9002b534:	b530      	push	{r4, r5, lr}
9002b536:	ed2d 8b10 	vpush	{d8-d15}
9002b53a:	eef0 8a40 	vmov.f32	s17, s0
9002b53e:	b085      	sub	sp, #20
9002b540:	eef0 9a60 	vmov.f32	s19, s1
9002b544:	4604      	mov	r4, r0
9002b546:	eef0 fa41 	vmov.f32	s31, s2
9002b54a:	460d      	mov	r5, r1
9002b54c:	eeb0 fa61 	vmov.f32	s30, s3
9002b550:	eef0 ba42 	vmov.f32	s23, s4
9002b554:	eeb0 ca62 	vmov.f32	s24, s5
9002b558:	eef0 aa43 	vmov.f32	s21, s6
9002b55c:	eeb0 ba63 	vmov.f32	s22, s7
9002b560:	2d08      	cmp	r5, #8
9002b562:	f200 8113 	bhi.w	9002b78c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
9002b566:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9002b56a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
9002b56e:	ee7f 6aab 	vadd.f32	s13, s31, s23
9002b572:	ee38 daaf 	vadd.f32	s26, s17, s31
9002b576:	ee26 6a27 	vmul.f32	s12, s12, s15
9002b57a:	ee7c ca0b 	vadd.f32	s25, s24, s22
9002b57e:	ee2d da27 	vmul.f32	s26, s26, s15
9002b582:	ed8d 6a01 	vstr	s12, [sp, #4]
9002b586:	eea6 6aa7 	vfma.f32	s12, s13, s15
9002b58a:	ee6c caa7 	vmul.f32	s25, s25, s15
9002b58e:	eeb0 ea4d 	vmov.f32	s28, s26
9002b592:	ee79 da8f 	vadd.f32	s27, s19, s30
9002b596:	ee3f 7a0c 	vadd.f32	s14, s30, s24
9002b59a:	eea6 eaa7 	vfma.f32	s28, s13, s15
9002b59e:	ee66 6a27 	vmul.f32	s13, s12, s15
9002b5a2:	ee6d daa7 	vmul.f32	s27, s27, s15
9002b5a6:	edcd 6a03 	vstr	s13, [sp, #12]
9002b5aa:	eef0 6a6c 	vmov.f32	s13, s25
9002b5ae:	eef0 ea6d 	vmov.f32	s29, s27
9002b5b2:	ee2e ea27 	vmul.f32	s28, s28, s15
9002b5b6:	eee7 6a27 	vfma.f32	s13, s14, s15
9002b5ba:	eee7 ea27 	vfma.f32	s29, s14, s15
9002b5be:	ee26 7aa7 	vmul.f32	s14, s13, s15
9002b5c2:	ee6e eaa7 	vmul.f32	s29, s29, s15
9002b5c6:	eef0 6a67 	vmov.f32	s13, s15
9002b5ca:	ed8d 7a02 	vstr	s14, [sp, #8]
9002b5ce:	ed9d 7a03 	vldr	s14, [sp, #12]
9002b5d2:	ee3e 9a07 	vadd.f32	s18, s28, s14
9002b5d6:	ed9d 7a02 	vldr	s14, [sp, #8]
9002b5da:	ee3e aa87 	vadd.f32	s20, s29, s14
9002b5de:	ee29 9a27 	vmul.f32	s18, s18, s15
9002b5e2:	ee2a aa27 	vmul.f32	s20, s20, s15
9002b5e6:	2d00      	cmp	r5, #0
9002b5e8:	f000 810b 	beq.w	9002b802 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b5ec:	ee7a 5ae8 	vsub.f32	s11, s21, s17
9002b5f0:	eddf 4a95 	vldr	s9, [pc, #596]	@ 9002b848 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
9002b5f4:	ee3f 7a4b 	vsub.f32	s14, s30, s22
9002b5f8:	ee7b 7a69 	vsub.f32	s15, s22, s19
9002b5fc:	ee3f 6aea 	vsub.f32	s12, s31, s21
9002b600:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9002b604:	ee3b 5aea 	vsub.f32	s10, s23, s21
9002b608:	eea6 7a27 	vfma.f32	s14, s12, s15
9002b60c:	ee3c 6a4b 	vsub.f32	s12, s24, s22
9002b610:	ee25 6ac6 	vnmul.f32	s12, s11, s12
9002b614:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002b618:	eea5 6a27 	vfma.f32	s12, s10, s15
9002b61c:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
9002b620:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b624:	bf48      	it	mi
9002b626:	eeb1 7a47 	vnegmi.f32	s14, s14
9002b62a:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
9002b62e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b632:	eeb4 7ae4 	vcmpe.f32	s14, s9
9002b636:	bf48      	it	mi
9002b638:	eeb1 6a46 	vnegmi.f32	s12, s12
9002b63c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b640:	f340 80a8 	ble.w	9002b794 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
9002b644:	eeb4 6ae4 	vcmpe.f32	s12, s9
9002b648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b64c:	dd5a      	ble.n	9002b704 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
9002b64e:	ee65 5aa5 	vmul.f32	s11, s11, s11
9002b652:	ee37 7a06 	vadd.f32	s14, s14, s12
9002b656:	eee7 5aa7 	vfma.f32	s11, s15, s15
9002b65a:	ee27 7a07 	vmul.f32	s14, s14, s14
9002b65e:	ee65 7a85 	vmul.f32	s15, s11, s10
9002b662:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002b666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b66a:	f200 80ca 	bhi.w	9002b802 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b66e:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002b672:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002b676:	f000 fab8 	bl	9002bbea <atan2f>
9002b67a:	eeb0 8a40 	vmov.f32	s16, s0
9002b67e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
9002b682:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002b686:	f000 fab0 	bl	9002bbea <atan2f>
9002b68a:	ee38 fa40 	vsub.f32	s30, s16, s0
9002b68e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
9002b692:	ee3b 0a4c 	vsub.f32	s0, s22, s24
9002b696:	eeb5 fac0 	vcmpe.f32	s30, #0.0
9002b69a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b69e:	bf48      	it	mi
9002b6a0:	eeb1 fa4f 	vnegmi.f32	s30, s30
9002b6a4:	f000 faa1 	bl	9002bbea <atan2f>
9002b6a8:	ee30 0a48 	vsub.f32	s0, s0, s16
9002b6ac:	eddf 7a67 	vldr	s15, [pc, #412]	@ 9002b84c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002b6b0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002b6b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b6b8:	eeb4 fae7 	vcmpe.f32	s30, s15
9002b6bc:	eddf 7a63 	vldr	s15, [pc, #396]	@ 9002b84c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002b6c0:	bf48      	it	mi
9002b6c2:	eeb1 0a40 	vnegmi.f32	s0, s0
9002b6c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b6ca:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b6ce:	eddf 7a60 	vldr	s15, [pc, #384]	@ 9002b850 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
9002b6d2:	bfa4      	itt	ge
9002b6d4:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 9002b854 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002b6d8:	ee37 fa4f 	vsubge.f32	s30, s14, s30
9002b6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b6e0:	bfa4      	itt	ge
9002b6e2:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 9002b854 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002b6e6:	ee37 0a40 	vsubge.f32	s0, s14, s0
9002b6ea:	ee3f 0a00 	vadd.f32	s0, s30, s0
9002b6ee:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b6f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b6f6:	f140 8084 	bpl.w	9002b802 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b6fa:	eef0 0a4a 	vmov.f32	s1, s20
9002b6fe:	eeb0 0a49 	vmov.f32	s0, s18
9002b702:	e040      	b.n	9002b786 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
9002b704:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002b708:	ee27 7a07 	vmul.f32	s14, s14, s14
9002b70c:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002b710:	ee67 7a85 	vmul.f32	s15, s15, s10
9002b714:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002b718:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b71c:	d871      	bhi.n	9002b802 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b71e:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002b722:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002b726:	f000 fa60 	bl	9002bbea <atan2f>
9002b72a:	ee7f 0ae8 	vsub.f32	s1, s31, s17
9002b72e:	eeb0 8a40 	vmov.f32	s16, s0
9002b732:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002b736:	f000 fa58 	bl	9002bbea <atan2f>
9002b73a:	ee38 0a40 	vsub.f32	s0, s16, s0
9002b73e:	eddf 7a43 	vldr	s15, [pc, #268]	@ 9002b84c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002b742:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002b746:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b74a:	bf48      	it	mi
9002b74c:	eeb1 0a40 	vnegmi.f32	s0, s0
9002b750:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b758:	bfa4      	itt	ge
9002b75a:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 9002b854 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002b75e:	ee37 0ac0 	vsubge.f32	s0, s15, s0
9002b762:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9002b850 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
9002b766:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b76a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b76e:	d548      	bpl.n	9002b802 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b770:	eef0 0a4f 	vmov.f32	s1, s30
9002b774:	4620      	mov	r0, r4
9002b776:	eeb0 0a6f 	vmov.f32	s0, s31
9002b77a:	f7e9 ff67 	bl	9001564c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002b77e:	eef0 0a4c 	vmov.f32	s1, s24
9002b782:	eeb0 0a6b 	vmov.f32	s0, s23
9002b786:	4620      	mov	r0, r4
9002b788:	f7e9 ff60 	bl	9001564c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002b78c:	b005      	add	sp, #20
9002b78e:	ecbd 8b10 	vpop	{d8-d15}
9002b792:	bd30      	pop	{r4, r5, pc}
9002b794:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 9002b848 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
9002b798:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002b79c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b7a0:	dd19      	ble.n	9002b7d6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
9002b7a2:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002b7a6:	ee26 7a06 	vmul.f32	s14, s12, s12
9002b7aa:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002b7ae:	ee67 7a85 	vmul.f32	s15, s15, s10
9002b7b2:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002b7b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b7ba:	d822      	bhi.n	9002b802 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b7bc:	ee7a 0aeb 	vsub.f32	s1, s21, s23
9002b7c0:	ee3b 0a4c 	vsub.f32	s0, s22, s24
9002b7c4:	f000 fa11 	bl	9002bbea <atan2f>
9002b7c8:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002b7cc:	eeb0 8a40 	vmov.f32	s16, s0
9002b7d0:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002b7d4:	e7af      	b.n	9002b736 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
9002b7d6:	ee78 7aaa 	vadd.f32	s15, s17, s21
9002b7da:	eeb0 7a49 	vmov.f32	s14, s18
9002b7de:	eeb0 6a4a 	vmov.f32	s12, s20
9002b7e2:	eea7 7ae6 	vfms.f32	s14, s15, s13
9002b7e6:	ee79 7a8b 	vadd.f32	s15, s19, s22
9002b7ea:	eea7 6ae6 	vfms.f32	s12, s15, s13
9002b7ee:	ee66 7a06 	vmul.f32	s15, s12, s12
9002b7f2:	eee7 7a07 	vfma.f32	s15, s14, s14
9002b7f6:	eef4 7ac5 	vcmpe.f32	s15, s10
9002b7fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b7fe:	f67f af7c 	bls.w	9002b6fa <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
9002b802:	3501      	adds	r5, #1
9002b804:	eef0 0a69 	vmov.f32	s1, s19
9002b808:	eeb0 0a68 	vmov.f32	s0, s17
9002b80c:	4620      	mov	r0, r4
9002b80e:	4629      	mov	r1, r5
9002b810:	eef0 3a4a 	vmov.f32	s7, s20
9002b814:	eeb0 3a49 	vmov.f32	s6, s18
9002b818:	eef0 2a6e 	vmov.f32	s5, s29
9002b81c:	eeb0 2a4e 	vmov.f32	s4, s28
9002b820:	eef0 1a6d 	vmov.f32	s3, s27
9002b824:	eeb0 1a4d 	vmov.f32	s2, s26
9002b828:	f7ff fe84 	bl	9002b534 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
9002b82c:	eeb0 ca6c 	vmov.f32	s24, s25
9002b830:	eddd ba01 	vldr	s23, [sp, #4]
9002b834:	eef0 9a4a 	vmov.f32	s19, s20
9002b838:	ed9d fa02 	vldr	s30, [sp, #8]
9002b83c:	eef0 8a49 	vmov.f32	s17, s18
9002b840:	eddd fa03 	vldr	s31, [sp, #12]
9002b844:	e68c      	b.n	9002b560 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
9002b846:	bf00      	nop
9002b848:	2edbe6ff 	.word	0x2edbe6ff
9002b84c:	40490fdb 	.word	0x40490fdb
9002b850:	3dcccccd 	.word	0x3dcccccd
9002b854:	40c90fdb 	.word	0x40c90fdb

9002b858 <_ZN8touchgfx6CanvasD1Ev>:
9002b858:	4b04      	ldr	r3, [pc, #16]	@ (9002b86c <_ZN8touchgfx6CanvasD1Ev+0x14>)
9002b85a:	b510      	push	{r4, lr}
9002b85c:	4604      	mov	r4, r0
9002b85e:	f840 3b14 	str.w	r3, [r0], #20
9002b862:	f7eb fbf4 	bl	9001704e <_ZN8touchgfx7OutlineD1Ev>
9002b866:	4620      	mov	r0, r4
9002b868:	bd10      	pop	{r4, pc}
9002b86a:	bf00      	nop
9002b86c:	900309bc 	.word	0x900309bc

9002b870 <_ZN8touchgfx6CanvasD0Ev>:
9002b870:	b510      	push	{r4, lr}
9002b872:	4604      	mov	r4, r0
9002b874:	f7ff fff0 	bl	9002b858 <_ZN8touchgfx6CanvasD1Ev>
9002b878:	2174      	movs	r1, #116	@ 0x74
9002b87a:	4620      	mov	r0, r4
9002b87c:	f000 f98d 	bl	9002bb9a <_ZdlPvj>
9002b880:	4620      	mov	r0, r4
9002b882:	bd10      	pop	{r4, pc}

9002b884 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
9002b884:	4b07      	ldr	r3, [pc, #28]	@ (9002b8a4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
9002b886:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9002b888:	881b      	ldrh	r3, [r3, #0]
9002b88a:	4293      	cmp	r3, r2
9002b88c:	bf81      	itttt	hi
9002b88e:	4b06      	ldrhi	r3, [pc, #24]	@ (9002b8a8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
9002b890:	681b      	ldrhi	r3, [r3, #0]
9002b892:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
9002b896:	7858      	ldrbhi	r0, [r3, #1]
9002b898:	bf8c      	ite	hi
9002b89a:	f000 0003 	andhi.w	r0, r0, #3
9002b89e:	2000      	movls	r0, #0
9002b8a0:	4770      	bx	lr
9002b8a2:	bf00      	nop
9002b8a4:	240245fc 	.word	0x240245fc
9002b8a8:	240245f8 	.word	0x240245f8

9002b8ac <_ZNK8touchgfx8TextArea13getTextHeightEv>:
9002b8ac:	4b11      	ldr	r3, [pc, #68]	@ (9002b8f4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
9002b8ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b8b2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
9002b8b4:	4604      	mov	r4, r0
9002b8b6:	881b      	ldrh	r3, [r3, #0]
9002b8b8:	428b      	cmp	r3, r1
9002b8ba:	d918      	bls.n	9002b8ee <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
9002b8bc:	6803      	ldr	r3, [r0, #0]
9002b8be:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
9002b8c0:	4b0d      	ldr	r3, [pc, #52]	@ (9002b8f8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
9002b8c2:	6818      	ldr	r0, [r3, #0]
9002b8c4:	f7d9 ff58 	bl	90005778 <_ZNK8touchgfx5Texts7getTextEt>
9002b8c8:	6823      	ldr	r3, [r4, #0]
9002b8ca:	4606      	mov	r6, r0
9002b8cc:	4620      	mov	r0, r4
9002b8ce:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9002b8d0:	4798      	blx	r3
9002b8d2:	6823      	ldr	r3, [r4, #0]
9002b8d4:	4607      	mov	r7, r0
9002b8d6:	4620      	mov	r0, r4
9002b8d8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9002b8dc:	4798      	blx	r3
9002b8de:	463a      	mov	r2, r7
9002b8e0:	4603      	mov	r3, r0
9002b8e2:	4631      	mov	r1, r6
9002b8e4:	4620      	mov	r0, r4
9002b8e6:	46ac      	mov	ip, r5
9002b8e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002b8ec:	4760      	bx	ip
9002b8ee:	2000      	movs	r0, #0
9002b8f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b8f4:	240245fc 	.word	0x240245fc
9002b8f8:	24024604 	.word	0x24024604

9002b8fc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
9002b8fc:	4b18      	ldr	r3, [pc, #96]	@ (9002b960 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
9002b8fe:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
9002b902:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
9002b904:	4604      	mov	r4, r0
9002b906:	881b      	ldrh	r3, [r3, #0]
9002b908:	428b      	cmp	r3, r1
9002b90a:	d926      	bls.n	9002b95a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
9002b90c:	4b15      	ldr	r3, [pc, #84]	@ (9002b964 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
9002b90e:	681b      	ldr	r3, [r3, #0]
9002b910:	eb03 0241 	add.w	r2, r3, r1, lsl #1
9002b914:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
9002b918:	4b13      	ldr	r3, [pc, #76]	@ (9002b968 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9002b91a:	7855      	ldrb	r5, [r2, #1]
9002b91c:	681b      	ldr	r3, [r3, #0]
9002b91e:	f3c5 0581 	ubfx	r5, r5, #2, #2
9002b922:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
9002b926:	6833      	ldr	r3, [r6, #0]
9002b928:	69df      	ldr	r7, [r3, #28]
9002b92a:	4b10      	ldr	r3, [pc, #64]	@ (9002b96c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
9002b92c:	6818      	ldr	r0, [r3, #0]
9002b92e:	f7d9 ff23 	bl	90005778 <_ZNK8touchgfx5Texts7getTextEt>
9002b932:	6823      	ldr	r3, [r4, #0]
9002b934:	4680      	mov	r8, r0
9002b936:	4620      	mov	r0, r4
9002b938:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9002b93a:	4798      	blx	r3
9002b93c:	6823      	ldr	r3, [r4, #0]
9002b93e:	4681      	mov	r9, r0
9002b940:	4620      	mov	r0, r4
9002b942:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9002b946:	4798      	blx	r3
9002b948:	464b      	mov	r3, r9
9002b94a:	9000      	str	r0, [sp, #0]
9002b94c:	4642      	mov	r2, r8
9002b94e:	4629      	mov	r1, r5
9002b950:	4630      	mov	r0, r6
9002b952:	47b8      	blx	r7
9002b954:	b003      	add	sp, #12
9002b956:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9002b95a:	2000      	movs	r0, #0
9002b95c:	e7fa      	b.n	9002b954 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
9002b95e:	bf00      	nop
9002b960:	240245fc 	.word	0x240245fc
9002b964:	240245f8 	.word	0x240245f8
9002b968:	24024600 	.word	0x24024600
9002b96c:	24024604 	.word	0x24024604

9002b970 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
9002b970:	b40e      	push	{r1, r2, r3}
9002b972:	4b30      	ldr	r3, [pc, #192]	@ (9002ba34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
9002b974:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002b978:	881a      	ldrh	r2, [r3, #0]
9002b97a:	b09d      	sub	sp, #116	@ 0x74
9002b97c:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
9002b97e:	4604      	mov	r4, r0
9002b980:	429a      	cmp	r2, r3
9002b982:	d954      	bls.n	9002ba2e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
9002b984:	aa26      	add	r2, sp, #152	@ 0x98
9002b986:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 9002ba38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9002b98a:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 9002ba3c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
9002b98e:	9202      	str	r2, [sp, #8]
9002b990:	f8d9 2000 	ldr.w	r2, [r9]
9002b994:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9002b998:	f8d8 3000 	ldr.w	r3, [r8]
9002b99c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9002b9a0:	682b      	ldr	r3, [r5, #0]
9002b9a2:	4628      	mov	r0, r5
9002b9a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002b9a6:	4798      	blx	r3
9002b9a8:	4606      	mov	r6, r0
9002b9aa:	b207      	sxth	r7, r0
9002b9ac:	a803      	add	r0, sp, #12
9002b9ae:	f7ef ff25 	bl	9001b7fc <_ZN8touchgfx12TextProviderC1Ev>
9002b9b2:	682b      	ldr	r3, [r5, #0]
9002b9b4:	4628      	mov	r0, r5
9002b9b6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9002b9b8:	4798      	blx	r3
9002b9ba:	682b      	ldr	r3, [r5, #0]
9002b9bc:	4682      	mov	sl, r0
9002b9be:	4628      	mov	r0, r5
9002b9c0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9002b9c2:	4798      	blx	r3
9002b9c4:	4653      	mov	r3, sl
9002b9c6:	9000      	str	r0, [sp, #0]
9002b9c8:	a803      	add	r0, sp, #12
9002b9ca:	9a02      	ldr	r2, [sp, #8]
9002b9cc:	9925      	ldr	r1, [sp, #148]	@ 0x94
9002b9ce:	f7ef ff68 	bl	9001b8a2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9002b9d2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
9002b9d4:	f8d9 3000 	ldr.w	r3, [r9]
9002b9d8:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
9002b9dc:	8925      	ldrh	r5, [r4, #8]
9002b9de:	eb03 0142 	add.w	r1, r3, r2, lsl #1
9002b9e2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9002b9e6:	eba5 050c 	sub.w	r5, r5, ip
9002b9ea:	784a      	ldrb	r2, [r1, #1]
9002b9ec:	f8d8 3000 	ldr.w	r3, [r8]
9002b9f0:	b22d      	sxth	r5, r5
9002b9f2:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
9002b9f6:	f3c2 0281 	ubfx	r2, r2, #2, #2
9002b9fa:	9500      	str	r5, [sp, #0]
9002b9fc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
9002ba00:	a803      	add	r0, sp, #12
9002ba02:	f7ed fa11 	bl	90018e28 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9002ba06:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
9002ba0a:	b203      	sxth	r3, r0
9002ba0c:	18b9      	adds	r1, r7, r2
9002ba0e:	2900      	cmp	r1, #0
9002ba10:	dd0b      	ble.n	9002ba2a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
9002ba12:	3b01      	subs	r3, #1
9002ba14:	fb13 f302 	smulbb	r3, r3, r2
9002ba18:	fb16 3300 	smlabb	r3, r6, r0, r3
9002ba1c:	b21f      	sxth	r7, r3
9002ba1e:	4638      	mov	r0, r7
9002ba20:	b01d      	add	sp, #116	@ 0x74
9002ba22:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002ba26:	b003      	add	sp, #12
9002ba28:	4770      	bx	lr
9002ba2a:	2b00      	cmp	r3, #0
9002ba2c:	dcf7      	bgt.n	9002ba1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9002ba2e:	2700      	movs	r7, #0
9002ba30:	e7f5      	b.n	9002ba1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9002ba32:	bf00      	nop
9002ba34:	240245fc 	.word	0x240245fc
9002ba38:	240245f8 	.word	0x240245f8
9002ba3c:	24024600 	.word	0x24024600

9002ba40 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
9002ba40:	b538      	push	{r3, r4, r5, lr}
9002ba42:	4b0e      	ldr	r3, [pc, #56]	@ (9002ba7c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
9002ba44:	4604      	mov	r4, r0
9002ba46:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9002ba48:	881b      	ldrh	r3, [r3, #0]
9002ba4a:	429a      	cmp	r2, r3
9002ba4c:	d214      	bcs.n	9002ba78 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
9002ba4e:	6803      	ldr	r3, [r0, #0]
9002ba50:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
9002ba52:	4798      	blx	r3
9002ba54:	6823      	ldr	r3, [r4, #0]
9002ba56:	4605      	mov	r5, r0
9002ba58:	4620      	mov	r0, r4
9002ba5a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
9002ba5c:	4798      	blx	r3
9002ba5e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9002ba62:	b22d      	sxth	r5, r5
9002ba64:	4601      	mov	r1, r0
9002ba66:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9002ba6a:	bf06      	itte	eq
9002ba6c:	4602      	moveq	r2, r0
9002ba6e:	4629      	moveq	r1, r5
9002ba70:	462a      	movne	r2, r5
9002ba72:	4620      	mov	r0, r4
9002ba74:	f7eb f822 	bl	90016abc <_ZN8touchgfx8Drawable14setWidthHeightEss>
9002ba78:	bd38      	pop	{r3, r4, r5, pc}
9002ba7a:	bf00      	nop
9002ba7c:	240245fc 	.word	0x240245fc

9002ba80 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
9002ba80:	b530      	push	{r4, r5, lr}
9002ba82:	888b      	ldrh	r3, [r1, #4]
9002ba84:	b085      	sub	sp, #20
9002ba86:	4604      	mov	r4, r0
9002ba88:	8583      	strh	r3, [r0, #44]	@ 0x2c
9002ba8a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9002ba8e:	b923      	cbnz	r3, 9002ba9a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9002ba90:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9002ba94:	b90b      	cbnz	r3, 9002ba9a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9002ba96:	f7ff ffd3 	bl	9002ba40 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9002ba9a:	6823      	ldr	r3, [r4, #0]
9002ba9c:	466d      	mov	r5, sp
9002ba9e:	4621      	mov	r1, r4
9002baa0:	343c      	adds	r4, #60	@ 0x3c
9002baa2:	4628      	mov	r0, r5
9002baa4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9002baa8:	4798      	blx	r3
9002baaa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9002baae:	e884 0007 	stmia.w	r4, {r0, r1, r2}
9002bab2:	b005      	add	sp, #20
9002bab4:	bd30      	pop	{r4, r5, pc}
	...

9002bab8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
9002bab8:	4b30      	ldr	r3, [pc, #192]	@ (9002bb7c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
9002baba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9002babe:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9002bac0:	b08d      	sub	sp, #52	@ 0x34
9002bac2:	881b      	ldrh	r3, [r3, #0]
9002bac4:	4604      	mov	r4, r0
9002bac6:	460f      	mov	r7, r1
9002bac8:	4293      	cmp	r3, r2
9002baca:	d954      	bls.n	9002bb76 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
9002bacc:	4b2c      	ldr	r3, [pc, #176]	@ (9002bb80 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
9002bace:	6819      	ldr	r1, [r3, #0]
9002bad0:	eb01 0342 	add.w	r3, r1, r2, lsl #1
9002bad4:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
9002bad8:	4a2a      	ldr	r2, [pc, #168]	@ (9002bb84 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9002bada:	6812      	ldr	r2, [r2, #0]
9002badc:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
9002bae0:	2900      	cmp	r1, #0
9002bae2:	d048      	beq.n	9002bb76 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
9002bae4:	785a      	ldrb	r2, [r3, #1]
9002bae6:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
9002baea:	f3c2 0801 	ubfx	r8, r2, #0, #2
9002baee:	f3c2 0281 	ubfx	r2, r2, #2, #2
9002baf2:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
9002baf6:	4b24      	ldr	r3, [pc, #144]	@ (9002bb88 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
9002baf8:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
9002bafc:	681a      	ldr	r2, [r3, #0]
9002bafe:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
9002bb02:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
9002bb06:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
9002bb0a:	6b26      	ldr	r6, [r4, #48]	@ 0x30
9002bb0c:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
9002bb10:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
9002bb14:	9107      	str	r1, [sp, #28]
9002bb16:	f88d 8020 	strb.w	r8, [sp, #32]
9002bb1a:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
9002bb1e:	9609      	str	r6, [sp, #36]	@ 0x24
9002bb20:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
9002bb24:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
9002bb28:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
9002bb2c:	b10b      	cbz	r3, 9002bb32 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
9002bb2e:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
9002bb30:	b905      	cbnz	r5, 9002bb34 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
9002bb32:	6895      	ldr	r5, [r2, #8]
9002bb34:	ae05      	add	r6, sp, #20
9002bb36:	4621      	mov	r1, r4
9002bb38:	4630      	mov	r0, r6
9002bb3a:	f7ee fefb 	bl	9001a934 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9002bb3e:	4b13      	ldr	r3, [pc, #76]	@ (9002bb8c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
9002bb40:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
9002bb42:	6818      	ldr	r0, [r3, #0]
9002bb44:	f7d9 fe18 	bl	90005778 <_ZNK8touchgfx5Texts7getTextEt>
9002bb48:	6823      	ldr	r3, [r4, #0]
9002bb4a:	4680      	mov	r8, r0
9002bb4c:	4620      	mov	r0, r4
9002bb4e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9002bb50:	4798      	blx	r3
9002bb52:	6823      	ldr	r3, [r4, #0]
9002bb54:	4681      	mov	r9, r0
9002bb56:	4620      	mov	r0, r4
9002bb58:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9002bb5c:	4798      	blx	r3
9002bb5e:	ab07      	add	r3, sp, #28
9002bb60:	f8cd 8004 	str.w	r8, [sp, #4]
9002bb64:	9300      	str	r3, [sp, #0]
9002bb66:	463b      	mov	r3, r7
9002bb68:	e9cd 9002 	strd	r9, r0, [sp, #8]
9002bb6c:	4628      	mov	r0, r5
9002bb6e:	e896 0006 	ldmia.w	r6, {r1, r2}
9002bb72:	f7d9 fdb1 	bl	900056d8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9002bb76:	b00d      	add	sp, #52	@ 0x34
9002bb78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9002bb7c:	240245fc 	.word	0x240245fc
9002bb80:	240245f8 	.word	0x240245f8
9002bb84:	24024600 	.word	0x24024600
9002bb88:	240245a0 	.word	0x240245a0
9002bb8c:	24024604 	.word	0x24024604

9002bb90 <__aeabi_atexit>:
9002bb90:	460b      	mov	r3, r1
9002bb92:	4601      	mov	r1, r0
9002bb94:	4618      	mov	r0, r3
9002bb96:	f000 bc59 	b.w	9002c44c <__cxa_atexit>

9002bb9a <_ZdlPvj>:
9002bb9a:	f000 b812 	b.w	9002bbc2 <_ZdlPv>

9002bb9e <__cxa_guard_acquire>:
9002bb9e:	6802      	ldr	r2, [r0, #0]
9002bba0:	07d2      	lsls	r2, r2, #31
9002bba2:	4603      	mov	r3, r0
9002bba4:	d405      	bmi.n	9002bbb2 <__cxa_guard_acquire+0x14>
9002bba6:	7842      	ldrb	r2, [r0, #1]
9002bba8:	b102      	cbz	r2, 9002bbac <__cxa_guard_acquire+0xe>
9002bbaa:	deff      	udf	#255	@ 0xff
9002bbac:	2001      	movs	r0, #1
9002bbae:	7058      	strb	r0, [r3, #1]
9002bbb0:	4770      	bx	lr
9002bbb2:	2000      	movs	r0, #0
9002bbb4:	4770      	bx	lr

9002bbb6 <__cxa_guard_release>:
9002bbb6:	2301      	movs	r3, #1
9002bbb8:	6003      	str	r3, [r0, #0]
9002bbba:	4770      	bx	lr

9002bbbc <__cxa_pure_virtual>:
9002bbbc:	b508      	push	{r3, lr}
9002bbbe:	f000 f80f 	bl	9002bbe0 <_ZSt9terminatev>

9002bbc2 <_ZdlPv>:
9002bbc2:	f000 bb8d 	b.w	9002c2e0 <free>

9002bbc6 <_ZN10__cxxabiv111__terminateEPFvvE>:
9002bbc6:	b508      	push	{r3, lr}
9002bbc8:	4780      	blx	r0
9002bbca:	f000 fb56 	bl	9002c27a <abort>
	...

9002bbd0 <_ZSt13get_terminatev>:
9002bbd0:	4b02      	ldr	r3, [pc, #8]	@ (9002bbdc <_ZSt13get_terminatev+0xc>)
9002bbd2:	6818      	ldr	r0, [r3, #0]
9002bbd4:	f3bf 8f5b 	dmb	ish
9002bbd8:	4770      	bx	lr
9002bbda:	bf00      	nop
9002bbdc:	24000328 	.word	0x24000328

9002bbe0 <_ZSt9terminatev>:
9002bbe0:	b508      	push	{r3, lr}
9002bbe2:	f7ff fff5 	bl	9002bbd0 <_ZSt13get_terminatev>
9002bbe6:	f7ff ffee 	bl	9002bbc6 <_ZN10__cxxabiv111__terminateEPFvvE>

9002bbea <atan2f>:
9002bbea:	f000 b9cd 	b.w	9002bf88 <__ieee754_atan2f>
	...

9002bbf0 <sqrtf>:
9002bbf0:	b508      	push	{r3, lr}
9002bbf2:	ed2d 8b02 	vpush	{d8}
9002bbf6:	eeb0 8a40 	vmov.f32	s16, s0
9002bbfa:	f000 f9c2 	bl	9002bf82 <__ieee754_sqrtf>
9002bbfe:	eeb4 8a48 	vcmp.f32	s16, s16
9002bc02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002bc06:	d60c      	bvs.n	9002bc22 <sqrtf+0x32>
9002bc08:	eddf 8a07 	vldr	s17, [pc, #28]	@ 9002bc28 <sqrtf+0x38>
9002bc0c:	eeb4 8ae8 	vcmpe.f32	s16, s17
9002bc10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002bc14:	d505      	bpl.n	9002bc22 <sqrtf+0x32>
9002bc16:	f000 fe87 	bl	9002c928 <__errno>
9002bc1a:	ee88 0aa8 	vdiv.f32	s0, s17, s17
9002bc1e:	2321      	movs	r3, #33	@ 0x21
9002bc20:	6003      	str	r3, [r0, #0]
9002bc22:	ecbd 8b02 	vpop	{d8}
9002bc26:	bd08      	pop	{r3, pc}
9002bc28:	00000000 	.word	0x00000000

9002bc2c <sinf_poly>:
9002bc2c:	07cb      	lsls	r3, r1, #31
9002bc2e:	d412      	bmi.n	9002bc56 <sinf_poly+0x2a>
9002bc30:	ee21 5b00 	vmul.f64	d5, d1, d0
9002bc34:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002bc38:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002bc3c:	eea6 7b01 	vfma.f64	d7, d6, d1
9002bc40:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002bc44:	ee21 1b05 	vmul.f64	d1, d1, d5
9002bc48:	eea6 0b05 	vfma.f64	d0, d6, d5
9002bc4c:	eea7 0b01 	vfma.f64	d0, d7, d1
9002bc50:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002bc54:	4770      	bx	lr
9002bc56:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002bc5a:	ee21 5b01 	vmul.f64	d5, d1, d1
9002bc5e:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002bc62:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002bc66:	eea1 7b06 	vfma.f64	d7, d1, d6
9002bc6a:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002bc6e:	eea1 0b06 	vfma.f64	d0, d1, d6
9002bc72:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002bc76:	ee21 1b05 	vmul.f64	d1, d1, d5
9002bc7a:	eea5 0b06 	vfma.f64	d0, d5, d6
9002bc7e:	e7e5      	b.n	9002bc4c <sinf_poly+0x20>

9002bc80 <sinf>:
9002bc80:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002bc82:	ee10 4a10 	vmov	r4, s0
9002bc86:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002bc8a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002bc8e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002bc92:	eef0 7a40 	vmov.f32	s15, s0
9002bc96:	ea4f 5214 	mov.w	r2, r4, lsr #20
9002bc9a:	d218      	bcs.n	9002bcce <sinf+0x4e>
9002bc9c:	ee26 1b06 	vmul.f64	d1, d6, d6
9002bca0:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002bca4:	d20a      	bcs.n	9002bcbc <sinf+0x3c>
9002bca6:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
9002bcaa:	d103      	bne.n	9002bcb4 <sinf+0x34>
9002bcac:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002bcb0:	ed8d 1a01 	vstr	s2, [sp, #4]
9002bcb4:	eeb0 0a67 	vmov.f32	s0, s15
9002bcb8:	b003      	add	sp, #12
9002bcba:	bd30      	pop	{r4, r5, pc}
9002bcbc:	483a      	ldr	r0, [pc, #232]	@ (9002bda8 <sinf+0x128>)
9002bcbe:	eeb0 0b46 	vmov.f64	d0, d6
9002bcc2:	2100      	movs	r1, #0
9002bcc4:	b003      	add	sp, #12
9002bcc6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002bcca:	f7ff bfaf 	b.w	9002bc2c <sinf_poly>
9002bcce:	f240 422e 	movw	r2, #1070	@ 0x42e
9002bcd2:	4293      	cmp	r3, r2
9002bcd4:	d824      	bhi.n	9002bd20 <sinf+0xa0>
9002bcd6:	4b34      	ldr	r3, [pc, #208]	@ (9002bda8 <sinf+0x128>)
9002bcd8:	ed93 7b08 	vldr	d7, [r3, #32]
9002bcdc:	ee26 7b07 	vmul.f64	d7, d6, d7
9002bce0:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002bce4:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002bce8:	ee17 1a90 	vmov	r1, s15
9002bcec:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002bcf0:	1609      	asrs	r1, r1, #24
9002bcf2:	ee07 1a90 	vmov	s15, r1
9002bcf6:	f001 0203 	and.w	r2, r1, #3
9002bcfa:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002bcfe:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002bd02:	ed92 0b00 	vldr	d0, [r2]
9002bd06:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
9002bd0a:	f011 0f02 	tst.w	r1, #2
9002bd0e:	eea5 6b47 	vfms.f64	d6, d5, d7
9002bd12:	bf08      	it	eq
9002bd14:	4618      	moveq	r0, r3
9002bd16:	ee26 1b06 	vmul.f64	d1, d6, d6
9002bd1a:	ee20 0b06 	vmul.f64	d0, d0, d6
9002bd1e:	e7d1      	b.n	9002bcc4 <sinf+0x44>
9002bd20:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002bd24:	d237      	bcs.n	9002bd96 <sinf+0x116>
9002bd26:	4921      	ldr	r1, [pc, #132]	@ (9002bdac <sinf+0x12c>)
9002bd28:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002bd2c:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002bd30:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002bd34:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002bd38:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002bd3c:	6a10      	ldr	r0, [r2, #32]
9002bd3e:	6912      	ldr	r2, [r2, #16]
9002bd40:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002bd44:	40ab      	lsls	r3, r5
9002bd46:	fba0 5003 	umull	r5, r0, r0, r3
9002bd4a:	4359      	muls	r1, r3
9002bd4c:	fbe3 0102 	umlal	r0, r1, r3, r2
9002bd50:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002bd54:	0f9d      	lsrs	r5, r3, #30
9002bd56:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002bd5a:	1ac9      	subs	r1, r1, r3
9002bd5c:	f7d4 fca6 	bl	900006ac <__aeabi_l2d>
9002bd60:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002bd64:	4b10      	ldr	r3, [pc, #64]	@ (9002bda8 <sinf+0x128>)
9002bd66:	f004 0203 	and.w	r2, r4, #3
9002bd6a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002bd6e:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 9002bda0 <sinf+0x120>
9002bd72:	ed92 0b00 	vldr	d0, [r2]
9002bd76:	ec41 0b17 	vmov	d7, r0, r1
9002bd7a:	f014 0f02 	tst.w	r4, #2
9002bd7e:	ee27 7b06 	vmul.f64	d7, d7, d6
9002bd82:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002bd86:	4629      	mov	r1, r5
9002bd88:	bf08      	it	eq
9002bd8a:	4618      	moveq	r0, r3
9002bd8c:	ee27 1b07 	vmul.f64	d1, d7, d7
9002bd90:	ee20 0b07 	vmul.f64	d0, d0, d7
9002bd94:	e796      	b.n	9002bcc4 <sinf+0x44>
9002bd96:	b003      	add	sp, #12
9002bd98:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002bd9c:	f000 b8e2 	b.w	9002bf64 <__math_invalidf>
9002bda0:	54442d18 	.word	0x54442d18
9002bda4:	3c1921fb 	.word	0x3c1921fb
9002bda8:	90030a28 	.word	0x90030a28
9002bdac:	900309c8 	.word	0x900309c8

9002bdb0 <sinf_poly>:
9002bdb0:	07cb      	lsls	r3, r1, #31
9002bdb2:	d412      	bmi.n	9002bdda <sinf_poly+0x2a>
9002bdb4:	ee21 5b00 	vmul.f64	d5, d1, d0
9002bdb8:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002bdbc:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002bdc0:	eea6 7b01 	vfma.f64	d7, d6, d1
9002bdc4:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002bdc8:	ee21 1b05 	vmul.f64	d1, d1, d5
9002bdcc:	eea6 0b05 	vfma.f64	d0, d6, d5
9002bdd0:	eea7 0b01 	vfma.f64	d0, d7, d1
9002bdd4:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002bdd8:	4770      	bx	lr
9002bdda:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002bdde:	ee21 5b01 	vmul.f64	d5, d1, d1
9002bde2:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002bde6:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002bdea:	eea1 7b06 	vfma.f64	d7, d1, d6
9002bdee:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002bdf2:	eea1 0b06 	vfma.f64	d0, d1, d6
9002bdf6:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002bdfa:	ee21 1b05 	vmul.f64	d1, d1, d5
9002bdfe:	eea5 0b06 	vfma.f64	d0, d5, d6
9002be02:	e7e5      	b.n	9002bdd0 <sinf_poly+0x20>
9002be04:	0000      	movs	r0, r0
	...

9002be08 <cosf>:
9002be08:	b538      	push	{r3, r4, r5, lr}
9002be0a:	ee10 4a10 	vmov	r4, s0
9002be0e:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002be12:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002be16:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
9002be1a:	d21f      	bcs.n	9002be5c <cosf+0x54>
9002be1c:	ee27 7b07 	vmul.f64	d7, d7, d7
9002be20:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002be24:	f0c0 8082 	bcc.w	9002bf2c <cosf+0x124>
9002be28:	ee27 4b07 	vmul.f64	d4, d7, d7
9002be2c:	4b44      	ldr	r3, [pc, #272]	@ (9002bf40 <cosf+0x138>)
9002be2e:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
9002be32:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
9002be36:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
9002be3a:	eea7 6b05 	vfma.f64	d6, d7, d5
9002be3e:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
9002be42:	eea7 0b05 	vfma.f64	d0, d7, d5
9002be46:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002be4a:	ee27 7b04 	vmul.f64	d7, d7, d4
9002be4e:	eea4 0b05 	vfma.f64	d0, d4, d5
9002be52:	eea6 0b07 	vfma.f64	d0, d6, d7
9002be56:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002be5a:	bd38      	pop	{r3, r4, r5, pc}
9002be5c:	f240 422e 	movw	r2, #1070	@ 0x42e
9002be60:	4293      	cmp	r3, r2
9002be62:	d829      	bhi.n	9002beb8 <cosf+0xb0>
9002be64:	4b36      	ldr	r3, [pc, #216]	@ (9002bf40 <cosf+0x138>)
9002be66:	ed93 6b08 	vldr	d6, [r3, #32]
9002be6a:	ee27 6b06 	vmul.f64	d6, d7, d6
9002be6e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
9002be72:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002be76:	ee16 1a90 	vmov	r1, s13
9002be7a:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002be7e:	1609      	asrs	r1, r1, #24
9002be80:	ee06 1a90 	vmov	s13, r1
9002be84:	f001 0203 	and.w	r2, r1, #3
9002be88:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002be8c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
9002be90:	ed92 0b00 	vldr	d0, [r2]
9002be94:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
9002be98:	f011 0f02 	tst.w	r1, #2
9002be9c:	f081 0101 	eor.w	r1, r1, #1
9002bea0:	eea5 7b46 	vfms.f64	d7, d5, d6
9002bea4:	bf08      	it	eq
9002bea6:	4618      	moveq	r0, r3
9002bea8:	ee27 1b07 	vmul.f64	d1, d7, d7
9002beac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002beb0:	ee20 0b07 	vmul.f64	d0, d0, d7
9002beb4:	f7ff bf7c 	b.w	9002bdb0 <sinf_poly>
9002beb8:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002bebc:	d232      	bcs.n	9002bf24 <cosf+0x11c>
9002bebe:	4921      	ldr	r1, [pc, #132]	@ (9002bf44 <cosf+0x13c>)
9002bec0:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002bec4:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002bec8:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002becc:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002bed0:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002bed4:	6a10      	ldr	r0, [r2, #32]
9002bed6:	6912      	ldr	r2, [r2, #16]
9002bed8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002bedc:	40ab      	lsls	r3, r5
9002bede:	fba0 5003 	umull	r5, r0, r0, r3
9002bee2:	4359      	muls	r1, r3
9002bee4:	fbe3 0102 	umlal	r0, r1, r3, r2
9002bee8:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002beec:	0f9d      	lsrs	r5, r3, #30
9002beee:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002bef2:	1ac9      	subs	r1, r1, r3
9002bef4:	f7d4 fbda 	bl	900006ac <__aeabi_l2d>
9002bef8:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002befc:	4b10      	ldr	r3, [pc, #64]	@ (9002bf40 <cosf+0x138>)
9002befe:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 9002bf38 <cosf+0x130>
9002bf02:	ec41 0b17 	vmov	d7, r0, r1
9002bf06:	f004 0203 	and.w	r2, r4, #3
9002bf0a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002bf0e:	ed92 0b00 	vldr	d0, [r2]
9002bf12:	ee27 7b06 	vmul.f64	d7, d7, d6
9002bf16:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002bf1a:	f014 0f02 	tst.w	r4, #2
9002bf1e:	f085 0101 	eor.w	r1, r5, #1
9002bf22:	e7bf      	b.n	9002bea4 <cosf+0x9c>
9002bf24:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002bf28:	f000 b81c 	b.w	9002bf64 <__math_invalidf>
9002bf2c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
9002bf30:	e793      	b.n	9002be5a <cosf+0x52>
9002bf32:	bf00      	nop
9002bf34:	f3af 8000 	nop.w
9002bf38:	54442d18 	.word	0x54442d18
9002bf3c:	3c1921fb 	.word	0x3c1921fb
9002bf40:	90030a28 	.word	0x90030a28
9002bf44:	900309c8 	.word	0x900309c8

9002bf48 <with_errnof>:
9002bf48:	b510      	push	{r4, lr}
9002bf4a:	ed2d 8b02 	vpush	{d8}
9002bf4e:	eeb0 8a40 	vmov.f32	s16, s0
9002bf52:	4604      	mov	r4, r0
9002bf54:	f000 fce8 	bl	9002c928 <__errno>
9002bf58:	eeb0 0a48 	vmov.f32	s0, s16
9002bf5c:	ecbd 8b02 	vpop	{d8}
9002bf60:	6004      	str	r4, [r0, #0]
9002bf62:	bd10      	pop	{r4, pc}

9002bf64 <__math_invalidf>:
9002bf64:	eef0 7a40 	vmov.f32	s15, s0
9002bf68:	ee30 7a40 	vsub.f32	s14, s0, s0
9002bf6c:	eef4 7a67 	vcmp.f32	s15, s15
9002bf70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002bf74:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002bf78:	d602      	bvs.n	9002bf80 <__math_invalidf+0x1c>
9002bf7a:	2021      	movs	r0, #33	@ 0x21
9002bf7c:	f7ff bfe4 	b.w	9002bf48 <with_errnof>
9002bf80:	4770      	bx	lr

9002bf82 <__ieee754_sqrtf>:
9002bf82:	eeb1 0ac0 	vsqrt.f32	s0, s0
9002bf86:	4770      	bx	lr

9002bf88 <__ieee754_atan2f>:
9002bf88:	ee10 2a90 	vmov	r2, s1
9002bf8c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
9002bf90:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002bf94:	b510      	push	{r4, lr}
9002bf96:	eef0 7a40 	vmov.f32	s15, s0
9002bf9a:	d806      	bhi.n	9002bfaa <__ieee754_atan2f+0x22>
9002bf9c:	ee10 0a10 	vmov	r0, s0
9002bfa0:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
9002bfa4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002bfa8:	d904      	bls.n	9002bfb4 <__ieee754_atan2f+0x2c>
9002bfaa:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002bfae:	eeb0 0a67 	vmov.f32	s0, s15
9002bfb2:	bd10      	pop	{r4, pc}
9002bfb4:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
9002bfb8:	d103      	bne.n	9002bfc2 <__ieee754_atan2f+0x3a>
9002bfba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002bfbe:	f000 b881 	b.w	9002c0c4 <atanf>
9002bfc2:	1794      	asrs	r4, r2, #30
9002bfc4:	f004 0402 	and.w	r4, r4, #2
9002bfc8:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
9002bfcc:	b93b      	cbnz	r3, 9002bfde <__ieee754_atan2f+0x56>
9002bfce:	2c02      	cmp	r4, #2
9002bfd0:	d05c      	beq.n	9002c08c <__ieee754_atan2f+0x104>
9002bfd2:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002c0a0 <__ieee754_atan2f+0x118>
9002bfd6:	2c03      	cmp	r4, #3
9002bfd8:	fe47 7a00 	vseleq.f32	s15, s14, s0
9002bfdc:	e7e7      	b.n	9002bfae <__ieee754_atan2f+0x26>
9002bfde:	b939      	cbnz	r1, 9002bff0 <__ieee754_atan2f+0x68>
9002bfe0:	eddf 7a30 	vldr	s15, [pc, #192]	@ 9002c0a4 <__ieee754_atan2f+0x11c>
9002bfe4:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002c0a8 <__ieee754_atan2f+0x120>
9002bfe8:	2800      	cmp	r0, #0
9002bfea:	fe67 7a87 	vselge.f32	s15, s15, s14
9002bfee:	e7de      	b.n	9002bfae <__ieee754_atan2f+0x26>
9002bff0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002bff4:	d110      	bne.n	9002c018 <__ieee754_atan2f+0x90>
9002bff6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002bffa:	f104 34ff 	add.w	r4, r4, #4294967295
9002bffe:	d107      	bne.n	9002c010 <__ieee754_atan2f+0x88>
9002c000:	2c02      	cmp	r4, #2
9002c002:	d846      	bhi.n	9002c092 <__ieee754_atan2f+0x10a>
9002c004:	4b29      	ldr	r3, [pc, #164]	@ (9002c0ac <__ieee754_atan2f+0x124>)
9002c006:	eb03 0384 	add.w	r3, r3, r4, lsl #2
9002c00a:	edd3 7a00 	vldr	s15, [r3]
9002c00e:	e7ce      	b.n	9002bfae <__ieee754_atan2f+0x26>
9002c010:	2c02      	cmp	r4, #2
9002c012:	d841      	bhi.n	9002c098 <__ieee754_atan2f+0x110>
9002c014:	4b26      	ldr	r3, [pc, #152]	@ (9002c0b0 <__ieee754_atan2f+0x128>)
9002c016:	e7f6      	b.n	9002c006 <__ieee754_atan2f+0x7e>
9002c018:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002c01c:	d0e0      	beq.n	9002bfe0 <__ieee754_atan2f+0x58>
9002c01e:	1a5b      	subs	r3, r3, r1
9002c020:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
9002c024:	ea4f 51e3 	mov.w	r1, r3, asr #23
9002c028:	da1a      	bge.n	9002c060 <__ieee754_atan2f+0xd8>
9002c02a:	2a00      	cmp	r2, #0
9002c02c:	da01      	bge.n	9002c032 <__ieee754_atan2f+0xaa>
9002c02e:	313c      	adds	r1, #60	@ 0x3c
9002c030:	db19      	blt.n	9002c066 <__ieee754_atan2f+0xde>
9002c032:	ee87 0aa0 	vdiv.f32	s0, s15, s1
9002c036:	f000 f919 	bl	9002c26c <fabsf>
9002c03a:	f000 f843 	bl	9002c0c4 <atanf>
9002c03e:	eef0 7a40 	vmov.f32	s15, s0
9002c042:	2c01      	cmp	r4, #1
9002c044:	d012      	beq.n	9002c06c <__ieee754_atan2f+0xe4>
9002c046:	2c02      	cmp	r4, #2
9002c048:	d017      	beq.n	9002c07a <__ieee754_atan2f+0xf2>
9002c04a:	2c00      	cmp	r4, #0
9002c04c:	d0af      	beq.n	9002bfae <__ieee754_atan2f+0x26>
9002c04e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002c0b4 <__ieee754_atan2f+0x12c>
9002c052:	ee77 7a87 	vadd.f32	s15, s15, s14
9002c056:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 9002c0b8 <__ieee754_atan2f+0x130>
9002c05a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002c05e:	e7a6      	b.n	9002bfae <__ieee754_atan2f+0x26>
9002c060:	eddf 7a10 	vldr	s15, [pc, #64]	@ 9002c0a4 <__ieee754_atan2f+0x11c>
9002c064:	e7ed      	b.n	9002c042 <__ieee754_atan2f+0xba>
9002c066:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002c0bc <__ieee754_atan2f+0x134>
9002c06a:	e7ea      	b.n	9002c042 <__ieee754_atan2f+0xba>
9002c06c:	ee17 3a90 	vmov	r3, s15
9002c070:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002c074:	ee07 3a90 	vmov	s15, r3
9002c078:	e799      	b.n	9002bfae <__ieee754_atan2f+0x26>
9002c07a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002c0b4 <__ieee754_atan2f+0x12c>
9002c07e:	ee77 7a87 	vadd.f32	s15, s15, s14
9002c082:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 9002c0b8 <__ieee754_atan2f+0x130>
9002c086:	ee77 7a67 	vsub.f32	s15, s14, s15
9002c08a:	e790      	b.n	9002bfae <__ieee754_atan2f+0x26>
9002c08c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 9002c0b8 <__ieee754_atan2f+0x130>
9002c090:	e78d      	b.n	9002bfae <__ieee754_atan2f+0x26>
9002c092:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 9002c0c0 <__ieee754_atan2f+0x138>
9002c096:	e78a      	b.n	9002bfae <__ieee754_atan2f+0x26>
9002c098:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002c0bc <__ieee754_atan2f+0x134>
9002c09c:	e787      	b.n	9002bfae <__ieee754_atan2f+0x26>
9002c09e:	bf00      	nop
9002c0a0:	c0490fdb 	.word	0xc0490fdb
9002c0a4:	3fc90fdb 	.word	0x3fc90fdb
9002c0a8:	bfc90fdb 	.word	0xbfc90fdb
9002c0ac:	90030b14 	.word	0x90030b14
9002c0b0:	90030b08 	.word	0x90030b08
9002c0b4:	33bbbd2e 	.word	0x33bbbd2e
9002c0b8:	40490fdb 	.word	0x40490fdb
9002c0bc:	00000000 	.word	0x00000000
9002c0c0:	3f490fdb 	.word	0x3f490fdb

9002c0c4 <atanf>:
9002c0c4:	b538      	push	{r3, r4, r5, lr}
9002c0c6:	ee10 5a10 	vmov	r5, s0
9002c0ca:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002c0ce:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
9002c0d2:	eef0 7a40 	vmov.f32	s15, s0
9002c0d6:	d30f      	bcc.n	9002c0f8 <atanf+0x34>
9002c0d8:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
9002c0dc:	d904      	bls.n	9002c0e8 <atanf+0x24>
9002c0de:	ee70 7a00 	vadd.f32	s15, s0, s0
9002c0e2:	eeb0 0a67 	vmov.f32	s0, s15
9002c0e6:	bd38      	pop	{r3, r4, r5, pc}
9002c0e8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 9002c220 <atanf+0x15c>
9002c0ec:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 9002c224 <atanf+0x160>
9002c0f0:	2d00      	cmp	r5, #0
9002c0f2:	fe77 7a27 	vselgt.f32	s15, s14, s15
9002c0f6:	e7f4      	b.n	9002c0e2 <atanf+0x1e>
9002c0f8:	4b4b      	ldr	r3, [pc, #300]	@ (9002c228 <atanf+0x164>)
9002c0fa:	429c      	cmp	r4, r3
9002c0fc:	d810      	bhi.n	9002c120 <atanf+0x5c>
9002c0fe:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
9002c102:	d20a      	bcs.n	9002c11a <atanf+0x56>
9002c104:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002c22c <atanf+0x168>
9002c108:	ee30 7a07 	vadd.f32	s14, s0, s14
9002c10c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002c110:	eeb4 7ae6 	vcmpe.f32	s14, s13
9002c114:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002c118:	dce3      	bgt.n	9002c0e2 <atanf+0x1e>
9002c11a:	f04f 33ff 	mov.w	r3, #4294967295
9002c11e:	e013      	b.n	9002c148 <atanf+0x84>
9002c120:	f000 f8a4 	bl	9002c26c <fabsf>
9002c124:	4b42      	ldr	r3, [pc, #264]	@ (9002c230 <atanf+0x16c>)
9002c126:	429c      	cmp	r4, r3
9002c128:	d84f      	bhi.n	9002c1ca <atanf+0x106>
9002c12a:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002c12e:	429c      	cmp	r4, r3
9002c130:	d841      	bhi.n	9002c1b6 <atanf+0xf2>
9002c132:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
9002c136:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002c13a:	eea0 7a27 	vfma.f32	s14, s0, s15
9002c13e:	2300      	movs	r3, #0
9002c140:	ee30 0a27 	vadd.f32	s0, s0, s15
9002c144:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002c148:	1c5a      	adds	r2, r3, #1
9002c14a:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002c14e:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 9002c234 <atanf+0x170>
9002c152:	eddf 5a39 	vldr	s11, [pc, #228]	@ 9002c238 <atanf+0x174>
9002c156:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002c23c <atanf+0x178>
9002c15a:	ee66 6a06 	vmul.f32	s13, s12, s12
9002c15e:	eee6 5a87 	vfma.f32	s11, s13, s14
9002c162:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 9002c240 <atanf+0x17c>
9002c166:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002c16a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 9002c244 <atanf+0x180>
9002c16e:	eee7 5a26 	vfma.f32	s11, s14, s13
9002c172:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 9002c248 <atanf+0x184>
9002c176:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002c17a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002c24c <atanf+0x188>
9002c17e:	eee7 5a26 	vfma.f32	s11, s14, s13
9002c182:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002c250 <atanf+0x18c>
9002c186:	eea6 5a87 	vfma.f32	s10, s13, s14
9002c18a:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 9002c254 <atanf+0x190>
9002c18e:	eea5 7a26 	vfma.f32	s14, s10, s13
9002c192:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 9002c258 <atanf+0x194>
9002c196:	eea7 5a26 	vfma.f32	s10, s14, s13
9002c19a:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002c25c <atanf+0x198>
9002c19e:	eea5 7a26 	vfma.f32	s14, s10, s13
9002c1a2:	ee27 7a26 	vmul.f32	s14, s14, s13
9002c1a6:	eea5 7a86 	vfma.f32	s14, s11, s12
9002c1aa:	ee27 7a87 	vmul.f32	s14, s15, s14
9002c1ae:	d121      	bne.n	9002c1f4 <atanf+0x130>
9002c1b0:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002c1b4:	e795      	b.n	9002c0e2 <atanf+0x1e>
9002c1b6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002c1ba:	ee30 7a67 	vsub.f32	s14, s0, s15
9002c1be:	ee30 0a27 	vadd.f32	s0, s0, s15
9002c1c2:	2301      	movs	r3, #1
9002c1c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002c1c8:	e7be      	b.n	9002c148 <atanf+0x84>
9002c1ca:	4b25      	ldr	r3, [pc, #148]	@ (9002c260 <atanf+0x19c>)
9002c1cc:	429c      	cmp	r4, r3
9002c1ce:	d80b      	bhi.n	9002c1e8 <atanf+0x124>
9002c1d0:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
9002c1d4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002c1d8:	eea0 7a27 	vfma.f32	s14, s0, s15
9002c1dc:	2302      	movs	r3, #2
9002c1de:	ee70 6a67 	vsub.f32	s13, s0, s15
9002c1e2:	eec6 7a87 	vdiv.f32	s15, s13, s14
9002c1e6:	e7af      	b.n	9002c148 <atanf+0x84>
9002c1e8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002c1ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002c1f0:	2303      	movs	r3, #3
9002c1f2:	e7a9      	b.n	9002c148 <atanf+0x84>
9002c1f4:	4a1b      	ldr	r2, [pc, #108]	@ (9002c264 <atanf+0x1a0>)
9002c1f6:	491c      	ldr	r1, [pc, #112]	@ (9002c268 <atanf+0x1a4>)
9002c1f8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9002c1fc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9002c200:	edd3 6a00 	vldr	s13, [r3]
9002c204:	ee37 7a66 	vsub.f32	s14, s14, s13
9002c208:	2d00      	cmp	r5, #0
9002c20a:	ee37 7a67 	vsub.f32	s14, s14, s15
9002c20e:	edd2 7a00 	vldr	s15, [r2]
9002c212:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002c216:	bfb8      	it	lt
9002c218:	eef1 7a67 	vneglt.f32	s15, s15
9002c21c:	e761      	b.n	9002c0e2 <atanf+0x1e>
9002c21e:	bf00      	nop
9002c220:	bfc90fdb 	.word	0xbfc90fdb
9002c224:	3fc90fdb 	.word	0x3fc90fdb
9002c228:	3edfffff 	.word	0x3edfffff
9002c22c:	7149f2ca 	.word	0x7149f2ca
9002c230:	3f97ffff 	.word	0x3f97ffff
9002c234:	3c8569d7 	.word	0x3c8569d7
9002c238:	3d4bda59 	.word	0x3d4bda59
9002c23c:	bd6ef16b 	.word	0xbd6ef16b
9002c240:	3d886b35 	.word	0x3d886b35
9002c244:	3dba2e6e 	.word	0x3dba2e6e
9002c248:	3e124925 	.word	0x3e124925
9002c24c:	3eaaaaab 	.word	0x3eaaaaab
9002c250:	bd15a221 	.word	0xbd15a221
9002c254:	bd9d8795 	.word	0xbd9d8795
9002c258:	bde38e38 	.word	0xbde38e38
9002c25c:	be4ccccd 	.word	0xbe4ccccd
9002c260:	401bffff 	.word	0x401bffff
9002c264:	90030b30 	.word	0x90030b30
9002c268:	90030b20 	.word	0x90030b20

9002c26c <fabsf>:
9002c26c:	ee10 3a10 	vmov	r3, s0
9002c270:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9002c274:	ee00 3a10 	vmov	s0, r3
9002c278:	4770      	bx	lr

9002c27a <abort>:
9002c27a:	b508      	push	{r3, lr}
9002c27c:	2006      	movs	r0, #6
9002c27e:	f000 fae1 	bl	9002c844 <raise>
9002c282:	2001      	movs	r0, #1
9002c284:	f7d8 fc46 	bl	90004b14 <_exit>

9002c288 <__assert_func>:
9002c288:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002c28a:	4614      	mov	r4, r2
9002c28c:	461a      	mov	r2, r3
9002c28e:	4b09      	ldr	r3, [pc, #36]	@ (9002c2b4 <__assert_func+0x2c>)
9002c290:	681b      	ldr	r3, [r3, #0]
9002c292:	4605      	mov	r5, r0
9002c294:	68d8      	ldr	r0, [r3, #12]
9002c296:	b954      	cbnz	r4, 9002c2ae <__assert_func+0x26>
9002c298:	4b07      	ldr	r3, [pc, #28]	@ (9002c2b8 <__assert_func+0x30>)
9002c29a:	461c      	mov	r4, r3
9002c29c:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002c2a0:	9100      	str	r1, [sp, #0]
9002c2a2:	462b      	mov	r3, r5
9002c2a4:	4905      	ldr	r1, [pc, #20]	@ (9002c2bc <__assert_func+0x34>)
9002c2a6:	f000 f983 	bl	9002c5b0 <fiprintf>
9002c2aa:	f7ff ffe6 	bl	9002c27a <abort>
9002c2ae:	4b04      	ldr	r3, [pc, #16]	@ (9002c2c0 <__assert_func+0x38>)
9002c2b0:	e7f4      	b.n	9002c29c <__assert_func+0x14>
9002c2b2:	bf00      	nop
9002c2b4:	24000338 	.word	0x24000338
9002c2b8:	90030b7b 	.word	0x90030b7b
9002c2bc:	90030b4d 	.word	0x90030b4d
9002c2c0:	90030b40 	.word	0x90030b40

9002c2c4 <atexit>:
9002c2c4:	2300      	movs	r3, #0
9002c2c6:	4601      	mov	r1, r0
9002c2c8:	461a      	mov	r2, r3
9002c2ca:	4618      	mov	r0, r3
9002c2cc:	f000 bb68 	b.w	9002c9a0 <__register_exitproc>

9002c2d0 <malloc>:
9002c2d0:	4b02      	ldr	r3, [pc, #8]	@ (9002c2dc <malloc+0xc>)
9002c2d2:	4601      	mov	r1, r0
9002c2d4:	6818      	ldr	r0, [r3, #0]
9002c2d6:	f000 b82d 	b.w	9002c334 <_malloc_r>
9002c2da:	bf00      	nop
9002c2dc:	24000338 	.word	0x24000338

9002c2e0 <free>:
9002c2e0:	4b02      	ldr	r3, [pc, #8]	@ (9002c2ec <free+0xc>)
9002c2e2:	4601      	mov	r1, r0
9002c2e4:	6818      	ldr	r0, [r3, #0]
9002c2e6:	f000 bbb7 	b.w	9002ca58 <_free_r>
9002c2ea:	bf00      	nop
9002c2ec:	24000338 	.word	0x24000338

9002c2f0 <sbrk_aligned>:
9002c2f0:	b570      	push	{r4, r5, r6, lr}
9002c2f2:	4e0f      	ldr	r6, [pc, #60]	@ (9002c330 <sbrk_aligned+0x40>)
9002c2f4:	460c      	mov	r4, r1
9002c2f6:	6831      	ldr	r1, [r6, #0]
9002c2f8:	4605      	mov	r5, r0
9002c2fa:	b911      	cbnz	r1, 9002c302 <sbrk_aligned+0x12>
9002c2fc:	f000 faf2 	bl	9002c8e4 <_sbrk_r>
9002c300:	6030      	str	r0, [r6, #0]
9002c302:	4621      	mov	r1, r4
9002c304:	4628      	mov	r0, r5
9002c306:	f000 faed 	bl	9002c8e4 <_sbrk_r>
9002c30a:	1c43      	adds	r3, r0, #1
9002c30c:	d103      	bne.n	9002c316 <sbrk_aligned+0x26>
9002c30e:	f04f 34ff 	mov.w	r4, #4294967295
9002c312:	4620      	mov	r0, r4
9002c314:	bd70      	pop	{r4, r5, r6, pc}
9002c316:	1cc4      	adds	r4, r0, #3
9002c318:	f024 0403 	bic.w	r4, r4, #3
9002c31c:	42a0      	cmp	r0, r4
9002c31e:	d0f8      	beq.n	9002c312 <sbrk_aligned+0x22>
9002c320:	1a21      	subs	r1, r4, r0
9002c322:	4628      	mov	r0, r5
9002c324:	f000 fade 	bl	9002c8e4 <_sbrk_r>
9002c328:	3001      	adds	r0, #1
9002c32a:	d1f2      	bne.n	9002c312 <sbrk_aligned+0x22>
9002c32c:	e7ef      	b.n	9002c30e <sbrk_aligned+0x1e>
9002c32e:	bf00      	nop
9002c330:	24024ffc 	.word	0x24024ffc

9002c334 <_malloc_r>:
9002c334:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002c338:	1ccd      	adds	r5, r1, #3
9002c33a:	f025 0503 	bic.w	r5, r5, #3
9002c33e:	3508      	adds	r5, #8
9002c340:	2d0c      	cmp	r5, #12
9002c342:	bf38      	it	cc
9002c344:	250c      	movcc	r5, #12
9002c346:	2d00      	cmp	r5, #0
9002c348:	4606      	mov	r6, r0
9002c34a:	db01      	blt.n	9002c350 <_malloc_r+0x1c>
9002c34c:	42a9      	cmp	r1, r5
9002c34e:	d904      	bls.n	9002c35a <_malloc_r+0x26>
9002c350:	230c      	movs	r3, #12
9002c352:	6033      	str	r3, [r6, #0]
9002c354:	2000      	movs	r0, #0
9002c356:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002c35a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 9002c430 <_malloc_r+0xfc>
9002c35e:	f000 f869 	bl	9002c434 <__malloc_lock>
9002c362:	f8d8 3000 	ldr.w	r3, [r8]
9002c366:	461c      	mov	r4, r3
9002c368:	bb44      	cbnz	r4, 9002c3bc <_malloc_r+0x88>
9002c36a:	4629      	mov	r1, r5
9002c36c:	4630      	mov	r0, r6
9002c36e:	f7ff ffbf 	bl	9002c2f0 <sbrk_aligned>
9002c372:	1c43      	adds	r3, r0, #1
9002c374:	4604      	mov	r4, r0
9002c376:	d158      	bne.n	9002c42a <_malloc_r+0xf6>
9002c378:	f8d8 4000 	ldr.w	r4, [r8]
9002c37c:	4627      	mov	r7, r4
9002c37e:	2f00      	cmp	r7, #0
9002c380:	d143      	bne.n	9002c40a <_malloc_r+0xd6>
9002c382:	2c00      	cmp	r4, #0
9002c384:	d04b      	beq.n	9002c41e <_malloc_r+0xea>
9002c386:	6823      	ldr	r3, [r4, #0]
9002c388:	4639      	mov	r1, r7
9002c38a:	4630      	mov	r0, r6
9002c38c:	eb04 0903 	add.w	r9, r4, r3
9002c390:	f000 faa8 	bl	9002c8e4 <_sbrk_r>
9002c394:	4581      	cmp	r9, r0
9002c396:	d142      	bne.n	9002c41e <_malloc_r+0xea>
9002c398:	6821      	ldr	r1, [r4, #0]
9002c39a:	1a6d      	subs	r5, r5, r1
9002c39c:	4629      	mov	r1, r5
9002c39e:	4630      	mov	r0, r6
9002c3a0:	f7ff ffa6 	bl	9002c2f0 <sbrk_aligned>
9002c3a4:	3001      	adds	r0, #1
9002c3a6:	d03a      	beq.n	9002c41e <_malloc_r+0xea>
9002c3a8:	6823      	ldr	r3, [r4, #0]
9002c3aa:	442b      	add	r3, r5
9002c3ac:	6023      	str	r3, [r4, #0]
9002c3ae:	f8d8 3000 	ldr.w	r3, [r8]
9002c3b2:	685a      	ldr	r2, [r3, #4]
9002c3b4:	bb62      	cbnz	r2, 9002c410 <_malloc_r+0xdc>
9002c3b6:	f8c8 7000 	str.w	r7, [r8]
9002c3ba:	e00f      	b.n	9002c3dc <_malloc_r+0xa8>
9002c3bc:	6822      	ldr	r2, [r4, #0]
9002c3be:	1b52      	subs	r2, r2, r5
9002c3c0:	d420      	bmi.n	9002c404 <_malloc_r+0xd0>
9002c3c2:	2a0b      	cmp	r2, #11
9002c3c4:	d917      	bls.n	9002c3f6 <_malloc_r+0xc2>
9002c3c6:	1961      	adds	r1, r4, r5
9002c3c8:	42a3      	cmp	r3, r4
9002c3ca:	6025      	str	r5, [r4, #0]
9002c3cc:	bf18      	it	ne
9002c3ce:	6059      	strne	r1, [r3, #4]
9002c3d0:	6863      	ldr	r3, [r4, #4]
9002c3d2:	bf08      	it	eq
9002c3d4:	f8c8 1000 	streq.w	r1, [r8]
9002c3d8:	5162      	str	r2, [r4, r5]
9002c3da:	604b      	str	r3, [r1, #4]
9002c3dc:	4630      	mov	r0, r6
9002c3de:	f000 f82f 	bl	9002c440 <__malloc_unlock>
9002c3e2:	f104 000b 	add.w	r0, r4, #11
9002c3e6:	1d23      	adds	r3, r4, #4
9002c3e8:	f020 0007 	bic.w	r0, r0, #7
9002c3ec:	1ac2      	subs	r2, r0, r3
9002c3ee:	bf1c      	itt	ne
9002c3f0:	1a1b      	subne	r3, r3, r0
9002c3f2:	50a3      	strne	r3, [r4, r2]
9002c3f4:	e7af      	b.n	9002c356 <_malloc_r+0x22>
9002c3f6:	6862      	ldr	r2, [r4, #4]
9002c3f8:	42a3      	cmp	r3, r4
9002c3fa:	bf0c      	ite	eq
9002c3fc:	f8c8 2000 	streq.w	r2, [r8]
9002c400:	605a      	strne	r2, [r3, #4]
9002c402:	e7eb      	b.n	9002c3dc <_malloc_r+0xa8>
9002c404:	4623      	mov	r3, r4
9002c406:	6864      	ldr	r4, [r4, #4]
9002c408:	e7ae      	b.n	9002c368 <_malloc_r+0x34>
9002c40a:	463c      	mov	r4, r7
9002c40c:	687f      	ldr	r7, [r7, #4]
9002c40e:	e7b6      	b.n	9002c37e <_malloc_r+0x4a>
9002c410:	461a      	mov	r2, r3
9002c412:	685b      	ldr	r3, [r3, #4]
9002c414:	42a3      	cmp	r3, r4
9002c416:	d1fb      	bne.n	9002c410 <_malloc_r+0xdc>
9002c418:	2300      	movs	r3, #0
9002c41a:	6053      	str	r3, [r2, #4]
9002c41c:	e7de      	b.n	9002c3dc <_malloc_r+0xa8>
9002c41e:	230c      	movs	r3, #12
9002c420:	6033      	str	r3, [r6, #0]
9002c422:	4630      	mov	r0, r6
9002c424:	f000 f80c 	bl	9002c440 <__malloc_unlock>
9002c428:	e794      	b.n	9002c354 <_malloc_r+0x20>
9002c42a:	6005      	str	r5, [r0, #0]
9002c42c:	e7d6      	b.n	9002c3dc <_malloc_r+0xa8>
9002c42e:	bf00      	nop
9002c430:	24025000 	.word	0x24025000

9002c434 <__malloc_lock>:
9002c434:	4801      	ldr	r0, [pc, #4]	@ (9002c43c <__malloc_lock+0x8>)
9002c436:	f000 baa2 	b.w	9002c97e <__retarget_lock_acquire_recursive>
9002c43a:	bf00      	nop
9002c43c:	24025144 	.word	0x24025144

9002c440 <__malloc_unlock>:
9002c440:	4801      	ldr	r0, [pc, #4]	@ (9002c448 <__malloc_unlock+0x8>)
9002c442:	f000 ba9d 	b.w	9002c980 <__retarget_lock_release_recursive>
9002c446:	bf00      	nop
9002c448:	24025144 	.word	0x24025144

9002c44c <__cxa_atexit>:
9002c44c:	b510      	push	{r4, lr}
9002c44e:	4604      	mov	r4, r0
9002c450:	4804      	ldr	r0, [pc, #16]	@ (9002c464 <__cxa_atexit+0x18>)
9002c452:	4613      	mov	r3, r2
9002c454:	b120      	cbz	r0, 9002c460 <__cxa_atexit+0x14>
9002c456:	460a      	mov	r2, r1
9002c458:	2002      	movs	r0, #2
9002c45a:	4621      	mov	r1, r4
9002c45c:	f000 faa0 	bl	9002c9a0 <__register_exitproc>
9002c460:	bd10      	pop	{r4, pc}
9002c462:	bf00      	nop
9002c464:	9002c9a1 	.word	0x9002c9a1

9002c468 <std>:
9002c468:	2300      	movs	r3, #0
9002c46a:	b510      	push	{r4, lr}
9002c46c:	4604      	mov	r4, r0
9002c46e:	e9c0 3300 	strd	r3, r3, [r0]
9002c472:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002c476:	6083      	str	r3, [r0, #8]
9002c478:	8181      	strh	r1, [r0, #12]
9002c47a:	6643      	str	r3, [r0, #100]	@ 0x64
9002c47c:	81c2      	strh	r2, [r0, #14]
9002c47e:	6183      	str	r3, [r0, #24]
9002c480:	4619      	mov	r1, r3
9002c482:	2208      	movs	r2, #8
9002c484:	305c      	adds	r0, #92	@ 0x5c
9002c486:	f000 f99b 	bl	9002c7c0 <memset>
9002c48a:	4b0d      	ldr	r3, [pc, #52]	@ (9002c4c0 <std+0x58>)
9002c48c:	6263      	str	r3, [r4, #36]	@ 0x24
9002c48e:	4b0d      	ldr	r3, [pc, #52]	@ (9002c4c4 <std+0x5c>)
9002c490:	62a3      	str	r3, [r4, #40]	@ 0x28
9002c492:	4b0d      	ldr	r3, [pc, #52]	@ (9002c4c8 <std+0x60>)
9002c494:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002c496:	4b0d      	ldr	r3, [pc, #52]	@ (9002c4cc <std+0x64>)
9002c498:	6323      	str	r3, [r4, #48]	@ 0x30
9002c49a:	4b0d      	ldr	r3, [pc, #52]	@ (9002c4d0 <std+0x68>)
9002c49c:	6224      	str	r4, [r4, #32]
9002c49e:	429c      	cmp	r4, r3
9002c4a0:	d006      	beq.n	9002c4b0 <std+0x48>
9002c4a2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002c4a6:	4294      	cmp	r4, r2
9002c4a8:	d002      	beq.n	9002c4b0 <std+0x48>
9002c4aa:	33d0      	adds	r3, #208	@ 0xd0
9002c4ac:	429c      	cmp	r4, r3
9002c4ae:	d105      	bne.n	9002c4bc <std+0x54>
9002c4b0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002c4b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002c4b8:	f000 ba60 	b.w	9002c97c <__retarget_lock_init_recursive>
9002c4bc:	bd10      	pop	{r4, pc}
9002c4be:	bf00      	nop
9002c4c0:	9002c611 	.word	0x9002c611
9002c4c4:	9002c633 	.word	0x9002c633
9002c4c8:	9002c66b 	.word	0x9002c66b
9002c4cc:	9002c68f 	.word	0x9002c68f
9002c4d0:	24025004 	.word	0x24025004

9002c4d4 <stdio_exit_handler>:
9002c4d4:	4a02      	ldr	r2, [pc, #8]	@ (9002c4e0 <stdio_exit_handler+0xc>)
9002c4d6:	4903      	ldr	r1, [pc, #12]	@ (9002c4e4 <stdio_exit_handler+0x10>)
9002c4d8:	4803      	ldr	r0, [pc, #12]	@ (9002c4e8 <stdio_exit_handler+0x14>)
9002c4da:	f000 b87b 	b.w	9002c5d4 <_fwalk_sglue>
9002c4de:	bf00      	nop
9002c4e0:	2400032c 	.word	0x2400032c
9002c4e4:	9002d195 	.word	0x9002d195
9002c4e8:	2400033c 	.word	0x2400033c

9002c4ec <cleanup_stdio>:
9002c4ec:	6841      	ldr	r1, [r0, #4]
9002c4ee:	4b0c      	ldr	r3, [pc, #48]	@ (9002c520 <cleanup_stdio+0x34>)
9002c4f0:	4299      	cmp	r1, r3
9002c4f2:	b510      	push	{r4, lr}
9002c4f4:	4604      	mov	r4, r0
9002c4f6:	d001      	beq.n	9002c4fc <cleanup_stdio+0x10>
9002c4f8:	f000 fe4c 	bl	9002d194 <_fflush_r>
9002c4fc:	68a1      	ldr	r1, [r4, #8]
9002c4fe:	4b09      	ldr	r3, [pc, #36]	@ (9002c524 <cleanup_stdio+0x38>)
9002c500:	4299      	cmp	r1, r3
9002c502:	d002      	beq.n	9002c50a <cleanup_stdio+0x1e>
9002c504:	4620      	mov	r0, r4
9002c506:	f000 fe45 	bl	9002d194 <_fflush_r>
9002c50a:	68e1      	ldr	r1, [r4, #12]
9002c50c:	4b06      	ldr	r3, [pc, #24]	@ (9002c528 <cleanup_stdio+0x3c>)
9002c50e:	4299      	cmp	r1, r3
9002c510:	d004      	beq.n	9002c51c <cleanup_stdio+0x30>
9002c512:	4620      	mov	r0, r4
9002c514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002c518:	f000 be3c 	b.w	9002d194 <_fflush_r>
9002c51c:	bd10      	pop	{r4, pc}
9002c51e:	bf00      	nop
9002c520:	24025004 	.word	0x24025004
9002c524:	2402506c 	.word	0x2402506c
9002c528:	240250d4 	.word	0x240250d4

9002c52c <global_stdio_init.part.0>:
9002c52c:	b510      	push	{r4, lr}
9002c52e:	4b0b      	ldr	r3, [pc, #44]	@ (9002c55c <global_stdio_init.part.0+0x30>)
9002c530:	4c0b      	ldr	r4, [pc, #44]	@ (9002c560 <global_stdio_init.part.0+0x34>)
9002c532:	4a0c      	ldr	r2, [pc, #48]	@ (9002c564 <global_stdio_init.part.0+0x38>)
9002c534:	601a      	str	r2, [r3, #0]
9002c536:	4620      	mov	r0, r4
9002c538:	2200      	movs	r2, #0
9002c53a:	2104      	movs	r1, #4
9002c53c:	f7ff ff94 	bl	9002c468 <std>
9002c540:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002c544:	2201      	movs	r2, #1
9002c546:	2109      	movs	r1, #9
9002c548:	f7ff ff8e 	bl	9002c468 <std>
9002c54c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002c550:	2202      	movs	r2, #2
9002c552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002c556:	2112      	movs	r1, #18
9002c558:	f7ff bf86 	b.w	9002c468 <std>
9002c55c:	2402513c 	.word	0x2402513c
9002c560:	24025004 	.word	0x24025004
9002c564:	9002c4d5 	.word	0x9002c4d5

9002c568 <__sfp_lock_acquire>:
9002c568:	4801      	ldr	r0, [pc, #4]	@ (9002c570 <__sfp_lock_acquire+0x8>)
9002c56a:	f000 ba08 	b.w	9002c97e <__retarget_lock_acquire_recursive>
9002c56e:	bf00      	nop
9002c570:	24025146 	.word	0x24025146

9002c574 <__sfp_lock_release>:
9002c574:	4801      	ldr	r0, [pc, #4]	@ (9002c57c <__sfp_lock_release+0x8>)
9002c576:	f000 ba03 	b.w	9002c980 <__retarget_lock_release_recursive>
9002c57a:	bf00      	nop
9002c57c:	24025146 	.word	0x24025146

9002c580 <__sinit>:
9002c580:	b510      	push	{r4, lr}
9002c582:	4604      	mov	r4, r0
9002c584:	f7ff fff0 	bl	9002c568 <__sfp_lock_acquire>
9002c588:	6a23      	ldr	r3, [r4, #32]
9002c58a:	b11b      	cbz	r3, 9002c594 <__sinit+0x14>
9002c58c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002c590:	f7ff bff0 	b.w	9002c574 <__sfp_lock_release>
9002c594:	4b04      	ldr	r3, [pc, #16]	@ (9002c5a8 <__sinit+0x28>)
9002c596:	6223      	str	r3, [r4, #32]
9002c598:	4b04      	ldr	r3, [pc, #16]	@ (9002c5ac <__sinit+0x2c>)
9002c59a:	681b      	ldr	r3, [r3, #0]
9002c59c:	2b00      	cmp	r3, #0
9002c59e:	d1f5      	bne.n	9002c58c <__sinit+0xc>
9002c5a0:	f7ff ffc4 	bl	9002c52c <global_stdio_init.part.0>
9002c5a4:	e7f2      	b.n	9002c58c <__sinit+0xc>
9002c5a6:	bf00      	nop
9002c5a8:	9002c4ed 	.word	0x9002c4ed
9002c5ac:	2402513c 	.word	0x2402513c

9002c5b0 <fiprintf>:
9002c5b0:	b40e      	push	{r1, r2, r3}
9002c5b2:	b503      	push	{r0, r1, lr}
9002c5b4:	4601      	mov	r1, r0
9002c5b6:	ab03      	add	r3, sp, #12
9002c5b8:	4805      	ldr	r0, [pc, #20]	@ (9002c5d0 <fiprintf+0x20>)
9002c5ba:	f853 2b04 	ldr.w	r2, [r3], #4
9002c5be:	6800      	ldr	r0, [r0, #0]
9002c5c0:	9301      	str	r3, [sp, #4]
9002c5c2:	f000 fabd 	bl	9002cb40 <_vfiprintf_r>
9002c5c6:	b002      	add	sp, #8
9002c5c8:	f85d eb04 	ldr.w	lr, [sp], #4
9002c5cc:	b003      	add	sp, #12
9002c5ce:	4770      	bx	lr
9002c5d0:	24000338 	.word	0x24000338

9002c5d4 <_fwalk_sglue>:
9002c5d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002c5d8:	4607      	mov	r7, r0
9002c5da:	4688      	mov	r8, r1
9002c5dc:	4614      	mov	r4, r2
9002c5de:	2600      	movs	r6, #0
9002c5e0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002c5e4:	f1b9 0901 	subs.w	r9, r9, #1
9002c5e8:	d505      	bpl.n	9002c5f6 <_fwalk_sglue+0x22>
9002c5ea:	6824      	ldr	r4, [r4, #0]
9002c5ec:	2c00      	cmp	r4, #0
9002c5ee:	d1f7      	bne.n	9002c5e0 <_fwalk_sglue+0xc>
9002c5f0:	4630      	mov	r0, r6
9002c5f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002c5f6:	89ab      	ldrh	r3, [r5, #12]
9002c5f8:	2b01      	cmp	r3, #1
9002c5fa:	d907      	bls.n	9002c60c <_fwalk_sglue+0x38>
9002c5fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002c600:	3301      	adds	r3, #1
9002c602:	d003      	beq.n	9002c60c <_fwalk_sglue+0x38>
9002c604:	4629      	mov	r1, r5
9002c606:	4638      	mov	r0, r7
9002c608:	47c0      	blx	r8
9002c60a:	4306      	orrs	r6, r0
9002c60c:	3568      	adds	r5, #104	@ 0x68
9002c60e:	e7e9      	b.n	9002c5e4 <_fwalk_sglue+0x10>

9002c610 <__sread>:
9002c610:	b510      	push	{r4, lr}
9002c612:	460c      	mov	r4, r1
9002c614:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c618:	f000 f93e 	bl	9002c898 <_read_r>
9002c61c:	2800      	cmp	r0, #0
9002c61e:	bfab      	itete	ge
9002c620:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002c622:	89a3      	ldrhlt	r3, [r4, #12]
9002c624:	181b      	addge	r3, r3, r0
9002c626:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002c62a:	bfac      	ite	ge
9002c62c:	6563      	strge	r3, [r4, #84]	@ 0x54
9002c62e:	81a3      	strhlt	r3, [r4, #12]
9002c630:	bd10      	pop	{r4, pc}

9002c632 <__swrite>:
9002c632:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002c636:	461f      	mov	r7, r3
9002c638:	898b      	ldrh	r3, [r1, #12]
9002c63a:	05db      	lsls	r3, r3, #23
9002c63c:	4605      	mov	r5, r0
9002c63e:	460c      	mov	r4, r1
9002c640:	4616      	mov	r6, r2
9002c642:	d505      	bpl.n	9002c650 <__swrite+0x1e>
9002c644:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c648:	2302      	movs	r3, #2
9002c64a:	2200      	movs	r2, #0
9002c64c:	f000 f912 	bl	9002c874 <_lseek_r>
9002c650:	89a3      	ldrh	r3, [r4, #12]
9002c652:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002c656:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002c65a:	81a3      	strh	r3, [r4, #12]
9002c65c:	4632      	mov	r2, r6
9002c65e:	463b      	mov	r3, r7
9002c660:	4628      	mov	r0, r5
9002c662:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002c666:	f000 b94d 	b.w	9002c904 <_write_r>

9002c66a <__sseek>:
9002c66a:	b510      	push	{r4, lr}
9002c66c:	460c      	mov	r4, r1
9002c66e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c672:	f000 f8ff 	bl	9002c874 <_lseek_r>
9002c676:	1c43      	adds	r3, r0, #1
9002c678:	89a3      	ldrh	r3, [r4, #12]
9002c67a:	bf15      	itete	ne
9002c67c:	6560      	strne	r0, [r4, #84]	@ 0x54
9002c67e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002c682:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002c686:	81a3      	strheq	r3, [r4, #12]
9002c688:	bf18      	it	ne
9002c68a:	81a3      	strhne	r3, [r4, #12]
9002c68c:	bd10      	pop	{r4, pc}

9002c68e <__sclose>:
9002c68e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c692:	f000 b8df 	b.w	9002c854 <_close_r>

9002c696 <__swbuf_r>:
9002c696:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002c698:	460e      	mov	r6, r1
9002c69a:	4614      	mov	r4, r2
9002c69c:	4605      	mov	r5, r0
9002c69e:	b118      	cbz	r0, 9002c6a8 <__swbuf_r+0x12>
9002c6a0:	6a03      	ldr	r3, [r0, #32]
9002c6a2:	b90b      	cbnz	r3, 9002c6a8 <__swbuf_r+0x12>
9002c6a4:	f7ff ff6c 	bl	9002c580 <__sinit>
9002c6a8:	69a3      	ldr	r3, [r4, #24]
9002c6aa:	60a3      	str	r3, [r4, #8]
9002c6ac:	89a3      	ldrh	r3, [r4, #12]
9002c6ae:	071a      	lsls	r2, r3, #28
9002c6b0:	d501      	bpl.n	9002c6b6 <__swbuf_r+0x20>
9002c6b2:	6923      	ldr	r3, [r4, #16]
9002c6b4:	b943      	cbnz	r3, 9002c6c8 <__swbuf_r+0x32>
9002c6b6:	4621      	mov	r1, r4
9002c6b8:	4628      	mov	r0, r5
9002c6ba:	f000 f82b 	bl	9002c714 <__swsetup_r>
9002c6be:	b118      	cbz	r0, 9002c6c8 <__swbuf_r+0x32>
9002c6c0:	f04f 37ff 	mov.w	r7, #4294967295
9002c6c4:	4638      	mov	r0, r7
9002c6c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002c6c8:	6823      	ldr	r3, [r4, #0]
9002c6ca:	6922      	ldr	r2, [r4, #16]
9002c6cc:	1a98      	subs	r0, r3, r2
9002c6ce:	6963      	ldr	r3, [r4, #20]
9002c6d0:	b2f6      	uxtb	r6, r6
9002c6d2:	4283      	cmp	r3, r0
9002c6d4:	4637      	mov	r7, r6
9002c6d6:	dc05      	bgt.n	9002c6e4 <__swbuf_r+0x4e>
9002c6d8:	4621      	mov	r1, r4
9002c6da:	4628      	mov	r0, r5
9002c6dc:	f000 fd5a 	bl	9002d194 <_fflush_r>
9002c6e0:	2800      	cmp	r0, #0
9002c6e2:	d1ed      	bne.n	9002c6c0 <__swbuf_r+0x2a>
9002c6e4:	68a3      	ldr	r3, [r4, #8]
9002c6e6:	3b01      	subs	r3, #1
9002c6e8:	60a3      	str	r3, [r4, #8]
9002c6ea:	6823      	ldr	r3, [r4, #0]
9002c6ec:	1c5a      	adds	r2, r3, #1
9002c6ee:	6022      	str	r2, [r4, #0]
9002c6f0:	701e      	strb	r6, [r3, #0]
9002c6f2:	6962      	ldr	r2, [r4, #20]
9002c6f4:	1c43      	adds	r3, r0, #1
9002c6f6:	429a      	cmp	r2, r3
9002c6f8:	d004      	beq.n	9002c704 <__swbuf_r+0x6e>
9002c6fa:	89a3      	ldrh	r3, [r4, #12]
9002c6fc:	07db      	lsls	r3, r3, #31
9002c6fe:	d5e1      	bpl.n	9002c6c4 <__swbuf_r+0x2e>
9002c700:	2e0a      	cmp	r6, #10
9002c702:	d1df      	bne.n	9002c6c4 <__swbuf_r+0x2e>
9002c704:	4621      	mov	r1, r4
9002c706:	4628      	mov	r0, r5
9002c708:	f000 fd44 	bl	9002d194 <_fflush_r>
9002c70c:	2800      	cmp	r0, #0
9002c70e:	d0d9      	beq.n	9002c6c4 <__swbuf_r+0x2e>
9002c710:	e7d6      	b.n	9002c6c0 <__swbuf_r+0x2a>
	...

9002c714 <__swsetup_r>:
9002c714:	b538      	push	{r3, r4, r5, lr}
9002c716:	4b29      	ldr	r3, [pc, #164]	@ (9002c7bc <__swsetup_r+0xa8>)
9002c718:	4605      	mov	r5, r0
9002c71a:	6818      	ldr	r0, [r3, #0]
9002c71c:	460c      	mov	r4, r1
9002c71e:	b118      	cbz	r0, 9002c728 <__swsetup_r+0x14>
9002c720:	6a03      	ldr	r3, [r0, #32]
9002c722:	b90b      	cbnz	r3, 9002c728 <__swsetup_r+0x14>
9002c724:	f7ff ff2c 	bl	9002c580 <__sinit>
9002c728:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c72c:	0719      	lsls	r1, r3, #28
9002c72e:	d422      	bmi.n	9002c776 <__swsetup_r+0x62>
9002c730:	06da      	lsls	r2, r3, #27
9002c732:	d407      	bmi.n	9002c744 <__swsetup_r+0x30>
9002c734:	2209      	movs	r2, #9
9002c736:	602a      	str	r2, [r5, #0]
9002c738:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002c73c:	81a3      	strh	r3, [r4, #12]
9002c73e:	f04f 30ff 	mov.w	r0, #4294967295
9002c742:	e033      	b.n	9002c7ac <__swsetup_r+0x98>
9002c744:	0758      	lsls	r0, r3, #29
9002c746:	d512      	bpl.n	9002c76e <__swsetup_r+0x5a>
9002c748:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002c74a:	b141      	cbz	r1, 9002c75e <__swsetup_r+0x4a>
9002c74c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002c750:	4299      	cmp	r1, r3
9002c752:	d002      	beq.n	9002c75a <__swsetup_r+0x46>
9002c754:	4628      	mov	r0, r5
9002c756:	f000 f97f 	bl	9002ca58 <_free_r>
9002c75a:	2300      	movs	r3, #0
9002c75c:	6363      	str	r3, [r4, #52]	@ 0x34
9002c75e:	89a3      	ldrh	r3, [r4, #12]
9002c760:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002c764:	81a3      	strh	r3, [r4, #12]
9002c766:	2300      	movs	r3, #0
9002c768:	6063      	str	r3, [r4, #4]
9002c76a:	6923      	ldr	r3, [r4, #16]
9002c76c:	6023      	str	r3, [r4, #0]
9002c76e:	89a3      	ldrh	r3, [r4, #12]
9002c770:	f043 0308 	orr.w	r3, r3, #8
9002c774:	81a3      	strh	r3, [r4, #12]
9002c776:	6923      	ldr	r3, [r4, #16]
9002c778:	b94b      	cbnz	r3, 9002c78e <__swsetup_r+0x7a>
9002c77a:	89a3      	ldrh	r3, [r4, #12]
9002c77c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002c780:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002c784:	d003      	beq.n	9002c78e <__swsetup_r+0x7a>
9002c786:	4621      	mov	r1, r4
9002c788:	4628      	mov	r0, r5
9002c78a:	f000 fd51 	bl	9002d230 <__smakebuf_r>
9002c78e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c792:	f013 0201 	ands.w	r2, r3, #1
9002c796:	d00a      	beq.n	9002c7ae <__swsetup_r+0x9a>
9002c798:	2200      	movs	r2, #0
9002c79a:	60a2      	str	r2, [r4, #8]
9002c79c:	6962      	ldr	r2, [r4, #20]
9002c79e:	4252      	negs	r2, r2
9002c7a0:	61a2      	str	r2, [r4, #24]
9002c7a2:	6922      	ldr	r2, [r4, #16]
9002c7a4:	b942      	cbnz	r2, 9002c7b8 <__swsetup_r+0xa4>
9002c7a6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002c7aa:	d1c5      	bne.n	9002c738 <__swsetup_r+0x24>
9002c7ac:	bd38      	pop	{r3, r4, r5, pc}
9002c7ae:	0799      	lsls	r1, r3, #30
9002c7b0:	bf58      	it	pl
9002c7b2:	6962      	ldrpl	r2, [r4, #20]
9002c7b4:	60a2      	str	r2, [r4, #8]
9002c7b6:	e7f4      	b.n	9002c7a2 <__swsetup_r+0x8e>
9002c7b8:	2000      	movs	r0, #0
9002c7ba:	e7f7      	b.n	9002c7ac <__swsetup_r+0x98>
9002c7bc:	24000338 	.word	0x24000338

9002c7c0 <memset>:
9002c7c0:	4402      	add	r2, r0
9002c7c2:	4603      	mov	r3, r0
9002c7c4:	4293      	cmp	r3, r2
9002c7c6:	d100      	bne.n	9002c7ca <memset+0xa>
9002c7c8:	4770      	bx	lr
9002c7ca:	f803 1b01 	strb.w	r1, [r3], #1
9002c7ce:	e7f9      	b.n	9002c7c4 <memset+0x4>

9002c7d0 <strncmp>:
9002c7d0:	b510      	push	{r4, lr}
9002c7d2:	b16a      	cbz	r2, 9002c7f0 <strncmp+0x20>
9002c7d4:	3901      	subs	r1, #1
9002c7d6:	1884      	adds	r4, r0, r2
9002c7d8:	f810 2b01 	ldrb.w	r2, [r0], #1
9002c7dc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002c7e0:	429a      	cmp	r2, r3
9002c7e2:	d103      	bne.n	9002c7ec <strncmp+0x1c>
9002c7e4:	42a0      	cmp	r0, r4
9002c7e6:	d001      	beq.n	9002c7ec <strncmp+0x1c>
9002c7e8:	2a00      	cmp	r2, #0
9002c7ea:	d1f5      	bne.n	9002c7d8 <strncmp+0x8>
9002c7ec:	1ad0      	subs	r0, r2, r3
9002c7ee:	bd10      	pop	{r4, pc}
9002c7f0:	4610      	mov	r0, r2
9002c7f2:	e7fc      	b.n	9002c7ee <strncmp+0x1e>

9002c7f4 <_raise_r>:
9002c7f4:	291f      	cmp	r1, #31
9002c7f6:	b538      	push	{r3, r4, r5, lr}
9002c7f8:	4605      	mov	r5, r0
9002c7fa:	460c      	mov	r4, r1
9002c7fc:	d904      	bls.n	9002c808 <_raise_r+0x14>
9002c7fe:	2316      	movs	r3, #22
9002c800:	6003      	str	r3, [r0, #0]
9002c802:	f04f 30ff 	mov.w	r0, #4294967295
9002c806:	bd38      	pop	{r3, r4, r5, pc}
9002c808:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002c80a:	b112      	cbz	r2, 9002c812 <_raise_r+0x1e>
9002c80c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002c810:	b94b      	cbnz	r3, 9002c826 <_raise_r+0x32>
9002c812:	4628      	mov	r0, r5
9002c814:	f000 f864 	bl	9002c8e0 <_getpid_r>
9002c818:	4622      	mov	r2, r4
9002c81a:	4601      	mov	r1, r0
9002c81c:	4628      	mov	r0, r5
9002c81e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002c822:	f000 b84b 	b.w	9002c8bc <_kill_r>
9002c826:	2b01      	cmp	r3, #1
9002c828:	d00a      	beq.n	9002c840 <_raise_r+0x4c>
9002c82a:	1c59      	adds	r1, r3, #1
9002c82c:	d103      	bne.n	9002c836 <_raise_r+0x42>
9002c82e:	2316      	movs	r3, #22
9002c830:	6003      	str	r3, [r0, #0]
9002c832:	2001      	movs	r0, #1
9002c834:	e7e7      	b.n	9002c806 <_raise_r+0x12>
9002c836:	2100      	movs	r1, #0
9002c838:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002c83c:	4620      	mov	r0, r4
9002c83e:	4798      	blx	r3
9002c840:	2000      	movs	r0, #0
9002c842:	e7e0      	b.n	9002c806 <_raise_r+0x12>

9002c844 <raise>:
9002c844:	4b02      	ldr	r3, [pc, #8]	@ (9002c850 <raise+0xc>)
9002c846:	4601      	mov	r1, r0
9002c848:	6818      	ldr	r0, [r3, #0]
9002c84a:	f7ff bfd3 	b.w	9002c7f4 <_raise_r>
9002c84e:	bf00      	nop
9002c850:	24000338 	.word	0x24000338

9002c854 <_close_r>:
9002c854:	b538      	push	{r3, r4, r5, lr}
9002c856:	4d06      	ldr	r5, [pc, #24]	@ (9002c870 <_close_r+0x1c>)
9002c858:	2300      	movs	r3, #0
9002c85a:	4604      	mov	r4, r0
9002c85c:	4608      	mov	r0, r1
9002c85e:	602b      	str	r3, [r5, #0]
9002c860:	f7d8 f97a 	bl	90004b58 <_close>
9002c864:	1c43      	adds	r3, r0, #1
9002c866:	d102      	bne.n	9002c86e <_close_r+0x1a>
9002c868:	682b      	ldr	r3, [r5, #0]
9002c86a:	b103      	cbz	r3, 9002c86e <_close_r+0x1a>
9002c86c:	6023      	str	r3, [r4, #0]
9002c86e:	bd38      	pop	{r3, r4, r5, pc}
9002c870:	24025140 	.word	0x24025140

9002c874 <_lseek_r>:
9002c874:	b538      	push	{r3, r4, r5, lr}
9002c876:	4d07      	ldr	r5, [pc, #28]	@ (9002c894 <_lseek_r+0x20>)
9002c878:	4604      	mov	r4, r0
9002c87a:	4608      	mov	r0, r1
9002c87c:	4611      	mov	r1, r2
9002c87e:	2200      	movs	r2, #0
9002c880:	602a      	str	r2, [r5, #0]
9002c882:	461a      	mov	r2, r3
9002c884:	f7d8 f974 	bl	90004b70 <_lseek>
9002c888:	1c43      	adds	r3, r0, #1
9002c88a:	d102      	bne.n	9002c892 <_lseek_r+0x1e>
9002c88c:	682b      	ldr	r3, [r5, #0]
9002c88e:	b103      	cbz	r3, 9002c892 <_lseek_r+0x1e>
9002c890:	6023      	str	r3, [r4, #0]
9002c892:	bd38      	pop	{r3, r4, r5, pc}
9002c894:	24025140 	.word	0x24025140

9002c898 <_read_r>:
9002c898:	b538      	push	{r3, r4, r5, lr}
9002c89a:	4d07      	ldr	r5, [pc, #28]	@ (9002c8b8 <_read_r+0x20>)
9002c89c:	4604      	mov	r4, r0
9002c89e:	4608      	mov	r0, r1
9002c8a0:	4611      	mov	r1, r2
9002c8a2:	2200      	movs	r2, #0
9002c8a4:	602a      	str	r2, [r5, #0]
9002c8a6:	461a      	mov	r2, r3
9002c8a8:	f7d8 f93a 	bl	90004b20 <_read>
9002c8ac:	1c43      	adds	r3, r0, #1
9002c8ae:	d102      	bne.n	9002c8b6 <_read_r+0x1e>
9002c8b0:	682b      	ldr	r3, [r5, #0]
9002c8b2:	b103      	cbz	r3, 9002c8b6 <_read_r+0x1e>
9002c8b4:	6023      	str	r3, [r4, #0]
9002c8b6:	bd38      	pop	{r3, r4, r5, pc}
9002c8b8:	24025140 	.word	0x24025140

9002c8bc <_kill_r>:
9002c8bc:	b538      	push	{r3, r4, r5, lr}
9002c8be:	4d07      	ldr	r5, [pc, #28]	@ (9002c8dc <_kill_r+0x20>)
9002c8c0:	2300      	movs	r3, #0
9002c8c2:	4604      	mov	r4, r0
9002c8c4:	4608      	mov	r0, r1
9002c8c6:	4611      	mov	r1, r2
9002c8c8:	602b      	str	r3, [r5, #0]
9002c8ca:	f7d8 f919 	bl	90004b00 <_kill>
9002c8ce:	1c43      	adds	r3, r0, #1
9002c8d0:	d102      	bne.n	9002c8d8 <_kill_r+0x1c>
9002c8d2:	682b      	ldr	r3, [r5, #0]
9002c8d4:	b103      	cbz	r3, 9002c8d8 <_kill_r+0x1c>
9002c8d6:	6023      	str	r3, [r4, #0]
9002c8d8:	bd38      	pop	{r3, r4, r5, pc}
9002c8da:	bf00      	nop
9002c8dc:	24025140 	.word	0x24025140

9002c8e0 <_getpid_r>:
9002c8e0:	f7d8 b90c 	b.w	90004afc <_getpid>

9002c8e4 <_sbrk_r>:
9002c8e4:	b538      	push	{r3, r4, r5, lr}
9002c8e6:	4d06      	ldr	r5, [pc, #24]	@ (9002c900 <_sbrk_r+0x1c>)
9002c8e8:	2300      	movs	r3, #0
9002c8ea:	4604      	mov	r4, r0
9002c8ec:	4608      	mov	r0, r1
9002c8ee:	602b      	str	r3, [r5, #0]
9002c8f0:	f7d8 f940 	bl	90004b74 <_sbrk>
9002c8f4:	1c43      	adds	r3, r0, #1
9002c8f6:	d102      	bne.n	9002c8fe <_sbrk_r+0x1a>
9002c8f8:	682b      	ldr	r3, [r5, #0]
9002c8fa:	b103      	cbz	r3, 9002c8fe <_sbrk_r+0x1a>
9002c8fc:	6023      	str	r3, [r4, #0]
9002c8fe:	bd38      	pop	{r3, r4, r5, pc}
9002c900:	24025140 	.word	0x24025140

9002c904 <_write_r>:
9002c904:	b538      	push	{r3, r4, r5, lr}
9002c906:	4d07      	ldr	r5, [pc, #28]	@ (9002c924 <_write_r+0x20>)
9002c908:	4604      	mov	r4, r0
9002c90a:	4608      	mov	r0, r1
9002c90c:	4611      	mov	r1, r2
9002c90e:	2200      	movs	r2, #0
9002c910:	602a      	str	r2, [r5, #0]
9002c912:	461a      	mov	r2, r3
9002c914:	f7d8 f912 	bl	90004b3c <_write>
9002c918:	1c43      	adds	r3, r0, #1
9002c91a:	d102      	bne.n	9002c922 <_write_r+0x1e>
9002c91c:	682b      	ldr	r3, [r5, #0]
9002c91e:	b103      	cbz	r3, 9002c922 <_write_r+0x1e>
9002c920:	6023      	str	r3, [r4, #0]
9002c922:	bd38      	pop	{r3, r4, r5, pc}
9002c924:	24025140 	.word	0x24025140

9002c928 <__errno>:
9002c928:	4b01      	ldr	r3, [pc, #4]	@ (9002c930 <__errno+0x8>)
9002c92a:	6818      	ldr	r0, [r3, #0]
9002c92c:	4770      	bx	lr
9002c92e:	bf00      	nop
9002c930:	24000338 	.word	0x24000338

9002c934 <__libc_init_array>:
9002c934:	b570      	push	{r4, r5, r6, lr}
9002c936:	4d0d      	ldr	r5, [pc, #52]	@ (9002c96c <__libc_init_array+0x38>)
9002c938:	4c0d      	ldr	r4, [pc, #52]	@ (9002c970 <__libc_init_array+0x3c>)
9002c93a:	1b64      	subs	r4, r4, r5
9002c93c:	10a4      	asrs	r4, r4, #2
9002c93e:	2600      	movs	r6, #0
9002c940:	42a6      	cmp	r6, r4
9002c942:	d109      	bne.n	9002c958 <__libc_init_array+0x24>
9002c944:	4d0b      	ldr	r5, [pc, #44]	@ (9002c974 <__libc_init_array+0x40>)
9002c946:	4c0c      	ldr	r4, [pc, #48]	@ (9002c978 <__libc_init_array+0x44>)
9002c948:	f000 fcd0 	bl	9002d2ec <_init>
9002c94c:	1b64      	subs	r4, r4, r5
9002c94e:	10a4      	asrs	r4, r4, #2
9002c950:	2600      	movs	r6, #0
9002c952:	42a6      	cmp	r6, r4
9002c954:	d105      	bne.n	9002c962 <__libc_init_array+0x2e>
9002c956:	bd70      	pop	{r4, r5, r6, pc}
9002c958:	f855 3b04 	ldr.w	r3, [r5], #4
9002c95c:	4798      	blx	r3
9002c95e:	3601      	adds	r6, #1
9002c960:	e7ee      	b.n	9002c940 <__libc_init_array+0xc>
9002c962:	f855 3b04 	ldr.w	r3, [r5], #4
9002c966:	4798      	blx	r3
9002c968:	3601      	adds	r6, #1
9002c96a:	e7f2      	b.n	9002c952 <__libc_init_array+0x1e>
9002c96c:	900313a0 	.word	0x900313a0
9002c970:	900313a0 	.word	0x900313a0
9002c974:	900313a0 	.word	0x900313a0
9002c978:	900313c0 	.word	0x900313c0

9002c97c <__retarget_lock_init_recursive>:
9002c97c:	4770      	bx	lr

9002c97e <__retarget_lock_acquire_recursive>:
9002c97e:	4770      	bx	lr

9002c980 <__retarget_lock_release_recursive>:
9002c980:	4770      	bx	lr

9002c982 <memcpy>:
9002c982:	440a      	add	r2, r1
9002c984:	4291      	cmp	r1, r2
9002c986:	f100 33ff 	add.w	r3, r0, #4294967295
9002c98a:	d100      	bne.n	9002c98e <memcpy+0xc>
9002c98c:	4770      	bx	lr
9002c98e:	b510      	push	{r4, lr}
9002c990:	f811 4b01 	ldrb.w	r4, [r1], #1
9002c994:	f803 4f01 	strb.w	r4, [r3, #1]!
9002c998:	4291      	cmp	r1, r2
9002c99a:	d1f9      	bne.n	9002c990 <memcpy+0xe>
9002c99c:	bd10      	pop	{r4, pc}
	...

9002c9a0 <__register_exitproc>:
9002c9a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002c9a4:	4d27      	ldr	r5, [pc, #156]	@ (9002ca44 <__register_exitproc+0xa4>)
9002c9a6:	4607      	mov	r7, r0
9002c9a8:	6828      	ldr	r0, [r5, #0]
9002c9aa:	4691      	mov	r9, r2
9002c9ac:	460e      	mov	r6, r1
9002c9ae:	4698      	mov	r8, r3
9002c9b0:	f7ff ffe5 	bl	9002c97e <__retarget_lock_acquire_recursive>
9002c9b4:	4a24      	ldr	r2, [pc, #144]	@ (9002ca48 <__register_exitproc+0xa8>)
9002c9b6:	6814      	ldr	r4, [r2, #0]
9002c9b8:	b93c      	cbnz	r4, 9002c9ca <__register_exitproc+0x2a>
9002c9ba:	4b24      	ldr	r3, [pc, #144]	@ (9002ca4c <__register_exitproc+0xac>)
9002c9bc:	6013      	str	r3, [r2, #0]
9002c9be:	4a24      	ldr	r2, [pc, #144]	@ (9002ca50 <__register_exitproc+0xb0>)
9002c9c0:	b112      	cbz	r2, 9002c9c8 <__register_exitproc+0x28>
9002c9c2:	6812      	ldr	r2, [r2, #0]
9002c9c4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002c9c8:	4c20      	ldr	r4, [pc, #128]	@ (9002ca4c <__register_exitproc+0xac>)
9002c9ca:	6863      	ldr	r3, [r4, #4]
9002c9cc:	2b1f      	cmp	r3, #31
9002c9ce:	dd06      	ble.n	9002c9de <__register_exitproc+0x3e>
9002c9d0:	6828      	ldr	r0, [r5, #0]
9002c9d2:	f7ff ffd5 	bl	9002c980 <__retarget_lock_release_recursive>
9002c9d6:	f04f 30ff 	mov.w	r0, #4294967295
9002c9da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002c9de:	b32f      	cbz	r7, 9002ca2c <__register_exitproc+0x8c>
9002c9e0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002c9e4:	b968      	cbnz	r0, 9002ca02 <__register_exitproc+0x62>
9002c9e6:	4b1b      	ldr	r3, [pc, #108]	@ (9002ca54 <__register_exitproc+0xb4>)
9002c9e8:	2b00      	cmp	r3, #0
9002c9ea:	d0f1      	beq.n	9002c9d0 <__register_exitproc+0x30>
9002c9ec:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002c9f0:	f7ff fc6e 	bl	9002c2d0 <malloc>
9002c9f4:	2800      	cmp	r0, #0
9002c9f6:	d0eb      	beq.n	9002c9d0 <__register_exitproc+0x30>
9002c9f8:	2300      	movs	r3, #0
9002c9fa:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002c9fe:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002ca02:	6863      	ldr	r3, [r4, #4]
9002ca04:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002ca08:	2201      	movs	r2, #1
9002ca0a:	409a      	lsls	r2, r3
9002ca0c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002ca10:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002ca14:	4313      	orrs	r3, r2
9002ca16:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002ca1a:	2f02      	cmp	r7, #2
9002ca1c:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002ca20:	bf02      	ittt	eq
9002ca22:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002ca26:	4313      	orreq	r3, r2
9002ca28:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002ca2c:	6863      	ldr	r3, [r4, #4]
9002ca2e:	6828      	ldr	r0, [r5, #0]
9002ca30:	1c5a      	adds	r2, r3, #1
9002ca32:	3302      	adds	r3, #2
9002ca34:	6062      	str	r2, [r4, #4]
9002ca36:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002ca3a:	f7ff ffa1 	bl	9002c980 <__retarget_lock_release_recursive>
9002ca3e:	2000      	movs	r0, #0
9002ca40:	e7cb      	b.n	9002c9da <__register_exitproc+0x3a>
9002ca42:	bf00      	nop
9002ca44:	24000388 	.word	0x24000388
9002ca48:	240251d4 	.word	0x240251d4
9002ca4c:	24025148 	.word	0x24025148
9002ca50:	90030b7c 	.word	0x90030b7c
9002ca54:	9002c2d1 	.word	0x9002c2d1

9002ca58 <_free_r>:
9002ca58:	b538      	push	{r3, r4, r5, lr}
9002ca5a:	4605      	mov	r5, r0
9002ca5c:	2900      	cmp	r1, #0
9002ca5e:	d041      	beq.n	9002cae4 <_free_r+0x8c>
9002ca60:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002ca64:	1f0c      	subs	r4, r1, #4
9002ca66:	2b00      	cmp	r3, #0
9002ca68:	bfb8      	it	lt
9002ca6a:	18e4      	addlt	r4, r4, r3
9002ca6c:	f7ff fce2 	bl	9002c434 <__malloc_lock>
9002ca70:	4a1d      	ldr	r2, [pc, #116]	@ (9002cae8 <_free_r+0x90>)
9002ca72:	6813      	ldr	r3, [r2, #0]
9002ca74:	b933      	cbnz	r3, 9002ca84 <_free_r+0x2c>
9002ca76:	6063      	str	r3, [r4, #4]
9002ca78:	6014      	str	r4, [r2, #0]
9002ca7a:	4628      	mov	r0, r5
9002ca7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002ca80:	f7ff bcde 	b.w	9002c440 <__malloc_unlock>
9002ca84:	42a3      	cmp	r3, r4
9002ca86:	d908      	bls.n	9002ca9a <_free_r+0x42>
9002ca88:	6820      	ldr	r0, [r4, #0]
9002ca8a:	1821      	adds	r1, r4, r0
9002ca8c:	428b      	cmp	r3, r1
9002ca8e:	bf01      	itttt	eq
9002ca90:	6819      	ldreq	r1, [r3, #0]
9002ca92:	685b      	ldreq	r3, [r3, #4]
9002ca94:	1809      	addeq	r1, r1, r0
9002ca96:	6021      	streq	r1, [r4, #0]
9002ca98:	e7ed      	b.n	9002ca76 <_free_r+0x1e>
9002ca9a:	461a      	mov	r2, r3
9002ca9c:	685b      	ldr	r3, [r3, #4]
9002ca9e:	b10b      	cbz	r3, 9002caa4 <_free_r+0x4c>
9002caa0:	42a3      	cmp	r3, r4
9002caa2:	d9fa      	bls.n	9002ca9a <_free_r+0x42>
9002caa4:	6811      	ldr	r1, [r2, #0]
9002caa6:	1850      	adds	r0, r2, r1
9002caa8:	42a0      	cmp	r0, r4
9002caaa:	d10b      	bne.n	9002cac4 <_free_r+0x6c>
9002caac:	6820      	ldr	r0, [r4, #0]
9002caae:	4401      	add	r1, r0
9002cab0:	1850      	adds	r0, r2, r1
9002cab2:	4283      	cmp	r3, r0
9002cab4:	6011      	str	r1, [r2, #0]
9002cab6:	d1e0      	bne.n	9002ca7a <_free_r+0x22>
9002cab8:	6818      	ldr	r0, [r3, #0]
9002caba:	685b      	ldr	r3, [r3, #4]
9002cabc:	6053      	str	r3, [r2, #4]
9002cabe:	4408      	add	r0, r1
9002cac0:	6010      	str	r0, [r2, #0]
9002cac2:	e7da      	b.n	9002ca7a <_free_r+0x22>
9002cac4:	d902      	bls.n	9002cacc <_free_r+0x74>
9002cac6:	230c      	movs	r3, #12
9002cac8:	602b      	str	r3, [r5, #0]
9002caca:	e7d6      	b.n	9002ca7a <_free_r+0x22>
9002cacc:	6820      	ldr	r0, [r4, #0]
9002cace:	1821      	adds	r1, r4, r0
9002cad0:	428b      	cmp	r3, r1
9002cad2:	bf04      	itt	eq
9002cad4:	6819      	ldreq	r1, [r3, #0]
9002cad6:	685b      	ldreq	r3, [r3, #4]
9002cad8:	6063      	str	r3, [r4, #4]
9002cada:	bf04      	itt	eq
9002cadc:	1809      	addeq	r1, r1, r0
9002cade:	6021      	streq	r1, [r4, #0]
9002cae0:	6054      	str	r4, [r2, #4]
9002cae2:	e7ca      	b.n	9002ca7a <_free_r+0x22>
9002cae4:	bd38      	pop	{r3, r4, r5, pc}
9002cae6:	bf00      	nop
9002cae8:	24025000 	.word	0x24025000

9002caec <__sfputc_r>:
9002caec:	6893      	ldr	r3, [r2, #8]
9002caee:	3b01      	subs	r3, #1
9002caf0:	2b00      	cmp	r3, #0
9002caf2:	b410      	push	{r4}
9002caf4:	6093      	str	r3, [r2, #8]
9002caf6:	da08      	bge.n	9002cb0a <__sfputc_r+0x1e>
9002caf8:	6994      	ldr	r4, [r2, #24]
9002cafa:	42a3      	cmp	r3, r4
9002cafc:	db01      	blt.n	9002cb02 <__sfputc_r+0x16>
9002cafe:	290a      	cmp	r1, #10
9002cb00:	d103      	bne.n	9002cb0a <__sfputc_r+0x1e>
9002cb02:	f85d 4b04 	ldr.w	r4, [sp], #4
9002cb06:	f7ff bdc6 	b.w	9002c696 <__swbuf_r>
9002cb0a:	6813      	ldr	r3, [r2, #0]
9002cb0c:	1c58      	adds	r0, r3, #1
9002cb0e:	6010      	str	r0, [r2, #0]
9002cb10:	7019      	strb	r1, [r3, #0]
9002cb12:	4608      	mov	r0, r1
9002cb14:	f85d 4b04 	ldr.w	r4, [sp], #4
9002cb18:	4770      	bx	lr

9002cb1a <__sfputs_r>:
9002cb1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002cb1c:	4606      	mov	r6, r0
9002cb1e:	460f      	mov	r7, r1
9002cb20:	4614      	mov	r4, r2
9002cb22:	18d5      	adds	r5, r2, r3
9002cb24:	42ac      	cmp	r4, r5
9002cb26:	d101      	bne.n	9002cb2c <__sfputs_r+0x12>
9002cb28:	2000      	movs	r0, #0
9002cb2a:	e007      	b.n	9002cb3c <__sfputs_r+0x22>
9002cb2c:	f814 1b01 	ldrb.w	r1, [r4], #1
9002cb30:	463a      	mov	r2, r7
9002cb32:	4630      	mov	r0, r6
9002cb34:	f7ff ffda 	bl	9002caec <__sfputc_r>
9002cb38:	1c43      	adds	r3, r0, #1
9002cb3a:	d1f3      	bne.n	9002cb24 <__sfputs_r+0xa>
9002cb3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002cb40 <_vfiprintf_r>:
9002cb40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002cb44:	460d      	mov	r5, r1
9002cb46:	b09d      	sub	sp, #116	@ 0x74
9002cb48:	4614      	mov	r4, r2
9002cb4a:	4698      	mov	r8, r3
9002cb4c:	4606      	mov	r6, r0
9002cb4e:	b118      	cbz	r0, 9002cb58 <_vfiprintf_r+0x18>
9002cb50:	6a03      	ldr	r3, [r0, #32]
9002cb52:	b90b      	cbnz	r3, 9002cb58 <_vfiprintf_r+0x18>
9002cb54:	f7ff fd14 	bl	9002c580 <__sinit>
9002cb58:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002cb5a:	07d9      	lsls	r1, r3, #31
9002cb5c:	d405      	bmi.n	9002cb6a <_vfiprintf_r+0x2a>
9002cb5e:	89ab      	ldrh	r3, [r5, #12]
9002cb60:	059a      	lsls	r2, r3, #22
9002cb62:	d402      	bmi.n	9002cb6a <_vfiprintf_r+0x2a>
9002cb64:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002cb66:	f7ff ff0a 	bl	9002c97e <__retarget_lock_acquire_recursive>
9002cb6a:	89ab      	ldrh	r3, [r5, #12]
9002cb6c:	071b      	lsls	r3, r3, #28
9002cb6e:	d501      	bpl.n	9002cb74 <_vfiprintf_r+0x34>
9002cb70:	692b      	ldr	r3, [r5, #16]
9002cb72:	b99b      	cbnz	r3, 9002cb9c <_vfiprintf_r+0x5c>
9002cb74:	4629      	mov	r1, r5
9002cb76:	4630      	mov	r0, r6
9002cb78:	f7ff fdcc 	bl	9002c714 <__swsetup_r>
9002cb7c:	b170      	cbz	r0, 9002cb9c <_vfiprintf_r+0x5c>
9002cb7e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002cb80:	07dc      	lsls	r4, r3, #31
9002cb82:	d504      	bpl.n	9002cb8e <_vfiprintf_r+0x4e>
9002cb84:	f04f 30ff 	mov.w	r0, #4294967295
9002cb88:	b01d      	add	sp, #116	@ 0x74
9002cb8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002cb8e:	89ab      	ldrh	r3, [r5, #12]
9002cb90:	0598      	lsls	r0, r3, #22
9002cb92:	d4f7      	bmi.n	9002cb84 <_vfiprintf_r+0x44>
9002cb94:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002cb96:	f7ff fef3 	bl	9002c980 <__retarget_lock_release_recursive>
9002cb9a:	e7f3      	b.n	9002cb84 <_vfiprintf_r+0x44>
9002cb9c:	2300      	movs	r3, #0
9002cb9e:	9309      	str	r3, [sp, #36]	@ 0x24
9002cba0:	2320      	movs	r3, #32
9002cba2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002cba6:	f8cd 800c 	str.w	r8, [sp, #12]
9002cbaa:	2330      	movs	r3, #48	@ 0x30
9002cbac:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002cd5c <_vfiprintf_r+0x21c>
9002cbb0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002cbb4:	f04f 0901 	mov.w	r9, #1
9002cbb8:	4623      	mov	r3, r4
9002cbba:	469a      	mov	sl, r3
9002cbbc:	f813 2b01 	ldrb.w	r2, [r3], #1
9002cbc0:	b10a      	cbz	r2, 9002cbc6 <_vfiprintf_r+0x86>
9002cbc2:	2a25      	cmp	r2, #37	@ 0x25
9002cbc4:	d1f9      	bne.n	9002cbba <_vfiprintf_r+0x7a>
9002cbc6:	ebba 0b04 	subs.w	fp, sl, r4
9002cbca:	d00b      	beq.n	9002cbe4 <_vfiprintf_r+0xa4>
9002cbcc:	465b      	mov	r3, fp
9002cbce:	4622      	mov	r2, r4
9002cbd0:	4629      	mov	r1, r5
9002cbd2:	4630      	mov	r0, r6
9002cbd4:	f7ff ffa1 	bl	9002cb1a <__sfputs_r>
9002cbd8:	3001      	adds	r0, #1
9002cbda:	f000 80a7 	beq.w	9002cd2c <_vfiprintf_r+0x1ec>
9002cbde:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002cbe0:	445a      	add	r2, fp
9002cbe2:	9209      	str	r2, [sp, #36]	@ 0x24
9002cbe4:	f89a 3000 	ldrb.w	r3, [sl]
9002cbe8:	2b00      	cmp	r3, #0
9002cbea:	f000 809f 	beq.w	9002cd2c <_vfiprintf_r+0x1ec>
9002cbee:	2300      	movs	r3, #0
9002cbf0:	f04f 32ff 	mov.w	r2, #4294967295
9002cbf4:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002cbf8:	f10a 0a01 	add.w	sl, sl, #1
9002cbfc:	9304      	str	r3, [sp, #16]
9002cbfe:	9307      	str	r3, [sp, #28]
9002cc00:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002cc04:	931a      	str	r3, [sp, #104]	@ 0x68
9002cc06:	4654      	mov	r4, sl
9002cc08:	2205      	movs	r2, #5
9002cc0a:	f814 1b01 	ldrb.w	r1, [r4], #1
9002cc0e:	4853      	ldr	r0, [pc, #332]	@ (9002cd5c <_vfiprintf_r+0x21c>)
9002cc10:	f7d3 fb6e 	bl	900002f0 <memchr>
9002cc14:	9a04      	ldr	r2, [sp, #16]
9002cc16:	b9d8      	cbnz	r0, 9002cc50 <_vfiprintf_r+0x110>
9002cc18:	06d1      	lsls	r1, r2, #27
9002cc1a:	bf44      	itt	mi
9002cc1c:	2320      	movmi	r3, #32
9002cc1e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002cc22:	0713      	lsls	r3, r2, #28
9002cc24:	bf44      	itt	mi
9002cc26:	232b      	movmi	r3, #43	@ 0x2b
9002cc28:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002cc2c:	f89a 3000 	ldrb.w	r3, [sl]
9002cc30:	2b2a      	cmp	r3, #42	@ 0x2a
9002cc32:	d015      	beq.n	9002cc60 <_vfiprintf_r+0x120>
9002cc34:	9a07      	ldr	r2, [sp, #28]
9002cc36:	4654      	mov	r4, sl
9002cc38:	2000      	movs	r0, #0
9002cc3a:	f04f 0c0a 	mov.w	ip, #10
9002cc3e:	4621      	mov	r1, r4
9002cc40:	f811 3b01 	ldrb.w	r3, [r1], #1
9002cc44:	3b30      	subs	r3, #48	@ 0x30
9002cc46:	2b09      	cmp	r3, #9
9002cc48:	d94b      	bls.n	9002cce2 <_vfiprintf_r+0x1a2>
9002cc4a:	b1b0      	cbz	r0, 9002cc7a <_vfiprintf_r+0x13a>
9002cc4c:	9207      	str	r2, [sp, #28]
9002cc4e:	e014      	b.n	9002cc7a <_vfiprintf_r+0x13a>
9002cc50:	eba0 0308 	sub.w	r3, r0, r8
9002cc54:	fa09 f303 	lsl.w	r3, r9, r3
9002cc58:	4313      	orrs	r3, r2
9002cc5a:	9304      	str	r3, [sp, #16]
9002cc5c:	46a2      	mov	sl, r4
9002cc5e:	e7d2      	b.n	9002cc06 <_vfiprintf_r+0xc6>
9002cc60:	9b03      	ldr	r3, [sp, #12]
9002cc62:	1d19      	adds	r1, r3, #4
9002cc64:	681b      	ldr	r3, [r3, #0]
9002cc66:	9103      	str	r1, [sp, #12]
9002cc68:	2b00      	cmp	r3, #0
9002cc6a:	bfbb      	ittet	lt
9002cc6c:	425b      	neglt	r3, r3
9002cc6e:	f042 0202 	orrlt.w	r2, r2, #2
9002cc72:	9307      	strge	r3, [sp, #28]
9002cc74:	9307      	strlt	r3, [sp, #28]
9002cc76:	bfb8      	it	lt
9002cc78:	9204      	strlt	r2, [sp, #16]
9002cc7a:	7823      	ldrb	r3, [r4, #0]
9002cc7c:	2b2e      	cmp	r3, #46	@ 0x2e
9002cc7e:	d10a      	bne.n	9002cc96 <_vfiprintf_r+0x156>
9002cc80:	7863      	ldrb	r3, [r4, #1]
9002cc82:	2b2a      	cmp	r3, #42	@ 0x2a
9002cc84:	d132      	bne.n	9002ccec <_vfiprintf_r+0x1ac>
9002cc86:	9b03      	ldr	r3, [sp, #12]
9002cc88:	1d1a      	adds	r2, r3, #4
9002cc8a:	681b      	ldr	r3, [r3, #0]
9002cc8c:	9203      	str	r2, [sp, #12]
9002cc8e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002cc92:	3402      	adds	r4, #2
9002cc94:	9305      	str	r3, [sp, #20]
9002cc96:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002cd6c <_vfiprintf_r+0x22c>
9002cc9a:	7821      	ldrb	r1, [r4, #0]
9002cc9c:	2203      	movs	r2, #3
9002cc9e:	4650      	mov	r0, sl
9002cca0:	f7d3 fb26 	bl	900002f0 <memchr>
9002cca4:	b138      	cbz	r0, 9002ccb6 <_vfiprintf_r+0x176>
9002cca6:	9b04      	ldr	r3, [sp, #16]
9002cca8:	eba0 000a 	sub.w	r0, r0, sl
9002ccac:	2240      	movs	r2, #64	@ 0x40
9002ccae:	4082      	lsls	r2, r0
9002ccb0:	4313      	orrs	r3, r2
9002ccb2:	3401      	adds	r4, #1
9002ccb4:	9304      	str	r3, [sp, #16]
9002ccb6:	f814 1b01 	ldrb.w	r1, [r4], #1
9002ccba:	4829      	ldr	r0, [pc, #164]	@ (9002cd60 <_vfiprintf_r+0x220>)
9002ccbc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002ccc0:	2206      	movs	r2, #6
9002ccc2:	f7d3 fb15 	bl	900002f0 <memchr>
9002ccc6:	2800      	cmp	r0, #0
9002ccc8:	d03f      	beq.n	9002cd4a <_vfiprintf_r+0x20a>
9002ccca:	4b26      	ldr	r3, [pc, #152]	@ (9002cd64 <_vfiprintf_r+0x224>)
9002cccc:	bb1b      	cbnz	r3, 9002cd16 <_vfiprintf_r+0x1d6>
9002ccce:	9b03      	ldr	r3, [sp, #12]
9002ccd0:	3307      	adds	r3, #7
9002ccd2:	f023 0307 	bic.w	r3, r3, #7
9002ccd6:	3308      	adds	r3, #8
9002ccd8:	9303      	str	r3, [sp, #12]
9002ccda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002ccdc:	443b      	add	r3, r7
9002ccde:	9309      	str	r3, [sp, #36]	@ 0x24
9002cce0:	e76a      	b.n	9002cbb8 <_vfiprintf_r+0x78>
9002cce2:	fb0c 3202 	mla	r2, ip, r2, r3
9002cce6:	460c      	mov	r4, r1
9002cce8:	2001      	movs	r0, #1
9002ccea:	e7a8      	b.n	9002cc3e <_vfiprintf_r+0xfe>
9002ccec:	2300      	movs	r3, #0
9002ccee:	3401      	adds	r4, #1
9002ccf0:	9305      	str	r3, [sp, #20]
9002ccf2:	4619      	mov	r1, r3
9002ccf4:	f04f 0c0a 	mov.w	ip, #10
9002ccf8:	4620      	mov	r0, r4
9002ccfa:	f810 2b01 	ldrb.w	r2, [r0], #1
9002ccfe:	3a30      	subs	r2, #48	@ 0x30
9002cd00:	2a09      	cmp	r2, #9
9002cd02:	d903      	bls.n	9002cd0c <_vfiprintf_r+0x1cc>
9002cd04:	2b00      	cmp	r3, #0
9002cd06:	d0c6      	beq.n	9002cc96 <_vfiprintf_r+0x156>
9002cd08:	9105      	str	r1, [sp, #20]
9002cd0a:	e7c4      	b.n	9002cc96 <_vfiprintf_r+0x156>
9002cd0c:	fb0c 2101 	mla	r1, ip, r1, r2
9002cd10:	4604      	mov	r4, r0
9002cd12:	2301      	movs	r3, #1
9002cd14:	e7f0      	b.n	9002ccf8 <_vfiprintf_r+0x1b8>
9002cd16:	ab03      	add	r3, sp, #12
9002cd18:	9300      	str	r3, [sp, #0]
9002cd1a:	462a      	mov	r2, r5
9002cd1c:	4b12      	ldr	r3, [pc, #72]	@ (9002cd68 <_vfiprintf_r+0x228>)
9002cd1e:	a904      	add	r1, sp, #16
9002cd20:	4630      	mov	r0, r6
9002cd22:	f3af 8000 	nop.w
9002cd26:	4607      	mov	r7, r0
9002cd28:	1c78      	adds	r0, r7, #1
9002cd2a:	d1d6      	bne.n	9002ccda <_vfiprintf_r+0x19a>
9002cd2c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002cd2e:	07d9      	lsls	r1, r3, #31
9002cd30:	d405      	bmi.n	9002cd3e <_vfiprintf_r+0x1fe>
9002cd32:	89ab      	ldrh	r3, [r5, #12]
9002cd34:	059a      	lsls	r2, r3, #22
9002cd36:	d402      	bmi.n	9002cd3e <_vfiprintf_r+0x1fe>
9002cd38:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002cd3a:	f7ff fe21 	bl	9002c980 <__retarget_lock_release_recursive>
9002cd3e:	89ab      	ldrh	r3, [r5, #12]
9002cd40:	065b      	lsls	r3, r3, #25
9002cd42:	f53f af1f 	bmi.w	9002cb84 <_vfiprintf_r+0x44>
9002cd46:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002cd48:	e71e      	b.n	9002cb88 <_vfiprintf_r+0x48>
9002cd4a:	ab03      	add	r3, sp, #12
9002cd4c:	9300      	str	r3, [sp, #0]
9002cd4e:	462a      	mov	r2, r5
9002cd50:	4b05      	ldr	r3, [pc, #20]	@ (9002cd68 <_vfiprintf_r+0x228>)
9002cd52:	a904      	add	r1, sp, #16
9002cd54:	4630      	mov	r0, r6
9002cd56:	f000 f879 	bl	9002ce4c <_printf_i>
9002cd5a:	e7e4      	b.n	9002cd26 <_vfiprintf_r+0x1e6>
9002cd5c:	90030b80 	.word	0x90030b80
9002cd60:	90030b8a 	.word	0x90030b8a
9002cd64:	00000000 	.word	0x00000000
9002cd68:	9002cb1b 	.word	0x9002cb1b
9002cd6c:	90030b86 	.word	0x90030b86

9002cd70 <_printf_common>:
9002cd70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002cd74:	4616      	mov	r6, r2
9002cd76:	4698      	mov	r8, r3
9002cd78:	688a      	ldr	r2, [r1, #8]
9002cd7a:	690b      	ldr	r3, [r1, #16]
9002cd7c:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002cd80:	4293      	cmp	r3, r2
9002cd82:	bfb8      	it	lt
9002cd84:	4613      	movlt	r3, r2
9002cd86:	6033      	str	r3, [r6, #0]
9002cd88:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002cd8c:	4607      	mov	r7, r0
9002cd8e:	460c      	mov	r4, r1
9002cd90:	b10a      	cbz	r2, 9002cd96 <_printf_common+0x26>
9002cd92:	3301      	adds	r3, #1
9002cd94:	6033      	str	r3, [r6, #0]
9002cd96:	6823      	ldr	r3, [r4, #0]
9002cd98:	0699      	lsls	r1, r3, #26
9002cd9a:	bf42      	ittt	mi
9002cd9c:	6833      	ldrmi	r3, [r6, #0]
9002cd9e:	3302      	addmi	r3, #2
9002cda0:	6033      	strmi	r3, [r6, #0]
9002cda2:	6825      	ldr	r5, [r4, #0]
9002cda4:	f015 0506 	ands.w	r5, r5, #6
9002cda8:	d106      	bne.n	9002cdb8 <_printf_common+0x48>
9002cdaa:	f104 0a19 	add.w	sl, r4, #25
9002cdae:	68e3      	ldr	r3, [r4, #12]
9002cdb0:	6832      	ldr	r2, [r6, #0]
9002cdb2:	1a9b      	subs	r3, r3, r2
9002cdb4:	42ab      	cmp	r3, r5
9002cdb6:	dc26      	bgt.n	9002ce06 <_printf_common+0x96>
9002cdb8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002cdbc:	6822      	ldr	r2, [r4, #0]
9002cdbe:	3b00      	subs	r3, #0
9002cdc0:	bf18      	it	ne
9002cdc2:	2301      	movne	r3, #1
9002cdc4:	0692      	lsls	r2, r2, #26
9002cdc6:	d42b      	bmi.n	9002ce20 <_printf_common+0xb0>
9002cdc8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002cdcc:	4641      	mov	r1, r8
9002cdce:	4638      	mov	r0, r7
9002cdd0:	47c8      	blx	r9
9002cdd2:	3001      	adds	r0, #1
9002cdd4:	d01e      	beq.n	9002ce14 <_printf_common+0xa4>
9002cdd6:	6823      	ldr	r3, [r4, #0]
9002cdd8:	6922      	ldr	r2, [r4, #16]
9002cdda:	f003 0306 	and.w	r3, r3, #6
9002cdde:	2b04      	cmp	r3, #4
9002cde0:	bf02      	ittt	eq
9002cde2:	68e5      	ldreq	r5, [r4, #12]
9002cde4:	6833      	ldreq	r3, [r6, #0]
9002cde6:	1aed      	subeq	r5, r5, r3
9002cde8:	68a3      	ldr	r3, [r4, #8]
9002cdea:	bf0c      	ite	eq
9002cdec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002cdf0:	2500      	movne	r5, #0
9002cdf2:	4293      	cmp	r3, r2
9002cdf4:	bfc4      	itt	gt
9002cdf6:	1a9b      	subgt	r3, r3, r2
9002cdf8:	18ed      	addgt	r5, r5, r3
9002cdfa:	2600      	movs	r6, #0
9002cdfc:	341a      	adds	r4, #26
9002cdfe:	42b5      	cmp	r5, r6
9002ce00:	d11a      	bne.n	9002ce38 <_printf_common+0xc8>
9002ce02:	2000      	movs	r0, #0
9002ce04:	e008      	b.n	9002ce18 <_printf_common+0xa8>
9002ce06:	2301      	movs	r3, #1
9002ce08:	4652      	mov	r2, sl
9002ce0a:	4641      	mov	r1, r8
9002ce0c:	4638      	mov	r0, r7
9002ce0e:	47c8      	blx	r9
9002ce10:	3001      	adds	r0, #1
9002ce12:	d103      	bne.n	9002ce1c <_printf_common+0xac>
9002ce14:	f04f 30ff 	mov.w	r0, #4294967295
9002ce18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002ce1c:	3501      	adds	r5, #1
9002ce1e:	e7c6      	b.n	9002cdae <_printf_common+0x3e>
9002ce20:	18e1      	adds	r1, r4, r3
9002ce22:	1c5a      	adds	r2, r3, #1
9002ce24:	2030      	movs	r0, #48	@ 0x30
9002ce26:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002ce2a:	4422      	add	r2, r4
9002ce2c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002ce30:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002ce34:	3302      	adds	r3, #2
9002ce36:	e7c7      	b.n	9002cdc8 <_printf_common+0x58>
9002ce38:	2301      	movs	r3, #1
9002ce3a:	4622      	mov	r2, r4
9002ce3c:	4641      	mov	r1, r8
9002ce3e:	4638      	mov	r0, r7
9002ce40:	47c8      	blx	r9
9002ce42:	3001      	adds	r0, #1
9002ce44:	d0e6      	beq.n	9002ce14 <_printf_common+0xa4>
9002ce46:	3601      	adds	r6, #1
9002ce48:	e7d9      	b.n	9002cdfe <_printf_common+0x8e>
	...

9002ce4c <_printf_i>:
9002ce4c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002ce50:	7e0f      	ldrb	r7, [r1, #24]
9002ce52:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002ce54:	2f78      	cmp	r7, #120	@ 0x78
9002ce56:	4691      	mov	r9, r2
9002ce58:	4680      	mov	r8, r0
9002ce5a:	460c      	mov	r4, r1
9002ce5c:	469a      	mov	sl, r3
9002ce5e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002ce62:	d807      	bhi.n	9002ce74 <_printf_i+0x28>
9002ce64:	2f62      	cmp	r7, #98	@ 0x62
9002ce66:	d80a      	bhi.n	9002ce7e <_printf_i+0x32>
9002ce68:	2f00      	cmp	r7, #0
9002ce6a:	f000 80d2 	beq.w	9002d012 <_printf_i+0x1c6>
9002ce6e:	2f58      	cmp	r7, #88	@ 0x58
9002ce70:	f000 80b9 	beq.w	9002cfe6 <_printf_i+0x19a>
9002ce74:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002ce78:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002ce7c:	e03a      	b.n	9002cef4 <_printf_i+0xa8>
9002ce7e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002ce82:	2b15      	cmp	r3, #21
9002ce84:	d8f6      	bhi.n	9002ce74 <_printf_i+0x28>
9002ce86:	a101      	add	r1, pc, #4	@ (adr r1, 9002ce8c <_printf_i+0x40>)
9002ce88:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002ce8c:	9002cee5 	.word	0x9002cee5
9002ce90:	9002cef9 	.word	0x9002cef9
9002ce94:	9002ce75 	.word	0x9002ce75
9002ce98:	9002ce75 	.word	0x9002ce75
9002ce9c:	9002ce75 	.word	0x9002ce75
9002cea0:	9002ce75 	.word	0x9002ce75
9002cea4:	9002cef9 	.word	0x9002cef9
9002cea8:	9002ce75 	.word	0x9002ce75
9002ceac:	9002ce75 	.word	0x9002ce75
9002ceb0:	9002ce75 	.word	0x9002ce75
9002ceb4:	9002ce75 	.word	0x9002ce75
9002ceb8:	9002cff9 	.word	0x9002cff9
9002cebc:	9002cf23 	.word	0x9002cf23
9002cec0:	9002cfb3 	.word	0x9002cfb3
9002cec4:	9002ce75 	.word	0x9002ce75
9002cec8:	9002ce75 	.word	0x9002ce75
9002cecc:	9002d01b 	.word	0x9002d01b
9002ced0:	9002ce75 	.word	0x9002ce75
9002ced4:	9002cf23 	.word	0x9002cf23
9002ced8:	9002ce75 	.word	0x9002ce75
9002cedc:	9002ce75 	.word	0x9002ce75
9002cee0:	9002cfbb 	.word	0x9002cfbb
9002cee4:	6833      	ldr	r3, [r6, #0]
9002cee6:	1d1a      	adds	r2, r3, #4
9002cee8:	681b      	ldr	r3, [r3, #0]
9002ceea:	6032      	str	r2, [r6, #0]
9002ceec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002cef0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002cef4:	2301      	movs	r3, #1
9002cef6:	e09d      	b.n	9002d034 <_printf_i+0x1e8>
9002cef8:	6833      	ldr	r3, [r6, #0]
9002cefa:	6820      	ldr	r0, [r4, #0]
9002cefc:	1d19      	adds	r1, r3, #4
9002cefe:	6031      	str	r1, [r6, #0]
9002cf00:	0606      	lsls	r6, r0, #24
9002cf02:	d501      	bpl.n	9002cf08 <_printf_i+0xbc>
9002cf04:	681d      	ldr	r5, [r3, #0]
9002cf06:	e003      	b.n	9002cf10 <_printf_i+0xc4>
9002cf08:	0645      	lsls	r5, r0, #25
9002cf0a:	d5fb      	bpl.n	9002cf04 <_printf_i+0xb8>
9002cf0c:	f9b3 5000 	ldrsh.w	r5, [r3]
9002cf10:	2d00      	cmp	r5, #0
9002cf12:	da03      	bge.n	9002cf1c <_printf_i+0xd0>
9002cf14:	232d      	movs	r3, #45	@ 0x2d
9002cf16:	426d      	negs	r5, r5
9002cf18:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002cf1c:	4859      	ldr	r0, [pc, #356]	@ (9002d084 <_printf_i+0x238>)
9002cf1e:	230a      	movs	r3, #10
9002cf20:	e011      	b.n	9002cf46 <_printf_i+0xfa>
9002cf22:	6821      	ldr	r1, [r4, #0]
9002cf24:	6833      	ldr	r3, [r6, #0]
9002cf26:	0608      	lsls	r0, r1, #24
9002cf28:	f853 5b04 	ldr.w	r5, [r3], #4
9002cf2c:	d402      	bmi.n	9002cf34 <_printf_i+0xe8>
9002cf2e:	0649      	lsls	r1, r1, #25
9002cf30:	bf48      	it	mi
9002cf32:	b2ad      	uxthmi	r5, r5
9002cf34:	2f6f      	cmp	r7, #111	@ 0x6f
9002cf36:	4853      	ldr	r0, [pc, #332]	@ (9002d084 <_printf_i+0x238>)
9002cf38:	6033      	str	r3, [r6, #0]
9002cf3a:	bf14      	ite	ne
9002cf3c:	230a      	movne	r3, #10
9002cf3e:	2308      	moveq	r3, #8
9002cf40:	2100      	movs	r1, #0
9002cf42:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002cf46:	6866      	ldr	r6, [r4, #4]
9002cf48:	60a6      	str	r6, [r4, #8]
9002cf4a:	2e00      	cmp	r6, #0
9002cf4c:	bfa2      	ittt	ge
9002cf4e:	6821      	ldrge	r1, [r4, #0]
9002cf50:	f021 0104 	bicge.w	r1, r1, #4
9002cf54:	6021      	strge	r1, [r4, #0]
9002cf56:	b90d      	cbnz	r5, 9002cf5c <_printf_i+0x110>
9002cf58:	2e00      	cmp	r6, #0
9002cf5a:	d04b      	beq.n	9002cff4 <_printf_i+0x1a8>
9002cf5c:	4616      	mov	r6, r2
9002cf5e:	fbb5 f1f3 	udiv	r1, r5, r3
9002cf62:	fb03 5711 	mls	r7, r3, r1, r5
9002cf66:	5dc7      	ldrb	r7, [r0, r7]
9002cf68:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002cf6c:	462f      	mov	r7, r5
9002cf6e:	42bb      	cmp	r3, r7
9002cf70:	460d      	mov	r5, r1
9002cf72:	d9f4      	bls.n	9002cf5e <_printf_i+0x112>
9002cf74:	2b08      	cmp	r3, #8
9002cf76:	d10b      	bne.n	9002cf90 <_printf_i+0x144>
9002cf78:	6823      	ldr	r3, [r4, #0]
9002cf7a:	07df      	lsls	r7, r3, #31
9002cf7c:	d508      	bpl.n	9002cf90 <_printf_i+0x144>
9002cf7e:	6923      	ldr	r3, [r4, #16]
9002cf80:	6861      	ldr	r1, [r4, #4]
9002cf82:	4299      	cmp	r1, r3
9002cf84:	bfde      	ittt	le
9002cf86:	2330      	movle	r3, #48	@ 0x30
9002cf88:	f806 3c01 	strble.w	r3, [r6, #-1]
9002cf8c:	f106 36ff 	addle.w	r6, r6, #4294967295
9002cf90:	1b92      	subs	r2, r2, r6
9002cf92:	6122      	str	r2, [r4, #16]
9002cf94:	f8cd a000 	str.w	sl, [sp]
9002cf98:	464b      	mov	r3, r9
9002cf9a:	aa03      	add	r2, sp, #12
9002cf9c:	4621      	mov	r1, r4
9002cf9e:	4640      	mov	r0, r8
9002cfa0:	f7ff fee6 	bl	9002cd70 <_printf_common>
9002cfa4:	3001      	adds	r0, #1
9002cfa6:	d14a      	bne.n	9002d03e <_printf_i+0x1f2>
9002cfa8:	f04f 30ff 	mov.w	r0, #4294967295
9002cfac:	b004      	add	sp, #16
9002cfae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002cfb2:	6823      	ldr	r3, [r4, #0]
9002cfb4:	f043 0320 	orr.w	r3, r3, #32
9002cfb8:	6023      	str	r3, [r4, #0]
9002cfba:	4833      	ldr	r0, [pc, #204]	@ (9002d088 <_printf_i+0x23c>)
9002cfbc:	2778      	movs	r7, #120	@ 0x78
9002cfbe:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002cfc2:	6823      	ldr	r3, [r4, #0]
9002cfc4:	6831      	ldr	r1, [r6, #0]
9002cfc6:	061f      	lsls	r7, r3, #24
9002cfc8:	f851 5b04 	ldr.w	r5, [r1], #4
9002cfcc:	d402      	bmi.n	9002cfd4 <_printf_i+0x188>
9002cfce:	065f      	lsls	r7, r3, #25
9002cfd0:	bf48      	it	mi
9002cfd2:	b2ad      	uxthmi	r5, r5
9002cfd4:	6031      	str	r1, [r6, #0]
9002cfd6:	07d9      	lsls	r1, r3, #31
9002cfd8:	bf44      	itt	mi
9002cfda:	f043 0320 	orrmi.w	r3, r3, #32
9002cfde:	6023      	strmi	r3, [r4, #0]
9002cfe0:	b11d      	cbz	r5, 9002cfea <_printf_i+0x19e>
9002cfe2:	2310      	movs	r3, #16
9002cfe4:	e7ac      	b.n	9002cf40 <_printf_i+0xf4>
9002cfe6:	4827      	ldr	r0, [pc, #156]	@ (9002d084 <_printf_i+0x238>)
9002cfe8:	e7e9      	b.n	9002cfbe <_printf_i+0x172>
9002cfea:	6823      	ldr	r3, [r4, #0]
9002cfec:	f023 0320 	bic.w	r3, r3, #32
9002cff0:	6023      	str	r3, [r4, #0]
9002cff2:	e7f6      	b.n	9002cfe2 <_printf_i+0x196>
9002cff4:	4616      	mov	r6, r2
9002cff6:	e7bd      	b.n	9002cf74 <_printf_i+0x128>
9002cff8:	6833      	ldr	r3, [r6, #0]
9002cffa:	6825      	ldr	r5, [r4, #0]
9002cffc:	6961      	ldr	r1, [r4, #20]
9002cffe:	1d18      	adds	r0, r3, #4
9002d000:	6030      	str	r0, [r6, #0]
9002d002:	062e      	lsls	r6, r5, #24
9002d004:	681b      	ldr	r3, [r3, #0]
9002d006:	d501      	bpl.n	9002d00c <_printf_i+0x1c0>
9002d008:	6019      	str	r1, [r3, #0]
9002d00a:	e002      	b.n	9002d012 <_printf_i+0x1c6>
9002d00c:	0668      	lsls	r0, r5, #25
9002d00e:	d5fb      	bpl.n	9002d008 <_printf_i+0x1bc>
9002d010:	8019      	strh	r1, [r3, #0]
9002d012:	2300      	movs	r3, #0
9002d014:	6123      	str	r3, [r4, #16]
9002d016:	4616      	mov	r6, r2
9002d018:	e7bc      	b.n	9002cf94 <_printf_i+0x148>
9002d01a:	6833      	ldr	r3, [r6, #0]
9002d01c:	1d1a      	adds	r2, r3, #4
9002d01e:	6032      	str	r2, [r6, #0]
9002d020:	681e      	ldr	r6, [r3, #0]
9002d022:	6862      	ldr	r2, [r4, #4]
9002d024:	2100      	movs	r1, #0
9002d026:	4630      	mov	r0, r6
9002d028:	f7d3 f962 	bl	900002f0 <memchr>
9002d02c:	b108      	cbz	r0, 9002d032 <_printf_i+0x1e6>
9002d02e:	1b80      	subs	r0, r0, r6
9002d030:	6060      	str	r0, [r4, #4]
9002d032:	6863      	ldr	r3, [r4, #4]
9002d034:	6123      	str	r3, [r4, #16]
9002d036:	2300      	movs	r3, #0
9002d038:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002d03c:	e7aa      	b.n	9002cf94 <_printf_i+0x148>
9002d03e:	6923      	ldr	r3, [r4, #16]
9002d040:	4632      	mov	r2, r6
9002d042:	4649      	mov	r1, r9
9002d044:	4640      	mov	r0, r8
9002d046:	47d0      	blx	sl
9002d048:	3001      	adds	r0, #1
9002d04a:	d0ad      	beq.n	9002cfa8 <_printf_i+0x15c>
9002d04c:	6823      	ldr	r3, [r4, #0]
9002d04e:	079b      	lsls	r3, r3, #30
9002d050:	d413      	bmi.n	9002d07a <_printf_i+0x22e>
9002d052:	68e0      	ldr	r0, [r4, #12]
9002d054:	9b03      	ldr	r3, [sp, #12]
9002d056:	4298      	cmp	r0, r3
9002d058:	bfb8      	it	lt
9002d05a:	4618      	movlt	r0, r3
9002d05c:	e7a6      	b.n	9002cfac <_printf_i+0x160>
9002d05e:	2301      	movs	r3, #1
9002d060:	4632      	mov	r2, r6
9002d062:	4649      	mov	r1, r9
9002d064:	4640      	mov	r0, r8
9002d066:	47d0      	blx	sl
9002d068:	3001      	adds	r0, #1
9002d06a:	d09d      	beq.n	9002cfa8 <_printf_i+0x15c>
9002d06c:	3501      	adds	r5, #1
9002d06e:	68e3      	ldr	r3, [r4, #12]
9002d070:	9903      	ldr	r1, [sp, #12]
9002d072:	1a5b      	subs	r3, r3, r1
9002d074:	42ab      	cmp	r3, r5
9002d076:	dcf2      	bgt.n	9002d05e <_printf_i+0x212>
9002d078:	e7eb      	b.n	9002d052 <_printf_i+0x206>
9002d07a:	2500      	movs	r5, #0
9002d07c:	f104 0619 	add.w	r6, r4, #25
9002d080:	e7f5      	b.n	9002d06e <_printf_i+0x222>
9002d082:	bf00      	nop
9002d084:	90030b91 	.word	0x90030b91
9002d088:	90030ba2 	.word	0x90030ba2

9002d08c <__sflush_r>:
9002d08c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002d090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002d094:	0716      	lsls	r6, r2, #28
9002d096:	4605      	mov	r5, r0
9002d098:	460c      	mov	r4, r1
9002d09a:	d454      	bmi.n	9002d146 <__sflush_r+0xba>
9002d09c:	684b      	ldr	r3, [r1, #4]
9002d09e:	2b00      	cmp	r3, #0
9002d0a0:	dc02      	bgt.n	9002d0a8 <__sflush_r+0x1c>
9002d0a2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002d0a4:	2b00      	cmp	r3, #0
9002d0a6:	dd48      	ble.n	9002d13a <__sflush_r+0xae>
9002d0a8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002d0aa:	2e00      	cmp	r6, #0
9002d0ac:	d045      	beq.n	9002d13a <__sflush_r+0xae>
9002d0ae:	2300      	movs	r3, #0
9002d0b0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002d0b4:	682f      	ldr	r7, [r5, #0]
9002d0b6:	6a21      	ldr	r1, [r4, #32]
9002d0b8:	602b      	str	r3, [r5, #0]
9002d0ba:	d030      	beq.n	9002d11e <__sflush_r+0x92>
9002d0bc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002d0be:	89a3      	ldrh	r3, [r4, #12]
9002d0c0:	0759      	lsls	r1, r3, #29
9002d0c2:	d505      	bpl.n	9002d0d0 <__sflush_r+0x44>
9002d0c4:	6863      	ldr	r3, [r4, #4]
9002d0c6:	1ad2      	subs	r2, r2, r3
9002d0c8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002d0ca:	b10b      	cbz	r3, 9002d0d0 <__sflush_r+0x44>
9002d0cc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002d0ce:	1ad2      	subs	r2, r2, r3
9002d0d0:	2300      	movs	r3, #0
9002d0d2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002d0d4:	6a21      	ldr	r1, [r4, #32]
9002d0d6:	4628      	mov	r0, r5
9002d0d8:	47b0      	blx	r6
9002d0da:	1c43      	adds	r3, r0, #1
9002d0dc:	89a3      	ldrh	r3, [r4, #12]
9002d0de:	d106      	bne.n	9002d0ee <__sflush_r+0x62>
9002d0e0:	6829      	ldr	r1, [r5, #0]
9002d0e2:	291d      	cmp	r1, #29
9002d0e4:	d82b      	bhi.n	9002d13e <__sflush_r+0xb2>
9002d0e6:	4a2a      	ldr	r2, [pc, #168]	@ (9002d190 <__sflush_r+0x104>)
9002d0e8:	410a      	asrs	r2, r1
9002d0ea:	07d6      	lsls	r6, r2, #31
9002d0ec:	d427      	bmi.n	9002d13e <__sflush_r+0xb2>
9002d0ee:	2200      	movs	r2, #0
9002d0f0:	6062      	str	r2, [r4, #4]
9002d0f2:	04d9      	lsls	r1, r3, #19
9002d0f4:	6922      	ldr	r2, [r4, #16]
9002d0f6:	6022      	str	r2, [r4, #0]
9002d0f8:	d504      	bpl.n	9002d104 <__sflush_r+0x78>
9002d0fa:	1c42      	adds	r2, r0, #1
9002d0fc:	d101      	bne.n	9002d102 <__sflush_r+0x76>
9002d0fe:	682b      	ldr	r3, [r5, #0]
9002d100:	b903      	cbnz	r3, 9002d104 <__sflush_r+0x78>
9002d102:	6560      	str	r0, [r4, #84]	@ 0x54
9002d104:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002d106:	602f      	str	r7, [r5, #0]
9002d108:	b1b9      	cbz	r1, 9002d13a <__sflush_r+0xae>
9002d10a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002d10e:	4299      	cmp	r1, r3
9002d110:	d002      	beq.n	9002d118 <__sflush_r+0x8c>
9002d112:	4628      	mov	r0, r5
9002d114:	f7ff fca0 	bl	9002ca58 <_free_r>
9002d118:	2300      	movs	r3, #0
9002d11a:	6363      	str	r3, [r4, #52]	@ 0x34
9002d11c:	e00d      	b.n	9002d13a <__sflush_r+0xae>
9002d11e:	2301      	movs	r3, #1
9002d120:	4628      	mov	r0, r5
9002d122:	47b0      	blx	r6
9002d124:	4602      	mov	r2, r0
9002d126:	1c50      	adds	r0, r2, #1
9002d128:	d1c9      	bne.n	9002d0be <__sflush_r+0x32>
9002d12a:	682b      	ldr	r3, [r5, #0]
9002d12c:	2b00      	cmp	r3, #0
9002d12e:	d0c6      	beq.n	9002d0be <__sflush_r+0x32>
9002d130:	2b1d      	cmp	r3, #29
9002d132:	d001      	beq.n	9002d138 <__sflush_r+0xac>
9002d134:	2b16      	cmp	r3, #22
9002d136:	d11e      	bne.n	9002d176 <__sflush_r+0xea>
9002d138:	602f      	str	r7, [r5, #0]
9002d13a:	2000      	movs	r0, #0
9002d13c:	e022      	b.n	9002d184 <__sflush_r+0xf8>
9002d13e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002d142:	b21b      	sxth	r3, r3
9002d144:	e01b      	b.n	9002d17e <__sflush_r+0xf2>
9002d146:	690f      	ldr	r7, [r1, #16]
9002d148:	2f00      	cmp	r7, #0
9002d14a:	d0f6      	beq.n	9002d13a <__sflush_r+0xae>
9002d14c:	0793      	lsls	r3, r2, #30
9002d14e:	680e      	ldr	r6, [r1, #0]
9002d150:	bf08      	it	eq
9002d152:	694b      	ldreq	r3, [r1, #20]
9002d154:	600f      	str	r7, [r1, #0]
9002d156:	bf18      	it	ne
9002d158:	2300      	movne	r3, #0
9002d15a:	eba6 0807 	sub.w	r8, r6, r7
9002d15e:	608b      	str	r3, [r1, #8]
9002d160:	f1b8 0f00 	cmp.w	r8, #0
9002d164:	dde9      	ble.n	9002d13a <__sflush_r+0xae>
9002d166:	6a21      	ldr	r1, [r4, #32]
9002d168:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002d16a:	4643      	mov	r3, r8
9002d16c:	463a      	mov	r2, r7
9002d16e:	4628      	mov	r0, r5
9002d170:	47b0      	blx	r6
9002d172:	2800      	cmp	r0, #0
9002d174:	dc08      	bgt.n	9002d188 <__sflush_r+0xfc>
9002d176:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002d17a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002d17e:	81a3      	strh	r3, [r4, #12]
9002d180:	f04f 30ff 	mov.w	r0, #4294967295
9002d184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002d188:	4407      	add	r7, r0
9002d18a:	eba8 0800 	sub.w	r8, r8, r0
9002d18e:	e7e7      	b.n	9002d160 <__sflush_r+0xd4>
9002d190:	dfbffffe 	.word	0xdfbffffe

9002d194 <_fflush_r>:
9002d194:	b538      	push	{r3, r4, r5, lr}
9002d196:	690b      	ldr	r3, [r1, #16]
9002d198:	4605      	mov	r5, r0
9002d19a:	460c      	mov	r4, r1
9002d19c:	b913      	cbnz	r3, 9002d1a4 <_fflush_r+0x10>
9002d19e:	2500      	movs	r5, #0
9002d1a0:	4628      	mov	r0, r5
9002d1a2:	bd38      	pop	{r3, r4, r5, pc}
9002d1a4:	b118      	cbz	r0, 9002d1ae <_fflush_r+0x1a>
9002d1a6:	6a03      	ldr	r3, [r0, #32]
9002d1a8:	b90b      	cbnz	r3, 9002d1ae <_fflush_r+0x1a>
9002d1aa:	f7ff f9e9 	bl	9002c580 <__sinit>
9002d1ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002d1b2:	2b00      	cmp	r3, #0
9002d1b4:	d0f3      	beq.n	9002d19e <_fflush_r+0xa>
9002d1b6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002d1b8:	07d0      	lsls	r0, r2, #31
9002d1ba:	d404      	bmi.n	9002d1c6 <_fflush_r+0x32>
9002d1bc:	0599      	lsls	r1, r3, #22
9002d1be:	d402      	bmi.n	9002d1c6 <_fflush_r+0x32>
9002d1c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002d1c2:	f7ff fbdc 	bl	9002c97e <__retarget_lock_acquire_recursive>
9002d1c6:	4628      	mov	r0, r5
9002d1c8:	4621      	mov	r1, r4
9002d1ca:	f7ff ff5f 	bl	9002d08c <__sflush_r>
9002d1ce:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002d1d0:	07da      	lsls	r2, r3, #31
9002d1d2:	4605      	mov	r5, r0
9002d1d4:	d4e4      	bmi.n	9002d1a0 <_fflush_r+0xc>
9002d1d6:	89a3      	ldrh	r3, [r4, #12]
9002d1d8:	059b      	lsls	r3, r3, #22
9002d1da:	d4e1      	bmi.n	9002d1a0 <_fflush_r+0xc>
9002d1dc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002d1de:	f7ff fbcf 	bl	9002c980 <__retarget_lock_release_recursive>
9002d1e2:	e7dd      	b.n	9002d1a0 <_fflush_r+0xc>

9002d1e4 <__swhatbuf_r>:
9002d1e4:	b570      	push	{r4, r5, r6, lr}
9002d1e6:	460c      	mov	r4, r1
9002d1e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002d1ec:	2900      	cmp	r1, #0
9002d1ee:	b096      	sub	sp, #88	@ 0x58
9002d1f0:	4615      	mov	r5, r2
9002d1f2:	461e      	mov	r6, r3
9002d1f4:	da0d      	bge.n	9002d212 <__swhatbuf_r+0x2e>
9002d1f6:	89a3      	ldrh	r3, [r4, #12]
9002d1f8:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002d1fc:	f04f 0100 	mov.w	r1, #0
9002d200:	bf14      	ite	ne
9002d202:	2340      	movne	r3, #64	@ 0x40
9002d204:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002d208:	2000      	movs	r0, #0
9002d20a:	6031      	str	r1, [r6, #0]
9002d20c:	602b      	str	r3, [r5, #0]
9002d20e:	b016      	add	sp, #88	@ 0x58
9002d210:	bd70      	pop	{r4, r5, r6, pc}
9002d212:	466a      	mov	r2, sp
9002d214:	f000 f848 	bl	9002d2a8 <_fstat_r>
9002d218:	2800      	cmp	r0, #0
9002d21a:	dbec      	blt.n	9002d1f6 <__swhatbuf_r+0x12>
9002d21c:	9901      	ldr	r1, [sp, #4]
9002d21e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002d222:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002d226:	4259      	negs	r1, r3
9002d228:	4159      	adcs	r1, r3
9002d22a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002d22e:	e7eb      	b.n	9002d208 <__swhatbuf_r+0x24>

9002d230 <__smakebuf_r>:
9002d230:	898b      	ldrh	r3, [r1, #12]
9002d232:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002d234:	079d      	lsls	r5, r3, #30
9002d236:	4606      	mov	r6, r0
9002d238:	460c      	mov	r4, r1
9002d23a:	d507      	bpl.n	9002d24c <__smakebuf_r+0x1c>
9002d23c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002d240:	6023      	str	r3, [r4, #0]
9002d242:	6123      	str	r3, [r4, #16]
9002d244:	2301      	movs	r3, #1
9002d246:	6163      	str	r3, [r4, #20]
9002d248:	b003      	add	sp, #12
9002d24a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002d24c:	ab01      	add	r3, sp, #4
9002d24e:	466a      	mov	r2, sp
9002d250:	f7ff ffc8 	bl	9002d1e4 <__swhatbuf_r>
9002d254:	9f00      	ldr	r7, [sp, #0]
9002d256:	4605      	mov	r5, r0
9002d258:	4639      	mov	r1, r7
9002d25a:	4630      	mov	r0, r6
9002d25c:	f7ff f86a 	bl	9002c334 <_malloc_r>
9002d260:	b948      	cbnz	r0, 9002d276 <__smakebuf_r+0x46>
9002d262:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002d266:	059a      	lsls	r2, r3, #22
9002d268:	d4ee      	bmi.n	9002d248 <__smakebuf_r+0x18>
9002d26a:	f023 0303 	bic.w	r3, r3, #3
9002d26e:	f043 0302 	orr.w	r3, r3, #2
9002d272:	81a3      	strh	r3, [r4, #12]
9002d274:	e7e2      	b.n	9002d23c <__smakebuf_r+0xc>
9002d276:	89a3      	ldrh	r3, [r4, #12]
9002d278:	6020      	str	r0, [r4, #0]
9002d27a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002d27e:	81a3      	strh	r3, [r4, #12]
9002d280:	9b01      	ldr	r3, [sp, #4]
9002d282:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002d286:	b15b      	cbz	r3, 9002d2a0 <__smakebuf_r+0x70>
9002d288:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002d28c:	4630      	mov	r0, r6
9002d28e:	f000 f81d 	bl	9002d2cc <_isatty_r>
9002d292:	b128      	cbz	r0, 9002d2a0 <__smakebuf_r+0x70>
9002d294:	89a3      	ldrh	r3, [r4, #12]
9002d296:	f023 0303 	bic.w	r3, r3, #3
9002d29a:	f043 0301 	orr.w	r3, r3, #1
9002d29e:	81a3      	strh	r3, [r4, #12]
9002d2a0:	89a3      	ldrh	r3, [r4, #12]
9002d2a2:	431d      	orrs	r5, r3
9002d2a4:	81a5      	strh	r5, [r4, #12]
9002d2a6:	e7cf      	b.n	9002d248 <__smakebuf_r+0x18>

9002d2a8 <_fstat_r>:
9002d2a8:	b538      	push	{r3, r4, r5, lr}
9002d2aa:	4d07      	ldr	r5, [pc, #28]	@ (9002d2c8 <_fstat_r+0x20>)
9002d2ac:	2300      	movs	r3, #0
9002d2ae:	4604      	mov	r4, r0
9002d2b0:	4608      	mov	r0, r1
9002d2b2:	4611      	mov	r1, r2
9002d2b4:	602b      	str	r3, [r5, #0]
9002d2b6:	f7d7 fc53 	bl	90004b60 <_fstat>
9002d2ba:	1c43      	adds	r3, r0, #1
9002d2bc:	d102      	bne.n	9002d2c4 <_fstat_r+0x1c>
9002d2be:	682b      	ldr	r3, [r5, #0]
9002d2c0:	b103      	cbz	r3, 9002d2c4 <_fstat_r+0x1c>
9002d2c2:	6023      	str	r3, [r4, #0]
9002d2c4:	bd38      	pop	{r3, r4, r5, pc}
9002d2c6:	bf00      	nop
9002d2c8:	24025140 	.word	0x24025140

9002d2cc <_isatty_r>:
9002d2cc:	b538      	push	{r3, r4, r5, lr}
9002d2ce:	4d06      	ldr	r5, [pc, #24]	@ (9002d2e8 <_isatty_r+0x1c>)
9002d2d0:	2300      	movs	r3, #0
9002d2d2:	4604      	mov	r4, r0
9002d2d4:	4608      	mov	r0, r1
9002d2d6:	602b      	str	r3, [r5, #0]
9002d2d8:	f7d7 fc48 	bl	90004b6c <_isatty>
9002d2dc:	1c43      	adds	r3, r0, #1
9002d2de:	d102      	bne.n	9002d2e6 <_isatty_r+0x1a>
9002d2e0:	682b      	ldr	r3, [r5, #0]
9002d2e2:	b103      	cbz	r3, 9002d2e6 <_isatty_r+0x1a>
9002d2e4:	6023      	str	r3, [r4, #0]
9002d2e6:	bd38      	pop	{r3, r4, r5, pc}
9002d2e8:	24025140 	.word	0x24025140

9002d2ec <_init>:
9002d2ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002d2ee:	bf00      	nop
9002d2f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002d2f2:	bc08      	pop	{r3}
9002d2f4:	469e      	mov	lr, r3
9002d2f6:	4770      	bx	lr

9002d2f8 <_fini>:
9002d2f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002d2fa:	bf00      	nop
9002d2fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002d2fe:	bc08      	pop	{r3}
9002d300:	469e      	mov	lr, r3
9002d302:	4770      	bx	lr
