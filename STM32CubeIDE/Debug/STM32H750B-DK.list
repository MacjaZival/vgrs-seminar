
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002d024  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003884  9002d2c8  9002d2c8  000312c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000007e4  90030b4c  90030b4c  00034b4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  90031330  90031330  000de4d8  2**0
                  CONTENTS
  6 .ARM          00000008  90031330  90031330  00035330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  90031338  90031338  000de4d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000020  90031338  90031338  00035338  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  90031358  90031358  00035358  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000388  24000000  90031360  00036000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_ScratchbufferA 00000100  240003a0  900316e8  000363a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferB 00000100  240004a0  900317e8  000364a0  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00024d38  240005a0  900318e8  000365a0  2**3
                  ALLOC
 14 ._user_heap_stack 00002000  240252d8  900318e8  000372d8  2**0
                  ALLOC
 15 .ARM.attributes 0000002e  00000000  00000000  000de4d8  2**0
                  CONTENTS, READONLY
 16 FontFlashSection 000056cc  90200000  90200000  00037000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TextFlashSection 0000002c  902056cc  902056cc  0003c6cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 ExtFlashSection 000a1de0  902056f8  902056f8  0003c6f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000df000  2**2
                  ALLOC
 20 .debug_line   0008a99c  00000000  00000000  000de506  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  00168ea2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   0011ec00  00000000  00000000  00168f05  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 0001d52d  00000000  00000000  00287b05  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 00003fa8  00000000  00000000  002a5038  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001a5b5e  00000000  00000000  002a8fe0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 000070f5  00000000  00000000  0044eb3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  00050639  00000000  00000000  00455c33  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .comment      000000c2  00000000  00000000  004a626c  2**0
                  CONTENTS, READONLY
 29 .debug_frame  0000bae0  00000000  00000000  004a6330  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .debug_loclists 0003ab0c  00000000  00000000  004b1e10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	240005a0 	.word	0x240005a0
900002bc:	00000000 	.word	0x00000000
900002c0:	9002d2ac 	.word	0x9002d2ac

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	240005a4 	.word	0x240005a4
900002dc:	9002d2ac 	.word	0x9002d2ac

900002e0 <strlen>:
900002e0:	4603      	mov	r3, r0
900002e2:	f813 2b01 	ldrb.w	r2, [r3], #1
900002e6:	2a00      	cmp	r2, #0
900002e8:	d1fb      	bne.n	900002e2 <strlen+0x2>
900002ea:	1a18      	subs	r0, r3, r0
900002ec:	3801      	subs	r0, #1
900002ee:	4770      	bx	lr

900002f0 <memchr>:
900002f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002f4:	2a10      	cmp	r2, #16
900002f6:	db2b      	blt.n	90000350 <memchr+0x60>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	d008      	beq.n	90000310 <memchr+0x20>
900002fe:	f810 3b01 	ldrb.w	r3, [r0], #1
90000302:	3a01      	subs	r2, #1
90000304:	428b      	cmp	r3, r1
90000306:	d02d      	beq.n	90000364 <memchr+0x74>
90000308:	f010 0f07 	tst.w	r0, #7
9000030c:	b342      	cbz	r2, 90000360 <memchr+0x70>
9000030e:	d1f6      	bne.n	900002fe <memchr+0xe>
90000310:	b4f0      	push	{r4, r5, r6, r7}
90000312:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000316:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000031a:	f022 0407 	bic.w	r4, r2, #7
9000031e:	f07f 0700 	mvns.w	r7, #0
90000322:	2300      	movs	r3, #0
90000324:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000328:	3c08      	subs	r4, #8
9000032a:	ea85 0501 	eor.w	r5, r5, r1
9000032e:	ea86 0601 	eor.w	r6, r6, r1
90000332:	fa85 f547 	uadd8	r5, r5, r7
90000336:	faa3 f587 	sel	r5, r3, r7
9000033a:	fa86 f647 	uadd8	r6, r6, r7
9000033e:	faa5 f687 	sel	r6, r5, r7
90000342:	b98e      	cbnz	r6, 90000368 <memchr+0x78>
90000344:	d1ee      	bne.n	90000324 <memchr+0x34>
90000346:	bcf0      	pop	{r4, r5, r6, r7}
90000348:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000034c:	f002 0207 	and.w	r2, r2, #7
90000350:	b132      	cbz	r2, 90000360 <memchr+0x70>
90000352:	f810 3b01 	ldrb.w	r3, [r0], #1
90000356:	3a01      	subs	r2, #1
90000358:	ea83 0301 	eor.w	r3, r3, r1
9000035c:	b113      	cbz	r3, 90000364 <memchr+0x74>
9000035e:	d1f8      	bne.n	90000352 <memchr+0x62>
90000360:	2000      	movs	r0, #0
90000362:	4770      	bx	lr
90000364:	3801      	subs	r0, #1
90000366:	4770      	bx	lr
90000368:	2d00      	cmp	r5, #0
9000036a:	bf06      	itte	eq
9000036c:	4635      	moveq	r5, r6
9000036e:	3803      	subeq	r0, #3
90000370:	3807      	subne	r0, #7
90000372:	f015 0f01 	tst.w	r5, #1
90000376:	d107      	bne.n	90000388 <memchr+0x98>
90000378:	3001      	adds	r0, #1
9000037a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000037e:	bf02      	ittt	eq
90000380:	3001      	addeq	r0, #1
90000382:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000386:	3001      	addeq	r0, #1
90000388:	bcf0      	pop	{r4, r5, r6, r7}
9000038a:	3801      	subs	r0, #1
9000038c:	4770      	bx	lr
9000038e:	bf00      	nop

90000390 <__aeabi_drsub>:
90000390:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000394:	e002      	b.n	9000039c <__adddf3>
90000396:	bf00      	nop

90000398 <__aeabi_dsub>:
90000398:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000039c <__adddf3>:
9000039c:	b530      	push	{r4, r5, lr}
9000039e:	ea4f 0441 	mov.w	r4, r1, lsl #1
900003a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
900003a6:	ea94 0f05 	teq	r4, r5
900003aa:	bf08      	it	eq
900003ac:	ea90 0f02 	teqeq	r0, r2
900003b0:	bf1f      	itttt	ne
900003b2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003b6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003c2:	f000 80e2 	beq.w	9000058a <__adddf3+0x1ee>
900003c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003ce:	bfb8      	it	lt
900003d0:	426d      	neglt	r5, r5
900003d2:	dd0c      	ble.n	900003ee <__adddf3+0x52>
900003d4:	442c      	add	r4, r5
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	ea82 0000 	eor.w	r0, r2, r0
900003e2:	ea83 0101 	eor.w	r1, r3, r1
900003e6:	ea80 0202 	eor.w	r2, r0, r2
900003ea:	ea81 0303 	eor.w	r3, r1, r3
900003ee:	2d36      	cmp	r5, #54	@ 0x36
900003f0:	bf88      	it	hi
900003f2:	bd30      	pophi	{r4, r5, pc}
900003f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
90000400:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
90000404:	d002      	beq.n	9000040c <__adddf3+0x70>
90000406:	4240      	negs	r0, r0
90000408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000040c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000410:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000414:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000418:	d002      	beq.n	90000420 <__adddf3+0x84>
9000041a:	4252      	negs	r2, r2
9000041c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000420:	ea94 0f05 	teq	r4, r5
90000424:	f000 80a7 	beq.w	90000576 <__adddf3+0x1da>
90000428:	f1a4 0401 	sub.w	r4, r4, #1
9000042c:	f1d5 0e20 	rsbs	lr, r5, #32
90000430:	db0d      	blt.n	9000044e <__adddf3+0xb2>
90000432:	fa02 fc0e 	lsl.w	ip, r2, lr
90000436:	fa22 f205 	lsr.w	r2, r2, r5
9000043a:	1880      	adds	r0, r0, r2
9000043c:	f141 0100 	adc.w	r1, r1, #0
90000440:	fa03 f20e 	lsl.w	r2, r3, lr
90000444:	1880      	adds	r0, r0, r2
90000446:	fa43 f305 	asr.w	r3, r3, r5
9000044a:	4159      	adcs	r1, r3
9000044c:	e00e      	b.n	9000046c <__adddf3+0xd0>
9000044e:	f1a5 0520 	sub.w	r5, r5, #32
90000452:	f10e 0e20 	add.w	lr, lr, #32
90000456:	2a01      	cmp	r2, #1
90000458:	fa03 fc0e 	lsl.w	ip, r3, lr
9000045c:	bf28      	it	cs
9000045e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000462:	fa43 f305 	asr.w	r3, r3, r5
90000466:	18c0      	adds	r0, r0, r3
90000468:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000046c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000470:	d507      	bpl.n	90000482 <__adddf3+0xe6>
90000472:	f04f 0e00 	mov.w	lr, #0
90000476:	f1dc 0c00 	rsbs	ip, ip, #0
9000047a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000047e:	eb6e 0101 	sbc.w	r1, lr, r1
90000482:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000486:	d31b      	bcc.n	900004c0 <__adddf3+0x124>
90000488:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000048c:	d30c      	bcc.n	900004a8 <__adddf3+0x10c>
9000048e:	0849      	lsrs	r1, r1, #1
90000490:	ea5f 0030 	movs.w	r0, r0, rrx
90000494:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000498:	f104 0401 	add.w	r4, r4, #1
9000049c:	ea4f 5244 	mov.w	r2, r4, lsl #21
900004a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
900004a4:	f080 809a 	bcs.w	900005dc <__adddf3+0x240>
900004a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
900004ac:	bf08      	it	eq
900004ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004b2:	f150 0000 	adcs.w	r0, r0, #0
900004b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004ba:	ea41 0105 	orr.w	r1, r1, r5
900004be:	bd30      	pop	{r4, r5, pc}
900004c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004c4:	4140      	adcs	r0, r0
900004c6:	eb41 0101 	adc.w	r1, r1, r1
900004ca:	3c01      	subs	r4, #1
900004cc:	bf28      	it	cs
900004ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004d2:	d2e9      	bcs.n	900004a8 <__adddf3+0x10c>
900004d4:	f091 0f00 	teq	r1, #0
900004d8:	bf04      	itt	eq
900004da:	4601      	moveq	r1, r0
900004dc:	2000      	moveq	r0, #0
900004de:	fab1 f381 	clz	r3, r1
900004e2:	bf08      	it	eq
900004e4:	3320      	addeq	r3, #32
900004e6:	f1a3 030b 	sub.w	r3, r3, #11
900004ea:	f1b3 0220 	subs.w	r2, r3, #32
900004ee:	da0c      	bge.n	9000050a <__adddf3+0x16e>
900004f0:	320c      	adds	r2, #12
900004f2:	dd08      	ble.n	90000506 <__adddf3+0x16a>
900004f4:	f102 0c14 	add.w	ip, r2, #20
900004f8:	f1c2 020c 	rsb	r2, r2, #12
900004fc:	fa01 f00c 	lsl.w	r0, r1, ip
90000500:	fa21 f102 	lsr.w	r1, r1, r2
90000504:	e00c      	b.n	90000520 <__adddf3+0x184>
90000506:	f102 0214 	add.w	r2, r2, #20
9000050a:	bfd8      	it	le
9000050c:	f1c2 0c20 	rsble	ip, r2, #32
90000510:	fa01 f102 	lsl.w	r1, r1, r2
90000514:	fa20 fc0c 	lsr.w	ip, r0, ip
90000518:	bfdc      	itt	le
9000051a:	ea41 010c 	orrle.w	r1, r1, ip
9000051e:	4090      	lslle	r0, r2
90000520:	1ae4      	subs	r4, r4, r3
90000522:	bfa2      	ittt	ge
90000524:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000528:	4329      	orrge	r1, r5
9000052a:	bd30      	popge	{r4, r5, pc}
9000052c:	ea6f 0404 	mvn.w	r4, r4
90000530:	3c1f      	subs	r4, #31
90000532:	da1c      	bge.n	9000056e <__adddf3+0x1d2>
90000534:	340c      	adds	r4, #12
90000536:	dc0e      	bgt.n	90000556 <__adddf3+0x1ba>
90000538:	f104 0414 	add.w	r4, r4, #20
9000053c:	f1c4 0220 	rsb	r2, r4, #32
90000540:	fa20 f004 	lsr.w	r0, r0, r4
90000544:	fa01 f302 	lsl.w	r3, r1, r2
90000548:	ea40 0003 	orr.w	r0, r0, r3
9000054c:	fa21 f304 	lsr.w	r3, r1, r4
90000550:	ea45 0103 	orr.w	r1, r5, r3
90000554:	bd30      	pop	{r4, r5, pc}
90000556:	f1c4 040c 	rsb	r4, r4, #12
9000055a:	f1c4 0220 	rsb	r2, r4, #32
9000055e:	fa20 f002 	lsr.w	r0, r0, r2
90000562:	fa01 f304 	lsl.w	r3, r1, r4
90000566:	ea40 0003 	orr.w	r0, r0, r3
9000056a:	4629      	mov	r1, r5
9000056c:	bd30      	pop	{r4, r5, pc}
9000056e:	fa21 f004 	lsr.w	r0, r1, r4
90000572:	4629      	mov	r1, r5
90000574:	bd30      	pop	{r4, r5, pc}
90000576:	f094 0f00 	teq	r4, #0
9000057a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000057e:	bf06      	itte	eq
90000580:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000584:	3401      	addeq	r4, #1
90000586:	3d01      	subne	r5, #1
90000588:	e74e      	b.n	90000428 <__adddf3+0x8c>
9000058a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000058e:	bf18      	it	ne
90000590:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000594:	d029      	beq.n	900005ea <__adddf3+0x24e>
90000596:	ea94 0f05 	teq	r4, r5
9000059a:	bf08      	it	eq
9000059c:	ea90 0f02 	teqeq	r0, r2
900005a0:	d005      	beq.n	900005ae <__adddf3+0x212>
900005a2:	ea54 0c00 	orrs.w	ip, r4, r0
900005a6:	bf04      	itt	eq
900005a8:	4619      	moveq	r1, r3
900005aa:	4610      	moveq	r0, r2
900005ac:	bd30      	pop	{r4, r5, pc}
900005ae:	ea91 0f03 	teq	r1, r3
900005b2:	bf1e      	ittt	ne
900005b4:	2100      	movne	r1, #0
900005b6:	2000      	movne	r0, #0
900005b8:	bd30      	popne	{r4, r5, pc}
900005ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005be:	d105      	bne.n	900005cc <__adddf3+0x230>
900005c0:	0040      	lsls	r0, r0, #1
900005c2:	4149      	adcs	r1, r1
900005c4:	bf28      	it	cs
900005c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ca:	bd30      	pop	{r4, r5, pc}
900005cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005d0:	bf3c      	itt	cc
900005d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005d6:	bd30      	popcc	{r4, r5, pc}
900005d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005e4:	f04f 0000 	mov.w	r0, #0
900005e8:	bd30      	pop	{r4, r5, pc}
900005ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005ee:	bf1a      	itte	ne
900005f0:	4619      	movne	r1, r3
900005f2:	4610      	movne	r0, r2
900005f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005f8:	bf1c      	itt	ne
900005fa:	460b      	movne	r3, r1
900005fc:	4602      	movne	r2, r0
900005fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
90000602:	bf06      	itte	eq
90000604:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
90000608:	ea91 0f03 	teqeq	r1, r3
9000060c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000610:	bd30      	pop	{r4, r5, pc}
90000612:	bf00      	nop

90000614 <__aeabi_ui2d>:
90000614:	f090 0f00 	teq	r0, #0
90000618:	bf04      	itt	eq
9000061a:	2100      	moveq	r1, #0
9000061c:	4770      	bxeq	lr
9000061e:	b530      	push	{r4, r5, lr}
90000620:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000624:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000628:	f04f 0500 	mov.w	r5, #0
9000062c:	f04f 0100 	mov.w	r1, #0
90000630:	e750      	b.n	900004d4 <__adddf3+0x138>
90000632:	bf00      	nop

90000634 <__aeabi_i2d>:
90000634:	f090 0f00 	teq	r0, #0
90000638:	bf04      	itt	eq
9000063a:	2100      	moveq	r1, #0
9000063c:	4770      	bxeq	lr
9000063e:	b530      	push	{r4, r5, lr}
90000640:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000644:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000648:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000064c:	bf48      	it	mi
9000064e:	4240      	negmi	r0, r0
90000650:	f04f 0100 	mov.w	r1, #0
90000654:	e73e      	b.n	900004d4 <__adddf3+0x138>
90000656:	bf00      	nop

90000658 <__aeabi_f2d>:
90000658:	0042      	lsls	r2, r0, #1
9000065a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000065e:	ea4f 0131 	mov.w	r1, r1, rrx
90000662:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000666:	bf1f      	itttt	ne
90000668:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000066c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000670:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000674:	4770      	bxne	lr
90000676:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000067a:	bf08      	it	eq
9000067c:	4770      	bxeq	lr
9000067e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000682:	bf04      	itt	eq
90000684:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000688:	4770      	bxeq	lr
9000068a:	b530      	push	{r4, r5, lr}
9000068c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000690:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000694:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000698:	e71c      	b.n	900004d4 <__adddf3+0x138>
9000069a:	bf00      	nop

9000069c <__aeabi_ul2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f04f 0500 	mov.w	r5, #0
900006aa:	e00a      	b.n	900006c2 <__aeabi_l2d+0x16>

900006ac <__aeabi_l2d>:
900006ac:	ea50 0201 	orrs.w	r2, r0, r1
900006b0:	bf08      	it	eq
900006b2:	4770      	bxeq	lr
900006b4:	b530      	push	{r4, r5, lr}
900006b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006ba:	d502      	bpl.n	900006c2 <__aeabi_l2d+0x16>
900006bc:	4240      	negs	r0, r0
900006be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006ce:	f43f aed8 	beq.w	90000482 <__adddf3+0xe6>
900006d2:	f04f 0203 	mov.w	r2, #3
900006d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006da:	bf18      	it	ne
900006dc:	3203      	addne	r2, #3
900006de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006e2:	bf18      	it	ne
900006e4:	3203      	addne	r2, #3
900006e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006ea:	f1c2 0320 	rsb	r3, r2, #32
900006ee:	fa00 fc03 	lsl.w	ip, r0, r3
900006f2:	fa20 f002 	lsr.w	r0, r0, r2
900006f6:	fa01 fe03 	lsl.w	lr, r1, r3
900006fa:	ea40 000e 	orr.w	r0, r0, lr
900006fe:	fa21 f102 	lsr.w	r1, r1, r2
90000702:	4414      	add	r4, r2
90000704:	e6bd      	b.n	90000482 <__adddf3+0xe6>
90000706:	bf00      	nop

90000708 <__aeabi_ldivmod>:
90000708:	b97b      	cbnz	r3, 9000072a <__aeabi_ldivmod+0x22>
9000070a:	b972      	cbnz	r2, 9000072a <__aeabi_ldivmod+0x22>
9000070c:	2900      	cmp	r1, #0
9000070e:	bfbe      	ittt	lt
90000710:	2000      	movlt	r0, #0
90000712:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000716:	e006      	blt.n	90000726 <__aeabi_ldivmod+0x1e>
90000718:	bf08      	it	eq
9000071a:	2800      	cmpeq	r0, #0
9000071c:	bf1c      	itt	ne
9000071e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000722:	f04f 30ff 	movne.w	r0, #4294967295
90000726:	f000 b99d 	b.w	90000a64 <__aeabi_idiv0>
9000072a:	f1ad 0c08 	sub.w	ip, sp, #8
9000072e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000732:	2900      	cmp	r1, #0
90000734:	db09      	blt.n	9000074a <__aeabi_ldivmod+0x42>
90000736:	2b00      	cmp	r3, #0
90000738:	db1a      	blt.n	90000770 <__aeabi_ldivmod+0x68>
9000073a:	f000 f835 	bl	900007a8 <__udivmoddi4>
9000073e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000742:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000746:	b004      	add	sp, #16
90000748:	4770      	bx	lr
9000074a:	4240      	negs	r0, r0
9000074c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000750:	2b00      	cmp	r3, #0
90000752:	db1b      	blt.n	9000078c <__aeabi_ldivmod+0x84>
90000754:	f000 f828 	bl	900007a8 <__udivmoddi4>
90000758:	f8dd e004 	ldr.w	lr, [sp, #4]
9000075c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000760:	b004      	add	sp, #16
90000762:	4240      	negs	r0, r0
90000764:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000768:	4252      	negs	r2, r2
9000076a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000076e:	4770      	bx	lr
90000770:	4252      	negs	r2, r2
90000772:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000776:	f000 f817 	bl	900007a8 <__udivmoddi4>
9000077a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000077e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000782:	b004      	add	sp, #16
90000784:	4240      	negs	r0, r0
90000786:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000078a:	4770      	bx	lr
9000078c:	4252      	negs	r2, r2
9000078e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000792:	f000 f809 	bl	900007a8 <__udivmoddi4>
90000796:	f8dd e004 	ldr.w	lr, [sp, #4]
9000079a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000079e:	b004      	add	sp, #16
900007a0:	4252      	negs	r2, r2
900007a2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
900007a6:	4770      	bx	lr

900007a8 <__udivmoddi4>:
900007a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007ac:	9d08      	ldr	r5, [sp, #32]
900007ae:	460c      	mov	r4, r1
900007b0:	2b00      	cmp	r3, #0
900007b2:	d14e      	bne.n	90000852 <__udivmoddi4+0xaa>
900007b4:	4694      	mov	ip, r2
900007b6:	458c      	cmp	ip, r1
900007b8:	4686      	mov	lr, r0
900007ba:	fab2 f282 	clz	r2, r2
900007be:	d962      	bls.n	90000886 <__udivmoddi4+0xde>
900007c0:	b14a      	cbz	r2, 900007d6 <__udivmoddi4+0x2e>
900007c2:	f1c2 0320 	rsb	r3, r2, #32
900007c6:	4091      	lsls	r1, r2
900007c8:	fa20 f303 	lsr.w	r3, r0, r3
900007cc:	fa0c fc02 	lsl.w	ip, ip, r2
900007d0:	4319      	orrs	r1, r3
900007d2:	fa00 fe02 	lsl.w	lr, r0, r2
900007d6:	ea4f 471c 	mov.w	r7, ip, lsr #16
900007da:	fa1f f68c 	uxth.w	r6, ip
900007de:	fbb1 f4f7 	udiv	r4, r1, r7
900007e2:	ea4f 431e 	mov.w	r3, lr, lsr #16
900007e6:	fb07 1114 	mls	r1, r7, r4, r1
900007ea:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900007ee:	fb04 f106 	mul.w	r1, r4, r6
900007f2:	4299      	cmp	r1, r3
900007f4:	d90a      	bls.n	9000080c <__udivmoddi4+0x64>
900007f6:	eb1c 0303 	adds.w	r3, ip, r3
900007fa:	f104 30ff 	add.w	r0, r4, #4294967295
900007fe:	f080 8112 	bcs.w	90000a26 <__udivmoddi4+0x27e>
90000802:	4299      	cmp	r1, r3
90000804:	f240 810f 	bls.w	90000a26 <__udivmoddi4+0x27e>
90000808:	3c02      	subs	r4, #2
9000080a:	4463      	add	r3, ip
9000080c:	1a59      	subs	r1, r3, r1
9000080e:	fa1f f38e 	uxth.w	r3, lr
90000812:	fbb1 f0f7 	udiv	r0, r1, r7
90000816:	fb07 1110 	mls	r1, r7, r0, r1
9000081a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000081e:	fb00 f606 	mul.w	r6, r0, r6
90000822:	429e      	cmp	r6, r3
90000824:	d90a      	bls.n	9000083c <__udivmoddi4+0x94>
90000826:	eb1c 0303 	adds.w	r3, ip, r3
9000082a:	f100 31ff 	add.w	r1, r0, #4294967295
9000082e:	f080 80fc 	bcs.w	90000a2a <__udivmoddi4+0x282>
90000832:	429e      	cmp	r6, r3
90000834:	f240 80f9 	bls.w	90000a2a <__udivmoddi4+0x282>
90000838:	4463      	add	r3, ip
9000083a:	3802      	subs	r0, #2
9000083c:	1b9b      	subs	r3, r3, r6
9000083e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
90000842:	2100      	movs	r1, #0
90000844:	b11d      	cbz	r5, 9000084e <__udivmoddi4+0xa6>
90000846:	40d3      	lsrs	r3, r2
90000848:	2200      	movs	r2, #0
9000084a:	e9c5 3200 	strd	r3, r2, [r5]
9000084e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90000852:	428b      	cmp	r3, r1
90000854:	d905      	bls.n	90000862 <__udivmoddi4+0xba>
90000856:	b10d      	cbz	r5, 9000085c <__udivmoddi4+0xb4>
90000858:	e9c5 0100 	strd	r0, r1, [r5]
9000085c:	2100      	movs	r1, #0
9000085e:	4608      	mov	r0, r1
90000860:	e7f5      	b.n	9000084e <__udivmoddi4+0xa6>
90000862:	fab3 f183 	clz	r1, r3
90000866:	2900      	cmp	r1, #0
90000868:	d146      	bne.n	900008f8 <__udivmoddi4+0x150>
9000086a:	42a3      	cmp	r3, r4
9000086c:	d302      	bcc.n	90000874 <__udivmoddi4+0xcc>
9000086e:	4290      	cmp	r0, r2
90000870:	f0c0 80f0 	bcc.w	90000a54 <__udivmoddi4+0x2ac>
90000874:	1a86      	subs	r6, r0, r2
90000876:	eb64 0303 	sbc.w	r3, r4, r3
9000087a:	2001      	movs	r0, #1
9000087c:	2d00      	cmp	r5, #0
9000087e:	d0e6      	beq.n	9000084e <__udivmoddi4+0xa6>
90000880:	e9c5 6300 	strd	r6, r3, [r5]
90000884:	e7e3      	b.n	9000084e <__udivmoddi4+0xa6>
90000886:	2a00      	cmp	r2, #0
90000888:	f040 8090 	bne.w	900009ac <__udivmoddi4+0x204>
9000088c:	eba1 040c 	sub.w	r4, r1, ip
90000890:	ea4f 481c 	mov.w	r8, ip, lsr #16
90000894:	fa1f f78c 	uxth.w	r7, ip
90000898:	2101      	movs	r1, #1
9000089a:	fbb4 f6f8 	udiv	r6, r4, r8
9000089e:	ea4f 431e 	mov.w	r3, lr, lsr #16
900008a2:	fb08 4416 	mls	r4, r8, r6, r4
900008a6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008aa:	fb07 f006 	mul.w	r0, r7, r6
900008ae:	4298      	cmp	r0, r3
900008b0:	d908      	bls.n	900008c4 <__udivmoddi4+0x11c>
900008b2:	eb1c 0303 	adds.w	r3, ip, r3
900008b6:	f106 34ff 	add.w	r4, r6, #4294967295
900008ba:	d202      	bcs.n	900008c2 <__udivmoddi4+0x11a>
900008bc:	4298      	cmp	r0, r3
900008be:	f200 80cd 	bhi.w	90000a5c <__udivmoddi4+0x2b4>
900008c2:	4626      	mov	r6, r4
900008c4:	1a1c      	subs	r4, r3, r0
900008c6:	fa1f f38e 	uxth.w	r3, lr
900008ca:	fbb4 f0f8 	udiv	r0, r4, r8
900008ce:	fb08 4410 	mls	r4, r8, r0, r4
900008d2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
900008d6:	fb00 f707 	mul.w	r7, r0, r7
900008da:	429f      	cmp	r7, r3
900008dc:	d908      	bls.n	900008f0 <__udivmoddi4+0x148>
900008de:	eb1c 0303 	adds.w	r3, ip, r3
900008e2:	f100 34ff 	add.w	r4, r0, #4294967295
900008e6:	d202      	bcs.n	900008ee <__udivmoddi4+0x146>
900008e8:	429f      	cmp	r7, r3
900008ea:	f200 80b0 	bhi.w	90000a4e <__udivmoddi4+0x2a6>
900008ee:	4620      	mov	r0, r4
900008f0:	1bdb      	subs	r3, r3, r7
900008f2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
900008f6:	e7a5      	b.n	90000844 <__udivmoddi4+0x9c>
900008f8:	f1c1 0620 	rsb	r6, r1, #32
900008fc:	408b      	lsls	r3, r1
900008fe:	fa22 f706 	lsr.w	r7, r2, r6
90000902:	431f      	orrs	r7, r3
90000904:	fa20 fc06 	lsr.w	ip, r0, r6
90000908:	fa04 f301 	lsl.w	r3, r4, r1
9000090c:	ea43 030c 	orr.w	r3, r3, ip
90000910:	40f4      	lsrs	r4, r6
90000912:	fa00 f801 	lsl.w	r8, r0, r1
90000916:	0c38      	lsrs	r0, r7, #16
90000918:	ea4f 4913 	mov.w	r9, r3, lsr #16
9000091c:	fbb4 fef0 	udiv	lr, r4, r0
90000920:	fa1f fc87 	uxth.w	ip, r7
90000924:	fb00 441e 	mls	r4, r0, lr, r4
90000928:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
9000092c:	fb0e f90c 	mul.w	r9, lr, ip
90000930:	45a1      	cmp	r9, r4
90000932:	fa02 f201 	lsl.w	r2, r2, r1
90000936:	d90a      	bls.n	9000094e <__udivmoddi4+0x1a6>
90000938:	193c      	adds	r4, r7, r4
9000093a:	f10e 3aff 	add.w	sl, lr, #4294967295
9000093e:	f080 8084 	bcs.w	90000a4a <__udivmoddi4+0x2a2>
90000942:	45a1      	cmp	r9, r4
90000944:	f240 8081 	bls.w	90000a4a <__udivmoddi4+0x2a2>
90000948:	f1ae 0e02 	sub.w	lr, lr, #2
9000094c:	443c      	add	r4, r7
9000094e:	eba4 0409 	sub.w	r4, r4, r9
90000952:	fa1f f983 	uxth.w	r9, r3
90000956:	fbb4 f3f0 	udiv	r3, r4, r0
9000095a:	fb00 4413 	mls	r4, r0, r3, r4
9000095e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
90000962:	fb03 fc0c 	mul.w	ip, r3, ip
90000966:	45a4      	cmp	ip, r4
90000968:	d907      	bls.n	9000097a <__udivmoddi4+0x1d2>
9000096a:	193c      	adds	r4, r7, r4
9000096c:	f103 30ff 	add.w	r0, r3, #4294967295
90000970:	d267      	bcs.n	90000a42 <__udivmoddi4+0x29a>
90000972:	45a4      	cmp	ip, r4
90000974:	d965      	bls.n	90000a42 <__udivmoddi4+0x29a>
90000976:	3b02      	subs	r3, #2
90000978:	443c      	add	r4, r7
9000097a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
9000097e:	fba0 9302 	umull	r9, r3, r0, r2
90000982:	eba4 040c 	sub.w	r4, r4, ip
90000986:	429c      	cmp	r4, r3
90000988:	46ce      	mov	lr, r9
9000098a:	469c      	mov	ip, r3
9000098c:	d351      	bcc.n	90000a32 <__udivmoddi4+0x28a>
9000098e:	d04e      	beq.n	90000a2e <__udivmoddi4+0x286>
90000990:	b155      	cbz	r5, 900009a8 <__udivmoddi4+0x200>
90000992:	ebb8 030e 	subs.w	r3, r8, lr
90000996:	eb64 040c 	sbc.w	r4, r4, ip
9000099a:	fa04 f606 	lsl.w	r6, r4, r6
9000099e:	40cb      	lsrs	r3, r1
900009a0:	431e      	orrs	r6, r3
900009a2:	40cc      	lsrs	r4, r1
900009a4:	e9c5 6400 	strd	r6, r4, [r5]
900009a8:	2100      	movs	r1, #0
900009aa:	e750      	b.n	9000084e <__udivmoddi4+0xa6>
900009ac:	f1c2 0320 	rsb	r3, r2, #32
900009b0:	fa20 f103 	lsr.w	r1, r0, r3
900009b4:	fa0c fc02 	lsl.w	ip, ip, r2
900009b8:	fa24 f303 	lsr.w	r3, r4, r3
900009bc:	4094      	lsls	r4, r2
900009be:	430c      	orrs	r4, r1
900009c0:	ea4f 481c 	mov.w	r8, ip, lsr #16
900009c4:	fa00 fe02 	lsl.w	lr, r0, r2
900009c8:	fa1f f78c 	uxth.w	r7, ip
900009cc:	fbb3 f0f8 	udiv	r0, r3, r8
900009d0:	fb08 3110 	mls	r1, r8, r0, r3
900009d4:	0c23      	lsrs	r3, r4, #16
900009d6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900009da:	fb00 f107 	mul.w	r1, r0, r7
900009de:	4299      	cmp	r1, r3
900009e0:	d908      	bls.n	900009f4 <__udivmoddi4+0x24c>
900009e2:	eb1c 0303 	adds.w	r3, ip, r3
900009e6:	f100 36ff 	add.w	r6, r0, #4294967295
900009ea:	d22c      	bcs.n	90000a46 <__udivmoddi4+0x29e>
900009ec:	4299      	cmp	r1, r3
900009ee:	d92a      	bls.n	90000a46 <__udivmoddi4+0x29e>
900009f0:	3802      	subs	r0, #2
900009f2:	4463      	add	r3, ip
900009f4:	1a5b      	subs	r3, r3, r1
900009f6:	b2a4      	uxth	r4, r4
900009f8:	fbb3 f1f8 	udiv	r1, r3, r8
900009fc:	fb08 3311 	mls	r3, r8, r1, r3
90000a00:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
90000a04:	fb01 f307 	mul.w	r3, r1, r7
90000a08:	42a3      	cmp	r3, r4
90000a0a:	d908      	bls.n	90000a1e <__udivmoddi4+0x276>
90000a0c:	eb1c 0404 	adds.w	r4, ip, r4
90000a10:	f101 36ff 	add.w	r6, r1, #4294967295
90000a14:	d213      	bcs.n	90000a3e <__udivmoddi4+0x296>
90000a16:	42a3      	cmp	r3, r4
90000a18:	d911      	bls.n	90000a3e <__udivmoddi4+0x296>
90000a1a:	3902      	subs	r1, #2
90000a1c:	4464      	add	r4, ip
90000a1e:	1ae4      	subs	r4, r4, r3
90000a20:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
90000a24:	e739      	b.n	9000089a <__udivmoddi4+0xf2>
90000a26:	4604      	mov	r4, r0
90000a28:	e6f0      	b.n	9000080c <__udivmoddi4+0x64>
90000a2a:	4608      	mov	r0, r1
90000a2c:	e706      	b.n	9000083c <__udivmoddi4+0x94>
90000a2e:	45c8      	cmp	r8, r9
90000a30:	d2ae      	bcs.n	90000990 <__udivmoddi4+0x1e8>
90000a32:	ebb9 0e02 	subs.w	lr, r9, r2
90000a36:	eb63 0c07 	sbc.w	ip, r3, r7
90000a3a:	3801      	subs	r0, #1
90000a3c:	e7a8      	b.n	90000990 <__udivmoddi4+0x1e8>
90000a3e:	4631      	mov	r1, r6
90000a40:	e7ed      	b.n	90000a1e <__udivmoddi4+0x276>
90000a42:	4603      	mov	r3, r0
90000a44:	e799      	b.n	9000097a <__udivmoddi4+0x1d2>
90000a46:	4630      	mov	r0, r6
90000a48:	e7d4      	b.n	900009f4 <__udivmoddi4+0x24c>
90000a4a:	46d6      	mov	lr, sl
90000a4c:	e77f      	b.n	9000094e <__udivmoddi4+0x1a6>
90000a4e:	4463      	add	r3, ip
90000a50:	3802      	subs	r0, #2
90000a52:	e74d      	b.n	900008f0 <__udivmoddi4+0x148>
90000a54:	4606      	mov	r6, r0
90000a56:	4623      	mov	r3, r4
90000a58:	4608      	mov	r0, r1
90000a5a:	e70f      	b.n	9000087c <__udivmoddi4+0xd4>
90000a5c:	3e02      	subs	r6, #2
90000a5e:	4463      	add	r3, ip
90000a60:	e730      	b.n	900008c4 <__udivmoddi4+0x11c>
90000a62:	bf00      	nop

90000a64 <__aeabi_idiv0>:
90000a64:	4770      	bx	lr
90000a66:	bf00      	nop

90000a68 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000a68:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000aa0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000a6c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000a6e:	e003      	b.n	90000a78 <LoopCopyDataInit>

90000a70 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000a70:	4b0c      	ldr	r3, [pc, #48]	@ (90000aa4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000a72:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000a74:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000a76:	3104      	adds	r1, #4

90000a78 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000a78:	480b      	ldr	r0, [pc, #44]	@ (90000aa8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000a7a:	4b0c      	ldr	r3, [pc, #48]	@ (90000aac <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000a7c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000a7e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000a80:	d3f6      	bcc.n	90000a70 <CopyDataInit>
  ldr  r2, =_sbss
90000a82:	4a0b      	ldr	r2, [pc, #44]	@ (90000ab0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000a84:	e002      	b.n	90000a8c <LoopFillZerobss>

90000a86 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000a86:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000a88:	f842 3b04 	str.w	r3, [r2], #4

90000a8c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000a8c:	4b09      	ldr	r3, [pc, #36]	@ (90000ab4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000a8e:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000a90:	d3f9      	bcc.n	90000a86 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000a92:	f007 f9b5 	bl	90007e00 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000a96:	f02b ff2d 	bl	9002c8f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000a9a:	f003 fa87 	bl	90003fac <main>
  bx  lr    
90000a9e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000aa0:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000aa4:	90031360 	.word	0x90031360
  ldr  r0, =_sdata
90000aa8:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000aac:	24000388 	.word	0x24000388
  ldr  r2, =_sbss
90000ab0:	240005a0 	.word	0x240005a0
  ldr  r3, = _ebss
90000ab4:	240252d8 	.word	0x240252d8

90000ab8 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000ab8:	e7fe      	b.n	90000ab8 <ADC3_IRQHandler>
	...

90000abc <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000abc:	4770      	bx	lr
90000abe:	bf00      	nop

90000ac0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000ac0:	4770      	bx	lr
90000ac2:	bf00      	nop

90000ac4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000ac4:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000ac6:	f002 f933 	bl	90002d30 <touchgfx_components_init>
    touchgfx_init();
}
90000aca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000ace:	f002 b8ad 	b.w	90002c2c <touchgfx_init>
90000ad2:	bf00      	nop

90000ad4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000ad4:	f002 b92e 	b.w	90002d34 <touchgfx_taskEntry>

90000ad8 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000ad8:	6840      	ldr	r0, [r0, #4]
    }
90000ada:	4770      	bx	lr

90000adc <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000adc:	6041      	str	r1, [r0, #4]
    }
90000ade:	4770      	bx	lr

90000ae0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ae0:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000ae4:	4b08      	ldr	r3, [pc, #32]	@ (90000b08 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000ae6:	4a09      	ldr	r2, [pc, #36]	@ (90000b0c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000ae8:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000aec:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000af0:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000af4:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000af8:	430a      	orrs	r2, r1
90000afa:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000afe:	681a      	ldr	r2, [r3, #0]
90000b00:	f042 0201 	orr.w	r2, r2, #1
90000b04:	601a      	str	r2, [r3, #0]
}
90000b06:	4770      	bx	lr
90000b08:	e0001000 	.word	0xe0001000
90000b0c:	c5acce55 	.word	0xc5acce55

90000b10 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b10:	1a52      	subs	r2, r2, r1
90000b12:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b16:	fbb2 f0f3 	udiv	r0, r2, r3
90000b1a:	4770      	bx	lr

90000b1c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b1c:	4b01      	ldr	r3, [pc, #4]	@ (90000b24 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b1e:	6858      	ldr	r0, [r3, #4]
}
90000b20:	4770      	bx	lr
90000b22:	bf00      	nop
90000b24:	e0001000 	.word	0xe0001000

90000b28 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b28:	4770      	bx	lr
90000b2a:	bf00      	nop

90000b2c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b2c:	b510      	push	{r4, lr}
90000b2e:	4604      	mov	r4, r0
90000b30:	210c      	movs	r1, #12
90000b32:	f02b f812 	bl	9002bb5a <_ZdlPvj>
90000b36:	4620      	mov	r0, r4
90000b38:	bd10      	pop	{r4, pc}
90000b3a:	bf00      	nop

90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b3c:	6803      	ldr	r3, [r0, #0]
90000b3e:	4a0c      	ldr	r2, [pc, #48]	@ (90000b70 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b40:	691b      	ldr	r3, [r3, #16]
{
90000b42:	b510      	push	{r4, lr}
90000b44:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000b46:	b149      	cbz	r1, 90000b5c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b48:	4293      	cmp	r3, r2
90000b4a:	d10d      	bne.n	90000b68 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000b4c:	4b09      	ldr	r3, [pc, #36]	@ (90000b74 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b4e:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b50:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000b52:	6863      	ldr	r3, [r4, #4]
90000b54:	1a9b      	subs	r3, r3, r2
90000b56:	4403      	add	r3, r0
90000b58:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000b5a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000b5c:	4293      	cmp	r3, r2
90000b5e:	d105      	bne.n	90000b6c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000b60:	4b04      	ldr	r3, [pc, #16]	@ (90000b74 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000b62:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000b64:	60a0      	str	r0, [r4, #8]
}
90000b66:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b68:	4798      	blx	r3
90000b6a:	e7f1      	b.n	90000b50 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000b6c:	4798      	blx	r3
90000b6e:	e7f9      	b.n	90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000b70:	90000b1d 	.word	0x90000b1d
90000b74:	e0001000 	.word	0xe0001000

90000b78 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000b78:	4770      	bx	lr
90000b7a:	bf00      	nop
90000b7c:	0000      	movs	r0, r0
	...

90000b80 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000b80:	b500      	push	{lr}
90000b82:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000b84:	2208      	movs	r2, #8
90000b86:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000b88:	2000      	movs	r0, #0
90000b8a:	4669      	mov	r1, sp
    hTS.Width = 480;
90000b8c:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000ba8 <_ZN20STM32TouchController4initEv+0x28>
90000b90:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000b94:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000b98:	f007 f844 	bl	90007c24 <BSP_TS_Init>
}
90000b9c:	b005      	add	sp, #20
90000b9e:	f85d fb04 	ldr.w	pc, [sp], #4
90000ba2:	bf00      	nop
90000ba4:	f3af 8000 	nop.w
90000ba8:	000001e0 	.word	0x000001e0
90000bac:	00000110 	.word	0x00000110

90000bb0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000bb0:	b530      	push	{r4, r5, lr}
90000bb2:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000bb4:	2000      	movs	r0, #0
{
90000bb6:	460d      	mov	r5, r1
90000bb8:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000bba:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000bbc:	9001      	str	r0, [sp, #4]
90000bbe:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000bc2:	f007 f8bd 	bl	90007d40 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000bc6:	9801      	ldr	r0, [sp, #4]
90000bc8:	b120      	cbz	r0, 90000bd4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000bca:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000bcc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000bd0:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000bd2:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000bd4:	b005      	add	sp, #20
90000bd6:	bd30      	pop	{r4, r5, pc}

90000bd8 <_ZN20STM32TouchControllerD0Ev>:
90000bd8:	b510      	push	{r4, lr}
90000bda:	4604      	mov	r4, r0
90000bdc:	2104      	movs	r1, #4
90000bde:	f02a ffbc 	bl	9002bb5a <_ZdlPvj>
90000be2:	4620      	mov	r0, r4
90000be4:	bd10      	pop	{r4, pc}
90000be6:	bf00      	nop

90000be8 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
90000be8:	b508      	push	{r3, lr}
    for (int id = 0; id <= 4; id++)
90000bea:	2300      	movs	r3, #0
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
90000bec:	2b03      	cmp	r3, #3
90000bee:	d82b      	bhi.n	90000c48 <_ZN8touchgfx4GPIO4initEv+0x60>
90000bf0:	e8df f003 	tbb	[pc, r3]
90000bf4:	020c1620 	.word	0x020c1620
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000bf8:	2140      	movs	r1, #64	@ 0x40
90000bfa:	4814      	ldr	r0, [pc, #80]	@ (90000c4c <_ZN8touchgfx4GPIO4initEv+0x64>)
90000bfc:	f007 fe1c 	bl	90008838 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c00:	2801      	cmp	r0, #1
90000c02:	d101      	bne.n	90000c08 <_ZN8touchgfx4GPIO4initEv+0x20>
            GPIO_InvertedLevels[id] = 1;
90000c04:	4b12      	ldr	r3, [pc, #72]	@ (90000c50 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c06:	60d8      	str	r0, [r3, #12]
    for (int id = 0; id <= 4; id++)
90000c08:	2304      	movs	r3, #4
90000c0a:	e7ef      	b.n	90000bec <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000c0c:	2140      	movs	r1, #64	@ 0x40
90000c0e:	4811      	ldr	r0, [pc, #68]	@ (90000c54 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c10:	f007 fe12 	bl	90008838 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c14:	2801      	cmp	r0, #1
90000c16:	d101      	bne.n	90000c1c <_ZN8touchgfx4GPIO4initEv+0x34>
            GPIO_InvertedLevels[id] = 1;
90000c18:	4b0d      	ldr	r3, [pc, #52]	@ (90000c50 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c1a:	6098      	str	r0, [r3, #8]
    for (int id = 0; id <= 4; id++)
90000c1c:	2303      	movs	r3, #3
90000c1e:	e7e5      	b.n	90000bec <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c20:	2180      	movs	r1, #128	@ 0x80
90000c22:	480c      	ldr	r0, [pc, #48]	@ (90000c54 <_ZN8touchgfx4GPIO4initEv+0x6c>)
90000c24:	f007 fe08 	bl	90008838 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c28:	2801      	cmp	r0, #1
90000c2a:	d101      	bne.n	90000c30 <_ZN8touchgfx4GPIO4initEv+0x48>
            GPIO_InvertedLevels[id] = 1;
90000c2c:	4b08      	ldr	r3, [pc, #32]	@ (90000c50 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c2e:	6058      	str	r0, [r3, #4]
    for (int id = 0; id <= 4; id++)
90000c30:	2302      	movs	r3, #2
90000c32:	e7db      	b.n	90000bec <_ZN8touchgfx4GPIO4initEv+0x4>
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c34:	2108      	movs	r1, #8
90000c36:	4808      	ldr	r0, [pc, #32]	@ (90000c58 <_ZN8touchgfx4GPIO4initEv+0x70>)
90000c38:	f007 fdfe 	bl	90008838 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c3c:	2801      	cmp	r0, #1
90000c3e:	d101      	bne.n	90000c44 <_ZN8touchgfx4GPIO4initEv+0x5c>
            GPIO_InvertedLevels[id] = 1;
90000c40:	4b03      	ldr	r3, [pc, #12]	@ (90000c50 <_ZN8touchgfx4GPIO4initEv+0x68>)
90000c42:	6018      	str	r0, [r3, #0]
    for (int id = 0; id <= 4; id++)
90000c44:	2301      	movs	r3, #1
90000c46:	e7d1      	b.n	90000bec <_ZN8touchgfx4GPIO4initEv+0x4>
}
90000c48:	bd08      	pop	{r3, pc}
90000c4a:	bf00      	nop
90000c4c:	58020000 	.word	0x58020000
90000c50:	240005bc 	.word	0x240005bc
90000c54:	58020400 	.word	0x58020400
90000c58:	58021800 	.word	0x58021800

90000c5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c5c:	2803      	cmp	r0, #3
90000c5e:	d827      	bhi.n	90000cb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c60:	e8df f000 	tbb	[pc, r0]
90000c64:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000c68:	4b12      	ldr	r3, [pc, #72]	@ (90000cb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c6a:	2140      	movs	r1, #64	@ 0x40
90000c6c:	4812      	ldr	r0, [pc, #72]	@ (90000cb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000c6e:	68da      	ldr	r2, [r3, #12]
90000c70:	fab2 f282 	clz	r2, r2
90000c74:	0952      	lsrs	r2, r2, #5
90000c76:	f007 bde5 	b.w	90008844 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000c7a:	4b0e      	ldr	r3, [pc, #56]	@ (90000cb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c7c:	2140      	movs	r1, #64	@ 0x40
90000c7e:	480f      	ldr	r0, [pc, #60]	@ (90000cbc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c80:	689a      	ldr	r2, [r3, #8]
90000c82:	fab2 f282 	clz	r2, r2
90000c86:	0952      	lsrs	r2, r2, #5
90000c88:	f007 bddc 	b.w	90008844 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000c8c:	4b09      	ldr	r3, [pc, #36]	@ (90000cb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000c8e:	2180      	movs	r1, #128	@ 0x80
90000c90:	480a      	ldr	r0, [pc, #40]	@ (90000cbc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000c92:	685a      	ldr	r2, [r3, #4]
90000c94:	fab2 f282 	clz	r2, r2
90000c98:	0952      	lsrs	r2, r2, #5
90000c9a:	f007 bdd3 	b.w	90008844 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000c9e:	4b05      	ldr	r3, [pc, #20]	@ (90000cb4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000ca0:	2108      	movs	r1, #8
90000ca2:	4807      	ldr	r0, [pc, #28]	@ (90000cc0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000ca4:	681a      	ldr	r2, [r3, #0]
90000ca6:	fab2 f282 	clz	r2, r2
90000caa:	0952      	lsrs	r2, r2, #5
90000cac:	f007 bdca 	b.w	90008844 <HAL_GPIO_WritePin>
}
90000cb0:	4770      	bx	lr
90000cb2:	bf00      	nop
90000cb4:	240005bc 	.word	0x240005bc
90000cb8:	58020000 	.word	0x58020000
90000cbc:	58020400 	.word	0x58020400
90000cc0:	58021800 	.word	0x58021800

90000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cc4:	2803      	cmp	r0, #3
90000cc6:	d827      	bhi.n	90000d18 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000cc8:	e8df f000 	tbb	[pc, r0]
90000ccc:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000cd0:	4b12      	ldr	r3, [pc, #72]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cd2:	2140      	movs	r1, #64	@ 0x40
90000cd4:	4812      	ldr	r0, [pc, #72]	@ (90000d20 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000cd6:	68da      	ldr	r2, [r3, #12]
90000cd8:	3a00      	subs	r2, #0
90000cda:	bf18      	it	ne
90000cdc:	2201      	movne	r2, #1
90000cde:	f007 bdb1 	b.w	90008844 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000ce2:	4b0e      	ldr	r3, [pc, #56]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000ce4:	2140      	movs	r1, #64	@ 0x40
90000ce6:	480f      	ldr	r0, [pc, #60]	@ (90000d24 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000ce8:	689a      	ldr	r2, [r3, #8]
90000cea:	3a00      	subs	r2, #0
90000cec:	bf18      	it	ne
90000cee:	2201      	movne	r2, #1
90000cf0:	f007 bda8 	b.w	90008844 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000cf4:	4b09      	ldr	r3, [pc, #36]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000cf6:	2180      	movs	r1, #128	@ 0x80
90000cf8:	480a      	ldr	r0, [pc, #40]	@ (90000d24 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000cfa:	685a      	ldr	r2, [r3, #4]
90000cfc:	3a00      	subs	r2, #0
90000cfe:	bf18      	it	ne
90000d00:	2201      	movne	r2, #1
90000d02:	f007 bd9f 	b.w	90008844 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000d06:	4b05      	ldr	r3, [pc, #20]	@ (90000d1c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d08:	2108      	movs	r1, #8
90000d0a:	4807      	ldr	r0, [pc, #28]	@ (90000d28 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000d0c:	681a      	ldr	r2, [r3, #0]
90000d0e:	3a00      	subs	r2, #0
90000d10:	bf18      	it	ne
90000d12:	2201      	movne	r2, #1
90000d14:	f007 bd96 	b.w	90008844 <HAL_GPIO_WritePin>
}
90000d18:	4770      	bx	lr
90000d1a:	bf00      	nop
90000d1c:	240005bc 	.word	0x240005bc
90000d20:	58020000 	.word	0x58020000
90000d24:	58020400 	.word	0x58020400
90000d28:	58021800 	.word	0x58021800

90000d2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d2c:	2803      	cmp	r0, #3
90000d2e:	d813      	bhi.n	90000d58 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d30:	e8df f000 	tbb	[pc, r0]
90000d34:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d38:	2140      	movs	r1, #64	@ 0x40
90000d3a:	4808      	ldr	r0, [pc, #32]	@ (90000d5c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d3c:	f007 bd86 	b.w	9000884c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d40:	2140      	movs	r1, #64	@ 0x40
90000d42:	4807      	ldr	r0, [pc, #28]	@ (90000d60 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d44:	f007 bd82 	b.w	9000884c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d48:	2180      	movs	r1, #128	@ 0x80
90000d4a:	4805      	ldr	r0, [pc, #20]	@ (90000d60 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d4c:	f007 bd7e 	b.w	9000884c <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d50:	2108      	movs	r1, #8
90000d52:	4804      	ldr	r0, [pc, #16]	@ (90000d64 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d54:	f007 bd7a 	b.w	9000884c <HAL_GPIO_TogglePin>
}
90000d58:	4770      	bx	lr
90000d5a:	bf00      	nop
90000d5c:	58020000 	.word	0x58020000
90000d60:	58020400 	.word	0x58020400
90000d64:	58021800 	.word	0x58021800

90000d68 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000d68:	2000      	movs	r0, #0
90000d6a:	4770      	bx	lr

90000d6c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000d6c:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000d6e:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000d72:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000d76:	4770      	bx	lr

90000d78 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000d78:	2000      	movs	r0, #0
90000d7a:	4770      	bx	lr

90000d7c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d7c:	1e0a      	subs	r2, r1, #0
90000d7e:	4b03      	ldr	r3, [pc, #12]	@ (90000d8c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000d80:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000d82:	bf18      	it	ne
90000d84:	2201      	movne	r2, #1
90000d86:	701a      	strb	r2, [r3, #0]
    }
90000d88:	4770      	bx	lr
90000d8a:	bf00      	nop
90000d8c:	24024595 	.word	0x24024595

90000d90 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000d90:	2000      	movs	r0, #0
90000d92:	4770      	bx	lr

90000d94 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000d94:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000d96:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000d98:	b103      	cbz	r3, 90000d9c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000d9a:	4718      	bx	r3
        }
    }
90000d9c:	4770      	bx	lr
90000d9e:	bf00      	nop

90000da0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000da0:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000da4:	4770      	bx	lr
90000da6:	bf00      	nop

90000da8 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000da8:	4770      	bx	lr
90000daa:	bf00      	nop

90000dac <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000dac:	b510      	push	{r4, lr}
90000dae:	4604      	mov	r4, r0
        swapFrameBuffers();
90000db0:	f013 fa56 	bl	90014260 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000db4:	6823      	ldr	r3, [r4, #0]
90000db6:	4620      	mov	r0, r4
90000db8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
    }
90000dbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000dc0:	4718      	bx	r3
90000dc2:	bf00      	nop

90000dc4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000dc4:	f002 b8cc 	b.w	90002f60 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000dc8 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000dc8:	f002 b8d0 	b.w	90002f6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000dcc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000dcc:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000dce:	f002 f96b 	bl	900030a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000dd2:	4812      	ldr	r0, [pc, #72]	@ (90000e1c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000dd4:	2300      	movs	r3, #0
90000dd6:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000dda:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000dde:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000de2:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000de6:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000dea:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000dee:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000df2:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000df6:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000df8:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000dfc:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000dfe:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000e02:	1c5a      	adds	r2, r3, #1
90000e04:	d1f8      	bne.n	90000df8 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000e06:	f1ac 0c20 	sub.w	ip, ip, #32
90000e0a:	f11c 0f20 	cmn.w	ip, #32
90000e0e:	d1f0      	bne.n	90000df2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e10:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e14:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e18:	bd10      	pop	{r4, pc}
90000e1a:	bf00      	nop
90000e1c:	e000ed00 	.word	0xe000ed00

90000e20 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e20:	f002 b87a 	b.w	90002f18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e24 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e24:	f002 b9c2 	b.w	900031ac <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e28 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e28:	f002 b9ac 	b.w	90003184 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e2c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e2c:	f002 b87e 	b.w	90002f2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e30:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e32:	4b09      	ldr	r3, [pc, #36]	@ (90000e58 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e34:	881b      	ldrh	r3, [r3, #0]
90000e36:	428b      	cmp	r3, r1
90000e38:	d808      	bhi.n	90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e3a:	4b08      	ldr	r3, [pc, #32]	@ (90000e5c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e3c:	881b      	ldrh	r3, [r3, #0]
90000e3e:	4293      	cmp	r3, r2
90000e40:	d804      	bhi.n	90000e4c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e42:	4807      	ldr	r0, [pc, #28]	@ (90000e60 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e44:	4b07      	ldr	r3, [pc, #28]	@ (90000e64 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e46:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e48:	801a      	strh	r2, [r3, #0]
    }
90000e4a:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e4c:	4b06      	ldr	r3, [pc, #24]	@ (90000e68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e4e:	219e      	movs	r1, #158	@ 0x9e
90000e50:	4a06      	ldr	r2, [pc, #24]	@ (90000e6c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e52:	4807      	ldr	r0, [pc, #28]	@ (90000e70 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e54:	f02b f9f8 	bl	9002c248 <__assert_func>
90000e58:	2402458a 	.word	0x2402458a
90000e5c:	2402458c 	.word	0x2402458c
90000e60:	24024590 	.word	0x24024590
90000e64:	24024592 	.word	0x24024592
90000e68:	9002d348 	.word	0x9002d348
90000e6c:	9002d3ac 	.word	0x9002d3ac
90000e70:	9002d3f0 	.word	0x9002d3f0

90000e74 <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000e74:	f012 bd70 	b.w	90013958 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000e78 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000e78:	f012 bc44 	b.w	90013704 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000e7c <_ZN11TouchGFXHALD0Ev>:
90000e7c:	b510      	push	{r4, lr}
90000e7e:	4604      	mov	r4, r0
90000e80:	2188      	movs	r1, #136	@ 0x88
90000e82:	f02a fe6a 	bl	9002bb5a <_ZdlPvj>
90000e86:	4620      	mov	r0, r4
90000e88:	bd10      	pop	{r4, pc}
90000e8a:	bf00      	nop

90000e8c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
90000e8c:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000e90:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
90000e94:	4b0b      	ldr	r3, [pc, #44]	@ (90000ec4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000e96:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000e98:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000e9a:	d00b      	beq.n	90000eb4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000e9c:	b94a      	cbnz	r2, 90000eb2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
90000e9e:	4a0a      	ldr	r2, [pc, #40]	@ (90000ec8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
90000ea0:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ea4:	4909      	ldr	r1, [pc, #36]	@ (90000ecc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
90000ea6:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
90000ea8:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eac:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000eae:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eb0:	8013      	strh	r3, [r2, #0]
        }
    }
90000eb2:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000eb4:	2a00      	cmp	r2, #0
90000eb6:	d0fc      	beq.n	90000eb2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000eb8:	4a03      	ldr	r2, [pc, #12]	@ (90000ec8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000eba:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ebe:	4903      	ldr	r1, [pc, #12]	@ (90000ecc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000ec0:	e7f1      	b.n	90000ea6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000ec2:	bf00      	nop
90000ec4:	2402458e 	.word	0x2402458e
90000ec8:	2402458c 	.word	0x2402458c
90000ecc:	2402458a 	.word	0x2402458a

90000ed0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000ed0:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000ed2:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000ed6:	b118      	cbz	r0, 90000ee0 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000ed8:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000eda:	6803      	ldr	r3, [r0, #0]
90000edc:	681b      	ldr	r3, [r3, #0]
90000ede:	4718      	bx	r3
    }
90000ee0:	4770      	bx	lr
90000ee2:	bf00      	nop

90000ee4 <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000ee4:	6840      	ldr	r0, [r0, #4]
90000ee6:	4a04      	ldr	r2, [pc, #16]	@ (90000ef8 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000ee8:	6803      	ldr	r3, [r0, #0]
90000eea:	699b      	ldr	r3, [r3, #24]
90000eec:	4293      	cmp	r3, r2
90000eee:	d101      	bne.n	90000ef4 <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000ef0:	2000      	movs	r0, #0
90000ef2:	4770      	bx	lr
        return dma.getDMAType();
90000ef4:	4718      	bx	r3
90000ef6:	bf00      	nop
90000ef8:	90000d69 	.word	0x90000d69

90000efc <_ZN11TouchGFXHAL10initializeEv>:
{
90000efc:	b538      	push	{r3, r4, r5, lr}
90000efe:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000f00:	f002 fad6 	bl	900034b0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f04:	4a0b      	ldr	r2, [pc, #44]	@ (90000f34 <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000f06:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f08:	490b      	ldr	r1, [pc, #44]	@ (90000f38 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000f0a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
90000f0e:	4293      	cmp	r3, r2
90000f10:	d10d      	bne.n	90000f2e <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f12:	4b0a      	ldr	r3, [pc, #40]	@ (90000f3c <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f14:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f16:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f18:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f1a:	f104 057c 	add.w	r5, r4, #124	@ 0x7c
90000f1e:	4628      	mov	r0, r5
90000f20:	f7ff fdde 	bl	90000ae0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f24:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f26:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f28:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f2c:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f2e:	4620      	mov	r0, r4
90000f30:	4798      	blx	r3
90000f32:	e7f2      	b.n	90000f1a <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f34:	90000d7d 	.word	0x90000d7d
90000f38:	d0000000 	.word	0xd0000000
90000f3c:	24024595 	.word	0x24024595

90000f40 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f40:	b1a9      	cbz	r1, 90000f6e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f42:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f44:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f46:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f48:	bf18      	it	ne
90000f4a:	2201      	movne	r2, #1
90000f4c:	490c      	ldr	r1, [pc, #48]	@ (90000f80 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f4e:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f50:	6802      	ldr	r2, [r0, #0]
90000f52:	490c      	ldr	r1, [pc, #48]	@ (90000f84 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f54:	f8d2 208c 	ldr.w	r2, [r2, #140]	@ 0x8c
90000f58:	428a      	cmp	r2, r1
90000f5a:	d106      	bne.n	90000f6a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f5c:	1e19      	subs	r1, r3, #0
90000f5e:	4a0a      	ldr	r2, [pc, #40]	@ (90000f88 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f60:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f62:	bf18      	it	ne
90000f64:	2101      	movne	r1, #1
90000f66:	7011      	strb	r1, [r2, #0]
90000f68:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000f6a:	4619      	mov	r1, r3
90000f6c:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f6e:	4b07      	ldr	r3, [pc, #28]	@ (90000f8c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000f70:	f240 21d2 	movw	r1, #722	@ 0x2d2
90000f74:	4a06      	ldr	r2, [pc, #24]	@ (90000f90 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000f76:	4807      	ldr	r0, [pc, #28]	@ (90000f94 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000f78:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f7a:	f02b f965 	bl	9002c248 <__assert_func>
90000f7e:	bf00      	nop
90000f80:	24024594 	.word	0x24024594
90000f84:	90000d7d 	.word	0x90000d7d
90000f88:	24024595 	.word	0x24024595
90000f8c:	9002d438 	.word	0x9002d438
90000f90:	9002d470 	.word	0x9002d470
90000f94:	9002d3f0 	.word	0x9002d3f0

90000f98 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000f98:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000f9a:	6803      	ldr	r3, [r0, #0]
{
90000f9c:	4604      	mov	r4, r0
90000f9e:	4d14      	ldr	r5, [pc, #80]	@ (90000ff0 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000fa0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90000fa4:	4798      	blx	r3
    enableInterrupts();
90000fa6:	6823      	ldr	r3, [r4, #0]
90000fa8:	4620      	mov	r0, r4
90000faa:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90000fac:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000fae:	f001 f9ed 	bl	9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000fb2:	6823      	ldr	r3, [r4, #0]
90000fb4:	4620      	mov	r0, r4
90000fb6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fb8:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000fba:	2201      	movs	r2, #1
90000fbc:	2180      	movs	r1, #128	@ 0x80
90000fbe:	480d      	ldr	r0, [pc, #52]	@ (90000ff4 <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90000fc0:	f007 fc40 	bl	90008844 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000fc4:	2201      	movs	r2, #1
90000fc6:	480c      	ldr	r0, [pc, #48]	@ (90000ff8 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90000fc8:	4611      	mov	r1, r2
90000fca:	f007 fc3b 	bl	90008844 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90000fce:	f001 f9dd 	bl	9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
90000fd2:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
90000fd4:	4620      	mov	r0, r4
90000fd6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90000fd8:	42ab      	cmp	r3, r5
90000fda:	d107      	bne.n	90000fec <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90000fdc:	f013 f940 	bl	90014260 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000fe0:	6823      	ldr	r3, [r4, #0]
90000fe2:	4620      	mov	r0, r4
90000fe4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90000fe8:	4798      	blx	r3
    }
90000fea:	e7f0      	b.n	90000fce <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000fec:	4798      	blx	r3
90000fee:	e7ee      	b.n	90000fce <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90000ff0:	90000dad 	.word	0x90000dad
90000ff4:	58020c00 	.word	0x58020c00
90000ff8:	58022800 	.word	0x58022800

90000ffc <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90000ffc:	4601      	mov	r1, r0
    {
90000ffe:	b508      	push	{r3, lr}
        return instance;
90001000:	4b05      	ldr	r3, [pc, #20]	@ (90001018 <IdleTaskHook+0x1c>)
90001002:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
90001004:	b121      	cbz	r1, 90001010 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
90001006:	2101      	movs	r1, #1
90001008:	f013 f944 	bl	90014294 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
9000100c:	2001      	movs	r0, #1
9000100e:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001010:	f013 f940 	bl	90014294 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90001014:	2001      	movs	r0, #1
90001016:	bd08      	pop	{r3, pc}
90001018:	24024598 	.word	0x24024598

9000101c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000101c:	6940      	ldr	r0, [r0, #20]
9000101e:	4770      	bx	lr

90001020 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001020:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
90001024:	4770      	bx	lr
90001026:	bf00      	nop

90001028 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001028:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9000102a:	b10b      	cbz	r3, 90001030 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000102c:	2001      	movs	r0, #1
}
9000102e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001030:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
90001032:	3800      	subs	r0, #0
90001034:	bf18      	it	ne
90001036:	2001      	movne	r0, #1
90001038:	4770      	bx	lr
9000103a:	bf00      	nop

9000103c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000103c:	6880      	ldr	r0, [r0, #8]
9000103e:	4770      	bx	lr

90001040 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001040:	4770      	bx	lr
90001042:	bf00      	nop

90001044 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
90001044:	3004      	adds	r0, #4
{
90001046:	468c      	mov	ip, r1
    *data = videoInfo;
90001048:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9000104a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
9000104e:	4770      	bx	lr

90001050 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001050:	4770      	bx	lr
90001052:	bf00      	nop

90001054 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
90001054:	b508      	push	{r3, lr}
    assert(0);
90001056:	4a03      	ldr	r2, [pc, #12]	@ (90001064 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
90001058:	f240 11f3 	movw	r1, #499	@ 0x1f3
9000105c:	4b02      	ldr	r3, [pc, #8]	@ (90001068 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
9000105e:	4803      	ldr	r0, [pc, #12]	@ (9000106c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
90001060:	f02b f8f2 	bl	9002c248 <__assert_func>
90001064:	9002d59c 	.word	0x9002d59c
90001068:	9002d598 	.word	0x9002d598
9000106c:	9002d5f8 	.word	0x9002d5f8

90001070 <_ZN20HardwareMJPEGDecoderD0Ev>:
90001070:	b510      	push	{r4, lr}
90001072:	4604      	mov	r4, r0
90001074:	2148      	movs	r1, #72	@ 0x48
90001076:	f02a fd70 	bl	9002bb5a <_ZdlPvj>
9000107a:	4620      	mov	r0, r4
9000107c:	bd10      	pop	{r4, pc}
9000107e:	bf00      	nop

90001080 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90001080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90001082:	6803      	ldr	r3, [r0, #0]
90001084:	2901      	cmp	r1, #1
90001086:	4d30      	ldr	r5, [pc, #192]	@ (90001148 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
90001088:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
9000108a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000108c:	bf38      	it	cc
9000108e:	2101      	movcc	r1, #1
90001090:	42ab      	cmp	r3, r5
90001092:	460e      	mov	r6, r1
90001094:	d13f      	bne.n	90001116 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
90001096:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90001098:	42a9      	cmp	r1, r5
9000109a:	d947      	bls.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
9000109c:	1e6b      	subs	r3, r5, #1
9000109e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010a0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010a2:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010a6:	b338      	cbz	r0, 900010f8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010a8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010aa:	2b0f      	cmp	r3, #15
900010ac:	d940      	bls.n	90001130 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010ae:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010b0:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010b4:	68db      	ldr	r3, [r3, #12]
900010b6:	4631      	mov	r1, r6
900010b8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010ba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900010bc:	2210      	movs	r2, #16
900010be:	6b61      	ldr	r1, [r4, #52]	@ 0x34
900010c0:	6803      	ldr	r3, [r0, #0]
900010c2:	691b      	ldr	r3, [r3, #16]
900010c4:	4798      	blx	r3
900010c6:	b198      	cbz	r0, 900010f0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
900010c8:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
900010ca:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
900010cc:	b1a3      	cbz	r3, 900010f8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900010ce:	6b62      	ldr	r2, [r4, #52]	@ 0x34
900010d0:	7a93      	ldrb	r3, [r2, #10]
900010d2:	7a51      	ldrb	r1, [r2, #9]
900010d4:	041b      	lsls	r3, r3, #16
900010d6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
900010da:	7a11      	ldrb	r1, [r2, #8]
900010dc:	7ad2      	ldrb	r2, [r2, #11]
900010de:	430b      	orrs	r3, r1
900010e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
900010e6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010e8:	3a04      	subs	r2, #4
900010ea:	441a      	add	r2, r3
900010ec:	61a2      	str	r2, [r4, #24]
}
900010ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900010f0:	230d      	movs	r3, #13
900010f2:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
900010f6:	e7e7      	b.n	900010c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
900010f8:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
900010fc:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900010fe:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001100:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
90001102:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001104:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001106:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001108:	041b      	lsls	r3, r3, #16
9000110a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000110e:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001110:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
90001114:	e7e6      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90001116:	4798      	blx	r3
90001118:	4286      	cmp	r6, r0
9000111a:	d907      	bls.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
9000111c:	6823      	ldr	r3, [r4, #0]
9000111e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001120:	42ab      	cmp	r3, r5
90001122:	d00e      	beq.n	90001142 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
90001124:	4620      	mov	r0, r4
90001126:	4798      	blx	r3
90001128:	4605      	mov	r5, r0
9000112a:	e7b7      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
9000112c:	4635      	mov	r5, r6
9000112e:	e7b5      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001130:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001132:	4b06      	ldr	r3, [pc, #24]	@ (9000114c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90001134:	4a06      	ldr	r2, [pc, #24]	@ (90001150 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90001136:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001138:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
9000113c:	4805      	ldr	r0, [pc, #20]	@ (90001154 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
9000113e:	f02b f883 	bl	9002c248 <__assert_func>
    return videoInfo.number_of_frames;
90001142:	68a5      	ldr	r5, [r4, #8]
90001144:	e7aa      	b.n	9000109c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
90001146:	bf00      	nop
90001148:	9000103d 	.word	0x9000103d
9000114c:	9002d64c 	.word	0x9002d64c
90001150:	9002d660 	.word	0x9002d660
90001154:	9002d5f8 	.word	0x9002d5f8

90001158 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001158:	6943      	ldr	r3, [r0, #20]
{
9000115a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000115e:	2b00      	cmp	r3, #0
90001160:	f000 80c1 	beq.w	900012e6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
90001164:	4605      	mov	r5, r0
    if (reader != 0)
90001166:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
90001168:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
9000116a:	2800      	cmp	r0, #0
9000116c:	f000 80a1 	beq.w	900012b2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
90001170:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001172:	2b07      	cmp	r3, #7
90001174:	f240 80ac 	bls.w	900012d0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001178:	6803      	ldr	r3, [r0, #0]
9000117a:	4621      	mov	r1, r4
9000117c:	68db      	ldr	r3, [r3, #12]
9000117e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001180:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001182:	2208      	movs	r2, #8
90001184:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001186:	6803      	ldr	r3, [r0, #0]
90001188:	691b      	ldr	r3, [r3, #16]
9000118a:	4798      	blx	r3
9000118c:	2800      	cmp	r0, #0
9000118e:	f000 808c 	beq.w	900012aa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001192:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90001194:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001196:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90001198:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
9000119a:	2800      	cmp	r0, #0
9000119c:	f000 808b 	beq.w	900012b6 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011a0:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011a2:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011a4:	18a1      	adds	r1, r4, r2
900011a6:	5ca2      	ldrb	r2, [r4, r2]
900011a8:	788c      	ldrb	r4, [r1, #2]
900011aa:	784e      	ldrb	r6, [r1, #1]
900011ac:	0424      	lsls	r4, r4, #16
900011ae:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011b2:	4314      	orrs	r4, r2
900011b4:	78ca      	ldrb	r2, [r1, #3]
900011b6:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
900011ba:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
900011bc:	f243 0630 	movw	r6, #12336	@ 0x3030
900011c0:	e03a      	b.n	90001238 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
900011c2:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011c4:	2b07      	cmp	r3, #7
900011c6:	f240 8083 	bls.w	900012d0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011ca:	6803      	ldr	r3, [r0, #0]
900011cc:	4621      	mov	r1, r4
900011ce:	68db      	ldr	r3, [r3, #12]
900011d0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011d2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011d4:	2208      	movs	r2, #8
900011d6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011d8:	6803      	ldr	r3, [r0, #0]
900011da:	691b      	ldr	r3, [r3, #16]
900011dc:	4798      	blx	r3
900011de:	b908      	cbnz	r0, 900011e4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
900011e0:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
900011e4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
900011e6:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
900011e8:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011ea:	2800      	cmp	r0, #0
900011ec:	d079      	beq.n	900012e2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
900011ee:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
900011f0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011f2:	18ca      	adds	r2, r1, r3
900011f4:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011f6:	7994      	ldrb	r4, [r2, #6]
900011f8:	f892 a005 	ldrb.w	sl, [r2, #5]
900011fc:	0424      	lsls	r4, r4, #16
900011fe:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001202:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001206:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
9000120a:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000120c:	f892 8003 	ldrb.w	r8, [r2, #3]
90001210:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001214:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001218:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000121c:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001220:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001224:	f246 3164 	movw	r1, #25444	@ 0x6364
90001228:	42b3      	cmp	r3, r6
9000122a:	bf08      	it	eq
9000122c:	428a      	cmpeq	r2, r1
9000122e:	bf0c      	ite	eq
90001230:	2301      	moveq	r3, #1
90001232:	2300      	movne	r3, #0
90001234:	d036      	beq.n	900012a4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90001236:	69ab      	ldr	r3, [r5, #24]
90001238:	441c      	add	r4, r3
9000123a:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000123c:	f104 0208 	add.w	r2, r4, #8
90001240:	429a      	cmp	r2, r3
90001242:	d22a      	bcs.n	9000129a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
90001244:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001246:	3409      	adds	r4, #9
        frameNumber++;
90001248:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000124a:	f024 0401 	bic.w	r4, r4, #1
9000124e:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90001252:	2800      	cmp	r0, #0
90001254:	d1b5      	bne.n	900011c2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90001256:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90001258:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
9000125a:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
9000125e:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90001262:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90001264:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90001268:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
9000126c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001270:	188c      	adds	r4, r1, r2
        val |= d[0];
90001272:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90001274:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90001276:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
9000127a:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
9000127e:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001282:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90001286:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
9000128a:	0424      	lsls	r4, r4, #16
9000128c:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
90001290:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
90001294:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
90001298:	e7c4      	b.n	90001224 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
9000129a:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
9000129c:	6a2a      	ldr	r2, [r5, #32]
    return false;
9000129e:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012a0:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012a4:	4618      	mov	r0, r3
900012a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012aa:	230d      	movs	r3, #13
900012ac:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012b0:	e76f      	b.n	90001192 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012b2:	1d22      	adds	r2, r4, #4
900012b4:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012b6:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
900012b8:	18a1      	adds	r1, r4, r2
        val |= d[0];
900012ba:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
900012bc:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
900012be:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
900012c0:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
900012c2:	0424      	lsls	r4, r4, #16
900012c4:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
900012c8:	4334      	orrs	r4, r6
        val |= d[3] << 24;
900012ca:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
900012ce:	e774      	b.n	900011ba <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012d0:	2009      	movs	r0, #9
            assert(!"Buffer to small");
900012d2:	4b08      	ldr	r3, [pc, #32]	@ (900012f4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
900012d4:	4a08      	ldr	r2, [pc, #32]	@ (900012f8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
900012d6:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
900012d8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900012dc:	4807      	ldr	r0, [pc, #28]	@ (900012fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012de:	f02a ffb3 	bl	9002c248 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
900012e2:	461c      	mov	r4, r3
900012e4:	e7b7      	b.n	90001256 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900012e6:	4b06      	ldr	r3, [pc, #24]	@ (90001300 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
900012e8:	21f5      	movs	r1, #245	@ 0xf5
900012ea:	4a06      	ldr	r2, [pc, #24]	@ (90001304 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
900012ec:	4803      	ldr	r0, [pc, #12]	@ (900012fc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
900012ee:	f02a ffab 	bl	9002c248 <__assert_func>
900012f2:	bf00      	nop
900012f4:	9002d64c 	.word	0x9002d64c
900012f8:	9002d660 	.word	0x9002d660
900012fc:	9002d5f8 	.word	0x9002d5f8
90001300:	9002d6a4 	.word	0x9002d6a4
90001304:	9002d6f0 	.word	0x9002d6f0

90001308 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001308:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000130a:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
9000130c:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000130e:	4b0e      	ldr	r3, [pc, #56]	@ (90001348 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001310:	2001      	movs	r0, #1
90001312:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001314:	63e2      	str	r2, [r4, #60]	@ 0x3c
90001316:	6023      	str	r3, [r4, #0]
90001318:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
9000131c:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001320:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001324:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001328:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000132c:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001330:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001334:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001338:	f00e fa70 	bl	9000f81c <osSemaphoreNew>
9000133c:	4b03      	ldr	r3, [pc, #12]	@ (9000134c <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000133e:	4602      	mov	r2, r0
}
90001340:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
90001342:	601a      	str	r2, [r3, #0]
}
90001344:	bd10      	pop	{r4, pc}
90001346:	bf00      	nop
90001348:	9002d848 	.word	0x9002d848
9000134c:	24000614 	.word	0x24000614

90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001350:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
90001354:	2100      	movs	r1, #0
    if (reader != 0)
90001356:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
90001358:	4605      	mov	r5, r0
    currentMovieOffset = 0;
9000135a:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
9000135c:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
90001360:	2e00      	cmp	r6, #0
90001362:	f000 81b3 	beq.w	900016cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
90001366:	6b83      	ldr	r3, [r0, #56]	@ 0x38
90001368:	2b47      	cmp	r3, #71	@ 0x47
9000136a:	f240 8270 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000136e:	6833      	ldr	r3, [r6, #0]
90001370:	4630      	mov	r0, r6
90001372:	68db      	ldr	r3, [r3, #12]
90001374:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001376:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001378:	2248      	movs	r2, #72	@ 0x48
9000137a:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000137c:	6803      	ldr	r3, [r0, #0]
9000137e:	691b      	ldr	r3, [r3, #16]
90001380:	4798      	blx	r3
90001382:	2800      	cmp	r0, #0
90001384:	f000 80b7 	beq.w	900014f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
90001388:	2300      	movs	r3, #0
    if (reader != 0)
9000138a:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
9000138c:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
9000138e:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
90001390:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
90001392:	2e00      	cmp	r6, #0
90001394:	f000 819b 	beq.w	900016ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001398:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
9000139c:	2204      	movs	r2, #4
9000139e:	49c3      	ldr	r1, [pc, #780]	@ (900016ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013a0:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013a4:	4620      	mov	r0, r4
900013a6:	f02b f9f3 	bl	9002c790 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013aa:	2800      	cmp	r0, #0
900013ac:	f040 825f 	bne.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013b0:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013b4:	2204      	movs	r2, #4
900013b6:	49be      	ldr	r1, [pc, #760]	@ (900016b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
900013b8:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900013ba:	4448      	add	r0, r9
900013bc:	f02b f9e8 	bl	9002c790 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900013c0:	2800      	cmp	r0, #0
900013c2:	f040 8268 	bne.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900013c6:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900013ca:	2204      	movs	r2, #4
900013cc:	49b9      	ldr	r1, [pc, #740]	@ (900016b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
900013ce:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
900013d2:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
900013d6:	f02b f9db 	bl	9002c790 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
900013da:	4680      	mov	r8, r0
900013dc:	2800      	cmp	r0, #0
900013de:	f040 8250 	bne.w	90001882 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013e2:	7ca3      	ldrb	r3, [r4, #18]
900013e4:	7c62      	ldrb	r2, [r4, #17]
900013e6:	041b      	lsls	r3, r3, #16
900013e8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900013ec:	7c22      	ldrb	r2, [r4, #16]
900013ee:	4313      	orrs	r3, r2
900013f0:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
900013f2:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
900013f6:	f000 8233 	beq.w	90001860 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
900013fa:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
900013fe:	2204      	movs	r2, #4
90001400:	49ad      	ldr	r1, [pc, #692]	@ (900016b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
90001402:	4448      	add	r0, r9
90001404:	f02b f9c4 	bl	9002c790 <strncmp>
    if (compare(offset, "hdrl", 4))
90001408:	2800      	cmp	r0, #0
9000140a:	d078      	beq.n	900014fe <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000140c:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000140e:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001412:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001416:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001418:	445c      	add	r4, fp
    return strncmp(src, str, num);
9000141a:	2204      	movs	r2, #4
9000141c:	49a7      	ldr	r1, [pc, #668]	@ (900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
9000141e:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001420:	f02b f9b6 	bl	9002c790 <strncmp>
    if (compare(offset, "avih", 4))
90001424:	2800      	cmp	r0, #0
90001426:	f000 80e6 	beq.w	900015f6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
9000142a:	2307      	movs	r3, #7
9000142c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001430:	f1ba 0f00 	cmp.w	sl, #0
90001434:	f000 8190 	beq.w	90001758 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001438:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000143a:	2b0b      	cmp	r3, #11
9000143c:	f240 8207 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001440:	f8da 3000 	ldr.w	r3, [sl]
90001444:	4621      	mov	r1, r4
90001446:	4650      	mov	r0, sl
90001448:	68db      	ldr	r3, [r3, #12]
9000144a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000144c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000144e:	220c      	movs	r2, #12
90001450:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001452:	6803      	ldr	r3, [r0, #0]
90001454:	691b      	ldr	r3, [r3, #16]
90001456:	4798      	blx	r3
90001458:	2800      	cmp	r0, #0
9000145a:	f000 8121 	beq.w	900016a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000145e:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
90001462:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
90001464:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001466:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 900016c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
9000146a:	f04f 090d 	mov.w	r9, #13
9000146e:	e003      	b.n	90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001470:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
90001474:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001476:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001478:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
9000147c:	2e00      	cmp	r6, #0
9000147e:	d052      	beq.n	90001526 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001480:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
90001482:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001484:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001486:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001488:	1afb      	subs	r3, r7, r3
9000148a:	4418      	add	r0, r3
    return strncmp(src, str, num);
9000148c:	f02b f980 	bl	9002c790 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001490:	2800      	cmp	r0, #0
90001492:	d051      	beq.n	90001538 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
90001494:	f1ba 0f00 	cmp.w	sl, #0
90001498:	f040 80a8 	bne.w	900015ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
9000149c:	6aab      	ldr	r3, [r5, #40]	@ 0x28
9000149e:	42a3      	cmp	r3, r4
900014a0:	d94d      	bls.n	9000153e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014a2:	3404      	adds	r4, #4
    if (reader != 0)
900014a4:	b386      	cbz	r6, 90001508 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014a6:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014a8:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014ac:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014ae:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014b0:	eb01 0204 	add.w	r2, r1, r4
900014b4:	5d09      	ldrb	r1, [r1, r4]
900014b6:	7894      	ldrb	r4, [r2, #2]
900014b8:	7850      	ldrb	r0, [r2, #1]
900014ba:	ea4f 4404 	mov.w	r4, r4, lsl #16
900014be:	78d2      	ldrb	r2, [r2, #3]
900014c0:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
900014c4:	ea44 0401 	orr.w	r4, r4, r1
900014c8:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
900014cc:	443c      	add	r4, r7
        if (length > aviBufferLength)
900014ce:	f240 81be 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900014d2:	6833      	ldr	r3, [r6, #0]
900014d4:	4621      	mov	r1, r4
900014d6:	4630      	mov	r0, r6
900014d8:	68db      	ldr	r3, [r3, #12]
900014da:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900014de:	220c      	movs	r2, #12
900014e0:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900014e2:	6803      	ldr	r3, [r0, #0]
900014e4:	691b      	ldr	r3, [r3, #16]
900014e6:	4798      	blx	r3
900014e8:	2800      	cmp	r0, #0
900014ea:	d1c1      	bne.n	90001470 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
900014ec:	f04f 0a0d 	mov.w	sl, #13
900014f0:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
900014f4:	e7be      	b.n	90001474 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
900014f6:	230d      	movs	r3, #13
900014f8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900014fc:	e744      	b.n	90001388 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
900014fe:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001502:	f04f 0801 	mov.w	r8, #1
90001506:	e786      	b.n	90001416 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
90001508:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
9000150a:	1913      	adds	r3, r2, r4
        val |= d[0];
9000150c:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
9000150e:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001510:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001512:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001514:	0424      	lsls	r4, r4, #16
90001516:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000151a:	4314      	orrs	r4, r2
        val |= d[3] << 24;
9000151c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001520:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001522:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
90001526:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001528:	2204      	movs	r2, #4
9000152a:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
9000152c:	2600      	movs	r6, #0
9000152e:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001530:	f02b f92e 	bl	9002c790 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001534:	2800      	cmp	r0, #0
90001536:	d1ad      	bne.n	90001494 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001538:	f1ba 0f00 	cmp.w	sl, #0
9000153c:	d156      	bne.n	900015ec <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000153e:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001542:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001544:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
90001546:	2e00      	cmp	r6, #0
90001548:	f000 8118 	beq.w	9000177c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
9000154c:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
9000154e:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001550:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001554:	f104 0e02 	add.w	lr, r4, #2
90001558:	f104 0c01 	add.w	ip, r4, #1
9000155c:	f811 8004 	ldrb.w	r8, [r1, r4]
90001560:	1ce0      	adds	r0, r4, #3
90001562:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
90001566:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001568:	f811 900c 	ldrb.w	r9, [r1, ip]
9000156c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001570:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001574:	ea43 0308 	orr.w	r3, r3, r8
90001578:	f811 8000 	ldrb.w	r8, [r1, r0]
9000157c:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001580:	443b      	add	r3, r7
90001582:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001584:	f811 300e 	ldrb.w	r3, [r1, lr]
90001588:	f811 e00c 	ldrb.w	lr, [r1, ip]
9000158c:	f811 c004 	ldrb.w	ip, [r1, r4]
90001590:	ea4f 4403 	mov.w	r4, r3, lsl #16
90001594:	5c09      	ldrb	r1, [r1, r0]
90001596:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
9000159a:	ea44 040c 	orr.w	r4, r4, ip
9000159e:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015a2:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015a4:	f240 8153 	bls.w	9000184e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015a8:	6833      	ldr	r3, [r6, #0]
900015aa:	4621      	mov	r1, r4
900015ac:	4630      	mov	r0, r6
900015ae:	68db      	ldr	r3, [r3, #12]
900015b0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015b2:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015b4:	2204      	movs	r2, #4
900015b6:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900015b8:	6803      	ldr	r3, [r0, #0]
900015ba:	691b      	ldr	r3, [r3, #16]
900015bc:	4798      	blx	r3
900015be:	2800      	cmp	r0, #0
900015c0:	f000 80cd 	beq.w	9000175e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
900015c4:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900015c6:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900015c8:	2b00      	cmp	r3, #0
900015ca:	f000 816e 	beq.w	900018aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900015ce:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900015d0:	2204      	movs	r2, #4
900015d2:	493b      	ldr	r1, [pc, #236]	@ (900016c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
900015d4:	f02b f8dc 	bl	9002c790 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900015d8:	2800      	cmp	r0, #0
900015da:	f040 80ca 	bne.w	90001772 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
900015de:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900015e0:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900015e2:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
900015e4:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
900015e6:	622b      	str	r3, [r5, #32]
}
900015e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
900015ec:	230a      	movs	r3, #10
900015ee:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900015f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
900015f6:	f1b8 0f00 	cmp.w	r8, #0
900015fa:	f43f af19 	beq.w	90001430 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900015fe:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
90001602:	f1ba 0f00 	cmp.w	sl, #0
90001606:	f000 80d4 	beq.w	900017b2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
9000160a:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000160c:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 900016c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001610:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001612:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001614:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001618:	f812 8001 	ldrb.w	r8, [r2, r1]
9000161c:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001620:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
90001624:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001628:	4438      	add	r0, r7
9000162a:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000162c:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001630:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001632:	f89e 7001 	ldrb.w	r7, [lr, #1]
90001636:	041b      	lsls	r3, r3, #16
90001638:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000163c:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001640:	ea43 0308 	orr.w	r3, r3, r8
90001644:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001648:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000164a:	fbac c303 	umull	ip, r3, ip, r3
9000164e:	099b      	lsrs	r3, r3, #6
90001650:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001652:	78bb      	ldrb	r3, [r7, #2]
90001654:	f897 e001 	ldrb.w	lr, [r7, #1]
90001658:	041b      	lsls	r3, r3, #16
9000165a:	f812 c000 	ldrb.w	ip, [r2, r0]
9000165e:	78ff      	ldrb	r7, [r7, #3]
90001660:	1850      	adds	r0, r2, r1
90001662:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001666:	ea43 030c 	orr.w	r3, r3, ip
9000166a:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000166e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001670:	7883      	ldrb	r3, [r0, #2]
90001672:	7847      	ldrb	r7, [r0, #1]
90001674:	041b      	lsls	r3, r3, #16
90001676:	5c51      	ldrb	r1, [r2, r1]
90001678:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
9000167c:	430b      	orrs	r3, r1
9000167e:	78c1      	ldrb	r1, [r0, #3]
90001680:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001684:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
90001686:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001688:	788b      	ldrb	r3, [r1, #2]
9000168a:	7848      	ldrb	r0, [r1, #1]
9000168c:	041b      	lsls	r3, r3, #16
9000168e:	5d92      	ldrb	r2, [r2, r6]
90001690:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001694:	4313      	orrs	r3, r2
90001696:	78ca      	ldrb	r2, [r1, #3]
90001698:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000169c:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000169e:	e6cb      	b.n	90001438 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016a0:	230d      	movs	r3, #13
900016a2:	469a      	mov	sl, r3
900016a4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016a8:	e6db      	b.n	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016aa:	bf00      	nop
900016ac:	9002d724 	.word	0x9002d724
900016b0:	9002d7dc 	.word	0x9002d7dc
900016b4:	9002d7d4 	.word	0x9002d7d4
900016b8:	9002d7a8 	.word	0x9002d7a8
900016bc:	9002d7bc 	.word	0x9002d7bc
900016c0:	9002d7cc 	.word	0x9002d7cc
900016c4:	9002d7c4 	.word	0x9002d7c4
900016c8:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
900016cc:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
900016ce:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
900016d2:	2204      	movs	r2, #4
900016d4:	4976      	ldr	r1, [pc, #472]	@ (900018b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
900016d6:	eb09 0007 	add.w	r0, r9, r7
900016da:	f02b f859 	bl	9002c790 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900016de:	2800      	cmp	r0, #0
900016e0:	f040 80c5 	bne.w	9000186e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900016e4:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900016e8:	2204      	movs	r2, #4
900016ea:	4972      	ldr	r1, [pc, #456]	@ (900018b4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
900016ec:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
900016ee:	4448      	add	r0, r9
900016f0:	f02b f84e 	bl	9002c790 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
900016f4:	2800      	cmp	r0, #0
900016f6:	f040 80ce 	bne.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
900016fa:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
900016fe:	2204      	movs	r2, #4
90001700:	496d      	ldr	r1, [pc, #436]	@ (900018b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
90001702:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
90001706:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000170a:	f02b f841 	bl	9002c790 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000170e:	4680      	mov	r8, r0
90001710:	2800      	cmp	r0, #0
90001712:	f040 80b6 	bne.w	90001882 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001716:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000171a:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
9000171e:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
90001722:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001724:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
90001726:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001728:	0424      	lsls	r4, r4, #16
9000172a:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
9000172e:	4314      	orrs	r4, r2
    assert(aviListSize);
90001730:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
90001734:	f000 8094 	beq.w	90001860 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001738:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000173c:	2204      	movs	r2, #4
9000173e:	495f      	ldr	r1, [pc, #380]	@ (900018bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001740:	4448      	add	r0, r9
90001742:	f02b f825 	bl	9002c790 <strncmp>
    if (compare(offset, "hdrl", 4))
90001746:	b970      	cbnz	r0, 90001766 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001748:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000174c:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001750:	4448      	add	r0, r9
90001752:	f04f 0a00 	mov.w	sl, #0
90001756:	e65f      	b.n	90001418 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001758:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
9000175c:	e683      	b.n	90001466 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
9000175e:	230d      	movs	r3, #13
90001760:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001764:	e72e      	b.n	900015c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001766:	2306      	movs	r3, #6
    offset += 4;
90001768:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000176c:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001770:	e7ee      	b.n	90001750 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
90001772:	230b      	movs	r3, #11
90001774:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90001778:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000177c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
9000177e:	1902      	adds	r2, r0, r4
        val |= d[0];
90001780:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
90001782:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
90001784:	7893      	ldrb	r3, [r2, #2]
90001786:	041b      	lsls	r3, r3, #16
90001788:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
9000178c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000178e:	78d1      	ldrb	r1, [r2, #3]
90001790:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001794:	443b      	add	r3, r7
90001796:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
90001798:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
9000179a:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
9000179c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000179e:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017a0:	0424      	lsls	r4, r4, #16
900017a2:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017a6:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017a8:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017ac:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017ae:	4420      	add	r0, r4
900017b0:	e70e      	b.n	900015d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017b2:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017b4:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017b8:	f8df e124 	ldr.w	lr, [pc, #292]	@ 900018e0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
900017bc:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
900017c0:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
900017c4:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
900017c8:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
900017cc:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
900017ce:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
900017d2:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
900017d6:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
900017da:	041b      	lsls	r3, r3, #16
900017dc:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017e0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
900017e4:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
900017e8:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900017ec:	fbae e303 	umull	lr, r3, lr, r3
900017f0:	099b      	lsrs	r3, r3, #6
900017f2:	606b      	str	r3, [r5, #4]
        val |= d[0];
900017f4:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
900017f8:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
900017fc:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
900017fe:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001800:	041b      	lsls	r3, r3, #16
90001802:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
90001806:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
9000180a:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
9000180e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
90001812:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001814:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001816:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
9000181a:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
9000181e:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
90001822:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
90001826:	041b      	lsls	r3, r3, #16
90001828:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
9000182c:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001830:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
90001834:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001836:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001838:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000183a:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000183c:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
9000183e:	041b      	lsls	r3, r3, #16
90001840:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001844:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001846:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000184a:	612b      	str	r3, [r5, #16]
    if (reader != 0)
9000184c:	e60b      	b.n	90001466 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000184e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001850:	4b1b      	ldr	r3, [pc, #108]	@ (900018c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
90001852:	4a1c      	ldr	r2, [pc, #112]	@ (900018c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
90001854:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001856:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
9000185a:	481b      	ldr	r0, [pc, #108]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000185c:	f02a fcf4 	bl	9002c248 <__assert_func>
    assert(aviListSize);
90001860:	4b1a      	ldr	r3, [pc, #104]	@ (900018cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
90001862:	f44f 71a9 	mov.w	r1, #338	@ 0x152
90001866:	4a1a      	ldr	r2, [pc, #104]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001868:	4817      	ldr	r0, [pc, #92]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000186a:	f02a fced 	bl	9002c248 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
9000186e:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
90001870:	4b18      	ldr	r3, [pc, #96]	@ (900018d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
90001872:	4a17      	ldr	r2, [pc, #92]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001874:	f240 113d 	movw	r1, #317	@ 0x13d
        lastError = AVI_ERROR_NOT_RIFF;
90001878:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
9000187c:	4812      	ldr	r0, [pc, #72]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
9000187e:	f02a fce3 	bl	9002c248 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
90001882:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
90001884:	4b14      	ldr	r3, [pc, #80]	@ (900018d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
90001886:	4a12      	ldr	r2, [pc, #72]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
90001888:	f44f 71a6 	mov.w	r1, #332	@ 0x14c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
9000188c:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
90001890:	480d      	ldr	r0, [pc, #52]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
90001892:	f02a fcd9 	bl	9002c248 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
90001896:	2004      	movs	r0, #4
        assert(!"AVI header not found");
90001898:	4b10      	ldr	r3, [pc, #64]	@ (900018dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
9000189a:	4a0d      	ldr	r2, [pc, #52]	@ (900018d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
9000189c:	f240 1145 	movw	r1, #325	@ 0x145
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018a0:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018a4:	4808      	ldr	r0, [pc, #32]	@ (900018c8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018a6:	f02a fccf 	bl	9002c248 <__assert_func>
        src = (const char*)movieData + offset;
900018aa:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018ac:	4420      	add	r0, r4
900018ae:	e68f      	b.n	900015d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018b0:	9002d724 	.word	0x9002d724
900018b4:	9002d7dc 	.word	0x9002d7dc
900018b8:	9002d7d4 	.word	0x9002d7d4
900018bc:	9002d7a8 	.word	0x9002d7a8
900018c0:	9002d64c 	.word	0x9002d64c
900018c4:	9002d660 	.word	0x9002d660
900018c8:	9002d5f8 	.word	0x9002d5f8
900018cc:	9002d7b0 	.word	0x9002d7b0
900018d0:	9002d748 	.word	0x9002d748
900018d4:	9002d72c 	.word	0x9002d72c
900018d8:	9002d790 	.word	0x9002d790
900018dc:	9002d778 	.word	0x9002d778
900018e0:	10624dd3 	.word	0x10624dd3

900018e4 <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
900018e4:	b410      	push	{r4}
    reader = 0; /* not using reader */
900018e6:	2400      	movs	r4, #0
    movieLength = length;
900018e8:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
900018ec:	6304      	str	r4, [r0, #48]	@ 0x30
}
900018ee:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
900018f2:	f7ff bd2d 	b.w	90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
900018f6:	bf00      	nop

900018f8 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
900018f8:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
900018fa:	680b      	ldr	r3, [r1, #0]
{
900018fc:	4604      	mov	r4, r0
    movieData = 0;
900018fe:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001900:	4608      	mov	r0, r1
90001902:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
90001904:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
90001908:	4798      	blx	r3
9000190a:	4603      	mov	r3, r0
    readVideoHeader();
9000190c:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
9000190e:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
90001914:	f7ff bd1c 	b.w	90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001918 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001918:	b5f0      	push	{r4, r5, r6, r7, lr}
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
9000191a:	2400      	movs	r4, #0
9000191c:	4d20      	ldr	r5, [pc, #128]	@ (900019a0 <JPEG_Decode_DMA+0x88>)
    {
9000191e:	461e      	mov	r6, r3
        JPEG_OUT_Read_BufferIndex = 0;
        JPEG_OUT_Write_BufferIndex = 0;
90001920:	4b20      	ldr	r3, [pc, #128]	@ (900019a4 <JPEG_Decode_DMA+0x8c>)
        JPEG_output_is_paused = 0;
90001922:	602c      	str	r4, [r5, #0]
    {
90001924:	b083      	sub	sp, #12
        JPEG_OUT_Read_BufferIndex = 0;
90001926:	4d20      	ldr	r5, [pc, #128]	@ (900019a8 <JPEG_Decode_DMA+0x90>)
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001928:	4f20      	ldr	r7, [pc, #128]	@ (900019ac <JPEG_Decode_DMA+0x94>)
        JPEG_OUT_Read_BufferIndex = 0;
9000192a:	602c      	str	r4, [r5, #0]
        MCU_BlockIndex = 0;
9000192c:	4d20      	ldr	r5, [pc, #128]	@ (900019b0 <JPEG_Decode_DMA+0x98>)
        JPEG_OUT_Write_BufferIndex = 0;
9000192e:	601c      	str	r4, [r3, #0]
        MCU_BlockIndex = 0;
90001930:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001932:	4d20      	ldr	r5, [pc, #128]	@ (900019b4 <JPEG_Decode_DMA+0x9c>)
90001934:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001936:	68fd      	ldr	r5, [r7, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001938:	6b7f      	ldr	r7, [r7, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000193a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9000193e:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001940:	ebb7 0c04 	subs.w	ip, r7, r4
        FrameBufferAddress = output;
90001944:	4f1c      	ldr	r7, [pc, #112]	@ (900019b8 <JPEG_Decode_DMA+0xa0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001946:	ea4f 15c5 	mov.w	r5, r5, lsl #7
9000194a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000194e:	bf18      	it	ne
90001950:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001954:	9500      	str	r5, [sp, #0]
        FrameBufferAddress = output;
90001956:	603e      	str	r6, [r7, #0]
        JPEG_InputImageIndex = 0;
90001958:	4e18      	ldr	r6, [pc, #96]	@ (900019bc <JPEG_Decode_DMA+0xa4>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
9000195a:	4d19      	ldr	r5, [pc, #100]	@ (900019c0 <JPEG_Decode_DMA+0xa8>)
        JPEG_InputImageIndex = 0;
9000195c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000195e:	4e19      	ldr	r6, [pc, #100]	@ (900019c4 <JPEG_Decode_DMA+0xac>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001960:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001964:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageAddress = (uint32_t)input;
90001968:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000196a:	4e17      	ldr	r6, [pc, #92]	@ (900019c8 <JPEG_Decode_DMA+0xb0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000196c:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
9000196e:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001970:	2201      	movs	r2, #1
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001972:	702c      	strb	r4, [r5, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
90001974:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001976:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
9000197a:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
9000197c:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
9000197e:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90001980:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
90001982:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
90001984:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
90001988:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
9000198c:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
90001990:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001994:	f008 f93c 	bl	90009c10 <HAL_JPEG_Decode_DMA>

        return 0;
    }
90001998:	4620      	mov	r0, r4
9000199a:	b003      	add	sp, #12
9000199c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000199e:	bf00      	nop
900019a0:	24006230 	.word	0x24006230
900019a4:	24006224 	.word	0x24006224
900019a8:	24000610 	.word	0x24000610
900019ac:	240005cc 	.word	0x240005cc
900019b0:	24000618 	.word	0x24000618
900019b4:	24006220 	.word	0x24006220
900019b8:	24006244 	.word	0x24006244
900019bc:	24006240 	.word	0x24006240
900019c0:	24000004 	.word	0x24000004
900019c4:	24006238 	.word	0x24006238
900019c8:	2400623c 	.word	0x2400623c

900019cc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900019cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900019d0:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900019d2:	2402      	movs	r4, #2
900019d4:	483d      	ldr	r0, [pc, #244]	@ (90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x100>)
900019d6:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019d8:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900019da:	0725      	lsls	r5, r4, #28
900019dc:	d002      	beq.n	900019e4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900019de:	f024 040f 	bic.w	r4, r4, #15
900019e2:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900019e4:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019e6:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
900019e8:	4d39      	ldr	r5, [pc, #228]	@ (90001ad0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
900019ea:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900019ec:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
900019f0:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90001aec <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>
900019f4:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019f6:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019f8:	4f36      	ldr	r7, [pc, #216]	@ (90001ad4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
900019fa:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
900019fe:	f8df 90f0 	ldr.w	r9, [pc, #240]	@ 90001af0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>
90001a02:	f8df 80f0 	ldr.w	r8, [pc, #240]	@ 90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a06:	bf18      	it	ne
90001a08:	f1c4 0410 	rsbne	r4, r4, #16
90001a0c:	6084      	str	r4, [r0, #8]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a0e:	4832      	ldr	r0, [pc, #200]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a10:	f7ff ff82 	bl	90001918 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a14:	4c31      	ldr	r4, [pc, #196]	@ (90001adc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a16:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a18:	4e31      	ldr	r6, [pc, #196]	@ (90001ae0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a1a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a1c:	f8da 3000 	ldr.w	r3, [sl]
90001a20:	b10b      	cbz	r3, 90001a26 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5a>
90001a22:	6833      	ldr	r3, [r6, #0]
90001a24:	bb6b      	cbnz	r3, 90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xb6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a26:	6828      	ldr	r0, [r5, #0]
90001a28:	7a03      	ldrb	r3, [r0, #8]
90001a2a:	b93b      	cbnz	r3, 90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
90001a2c:	4b2d      	ldr	r3, [pc, #180]	@ (90001ae4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a2e:	681b      	ldr	r3, [r3, #0]
90001a30:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a34:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a38:	2b01      	cmp	r3, #1
90001a3a:	d03b      	beq.n	90001ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe8>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a3c:	683b      	ldr	r3, [r7, #0]
90001a3e:	2b01      	cmp	r3, #1
90001a40:	d00d      	beq.n	90001a5e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x92>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a42:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a44:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a46:	6823      	ldr	r3, [r4, #0]
90001a48:	2b02      	cmp	r3, #2
90001a4a:	d024      	beq.n	90001a96 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xca>
        } while (JpegProcessing_End != 1);
90001a4c:	6823      	ldr	r3, [r4, #0]
90001a4e:	2b01      	cmp	r3, #1
90001a50:	d1e4      	bne.n	90001a1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001a52:	2300      	movs	r3, #0
90001a54:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a58:	6033      	str	r3, [r6, #0]
}
90001a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a5e:	f8d9 3000 	ldr.w	r3, [r9]
90001a62:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a66:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a6a:	2b00      	cmp	r3, #0
90001a6c:	d1e9      	bne.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
90001a6e:	f8da 3000 	ldr.w	r3, [sl]
90001a72:	2b00      	cmp	r3, #0
90001a74:	d1e5      	bne.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a76:	2102      	movs	r1, #2
90001a78:	4817      	ldr	r0, [pc, #92]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_output_is_paused = 0;
90001a7a:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001a7c:	f008 fa78 	bl	90009f70 <HAL_JPEG_Resume>
90001a80:	e7df      	b.n	90001a42 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x76>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001a82:	4815      	ldr	r0, [pc, #84]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001a84:	f009 f832 	bl	9000aaec <HAL_JPEG_GetState>
90001a88:	2804      	cmp	r0, #4
90001a8a:	d01a      	beq.n	90001ac2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf6>
        return 1;
90001a8c:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a8e:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a90:	6823      	ldr	r3, [r4, #0]
90001a92:	2b02      	cmp	r3, #2
90001a94:	d1da      	bne.n	90001a4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x80>
                SEM_WAIT(semDecodingDone);
90001a96:	4b14      	ldr	r3, [pc, #80]	@ (90001ae8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a98:	f04f 31ff 	mov.w	r1, #4294967295
90001a9c:	6818      	ldr	r0, [r3, #0]
90001a9e:	f00d ff09 	bl	9000f8b4 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001aa2:	6823      	ldr	r3, [r4, #0]
90001aa4:	2b01      	cmp	r3, #1
90001aa6:	d1b9      	bne.n	90001a1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x50>
        Jpeg_HWDecodingEnd = 0;
90001aa8:	2300      	movs	r3, #0
90001aaa:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001aae:	6033      	str	r3, [r6, #0]
}
90001ab0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ab4:	6833      	ldr	r3, [r6, #0]
90001ab6:	2b00      	cmp	r3, #0
90001ab8:	d1c0      	bne.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
        DMA2D_reference->start();
90001aba:	6803      	ldr	r3, [r0, #0]
90001abc:	691b      	ldr	r3, [r3, #16]
90001abe:	4798      	blx	r3
90001ac0:	e7bc      	b.n	90001a3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x70>
            HAL_JPEG_Abort(hjpeg);
90001ac2:	4805      	ldr	r0, [pc, #20]	@ (90001ad8 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
90001ac4:	f008 f922 	bl	90009d0c <HAL_JPEG_Abort>
90001ac8:	e7e0      	b.n	90001a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90001aca:	bf00      	nop
90001acc:	240005cc 	.word	0x240005cc
90001ad0:	24006228 	.word	0x24006228
90001ad4:	24006230 	.word	0x24006230
90001ad8:	24009d08 	.word	0x24009d08
90001adc:	2400622c 	.word	0x2400622c
90001ae0:	2400060c 	.word	0x2400060c
90001ae4:	24000610 	.word	0x24000610
90001ae8:	24000614 	.word	0x24000614
90001aec:	24006234 	.word	0x24006234
90001af0:	24006224 	.word	0x24006224
90001af4:	24000004 	.word	0x24000004

90001af8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001af8:	6943      	ldr	r3, [r0, #20]
{
90001afa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001afe:	2b00      	cmp	r3, #0
90001b00:	f000 80ad 	beq.w	90001c5e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b04:	4604      	mov	r4, r0
    if (reader != 0)
90001b06:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b08:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b0a:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b0c:	2800      	cmp	r0, #0
90001b0e:	d05f      	beq.n	90001bd0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b10:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b12:	2b07      	cmp	r3, #7
90001b14:	f240 80a9 	bls.w	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b18:	6803      	ldr	r3, [r0, #0]
90001b1a:	4629      	mov	r1, r5
90001b1c:	68db      	ldr	r3, [r3, #12]
90001b1e:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b20:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b22:	2208      	movs	r2, #8
90001b24:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b26:	6803      	ldr	r3, [r0, #0]
90001b28:	691b      	ldr	r3, [r3, #16]
90001b2a:	4798      	blx	r3
90001b2c:	2800      	cmp	r0, #0
90001b2e:	d04a      	beq.n	90001bc6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b30:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b32:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b34:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b38:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b3a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b3c:	2800      	cmp	r0, #0
90001b3e:	d046      	beq.n	90001bce <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b40:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b42:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b46:	1b52      	subs	r2, r2, r5
90001b48:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b4a:	eb03 070c 	add.w	r7, r3, ip
90001b4e:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b52:	eb03 0805 	add.w	r8, r3, r5
90001b56:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b5a:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b5e:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b62:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b66:	78bd      	ldrb	r5, [r7, #2]
90001b68:	78ff      	ldrb	r7, [r7, #3]
90001b6a:	042d      	lsls	r5, r5, #16
90001b6c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001b70:	ea45 050e 	orr.w	r5, r5, lr
90001b74:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b78:	189f      	adds	r7, r3, r2
90001b7a:	5c9b      	ldrb	r3, [r3, r2]
90001b7c:	787a      	ldrb	r2, [r7, #1]
90001b7e:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001b82:	eb01 0e05 	add.w	lr, r1, r5
90001b86:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001b88:	f10e 0208 	add.w	r2, lr, #8
90001b8c:	429a      	cmp	r2, r3
90001b8e:	d213      	bcs.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001b90:	f243 0330 	movw	r3, #12336	@ 0x3030
90001b94:	459c      	cmp	ip, r3
90001b96:	d138      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001b98:	f246 3364 	movw	r3, #25444	@ 0x6364
90001b9c:	429f      	cmp	r7, r3
90001b9e:	d134      	bne.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001ba0:	2d00      	cmp	r5, #0
90001ba2:	d136      	bne.n	90001c12 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba4:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001ba6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001ba8:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bac:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bae:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bb0:	d002      	beq.n	90001bb8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bb2:	2001      	movs	r0, #1
}
90001bb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bb8:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bba:	6a23      	ldr	r3, [r4, #32]
90001bbc:	2000      	movs	r0, #0
        frameNumber = 1;
90001bbe:	6162      	str	r2, [r4, #20]
        currentMovieOffset = firstFrameOffset; /* start over */
90001bc0:	61a3      	str	r3, [r4, #24]
}
90001bc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001bc6:	230d      	movs	r3, #13
90001bc8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001bcc:	e7b0      	b.n	90001b30 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001bce:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001bd0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001bd2:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001bd4:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001bd6:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001bd8:	195a      	adds	r2, r3, r5
        val |= d[0];
90001bda:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001bde:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001be0:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001be2:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001be4:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001be8:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001bea:	181a      	adds	r2, r3, r0
        val |= d[0];
90001bec:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001bee:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001bf2:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001bf6:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001bf8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001bfa:	042d      	lsls	r5, r5, #16
90001bfc:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c00:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c02:	2000      	movs	r0, #0
90001c04:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c08:	e7bb      	b.n	90001b82 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c0a:	2d00      	cmp	r5, #0
90001c0c:	bf18      	it	ne
90001c0e:	4672      	movne	r2, lr
90001c10:	e7c8      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c12:	f101 0708 	add.w	r7, r1, #8
90001c16:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c18:	b1f0      	cbz	r0, 90001c58 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c1a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c1c:	429d      	cmp	r5, r3
90001c1e:	d824      	bhi.n	90001c6a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c20:	6803      	ldr	r3, [r0, #0]
90001c22:	4639      	mov	r1, r7
90001c24:	68db      	ldr	r3, [r3, #12]
90001c26:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c28:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c2a:	462a      	mov	r2, r5
90001c2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c2e:	6803      	ldr	r3, [r0, #0]
90001c30:	691b      	ldr	r3, [r3, #16]
90001c32:	4798      	blx	r3
90001c34:	b910      	cbnz	r0, 90001c3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c36:	230d      	movs	r3, #13
90001c38:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c3c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c3e:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c40:	b126      	cbz	r6, 90001c4c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c42:	4633      	mov	r3, r6
90001c44:	462a      	mov	r2, r5
90001c46:	4620      	mov	r0, r4
90001c48:	f7ff fec0 	bl	900019cc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c4c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c50:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c52:	442a      	add	r2, r5
            frameNumber++;
90001c54:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c56:	e7a5      	b.n	90001ba4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c58:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c5a:	4439      	add	r1, r7
90001c5c:	e7f0      	b.n	90001c40 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001c5e:	4b07      	ldr	r3, [pc, #28]	@ (90001c7c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001c60:	21c1      	movs	r1, #193	@ 0xc1
90001c62:	4a07      	ldr	r2, [pc, #28]	@ (90001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001c64:	4807      	ldr	r0, [pc, #28]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c66:	f02a faef 	bl	9002c248 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c6a:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001c6c:	4b06      	ldr	r3, [pc, #24]	@ (90001c88 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001c6e:	4a07      	ldr	r2, [pc, #28]	@ (90001c8c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001c70:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001c72:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001c76:	4803      	ldr	r0, [pc, #12]	@ (90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001c78:	f02a fae6 	bl	9002c248 <__assert_func>
90001c7c:	9002d6a4 	.word	0x9002d6a4
90001c80:	9002d7e4 	.word	0x9002d7e4
90001c84:	9002d5f8 	.word	0x9002d5f8
90001c88:	9002d64c 	.word	0x9002d64c
90001c8c:	9002d660 	.word	0x9002d660

90001c90 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001c94:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001c96:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001c9a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001c9c:	460e      	mov	r6, r1
90001c9e:	4690      	mov	r8, r2
90001ca0:	461f      	mov	r7, r3
    if (reader != 0)
90001ca2:	2800      	cmp	r0, #0
90001ca4:	f000 80f5 	beq.w	90001e92 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        if (length > aviBufferLength)
90001ca8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001caa:	2b07      	cmp	r3, #7
90001cac:	f240 8106 	bls.w	90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001cb0:	6803      	ldr	r3, [r0, #0]
90001cb2:	4649      	mov	r1, r9
90001cb4:	68db      	ldr	r3, [r3, #12]
90001cb6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cb8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cba:	2208      	movs	r2, #8
90001cbc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001cbe:	6803      	ldr	r3, [r0, #0]
90001cc0:	691b      	ldr	r3, [r3, #16]
90001cc2:	4798      	blx	r3
90001cc4:	2800      	cmp	r0, #0
90001cc6:	f000 80af 	beq.w	90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cca:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001ccc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001cce:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001cd0:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001cd4:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001cd8:	2800      	cmp	r0, #0
90001cda:	f000 80f8 	beq.w	90001ece <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x23e>
        const uint32_t index = offset - aviBufferStartOffset;
90001cde:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001ce2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001ce4:	1899      	adds	r1, r3, r2
90001ce6:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001ce8:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001cea:	f891 9002 	ldrb.w	r9, [r1, #2]
90001cee:	f891 c001 	ldrb.w	ip, [r1, #1]
90001cf2:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001cf6:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001cfa:	ea49 0902 	orr.w	r9, r9, r2
90001cfe:	78ca      	ldrb	r2, [r1, #3]
90001d00:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d04:	454b      	cmp	r3, r9
90001d06:	f0c0 80d9 	bcc.w	90001ebc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x22c>
        reader->seek(offset);
90001d0a:	6803      	ldr	r3, [r0, #0]
90001d0c:	4629      	mov	r1, r5
90001d0e:	68db      	ldr	r3, [r3, #12]
90001d10:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d12:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d14:	464a      	mov	r2, r9
90001d16:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d18:	6803      	ldr	r3, [r0, #0]
90001d1a:	691b      	ldr	r3, [r3, #16]
90001d1c:	4798      	blx	r3
90001d1e:	2800      	cmp	r0, #0
90001d20:	d07e      	beq.n	90001e20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x190>
        return aviBuffer;
90001d22:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d24:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d26:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d2a:	2302      	movs	r3, #2
90001d2c:	4869      	ldr	r0, [pc, #420]	@ (90001ed4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x244>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d2e:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d32:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d34:	d16f      	bne.n	90001e16 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x186>
90001d36:	4662      	mov	r2, ip
90001d38:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d3a:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d3c:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d3e:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d40:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d44:	60c3      	str	r3, [r0, #12]
90001d46:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d48:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d4c:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d4e:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d50:	6143      	str	r3, [r0, #20]
90001d52:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d54:	f003 030f 	and.w	r3, r3, #15
90001d58:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001d5a:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d5c:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001d5e:	b236      	sxth	r6, r6
90001d60:	bf28      	it	cs
90001d62:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d64:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d68:	f002 020f 	and.w	r2, r2, #15
90001d6c:	f8df a194 	ldr.w	sl, [pc, #404]	@ 90001f04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d70:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d74:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001d76:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001d78:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d7a:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001d7c:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001d80:	f8df 9184 	ldr.w	r9, [pc, #388]	@ 90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001d84:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001d86:	eba3 030c 	sub.w	r3, r3, ip
90001d8a:	62c3      	str	r3, [r0, #44]	@ 0x2c
90001d8c:	6923      	ldr	r3, [r4, #16]
90001d8e:	429e      	cmp	r6, r3
90001d90:	bf28      	it	cs
90001d92:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d94:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001d98:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001d9c:	bf18      	it	ne
90001d9e:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001da2:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001da4:	f016 060f 	ands.w	r6, r6, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001da8:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001daa:	6385      	str	r5, [r0, #56]	@ 0x38
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dac:	4643      	mov	r3, r8
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dae:	bf18      	it	ne
90001db0:	f1c6 0610 	rsbne	r6, r6, #16
    DMA2D_reference = dma;
90001db4:	4d48      	ldr	r5, [pc, #288]	@ (90001ed8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x248>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001db6:	f8df 8154 	ldr.w	r8, [pc, #340]	@ 90001f0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dba:	63c6      	str	r6, [r0, #60]	@ 0x3c
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dbc:	4847      	ldr	r0, [pc, #284]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001dbe:	f7ff fdab 	bl	90001918 <JPEG_Decode_DMA>
    FrameBufferWidth = framebuffer_width;
90001dc2:	4b47      	ldr	r3, [pc, #284]	@ (90001ee0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    DMA2D_reference = dma;
90001dc4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
    FrameBufferWidth = framebuffer_width;
90001dc6:	601f      	str	r7, [r3, #0]
90001dc8:	4e46      	ldr	r6, [pc, #280]	@ (90001ee4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
90001dca:	4c47      	ldr	r4, [pc, #284]	@ (90001ee8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dcc:	4f47      	ldr	r7, [pc, #284]	@ (90001eec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
    DMA2D_reference = dma;
90001dce:	602a      	str	r2, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001dd0:	f8da 3000 	ldr.w	r3, [sl]
90001dd4:	b113      	cbz	r3, 90001ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x14c>
90001dd6:	6833      	ldr	r3, [r6, #0]
90001dd8:	2b00      	cmp	r3, #0
90001dda:	d13b      	bne.n	90001e54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ddc:	6828      	ldr	r0, [r5, #0]
90001dde:	7a03      	ldrb	r3, [r0, #8]
90001de0:	b93b      	cbnz	r3, 90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
90001de2:	4b43      	ldr	r3, [pc, #268]	@ (90001ef0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001de4:	681b      	ldr	r3, [r3, #0]
90001de6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001dea:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001dee:	2b01      	cmp	r3, #1
90001df0:	d044      	beq.n	90001e7c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001df2:	683b      	ldr	r3, [r7, #0]
90001df4:	2b01      	cmp	r3, #1
90001df6:	d01b      	beq.n	90001e30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    return 2;
90001df8:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001dfa:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001dfc:	6823      	ldr	r3, [r4, #0]
90001dfe:	2b02      	cmp	r3, #2
90001e00:	d032      	beq.n	90001e68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>
    } while (JpegProcessing_End != 1);
90001e02:	6823      	ldr	r3, [r4, #0]
90001e04:	2b01      	cmp	r3, #1
90001e06:	d1e3      	bne.n	90001dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    Jpeg_HWDecodingEnd = 0;
90001e08:	2300      	movs	r3, #0
}
90001e0a:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e0c:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e10:	6033      	str	r3, [r6, #0]
}
90001e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e16:	f02c 030f 	bic.w	r3, ip, #15
90001e1a:	3310      	adds	r3, #16
90001e1c:	461a      	mov	r2, r3
90001e1e:	e78c      	b.n	90001d3a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xaa>
            lastError = AVI_ERROR_EOF_REACHED;
90001e20:	230d      	movs	r3, #13
90001e22:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e26:	e77c      	b.n	90001d22 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x92>
90001e28:	230d      	movs	r3, #13
90001e2a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e2e:	e74c      	b.n	90001cca <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e30:	f8d9 3000 	ldr.w	r3, [r9]
90001e34:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e38:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e3c:	2b00      	cmp	r3, #0
90001e3e:	d1db      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
90001e40:	f8da 3000 	ldr.w	r3, [sl]
90001e44:	2b00      	cmp	r3, #0
90001e46:	d1d7      	bne.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e48:	2102      	movs	r1, #2
90001e4a:	4824      	ldr	r0, [pc, #144]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
        JPEG_output_is_paused = 0;
90001e4c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e4e:	f008 f88f 	bl	90009f70 <HAL_JPEG_Resume>
90001e52:	e7d1      	b.n	90001df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x168>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001e54:	4821      	ldr	r0, [pc, #132]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e56:	f008 fe49 	bl	9000aaec <HAL_JPEG_GetState>
90001e5a:	2804      	cmp	r0, #4
90001e5c:	d015      	beq.n	90001e8a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1fa>
        return 1;
90001e5e:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e60:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e62:	6823      	ldr	r3, [r4, #0]
90001e64:	2b02      	cmp	r3, #2
90001e66:	d1cc      	bne.n	90001e02 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x172>
            SEM_WAIT(semDecodingDone);
90001e68:	4b22      	ldr	r3, [pc, #136]	@ (90001ef4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
90001e6a:	f04f 31ff 	mov.w	r1, #4294967295
90001e6e:	6818      	ldr	r0, [r3, #0]
90001e70:	f00d fd20 	bl	9000f8b4 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001e74:	6823      	ldr	r3, [r4, #0]
90001e76:	2b01      	cmp	r3, #1
90001e78:	d1aa      	bne.n	90001dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
90001e7a:	e7c5      	b.n	90001e08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x178>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e7c:	6833      	ldr	r3, [r6, #0]
90001e7e:	2b00      	cmp	r3, #0
90001e80:	d1b7      	bne.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
        DMA2D_reference->start();
90001e82:	6803      	ldr	r3, [r0, #0]
90001e84:	691b      	ldr	r3, [r3, #16]
90001e86:	4798      	blx	r3
90001e88:	e7b3      	b.n	90001df2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x162>
            HAL_JPEG_Abort(hjpeg);
90001e8a:	4814      	ldr	r0, [pc, #80]	@ (90001edc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
90001e8c:	f007 ff3e 	bl	90009d0c <HAL_JPEG_Abort>
90001e90:	e7e5      	b.n	90001e5e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ce>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001e92:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001e96:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001e98:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001e9c:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001e9e:	4401      	add	r1, r0
        val |= d[0];
90001ea0:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001ea2:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001ea4:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001ea8:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001eaa:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001eae:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001eb2:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001eb6:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001eba:	e734      	b.n	90001d26 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x96>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ebc:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001ebe:	4b0e      	ldr	r3, [pc, #56]	@ (90001ef8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001ec0:	4a0e      	ldr	r2, [pc, #56]	@ (90001efc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001ec2:	21af      	movs	r1, #175	@ 0xaf
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001ec4:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001ec8:	480d      	ldr	r0, [pc, #52]	@ (90001f00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eca:	f02a f9bd 	bl	9002c248 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ece:	4691      	mov	r9, r2
90001ed0:	e7e1      	b.n	90001e96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x206>
90001ed2:	bf00      	nop
90001ed4:	240005cc 	.word	0x240005cc
90001ed8:	24006228 	.word	0x24006228
90001edc:	24009d08 	.word	0x24009d08
90001ee0:	2400621c 	.word	0x2400621c
90001ee4:	2400060c 	.word	0x2400060c
90001ee8:	2400622c 	.word	0x2400622c
90001eec:	24006230 	.word	0x24006230
90001ef0:	24000610 	.word	0x24000610
90001ef4:	24000614 	.word	0x24000614
90001ef8:	9002d64c 	.word	0x9002d64c
90001efc:	9002d660 	.word	0x9002d660
90001f00:	9002d5f8 	.word	0x9002d5f8
90001f04:	24006234 	.word	0x24006234
90001f08:	24006224 	.word	0x24006224
90001f0c:	24000004 	.word	0x24000004

90001f10 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f10:	684b      	ldr	r3, [r1, #4]
90001f12:	2b01      	cmp	r3, #1
90001f14:	d015      	beq.n	90001f42 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f16:	2b02      	cmp	r3, #2
90001f18:	d00b      	beq.n	90001f32 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f1a:	b94b      	cbnz	r3, 90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f1c:	68cb      	ldr	r3, [r1, #12]
90001f1e:	0758      	lsls	r0, r3, #29
90001f20:	d11e      	bne.n	90001f60 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f22:	688b      	ldr	r3, [r1, #8]
90001f24:	075a      	lsls	r2, r3, #29
90001f26:	d003      	beq.n	90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f28:	f023 0307 	bic.w	r3, r3, #7
90001f2c:	3308      	adds	r3, #8
90001f2e:	608b      	str	r3, [r1, #8]
    }
90001f30:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f32:	68cb      	ldr	r3, [r1, #12]
90001f34:	071a      	lsls	r2, r3, #28
90001f36:	d0f4      	beq.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f38:	f023 030f 	bic.w	r3, r3, #15
90001f3c:	3310      	adds	r3, #16
90001f3e:	60cb      	str	r3, [r1, #12]
90001f40:	e7ef      	b.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f42:	68cb      	ldr	r3, [r1, #12]
90001f44:	071a      	lsls	r2, r3, #28
90001f46:	d003      	beq.n	90001f50 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f48:	f023 030f 	bic.w	r3, r3, #15
90001f4c:	3310      	adds	r3, #16
90001f4e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001f50:	688b      	ldr	r3, [r1, #8]
90001f52:	0718      	lsls	r0, r3, #28
90001f54:	d0ec      	beq.n	90001f30 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001f56:	f023 030f 	bic.w	r3, r3, #15
90001f5a:	3310      	adds	r3, #16
90001f5c:	608b      	str	r3, [r1, #8]
90001f5e:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001f60:	f023 0307 	bic.w	r3, r3, #7
90001f64:	3308      	adds	r3, #8
90001f66:	60cb      	str	r3, [r1, #12]
90001f68:	e7db      	b.n	90001f22 <HAL_JPEG_InfoReadyCallback+0x12>
90001f6a:	bf00      	nop

90001f6c <HAL_JPEG_GetDataCallback>:
    {
90001f6c:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001f6e:	4c0c      	ldr	r4, [pc, #48]	@ (90001fa0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f70:	4a0c      	ldr	r2, [pc, #48]	@ (90001fa4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001f72:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f74:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001f76:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f78:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001f7a:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001f7c:	d302      	bcc.n	90001f84 <HAL_JPEG_GetDataCallback+0x18>
    }
90001f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
90001f82:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001f84:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f86:	4b08      	ldr	r3, [pc, #32]	@ (90001fa8 <HAL_JPEG_GetDataCallback+0x3c>)
90001f88:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f8a:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f8e:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f90:	bf28      	it	cs
90001f92:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001f96:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001f9a:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001f9c:	f007 beae 	b.w	90009cfc <HAL_JPEG_ConfigInputBuffer>
90001fa0:	24006240 	.word	0x24006240
90001fa4:	2400623c 	.word	0x2400623c
90001fa8:	24006238 	.word	0x24006238

90001fac <HAL_JPEG_DataReadyCallback>:
    {
90001fac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90001fb0:	4e4a      	ldr	r6, [pc, #296]	@ (900020dc <HAL_JPEG_DataReadyCallback+0x130>)
    {
90001fb2:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fb4:	4f4a      	ldr	r7, [pc, #296]	@ (900020e0 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90001fb6:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fb8:	4d4a      	ldr	r5, [pc, #296]	@ (900020e4 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
90001fba:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fbc:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fbe:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90001fc2:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc4:	4b48      	ldr	r3, [pc, #288]	@ (900020e8 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fc6:	4c49      	ldr	r4, [pc, #292]	@ (900020ec <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fc8:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fca:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fcc:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fd0:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90001fd4:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90001fd8:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fda:	4d45      	ldr	r5, [pc, #276]	@ (900020f0 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
90001fdc:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90001fde:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90001fe2:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90001fe6:	697b      	ldr	r3, [r7, #20]
90001fe8:	428b      	cmp	r3, r1
90001fea:	d260      	bcs.n	900020ae <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001fec:	6821      	ldr	r1, [r4, #0]
90001fee:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff0:	6823      	ldr	r3, [r4, #0]
90001ff2:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001ff4:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001ff8:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001ffc:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002000:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002002:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002006:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000200a:	6823      	ldr	r3, [r4, #0]
9000200c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002010:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002014:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002016:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002018:	b12b      	cbz	r3, 90002026 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000201a:	6823      	ldr	r3, [r4, #0]
9000201c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002020:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002024:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002026:	6832      	ldr	r2, [r6, #0]
90002028:	69bb      	ldr	r3, [r7, #24]
9000202a:	4293      	cmp	r3, r2
9000202c:	d922      	bls.n	90002074 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000202e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002030:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002032:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002036:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002038:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000203c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000203e:	2200      	movs	r2, #0
90002040:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002042:	6823      	ldr	r3, [r4, #0]
90002044:	2b01      	cmp	r3, #1
90002046:	d900      	bls.n	9000204a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002048:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000204a:	6823      	ldr	r3, [r4, #0]
9000204c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002050:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
90002054:	2b00      	cmp	r3, #0
90002056:	d138      	bne.n	900020ca <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002058:	6823      	ldr	r3, [r4, #0]
9000205a:	4640      	mov	r0, r8
9000205c:	68fa      	ldr	r2, [r7, #12]
9000205e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002062:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90002066:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000206a:	01d2      	lsls	r2, r2, #7
9000206c:	6859      	ldr	r1, [r3, #4]
9000206e:	f007 fe49 	bl	90009d04 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
90002072:	69bb      	ldr	r3, [r7, #24]
90002074:	6832      	ldr	r2, [r6, #0]
90002076:	429a      	cmp	r2, r3
90002078:	d20b      	bcs.n	90002092 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
9000207a:	4b1e      	ldr	r3, [pc, #120]	@ (900020f4 <HAL_JPEG_DataReadyCallback+0x148>)
9000207c:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
9000207e:	7a1b      	ldrb	r3, [r3, #8]
90002080:	b10b      	cbz	r3, 90002086 <HAL_JPEG_DataReadyCallback+0xda>
    }
90002082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
90002086:	4b1c      	ldr	r3, [pc, #112]	@ (900020f8 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
90002088:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
9000208c:	6818      	ldr	r0, [r3, #0]
9000208e:	f00d bc43 	b.w	9000f918 <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
90002092:	6823      	ldr	r3, [r4, #0]
90002094:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
90002096:	4919      	ldr	r1, [pc, #100]	@ (900020fc <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90002098:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
9000209a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
9000209e:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a0:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020a2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020a6:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020a8:	f007 fdf0 	bl	90009c8c <HAL_JPEG_Pause>
900020ac:	e7e5      	b.n	9000207a <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020ae:	6823      	ldr	r3, [r4, #0]
900020b0:	68fa      	ldr	r2, [r7, #12]
900020b2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020ba:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020be:	01d2      	lsls	r2, r2, #7
900020c0:	6859      	ldr	r1, [r3, #4]
    }
900020c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020c6:	f007 be1d 	b.w	90009d04 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020ca:	2102      	movs	r1, #2
900020cc:	4640      	mov	r0, r8
900020ce:	f007 fddd 	bl	90009c8c <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
900020d2:	4b0b      	ldr	r3, [pc, #44]	@ (90002100 <HAL_JPEG_DataReadyCallback+0x154>)
900020d4:	2201      	movs	r2, #1
900020d6:	601a      	str	r2, [r3, #0]
900020d8:	e7be      	b.n	90002058 <HAL_JPEG_DataReadyCallback+0xac>
900020da:	bf00      	nop
900020dc:	24006220 	.word	0x24006220
900020e0:	240005cc 	.word	0x240005cc
900020e4:	24006244 	.word	0x24006244
900020e8:	2400621c 	.word	0x2400621c
900020ec:	24006224 	.word	0x24006224
900020f0:	24000004 	.word	0x24000004
900020f4:	24006228 	.word	0x24006228
900020f8:	24000614 	.word	0x24000614
900020fc:	24006234 	.word	0x24006234
90002100:	24006230 	.word	0x24006230

90002104 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002104:	b672      	cpsid	i
        while (1)
90002106:	e7fe      	b.n	90002106 <HAL_JPEG_ErrorCallback+0x2>

90002108 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002108:	4b01      	ldr	r3, [pc, #4]	@ (90002110 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000210a:	2201      	movs	r2, #1
9000210c:	601a      	str	r2, [r3, #0]
    }
9000210e:	4770      	bx	lr
90002110:	24006234 	.word	0x24006234

90002114 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002114:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002116:	4f1e      	ldr	r7, [pc, #120]	@ (90002190 <DMA2D_CopyBuffer+0x7c>)
90002118:	6903      	ldr	r3, [r0, #16]
9000211a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000211c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000211e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002122:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002124:	4e1b      	ldr	r6, [pc, #108]	@ (90002194 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002126:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000212a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000212e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002132:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002136:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002138:	bf18      	it	ne
9000213a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000213e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002140:	6939      	ldr	r1, [r7, #16]
90002142:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002146:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000214a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000214e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002150:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002152:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
90002154:	7e81      	ldrb	r1, [r0, #26]
90002156:	b1b9      	cbz	r1, 90002188 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002158:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
9000215a:	f1c1 0110 	rsb	r1, r1, #16
9000215e:	4321      	orrs	r1, r4
90002160:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002162:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
90002164:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002168:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000216c:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
9000216e:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002172:	4809      	ldr	r0, [pc, #36]	@ (90002198 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002174:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
90002176:	4b07      	ldr	r3, [pc, #28]	@ (90002194 <DMA2D_CopyBuffer+0x80>)
90002178:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
9000217a:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000217c:	4a07      	ldr	r2, [pc, #28]	@ (9000219c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
9000217e:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002180:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002182:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002184:	6018      	str	r0, [r3, #0]
}
90002186:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
90002188:	f044 0410 	orr.w	r4, r4, #16
9000218c:	6474      	str	r4, [r6, #68]	@ 0x44
9000218e:	e7e8      	b.n	90002162 <DMA2D_CopyBuffer+0x4e>
90002190:	240005cc 	.word	0x240005cc
90002194:	52001000 	.word	0x52001000
90002198:	00012301 	.word	0x00012301
9000219c:	ff09000b 	.word	0xff09000b

900021a0 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021a0:	6902      	ldr	r2, [r0, #16]
{
900021a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021a6:	4605      	mov	r5, r0
900021a8:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021aa:	2a00      	cmp	r2, #0
900021ac:	d165      	bne.n	9000227a <DMA2D_CropBuffer+0xda>
900021ae:	4b35      	ldr	r3, [pc, #212]	@ (90002284 <DMA2D_CropBuffer+0xe4>)
900021b0:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
900021b4:	f1cc 0010 	rsb	r0, ip, #16
900021b8:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
900021ba:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900021bc:	3901      	subs	r1, #1
900021be:	428a      	cmp	r2, r1
900021c0:	d102      	bne.n	900021c8 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
900021c2:	6b99      	ldr	r1, [r3, #56]	@ 0x38
900021c4:	1a41      	subs	r1, r0, r1
900021c6:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900021c8:	7e6e      	ldrb	r6, [r5, #25]
900021ca:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
900021cc:	2e00      	cmp	r6, #0
900021ce:	d051      	beq.n	90002274 <DMA2D_CropBuffer+0xd4>
900021d0:	f1c7 0110 	rsb	r1, r7, #16
900021d4:	46b8      	mov	r8, r7
900021d6:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
900021d8:	f895 e01a 	ldrb.w	lr, [r5, #26]
900021dc:	f1be 0f00 	cmp.w	lr, #0
900021e0:	d002      	beq.n	900021e8 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
900021e2:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900021e4:	1b09      	subs	r1, r1, r4
900021e6:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
900021e8:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021ec:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021ee:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021f2:	4413      	add	r3, r2
    job.MCU_drawn++;
900021f4:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
900021f6:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
900021fa:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
900021fc:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
90002200:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002204:	0052      	lsls	r2, r2, #1
90002206:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000220a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000220e:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002212:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002214:	b107      	cbz	r7, 90002218 <DMA2D_CropBuffer+0x78>
90002216:	b90e      	cbnz	r6, 9000221c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002218:	2300      	movs	r3, #0
9000221a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000221c:	4b1a      	ldr	r3, [pc, #104]	@ (90002288 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000221e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002220:	4f1a      	ldr	r7, [pc, #104]	@ (9000228c <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002222:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002224:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002226:	4a1a      	ldr	r2, [pc, #104]	@ (90002290 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002228:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000222a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000222e:	6810      	ldr	r0, [r2, #0]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002230:	2201      	movs	r2, #1
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002232:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002234:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002238:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000223c:	9302      	str	r3, [sp, #8]
    DMA2D_reference->addToQueue(blitOp);
9000223e:	6803      	ldr	r3, [r0, #0]
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002240:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002244:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002246:	9201      	str	r2, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002248:	685b      	ldr	r3, [r3, #4]
9000224a:	9604      	str	r6, [sp, #16]
9000224c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000224e:	4b11      	ldr	r3, [pc, #68]	@ (90002294 <DMA2D_CropBuffer+0xf4>)
90002250:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
90002252:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002254:	4810      	ldr	r0, [pc, #64]	@ (90002298 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002256:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
90002258:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000225c:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
9000225e:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002260:	490e      	ldr	r1, [pc, #56]	@ (9000229c <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
90002262:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
90002264:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
90002266:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90002268:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
9000226a:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000226c:	6019      	str	r1, [r3, #0]
}
9000226e:	b00a      	add	sp, #40	@ 0x28
90002270:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90002274:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002276:	46b0      	mov	r8, r6
90002278:	e7ae      	b.n	900021d8 <DMA2D_CropBuffer+0x38>
9000227a:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
9000227c:	f04f 0c00 	mov.w	ip, #0
90002280:	4b00      	ldr	r3, [pc, #0]	@ (90002284 <DMA2D_CropBuffer+0xe4>)
90002282:	e79a      	b.n	900021ba <DMA2D_CropBuffer+0x1a>
90002284:	240005cc 	.word	0x240005cc
90002288:	01e00010 	.word	0x01e00010
9000228c:	2400061c 	.word	0x2400061c
90002290:	24006228 	.word	0x24006228
90002294:	52001000 	.word	0x52001000
90002298:	ff09000b 	.word	0xff09000b
9000229c:	00012301 	.word	0x00012301

900022a0 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022a0:	4b0d      	ldr	r3, [pc, #52]	@ (900022d8 <DMA2D_ExternalJobCompleted+0x38>)
900022a2:	6902      	ldr	r2, [r0, #16]
900022a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022a6:	429a      	cmp	r2, r3
900022a8:	d000      	beq.n	900022ac <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022aa:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022ac:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022ae:	4b0b      	ldr	r3, [pc, #44]	@ (900022dc <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
900022b0:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
900022b2:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
900022b4:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
900022b6:	3101      	adds	r1, #1
        job.DoCropping = false;
900022b8:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
900022ba:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
900022bc:	6819      	ldr	r1, [r3, #0]
900022be:	2901      	cmp	r1, #1
900022c0:	d900      	bls.n	900022c4 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
900022c2:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
900022c4:	7e83      	ldrb	r3, [r0, #26]
900022c6:	b113      	cbz	r3, 900022ce <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
900022c8:	4b05      	ldr	r3, [pc, #20]	@ (900022e0 <DMA2D_ExternalJobCompleted+0x40>)
900022ca:	2201      	movs	r2, #1
900022cc:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
900022ce:	4b05      	ldr	r3, [pc, #20]	@ (900022e4 <DMA2D_ExternalJobCompleted+0x44>)
900022d0:	6818      	ldr	r0, [r3, #0]
900022d2:	f00d bb21 	b.w	9000f918 <osSemaphoreRelease>
900022d6:	bf00      	nop
900022d8:	240005cc 	.word	0x240005cc
900022dc:	24000610 	.word	0x24000610
900022e0:	2400060c 	.word	0x2400060c
900022e4:	24000614 	.word	0x24000614

900022e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022e8:	2101      	movs	r1, #1
900022ea:	2200      	movs	r2, #0
{
900022ec:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
900022ee:	4608      	mov	r0, r1
900022f0:	f00d fa94 	bl	9000f81c <osSemaphoreNew>
900022f4:	4b0b      	ldr	r3, [pc, #44]	@ (90002324 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900022f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900022f8:	b140      	cbz	r0, 9000230c <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900022fa:	2200      	movs	r2, #0
900022fc:	2104      	movs	r1, #4
900022fe:	2001      	movs	r0, #1
90002300:	f00d fb34 	bl	9000f96c <osMessageQueueNew>
90002304:	4b08      	ldr	r3, [pc, #32]	@ (90002328 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002306:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002308:	b130      	cbz	r0, 90002318 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
9000230a:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
9000230c:	4b07      	ldr	r3, [pc, #28]	@ (9000232c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000230e:	2128      	movs	r1, #40	@ 0x28
90002310:	4a07      	ldr	r2, [pc, #28]	@ (90002330 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002312:	4808      	ldr	r0, [pc, #32]	@ (90002334 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002314:	f029 ff98 	bl	9002c248 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002318:	4b07      	ldr	r3, [pc, #28]	@ (90002338 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000231a:	212c      	movs	r1, #44	@ 0x2c
9000231c:	4a04      	ldr	r2, [pc, #16]	@ (90002330 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000231e:	4805      	ldr	r0, [pc, #20]	@ (90002334 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002320:	f029 ff92 	bl	9002c248 <__assert_func>
90002324:	2400624c 	.word	0x2400624c
90002328:	24006248 	.word	0x24006248
9000232c:	9002d884 	.word	0x9002d884
90002330:	9002d8d0 	.word	0x9002d8d0
90002334:	9002d900 	.word	0x9002d900
90002338:	9002d94c 	.word	0x9002d94c

9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000233c:	4b02      	ldr	r3, [pc, #8]	@ (90002348 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000233e:	f04f 31ff 	mov.w	r1, #4294967295
90002342:	6818      	ldr	r0, [r3, #0]
90002344:	f00d bab6 	b.w	9000f8b4 <osSemaphoreAcquire>
90002348:	2400624c 	.word	0x2400624c

9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000234c:	4b01      	ldr	r3, [pc, #4]	@ (90002354 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000234e:	6818      	ldr	r0, [r3, #0]
90002350:	f00d bae2 	b.w	9000f918 <osSemaphoreRelease>
90002354:	2400624c 	.word	0x2400624c

90002358 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90002358:	4b02      	ldr	r3, [pc, #8]	@ (90002364 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
9000235a:	2100      	movs	r1, #0
9000235c:	6818      	ldr	r0, [r3, #0]
9000235e:	f00d baa9 	b.w	9000f8b4 <osSemaphoreAcquire>
90002362:	bf00      	nop
90002364:	2400624c 	.word	0x2400624c

90002368 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
90002368:	4b01      	ldr	r3, [pc, #4]	@ (90002370 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
9000236a:	6818      	ldr	r0, [r3, #0]
9000236c:	f00d bad4 	b.w	9000f918 <osSemaphoreRelease>
90002370:	2400624c 	.word	0x2400624c

90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90002374:	4803      	ldr	r0, [pc, #12]	@ (90002384 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90002376:	2300      	movs	r3, #0
90002378:	4903      	ldr	r1, [pc, #12]	@ (90002388 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
9000237a:	461a      	mov	r2, r3
9000237c:	6800      	ldr	r0, [r0, #0]
9000237e:	f00d bb31 	b.w	9000f9e4 <osMessageQueuePut>
90002382:	bf00      	nop
90002384:	24006248 	.word	0x24006248
90002388:	2400003c 	.word	0x2400003c

9000238c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
9000238c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
9000238e:	2300      	movs	r3, #0
{
90002390:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90002392:	4c07      	ldr	r4, [pc, #28]	@ (900023b0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90002394:	461a      	mov	r2, r3
90002396:	a901      	add	r1, sp, #4
90002398:	6820      	ldr	r0, [r4, #0]
9000239a:	f00d fb5f 	bl	9000fa5c <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
9000239e:	f04f 33ff 	mov.w	r3, #4294967295
900023a2:	2200      	movs	r2, #0
900023a4:	a901      	add	r1, sp, #4
900023a6:	6820      	ldr	r0, [r4, #0]
900023a8:	f00d fb58 	bl	9000fa5c <osMessageQueueGet>
}
900023ac:	b002      	add	sp, #8
900023ae:	bd10      	pop	{r4, pc}
900023b0:	24006248 	.word	0x24006248

900023b4 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
900023b4:	6803      	ldr	r3, [r0, #0]
900023b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900023b8:	4718      	bx	r3
900023ba:	bf00      	nop

900023bc <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
900023bc:	2001      	movs	r0, #1
900023be:	4770      	bx	lr

900023c0 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
900023c0:	e7fe      	b.n	900023c0 <DMA2D_XferErrorCallback>
900023c2:	bf00      	nop

900023c4 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
900023c4:	4905      	ldr	r1, [pc, #20]	@ (900023dc <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900023c6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900023ca:	4b05      	ldr	r3, [pc, #20]	@ (900023e0 <_ZN8STM32DMAD1Ev+0x1c>)
900023cc:	6001      	str	r1, [r0, #0]
900023ce:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900023d2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900023d6:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
900023da:	4770      	bx	lr
900023dc:	9002daf0 	.word	0x9002daf0
900023e0:	e000e100 	.word	0xe000e100

900023e4 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023e4:	4b11      	ldr	r3, [pc, #68]	@ (9000242c <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023e6:	4912      	ldr	r1, [pc, #72]	@ (90002430 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023e8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023ec:	4811      	ldr	r0, [pc, #68]	@ (90002434 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023ee:	f042 0210 	orr.w	r2, r2, #16
{
900023f2:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
900023f4:	4c10      	ldr	r4, [pc, #64]	@ (90002438 <_ZN8STM32DMA10initializeEv+0x54>)
{
900023f6:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
900023f8:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
900023fc:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90002400:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90002404:	f002 0210 	and.w	r2, r2, #16
90002408:	9201      	str	r2, [sp, #4]
9000240a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000240c:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000240e:	f042 0210 	orr.w	r2, r2, #16
90002412:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002414:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002416:	f022 0210 	bic.w	r2, r2, #16
9000241a:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000241c:	4b07      	ldr	r3, [pc, #28]	@ (9000243c <_ZN8STM32DMA10initializeEv+0x58>)
9000241e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002422:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002424:	b003      	add	sp, #12
90002426:	f85d 4b04 	ldr.w	r4, [sp], #4
9000242a:	4770      	bx	lr
9000242c:	58024400 	.word	0x58024400
90002430:	24009d60 	.word	0x24009d60
90002434:	900023c1 	.word	0x900023c1
90002438:	9000280d 	.word	0x9000280d
9000243c:	e000e100 	.word	0xe000e100

90002440 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002440:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002444:	4770      	bx	lr
90002446:	bf00      	nop

90002448 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002448:	4909      	ldr	r1, [pc, #36]	@ (90002470 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000244a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000244e:	4b09      	ldr	r3, [pc, #36]	@ (90002474 <_ZN8STM32DMAD0Ev+0x2c>)
90002450:	b510      	push	{r4, lr}
90002452:	6001      	str	r1, [r0, #0]
90002454:	4604      	mov	r4, r0
90002456:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000245a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000245e:	f3bf 8f6f 	isb	sy
}
90002462:	f640 51a4 	movw	r1, #3492	@ 0xda4
90002466:	f029 fb78 	bl	9002bb5a <_ZdlPvj>
9000246a:	4620      	mov	r0, r4
9000246c:	bd10      	pop	{r4, pc}
9000246e:	bf00      	nop
90002470:	9002daf0 	.word	0x9002daf0
90002474:	e000e100 	.word	0xe000e100

90002478 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
90002478:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
9000247c:	b510      	push	{r4, lr}
9000247e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90002480:	b963      	cbnz	r3, 9000249c <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
90002482:	6803      	ldr	r3, [r0, #0]
90002484:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002486:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002488:	4924      	ldr	r1, [pc, #144]	@ (9000251c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
9000248a:	4a25      	ldr	r2, [pc, #148]	@ (90002520 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
9000248c:	680b      	ldr	r3, [r1, #0]
9000248e:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002492:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002496:	2b01      	cmp	r3, #1
90002498:	d015      	beq.n	900024c6 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
9000249a:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
9000249c:	7a03      	ldrb	r3, [r0, #8]
9000249e:	2b00      	cmp	r3, #0
900024a0:	d12b      	bne.n	900024fa <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
900024a2:	6860      	ldr	r0, [r4, #4]
900024a4:	6803      	ldr	r3, [r0, #0]
900024a6:	681b      	ldr	r3, [r3, #0]
900024a8:	4798      	blx	r3
900024aa:	4603      	mov	r3, r0
900024ac:	2800      	cmp	r0, #0
900024ae:	d1f4      	bne.n	9000249a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024b0:	7a62      	ldrb	r2, [r4, #9]
900024b2:	2a00      	cmp	r2, #0
900024b4:	d0f1      	beq.n	9000249a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
900024b6:	6822      	ldr	r2, [r4, #0]
900024b8:	4620      	mov	r0, r4
                started_by_external_job = false;
900024ba:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
900024be:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900024c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
900024c4:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024c6:	4817      	ldr	r0, [pc, #92]	@ (90002524 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
900024c8:	6800      	ldr	r0, [r0, #0]
900024ca:	2800      	cmp	r0, #0
900024cc:	d1e5      	bne.n	9000249a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
900024ce:	7a20      	ldrb	r0, [r4, #8]
900024d0:	2800      	cmp	r0, #0
900024d2:	d1e2      	bne.n	9000249a <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024d4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900024d6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024da:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900024de:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024e0:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900024e4:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024e6:	6808      	ldr	r0, [r1, #0]
900024e8:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900024ec:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900024f0:	b17b      	cbz	r3, 90002512 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
900024f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024f6:	f7ff be53 	b.w	900021a0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024fa:	4b08      	ldr	r3, [pc, #32]	@ (9000251c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
900024fc:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900024fe:	4808      	ldr	r0, [pc, #32]	@ (90002520 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
90002500:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002502:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002504:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002508:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000250c:	f7ff fec8 	bl	900022a0 <DMA2D_ExternalJobCompleted>
90002510:	e7c7      	b.n	900024a2 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002512:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002516:	f7ff bdfd 	b.w	90002114 <DMA2D_CopyBuffer>
9000251a:	bf00      	nop
9000251c:	24000610 	.word	0x24000610
90002520:	24000004 	.word	0x24000004
90002524:	2400060c 	.word	0x2400060c

90002528 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002528:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000252a:	7f8b      	ldrb	r3, [r1, #30]
9000252c:	2b0a      	cmp	r3, #10
9000252e:	d83d      	bhi.n	900025ac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002530:	e8df f003 	tbb	[pc, r3]
90002534:	3c2a063a 	.word	0x3c2a063a
90002538:	063c3c3c 	.word	0x063c3c3c
9000253c:	0606      	.short	0x0606
9000253e:	06          	.byte	0x06
9000253f:	00          	.byte	0x00
90002540:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002542:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002546:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002548:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000254a:	4b1b      	ldr	r3, [pc, #108]	@ (900025b8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000254c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002550:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002552:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90002556:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002558:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000255a:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000255c:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
9000255e:	680e      	ldr	r6, [r1, #0]
        return color;
90002560:	68c8      	ldr	r0, [r1, #12]
90002562:	2e08      	cmp	r6, #8
90002564:	d012      	beq.n	9000258c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002566:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
90002568:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000256a:	0941      	lsrs	r1, r0, #5
9000256c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90002570:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002574:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002576:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
9000257a:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
9000257c:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
9000257e:	490f      	ldr	r1, [pc, #60]	@ (900025bc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90002580:	4302      	orrs	r2, r0
90002582:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
90002584:	6019      	str	r1, [r3, #0]
    }
}
90002586:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002588:	2400      	movs	r4, #0
9000258a:	e7da      	b.n	90002542 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000258c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
9000258e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002590:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90002592:	4a0b      	ldr	r2, [pc, #44]	@ (900025c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
90002594:	7f09      	ldrb	r1, [r1, #28]
90002596:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
9000259a:	490a      	ldr	r1, [pc, #40]	@ (900025c4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
9000259c:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000259e:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025a0:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025a2:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025a4:	6019      	str	r1, [r3, #0]
}
900025a6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900025a8:	2402      	movs	r4, #2
900025aa:	e7ca      	b.n	90002542 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
900025ac:	4b06      	ldr	r3, [pc, #24]	@ (900025c8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
900025ae:	2191      	movs	r1, #145	@ 0x91
900025b0:	4a06      	ldr	r2, [pc, #24]	@ (900025cc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
900025b2:	4807      	ldr	r0, [pc, #28]	@ (900025d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
900025b4:	f029 fe48 	bl	9002c248 <__assert_func>
900025b8:	52001000 	.word	0x52001000
900025bc:	00032301 	.word	0x00032301
900025c0:	00010009 	.word	0x00010009
900025c4:	00022301 	.word	0x00022301
900025c8:	9002d990 	.word	0x9002d990
900025cc:	9002d9ac 	.word	0x9002d9ac
900025d0:	9002d9f8 	.word	0x9002d9f8

900025d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
900025d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
900025d6:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
900025da:	f1be 0f0b 	cmp.w	lr, #11
900025de:	f200 80ac 	bhi.w	9000273a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
900025e2:	e8df f00e 	tbb	[pc, lr]
900025e6:	605b      	.short	0x605b
900025e8:	aaaaaa46 	.word	0xaaaaaa46
900025ec:	060606aa 	.word	0x060606aa
900025f0:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
900025f2:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
900025f4:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
900025f8:	f1bc 0f0b 	cmp.w	ip, #11
900025fc:	f200 809d 	bhi.w	9000273a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x166>
90002600:	e8df f00c 	tbb	[pc, ip]
90002604:	9b0d494e 	.word	0x9b0d494e
90002608:	069b9b9b 	.word	0x069b9b9b
9000260c:	06060606 	.word	0x06060606
    switch (format)
90002610:	f1bc 0f0b 	cmp.w	ip, #11
90002614:	f000 8097 	beq.w	90002746 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x172>
        dma2dColorMode = DMA2D_INPUT_L8;
90002618:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000261a:	2701      	movs	r7, #1
9000261c:	e001      	b.n	90002622 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000261e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002620:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002622:	8a8b      	ldrh	r3, [r1, #20]
90002624:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002626:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002628:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000262a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000262c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000262e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002632:	4b4b      	ldr	r3, [pc, #300]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002634:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002636:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002638:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000263a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000263c:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000263e:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002640:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002642:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002644:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002646:	680a      	ldr	r2, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002648:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000264a:	2a80      	cmp	r2, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000264c:	ea4f 6007 	mov.w	r0, r7, lsl #24
    switch (blitOp.operation)
90002650:	d02e      	beq.n	900026b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xdc>
90002652:	d810      	bhi.n	90002676 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
90002654:	2a20      	cmp	r2, #32
90002656:	d028      	beq.n	900026aa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
90002658:	2a40      	cmp	r2, #64	@ 0x40
9000265a:	d026      	beq.n	900026aa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
9000265c:	2a04      	cmp	r2, #4
9000265e:	d15a      	bne.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002660:	4330      	orrs	r0, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002662:	4a40      	ldr	r2, [pc, #256]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002664:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
90002668:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000266a:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000266c:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000266e:	601a      	str	r2, [r3, #0]
}
90002670:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90002672:	2600      	movs	r6, #0
90002674:	e7be      	b.n	900025f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
90002676:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000267a:	d059      	beq.n	90002730 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
9000267c:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90002680:	d149      	bne.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x142>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002682:	4a39      	ldr	r2, [pc, #228]	@ (90002768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002684:	4302      	orrs	r2, r0
90002686:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002688:	4a36      	ldr	r2, [pc, #216]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
9000268a:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
9000268c:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000268e:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002690:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002692:	601a      	str	r2, [r3, #0]
}
90002694:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90002696:	2401      	movs	r4, #1
90002698:	4627      	mov	r7, r4
9000269a:	e7c2      	b.n	90002622 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
9000269c:	2602      	movs	r6, #2
9000269e:	e7a9      	b.n	900025f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
900026a0:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900026a2:	4627      	mov	r7, r4
900026a4:	e7bd      	b.n	90002622 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB888;
900026a6:	2601      	movs	r6, #1
900026a8:	e7a4      	b.n	900025f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026aa:	4330      	orrs	r0, r6
900026ac:	4b2c      	ldr	r3, [pc, #176]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026ae:	e7d8      	b.n	90002662 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
900026b0:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b2:	4330      	orrs	r0, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026b4:	1d11      	adds	r1, r2, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b6:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
900026ba:	62d9      	str	r1, [r3, #44]	@ 0x2c
            switch ((Bitmap::ClutFormat)palette->format)
900026bc:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026be:	61d8      	str	r0, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026c0:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026c2:	615d      	str	r5, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
900026c4:	b9b1      	cbnz	r1, 900026f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x120>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026c6:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
900026c8:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
900026ca:	69d8      	ldr	r0, [r3, #28]
900026cc:	4a27      	ldr	r2, [pc, #156]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
900026ce:	3901      	subs	r1, #1
900026d0:	4002      	ands	r2, r0
900026d2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900026d6:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
900026d8:	4a21      	ldr	r2, [pc, #132]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
900026da:	69d3      	ldr	r3, [r2, #28]
900026dc:	f043 0320 	orr.w	r3, r3, #32
900026e0:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
900026e2:	69d3      	ldr	r3, [r2, #28]
900026e4:	069b      	lsls	r3, r3, #26
900026e6:	d4fc      	bmi.n	900026e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10e>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
900026e8:	2310      	movs	r3, #16
900026ea:	6093      	str	r3, [r2, #8]
            if (blend)
900026ec:	b317      	cbz	r7, 90002734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x160>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026ee:	4b1d      	ldr	r3, [pc, #116]	@ (90002764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026f0:	6013      	str	r3, [r2, #0]
}
900026f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900026f4:	2901      	cmp	r1, #1
900026f6:	d12c      	bne.n	90002752 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17e>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026f8:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
900026fa:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
900026fc:	69d8      	ldr	r0, [r3, #28]
900026fe:	4a1b      	ldr	r2, [pc, #108]	@ (9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
90002700:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90002704:	bf18      	it	ne
90002706:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002708:	4002      	ands	r2, r0
9000270a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000270e:	f042 0210 	orr.w	r2, r2, #16
90002712:	61da      	str	r2, [r3, #28]
                break;
90002714:	e7e0      	b.n	900026d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x104>
        if (blitOp.srcFormat != blitOp.dstFormat)
90002716:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002718:	ea46 0600 	orr.w	r6, r6, r0
9000271c:	4b10      	ldr	r3, [pc, #64]	@ (90002760 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
9000271e:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002722:	bf14      	ite	ne
90002724:	4a12      	ldrne	r2, [pc, #72]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002726:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000272a:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000272c:	601a      	str	r2, [r3, #0]
}
9000272e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002730:	4a10      	ldr	r2, [pc, #64]	@ (90002774 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002732:	e7a7      	b.n	90002684 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002734:	4b0e      	ldr	r3, [pc, #56]	@ (90002770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002736:	6013      	str	r3, [r2, #0]
}
90002738:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
9000273a:	4b0f      	ldr	r3, [pc, #60]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000273c:	2170      	movs	r1, #112	@ 0x70
9000273e:	4a0f      	ldr	r2, [pc, #60]	@ (9000277c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
90002740:	480f      	ldr	r0, [pc, #60]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002742:	f029 fd81 	bl	9002c248 <__assert_func>
        assert(0 && "Unsupported Format!");
90002746:	4b0c      	ldr	r3, [pc, #48]	@ (90002778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
90002748:	2191      	movs	r1, #145	@ 0x91
9000274a:	4a0e      	ldr	r2, [pc, #56]	@ (90002784 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
9000274c:	480c      	ldr	r0, [pc, #48]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000274e:	f029 fd7b 	bl	9002c248 <__assert_func>
                assert(0 && "Unsupported format");
90002752:	4b0d      	ldr	r3, [pc, #52]	@ (90002788 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
90002754:	f240 111b 	movw	r1, #283	@ 0x11b
90002758:	4a0c      	ldr	r2, [pc, #48]	@ (9000278c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
9000275a:	4809      	ldr	r0, [pc, #36]	@ (90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
9000275c:	f029 fd74 	bl	9002c248 <__assert_func>
90002760:	52001000 	.word	0x52001000
90002764:	00022301 	.word	0x00022301
90002768:	00020009 	.word	0x00020009
9000276c:	ffff00ef 	.word	0xffff00ef
90002770:	00012301 	.word	0x00012301
90002774:	0002000a 	.word	0x0002000a
90002778:	9002d990 	.word	0x9002d990
9000277c:	9002da40 	.word	0x9002da40
90002780:	9002d9f8 	.word	0x9002d9f8
90002784:	9002d9ac 	.word	0x9002d9ac
90002788:	9002da8c 	.word	0x9002da8c
9000278c:	9002daa8 	.word	0x9002daa8

90002790 <_ZN8STM32DMA5startEv>:
    virtual void start()
90002790:	b510      	push	{r4, lr}
90002792:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
90002794:	6840      	ldr	r0, [r0, #4]
90002796:	6803      	ldr	r3, [r0, #0]
90002798:	681b      	ldr	r3, [r3, #0]
9000279a:	4798      	blx	r3
9000279c:	b958      	cbnz	r0, 900027b6 <_ZN8STM32DMA5startEv+0x26>
9000279e:	7a63      	ldrb	r3, [r4, #9]
900027a0:	b14b      	cbz	r3, 900027b6 <_ZN8STM32DMA5startEv+0x26>
900027a2:	7a23      	ldrb	r3, [r4, #8]
900027a4:	bb3b      	cbnz	r3, 900027f6 <_ZN8STM32DMA5startEv+0x66>
            execute();
900027a6:	6822      	ldr	r2, [r4, #0]
900027a8:	4620      	mov	r0, r4
            started_by_external_job = false;
900027aa:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
900027ae:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
900027b4:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027b6:	4913      	ldr	r1, [pc, #76]	@ (90002804 <_ZN8STM32DMA5startEv+0x74>)
900027b8:	4a13      	ldr	r2, [pc, #76]	@ (90002808 <_ZN8STM32DMA5startEv+0x78>)
900027ba:	680b      	ldr	r3, [r1, #0]
900027bc:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900027c0:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900027c4:	2b01      	cmp	r3, #1
900027c6:	d000      	beq.n	900027ca <_ZN8STM32DMA5startEv+0x3a>
    }
900027c8:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027ca:	7a20      	ldrb	r0, [r4, #8]
900027cc:	2800      	cmp	r0, #0
900027ce:	d1fb      	bne.n	900027c8 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027d0:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
900027d2:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027d6:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900027da:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027dc:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900027e0:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027e2:	6808      	ldr	r0, [r1, #0]
900027e4:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900027e8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900027ec:	b133      	cbz	r3, 900027fc <_ZN8STM32DMA5startEv+0x6c>
    }
900027ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900027f2:	f7ff bcd5 	b.w	900021a0 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
900027f6:	4b03      	ldr	r3, [pc, #12]	@ (90002804 <_ZN8STM32DMA5startEv+0x74>)
900027f8:	681b      	ldr	r3, [r3, #0]
    }
900027fa:	bd10      	pop	{r4, pc}
900027fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002800:	f7ff bc88 	b.w	90002114 <DMA2D_CopyBuffer>
90002804:	24000610 	.word	0x24000610
90002808:	24000004 	.word	0x24000004

9000280c <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
9000280c:	4b2c      	ldr	r3, [pc, #176]	@ (900028c0 <DMA2D_XferCpltCallback+0xb4>)
9000280e:	492d      	ldr	r1, [pc, #180]	@ (900028c4 <DMA2D_XferCpltCallback+0xb8>)
90002810:	681b      	ldr	r3, [r3, #0]
    {
90002812:	b510      	push	{r4, lr}
90002814:	685c      	ldr	r4, [r3, #4]
90002816:	6823      	ldr	r3, [r4, #0]
90002818:	695a      	ldr	r2, [r3, #20]
9000281a:	428a      	cmp	r2, r1
9000281c:	d122      	bne.n	90002864 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000281e:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
90002822:	b192      	cbz	r2, 9000284a <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002824:	7a23      	ldrb	r3, [r4, #8]
90002826:	2b00      	cmp	r3, #0
90002828:	d13a      	bne.n	900028a0 <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
9000282a:	6860      	ldr	r0, [r4, #4]
9000282c:	6803      	ldr	r3, [r0, #0]
9000282e:	681b      	ldr	r3, [r3, #0]
90002830:	4798      	blx	r3
90002832:	4603      	mov	r3, r0
90002834:	b9a8      	cbnz	r0, 90002862 <DMA2D_XferCpltCallback+0x56>
90002836:	7a62      	ldrb	r2, [r4, #9]
90002838:	b19a      	cbz	r2, 90002862 <DMA2D_XferCpltCallback+0x56>
                execute();
9000283a:	6822      	ldr	r2, [r4, #0]
9000283c:	4620      	mov	r0, r4
                started_by_external_job = false;
9000283e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
90002842:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002844:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002848:	4718      	bx	r3
            executeCompleted();
9000284a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000284c:	4620      	mov	r0, r4
9000284e:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002850:	491d      	ldr	r1, [pc, #116]	@ (900028c8 <DMA2D_XferCpltCallback+0xbc>)
90002852:	4a1e      	ldr	r2, [pc, #120]	@ (900028cc <DMA2D_XferCpltCallback+0xc0>)
90002854:	680b      	ldr	r3, [r1, #0]
90002856:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000285a:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
9000285e:	2b01      	cmp	r3, #1
90002860:	d004      	beq.n	9000286c <DMA2D_XferCpltCallback+0x60>
90002862:	bd10      	pop	{r4, pc}
90002864:	4620      	mov	r0, r4
90002866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000286a:	4710      	bx	r2
9000286c:	4818      	ldr	r0, [pc, #96]	@ (900028d0 <DMA2D_XferCpltCallback+0xc4>)
9000286e:	6800      	ldr	r0, [r0, #0]
90002870:	2800      	cmp	r0, #0
90002872:	d1f6      	bne.n	90002862 <DMA2D_XferCpltCallback+0x56>
90002874:	7a20      	ldrb	r0, [r4, #8]
90002876:	2800      	cmp	r0, #0
90002878:	d1f3      	bne.n	90002862 <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000287a:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
9000287c:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002880:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002884:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002886:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000288a:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000288c:	6808      	ldr	r0, [r1, #0]
9000288e:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002892:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002896:	b17b      	cbz	r3, 900028b8 <DMA2D_XferCpltCallback+0xac>
90002898:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000289c:	f7ff bc80 	b.w	900021a0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028a0:	4b09      	ldr	r3, [pc, #36]	@ (900028c8 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
900028a2:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028a4:	4809      	ldr	r0, [pc, #36]	@ (900028cc <DMA2D_XferCpltCallback+0xc0>)
900028a6:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900028a8:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028aa:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028ae:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028b2:	f7ff fcf5 	bl	900022a0 <DMA2D_ExternalJobCompleted>
900028b6:	e7b8      	b.n	9000282a <DMA2D_XferCpltCallback+0x1e>
900028b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028bc:	f7ff bc2a 	b.w	90002114 <DMA2D_CopyBuffer>
900028c0:	24024598 	.word	0x24024598
900028c4:	90002479 	.word	0x90002479
900028c8:	24000610 	.word	0x24000610
900028cc:	24000004 	.word	0x24000004
900028d0:	2400060c 	.word	0x2400060c

900028d4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
900028d4:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028d6:	4b0c      	ldr	r3, [pc, #48]	@ (90002908 <_ZN8STM32DMAC1Ev+0x34>)
STM32DMA::STM32DMA()
900028d8:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
900028da:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
900028dc:	2500      	movs	r5, #0
900028de:	300c      	adds	r0, #12
900028e0:	2260      	movs	r2, #96	@ 0x60
900028e2:	7235      	strb	r5, [r6, #8]
900028e4:	7275      	strb	r5, [r6, #9]
900028e6:	6070      	str	r0, [r6, #4]
900028e8:	f844 3b20 	str.w	r3, [r4], #32
900028ec:	4621      	mov	r1, r4
900028ee:	f011 fe15 	bl	9001451c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
900028f2:	4621      	mov	r1, r4
900028f4:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
900028f8:	60cd      	str	r5, [r1, #12]
900028fa:	3124      	adds	r1, #36	@ 0x24
900028fc:	4299      	cmp	r1, r3
900028fe:	d1fb      	bne.n	900028f8 <_ZN8STM32DMAC1Ev+0x24>
}
90002900:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
90002902:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
90002906:	bd70      	pop	{r4, r5, r6, pc}
90002908:	9002daf0 	.word	0x9002daf0

9000290c <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
9000290c:	4a03      	ldr	r2, [pc, #12]	@ (9000291c <_ZN8touchgfx5paint8tearDownEv+0x10>)
9000290e:	6813      	ldr	r3, [r2, #0]
90002910:	07db      	lsls	r3, r3, #31
90002912:	d4fc      	bmi.n	9000290e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002914:	2323      	movs	r3, #35	@ 0x23
90002916:	6093      	str	r3, [r2, #8]
}
90002918:	4770      	bx	lr
9000291a:	bf00      	nop
9000291c:	52001000 	.word	0x52001000

90002920 <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This funciton is used when decompressing RGB images to flush
    // the currently decoded pixels in the cache to allow the DMA2D
    // to blend the pixels correcly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
90002920:	4a0b      	ldr	r2, [pc, #44]	@ (90002950 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
90002922:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002924:	03db      	lsls	r3, r3, #15
90002926:	d501      	bpl.n	9000292c <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002928:	2900      	cmp	r1, #0
9000292a:	dc00      	bgt.n	9000292e <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
9000292c:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
9000292e:	f000 031f 	and.w	r3, r0, #31
90002932:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002934:	f3bf 8f4f 	dsb	sy
90002938:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9000293a:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
9000293e:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90002940:	1a0b      	subs	r3, r1, r0
90002942:	2b00      	cmp	r3, #0
90002944:	dcf9      	bgt.n	9000293a <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
90002946:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000294a:	f3bf 8f6f 	isb	sy
9000294e:	4770      	bx	lr
90002950:	e000ed00 	.word	0xe000ed00

90002954 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90002954:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002956:	4c11      	ldr	r4, [pc, #68]	@ (9000299c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90002958:	6825      	ldr	r5, [r4, #0]
9000295a:	07ed      	lsls	r5, r5, #31
9000295c:	d4fc      	bmi.n	90002958 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
9000295e:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002960:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90002962:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002964:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002966:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000296a:	f04f 0502 	mov.w	r5, #2
9000296e:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002970:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002972:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
90002974:	d00b      	beq.n	9000298e <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002976:	490a      	ldr	r1, [pc, #40]	@ (900029a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002978:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
9000297a:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
9000297e:	4909      	ldr	r1, [pc, #36]	@ (900029a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002980:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90002982:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90002984:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90002986:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90002988:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
9000298a:	bc30      	pop	{r4, r5}
9000298c:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
9000298e:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002990:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002992:	4b05      	ldr	r3, [pc, #20]	@ (900029a8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002994:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002996:	6023      	str	r3, [r4, #0]
}
90002998:	bc30      	pop	{r4, r5}
9000299a:	4770      	bx	lr
9000299c:	52001000 	.word	0x52001000
900029a0:	00010009 	.word	0x00010009
900029a4:	00020001 	.word	0x00020001
900029a8:	00030001 	.word	0x00030001

900029ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
900029ac:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029ae:	4c10      	ldr	r4, [pc, #64]	@ (900029f0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029b0:	6825      	ldr	r5, [r4, #0]
900029b2:	07ed      	lsls	r5, r5, #31
900029b4:	d4fc      	bmi.n	900029b0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029b6:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029b8:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
900029ba:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029bc:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029be:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029c2:	f04f 0502 	mov.w	r5, #2
900029c6:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029c8:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029ca:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
900029cc:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
900029ce:	d009      	beq.n	900029e4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d0:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029d2:	4a08      	ldr	r2, [pc, #32]	@ (900029f4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029d4:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
900029d8:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029da:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
900029dc:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
900029de:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
900029e0:	bc30      	pop	{r4, r5}
900029e2:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029e4:	4a04      	ldr	r2, [pc, #16]	@ (900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029e6:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029e8:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
900029ea:	6023      	str	r3, [r4, #0]
}
900029ec:	bc30      	pop	{r4, r5}
900029ee:	4770      	bx	lr
900029f0:	52001000 	.word	0x52001000
900029f4:	00020001 	.word	0x00020001
900029f8:	ff020002 	.word	0xff020002

900029fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
900029fc:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029fe:	4c0c      	ldr	r4, [pc, #48]	@ (90002a30 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
90002a00:	6825      	ldr	r5, [r4, #0]
90002a02:	07ed      	lsls	r5, r5, #31
90002a04:	d4fc      	bmi.n	90002a00 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a06:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a08:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a0a:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a0c:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a0e:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a12:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a16:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a18:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a1a:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a1c:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a1e:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a20:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a22:	4b04      	ldr	r3, [pc, #16]	@ (90002a34 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a24:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a26:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a28:	6023      	str	r3, [r4, #0]
}
90002a2a:	bc70      	pop	{r4, r5, r6}
90002a2c:	4770      	bx	lr
90002a2e:	bf00      	nop
90002a30:	52001000 	.word	0x52001000
90002a34:	00020001 	.word	0x00020001

90002a38 <_ZN8touchgfx9TypedTextD1Ev>:
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
    {
    }
90002a38:	4770      	bx	lr
90002a3a:	bf00      	nop

90002a3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a3c:	2001      	movs	r0, #1
90002a3e:	4770      	bx	lr

90002a40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a40:	200c      	movs	r0, #12
90002a42:	4770      	bx	lr

90002a44 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a44:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a48:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a4c:	3008      	adds	r0, #8
90002a4e:	4770      	bx	lr

90002a50 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a50:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a54:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a58:	3008      	adds	r0, #8
90002a5a:	4770      	bx	lr

90002a5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a5c:	2001      	movs	r0, #1
90002a5e:	4770      	bx	lr

90002a60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a60:	f641 5044 	movw	r0, #7492	@ 0x1d44
90002a64:	4770      	bx	lr
90002a66:	bf00      	nop

90002a68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a68:	f641 5344 	movw	r3, #7492	@ 0x1d44
90002a6c:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a70:	3008      	adds	r0, #8
90002a72:	4770      	bx	lr

90002a74 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a74:	f641 5344 	movw	r3, #7492	@ 0x1d44
90002a78:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002a7c:	3008      	adds	r0, #8
90002a7e:	4770      	bx	lr

90002a80 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002a80:	2001      	movs	r0, #1
90002a82:	4770      	bx	lr

90002a84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002a84:	2010      	movs	r0, #16
90002a86:	4770      	bx	lr

90002a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a88:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a8c:	3008      	adds	r0, #8
90002a8e:	4770      	bx	lr

90002a90 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002a90:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002a94:	3008      	adds	r0, #8
90002a96:	4770      	bx	lr

90002a98 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90002a98:	b510      	push	{r4, lr}
90002a9a:	4604      	mov	r4, r0
    }
90002a9c:	2108      	movs	r1, #8
90002a9e:	f029 f85c 	bl	9002bb5a <_ZdlPvj>
90002aa2:	4620      	mov	r0, r4
90002aa4:	bd10      	pop	{r4, pc}
90002aa6:	bf00      	nop

90002aa8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoKeyboardScreenScreenNoTransition();
90002aa8:	4608      	mov	r0, r1
90002aaa:	f002 bb3b 	b.w	90005124 <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv>
90002aae:	bf00      	nop

90002ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002ab0:	4b03      	ldr	r3, [pc, #12]	@ (90002ac0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ab2:	b510      	push	{r4, lr}
90002ab4:	4604      	mov	r4, r0
90002ab6:	6003      	str	r3, [r0, #0]
90002ab8:	f010 fb7d 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002abc:	4620      	mov	r0, r4
90002abe:	bd10      	pop	{r4, pc}
90002ac0:	9002dba8 	.word	0x9002dba8

90002ac4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002ac4:	4b05      	ldr	r3, [pc, #20]	@ (90002adc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002ac6:	b510      	push	{r4, lr}
90002ac8:	4604      	mov	r4, r0
90002aca:	6003      	str	r3, [r0, #0]
90002acc:	f010 fb73 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ad0:	2114      	movs	r1, #20
90002ad2:	4620      	mov	r0, r4
90002ad4:	f029 f841 	bl	9002bb5a <_ZdlPvj>
90002ad8:	4620      	mov	r0, r4
90002ada:	bd10      	pop	{r4, pc}
90002adc:	9002dba8 	.word	0x9002dba8

90002ae0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002ae0:	4b03      	ldr	r3, [pc, #12]	@ (90002af0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002ae2:	b510      	push	{r4, lr}
90002ae4:	4604      	mov	r4, r0
90002ae6:	6003      	str	r3, [r0, #0]
90002ae8:	f010 fb65 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002aec:	4620      	mov	r0, r4
90002aee:	bd10      	pop	{r4, pc}
90002af0:	9002db74 	.word	0x9002db74

90002af4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002af4:	4b06      	ldr	r3, [pc, #24]	@ (90002b10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI18TouchpadScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002af6:	b510      	push	{r4, lr}
90002af8:	4604      	mov	r4, r0
90002afa:	6003      	str	r3, [r0, #0]
90002afc:	f010 fb5b 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b00:	f641 514c 	movw	r1, #7500	@ 0x1d4c
90002b04:	4620      	mov	r0, r4
90002b06:	f029 f828 	bl	9002bb5a <_ZdlPvj>
90002b0a:	4620      	mov	r0, r4
90002b0c:	bd10      	pop	{r4, pc}
90002b0e:	bf00      	nop
90002b10:	9002db74 	.word	0x9002db74

90002b14 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b14:	4b03      	ldr	r3, [pc, #12]	@ (90002b24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b16:	b510      	push	{r4, lr}
90002b18:	4604      	mov	r4, r0
90002b1a:	6003      	str	r3, [r0, #0]
90002b1c:	f010 fb4b 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b20:	4620      	mov	r0, r4
90002b22:	bd10      	pop	{r4, pc}
90002b24:	9002db40 	.word	0x9002db40

90002b28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b28:	4b05      	ldr	r3, [pc, #20]	@ (90002b40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002b2a:	b510      	push	{r4, lr}
90002b2c:	4604      	mov	r4, r0
90002b2e:	6003      	str	r3, [r0, #0]
90002b30:	f010 fb41 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b34:	2118      	movs	r1, #24
90002b36:	4620      	mov	r0, r4
90002b38:	f029 f80f 	bl	9002bb5a <_ZdlPvj>
90002b3c:	4620      	mov	r0, r4
90002b3e:	bd10      	pop	{r4, pc}
90002b40:	9002db40 	.word	0x9002db40

90002b44 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b44:	b510      	push	{r4, lr}
90002b46:	4604      	mov	r4, r0
90002b48:	490c      	ldr	r1, [pc, #48]	@ (90002b7c <_ZN12FrontendHeapD1Ev+0x38>)
90002b4a:	4a0d      	ldr	r2, [pc, #52]	@ (90002b80 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b4c:	f641 5078 	movw	r0, #7544	@ 0x1d78
90002b50:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002b54:	6021      	str	r1, [r4, #0]
90002b56:	4420      	add	r0, r4
90002b58:	f8c3 2d78 	str.w	r2, [r3, #3448]	@ 0xd78
90002b5c:	f010 fb2b 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b60:	4620      	mov	r0, r4
90002b62:	4b08      	ldr	r3, [pc, #32]	@ (90002b84 <_ZN12FrontendHeapD1Ev+0x40>)
90002b64:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b68:	f010 fb25 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b6c:	4620      	mov	r0, r4
90002b6e:	4b06      	ldr	r3, [pc, #24]	@ (90002b88 <_ZN12FrontendHeapD1Ev+0x44>)
90002b70:	f840 3f14 	str.w	r3, [r0, #20]!
90002b74:	f010 fb1f 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b78:	4620      	mov	r0, r4
90002b7a:	bd10      	pop	{r4, pc}
90002b7c:	9002dbdc 	.word	0x9002dbdc
90002b80:	9002dba8 	.word	0x9002dba8
90002b84:	9002db74 	.word	0x9002db74
90002b88:	9002db40 	.word	0x9002db40

90002b8c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002b8c:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002b8e:	4c0c      	ldr	r4, [pc, #48]	@ (90002bc0 <__tcf_0+0x34>)
90002b90:	490c      	ldr	r1, [pc, #48]	@ (90002bc4 <__tcf_0+0x38>)
90002b92:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002b96:	4a0c      	ldr	r2, [pc, #48]	@ (90002bc8 <__tcf_0+0x3c>)
90002b98:	480c      	ldr	r0, [pc, #48]	@ (90002bcc <__tcf_0+0x40>)
90002b9a:	6021      	str	r1, [r4, #0]
90002b9c:	f8c3 2d78 	str.w	r2, [r3, #3448]	@ 0xd78
90002ba0:	f010 fb09 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002ba4:	4620      	mov	r0, r4
90002ba6:	4b0a      	ldr	r3, [pc, #40]	@ (90002bd0 <__tcf_0+0x44>)
90002ba8:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bac:	f010 fb03 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bb0:	4620      	mov	r0, r4
90002bb2:	4b08      	ldr	r3, [pc, #32]	@ (90002bd4 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002bb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002bb8:	f840 3f14 	str.w	r3, [r0, #20]!
90002bbc:	f010 bafb 	b.w	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bc0:	24007130 	.word	0x24007130
90002bc4:	9002dbdc 	.word	0x9002dbdc
90002bc8:	9002dba8 	.word	0x9002dba8
90002bcc:	24008ea8 	.word	0x24008ea8
90002bd0:	9002db74 	.word	0x9002db74
90002bd4:	9002db40 	.word	0x9002db40

90002bd8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002bd8:	b510      	push	{r4, lr}
90002bda:	4604      	mov	r4, r0
90002bdc:	4a0f      	ldr	r2, [pc, #60]	@ (90002c1c <_ZN12FrontendHeapD0Ev+0x44>)
90002bde:	4910      	ldr	r1, [pc, #64]	@ (90002c20 <_ZN12FrontendHeapD0Ev+0x48>)
90002be0:	f641 5078 	movw	r0, #7544	@ 0x1d78
90002be4:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90002be8:	6021      	str	r1, [r4, #0]
90002bea:	4420      	add	r0, r4
90002bec:	f8c3 2d78 	str.w	r2, [r3, #3448]	@ 0xd78
90002bf0:	f010 fae1 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bf4:	4620      	mov	r0, r4
90002bf6:	4b0b      	ldr	r3, [pc, #44]	@ (90002c24 <_ZN12FrontendHeapD0Ev+0x4c>)
90002bf8:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bfc:	f010 fadb 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c00:	4b09      	ldr	r3, [pc, #36]	@ (90002c28 <_ZN12FrontendHeapD0Ev+0x50>)
90002c02:	4620      	mov	r0, r4
90002c04:	f840 3f14 	str.w	r3, [r0, #20]!
90002c08:	f010 fad5 	bl	900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c0c:	4620      	mov	r0, r4
90002c0e:	f44f 51f8 	mov.w	r1, #7936	@ 0x1f00
90002c12:	f028 ffa2 	bl	9002bb5a <_ZdlPvj>
90002c16:	4620      	mov	r0, r4
90002c18:	bd10      	pop	{r4, pc}
90002c1a:	bf00      	nop
90002c1c:	9002dba8 	.word	0x9002dba8
90002c20:	9002dbdc 	.word	0x9002dbdc
90002c24:	9002db74 	.word	0x9002db74
90002c28:	9002db40 	.word	0x9002db40

90002c2c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c30:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c32:	2400      	movs	r4, #0
90002c34:	f001 ffda 	bl	90004bec <_ZN14BitmapDatabase11getInstanceEv>
90002c38:	4605      	mov	r5, r0
90002c3a:	f001 ffdb 	bl	90004bf4 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c3e:	4623      	mov	r3, r4
90002c40:	4601      	mov	r1, r0
90002c42:	4622      	mov	r2, r4
90002c44:	4628      	mov	r0, r5
90002c46:	9400      	str	r4, [sp, #0]
90002c48:	f019 fdb6 	bl	9001c7b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c4c:	4b2a      	ldr	r3, [pc, #168]	@ (90002cf8 <touchgfx_init+0xcc>)
90002c4e:	4a2b      	ldr	r2, [pc, #172]	@ (90002cfc <touchgfx_init+0xd0>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c50:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c52:	4c2b      	ldr	r4, [pc, #172]	@ (90002d00 <touchgfx_init+0xd4>)
90002c54:	601a      	str	r2, [r3, #0]
90002c56:	f002 fd43 	bl	900056e0 <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c5a:	4b2a      	ldr	r3, [pc, #168]	@ (90002d04 <touchgfx_init+0xd8>)
90002c5c:	4a2a      	ldr	r2, [pc, #168]	@ (90002d08 <touchgfx_init+0xdc>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c5e:	482b      	ldr	r0, [pc, #172]	@ (90002d0c <touchgfx_init+0xe0>)
90002c60:	609a      	str	r2, [r3, #8]
90002c62:	f019 fd07 	bl	9001c674 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c66:	6823      	ldr	r3, [r4, #0]
90002c68:	f3bf 8f5b 	dmb	ish
90002c6c:	07db      	lsls	r3, r3, #31
90002c6e:	d505      	bpl.n	90002c7c <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c70:	4827      	ldr	r0, [pc, #156]	@ (90002d10 <touchgfx_init+0xe4>)
}
90002c72:	b002      	add	sp, #8
90002c74:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002c78:	f7fe b940 	b.w	90000efc <_ZN11TouchGFXHAL10initializeEv>
90002c7c:	4620      	mov	r0, r4
90002c7e:	f028 ff6e 	bl	9002bb5e <__cxa_guard_acquire>
90002c82:	2800      	cmp	r0, #0
90002c84:	d0f4      	beq.n	90002c70 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002c86:	4d23      	ldr	r5, [pc, #140]	@ (90002d14 <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
90002c88:	4f23      	ldr	r7, [pc, #140]	@ (90002d18 <touchgfx_init+0xec>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002c8a:	4b24      	ldr	r3, [pc, #144]	@ (90002d1c <touchgfx_init+0xf0>)
        : presenterStorage(pres),
90002c8c:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
90002c90:	f107 062c 	add.w	r6, r7, #44	@ 0x2c
          screenStorage(scr),
90002c94:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
90002c98:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002c9a:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
90002c9c:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
90002c9e:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002ca0:	f8c5 8008 	str.w	r8, [r5, #8]
90002ca4:	f010 fa88 	bl	900131b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002ca8:	4b1d      	ldr	r3, [pc, #116]	@ (90002d20 <touchgfx_init+0xf4>)
90002caa:	4640      	mov	r0, r8
90002cac:	616b      	str	r3, [r5, #20]
90002cae:	f010 fa83 	bl	900131b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cb2:	4b1c      	ldr	r3, [pc, #112]	@ (90002d24 <touchgfx_init+0xf8>)
90002cb4:	4638      	mov	r0, r7
90002cb6:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002cb8:	f010 fa7e 	bl	900131b8 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cbc:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
90002cc0:	4a19      	ldr	r2, [pc, #100]	@ (90002d28 <touchgfx_init+0xfc>)
90002cc2:	f603 508c 	addw	r0, r3, #3468	@ 0xd8c
90002cc6:	f8c3 2d78 	str.w	r2, [r3, #3448]	@ 0xd78
90002cca:	f003 fdb9 	bl	90006840 <_ZN5ModelC1Ev>
90002cce:	462a      	mov	r2, r5
90002cd0:	f107 0114 	add.w	r1, r7, #20
90002cd4:	4630      	mov	r0, r6
90002cd6:	f002 fdf9 	bl	900058cc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cda:	4630      	mov	r0, r6
90002cdc:	f002 fa22 	bl	90005124 <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv>
        static FrontendHeap instance;
90002ce0:	4812      	ldr	r0, [pc, #72]	@ (90002d2c <touchgfx_init+0x100>)
90002ce2:	f029 facf 	bl	9002c284 <atexit>
90002ce6:	4620      	mov	r0, r4
90002ce8:	f028 ff45 	bl	9002bb76 <__cxa_guard_release>
90002cec:	4808      	ldr	r0, [pc, #32]	@ (90002d10 <touchgfx_init+0xe4>)
}
90002cee:	b002      	add	sp, #8
90002cf0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002cf4:	f7fe b902 	b.w	90000efc <_ZN11TouchGFXHAL10initializeEv>
90002cf8:	240245fc 	.word	0x240245fc
90002cfc:	240062d8 	.word	0x240062d8
90002d00:	2400712c 	.word	0x2400712c
90002d04:	240062f8 	.word	0x240062f8
90002d08:	240062dc 	.word	0x240062dc
90002d0c:	24000040 	.word	0x24000040
90002d10:	24006250 	.word	0x24006250
90002d14:	24007130 	.word	0x24007130
90002d18:	24008ea8 	.word	0x24008ea8
90002d1c:	9002dbdc 	.word	0x9002dbdc
90002d20:	9002db40 	.word	0x9002db40
90002d24:	9002db74 	.word	0x9002db74
90002d28:	9002dba8 	.word	0x9002dba8
90002d2c:	90002b8d 	.word	0x90002b8d

90002d30 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d30:	4770      	bx	lr
90002d32:	bf00      	nop

90002d34 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d34:	4801      	ldr	r0, [pc, #4]	@ (90002d3c <touchgfx_taskEntry+0x8>)
90002d36:	f7fe b92f 	b.w	90000f98 <_ZN11TouchGFXHAL9taskEntryEv>
90002d3a:	bf00      	nop
90002d3c:	24006250 	.word	0x24006250

90002d40 <_GLOBAL__sub_I_touchgfx_init>:
}
90002d40:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d42:	4e27      	ldr	r6, [pc, #156]	@ (90002de0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
{
public:

    STM32TouchController() {}
90002d44:	4b27      	ldr	r3, [pc, #156]	@ (90002de4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002d46:	4c28      	ldr	r4, [pc, #160]	@ (90002de8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
90002d48:	4630      	mov	r0, r6
static LCD16bpp display;
90002d4a:	4d28      	ldr	r5, [pc, #160]	@ (90002dec <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002d4c:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d4e:	f7ff fdc1 	bl	900028d4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d52:	4628      	mov	r0, r5
90002d54:	f01e fe40 	bl	900219d8 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d58:	4825      	ldr	r0, [pc, #148]	@ (90002df0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d5a:	f017 fde5 	bl	9001a928 <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d5e:	4b25      	ldr	r3, [pc, #148]	@ (90002df4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          mcuInstrumentation(0),
90002d60:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d62:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d66:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d6a:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d6c:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d6e:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d70:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d74:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d76:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d78:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d7c:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002d80:	4c1d      	ldr	r4, [pc, #116]	@ (90002df8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d82:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002d84:	4c1d      	ldr	r4, [pc, #116]	@ (90002dfc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d86:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d88:	4c1d      	ldr	r4, [pc, #116]	@ (90002e00 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002d8a:	8020      	strh	r0, [r4, #0]
90002d8c:	4c1d      	ldr	r4, [pc, #116]	@ (90002e04 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002d8e:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d90:	4c1d      	ldr	r4, [pc, #116]	@ (90002e08 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002d92:	481e      	ldr	r0, [pc, #120]	@ (90002e0c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002d94:	8021      	strh	r1, [r4, #0]
90002d96:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002d98:	4c1d      	ldr	r4, [pc, #116]	@ (90002e10 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002d9a:	491e      	ldr	r1, [pc, #120]	@ (90002e14 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002d9c:	481e      	ldr	r0, [pc, #120]	@ (90002e18 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
          lcdRef(display),
90002d9e:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002da2:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002da6:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002daa:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002dac:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002db0:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002db4:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002db8:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002dbc:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002dc0:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002dc4:	7022      	strb	r2, [r4, #0]
90002dc6:	6019      	str	r1, [r3, #0]
90002dc8:	4914      	ldr	r1, [pc, #80]	@ (90002e1c <_GLOBAL__sub_I_touchgfx_init+0xdc>)
        : cc_consumed(0),
90002dca:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002dce:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          cc_in(0)
90002dd2:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
90002dd6:	67d9      	str	r1, [r3, #124]	@ 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002dd8:	e9c3 201d 	strd	r2, r0, [r3, #116]	@ 0x74
}
90002ddc:	bd70      	pop	{r4, r5, r6, pc}
90002dde:	bf00      	nop
90002de0:	24006384 	.word	0x24006384
90002de4:	9002d338 	.word	0x9002d338
90002de8:	24007128 	.word	0x24007128
90002dec:	240062f8 	.word	0x240062f8
90002df0:	240062dc 	.word	0x240062dc
90002df4:	24006250 	.word	0x24006250
90002df8:	01000001 	.word	0x01000001
90002dfc:	24024598 	.word	0x24024598
90002e00:	2402458a 	.word	0x2402458a
90002e04:	24024590 	.word	0x24024590
90002e08:	2402458c 	.word	0x2402458c
90002e0c:	24024592 	.word	0x24024592
90002e10:	2402458e 	.word	0x2402458e
90002e14:	9002d4c8 	.word	0x9002d4c8
90002e18:	01010000 	.word	0x01010000
90002e1c:	9002d310 	.word	0x9002d310

90002e20 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002e20:	4801      	ldr	r0, [pc, #4]	@ (90002e28 <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002e22:	f7ff bacf 	b.w	900023c4 <_ZN8STM32DMAD1Ev>
90002e26:	bf00      	nop
90002e28:	24006384 	.word	0x24006384

90002e2c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e2c:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e30:	b112      	cbz	r2, 90002e38 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e32:	6803      	ldr	r3, [r0, #0]
90002e34:	695b      	ldr	r3, [r3, #20]
90002e36:	4718      	bx	r3
        }
    }
90002e38:	4770      	bx	lr
90002e3a:	bf00      	nop

90002e3c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e3c:	2000      	movs	r0, #0
90002e3e:	4770      	bx	lr

90002e40 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e40:	8081      	strh	r1, [r0, #4]
    }
90002e42:	4770      	bx	lr

90002e44 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e44:	80c1      	strh	r1, [r0, #6]
    }
90002e46:	4770      	bx	lr

90002e48 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e48:	8101      	strh	r1, [r0, #8]
    }
90002e4a:	4770      	bx	lr

90002e4c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e4c:	8141      	strh	r1, [r0, #10]
    }
90002e4e:	4770      	bx	lr

90002e50 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e50:	4770      	bx	lr
90002e52:	bf00      	nop

90002e54 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e54:	4770      	bx	lr
90002e56:	bf00      	nop

90002e58 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e58:	4770      	bx	lr
90002e5a:	bf00      	nop

90002e5c <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e5c:	4770      	bx	lr
90002e5e:	bf00      	nop

90002e60 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e60:	4770      	bx	lr
90002e62:	bf00      	nop

90002e64 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e64:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e68:	6803      	ldr	r3, [r0, #0]
90002e6a:	eba2 020c 	sub.w	r2, r2, ip
90002e6e:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002e72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002e74:	eba1 010c 	sub.w	r1, r1, ip
90002e78:	b212      	sxth	r2, r2
90002e7a:	b209      	sxth	r1, r1
90002e7c:	4718      	bx	r3
90002e7e:	bf00      	nop

90002e80 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002e80:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e82:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002e86:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002e8a:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002e8e:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002e92:	6010      	str	r0, [r2, #0]
    }
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002e98:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e9c:	b11a      	cbz	r2, 90002ea6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002e9e:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002ea2:	b102      	cbz	r2, 90002ea6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002ea4:	6018      	str	r0, [r3, #0]
        }
    }
90002ea6:	4770      	bx	lr

90002ea8 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002ea8:	2000      	movs	r0, #0
90002eaa:	4770      	bx	lr

90002eac <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002eac:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002eae:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002eb0:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002eb2:	809a      	strh	r2, [r3, #4]
    }
90002eb4:	4770      	bx	lr
90002eb6:	bf00      	nop

90002eb8 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002eb8:	4770      	bx	lr
90002eba:	bf00      	nop

90002ebc <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002ebc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002ec0:	4770      	bx	lr
90002ec2:	bf00      	nop

90002ec4 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002ec4:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002ec8:	4770      	bx	lr
90002eca:	bf00      	nop

90002ecc <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002ecc:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002ed0:	688a      	ldr	r2, [r1, #8]
90002ed2:	f8c0 c000 	str.w	ip, [r0]
90002ed6:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002ed8:	4770      	bx	lr
90002eda:	bf00      	nop

90002edc <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002edc:	2200      	movs	r2, #0
90002ede:	6002      	str	r2, [r0, #0]
90002ee0:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002ee2:	4770      	bx	lr

90002ee4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002ee4:	2000      	movs	r0, #0
90002ee6:	4770      	bx	lr

90002ee8 <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002ee8:	7701      	strb	r1, [r0, #28]
    }
90002eea:	4770      	bx	lr

90002eec <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002eec:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002ef0:	4770      	bx	lr
90002ef2:	bf00      	nop

90002ef4 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002ef4:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002ef8:	4770      	bx	lr
90002efa:	bf00      	nop

90002efc <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002efc:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002f00:	4770      	bx	lr
90002f02:	bf00      	nop

90002f04 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002f04:	2001      	movs	r0, #1
90002f06:	4770      	bx	lr

90002f08 <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002f08:	3098      	adds	r0, #152	@ 0x98
90002f0a:	4770      	bx	lr

90002f0c <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002f0c:	308c      	adds	r0, #140	@ 0x8c
90002f0e:	4770      	bx	lr

90002f10 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002f10:	3084      	adds	r0, #132	@ 0x84
90002f12:	4770      	bx	lr

90002f14 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002f14:	4770      	bx	lr
90002f16:	bf00      	nop

90002f18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002f18:	4b03      	ldr	r3, [pc, #12]	@ (90002f28 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002f1a:	2290      	movs	r2, #144	@ 0x90
90002f1c:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002f20:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002f24:	4770      	bx	lr
90002f26:	bf00      	nop
90002f28:	e000e100 	.word	0xe000e100

90002f2c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f2c:	4a09      	ldr	r2, [pc, #36]	@ (90002f54 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f2e:	490a      	ldr	r1, [pc, #40]	@ (90002f58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f30:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f32:	480a      	ldr	r0, [pc, #40]	@ (90002f5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
90002f34:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f38:	3b01      	subs	r3, #1
90002f3a:	b29b      	uxth	r3, r3
90002f3c:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
90002f3e:	6911      	ldr	r1, [r2, #16]
90002f40:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f44:	3901      	subs	r1, #1
90002f46:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f48:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f4a:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f4c:	f043 0301 	orr.w	r3, r3, #1
90002f50:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f52:	4770      	bx	lr
90002f54:	50001000 	.word	0x50001000
90002f58:	24009032 	.word	0x24009032
90002f5c:	24009030 	.word	0x24009030

90002f60 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f60:	4b01      	ldr	r3, [pc, #4]	@ (90002f68 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f62:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002f66:	4770      	bx	lr
90002f68:	50001000 	.word	0x50001000

90002f6c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f6c:	4b02      	ldr	r3, [pc, #8]	@ (90002f78 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f6e:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002f70:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002f74:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002f76:	4770      	bx	lr
90002f78:	50001000 	.word	0x50001000

90002f7c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002f7c:	4770      	bx	lr
90002f7e:	bf00      	nop

90002f80 <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f80:	4770      	bx	lr
90002f82:	bf00      	nop

90002f84 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f84:	4770      	bx	lr
90002f86:	bf00      	nop

90002f88 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002f88:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002f8c:	2300      	movs	r3, #0
90002f8e:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002f92:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002f96:	4770      	bx	lr

90002f98 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002f98:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002f9c:	4770      	bx	lr
90002f9e:	bf00      	nop

90002fa0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002fa0:	b510      	push	{r4, lr}
90002fa2:	4604      	mov	r4, r0
90002fa4:	2130      	movs	r1, #48	@ 0x30
90002fa6:	f028 fdd8 	bl	9002bb5a <_ZdlPvj>
90002faa:	4620      	mov	r0, r4
90002fac:	bd10      	pop	{r4, pc}
90002fae:	bf00      	nop

90002fb0 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
90002fb0:	b510      	push	{r4, lr}
90002fb2:	4604      	mov	r4, r0
90002fb4:	212c      	movs	r1, #44	@ 0x2c
90002fb6:	f028 fdd0 	bl	9002bb5a <_ZdlPvj>
90002fba:	4620      	mov	r0, r4
90002fbc:	bd10      	pop	{r4, pc}
90002fbe:	bf00      	nop

90002fc0 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002fc0:	b510      	push	{r4, lr}
90002fc2:	4604      	mov	r4, r0
90002fc4:	21bc      	movs	r1, #188	@ 0xbc
90002fc6:	f028 fdc8 	bl	9002bb5a <_ZdlPvj>
90002fca:	4620      	mov	r0, r4
90002fcc:	bd10      	pop	{r4, pc}
90002fce:	bf00      	nop

90002fd0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90002fd0:	b911      	cbnz	r1, 90002fd8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90002fd2:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
90002fd6:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002fd8:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002fda:	4a03      	ldr	r2, [pc, #12]	@ (90002fe8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002fdc:	f44f 7191 	mov.w	r1, #290	@ 0x122
90002fe0:	4b02      	ldr	r3, [pc, #8]	@ (90002fec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90002fe2:	4803      	ldr	r0, [pc, #12]	@ (90002ff0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002fe4:	f029 f930 	bl	9002c248 <__assert_func>
90002fe8:	9002dbfc 	.word	0x9002dbfc
90002fec:	9002dbe8 	.word	0x9002dbe8
90002ff0:	9002dd18 	.word	0x9002dd18

90002ff4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002ff4:	b921      	cbnz	r1, 90003000 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002ff6:	6840      	ldr	r0, [r0, #4]
90002ff8:	4611      	mov	r1, r2
90002ffa:	6803      	ldr	r3, [r0, #0]
90002ffc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90002ffe:	4718      	bx	r3
        assert(handle < no_streams);
90003000:	4b03      	ldr	r3, [pc, #12]	@ (90003010 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90003002:	f44f 718e 	mov.w	r1, #284	@ 0x11c
90003006:	4a03      	ldr	r2, [pc, #12]	@ (90003014 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90003008:	4803      	ldr	r0, [pc, #12]	@ (90003018 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
9000300a:	b510      	push	{r4, lr}
        assert(handle < no_streams);
9000300c:	f029 f91c 	bl	9002c248 <__assert_func>
90003010:	9002dbe8 	.word	0x9002dbe8
90003014:	9002dd60 	.word	0x9002dd60
90003018:	9002dd18 	.word	0x9002dd18

9000301c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
9000301c:	b909      	cbnz	r1, 90003022 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000301e:	68c0      	ldr	r0, [r0, #12]
90003020:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90003022:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003024:	4a03      	ldr	r2, [pc, #12]	@ (90003034 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90003026:	f44f 718a 	mov.w	r1, #276	@ 0x114
9000302a:	4b03      	ldr	r3, [pc, #12]	@ (90003038 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
9000302c:	4803      	ldr	r0, [pc, #12]	@ (9000303c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
9000302e:	f029 f90b 	bl	9002c248 <__assert_func>
90003032:	bf00      	nop
90003034:	9002dea0 	.word	0x9002dea0
90003038:	9002dbe8 	.word	0x9002dbe8
9000303c:	9002dd18 	.word	0x9002dd18

90003040 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003040:	b921      	cbnz	r1, 9000304c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003042:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003044:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
90003046:	e9c0 3205 	strd	r3, r2, [r0, #20]
9000304a:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
9000304c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000304e:	4a03      	ldr	r2, [pc, #12]	@ (9000305c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003050:	2140      	movs	r1, #64	@ 0x40
90003052:	4b03      	ldr	r3, [pc, #12]	@ (90003060 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003054:	4803      	ldr	r0, [pc, #12]	@ (90003064 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
90003056:	f029 f8f7 	bl	9002c248 <__assert_func>
9000305a:	bf00      	nop
9000305c:	9002dfe8 	.word	0x9002dfe8
90003060:	9002dbe8 	.word	0x9002dbe8
90003064:	9002dd18 	.word	0x9002dd18

90003068 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
90003068:	b508      	push	{r3, lr}
9000306a:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
9000306c:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
90003070:	b940      	cbnz	r0, 90003084 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
90003072:	2201      	movs	r2, #1
90003074:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
90003078:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
9000307c:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
90003080:	6308      	str	r0, [r1, #48]	@ 0x30
    }
90003082:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90003084:	4b03      	ldr	r3, [pc, #12]	@ (90003094 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
90003086:	f240 116b 	movw	r1, #363	@ 0x16b
9000308a:	4a03      	ldr	r2, [pc, #12]	@ (90003098 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
9000308c:	4803      	ldr	r0, [pc, #12]	@ (9000309c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
9000308e:	f029 f8db 	bl	9002c248 <__assert_func>
90003092:	bf00      	nop
90003094:	9002e134 	.word	0x9002e134
90003098:	9002e164 	.word	0x9002e164
9000309c:	9002dd18 	.word	0x9002dd18

900030a0 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
900030a0:	f010 bb6c 	b.w	9001377c <_ZN8touchgfx3HAL10beginFrameEv>

900030a4 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
900030a4:	f010 bb76 	b.w	90013794 <_ZN8touchgfx3HAL8endFrameEv>

900030a8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900030a8:	f010 bb32 	b.w	90013710 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900030ac <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900030ac:	f010 bc93 	b.w	900139d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900030b0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900030b0:	4814      	ldr	r0, [pc, #80]	@ (90003104 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900030b2:	6943      	ldr	r3, [r0, #20]
900030b4:	03d9      	lsls	r1, r3, #15
900030b6:	d523      	bpl.n	90003100 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900030b8:	2300      	movs	r3, #0
{
900030ba:	b510      	push	{r4, lr}
900030bc:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900030c0:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900030c4:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030c8:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900030cc:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030d0:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900030d4:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030d8:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900030dc:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030de:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900030e2:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030e4:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
900030e8:	1c5a      	adds	r2, r3, #1
900030ea:	d1f8      	bne.n	900030de <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
900030ec:	f1ac 0c20 	sub.w	ip, ip, #32
900030f0:	f11c 0f20 	cmn.w	ip, #32
900030f4:	d1f0      	bne.n	900030d8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
900030f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900030fa:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
900030fe:	bd10      	pop	{r4, pc}
90003100:	4770      	bx	lr
90003102:	bf00      	nop
90003104:	e000ed00 	.word	0xe000ed00

90003108 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90003108:	b5f0      	push	{r4, r5, r6, r7, lr}
9000310a:	b083      	sub	sp, #12
        assert(handle < no_streams);
9000310c:	bb49      	cbnz	r1, 90003162 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5a>
9000310e:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003110:	6840      	ldr	r0, [r0, #4]
90003112:	461d      	mov	r5, r3
90003114:	4616      	mov	r6, r2
90003116:	6803      	ldr	r3, [r0, #0]
90003118:	691b      	ldr	r3, [r3, #16]
9000311a:	4798      	blx	r3
9000311c:	b908      	cbnz	r0, 90003122 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
9000311e:	b003      	add	sp, #12
90003120:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003122:	4f13      	ldr	r7, [pc, #76]	@ (90003170 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x68>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003124:	2101      	movs	r1, #1
90003126:	6838      	ldr	r0, [r7, #0]
90003128:	f011 f8fc 	bl	90014324 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
9000312c:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
9000312e:	4605      	mov	r5, r0
            const touchgfx::Rect& absolute = widget.getAbsoluteRect();
90003130:	4668      	mov	r0, sp
90003132:	f017 fbdf 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003136:	4b0f      	ldr	r3, [pc, #60]	@ (90003174 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003138:	6860      	ldr	r0, [r4, #4]
9000313a:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
9000313c:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
90003140:	881b      	ldrh	r3, [r3, #0]
90003142:	f9bd 2000 	ldrsh.w	r2, [sp]
90003146:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
9000314a:	6804      	ldr	r4, [r0, #0]
9000314c:	eb05 0242 	add.w	r2, r5, r2, lsl #1
90003150:	69e4      	ldr	r4, [r4, #28]
90003152:	47a0      	blx	r4
90003154:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003156:	6803      	ldr	r3, [r0, #0]
90003158:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
    }
9000315a:	b003      	add	sp, #12
9000315c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003160:	4718      	bx	r3
        assert(handle < no_streams);
90003162:	4b05      	ldr	r3, [pc, #20]	@ (90003178 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
90003164:	21e9      	movs	r1, #233	@ 0xe9
90003166:	4a05      	ldr	r2, [pc, #20]	@ (9000317c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
90003168:	4805      	ldr	r0, [pc, #20]	@ (90003180 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
9000316a:	f029 f86d 	bl	9002c248 <__assert_func>
9000316e:	bf00      	nop
90003170:	24024598 	.word	0x24024598
90003174:	24024590 	.word	0x24024590
90003178:	9002dbe8 	.word	0x9002dbe8
9000317c:	9002e27c 	.word	0x9002e27c
90003180:	9002dd18 	.word	0x9002dd18

90003184 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90003184:	4b08      	ldr	r3, [pc, #32]	@ (900031a8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
90003186:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000318a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000318e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003192:	f3bf 8f6f 	isb	sy
90003196:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
9000319a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
9000319e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031a2:	f3bf 8f6f 	isb	sy
}
900031a6:	4770      	bx	lr
900031a8:	e000e100 	.word	0xe000e100

900031ac <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031ac:	4b03      	ldr	r3, [pc, #12]	@ (900031bc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900031ae:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031b2:	609a      	str	r2, [r3, #8]
900031b4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031b8:	609a      	str	r2, [r3, #8]
}
900031ba:	4770      	bx	lr
900031bc:	e000e100 	.word	0xe000e100

900031c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900031c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900031c4:	2900      	cmp	r1, #0
900031c6:	f040 8096 	bne.w	900032f6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
900031ca:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900031ce:	4604      	mov	r4, r0
900031d0:	b933      	cbnz	r3, 900031e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
900031d2:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
900031d6:	b91b      	cbnz	r3, 900031e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
900031d8:	2501      	movs	r5, #1
    }
900031da:	4628      	mov	r0, r5
900031dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
900031e0:	4b48      	ldr	r3, [pc, #288]	@ (90003304 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
900031e2:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031e4:	6921      	ldr	r1, [r4, #16]
900031e6:	681b      	ldr	r3, [r3, #0]
900031e8:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
900031ec:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031f0:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
900031f2:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900031f6:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
900031f8:	b979      	cbnz	r1, 9000321a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031fa:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
900031fc:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
900031fe:	6961      	ldr	r1, [r4, #20]
90003200:	fb01 f303 	mul.w	r3, r1, r3
90003204:	69a1      	ldr	r1, [r4, #24]
90003206:	fb01 f202 	mul.w	r2, r1, r2
9000320a:	4293      	cmp	r3, r2
9000320c:	d824      	bhi.n	90003258 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
9000320e:	2300      	movs	r3, #0
    }
90003210:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
90003212:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
90003216:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
9000321a:	6813      	ldr	r3, [r2, #0]
9000321c:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
9000321e:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003220:	695b      	ldr	r3, [r3, #20]
90003222:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
90003224:	69e1      	ldr	r1, [r4, #28]
90003226:	bb21      	cbnz	r1, 90003272 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
90003228:	6a23      	ldr	r3, [r4, #32]
9000322a:	2b00      	cmp	r3, #0
9000322c:	d142      	bne.n	900032b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
9000322e:	4f36      	ldr	r7, [pc, #216]	@ (90003308 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003230:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
90003234:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
90003236:	2d00      	cmp	r5, #0
90003238:	d02c      	beq.n	90003294 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
9000323a:	699b      	ldr	r3, [r3, #24]
9000323c:	4630      	mov	r0, r6
9000323e:	4798      	blx	r3
90003240:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003242:	6833      	ldr	r3, [r6, #0]
90003244:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003246:	42bb      	cmp	r3, r7
90003248:	d145      	bne.n	900032d6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
9000324a:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
9000324c:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
9000324e:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003250:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
90003252:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
90003254:	60a2      	str	r2, [r4, #8]
90003256:	e7d2      	b.n	900031fe <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
90003258:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
9000325c:	b138      	cbz	r0, 9000326e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
9000325e:	1a9b      	subs	r3, r3, r2
90003260:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
90003264:	4299      	cmp	r1, r3
                    stream.skip_frames--;
90003266:	bf98      	it	ls
90003268:	f102 32ff 	addls.w	r2, r2, #4294967295
9000326c:	6222      	str	r2, [r4, #32]
            return true;
9000326e:	2301      	movs	r3, #1
90003270:	e7ce      	b.n	90003210 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
90003272:	6833      	ldr	r3, [r6, #0]
90003274:	4630      	mov	r0, r6
90003276:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90003278:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
9000327a:	6833      	ldr	r3, [r6, #0]
9000327c:	69e5      	ldr	r5, [r4, #28]
9000327e:	4630      	mov	r0, r6
90003280:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003282:	4798      	blx	r3
90003284:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
90003286:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
90003288:	bf28      	it	cs
9000328a:	2500      	movcs	r5, #0
9000328c:	4f1e      	ldr	r7, [pc, #120]	@ (90003308 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
9000328e:	bf38      	it	cc
90003290:	2501      	movcc	r5, #1
90003292:	e7d6      	b.n	90003242 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
90003294:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003296:	42ba      	cmp	r2, r7
90003298:	d124      	bne.n	900032e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
9000329a:	f8d6 8014 	ldr.w	r8, [r6, #20]
9000329e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900032a0:	4630      	mov	r0, r6
900032a2:	4798      	blx	r3
900032a4:	4580      	cmp	r8, r0
900032a6:	d219      	bcs.n	900032dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
900032a8:	6833      	ldr	r3, [r6, #0]
900032aa:	4630      	mov	r0, r6
900032ac:	699b      	ldr	r3, [r3, #24]
900032ae:	4798      	blx	r3
900032b0:	4605      	mov	r5, r0
900032b2:	e7c6      	b.n	90003242 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900032b4:	6832      	ldr	r2, [r6, #0]
900032b6:	4f14      	ldr	r7, [pc, #80]	@ (90003308 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032b8:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900032bc:	42ba      	cmp	r2, r7
900032be:	d116      	bne.n	900032ee <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900032c0:	6970      	ldr	r0, [r6, #20]
900032c2:	18c1      	adds	r1, r0, r3
900032c4:	4630      	mov	r0, r6
900032c6:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
900032c8:	6a22      	ldr	r2, [r4, #32]
900032ca:	68a3      	ldr	r3, [r4, #8]
900032cc:	4413      	add	r3, r2
                        stream.skip_frames = 0;
900032ce:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
900032d0:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
900032d2:	6222      	str	r2, [r4, #32]
900032d4:	e7ac      	b.n	90003230 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
900032d6:	4630      	mov	r0, r6
900032d8:	4798      	blx	r3
900032da:	e7b7      	b.n	9000324c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
900032dc:	2300      	movs	r3, #0
900032de:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
900032e2:	e7ae      	b.n	90003242 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032e4:	4630      	mov	r0, r6
900032e6:	4790      	blx	r2
900032e8:	6833      	ldr	r3, [r6, #0]
900032ea:	4680      	mov	r8, r0
900032ec:	e7d7      	b.n	9000329e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032ee:	4630      	mov	r0, r6
900032f0:	4790      	blx	r2
900032f2:	6a23      	ldr	r3, [r4, #32]
900032f4:	e7e5      	b.n	900032c2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
900032f6:	4b05      	ldr	r3, [pc, #20]	@ (9000330c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
900032f8:	21a9      	movs	r1, #169	@ 0xa9
900032fa:	4a05      	ldr	r2, [pc, #20]	@ (90003310 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
900032fc:	4805      	ldr	r0, [pc, #20]	@ (90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
900032fe:	f028 ffa3 	bl	9002c248 <__assert_func>
90003302:	bf00      	nop
90003304:	24024598 	.word	0x24024598
90003308:	9000101d 	.word	0x9000101d
9000330c:	9002dbe8 	.word	0x9002dbe8
90003310:	9002e3c4 	.word	0x9002e3c4
90003314:	9002dd18 	.word	0x9002dd18

90003318 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90003318:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
9000331a:	bb11      	cbnz	r1, 90003362 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
9000331c:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
9000331e:	6840      	ldr	r0, [r0, #4]
90003320:	4611      	mov	r1, r2
90003322:	461a      	mov	r2, r3
90003324:	6803      	ldr	r3, [r0, #0]
90003326:	689b      	ldr	r3, [r3, #8]
90003328:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
9000332a:	6860      	ldr	r0, [r4, #4]
9000332c:	4a10      	ldr	r2, [pc, #64]	@ (90003370 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
9000332e:	6803      	ldr	r3, [r0, #0]
90003330:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90003332:	4293      	cmp	r3, r2
90003334:	d10c      	bne.n	90003350 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
90003336:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003338:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
9000333a:	2300      	movs	r3, #0
9000333c:	4a0d      	ldr	r2, [pc, #52]	@ (90003374 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
9000333e:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003340:	60e0      	str	r0, [r4, #12]
90003342:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
90003344:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003348:	d104      	bne.n	90003354 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
9000334a:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
9000334e:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003350:	4798      	blx	r3
90003352:	e7f1      	b.n	90003338 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
90003354:	4620      	mov	r0, r4
90003356:	46ac      	mov	ip, r5
90003358:	2201      	movs	r2, #1
9000335a:	4619      	mov	r1, r3
    }
9000335c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003360:	4760      	bx	ip
        assert(handle < no_streams);
90003362:	4b05      	ldr	r3, [pc, #20]	@ (90003378 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
90003364:	214e      	movs	r1, #78	@ 0x4e
90003366:	4a05      	ldr	r2, [pc, #20]	@ (9000337c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
90003368:	4805      	ldr	r0, [pc, #20]	@ (90003380 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
9000336a:	f028 ff6d 	bl	9002c248 <__assert_func>
9000336e:	bf00      	nop
90003370:	9000101d 	.word	0x9000101d
90003374:	900033ed 	.word	0x900033ed
90003378:	9002dbe8 	.word	0x9002dbe8
9000337c:	9002e4f8 	.word	0x9002e4f8
90003380:	9002dd18 	.word	0x9002dd18

90003384 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
90003384:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003386:	bb09      	cbnz	r1, 900033cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
90003388:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
9000338a:	6840      	ldr	r0, [r0, #4]
9000338c:	4611      	mov	r1, r2
9000338e:	6803      	ldr	r3, [r0, #0]
90003390:	68db      	ldr	r3, [r3, #12]
90003392:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003394:	6860      	ldr	r0, [r4, #4]
90003396:	4a10      	ldr	r2, [pc, #64]	@ (900033d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
90003398:	6803      	ldr	r3, [r0, #0]
9000339a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000339c:	4293      	cmp	r3, r2
9000339e:	d10c      	bne.n	900033ba <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
900033a0:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900033a2:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900033a4:	2300      	movs	r3, #0
900033a6:	4a0d      	ldr	r2, [pc, #52]	@ (900033dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
900033a8:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033aa:	60e0      	str	r0, [r4, #12]
900033ac:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900033ae:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900033b2:	d104      	bne.n	900033be <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900033b4:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900033b8:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033ba:	4798      	blx	r3
900033bc:	e7f1      	b.n	900033a2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900033be:	4620      	mov	r0, r4
900033c0:	46ac      	mov	ip, r5
900033c2:	2201      	movs	r2, #1
900033c4:	4619      	mov	r1, r3
    }
900033c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
900033ca:	4760      	bx	ip
        assert(handle < no_streams);
900033cc:	4b04      	ldr	r3, [pc, #16]	@ (900033e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
900033ce:	215e      	movs	r1, #94	@ 0x5e
900033d0:	4a04      	ldr	r2, [pc, #16]	@ (900033e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
900033d2:	4805      	ldr	r0, [pc, #20]	@ (900033e8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
900033d4:	f028 ff38 	bl	9002c248 <__assert_func>
900033d8:	9000101d 	.word	0x9000101d
900033dc:	900033ed 	.word	0x900033ed
900033e0:	9002dbe8 	.word	0x9002dbe8
900033e4:	9002e664 	.word	0x9002e664
900033e8:	9002dd18 	.word	0x9002dd18

900033ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
900033ec:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033ee:	2900      	cmp	r1, #0
900033f0:	d14f      	bne.n	90003492 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
900033f2:	4604      	mov	r4, r0
        switch (cmd)
900033f4:	2a05      	cmp	r2, #5
900033f6:	d80b      	bhi.n	90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
900033f8:	e8df f002 	tbb	[pc, r2]
900033fc:	3c373311 	.word	0x3c373311
90003400:	0b03      	.short	0x0b03
            stream.isPlaying = false;
90003402:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
90003404:	2201      	movs	r2, #1
            stream.isPlaying = false;
90003406:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
9000340a:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
9000340c:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
9000340e:	6103      	str	r3, [r0, #16]
    }
90003410:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
90003412:	3b00      	subs	r3, #0
90003414:	bf18      	it	ne
90003416:	2301      	movne	r3, #1
90003418:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
9000341c:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
9000341e:	6840      	ldr	r0, [r0, #4]
90003420:	6803      	ldr	r3, [r0, #0]
90003422:	691b      	ldr	r3, [r3, #16]
90003424:	4798      	blx	r3
90003426:	2800      	cmp	r0, #0
90003428:	d0f2      	beq.n	90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
9000342a:	2300      	movs	r3, #0
                stream.isPlaying = true;
9000342c:	2101      	movs	r1, #1
                if (!stream.repeat)
9000342e:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
90003432:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
90003436:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
90003438:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
9000343a:	2a00      	cmp	r2, #0
9000343c:	d1e8      	bne.n	90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
9000343e:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003440:	4917      	ldr	r1, [pc, #92]	@ (900034a0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003442:	6823      	ldr	r3, [r4, #0]
90003444:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
90003446:	428a      	cmp	r2, r1
90003448:	d11e      	bne.n	90003488 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
9000344a:	6965      	ldr	r5, [r4, #20]
9000344c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000344e:	4620      	mov	r0, r4
90003450:	4798      	blx	r3
90003452:	4285      	cmp	r5, r0
90003454:	d1dc      	bne.n	90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
90003456:	6823      	ldr	r3, [r4, #0]
90003458:	4620      	mov	r0, r4
9000345a:	699b      	ldr	r3, [r3, #24]
    }
9000345c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003460:	4718      	bx	r3
            stream.isPlaying = false;
90003462:	2300      	movs	r3, #0
90003464:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
90003468:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
9000346a:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
9000346c:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
9000346e:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003470:	6102      	str	r2, [r0, #16]
    }
90003472:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
90003474:	2101      	movs	r1, #1
            stream.frameCount = 0;
90003476:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90003478:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
9000347a:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
9000347e:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
90003482:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
90003484:	6102      	str	r2, [r0, #16]
    }
90003486:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
90003488:	4620      	mov	r0, r4
9000348a:	4790      	blx	r2
9000348c:	6823      	ldr	r3, [r4, #0]
9000348e:	4605      	mov	r5, r0
90003490:	e7dc      	b.n	9000344c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
90003492:	4b04      	ldr	r3, [pc, #16]	@ (900034a4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
90003494:	216e      	movs	r1, #110	@ 0x6e
90003496:	4a04      	ldr	r2, [pc, #16]	@ (900034a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
90003498:	4804      	ldr	r0, [pc, #16]	@ (900034ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
9000349a:	f028 fed5 	bl	9002c248 <__assert_func>
9000349e:	bf00      	nop
900034a0:	9000101d 	.word	0x9000101d
900034a4:	9002dbe8 	.word	0x9002dbe8
900034a8:	9002e79c 	.word	0x9002e79c
900034ac:	9002dd18 	.word	0x9002dd18

900034b0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900034b0:	b538      	push	{r3, r4, r5, lr}
900034b2:	4604      	mov	r4, r0
    HAL::initialize();
900034b4:	f010 f97b 	bl	900137ae <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900034b8:	6823      	ldr	r3, [r4, #0]
900034ba:	6e5d      	ldr	r5, [r3, #100]	@ 0x64
900034bc:	f016 f906 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
900034c0:	4601      	mov	r1, r0
900034c2:	4620      	mov	r0, r4
900034c4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034c6:	6823      	ldr	r3, [r4, #0]
900034c8:	4a13      	ldr	r2, [pc, #76]	@ (90003518 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
900034ca:	f8d3 5088 	ldr.w	r5, [r3, #136]	@ 0x88
900034ce:	4295      	cmp	r5, r2
900034d0:	d116      	bne.n	90003500 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034d2:	4a12      	ldr	r2, [pc, #72]	@ (9000351c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034d4:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
900034d6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
900034da:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034de:	4810      	ldr	r0, [pc, #64]	@ (90003520 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
900034e0:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
900034e4:	4a0f      	ldr	r2, [pc, #60]	@ (90003524 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900034e6:	7005      	strb	r5, [r0, #0]
900034e8:	4293      	cmp	r3, r2
900034ea:	d110      	bne.n	9000350e <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034ec:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034ee:	4a0e      	ldr	r2, [pc, #56]	@ (90003528 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900034f0:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
900034f2:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
900034f4:	4b0d      	ldr	r3, [pc, #52]	@ (9000352c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
900034f6:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
900034f8:	4a0d      	ldr	r2, [pc, #52]	@ (90003530 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
900034fa:	6459      	str	r1, [r3, #68]	@ 0x44
900034fc:	6053      	str	r3, [r2, #4]
}
900034fe:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003500:	4a0c      	ldr	r2, [pc, #48]	@ (90003534 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
90003502:	2300      	movs	r3, #0
90003504:	4620      	mov	r0, r4
90003506:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
9000350a:	47a8      	blx	r5
9000350c:	e7f2      	b.n	900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
9000350e:	2100      	movs	r1, #0
90003510:	4620      	mov	r0, r4
90003512:	4798      	blx	r3
90003514:	e7ee      	b.n	900034f4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
90003516:	bf00      	nop
90003518:	90000f41 	.word	0x90000f41
9000351c:	d003fc00 	.word	0xd003fc00
90003520:	24024594 	.word	0x24024594
90003524:	90000d7d 	.word	0x90000d7d
90003528:	24024595 	.word	0x24024595
9000352c:	24009124 	.word	0x24009124
90003530:	240090f4 	.word	0x240090f4
90003534:	d007f800 	.word	0xd007f800

90003538 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
90003538:	4842      	ldr	r0, [pc, #264]	@ (90003644 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
{
9000353a:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
9000353c:	6804      	ldr	r4, [r0, #0]
9000353e:	f3bf 8f5b 	dmb	ish
90003542:	f014 0401 	ands.w	r4, r4, #1
90003546:	d001      	beq.n	9000354c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
90003548:	483f      	ldr	r0, [pc, #252]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000354a:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
9000354c:	f028 fb07 	bl	9002bb5e <__cxa_guard_acquire>
90003550:	2800      	cmp	r0, #0
90003552:	d0f9      	beq.n	90003548 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
90003554:	4d3c      	ldr	r5, [pc, #240]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
90003556:	4b3d      	ldr	r3, [pc, #244]	@ (9000364c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90003558:	4e3d      	ldr	r6, [pc, #244]	@ (90003650 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
9000355a:	f105 0034 	add.w	r0, r5, #52	@ 0x34
9000355e:	612c      	str	r4, [r5, #16]
90003560:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
90003564:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
90003568:	e9c5 3400 	strd	r3, r4, [r5]
9000356c:	e9c5 4402 	strd	r4, r4, [r5, #8]
90003570:	f017 fc39 	bl	9001ade6 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
90003574:	f105 0058 	add.w	r0, r5, #88	@ 0x58
90003578:	f013 f89c 	bl	900166b4 <_ZN8touchgfx12CanvasWidgetC1Ev>
9000357c:	4935      	ldr	r1, [pc, #212]	@ (90003654 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
9000357e:	4a36      	ldr	r2, [pc, #216]	@ (90003658 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
90003580:	6833      	ldr	r3, [r6, #0]
90003582:	65a9      	str	r1, [r5, #88]	@ 0x58
90003584:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90003588:	4934      	ldr	r1, [pc, #208]	@ (9000365c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
9000358a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
9000358e:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
90003592:	6029      	str	r1, [r5, #0]
90003594:	b192      	cbz	r2, 900035bc <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
90003596:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90003598:	2800      	cmp	r0, #0
9000359a:	d03f      	beq.n	9000361c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe4>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
9000359c:	6803      	ldr	r3, [r0, #0]
9000359e:	4c30      	ldr	r4, [pc, #192]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
900035a0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035a2:	42a2      	cmp	r2, r4
900035a4:	d017      	beq.n	900035d6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035a6:	4790      	blx	r2
        return auxiliaryLCD;
900035a8:	6833      	ldr	r3, [r6, #0]
900035aa:	fab0 f680 	clz	r6, r0
900035ae:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035b0:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900035b2:	2800      	cmp	r0, #0
900035b4:	d03e      	beq.n	90003634 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfc>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035b6:	6803      	ldr	r3, [r0, #0]
900035b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900035ba:	e00a      	b.n	900035d2 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900035bc:	6898      	ldr	r0, [r3, #8]
900035be:	4c28      	ldr	r4, [pc, #160]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035c0:	6802      	ldr	r2, [r0, #0]
900035c2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900035c4:	42a2      	cmp	r2, r4
900035c6:	d1ee      	bne.n	900035a6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
900035c8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900035ca:	b120      	cbz	r0, 900035d6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
900035cc:	6803      	ldr	r3, [r0, #0]
900035ce:	2601      	movs	r6, #1
900035d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035d2:	42a3      	cmp	r3, r4
900035d4:	d129      	bne.n	9000362a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf2>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
900035d6:	4923      	ldr	r1, [pc, #140]	@ (90003664 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
900035d8:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035da:	2300      	movs	r3, #0
        : AbstractPainter(),
900035dc:	2464      	movs	r4, #100	@ 0x64
900035de:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : widgetWidth(0)
900035e2:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
900035e6:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
900035ea:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
900035ee:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
900035f2:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
900035f6:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
        : AbstractPainter(),
900035fa:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
900035fe:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
90003602:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
90003606:	4a18      	ldr	r2, [pc, #96]	@ (90003668 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
90003608:	4818      	ldr	r0, [pc, #96]	@ (9000366c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
9000360a:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
9000360e:	f028 fe39 	bl	9002c284 <atexit>
90003612:	480c      	ldr	r0, [pc, #48]	@ (90003644 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10c>)
90003614:	f028 faaf 	bl	9002bb76 <__cxa_guard_release>
}
90003618:	480b      	ldr	r0, [pc, #44]	@ (90003648 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000361a:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
9000361c:	6898      	ldr	r0, [r3, #8]
9000361e:	4c10      	ldr	r4, [pc, #64]	@ (90003660 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90003620:	6803      	ldr	r3, [r0, #0]
90003622:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90003624:	42a2      	cmp	r2, r4
90003626:	d0d6      	beq.n	900035d6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003628:	e7bd      	b.n	900035a6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000362a:	4798      	blx	r3
9000362c:	2800      	cmp	r0, #0
9000362e:	bf08      	it	eq
90003630:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90003634:	2e00      	cmp	r6, #0
90003636:	d1ce      	bne.n	900035d6 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003638:	4b0d      	ldr	r3, [pc, #52]	@ (90003670 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
9000363a:	212c      	movs	r1, #44	@ 0x2c
9000363c:	4a0d      	ldr	r2, [pc, #52]	@ (90003674 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
9000363e:	480e      	ldr	r0, [pc, #56]	@ (90003678 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003640:	f028 fe02 	bl	9002c248 <__assert_func>
90003644:	24009034 	.word	0x24009034
90003648:	24009038 	.word	0x24009038
9000364c:	900300c0 	.word	0x900300c0
90003650:	24024598 	.word	0x24024598
90003654:	9002ea28 	.word	0x9002ea28
90003658:	9002ea08 	.word	0x9002ea08
9000365c:	9002eaa0 	.word	0x9002eaa0
90003660:	90002ee5 	.word	0x90002ee5
90003664:	90030074 	.word	0x90030074
90003668:	90030054 	.word	0x90030054
9000366c:	90002f15 	.word	0x90002f15
90003670:	9002e900 	.word	0x9002e900
90003674:	9002e960 	.word	0x9002e960
90003678:	9002e99c 	.word	0x9002e99c

9000367c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
9000367c:	b510      	push	{r4, lr}
        return instance;
9000367e:	4c14      	ldr	r4, [pc, #80]	@ (900036d0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
90003680:	6823      	ldr	r3, [r4, #0]
90003682:	b323      	cbz	r3, 900036ce <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90003684:	4b13      	ldr	r3, [pc, #76]	@ (900036d4 <HAL_LTDC_LineEventCallback+0x58>)
90003686:	4a14      	ldr	r2, [pc, #80]	@ (900036d8 <HAL_LTDC_LineEventCallback+0x5c>)
90003688:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9000368a:	8811      	ldrh	r1, [r2, #0]
9000368c:	428b      	cmp	r3, r1
9000368e:	d00a      	beq.n	900036a6 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
90003690:	f007 fbd8 	bl	9000ae44 <HAL_LTDC_ProgramLineEvent>
90003694:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90003696:	6803      	ldr	r3, [r0, #0]
90003698:	6a1b      	ldr	r3, [r3, #32]
9000369a:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
9000369c:	2000      	movs	r0, #0
        }
    }
9000369e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900036a2:	f7fd bb0f 	b.w	90000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900036a6:	4b0d      	ldr	r3, [pc, #52]	@ (900036dc <HAL_LTDC_LineEventCallback+0x60>)
900036a8:	8819      	ldrh	r1, [r3, #0]
900036aa:	f007 fbcb 	bl	9000ae44 <HAL_LTDC_ProgramLineEvent>
        return instance;
900036ae:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
900036b0:	f892 306a 	ldrb.w	r3, [r2, #106]	@ 0x6a
900036b4:	3301      	adds	r3, #1
900036b6:	f882 306a 	strb.w	r3, [r2, #106]	@ 0x6a
            OSWrappers::signalVSync();
900036ba:	f7fe fe5b 	bl	90002374 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900036be:	6820      	ldr	r0, [r4, #0]
900036c0:	f010 fdce 	bl	90014260 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900036c4:	2000      	movs	r0, #0
    }
900036c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900036ca:	f7fd bac7 	b.w	90000c5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900036ce:	bd10      	pop	{r4, pc}
900036d0:	24024598 	.word	0x24024598
900036d4:	50001000 	.word	0x50001000
900036d8:	24009032 	.word	0x24009032
900036dc:	24009030 	.word	0x24009030

900036e0 <_GLOBAL__sub_I_mjpegdecoder1>:
}
900036e0:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
900036e2:	480b      	ldr	r0, [pc, #44]	@ (90003710 <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
900036e4:	f7fd fe10 	bl	90001308 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
900036e8:	4c0a      	ldr	r4, [pc, #40]	@ (90003714 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
900036ea:	4b0b      	ldr	r3, [pc, #44]	@ (90003718 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
900036ec:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036ee:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
900036f2:	2101      	movs	r1, #1
900036f4:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
900036f6:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
900036f8:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
900036fc:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
90003700:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
90003702:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
90003706:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
9000370a:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
9000370e:	bd10      	pop	{r4, pc}
90003710:	24009124 	.word	0x24009124
90003714:	9002eaec 	.word	0x9002eaec
90003718:	240090f4 	.word	0x240090f4

9000371c <MX_USB_DEVICE_InitKeyboard>:
/*
 * -- Insert your external function declaration here --
 */
/* USER CODE BEGIN 1 */
void MX_USB_DEVICE_InitKeyboard(void)
{
9000371c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
9000371e:	2200      	movs	r2, #0
90003720:	4913      	ldr	r1, [pc, #76]	@ (90003770 <MX_USB_DEVICE_InitKeyboard+0x54>)
90003722:	4814      	ldr	r0, [pc, #80]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
90003724:	f00e fe24 	bl	90012370 <USBD_Init>
90003728:	b960      	cbnz	r0, 90003744 <MX_USB_DEVICE_InitKeyboard+0x28>
  {
    Error_Handler();
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID_Keyboard) != USBD_OK)
9000372a:	4913      	ldr	r1, [pc, #76]	@ (90003778 <MX_USB_DEVICE_InitKeyboard+0x5c>)
9000372c:	4811      	ldr	r0, [pc, #68]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
9000372e:	f00e fe4d 	bl	900123cc <USBD_RegisterClass>
90003732:	b978      	cbnz	r0, 90003754 <MX_USB_DEVICE_InitKeyboard+0x38>
  {
    Error_Handler();
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
90003734:	480f      	ldr	r0, [pc, #60]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
90003736:	f00e fe65 	bl	90012404 <USBD_Start>
9000373a:	b990      	cbnz	r0, 90003762 <MX_USB_DEVICE_InitKeyboard+0x46>

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */
  HAL_PWREx_EnableUSBVoltageDetector();

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
9000373c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_PWREx_EnableUSBVoltageDetector();
90003740:	f009 b814 	b.w	9000c76c <HAL_PWREx_EnableUSBVoltageDetector>
    Error_Handler();
90003744:	f000 fee8 	bl	90004518 <Error_Handler>
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID_Keyboard) != USBD_OK)
90003748:	490b      	ldr	r1, [pc, #44]	@ (90003778 <MX_USB_DEVICE_InitKeyboard+0x5c>)
9000374a:	480a      	ldr	r0, [pc, #40]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
9000374c:	f00e fe3e 	bl	900123cc <USBD_RegisterClass>
90003750:	2800      	cmp	r0, #0
90003752:	d0ef      	beq.n	90003734 <MX_USB_DEVICE_InitKeyboard+0x18>
    Error_Handler();
90003754:	f000 fee0 	bl	90004518 <Error_Handler>
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
90003758:	4806      	ldr	r0, [pc, #24]	@ (90003774 <MX_USB_DEVICE_InitKeyboard+0x58>)
9000375a:	f00e fe53 	bl	90012404 <USBD_Start>
9000375e:	2800      	cmp	r0, #0
90003760:	d0ec      	beq.n	9000373c <MX_USB_DEVICE_InitKeyboard+0x20>
    Error_Handler();
90003762:	f000 fed9 	bl	90004518 <Error_Handler>
}
90003766:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_PWREx_EnableUSBVoltageDetector();
9000376a:	f008 bfff 	b.w	9000c76c <HAL_PWREx_EnableUSBVoltageDetector>
9000376e:	bf00      	nop
90003770:	24000078 	.word	0x24000078
90003774:	2400916c 	.word	0x2400916c
90003778:	24000270 	.word	0x24000270

9000377c <MX_USB_DEVICE_InitMouse>:

void MX_USB_DEVICE_InitMouse(void)
{
9000377c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
9000377e:	2200      	movs	r2, #0
90003780:	4913      	ldr	r1, [pc, #76]	@ (900037d0 <MX_USB_DEVICE_InitMouse+0x54>)
90003782:	4814      	ldr	r0, [pc, #80]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
90003784:	f00e fdf4 	bl	90012370 <USBD_Init>
90003788:	b960      	cbnz	r0, 900037a4 <MX_USB_DEVICE_InitMouse+0x28>
  {
    Error_Handler();
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID_Mouse) != USBD_OK)
9000378a:	4913      	ldr	r1, [pc, #76]	@ (900037d8 <MX_USB_DEVICE_InitMouse+0x5c>)
9000378c:	4811      	ldr	r0, [pc, #68]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
9000378e:	f00e fe1d 	bl	900123cc <USBD_RegisterClass>
90003792:	b978      	cbnz	r0, 900037b4 <MX_USB_DEVICE_InitMouse+0x38>
  {
    Error_Handler();
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
90003794:	480f      	ldr	r0, [pc, #60]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
90003796:	f00e fe35 	bl	90012404 <USBD_Start>
9000379a:	b990      	cbnz	r0, 900037c2 <MX_USB_DEVICE_InitMouse+0x46>

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */
  HAL_PWREx_EnableUSBVoltageDetector();

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
9000379c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_PWREx_EnableUSBVoltageDetector();
900037a0:	f008 bfe4 	b.w	9000c76c <HAL_PWREx_EnableUSBVoltageDetector>
    Error_Handler();
900037a4:	f000 feb8 	bl	90004518 <Error_Handler>
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_HID_Mouse) != USBD_OK)
900037a8:	490b      	ldr	r1, [pc, #44]	@ (900037d8 <MX_USB_DEVICE_InitMouse+0x5c>)
900037aa:	480a      	ldr	r0, [pc, #40]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
900037ac:	f00e fe0e 	bl	900123cc <USBD_RegisterClass>
900037b0:	2800      	cmp	r0, #0
900037b2:	d0ef      	beq.n	90003794 <MX_USB_DEVICE_InitMouse+0x18>
    Error_Handler();
900037b4:	f000 feb0 	bl	90004518 <Error_Handler>
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
900037b8:	4806      	ldr	r0, [pc, #24]	@ (900037d4 <MX_USB_DEVICE_InitMouse+0x58>)
900037ba:	f00e fe23 	bl	90012404 <USBD_Start>
900037be:	2800      	cmp	r0, #0
900037c0:	d0ec      	beq.n	9000379c <MX_USB_DEVICE_InitMouse+0x20>
    Error_Handler();
900037c2:	f000 fea9 	bl	90004518 <Error_Handler>
}
900037c6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_PWREx_EnableUSBVoltageDetector();
900037ca:	f008 bfcf 	b.w	9000c76c <HAL_PWREx_EnableUSBVoltageDetector>
900037ce:	bf00      	nop
900037d0:	24000078 	.word	0x24000078
900037d4:	2400916c 	.word	0x2400916c
900037d8:	24000238 	.word	0x24000238

900037dc <MX_USB_DEVICE_Deinit>:

void MX_USB_DEVICE_Deinit(void)
{
900037dc:	b508      	push	{r3, lr}
	if(USBD_Stop(&hUsbDeviceFS) != USBD_OK) {
900037de:	480c      	ldr	r0, [pc, #48]	@ (90003810 <MX_USB_DEVICE_Deinit+0x34>)
900037e0:	f00e fe12 	bl	90012408 <USBD_Stop>
900037e4:	b938      	cbnz	r0, 900037f6 <MX_USB_DEVICE_Deinit+0x1a>
		Error_Handler();
	}
	if(USBD_DeInit(&hUsbDeviceFS) != USBD_OK) {
900037e6:	480a      	ldr	r0, [pc, #40]	@ (90003810 <MX_USB_DEVICE_Deinit+0x34>)
900037e8:	f00e fdd6 	bl	90012398 <USBD_DeInit>
900037ec:	b950      	cbnz	r0, 90003804 <MX_USB_DEVICE_Deinit+0x28>
		Error_Handler();
	}

	HAL_PWREx_DisableUSBVoltageDetector();
}
900037ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	HAL_PWREx_DisableUSBVoltageDetector();
900037f2:	f008 bfc3 	b.w	9000c77c <HAL_PWREx_DisableUSBVoltageDetector>
		Error_Handler();
900037f6:	f000 fe8f 	bl	90004518 <Error_Handler>
	if(USBD_DeInit(&hUsbDeviceFS) != USBD_OK) {
900037fa:	4805      	ldr	r0, [pc, #20]	@ (90003810 <MX_USB_DEVICE_Deinit+0x34>)
900037fc:	f00e fdcc 	bl	90012398 <USBD_DeInit>
90003800:	2800      	cmp	r0, #0
90003802:	d0f4      	beq.n	900037ee <MX_USB_DEVICE_Deinit+0x12>
		Error_Handler();
90003804:	f000 fe88 	bl	90004518 <Error_Handler>
}
90003808:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
	HAL_PWREx_DisableUSBVoltageDetector();
9000380c:	f008 bfb6 	b.w	9000c77c <HAL_PWREx_DisableUSBVoltageDetector>
90003810:	2400916c 	.word	0x2400916c

90003814 <SendKeyboardEvent>:

void SendKeyboardEvent(keyboardEvent_t keyboardEvent) {
90003814:	b500      	push	{lr}
90003816:	b083      	sub	sp, #12
	USBD_HID_SendReport(&hUsbDeviceFS, (uint8_t*) &keyboardEvent, sizeof(keyboardEvent_t));
90003818:	2208      	movs	r2, #8
void SendKeyboardEvent(keyboardEvent_t keyboardEvent) {
9000381a:	466b      	mov	r3, sp
9000381c:	e883 0003 	stmia.w	r3, {r0, r1}
	USBD_HID_SendReport(&hUsbDeviceFS, (uint8_t*) &keyboardEvent, sizeof(keyboardEvent_t));
90003820:	4619      	mov	r1, r3
90003822:	4803      	ldr	r0, [pc, #12]	@ (90003830 <SendKeyboardEvent+0x1c>)
90003824:	f00f fc4c 	bl	900130c0 <USBD_HID_SendReport>
}
90003828:	b003      	add	sp, #12
9000382a:	f85d fb04 	ldr.w	pc, [sp], #4
9000382e:	bf00      	nop
90003830:	2400916c 	.word	0x2400916c

90003834 <SendMouseEvent>:

void SendMouseEvent(mouseEvent_t mouseEvent) {
90003834:	b500      	push	{lr}
90003836:	b083      	sub	sp, #12
	USBD_HID_SendReport(&hUsbDeviceFS, (uint8_t*) &mouseEvent, sizeof(mouseEvent_t));
90003838:	2205      	movs	r2, #5
void SendMouseEvent(mouseEvent_t mouseEvent) {
9000383a:	466b      	mov	r3, sp
9000383c:	e883 0003 	stmia.w	r3, {r0, r1}
	USBD_HID_SendReport(&hUsbDeviceFS, (uint8_t*) &mouseEvent, sizeof(mouseEvent_t));
90003840:	4619      	mov	r1, r3
90003842:	4803      	ldr	r0, [pc, #12]	@ (90003850 <SendMouseEvent+0x1c>)
90003844:	f00f fc3c 	bl	900130c0 <USBD_HID_SendReport>
}
90003848:	b003      	add	sp, #12
9000384a:	f85d fb04 	ldr.w	pc, [sp], #4
9000384e:	bf00      	nop
90003850:	2400916c 	.word	0x2400916c

90003854 <USBD_FS_DeviceDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
90003854:	2312      	movs	r3, #18
  return USBD_FS_DeviceDesc;
}
90003856:	4801      	ldr	r0, [pc, #4]	@ (9000385c <USBD_FS_DeviceDescriptor+0x8>)
  *length = sizeof(USBD_FS_DeviceDesc);
90003858:	800b      	strh	r3, [r1, #0]
}
9000385a:	4770      	bx	lr
9000385c:	24000064 	.word	0x24000064

90003860 <USBD_FS_LangIDStrDescriptor>:
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
90003860:	2304      	movs	r3, #4
  return USBD_LangIDDesc;
}
90003862:	4801      	ldr	r0, [pc, #4]	@ (90003868 <USBD_FS_LangIDStrDescriptor+0x8>)
  *length = sizeof(USBD_LangIDDesc);
90003864:	800b      	strh	r3, [r1, #0]
}
90003866:	4770      	bx	lr
90003868:	24000060 	.word	0x24000060

9000386c <USBD_FS_ManufacturerStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
9000386c:	b510      	push	{r4, lr}
  UNUSED(speed);
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
9000386e:	4c04      	ldr	r4, [pc, #16]	@ (90003880 <USBD_FS_ManufacturerStrDescriptor+0x14>)
{
90003870:	460a      	mov	r2, r1
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
90003872:	4804      	ldr	r0, [pc, #16]	@ (90003884 <USBD_FS_ManufacturerStrDescriptor+0x18>)
90003874:	4621      	mov	r1, r4
90003876:	f00f fa2b 	bl	90012cd0 <USBD_GetString>
  return USBD_StrDesc;
}
9000387a:	4620      	mov	r0, r4
9000387c:	bd10      	pop	{r4, pc}
9000387e:	bf00      	nop
90003880:	24009448 	.word	0x24009448
90003884:	9002eb24 	.word	0x9002eb24

90003888 <USBD_FS_ProductStrDescriptor>:
{
90003888:	b510      	push	{r4, lr}
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
9000388a:	4c04      	ldr	r4, [pc, #16]	@ (9000389c <USBD_FS_ProductStrDescriptor+0x14>)
{
9000388c:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
9000388e:	4804      	ldr	r0, [pc, #16]	@ (900038a0 <USBD_FS_ProductStrDescriptor+0x18>)
90003890:	4621      	mov	r1, r4
90003892:	f00f fa1d 	bl	90012cd0 <USBD_GetString>
}
90003896:	4620      	mov	r0, r4
90003898:	bd10      	pop	{r4, pc}
9000389a:	bf00      	nop
9000389c:	24009448 	.word	0x24009448
900038a0:	9002eb38 	.word	0x9002eb38

900038a4 <USBD_FS_ConfigStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
900038a4:	b510      	push	{r4, lr}
  if(speed == USBD_SPEED_HIGH)
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
900038a6:	4c04      	ldr	r4, [pc, #16]	@ (900038b8 <USBD_FS_ConfigStrDescriptor+0x14>)
{
900038a8:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
900038aa:	4804      	ldr	r0, [pc, #16]	@ (900038bc <USBD_FS_ConfigStrDescriptor+0x18>)
900038ac:	4621      	mov	r1, r4
900038ae:	f00f fa0f 	bl	90012cd0 <USBD_GetString>
  else
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
  }
  return USBD_StrDesc;
}
900038b2:	4620      	mov	r0, r4
900038b4:	bd10      	pop	{r4, pc}
900038b6:	bf00      	nop
900038b8:	24009448 	.word	0x24009448
900038bc:	9002eb50 	.word	0x9002eb50

900038c0 <USBD_FS_InterfaceStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
900038c0:	b510      	push	{r4, lr}
  if(speed == 0)
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
900038c2:	4c04      	ldr	r4, [pc, #16]	@ (900038d4 <USBD_FS_InterfaceStrDescriptor+0x14>)
{
900038c4:	460a      	mov	r2, r1
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
900038c6:	4804      	ldr	r0, [pc, #16]	@ (900038d8 <USBD_FS_InterfaceStrDescriptor+0x18>)
900038c8:	4621      	mov	r1, r4
900038ca:	f00f fa01 	bl	90012cd0 <USBD_GetString>
  else
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
  }
  return USBD_StrDesc;
}
900038ce:	4620      	mov	r0, r4
900038d0:	bd10      	pop	{r4, pc}
900038d2:	bf00      	nop
900038d4:	24009448 	.word	0x24009448
900038d8:	9002eb5c 	.word	0x9002eb5c

900038dc <USBD_FS_SerialStrDescriptor>:
{
  uint32_t deviceserial0;
  uint32_t deviceserial1;
  uint32_t deviceserial2;

  deviceserial0 = *(uint32_t *) DEVICE_ID1;
900038dc:	4a52      	ldr	r2, [pc, #328]	@ (90003a28 <USBD_FS_SerialStrDescriptor+0x14c>)
  *length = USB_SIZ_STRING_SERIAL;
900038de:	f04f 0c1a 	mov.w	ip, #26
  deviceserial0 = *(uint32_t *) DEVICE_ID1;
900038e2:	f8d2 3800 	ldr.w	r3, [r2, #2048]	@ 0x800
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
  deviceserial2 = *(uint32_t *) DEVICE_ID3;

  deviceserial0 += deviceserial2;
900038e6:	f8d2 0808 	ldr.w	r0, [r2, #2056]	@ 0x808
  *length = USB_SIZ_STRING_SERIAL;
900038ea:	f8a1 c000 	strh.w	ip, [r1]

  if (deviceserial0 != 0)
900038ee:	181b      	adds	r3, r3, r0
900038f0:	d101      	bne.n	900038f6 <USBD_FS_SerialStrDescriptor+0x1a>
}
900038f2:	484e      	ldr	r0, [pc, #312]	@ (90003a2c <USBD_FS_SerialStrDescriptor+0x150>)
900038f4:	4770      	bx	lr
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
900038f6:	f8d2 1804 	ldr.w	r1, [r2, #2052]	@ 0x804

  for (idx = 0; idx < len; idx++)
  {
    if (((value >> 28)) < 0xA)
    {
      pbuf[2 * idx] = (value >> 28) + '0';
900038fa:	0f18      	lsrs	r0, r3, #28
900038fc:	4a4b      	ldr	r2, [pc, #300]	@ (90003a2c <USBD_FS_SerialStrDescriptor+0x150>)
    if (((value >> 28)) < 0xA)
900038fe:	f1b3 4f20 	cmp.w	r3, #2684354560	@ 0xa0000000
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
    }

    value = value << 4;

    pbuf[2 * idx + 1] = 0;
90003902:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003906:	bf2c      	ite	cs
90003908:	3037      	addcs	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
9000390a:	3030      	addcc	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
9000390c:	f882 c003 	strb.w	ip, [r2, #3]
    if (((value >> 28)) < 0xA)
90003910:	f3c3 6c03 	ubfx	ip, r3, #24, #4
      pbuf[2 * idx] = (value >> 28) + '0';
90003914:	7090      	strb	r0, [r2, #2]
    if (((value >> 28)) < 0xA)
90003916:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
9000391a:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
9000391c:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003920:	bf8c      	ite	hi
90003922:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003924:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
90003926:	f882 c005 	strb.w	ip, [r2, #5]
    if (((value >> 28)) < 0xA)
9000392a:	f3c3 5c03 	ubfx	ip, r3, #20, #4
      pbuf[2 * idx] = (value >> 28) + '0';
9000392e:	7110      	strb	r0, [r2, #4]
    if (((value >> 28)) < 0xA)
90003930:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
90003934:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
90003936:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
9000393a:	bf8c      	ite	hi
9000393c:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
9000393e:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
90003940:	f882 c007 	strb.w	ip, [r2, #7]
    if (((value >> 28)) < 0xA)
90003944:	f3c3 4c03 	ubfx	ip, r3, #16, #4
      pbuf[2 * idx] = (value >> 28) + '0';
90003948:	7190      	strb	r0, [r2, #6]
    if (((value >> 28)) < 0xA)
9000394a:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
9000394e:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
90003950:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003954:	bf8c      	ite	hi
90003956:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003958:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
9000395a:	f882 c009 	strb.w	ip, [r2, #9]
    if (((value >> 28)) < 0xA)
9000395e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
      pbuf[2 * idx] = (value >> 28) + '0';
90003962:	7210      	strb	r0, [r2, #8]
    if (((value >> 28)) < 0xA)
90003964:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
90003968:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
9000396a:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
9000396e:	bf8c      	ite	hi
90003970:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003972:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
90003974:	f882 c00b 	strb.w	ip, [r2, #11]
    if (((value >> 28)) < 0xA)
90003978:	f3c3 2c03 	ubfx	ip, r3, #8, #4
      pbuf[2 * idx] = (value >> 28) + '0';
9000397c:	7290      	strb	r0, [r2, #10]
    if (((value >> 28)) < 0xA)
9000397e:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
90003982:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
90003984:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003988:	bf8c      	ite	hi
9000398a:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
9000398c:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
9000398e:	f882 c00d 	strb.w	ip, [r2, #13]
    if (((value >> 28)) < 0xA)
90003992:	f3c3 1c03 	ubfx	ip, r3, #4, #4
      pbuf[2 * idx] = (value >> 28) + '0';
90003996:	7310      	strb	r0, [r2, #12]
    if (((value >> 28)) < 0xA)
90003998:	f1bc 0f09 	cmp.w	ip, #9
      pbuf[2 * idx] = (value >> 28) + '0';
9000399c:	4660      	mov	r0, ip
    pbuf[2 * idx + 1] = 0;
9000399e:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
900039a2:	bf8c      	ite	hi
900039a4:	3037      	addhi	r0, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
900039a6:	3030      	addls	r0, #48	@ 0x30
    pbuf[2 * idx + 1] = 0;
900039a8:	f882 c00f 	strb.w	ip, [r2, #15]
900039ac:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + '0';
900039b0:	7390      	strb	r0, [r2, #14]
    if (((value >> 28)) < 0xA)
900039b2:	f003 000f 	and.w	r0, r3, #15
    pbuf[2 * idx + 1] = 0;
900039b6:	f882 c013 	strb.w	ip, [r2, #19]
900039ba:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + '0';
900039be:	4603      	mov	r3, r0
    if (((value >> 28)) < 0xA)
900039c0:	2809      	cmp	r0, #9
    pbuf[2 * idx + 1] = 0;
900039c2:	f04f 0000 	mov.w	r0, #0
900039c6:	f882 c015 	strb.w	ip, [r2, #21]
      pbuf[2 * idx] = (value >> 28) + '0';
900039ca:	bf94      	ite	ls
900039cc:	3330      	addls	r3, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
900039ce:	3337      	addhi	r3, #55	@ 0x37
    if (((value >> 28)) < 0xA)
900039d0:	f1b1 4f20 	cmp.w	r1, #2684354560	@ 0xa0000000
    pbuf[2 * idx + 1] = 0;
900039d4:	7450      	strb	r0, [r2, #17]
      pbuf[2 * idx] = (value >> 28) + '0';
900039d6:	7413      	strb	r3, [r2, #16]
900039d8:	ea4f 7311 	mov.w	r3, r1, lsr #28
    if (((value >> 28)) < 0xA)
900039dc:	f3c1 6003 	ubfx	r0, r1, #24, #4
    pbuf[2 * idx + 1] = 0;
900039e0:	f04f 0c00 	mov.w	ip, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
900039e4:	bf2c      	ite	cs
900039e6:	3337      	addcs	r3, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
900039e8:	3330      	addcc	r3, #48	@ 0x30
    if (((value >> 28)) < 0xA)
900039ea:	2809      	cmp	r0, #9
    pbuf[2 * idx + 1] = 0;
900039ec:	f882 c017 	strb.w	ip, [r2, #23]
      pbuf[2 * idx] = (value >> 28) + '0';
900039f0:	7493      	strb	r3, [r2, #18]
900039f2:	4603      	mov	r3, r0
    if (((value >> 28)) < 0xA)
900039f4:	f3c1 5003 	ubfx	r0, r1, #20, #4
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
900039f8:	bf8c      	ite	hi
900039fa:	3337      	addhi	r3, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
900039fc:	3330      	addls	r3, #48	@ 0x30
    if (((value >> 28)) < 0xA)
900039fe:	2809      	cmp	r0, #9
      pbuf[2 * idx] = (value >> 28) + '0';
90003a00:	7513      	strb	r3, [r2, #20]
90003a02:	4603      	mov	r3, r0
    if (((value >> 28)) < 0xA)
90003a04:	f3c1 4003 	ubfx	r0, r1, #16, #4
    pbuf[2 * idx + 1] = 0;
90003a08:	f04f 0100 	mov.w	r1, #0
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003a0c:	bf8c      	ite	hi
90003a0e:	3337      	addhi	r3, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003a10:	3330      	addls	r3, #48	@ 0x30
    if (((value >> 28)) < 0xA)
90003a12:	2809      	cmp	r0, #9
    pbuf[2 * idx + 1] = 0;
90003a14:	7651      	strb	r1, [r2, #25]
      pbuf[2 * idx] = (value >> 28) + '0';
90003a16:	7593      	strb	r3, [r2, #22]
90003a18:	4603      	mov	r3, r0
}
90003a1a:	4804      	ldr	r0, [pc, #16]	@ (90003a2c <USBD_FS_SerialStrDescriptor+0x150>)
      pbuf[2 * idx] = (value >> 28) + '0';
90003a1c:	bf94      	ite	ls
90003a1e:	3330      	addls	r3, #48	@ 0x30
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
90003a20:	3337      	addhi	r3, #55	@ 0x37
      pbuf[2 * idx] = (value >> 28) + '0';
90003a22:	7613      	strb	r3, [r2, #24]
}
90003a24:	4770      	bx	lr
90003a26:	bf00      	nop
90003a28:	1ff1e000 	.word	0x1ff1e000
90003a2c:	24000044 	.word	0x24000044

90003a30 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
90003a30:	b510      	push	{r4, lr}
90003a32:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a34:	2100      	movs	r1, #0
{
90003a36:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003a38:	22c0      	movs	r2, #192	@ 0xc0
90003a3a:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003a3c:	9106      	str	r1, [sp, #24]
90003a3e:	e9cd 1102 	strd	r1, r1, [sp, #8]
90003a42:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003a46:	f028 fe9b 	bl	9002c780 <memset>
  if(pcdHandle->Instance==USB_OTG_FS)
90003a4a:	4b27      	ldr	r3, [pc, #156]	@ (90003ae8 <HAL_PCD_MspInit+0xb8>)
90003a4c:	6822      	ldr	r2, [r4, #0]
90003a4e:	429a      	cmp	r2, r3
90003a50:	d001      	beq.n	90003a56 <HAL_PCD_MspInit+0x26>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }
}
90003a52:	b038      	add	sp, #224	@ 0xe0
90003a54:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USB;
90003a56:	ed9f 7b20 	vldr	d7, [pc, #128]	@ 90003ad8 <HAL_PCD_MspInit+0xa8>
    PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
90003a5a:	f44f 1340 	mov.w	r3, #3145728	@ 0x300000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003a5e:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USB;
90003a60:	ed8d 7b08 	vstr	d7, [sp, #32]
    PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
90003a64:	932a      	str	r3, [sp, #168]	@ 0xa8
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003a66:	f009 fd8d 	bl	9000d584 <HAL_RCCEx_PeriphCLKConfig>
90003a6a:	bb90      	cbnz	r0, 90003ad2 <HAL_PCD_MspInit+0xa2>
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a6c:	4c1f      	ldr	r4, [pc, #124]	@ (90003aec <HAL_PCD_MspInit+0xbc>)
    HAL_PWREx_EnableUSBVoltageDetector();
90003a6e:	f008 fe7d 	bl	9000c76c <HAL_PWREx_EnableUSBVoltageDetector>
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG1_FS;
90003a72:	220a      	movs	r2, #10
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003a74:	a902      	add	r1, sp, #8
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a76:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003a7a:	481d      	ldr	r0, [pc, #116]	@ (90003af0 <HAL_PCD_MspInit+0xc0>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a7c:	f043 0301 	orr.w	r3, r3, #1
90003a80:	f8c4 30e0 	str.w	r3, [r4, #224]	@ 0xe0
90003a84:	f8d4 30e0 	ldr.w	r3, [r4, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG1_FS;
90003a88:	9206      	str	r2, [sp, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_11;
90003a8a:	2200      	movs	r2, #0
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a8c:	f003 0301 	and.w	r3, r3, #1
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_11;
90003a90:	ed9f 7b13 	vldr	d7, [pc, #76]	@ 90003ae0 <HAL_PCD_MspInit+0xb0>
    __HAL_RCC_GPIOA_CLK_ENABLE();
90003a94:	9300      	str	r3, [sp, #0]
90003a96:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_11;
90003a98:	2300      	movs	r3, #0
90003a9a:	ed8d 7b02 	vstr	d7, [sp, #8]
90003a9e:	e9cd 2304 	strd	r2, r3, [sp, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
90003aa2:	f004 fcbd 	bl	90008420 <HAL_GPIO_Init>
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
90003aa6:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
90003aaa:	2200      	movs	r2, #0
90003aac:	2105      	movs	r1, #5
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
90003aae:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
90003ab2:	2065      	movs	r0, #101	@ 0x65
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
90003ab4:	f8c4 30d8 	str.w	r3, [r4, #216]	@ 0xd8
90003ab8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	@ 0xd8
90003abc:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
90003ac0:	9301      	str	r3, [sp, #4]
90003ac2:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(OTG_FS_IRQn, 5, 0);
90003ac4:	f004 fa4a 	bl	90007f5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OTG_FS_IRQn);
90003ac8:	2065      	movs	r0, #101	@ 0x65
90003aca:	f004 fa83 	bl	90007fd4 <HAL_NVIC_EnableIRQ>
}
90003ace:	b038      	add	sp, #224	@ 0xe0
90003ad0:	bd10      	pop	{r4, pc}
      Error_Handler();
90003ad2:	f000 fd21 	bl	90004518 <Error_Handler>
90003ad6:	e7c9      	b.n	90003a6c <HAL_PCD_MspInit+0x3c>
90003ad8:	00040000 	.word	0x00040000
90003adc:	00000000 	.word	0x00000000
90003ae0:	00001800 	.word	0x00001800
90003ae4:	00000002 	.word	0x00000002
90003ae8:	40080000 	.word	0x40080000
90003aec:	58024400 	.word	0x58024400
90003af0:	58020000 	.word	0x58020000

90003af4 <HAL_PCD_MspDeInit>:

void HAL_PCD_MspDeInit(PCD_HandleTypeDef* pcdHandle)
{
  if(pcdHandle->Instance==USB_OTG_FS)
90003af4:	6802      	ldr	r2, [r0, #0]
{
90003af6:	b508      	push	{r3, lr}
  if(pcdHandle->Instance==USB_OTG_FS)
90003af8:	4b0a      	ldr	r3, [pc, #40]	@ (90003b24 <HAL_PCD_MspDeInit+0x30>)
90003afa:	429a      	cmp	r2, r3
90003afc:	d000      	beq.n	90003b00 <HAL_PCD_MspDeInit+0xc>

  /* USER CODE BEGIN USB_OTG_FS_MspDeInit 1 */

  /* USER CODE END USB_OTG_FS_MspDeInit 1 */
  }
}
90003afe:	bd08      	pop	{r3, pc}
    __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
90003b00:	4a09      	ldr	r2, [pc, #36]	@ (90003b28 <HAL_PCD_MspDeInit+0x34>)
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_12|GPIO_PIN_11);
90003b02:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
90003b06:	4809      	ldr	r0, [pc, #36]	@ (90003b2c <HAL_PCD_MspDeInit+0x38>)
    __HAL_RCC_USB_OTG_FS_CLK_DISABLE();
90003b08:	f8d2 30d8 	ldr.w	r3, [r2, #216]	@ 0xd8
90003b0c:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
90003b10:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_12|GPIO_PIN_11);
90003b14:	f004 fdc6 	bl	900086a4 <HAL_GPIO_DeInit>
    HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
90003b18:	2065      	movs	r0, #101	@ 0x65
}
90003b1a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_NVIC_DisableIRQ(OTG_FS_IRQn);
90003b1e:	f004 ba67 	b.w	90007ff0 <HAL_NVIC_DisableIRQ>
90003b22:	bf00      	nop
90003b24:	40080000 	.word	0x40080000
90003b28:	58024400 	.word	0x58024400
90003b2c:	58020000 	.word	0x58020000

90003b30 <HAL_PCD_SetupStageCallback>:
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
90003b30:	f200 419c 	addw	r1, r0, #1180	@ 0x49c
90003b34:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003b38:	f00e bc86 	b.w	90012448 <USBD_LL_SetupStage>

90003b3c <HAL_PCD_DataOutStageCallback>:
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
90003b3c:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
90003b40:	eb00 0383 	add.w	r3, r0, r3, lsl #2
90003b44:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003b48:	f8d3 2260 	ldr.w	r2, [r3, #608]	@ 0x260
90003b4c:	f00e bcac 	b.w	900124a8 <USBD_LL_DataOutStage>

90003b50 <HAL_PCD_DataInStageCallback>:
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
90003b50:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
90003b54:	eb00 0383 	add.w	r3, r0, r3, lsl #2
90003b58:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003b5c:	6a1a      	ldr	r2, [r3, #32]
90003b5e:	f00e bcdd 	b.w	9001251c <USBD_LL_DataInStage>
90003b62:	bf00      	nop

90003b64 <HAL_PCD_SOFCallback>:
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
90003b64:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003b68:	f00e bd86 	b.w	90012678 <USBD_LL_SOF>

90003b6c <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
90003b6c:	b510      	push	{r4, lr}
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;

  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
90003b6e:	79c1      	ldrb	r1, [r0, #7]
{
90003b70:	4604      	mov	r4, r0
  if ( hpcd->Init.speed == PCD_SPEED_HIGH)
90003b72:	b111      	cbz	r1, 90003b7a <HAL_PCD_ResetCallback+0xe>
  {
    speed = USBD_SPEED_HIGH;
  }
  else if ( hpcd->Init.speed == PCD_SPEED_FULL)
90003b74:	2902      	cmp	r1, #2
90003b76:	d10a      	bne.n	90003b8e <HAL_PCD_ResetCallback+0x22>
  {
    speed = USBD_SPEED_FULL;
90003b78:	2101      	movs	r1, #1
  else
  {
    Error_Handler();
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
90003b7a:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
90003b7e:	f00e fd5b 	bl	90012638 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
90003b82:	f8d4 04e0 	ldr.w	r0, [r4, #1248]	@ 0x4e0
}
90003b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
90003b8a:	f00e bd27 	b.w	900125dc <USBD_LL_Reset>
    Error_Handler();
90003b8e:	f000 fcc3 	bl	90004518 <Error_Handler>
    speed = USBD_SPEED_FULL;
90003b92:	2101      	movs	r1, #1
90003b94:	e7f1      	b.n	90003b7a <HAL_PCD_ResetCallback+0xe>
90003b96:	bf00      	nop

90003b98 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
90003b98:	b510      	push	{r4, lr}
90003b9a:	4604      	mov	r4, r0
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
90003b9c:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003ba0:	f00e fd4e 	bl	90012640 <USBD_LL_Suspend>
  __HAL_PCD_GATE_PHYCLOCK(hpcd);
90003ba4:	6822      	ldr	r2, [r4, #0]
90003ba6:	f8d2 3e00 	ldr.w	r3, [r2, #3584]	@ 0xe00
90003baa:	f043 0301 	orr.w	r3, r3, #1
90003bae:	f8c2 3e00 	str.w	r3, [r2, #3584]	@ 0xe00
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
90003bb2:	7ae3      	ldrb	r3, [r4, #11]
90003bb4:	b123      	cbz	r3, 90003bc0 <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
90003bb6:	4a03      	ldr	r2, [pc, #12]	@ (90003bc4 <HAL_PCD_SuspendCallback+0x2c>)
90003bb8:	6913      	ldr	r3, [r2, #16]
90003bba:	f043 0306 	orr.w	r3, r3, #6
90003bbe:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
90003bc0:	bd10      	pop	{r4, pc}
90003bc2:	bf00      	nop
90003bc4:	e000ed00 	.word	0xe000ed00

90003bc8 <HAL_PCD_ResumeCallback>:
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
90003bc8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003bcc:	f00e bd48 	b.w	90012660 <USBD_LL_Resume>

90003bd0 <HAL_PCD_ISOOUTIncompleteCallback>:
static void PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOOUTIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoOUTIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
90003bd0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003bd4:	f00e bd76 	b.w	900126c4 <USBD_LL_IsoOUTIncomplete>

90003bd8 <HAL_PCD_ISOINIncompleteCallback>:
static void PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_ISOINIncompleteCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_IsoINIncomplete((USBD_HandleTypeDef*)hpcd->pData, epnum);
90003bd8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003bdc:	f00e bd5c 	b.w	90012698 <USBD_LL_IsoINIncomplete>

90003be0 <HAL_PCD_ConnectCallback>:
static void PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ConnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevConnected((USBD_HandleTypeDef*)hpcd->pData);
90003be0:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003be4:	f00e bd84 	b.w	900126f0 <USBD_LL_DevConnected>

90003be8 <HAL_PCD_DisconnectCallback>:
static void PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_DisconnectCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
  USBD_LL_DevDisconnected((USBD_HandleTypeDef*)hpcd->pData);
90003be8:	f8d0 04e0 	ldr.w	r0, [r0, #1248]	@ 0x4e0
90003bec:	f00e bd82 	b.w	900126f4 <USBD_LL_DevDisconnected>

90003bf0 <USBD_LL_Init>:
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
  /* Init USB Ip. */
  if (pdev->id == DEVICE_FS) {
90003bf0:	7802      	ldrb	r2, [r0, #0]
90003bf2:	b10a      	cbz	r2, 90003bf8 <USBD_LL_Init+0x8>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
  /* USER CODE END TxRx_Configuration */
  }
  return USBD_OK;
}
90003bf4:	2000      	movs	r0, #0
90003bf6:	4770      	bx	lr
{
90003bf8:	b508      	push	{r3, lr}
  hpcd_USB_OTG_FS.pData = pdev;
90003bfa:	4b15      	ldr	r3, [pc, #84]	@ (90003c50 <USBD_LL_Init+0x60>)
  hpcd_USB_OTG_FS.Init.dev_endpoints = 9;
90003bfc:	f04f 0c09 	mov.w	ip, #9
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
90003c00:	4914      	ldr	r1, [pc, #80]	@ (90003c54 <USBD_LL_Init+0x64>)
  hpcd_USB_OTG_FS.pData = pdev;
90003c02:	f8c3 04e0 	str.w	r0, [r3, #1248]	@ 0x4e0
  pdev->pData = &hpcd_USB_OTG_FS;
90003c06:	f8c0 32c8 	str.w	r3, [r0, #712]	@ 0x2c8
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
90003c0a:	f44f 7000 	mov.w	r0, #512	@ 0x200
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
90003c0e:	6019      	str	r1, [r3, #0]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
90003c10:	2102      	movs	r1, #2
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
90003c12:	80d8      	strh	r0, [r3, #6]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
90003c14:	4618      	mov	r0, r3
  hpcd_USB_OTG_FS.Init.dev_endpoints = 9;
90003c16:	f883 c004 	strb.w	ip, [r3, #4]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
90003c1a:	f8c3 1009 	str.w	r1, [r3, #9]
  hpcd_USB_OTG_FS.Init.battery_charging_enable = DISABLE;
90003c1e:	f8a3 200d 	strh.w	r2, [r3, #13]
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
90003c22:	73da      	strb	r2, [r3, #15]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
90003c24:	f007 fb78 	bl	9000b318 <HAL_PCD_Init>
90003c28:	b978      	cbnz	r0, 90003c4a <USBD_LL_Init+0x5a>
  HAL_PCDEx_SetRxFiFo(&hpcd_USB_OTG_FS, 0x80);
90003c2a:	2180      	movs	r1, #128	@ 0x80
90003c2c:	4808      	ldr	r0, [pc, #32]	@ (90003c50 <USBD_LL_Init+0x60>)
90003c2e:	f008 fd59 	bl	9000c6e4 <HAL_PCDEx_SetRxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 0, 0x40);
90003c32:	2240      	movs	r2, #64	@ 0x40
90003c34:	2100      	movs	r1, #0
90003c36:	4806      	ldr	r0, [pc, #24]	@ (90003c50 <USBD_LL_Init+0x60>)
90003c38:	f008 fcd2 	bl	9000c5e0 <HAL_PCDEx_SetTxFiFo>
  HAL_PCDEx_SetTxFiFo(&hpcd_USB_OTG_FS, 1, 0x80);
90003c3c:	2280      	movs	r2, #128	@ 0x80
90003c3e:	2101      	movs	r1, #1
90003c40:	4803      	ldr	r0, [pc, #12]	@ (90003c50 <USBD_LL_Init+0x60>)
90003c42:	f008 fccd 	bl	9000c5e0 <HAL_PCDEx_SetTxFiFo>
}
90003c46:	2000      	movs	r0, #0
90003c48:	bd08      	pop	{r3, pc}
    Error_Handler( );
90003c4a:	f000 fc65 	bl	90004518 <Error_Handler>
90003c4e:	e7ec      	b.n	90003c2a <USBD_LL_Init+0x3a>
90003c50:	2400965c 	.word	0x2400965c
90003c54:	40080000 	.word	0x40080000

90003c58 <USBD_LL_DeInit>:
  * @brief  De-Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_DeInit(USBD_HandleTypeDef *pdev)
{
90003c58:	b508      	push	{r3, lr}
  HAL_StatusTypeDef hal_status = HAL_OK;
  USBD_StatusTypeDef usb_status = USBD_OK;

  hal_status = HAL_PCD_DeInit(pdev->pData);
90003c5a:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003c5e:	f007 fd63 	bl	9000b728 <HAL_PCD_DeInit>
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
  USBD_StatusTypeDef usb_status = USBD_OK;

  switch (hal_status)
90003c62:	b118      	cbz	r0, 90003c6c <USBD_LL_DeInit+0x14>
90003c64:	2802      	cmp	r0, #2
90003c66:	bf0c      	ite	eq
90003c68:	2001      	moveq	r0, #1
90003c6a:	2003      	movne	r0, #3
}
90003c6c:	bd08      	pop	{r3, pc}
90003c6e:	bf00      	nop

90003c70 <USBD_LL_Start>:
{
90003c70:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Start(pdev->pData);
90003c72:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003c76:	f007 fd6d 	bl	9000b754 <HAL_PCD_Start>
  switch (hal_status)
90003c7a:	b118      	cbz	r0, 90003c84 <USBD_LL_Start+0x14>
90003c7c:	2802      	cmp	r0, #2
90003c7e:	bf0c      	ite	eq
90003c80:	2001      	moveq	r0, #1
90003c82:	2003      	movne	r0, #3
}
90003c84:	bd08      	pop	{r3, pc}
90003c86:	bf00      	nop

90003c88 <USBD_LL_Stop>:
{
90003c88:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_Stop(pdev->pData);
90003c8a:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003c8e:	f007 fd83 	bl	9000b798 <HAL_PCD_Stop>
  switch (hal_status)
90003c92:	b118      	cbz	r0, 90003c9c <USBD_LL_Stop+0x14>
90003c94:	2802      	cmp	r0, #2
90003c96:	bf0c      	ite	eq
90003c98:	2001      	moveq	r0, #1
90003c9a:	2003      	movne	r0, #3
}
90003c9c:	bd08      	pop	{r3, pc}
90003c9e:	bf00      	nop

90003ca0 <USBD_LL_OpenEP>:
{
90003ca0:	4694      	mov	ip, r2
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
90003ca2:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
{
90003ca6:	461a      	mov	r2, r3
90003ca8:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
90003caa:	4663      	mov	r3, ip
90003cac:	f008 fb5e 	bl	9000c36c <HAL_PCD_EP_Open>
  switch (hal_status)
90003cb0:	b118      	cbz	r0, 90003cba <USBD_LL_OpenEP+0x1a>
90003cb2:	2802      	cmp	r0, #2
90003cb4:	bf0c      	ite	eq
90003cb6:	2001      	moveq	r0, #1
90003cb8:	2003      	movne	r0, #3
}
90003cba:	bd08      	pop	{r3, pc}

90003cbc <USBD_LL_CloseEP>:
{
90003cbc:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
90003cbe:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003cc2:	f008 fb91 	bl	9000c3e8 <HAL_PCD_EP_Close>
  switch (hal_status)
90003cc6:	b118      	cbz	r0, 90003cd0 <USBD_LL_CloseEP+0x14>
90003cc8:	2802      	cmp	r0, #2
90003cca:	bf0c      	ite	eq
90003ccc:	2001      	moveq	r0, #1
90003cce:	2003      	movne	r0, #3
}
90003cd0:	bd08      	pop	{r3, pc}
90003cd2:	bf00      	nop

90003cd4 <USBD_LL_StallEP>:
{
90003cd4:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
90003cd6:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003cda:	f008 fc01 	bl	9000c4e0 <HAL_PCD_EP_SetStall>
  switch (hal_status)
90003cde:	b118      	cbz	r0, 90003ce8 <USBD_LL_StallEP+0x14>
90003ce0:	2802      	cmp	r0, #2
90003ce2:	bf0c      	ite	eq
90003ce4:	2001      	moveq	r0, #1
90003ce6:	2003      	movne	r0, #3
}
90003ce8:	bd08      	pop	{r3, pc}
90003cea:	bf00      	nop

90003cec <USBD_LL_ClearStallEP>:
{
90003cec:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
90003cee:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003cf2:	f008 fc39 	bl	9000c568 <HAL_PCD_EP_ClrStall>
  switch (hal_status)
90003cf6:	b118      	cbz	r0, 90003d00 <USBD_LL_ClearStallEP+0x14>
90003cf8:	2802      	cmp	r0, #2
90003cfa:	bf0c      	ite	eq
90003cfc:	2001      	moveq	r0, #1
90003cfe:	2003      	movne	r0, #3
}
90003d00:	bd08      	pop	{r3, pc}
90003d02:	bf00      	nop

90003d04 <USBD_LL_IsStallEP>:
  if((ep_addr & 0x80) == 0x80)
90003d04:	060a      	lsls	r2, r1, #24
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
90003d06:	f8d0 32c8 	ldr.w	r3, [r0, #712]	@ 0x2c8
  if((ep_addr & 0x80) == 0x80)
90003d0a:	d406      	bmi.n	90003d1a <USBD_LL_IsStallEP+0x16>
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
90003d0c:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90003d10:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90003d14:	f893 0256 	ldrb.w	r0, [r3, #598]	@ 0x256
}
90003d18:	4770      	bx	lr
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
90003d1a:	f001 017f 	and.w	r1, r1, #127	@ 0x7f
90003d1e:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90003d22:	eb03 0381 	add.w	r3, r3, r1, lsl #2
90003d26:	7d98      	ldrb	r0, [r3, #22]
90003d28:	4770      	bx	lr
90003d2a:	bf00      	nop

90003d2c <USBD_LL_SetUSBAddress>:
{
90003d2c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
90003d2e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003d32:	f008 fb07 	bl	9000c344 <HAL_PCD_SetAddress>
  switch (hal_status)
90003d36:	b118      	cbz	r0, 90003d40 <USBD_LL_SetUSBAddress+0x14>
90003d38:	2802      	cmp	r0, #2
90003d3a:	bf0c      	ite	eq
90003d3c:	2001      	moveq	r0, #1
90003d3e:	2003      	movne	r0, #3
}
90003d40:	bd08      	pop	{r3, pc}
90003d42:	bf00      	nop

90003d44 <USBD_LL_Transmit>:
{
90003d44:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
90003d46:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003d4a:	f008 fba7 	bl	9000c49c <HAL_PCD_EP_Transmit>
  switch (hal_status)
90003d4e:	b118      	cbz	r0, 90003d58 <USBD_LL_Transmit+0x14>
90003d50:	2802      	cmp	r0, #2
90003d52:	bf0c      	ite	eq
90003d54:	2001      	moveq	r0, #1
90003d56:	2003      	movne	r0, #3
}
90003d58:	bd08      	pop	{r3, pc}
90003d5a:	bf00      	nop

90003d5c <USBD_LL_PrepareReceive>:
{
90003d5c:	b508      	push	{r3, lr}
  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
90003d5e:	f8d0 02c8 	ldr.w	r0, [r0, #712]	@ 0x2c8
90003d62:	f008 fb79 	bl	9000c458 <HAL_PCD_EP_Receive>
  switch (hal_status)
90003d66:	b118      	cbz	r0, 90003d70 <USBD_LL_PrepareReceive+0x14>
90003d68:	2802      	cmp	r0, #2
90003d6a:	bf0c      	ite	eq
90003d6c:	2001      	moveq	r0, #1
90003d6e:	2003      	movne	r0, #3
}
90003d70:	bd08      	pop	{r3, pc}
90003d72:	bf00      	nop

90003d74 <USBD_static_malloc>:
}
90003d74:	4800      	ldr	r0, [pc, #0]	@ (90003d78 <USBD_static_malloc+0x4>)
90003d76:	4770      	bx	lr
90003d78:	24009648 	.word	0x24009648

90003d7c <USBD_static_free>:
}
90003d7c:	4770      	bx	lr
90003d7e:	bf00      	nop

90003d80 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003d80:	4901      	ldr	r1, [pc, #4]	@ (90003d88 <vApplicationIdleHook+0x8>)
90003d82:	2000      	movs	r0, #0
90003d84:	f00d be78 	b.w	90011a78 <vTaskSetApplicationTaskTag>
90003d88:	90000ffd 	.word	0x90000ffd

90003d8c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003d8c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */

  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
90003d8e:	2064      	movs	r0, #100	@ 0x64
90003d90:	f00b fd36 	bl	9000f800 <osDelay>
  for(;;)
90003d94:	e7fb      	b.n	90003d8e <StartDefaultTask+0x2>
90003d96:	bf00      	nop

90003d98 <StartTaskUSB>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTaskUSB */
void StartTaskUSB(void *argument)
{
90003d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003d9c:	b087      	sub	sp, #28
90003d9e:	2600      	movs	r6, #0
  /* USER CODE BEGIN StartTaskUSB */
  MX_USB_DEVICE_InitKeyboard();
  uint8_t deviceMode = 1; // 1 is keyboard 0 is mouse
90003da0:	f04f 0901 	mov.w	r9, #1
90003da4:	4d3e      	ldr	r5, [pc, #248]	@ (90003ea0 <StartTaskUSB+0x108>)
90003da6:	f10d 0808 	add.w	r8, sp, #8
90003daa:	af04      	add	r7, sp, #16
90003dac:	4c3d      	ldr	r4, [pc, #244]	@ (90003ea4 <StartTaskUSB+0x10c>)
  MX_USB_DEVICE_InitKeyboard();
90003dae:	f7ff fcb5 	bl	9000371c <MX_USB_DEVICE_InitKeyboard>
  uint8_t status;
  USBEvent_t event;
  for(;;)
  {
	status = osMessageQueueGet(usbEventQueueHandle, &event, NULL, osWaitForever);
90003db2:	f04f 33ff 	mov.w	r3, #4294967295
90003db6:	2200      	movs	r2, #0
90003db8:	4669      	mov	r1, sp
90003dba:	6828      	ldr	r0, [r5, #0]
90003dbc:	f00b fe4e 	bl	9000fa5c <osMessageQueueGet>
	if(status == osOK) {
90003dc0:	b2c0      	uxtb	r0, r0
90003dc2:	2800      	cmp	r0, #0
90003dc4:	d1f5      	bne.n	90003db2 <StartTaskUSB+0x1a>
		if(event.event_type == USB_EVENT_MOUSE){
90003dc6:	f89d 3000 	ldrb.w	r3, [sp]
90003dca:	bb2b      	cbnz	r3, 90003e18 <StartTaskUSB+0x80>
			if(deviceMode != 0) {
90003dcc:	f1b9 0f00 	cmp.w	r9, #0
90003dd0:	d161      	bne.n	90003e96 <StartTaskUSB+0xfe>
				MX_USB_DEVICE_Deinit();
				MX_USB_DEVICE_InitMouse();
				deviceMode = 0;
			}
			GUIMouseEvent_t* guiMouseEvent = (GUIMouseEvent_t*) event.event;
90003dd2:	f8dd 9004 	ldr.w	r9, [sp, #4]

			mouseEvent_t mouseEvent = {0, 0, 0, 0, 0};
90003dd6:	f04f 0b00 	mov.w	fp, #0
			mouseEvent.BUTTONS = guiMouseEvent->BUTTONS;
			mouseEvent.X = guiMouseEvent->X * 5;
90003dda:	f899 2001 	ldrb.w	r2, [r9, #1]
			mouseEvent.Y = guiMouseEvent->Y * 5;
90003dde:	f899 3002 	ldrb.w	r3, [r9, #2]
			mouseEvent.BUTTONS = guiMouseEvent->BUTTONS;
90003de2:	f899 a000 	ldrb.w	sl, [r9]
			mouseEvent.X = guiMouseEvent->X * 5;
90003de6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
			mouseEvent.Y = guiMouseEvent->Y * 5;
90003dea:	eb03 0383 	add.w	r3, r3, r3, lsl #2
			mouseEvent_t mouseEvent = {0, 0, 0, 0, 0};
90003dee:	f8ad b00b 	strh.w	fp, [sp, #11]
			SendMouseEvent(mouseEvent);
90003df2:	f88d a008 	strb.w	sl, [sp, #8]
			mouseEvent.X = guiMouseEvent->X * 5;
90003df6:	f88d 2009 	strb.w	r2, [sp, #9]
			mouseEvent.Y = guiMouseEvent->Y * 5;
90003dfa:	f88d 300a 	strb.w	r3, [sp, #10]
			SendMouseEvent(mouseEvent);
90003dfe:	e898 0003 	ldmia.w	r8, {r0, r1}
90003e02:	f7ff fd17 	bl	90003834 <SendMouseEvent>
			free(guiMouseEvent);
90003e06:	4648      	mov	r0, r9
90003e08:	f028 fa4a 	bl	9002c2a0 <free>
			if(mouseEvent.BUTTONS != 0) {
90003e0c:	f1ba 0f00 	cmp.w	sl, #0
90003e10:	d135      	bne.n	90003e7e <StartTaskUSB+0xe6>
90003e12:	f04f 0900 	mov.w	r9, #0
90003e16:	e7cc      	b.n	90003db2 <StartTaskUSB+0x1a>
				mouseEvent_t clearEvent = {0, 0, 0, 0, 0};
				osDelay(20);
				SendMouseEvent(clearEvent);
			}
		} else {
			if (deviceMode != 1) {
90003e18:	f1b9 0f00 	cmp.w	r9, #0
90003e1c:	d103      	bne.n	90003e26 <StartTaskUSB+0x8e>
				MX_USB_DEVICE_Deinit();
90003e1e:	f7ff fcdd 	bl	900037dc <MX_USB_DEVICE_Deinit>
				MX_USB_DEVICE_InitKeyboard();
90003e22:	f7ff fc7b 	bl	9000371c <MX_USB_DEVICE_InitKeyboard>
				deviceMode = 1;
			}
			GUIKeyboardEvent_t* guiKeyboardEvent = (GUIKeyboardEvent_t*) event.event;
90003e26:	f8dd a004 	ldr.w	sl, [sp, #4]
			keyboardEvent_t keyboardEvent = {0, 0, 0, 0, 0, 0, 0, 0};
90003e2a:	2000      	movs	r0, #0
90003e2c:	4b1e      	ldr	r3, [pc, #120]	@ (90003ea8 <StartTaskUSB+0x110>)
			keyboardEvent.MODIFIER = guiKeyboardEvent->MODIFIERS;
90003e2e:	f89a 2000 	ldrb.w	r2, [sl]
			for(int i = 0; i < 56; i++) {
				if(usbMappingHID[i].unicodeChar == guiKeyboardEvent->keyChar) {
90003e32:	f8ba 1002 	ldrh.w	r1, [sl, #2]
			keyboardEvent_t keyboardEvent = {0, 0, 0, 0, 0, 0, 0, 0};
90003e36:	f8cd 0009 	str.w	r0, [sp, #9]
			keyboardEvent.MODIFIER = guiKeyboardEvent->MODIFIERS;
90003e3a:	f88d 2008 	strb.w	r2, [sp, #8]
			keyboardEvent_t keyboardEvent = {0, 0, 0, 0, 0, 0, 0, 0};
90003e3e:	9003      	str	r0, [sp, #12]
				if(usbMappingHID[i].unicodeChar == guiKeyboardEvent->keyChar) {
90003e40:	881a      	ldrh	r2, [r3, #0]
90003e42:	428a      	cmp	r2, r1
90003e44:	d101      	bne.n	90003e4a <StartTaskUSB+0xb2>
					keyboardEvent.KEYCODE1 = usbMappingHID[i].usbKeycode;
90003e46:	789e      	ldrb	r6, [r3, #2]
90003e48:	2001      	movs	r0, #1
			for(int i = 0; i < 56; i++) {
90003e4a:	3304      	adds	r3, #4
90003e4c:	42a3      	cmp	r3, r4
90003e4e:	d1f7      	bne.n	90003e40 <StartTaskUSB+0xa8>
90003e50:	b108      	cbz	r0, 90003e56 <StartTaskUSB+0xbe>
90003e52:	f88d 600a 	strb.w	r6, [sp, #10]
				}
			}
			SendKeyboardEvent(keyboardEvent);
90003e56:	f04f 0901 	mov.w	r9, #1
90003e5a:	e898 0003 	ldmia.w	r8, {r0, r1}
90003e5e:	f7ff fcd9 	bl	90003814 <SendKeyboardEvent>
			free(guiKeyboardEvent);
90003e62:	4650      	mov	r0, sl
90003e64:	f028 fa1c 	bl	9002c2a0 <free>
			keyboardEvent_t clearEvent = {0, 0, 0, 0, 0, 0, 0, 0};
90003e68:	2300      	movs	r3, #0
			osDelay(20);
90003e6a:	2014      	movs	r0, #20
			keyboardEvent_t clearEvent = {0, 0, 0, 0, 0, 0, 0, 0};
90003e6c:	e9c7 3300 	strd	r3, r3, [r7]
			osDelay(20);
90003e70:	f00b fcc6 	bl	9000f800 <osDelay>
			SendKeyboardEvent(clearEvent);
90003e74:	e897 0003 	ldmia.w	r7, {r0, r1}
90003e78:	f7ff fccc 	bl	90003814 <SendKeyboardEvent>
90003e7c:	e799      	b.n	90003db2 <StartTaskUSB+0x1a>
				osDelay(20);
90003e7e:	2014      	movs	r0, #20
				mouseEvent_t clearEvent = {0, 0, 0, 0, 0};
90003e80:	f8c7 b000 	str.w	fp, [r7]
90003e84:	f887 b004 	strb.w	fp, [r7, #4]
				osDelay(20);
90003e88:	f00b fcba 	bl	9000f800 <osDelay>
				SendMouseEvent(clearEvent);
90003e8c:	e897 0003 	ldmia.w	r7, {r0, r1}
90003e90:	f7ff fcd0 	bl	90003834 <SendMouseEvent>
90003e94:	e7bd      	b.n	90003e12 <StartTaskUSB+0x7a>
				MX_USB_DEVICE_Deinit();
90003e96:	f7ff fca1 	bl	900037dc <MX_USB_DEVICE_Deinit>
				MX_USB_DEVICE_InitMouse();
90003e9a:	f7ff fc6f 	bl	9000377c <MX_USB_DEVICE_InitMouse>
				deviceMode = 0;
90003e9e:	e798      	b.n	90003dd2 <StartTaskUSB+0x3a>
90003ea0:	24009b40 	.word	0x24009b40
90003ea4:	9002ed24 	.word	0x9002ed24
90003ea8:	9002ec44 	.word	0x9002ec44

90003eac <SystemClock_Config>:
{
90003eac:	b570      	push	{r4, r5, r6, lr}
90003eae:	b0a0      	sub	sp, #128	@ 0x80
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90003eb0:	224c      	movs	r2, #76	@ 0x4c
90003eb2:	2100      	movs	r1, #0
90003eb4:	a80c      	add	r0, sp, #48	@ 0x30
90003eb6:	f028 fc63 	bl	9002c780 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90003eba:	2220      	movs	r2, #32
90003ebc:	2100      	movs	r1, #0
90003ebe:	a804      	add	r0, sp, #16
90003ec0:	f028 fc5e 	bl	9002c780 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90003ec4:	2002      	movs	r0, #2
90003ec6:	f008 fc2d 	bl	9000c724 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90003eca:	4b35      	ldr	r3, [pc, #212]	@ (90003fa0 <SystemClock_Config+0xf4>)
90003ecc:	2100      	movs	r1, #0
90003ece:	4a35      	ldr	r2, [pc, #212]	@ (90003fa4 <SystemClock_Config+0xf8>)
90003ed0:	9101      	str	r1, [sp, #4]
90003ed2:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
90003ed4:	f021 0101 	bic.w	r1, r1, #1
90003ed8:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003eda:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003edc:	f003 0301 	and.w	r3, r3, #1
90003ee0:	9301      	str	r3, [sp, #4]
90003ee2:	6993      	ldr	r3, [r2, #24]
90003ee4:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
90003ee8:	6193      	str	r3, [r2, #24]
90003eea:	6993      	ldr	r3, [r2, #24]
90003eec:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
90003ef0:	9301      	str	r3, [sp, #4]
90003ef2:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003ef4:	6993      	ldr	r3, [r2, #24]
90003ef6:	049c      	lsls	r4, r3, #18
90003ef8:	d5fc      	bpl.n	90003ef4 <SystemClock_Config+0x48>
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003efa:	4b2b      	ldr	r3, [pc, #172]	@ (90003fa8 <SystemClock_Config+0xfc>)
90003efc:	f8d3 10f4 	ldr.w	r1, [r3, #244]	@ 0xf4
90003f00:	f041 0102 	orr.w	r1, r1, #2
90003f04:	f8c3 10f4 	str.w	r1, [r3, #244]	@ 0xf4
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003f08:	2100      	movs	r1, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003f0a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90003f0e:	f003 0302 	and.w	r3, r3, #2
90003f12:	9302      	str	r3, [sp, #8]
90003f14:	9b02      	ldr	r3, [sp, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003f16:	9103      	str	r1, [sp, #12]
90003f18:	6991      	ldr	r1, [r2, #24]
90003f1a:	4b21      	ldr	r3, [pc, #132]	@ (90003fa0 <SystemClock_Config+0xf4>)
90003f1c:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
90003f20:	6191      	str	r1, [r2, #24]
90003f22:	6992      	ldr	r2, [r2, #24]
90003f24:	f402 4240 	and.w	r2, r2, #49152	@ 0xc000
90003f28:	9203      	str	r2, [sp, #12]
90003f2a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003f2c:	4a1d      	ldr	r2, [pc, #116]	@ (90003fa4 <SystemClock_Config+0xf8>)
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
90003f2e:	f041 0101 	orr.w	r1, r1, #1
90003f32:	62d9      	str	r1, [r3, #44]	@ 0x2c
90003f34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003f36:	f003 0301 	and.w	r3, r3, #1
90003f3a:	9303      	str	r3, [sp, #12]
90003f3c:	9b03      	ldr	r3, [sp, #12]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90003f3e:	6993      	ldr	r3, [r2, #24]
90003f40:	0498      	lsls	r0, r3, #18
90003f42:	d5fc      	bpl.n	90003f3e <SystemClock_Config+0x92>
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90003f44:	2302      	movs	r3, #2
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSE;
90003f46:	2021      	movs	r0, #33	@ 0x21
90003f48:	f44f 3180 	mov.w	r1, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003f4c:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLP = 2;
90003f4e:	9319      	str	r3, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003f50:	2604      	movs	r6, #4
  RCC_OscInitStruct.PLL.PLLR = 2;
90003f52:	931b      	str	r3, [sp, #108]	@ 0x6c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90003f54:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003f56:	961a      	str	r6, [sp, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003f58:	941e      	str	r4, [sp, #120]	@ 0x78
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003f5a:	e9cd 3315 	strd	r3, r3, [sp, #84]	@ 0x54
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
90003f5e:	2301      	movs	r3, #1
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI48|RCC_OSCILLATORTYPE_HSE;
90003f60:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
  RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
90003f64:	9312      	str	r3, [sp, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLN = 192;
90003f66:	2105      	movs	r1, #5
90003f68:	23c0      	movs	r3, #192	@ 0xc0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003f6a:	a80c      	add	r0, sp, #48	@ 0x30
  RCC_OscInitStruct.PLL.PLLN = 192;
90003f6c:	e9cd 1317 	strd	r1, r3, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90003f70:	e9cd 541c 	strd	r5, r4, [sp, #112]	@ 0x70
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003f74:	f008 fc7c 	bl	9000c870 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003f78:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003f7a:	223f      	movs	r2, #63	@ 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003f7c:	4631      	mov	r1, r6
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90003f7e:	9309      	str	r3, [sp, #36]	@ 0x24
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003f80:	a804      	add	r0, sp, #16
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003f82:	9204      	str	r2, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003f84:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90003f86:	930b      	str	r3, [sp, #44]	@ 0x2c
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90003f88:	9406      	str	r4, [sp, #24]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003f8a:	9205      	str	r2, [sp, #20]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90003f8c:	e9cd 5307 	strd	r5, r3, [sp, #28]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003f90:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003f94:	930a      	str	r3, [sp, #40]	@ 0x28
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003f96:	f008 ffeb 	bl	9000cf70 <HAL_RCC_ClockConfig>
}
90003f9a:	b020      	add	sp, #128	@ 0x80
90003f9c:	bd70      	pop	{r4, r5, r6, pc}
90003f9e:	bf00      	nop
90003fa0:	58000400 	.word	0x58000400
90003fa4:	58024800 	.word	0x58024800
90003fa8:	58024400 	.word	0x58024400

90003fac <main>:
{
90003fac:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003fae:	2400      	movs	r4, #0
{
90003fb0:	b09a      	sub	sp, #104	@ 0x68
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003fb2:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003fb4:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003fb6:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003fb8:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90003fbc:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_MPU_Disable();
90003fc0:	f004 f828 	bl	90008014 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003fc4:	f04f 5310 	mov.w	r3, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003fc8:	49d4      	ldr	r1, [pc, #848]	@ (9000431c <main+0x370>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003fca:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.BaseAddress = 0x24000000;
90003fcc:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003fce:	4bd4      	ldr	r3, [pc, #848]	@ (90004320 <main+0x374>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003fd0:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003fd4:	e9cd 130f 	strd	r1, r3, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003fd8:	f004 f83a 	bl	90008050 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003fdc:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003fe0:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90003fe2:	f88d 403f 	strb.w	r4, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0x90000000;
90003fe6:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003fe8:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003fec:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003ff0:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003ff4:	f004 f82c 	bl	90008050 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003ff8:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003ffa:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003ffc:	f8ad 603f 	strh.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90004000:	f88d 3035 	strb.w	r3, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90004004:	231a      	movs	r3, #26
90004006:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
9000400a:	f240 1301 	movw	r3, #257	@ 0x101
9000400e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004012:	f004 f81d 	bl	90008050 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90004016:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000401a:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
9000401c:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90004020:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90004022:	f8ad 303f 	strh.w	r3, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0xD0000000;
90004026:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
9000402a:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  MPU_InitStruct.BaseAddress = 0xD0000000;
9000402e:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90004030:	f88d 6035 	strb.w	r6, [sp, #53]	@ 0x35
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90004034:	f004 f80c 	bl	90008050 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90004038:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000403a:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
9000403c:	f88d 603f 	strb.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90004040:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90004044:	f88d 4035 	strb.w	r4, [sp, #53]	@ 0x35
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90004048:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000404c:	f004 f800 	bl	90008050 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90004050:	4620      	mov	r0, r4
90004052:	f003 ffed 	bl	90008030 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90004056:	4ab3      	ldr	r2, [pc, #716]	@ (90004324 <main+0x378>)
90004058:	6953      	ldr	r3, [r2, #20]
9000405a:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
9000405e:	d111      	bne.n	90004084 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90004060:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004064:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90004068:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
9000406c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004070:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90004074:	6953      	ldr	r3, [r2, #20]
90004076:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000407a:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
9000407c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90004080:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90004084:	48a7      	ldr	r0, [pc, #668]	@ (90004324 <main+0x378>)
90004086:	6943      	ldr	r3, [r0, #20]
90004088:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
9000408c:	d124      	bne.n	900040d8 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000408e:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90004092:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90004096:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000409a:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000409e:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900040a2:	f3c5 05c9 	ubfx	r5, r5, #3, #10
900040a6:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900040a8:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900040ac:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900040ae:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
900040b2:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
900040b4:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
900040b8:	1c5a      	adds	r2, r3, #1
900040ba:	d1f8      	bne.n	900040ae <main+0x102>
    } while(sets-- != 0U);
900040bc:	3c20      	subs	r4, #32
900040be:	f114 0f20 	cmn.w	r4, #32
900040c2:	d1f1      	bne.n	900040a8 <main+0xfc>
900040c4:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
900040c8:	6943      	ldr	r3, [r0, #20]
900040ca:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
900040ce:	6143      	str	r3, [r0, #20]
900040d0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900040d4:	f3bf 8f6f 	isb	sy
  HAL_Init();
900040d8:	f003 fed4 	bl	90007e84 <HAL_Init>
  SystemClock_Config();
900040dc:	f7ff fee6 	bl	90003eac <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
900040e0:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900040e2:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
900040e4:	4d90      	ldr	r5, [pc, #576]	@ (90004328 <main+0x37c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
900040e6:	21c0      	movs	r1, #192	@ 0xc0
900040e8:	4890      	ldr	r0, [pc, #576]	@ (9000432c <main+0x380>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900040ea:	9411      	str	r4, [sp, #68]	@ 0x44
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
900040ec:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900040ee:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900040f0:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
900040f4:	f44f 5700 	mov.w	r7, #8192	@ 0x2000
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
900040f8:	f04f 0940 	mov.w	r9, #64	@ 0x40
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
900040fc:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004100:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90004104:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  __HAL_RCC_GPIOK_CLK_ENABLE();
90004108:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000410c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
90004110:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004114:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004118:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
9000411c:	9302      	str	r3, [sp, #8]
9000411e:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90004120:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004124:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90004128:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000412c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004130:	f003 0340 	and.w	r3, r3, #64	@ 0x40
90004134:	9303      	str	r3, [sp, #12]
90004136:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90004138:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000413c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90004140:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004144:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004148:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9000414c:	9304      	str	r3, [sp, #16]
9000414e:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90004150:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004154:	f043 0310 	orr.w	r3, r3, #16
90004158:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000415c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004160:	f003 0310 	and.w	r3, r3, #16
90004164:	9305      	str	r3, [sp, #20]
90004166:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90004168:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000416c:	f043 0302 	orr.w	r3, r3, #2
90004170:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004174:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004178:	f003 0302 	and.w	r3, r3, #2
9000417c:	9306      	str	r3, [sp, #24]
9000417e:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90004180:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004184:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90004188:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
9000418c:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004190:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90004194:	9307      	str	r3, [sp, #28]
90004196:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90004198:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000419c:	f043 0308 	orr.w	r3, r3, #8
900041a0:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900041a4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041a8:	f003 0308 	and.w	r3, r3, #8
900041ac:	9308      	str	r3, [sp, #32]
900041ae:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
900041b0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041b4:	f043 0304 	orr.w	r3, r3, #4
900041b8:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900041bc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041c0:	f003 0304 	and.w	r3, r3, #4
900041c4:	9309      	str	r3, [sp, #36]	@ 0x24
900041c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
900041c8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041cc:	f043 0301 	orr.w	r3, r3, #1
900041d0:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900041d4:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041d8:	f003 0301 	and.w	r3, r3, #1
900041dc:	930a      	str	r3, [sp, #40]	@ 0x28
900041de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOF_CLK_ENABLE();
900041e0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041e4:	f043 0320 	orr.w	r3, r3, #32
900041e8:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900041ec:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041f0:	f003 0320 	and.w	r3, r3, #32
900041f4:	930b      	str	r3, [sp, #44]	@ 0x2c
900041f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOH_CLK_ENABLE();
900041f8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900041fc:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90004200:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90004204:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90004208:	f003 0380 	and.w	r3, r3, #128	@ 0x80
9000420c:	930c      	str	r3, [sp, #48]	@ 0x30
9000420e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90004210:	f004 fb18 	bl	90008844 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90004214:	4622      	mov	r2, r4
90004216:	2180      	movs	r1, #128	@ 0x80
90004218:	4845      	ldr	r0, [pc, #276]	@ (90004330 <main+0x384>)
9000421a:	f004 fb13 	bl	90008844 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
9000421e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90004222:	4844      	ldr	r0, [pc, #272]	@ (90004334 <main+0x388>)
90004224:	2201      	movs	r2, #1
90004226:	f004 fb0d 	bl	90008844 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
9000422a:	4622      	mov	r2, r4
9000422c:	2108      	movs	r1, #8
9000422e:	4842      	ldr	r0, [pc, #264]	@ (90004338 <main+0x38c>)
90004230:	f004 fb08 	bl	90008844 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90004234:	2201      	movs	r2, #1
90004236:	4841      	ldr	r0, [pc, #260]	@ (9000433c <main+0x390>)
90004238:	4611      	mov	r1, r2
9000423a:	f004 fb03 	bl	90008844 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
9000423e:	4622      	mov	r2, r4
90004240:	2140      	movs	r1, #64	@ 0x40
90004242:	483f      	ldr	r0, [pc, #252]	@ (90004340 <main+0x394>)
90004244:	f004 fafe 	bl	90008844 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90004248:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
9000424a:	a90d      	add	r1, sp, #52	@ 0x34
9000424c:	4837      	ldr	r0, [pc, #220]	@ (9000432c <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000424e:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90004252:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90004256:	f004 f8e3 	bl	90008420 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
9000425a:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
9000425c:	a90d      	add	r1, sp, #52	@ 0x34
9000425e:	4834      	ldr	r0, [pc, #208]	@ (90004330 <main+0x384>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90004260:	930d      	str	r3, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90004262:	9410      	str	r4, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90004264:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90004268:	f004 f8da 	bl	90008420 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
9000426c:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
90004270:	a90d      	add	r1, sp, #52	@ 0x34
90004272:	4834      	ldr	r0, [pc, #208]	@ (90004344 <main+0x398>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90004274:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
90004276:	e9cd 730d 	strd	r7, r3, [sp, #52]	@ 0x34
  HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
9000427a:	f004 f8d1 	bl	90008420 <HAL_GPIO_Init>
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
9000427e:	a90d      	add	r1, sp, #52	@ 0x34
90004280:	482c      	ldr	r0, [pc, #176]	@ (90004334 <main+0x388>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90004282:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90004286:	2708      	movs	r7, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90004288:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
9000428c:	f004 f8c8 	bl	90008420 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90004290:	a90d      	add	r1, sp, #52	@ 0x34
90004292:	4829      	ldr	r0, [pc, #164]	@ (90004338 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90004294:	e9cd 480f 	strd	r4, r8, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90004298:	e9cd 760d 	strd	r7, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
9000429c:	f004 f8c0 	bl	90008420 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
900042a0:	a90d      	add	r1, sp, #52	@ 0x34
900042a2:	4826      	ldr	r0, [pc, #152]	@ (9000433c <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
900042a4:	e9cd 660d 	strd	r6, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
900042a8:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
900042ac:	f004 f8b8 	bl	90008420 <HAL_GPIO_Init>
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
900042b0:	a90d      	add	r1, sp, #52	@ 0x34
900042b2:	4823      	ldr	r0, [pc, #140]	@ (90004340 <main+0x394>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
900042b4:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
900042b8:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
900042bc:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
900042c0:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
900042c4:	f004 f8ac 	bl	90008420 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
900042c8:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900042cc:	4622      	mov	r2, r4
900042ce:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
900042d0:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900042d2:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
900042d4:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
900042d8:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
900042dc:	4d1a      	ldr	r5, [pc, #104]	@ (90004348 <main+0x39c>)
  __HAL_RCC_MDMA_CLK_ENABLE();
900042de:	4033      	ands	r3, r6
900042e0:	9301      	str	r3, [sp, #4]
900042e2:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
900042e4:	f003 fe3a 	bl	90007f5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
900042e8:	207a      	movs	r0, #122	@ 0x7a
900042ea:	f003 fe73 	bl	90007fd4 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
900042ee:	2234      	movs	r2, #52	@ 0x34
900042f0:	4621      	mov	r1, r4
900042f2:	eb0d 0002 	add.w	r0, sp, r2
900042f6:	f028 fa43 	bl	9002c780 <memset>
  hltdc.Instance = LTDC;
900042fa:	4b14      	ldr	r3, [pc, #80]	@ (9000434c <main+0x3a0>)
  hltdc.Init.AccumulatedVBP = 11;
900042fc:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.AccumulatedActiveH = 283;
900042fe:	f240 2c0a 	movw	ip, #522	@ 0x20a
  hltdc.Instance = LTDC;
90004302:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90004304:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.TotalHeigh = 285;
90004306:	f44f 7e04 	mov.w	lr, #528	@ 0x210
  hltdc.Init.VerticalSync = 8;
9000430a:	61af      	str	r7, [r5, #24]
  hltdc.Init.HorizontalSync = 39;
9000430c:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
9000430e:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90004310:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90004312:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90004316:	e9c5 0307 	strd	r0, r3, [r5, #28]
9000431a:	e019      	b.n	90004350 <main+0x3a4>
9000431c:	03000012 	.word	0x03000012
90004320:	01010001 	.word	0x01010001
90004324:	e000ed00 	.word	0xe000ed00
90004328:	58024400 	.word	0x58024400
9000432c:	58020400 	.word	0x58020400
90004330:	58020c00 	.word	0x58020c00
90004334:	58022000 	.word	0x58022000
90004338:	58021800 	.word	0x58021800
9000433c:	58022800 	.word	0x58022800
90004340:	58020000 	.word	0x58020000
90004344:	58020800 	.word	0x58020800
90004348:	24009b88 	.word	0x24009b88
9000434c:	50001000 	.word	0x50001000
  hltdc.Init.AccumulatedActiveH = 283;
90004350:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90004354:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90004356:	e9c5 c309 	strd	ip, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
9000435a:	f240 131d 	movw	r3, #285	@ 0x11d
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
9000435e:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.TotalHeigh = 285;
90004362:	e9c5 e30b 	strd	lr, r3, [r5, #44]	@ 0x2c
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90004366:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
9000436a:	f006 fbc3 	bl	9000aaf4 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
9000436e:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90004372:	4622      	mov	r2, r4
90004374:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowX1 = 480;
90004376:	930e      	str	r3, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90004378:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
9000437a:	9317      	str	r3, [sp, #92]	@ 0x5c
  pLayerCfg.WindowY1 = 272;
9000437c:	f44f 7388 	mov.w	r3, #272	@ 0x110
  hdma2d.Instance = DMA2D;
90004380:	4d4b      	ldr	r5, [pc, #300]	@ (900044b0 <main+0x504>)
  pLayerCfg.WindowY1 = 272;
90004382:	9310      	str	r3, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 272;
90004384:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Alpha = 255;
90004386:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90004388:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
  pLayerCfg.Alpha = 255;
9000438c:	9312      	str	r3, [sp, #72]	@ 0x48
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
9000438e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
  pLayerCfg.WindowX0 = 0;
90004392:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90004394:	9314      	str	r3, [sp, #80]	@ 0x50
  pLayerCfg.WindowY0 = 0;
90004396:	940f      	str	r4, [sp, #60]	@ 0x3c
  pLayerCfg.Alpha0 = 0;
90004398:	9413      	str	r4, [sp, #76]	@ 0x4c
  pLayerCfg.FBStartAdress = 0;
9000439a:	9416      	str	r4, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
9000439c:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
900043a0:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
900043a4:	f8cd a054 	str.w	sl, [sp, #84]	@ 0x54
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
900043a8:	f006 fc78 	bl	9000ac9c <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
900043ac:	4b41      	ldr	r3, [pc, #260]	@ (900044b4 <main+0x508>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
900043ae:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
900043b0:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
900043b2:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
900043b4:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
900043b6:	e9c5 4801 	strd	r4, r8, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
900043ba:	e9c5 4811 	strd	r4, r8, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
900043be:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
900043c2:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
900043c6:	f003 fee9 	bl	9000819c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
900043ca:	4631      	mov	r1, r6
900043cc:	4628      	mov	r0, r5
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
900043ce:	2510      	movs	r5, #16
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
900043d0:	f003 ffbc 	bl	9000834c <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
900043d4:	4838      	ldr	r0, [pc, #224]	@ (900044b8 <main+0x50c>)
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
900043d6:	2304      	movs	r3, #4
  SdramTiming.LoadToActiveDelay = 2;
900043d8:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
900043dc:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.WriteRecoveryTime = 5;
900043de:	f8cd a044 	str.w	sl, [sp, #68]	@ 0x44
  SdramTiming.SelfRefreshTime = 4;
900043e2:	930f      	str	r3, [sp, #60]	@ 0x3c
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900043e4:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900043e8:	61c4      	str	r4, [r0, #28]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
900043ea:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
900043ec:	e9c0 3503 	strd	r3, r5, [r0, #12]
  SdramTiming.ExitSelfRefreshDelay = 7;
900043f0:	2307      	movs	r3, #7
900043f2:	930e      	str	r3, [sp, #56]	@ 0x38
  SdramTiming.RowCycleDelay = 7;
900043f4:	9310      	str	r3, [sp, #64]	@ 0x40
  hsdram2.Instance = FMC_SDRAM_DEVICE;
900043f6:	4b31      	ldr	r3, [pc, #196]	@ (900044bc <main+0x510>)
900043f8:	6003      	str	r3, [r0, #0]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
900043fa:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  SdramTiming.RCDDelay = 2;
900043fe:	e9cd 8812 	strd	r8, r8, [sp, #72]	@ 0x48
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90004402:	6183      	str	r3, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90004404:	f44f 6800 	mov.w	r8, #2048	@ 0x800
90004408:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
9000440c:	e9c0 6401 	strd	r6, r4, [r0, #4]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90004410:	e9c0 8308 	strd	r8, r3, [r0, #32]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90004414:	f00a f810 	bl	9000e438 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
90004418:	4620      	mov	r0, r4
9000441a:	f003 facf 	bl	900079bc <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
9000441e:	4620      	mov	r0, r4
90004420:	f003 fb16 	bl	90007a50 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90004424:	f7fc fb4a 	bl	90000abc <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90004428:	4b25      	ldr	r3, [pc, #148]	@ (900044c0 <main+0x514>)
9000442a:	4826      	ldr	r0, [pc, #152]	@ (900044c4 <main+0x518>)
9000442c:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
9000442e:	f005 fabd 	bl	900099ac <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90004432:	4b25      	ldr	r3, [pc, #148]	@ (900044c8 <main+0x51c>)
90004434:	4825      	ldr	r0, [pc, #148]	@ (900044cc <main+0x520>)
90004436:	6003      	str	r3, [r0, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90004438:	8084      	strh	r4, [r0, #4]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
9000443a:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
9000443c:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90004440:	f003 fe36 	bl	900080b0 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90004444:	f7fc fb3e 	bl	90000ac4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90004448:	f7fc fb3a 	bl	90000ac0 <MX_TouchGFX_PreOSInit>
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 12, 0);
9000444c:	4622      	mov	r2, r4
9000444e:	210c      	movs	r1, #12
90004450:	2028      	movs	r0, #40	@ 0x28
90004452:	f003 fd83 	bl	90007f5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
90004456:	2028      	movs	r0, #40	@ 0x28
90004458:	f003 fdbc 	bl	90007fd4 <HAL_NVIC_EnableIRQ>
  osKernelInitialize();
9000445c:	f00b f962 	bl	9000f724 <osKernelInitialize>
  userButtonQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &userButtonQueue_attributes);
90004460:	4a1b      	ldr	r2, [pc, #108]	@ (900044d0 <main+0x524>)
90004462:	4631      	mov	r1, r6
90004464:	4628      	mov	r0, r5
90004466:	f00b fa81 	bl	9000f96c <osMessageQueueNew>
9000446a:	4b1a      	ldr	r3, [pc, #104]	@ (900044d4 <main+0x528>)
9000446c:	4602      	mov	r2, r0
  usbEventQueueHandle = osMessageQueueNew (16, sizeof(USBEvent_t), &usbEventQueue_attributes);
9000446e:	4639      	mov	r1, r7
90004470:	4628      	mov	r0, r5
  userButtonQueueHandle = osMessageQueueNew (16, sizeof(uint8_t), &userButtonQueue_attributes);
90004472:	601a      	str	r2, [r3, #0]
  usbEventQueueHandle = osMessageQueueNew (16, sizeof(USBEvent_t), &usbEventQueue_attributes);
90004474:	4a18      	ldr	r2, [pc, #96]	@ (900044d8 <main+0x52c>)
90004476:	f00b fa79 	bl	9000f96c <osMessageQueueNew>
9000447a:	4b18      	ldr	r3, [pc, #96]	@ (900044dc <main+0x530>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
9000447c:	4a18      	ldr	r2, [pc, #96]	@ (900044e0 <main+0x534>)
9000447e:	4621      	mov	r1, r4
  usbEventQueueHandle = osMessageQueueNew (16, sizeof(USBEvent_t), &usbEventQueue_attributes);
90004480:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90004482:	4818      	ldr	r0, [pc, #96]	@ (900044e4 <main+0x538>)
90004484:	f00b f97a 	bl	9000f77c <osThreadNew>
90004488:	4b17      	ldr	r3, [pc, #92]	@ (900044e8 <main+0x53c>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
9000448a:	4a18      	ldr	r2, [pc, #96]	@ (900044ec <main+0x540>)
9000448c:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
9000448e:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90004490:	4817      	ldr	r0, [pc, #92]	@ (900044f0 <main+0x544>)
90004492:	f00b f973 	bl	9000f77c <osThreadNew>
90004496:	4b17      	ldr	r3, [pc, #92]	@ (900044f4 <main+0x548>)
90004498:	4605      	mov	r5, r0
  USBTaskHandle = osThreadNew(StartTaskUSB, NULL, &USBTask_attributes);
9000449a:	4a17      	ldr	r2, [pc, #92]	@ (900044f8 <main+0x54c>)
9000449c:	4621      	mov	r1, r4
9000449e:	4817      	ldr	r0, [pc, #92]	@ (900044fc <main+0x550>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
900044a0:	601d      	str	r5, [r3, #0]
  USBTaskHandle = osThreadNew(StartTaskUSB, NULL, &USBTask_attributes);
900044a2:	f00b f96b 	bl	9000f77c <osThreadNew>
900044a6:	4b16      	ldr	r3, [pc, #88]	@ (90004500 <main+0x554>)
900044a8:	6018      	str	r0, [r3, #0]
  osKernelStart();
900044aa:	f00b f94d 	bl	9000f748 <osKernelStart>
  while (1)
900044ae:	e7fe      	b.n	900044ae <main+0x502>
900044b0:	24009d60 	.word	0x24009d60
900044b4:	52001000 	.word	0x52001000
900044b8:	24009b54 	.word	0x24009b54
900044bc:	52004140 	.word	0x52004140
900044c0:	52003000 	.word	0x52003000
900044c4:	24009d08 	.word	0x24009d08
900044c8:	58024c00 	.word	0x58024c00
900044cc:	24009dc8 	.word	0x24009dc8
900044d0:	9002ebc0 	.word	0x9002ebc0
900044d4:	24009b44 	.word	0x24009b44
900044d8:	9002eba8 	.word	0x9002eba8
900044dc:	24009b40 	.word	0x24009b40
900044e0:	9002ec20 	.word	0x9002ec20
900044e4:	90003d8d 	.word	0x90003d8d
900044e8:	24009b50 	.word	0x24009b50
900044ec:	9002ebfc 	.word	0x9002ebfc
900044f0:	90000ad5 	.word	0x90000ad5
900044f4:	24009b4c 	.word	0x24009b4c
900044f8:	9002ebd8 	.word	0x9002ebd8
900044fc:	90003d99 	.word	0x90003d99
90004500:	24009b48 	.word	0x24009b48

90004504 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90004504:	4b03      	ldr	r3, [pc, #12]	@ (90004514 <HAL_TIM_PeriodElapsedCallback+0x10>)
90004506:	6802      	ldr	r2, [r0, #0]
90004508:	429a      	cmp	r2, r3
9000450a:	d000      	beq.n	9000450e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
9000450c:	4770      	bx	lr
    HAL_IncTick();
9000450e:	f003 bce9 	b.w	90007ee4 <HAL_IncTick>
90004512:	bf00      	nop
90004514:	40001000 	.word	0x40001000

90004518 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90004518:	4770      	bx	lr
9000451a:	bf00      	nop

9000451c <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000451c:	4b0b      	ldr	r3, [pc, #44]	@ (9000454c <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
9000451e:	2200      	movs	r2, #0
90004520:	210f      	movs	r1, #15
90004522:	f06f 0001 	mvn.w	r0, #1
{
90004526:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90004528:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
9000452c:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000452e:	f044 0402 	orr.w	r4, r4, #2
90004532:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90004536:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
9000453a:	f003 0302 	and.w	r3, r3, #2
9000453e:	9301      	str	r3, [sp, #4]
90004540:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90004542:	b003      	add	sp, #12
90004544:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90004548:	f003 bd08 	b.w	90007f5c <HAL_NVIC_SetPriority>
9000454c:	58024400 	.word	0x58024400

90004550 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90004550:	4b0a      	ldr	r3, [pc, #40]	@ (9000457c <HAL_CRC_MspInit+0x2c>)
90004552:	6802      	ldr	r2, [r0, #0]
90004554:	429a      	cmp	r2, r3
90004556:	d000      	beq.n	9000455a <HAL_CRC_MspInit+0xa>
90004558:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
9000455a:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
9000455e:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90004560:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004564:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90004568:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000456c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90004570:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90004574:	9301      	str	r3, [sp, #4]
90004576:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE END CRC_MspInit 1 */

  }

}
90004578:	b002      	add	sp, #8
9000457a:	4770      	bx	lr
9000457c:	58024c00 	.word	0x58024c00

90004580 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90004580:	4b0f      	ldr	r3, [pc, #60]	@ (900045c0 <HAL_DMA2D_MspInit+0x40>)
90004582:	6802      	ldr	r2, [r0, #0]
90004584:	429a      	cmp	r2, r3
90004586:	d000      	beq.n	9000458a <HAL_DMA2D_MspInit+0xa>
90004588:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000458a:	4b0e      	ldr	r3, [pc, #56]	@ (900045c4 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
9000458c:	205a      	movs	r0, #90	@ 0x5a
9000458e:	2200      	movs	r2, #0
90004590:	2105      	movs	r1, #5
{
90004592:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90004594:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90004598:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000459a:	f044 0410 	orr.w	r4, r4, #16
9000459e:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
900045a2:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
900045a6:	f003 0310 	and.w	r3, r3, #16
900045aa:	9301      	str	r3, [sp, #4]
900045ac:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900045ae:	f003 fcd5 	bl	90007f5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900045b2:	205a      	movs	r0, #90	@ 0x5a

  /* USER CODE END DMA2D_MspInit 1 */

  }

}
900045b4:	b002      	add	sp, #8
900045b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
900045ba:	f003 bd0b 	b.w	90007fd4 <HAL_NVIC_EnableIRQ>
900045be:	bf00      	nop
900045c0:	52001000 	.word	0x52001000
900045c4:	58024400 	.word	0x58024400

900045c8 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
900045c8:	4b3f      	ldr	r3, [pc, #252]	@ (900046c8 <HAL_JPEG_MspInit+0x100>)
900045ca:	6802      	ldr	r2, [r0, #0]
900045cc:	429a      	cmp	r2, r3
900045ce:	d000      	beq.n	900045d2 <HAL_JPEG_MspInit+0xa>
900045d0:	4770      	bx	lr
{
900045d2:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
900045d4:	4b3d      	ldr	r3, [pc, #244]	@ (900046cc <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900045d6:	2211      	movs	r2, #17
900045d8:	4e3d      	ldr	r6, [pc, #244]	@ (900046d0 <HAL_JPEG_MspInit+0x108>)
{
900045da:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900045dc:	4d3d      	ldr	r5, [pc, #244]	@ (900046d4 <HAL_JPEG_MspInit+0x10c>)
900045de:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900045e0:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900045e2:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
900045e4:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900045e8:	493b      	ldr	r1, [pc, #236]	@ (900046d8 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
900045ea:	f042 0220 	orr.w	r2, r2, #32
900045ee:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900045f2:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
900045f4:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900045f8:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
900045fa:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900045fe:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90004600:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90004602:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90004604:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90004606:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90004608:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000460c:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90004610:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90004612:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90004614:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90004618:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000461c:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
9000461e:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90004622:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90004626:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000462a:	2313      	movs	r3, #19
9000462c:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
9000462e:	2302      	movs	r3, #2
90004630:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90004632:	f006 fc29 	bl	9000ae88 <HAL_MDMA_Init>
90004636:	2800      	cmp	r0, #0
90004638:	d13a      	bne.n	900046b0 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
9000463a:	2200      	movs	r2, #0
9000463c:	4824      	ldr	r0, [pc, #144]	@ (900046d0 <HAL_JPEG_MspInit+0x108>)
9000463e:	4611      	mov	r1, r2
90004640:	f006 fcc0 	bl	9000afc4 <HAL_MDMA_ConfigPostRequestMask>
90004644:	2800      	cmp	r0, #0
90004646:	d13c      	bne.n	900046c2 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004648:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000464a:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000464c:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000464e:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90004650:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90004652:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004654:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90004658:	4920      	ldr	r1, [pc, #128]	@ (900046dc <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000465a:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
9000465c:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
9000465e:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90004660:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90004662:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90004666:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000466a:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
9000466c:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000466e:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90004672:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90004674:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004678:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
9000467c:	4815      	ldr	r0, [pc, #84]	@ (900046d4 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
9000467e:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90004680:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90004682:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90004684:	f006 fc00 	bl	9000ae88 <HAL_MDMA_Init>
90004688:	b9c0      	cbnz	r0, 900046bc <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
9000468a:	2200      	movs	r2, #0
9000468c:	4811      	ldr	r0, [pc, #68]	@ (900046d4 <HAL_JPEG_MspInit+0x10c>)
9000468e:	4611      	mov	r1, r2
90004690:	f006 fc98 	bl	9000afc4 <HAL_MDMA_ConfigPostRequestMask>
90004694:	b978      	cbnz	r0, 900046b6 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90004696:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90004698:	2079      	movs	r0, #121	@ 0x79
9000469a:	2200      	movs	r2, #0
9000469c:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000469e:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900046a0:	f003 fc5c 	bl	90007f5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900046a4:	2079      	movs	r0, #121	@ 0x79

  /* USER CODE END JPEG_MspInit 1 */

  }

}
900046a6:	b002      	add	sp, #8
900046a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900046ac:	f003 bc92 	b.w	90007fd4 <HAL_NVIC_EnableIRQ>
      Error_Handler();
900046b0:	f7ff ff32 	bl	90004518 <Error_Handler>
900046b4:	e7c1      	b.n	9000463a <HAL_JPEG_MspInit+0x72>
      Error_Handler();
900046b6:	f7ff ff2f 	bl	90004518 <Error_Handler>
900046ba:	e7ec      	b.n	90004696 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
900046bc:	f7ff ff2c 	bl	90004518 <Error_Handler>
900046c0:	e7e3      	b.n	9000468a <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
900046c2:	f7ff ff29 	bl	90004518 <Error_Handler>
900046c6:	e7bf      	b.n	90004648 <HAL_JPEG_MspInit+0x80>
900046c8:	52003000 	.word	0x52003000
900046cc:	58024400 	.word	0x58024400
900046d0:	24009c9c 	.word	0x24009c9c
900046d4:	24009c30 	.word	0x24009c30
900046d8:	52000200 	.word	0x52000200
900046dc:	520001c0 	.word	0x520001c0

900046e0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
900046e0:	b570      	push	{r4, r5, r6, lr}
900046e2:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900046e4:	2100      	movs	r1, #0
{
900046e6:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900046e8:	22c0      	movs	r2, #192	@ 0xc0
900046ea:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900046ec:	9109      	str	r1, [sp, #36]	@ 0x24
900046ee:	e9cd 1105 	strd	r1, r1, [sp, #20]
900046f2:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900046f6:	f028 f843 	bl	9002c780 <memset>
  if(hltdc->Instance==LTDC)
900046fa:	4b4a      	ldr	r3, [pc, #296]	@ (90004824 <HAL_LTDC_MspInit+0x144>)
900046fc:	6822      	ldr	r2, [r4, #0]
900046fe:	429a      	cmp	r2, r3
90004700:	d001      	beq.n	90004706 <HAL_LTDC_MspInit+0x26>

  /* USER CODE END LTDC_MspInit 1 */

  }

}
90004702:	b03a      	add	sp, #232	@ 0xe8
90004704:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90004706:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004708:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000470a:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
9000470e:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004710:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90004712:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90004714:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90004716:	225d      	movs	r2, #93	@ 0x5d
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90004718:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 93;
9000471a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000471e:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004720:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90004722:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 93;
90004726:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000472a:	f008 ff2b 	bl	9000d584 <HAL_RCCEx_PeriphCLKConfig>
9000472e:	2800      	cmp	r0, #0
90004730:	d174      	bne.n	9000481c <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90004732:	4b3d      	ldr	r3, [pc, #244]	@ (90004828 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90004734:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004736:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004738:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
9000473a:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000473e:	a905      	add	r1, sp, #20
90004740:	483a      	ldr	r0, [pc, #232]	@ (9000482c <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90004742:	f042 0208 	orr.w	r2, r2, #8
90004746:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
9000474a:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
9000474e:	f002 0208 	and.w	r2, r2, #8
90004752:	9200      	str	r2, [sp, #0]
90004754:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
90004756:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000475a:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
9000475e:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004762:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004766:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
9000476a:	9201      	str	r2, [sp, #4]
9000476c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
9000476e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004772:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
90004776:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000477a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000477e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90004782:	9202      	str	r2, [sp, #8]
90004784:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
90004786:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000478a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
9000478e:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004792:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004796:	f402 7200 	and.w	r2, r2, #512	@ 0x200
9000479a:	9203      	str	r2, [sp, #12]
9000479c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000479e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
900047a2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
900047a6:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
900047aa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900047ae:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047b0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047b4:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047b6:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900047b8:	23fc      	movs	r3, #252	@ 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
900047ba:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
900047bc:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900047be:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900047c2:	f003 fe2d 	bl	90008420 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900047c6:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900047ca:	a905      	add	r1, sp, #20
900047cc:	4818      	ldr	r0, [pc, #96]	@ (90004830 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900047ce:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900047d0:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047d4:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900047d8:	f003 fe22 	bl	90008420 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900047dc:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900047e0:	a905      	add	r1, sp, #20
900047e2:	4814      	ldr	r0, [pc, #80]	@ (90004834 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900047e4:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900047e6:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047ea:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900047ee:	f003 fe17 	bl	90008420 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900047f2:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900047f6:	a905      	add	r1, sp, #20
900047f8:	480f      	ldr	r0, [pc, #60]	@ (90004838 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900047fa:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900047fc:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90004800:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004804:	f003 fe0c 	bl	90008420 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90004808:	462a      	mov	r2, r5
9000480a:	2105      	movs	r1, #5
9000480c:	2058      	movs	r0, #88	@ 0x58
9000480e:	f003 fba5 	bl	90007f5c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90004812:	2058      	movs	r0, #88	@ 0x58
90004814:	f003 fbde 	bl	90007fd4 <HAL_NVIC_EnableIRQ>
}
90004818:	b03a      	add	sp, #232	@ 0xe8
9000481a:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
9000481c:	f7ff fe7c 	bl	90004518 <Error_Handler>
90004820:	e787      	b.n	90004732 <HAL_LTDC_MspInit+0x52>
90004822:	bf00      	nop
90004824:	50001000 	.word	0x50001000
90004828:	58024400 	.word	0x58024400
9000482c:	58022800 	.word	0x58022800
90004830:	58022000 	.word	0x58022000
90004834:	58022400 	.word	0x58022400
90004838:	58021c00 	.word	0x58021c00

9000483c <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
9000483c:	4836      	ldr	r0, [pc, #216]	@ (90004918 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000483e:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90004840:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90004842:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90004844:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90004846:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000484a:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000484e:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90004850:	b109      	cbz	r1, 90004856 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90004852:	b038      	add	sp, #224	@ 0xe0
90004854:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
90004856:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004858:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
9000485a:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000485c:	a80a      	add	r0, sp, #40	@ 0x28
9000485e:	f027 ff8f 	bl	9002c780 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90004862:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
90004866:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004868:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000486a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000486e:	f008 fe89 	bl	9000d584 <HAL_RCCEx_PeriphCLKConfig>
90004872:	2800      	cmp	r0, #0
90004874:	d14c      	bne.n	90004910 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
90004876:	4b29      	ldr	r3, [pc, #164]	@ (9000491c <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004878:	f64f 7083 	movw	r0, #65411	@ 0xff83
9000487c:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000487e:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90004880:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004884:	2600      	movs	r6, #0
90004886:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90004888:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000488c:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90004890:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004894:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
90004896:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000489a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
9000489e:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900048a0:	a902      	add	r1, sp, #8
900048a2:	481f      	ldr	r0, [pc, #124]	@ (90004920 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900048a4:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900048a6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900048aa:	f003 fdb9 	bl	90008420 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900048ae:	f248 1233 	movw	r2, #33075	@ 0x8133
900048b2:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900048b4:	a902      	add	r1, sp, #8
900048b6:	481b      	ldr	r0, [pc, #108]	@ (90004924 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900048b8:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900048ba:	e9cd 2302 	strd	r2, r3, [sp, #8]
900048be:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
900048c2:	f003 fdad 	bl	90008420 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900048c6:	f24c 7203 	movw	r2, #50947	@ 0xc703
900048ca:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900048cc:	a902      	add	r1, sp, #8
900048ce:	4816      	ldr	r0, [pc, #88]	@ (90004928 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900048d0:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900048d2:	e9cd 2302 	strd	r2, r3, [sp, #8]
900048d6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
900048da:	f003 fda1 	bl	90008420 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900048de:	f64f 023f 	movw	r2, #63551	@ 0xf83f
900048e2:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900048e4:	a902      	add	r1, sp, #8
900048e6:	4811      	ldr	r0, [pc, #68]	@ (9000492c <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900048e8:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900048ea:	e9cd 2302 	strd	r2, r3, [sp, #8]
900048ee:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900048f2:	f003 fd95 	bl	90008420 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900048f6:	22e0      	movs	r2, #224	@ 0xe0
900048f8:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900048fa:	a902      	add	r1, sp, #8
900048fc:	480c      	ldr	r0, [pc, #48]	@ (90004930 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900048fe:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004900:	e9cd 6704 	strd	r6, r7, [sp, #16]
90004904:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004908:	f003 fd8a 	bl	90008420 <HAL_GPIO_Init>
}
9000490c:	b038      	add	sp, #224	@ 0xe0
9000490e:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90004910:	f7ff fe02 	bl	90004518 <Error_Handler>
90004914:	e7af      	b.n	90004876 <HAL_SDRAM_MspInit+0x3a>
90004916:	bf00      	nop
90004918:	24009df0 	.word	0x24009df0
9000491c:	58024400 	.word	0x58024400
90004920:	58021000 	.word	0x58021000
90004924:	58021800 	.word	0x58021800
90004928:	58020c00 	.word	0x58020c00
9000492c:	58021400 	.word	0x58021400
90004930:	58021c00 	.word	0x58021c00

90004934 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90004934:	4b13      	ldr	r3, [pc, #76]	@ (90004984 <HAL_SDRAM_MspDeInit+0x50>)
90004936:	681a      	ldr	r2, [r3, #0]
90004938:	b102      	cbz	r2, 9000493c <HAL_SDRAM_MspDeInit+0x8>
9000493a:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
9000493c:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
9000493e:	4a12      	ldr	r2, [pc, #72]	@ (90004988 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90004940:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004942:	f64f 7183 	movw	r1, #65411	@ 0xff83
90004946:	4811      	ldr	r0, [pc, #68]	@ (9000498c <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90004948:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000494a:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
9000494e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
90004952:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004956:	f003 fea5 	bl	900086a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000495a:	f248 1133 	movw	r1, #33075	@ 0x8133
9000495e:	480c      	ldr	r0, [pc, #48]	@ (90004990 <HAL_SDRAM_MspDeInit+0x5c>)
90004960:	f003 fea0 	bl	900086a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90004964:	f24c 7103 	movw	r1, #50947	@ 0xc703
90004968:	480a      	ldr	r0, [pc, #40]	@ (90004994 <HAL_SDRAM_MspDeInit+0x60>)
9000496a:	f003 fe9b 	bl	900086a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000496e:	f64f 013f 	movw	r1, #63551	@ 0xf83f
90004972:	4809      	ldr	r0, [pc, #36]	@ (90004998 <HAL_SDRAM_MspDeInit+0x64>)
90004974:	f003 fe96 	bl	900086a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004978:	21e0      	movs	r1, #224	@ 0xe0
9000497a:	4808      	ldr	r0, [pc, #32]	@ (9000499c <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
9000497c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004980:	f003 be90 	b.w	900086a4 <HAL_GPIO_DeInit>
90004984:	24009dec 	.word	0x24009dec
90004988:	58024400 	.word	0x58024400
9000498c:	58021000 	.word	0x58021000
90004990:	58021800 	.word	0x58021800
90004994:	58020c00 	.word	0x58020c00
90004998:	58021400 	.word	0x58021400
9000499c:	58021c00 	.word	0x58021c00

900049a0 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900049a0:	280f      	cmp	r0, #15
900049a2:	d901      	bls.n	900049a8 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900049a4:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900049a6:	4770      	bx	lr
{
900049a8:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900049aa:	4601      	mov	r1, r0
{
900049ac:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
900049ae:	2200      	movs	r2, #0
900049b0:	4604      	mov	r4, r0
900049b2:	2036      	movs	r0, #54	@ 0x36
900049b4:	f003 fad2 	bl	90007f5c <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
900049b8:	2036      	movs	r0, #54	@ 0x36
900049ba:	f003 fb0b 	bl	90007fd4 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
900049be:	4b1b      	ldr	r3, [pc, #108]	@ (90004a2c <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
900049c0:	4a1b      	ldr	r2, [pc, #108]	@ (90004a30 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900049c2:	4669      	mov	r1, sp
900049c4:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
900049c6:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
900049c8:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
900049cc:	f042 0210 	orr.w	r2, r2, #16
900049d0:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
900049d4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
900049d8:	f003 0310 	and.w	r3, r3, #16
900049dc:	9301      	str	r3, [sp, #4]
900049de:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900049e0:	f008 fcc0 	bl	9000d364 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
900049e4:	9b07      	ldr	r3, [sp, #28]
900049e6:	b9c3      	cbnz	r3, 90004a1a <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
900049e8:	f008 fc2c 	bl	9000d244 <HAL_RCC_GetPCLK1Freq>
900049ec:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900049ee:	4911      	ldr	r1, [pc, #68]	@ (90004a34 <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
900049f0:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
900049f2:	4c11      	ldr	r4, [pc, #68]	@ (90004a38 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900049f4:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
900049f8:	4d10      	ldr	r5, [pc, #64]	@ (90004a3c <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900049fa:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900049fe:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004a00:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90004a02:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90004a04:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004a06:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004a08:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
90004a0c:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004a0e:	f009 fd85 	bl	9000e51c <HAL_TIM_Base_Init>
90004a12:	b130      	cbz	r0, 90004a22 <HAL_InitTick+0x82>
    return HAL_ERROR;
90004a14:	2001      	movs	r0, #1
}
90004a16:	b00b      	add	sp, #44	@ 0x2c
90004a18:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90004a1a:	f008 fc13 	bl	9000d244 <HAL_RCC_GetPCLK1Freq>
90004a1e:	0043      	lsls	r3, r0, #1
90004a20:	e7e5      	b.n	900049ee <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
90004a22:	4620      	mov	r0, r4
90004a24:	f009 fe20 	bl	9000e668 <HAL_TIM_Base_Start_IT>
90004a28:	e7f5      	b.n	90004a16 <HAL_InitTick+0x76>
90004a2a:	bf00      	nop
90004a2c:	58024400 	.word	0x58024400
90004a30:	24000138 	.word	0x24000138
90004a34:	431bde83 	.word	0x431bde83
90004a38:	24009df4 	.word	0x24009df4
90004a3c:	40001000 	.word	0x40001000

90004a40 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90004a40:	4770      	bx	lr
90004a42:	bf00      	nop

90004a44 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90004a44:	e7fe      	b.n	90004a44 <HardFault_Handler>
90004a46:	bf00      	nop

90004a48 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90004a48:	e7fe      	b.n	90004a48 <MemManage_Handler>
90004a4a:	bf00      	nop

90004a4c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90004a4c:	e7fe      	b.n	90004a4c <BusFault_Handler>
90004a4e:	bf00      	nop

90004a50 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90004a50:	e7fe      	b.n	90004a50 <UsageFault_Handler>
90004a52:	bf00      	nop

90004a54 <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
90004a54:	4770      	bx	lr
90004a56:	bf00      	nop

90004a58 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90004a58:	4801      	ldr	r0, [pc, #4]	@ (90004a60 <TIM6_DAC_IRQHandler+0x8>)
90004a5a:	f009 be5f 	b.w	9000e71c <HAL_TIM_IRQHandler>
90004a5e:	bf00      	nop
90004a60:	24009df4 	.word	0x24009df4

90004a64 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90004a64:	4801      	ldr	r0, [pc, #4]	@ (90004a6c <LTDC_IRQHandler+0x8>)
90004a66:	f006 b8b7 	b.w	9000abd8 <HAL_LTDC_IRQHandler>
90004a6a:	bf00      	nop
90004a6c:	24009b88 	.word	0x24009b88

90004a70 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90004a70:	4801      	ldr	r0, [pc, #4]	@ (90004a78 <DMA2D_IRQHandler+0x8>)
90004a72:	f003 bbd7 	b.w	90008224 <HAL_DMA2D_IRQHandler>
90004a76:	bf00      	nop
90004a78:	24009d60 	.word	0x24009d60

90004a7c <OTG_FS_IRQHandler>:
void OTG_FS_IRQHandler(void)
{
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_PCD_IRQHandler(&hpcd_USB_OTG_FS);
90004a7c:	4801      	ldr	r0, [pc, #4]	@ (90004a84 <OTG_FS_IRQHandler+0x8>)
90004a7e:	f006 beb5 	b.w	9000b7ec <HAL_PCD_IRQHandler>
90004a82:	bf00      	nop
90004a84:	2400965c 	.word	0x2400965c

90004a88 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004a88:	4801      	ldr	r0, [pc, #4]	@ (90004a90 <JPEG_IRQHandler+0x8>)
90004a8a:	f005 bf93 	b.w	9000a9b4 <HAL_JPEG_IRQHandler>
90004a8e:	bf00      	nop
90004a90:	24009d08 	.word	0x24009d08

90004a94 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004a94:	4804      	ldr	r0, [pc, #16]	@ (90004aa8 <MDMA_IRQHandler+0x14>)
{
90004a96:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004a98:	f006 fb80 	bl	9000b19c <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004a9c:	4803      	ldr	r0, [pc, #12]	@ (90004aac <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
90004a9e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004aa2:	f006 bb7b 	b.w	9000b19c <HAL_MDMA_IRQHandler>
90004aa6:	bf00      	nop
90004aa8:	24009c30 	.word	0x24009c30
90004aac:	24009c9c 	.word	0x24009c9c

90004ab0 <EXTI15_10_IRQHandler>:

/* USER CODE BEGIN 1 */
uint8_t pinstate = 1;
void EXTI15_10_IRQHandler(void)
{
90004ab0:	b510      	push	{r4, lr}
	if (__HAL_GPIO_EXTI_GET_IT(USER_BUTTON_Pin)) {
90004ab2:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
90004ab6:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
90004aba:	049b      	lsls	r3, r3, #18
90004abc:	d400      	bmi.n	90004ac0 <EXTI15_10_IRQHandler+0x10>
		osMessageQueuePut(userButtonQueueHandle, &pinstate, 0U, 0U);
		__HAL_GPIO_EXTI_CLEAR_IT(USER_BUTTON_Pin);
	}
}
90004abe:	bd10      	pop	{r4, pc}
		osMessageQueuePut(userButtonQueueHandle, &pinstate, 0U, 0U);
90004ac0:	2300      	movs	r3, #0
90004ac2:	4805      	ldr	r0, [pc, #20]	@ (90004ad8 <EXTI15_10_IRQHandler+0x28>)
90004ac4:	4905      	ldr	r1, [pc, #20]	@ (90004adc <EXTI15_10_IRQHandler+0x2c>)
90004ac6:	461a      	mov	r2, r3
90004ac8:	6800      	ldr	r0, [r0, #0]
90004aca:	f00a ff8b 	bl	9000f9e4 <osMessageQueuePut>
		__HAL_GPIO_EXTI_CLEAR_IT(USER_BUTTON_Pin);
90004ace:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
90004ad2:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
}
90004ad6:	bd10      	pop	{r4, pc}
90004ad8:	24009b44 	.word	0x24009b44
90004adc:	24000098 	.word	0x24000098

90004ae0 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90004ae0:	2001      	movs	r0, #1
90004ae2:	4770      	bx	lr

90004ae4 <_kill>:

int _kill(int pid, int sig)
{
90004ae4:	b508      	push	{r3, lr}
	errno = EINVAL;
90004ae6:	f027 feff 	bl	9002c8e8 <__errno>
90004aea:	2216      	movs	r2, #22
90004aec:	4603      	mov	r3, r0
	return -1;
}
90004aee:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
90004af2:	601a      	str	r2, [r3, #0]
}
90004af4:	bd08      	pop	{r3, pc}
90004af6:	bf00      	nop

90004af8 <_exit>:

void _exit (int status)
{
90004af8:	b508      	push	{r3, lr}
	errno = EINVAL;
90004afa:	f027 fef5 	bl	9002c8e8 <__errno>
90004afe:	2316      	movs	r3, #22
90004b00:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
90004b02:	e7fe      	b.n	90004b02 <_exit+0xa>

90004b04 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90004b04:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004b06:	1e16      	subs	r6, r2, #0
90004b08:	dd07      	ble.n	90004b1a <_read+0x16>
90004b0a:	460c      	mov	r4, r1
90004b0c:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90004b0e:	f3af 8000 	nop.w
90004b12:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004b16:	42a5      	cmp	r5, r4
90004b18:	d1f9      	bne.n	90004b0e <_read+0xa>
	}

return len;
}
90004b1a:	4630      	mov	r0, r6
90004b1c:	bd70      	pop	{r4, r5, r6, pc}
90004b1e:	bf00      	nop

90004b20 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90004b20:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004b22:	1e16      	subs	r6, r2, #0
90004b24:	dd07      	ble.n	90004b36 <_write+0x16>
90004b26:	460c      	mov	r4, r1
90004b28:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004b2a:	f814 0b01 	ldrb.w	r0, [r4], #1
90004b2e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004b32:	42ac      	cmp	r4, r5
90004b34:	d1f9      	bne.n	90004b2a <_write+0xa>
	}
	return len;
}
90004b36:	4630      	mov	r0, r6
90004b38:	bd70      	pop	{r4, r5, r6, pc}
90004b3a:	bf00      	nop

90004b3c <_close>:

int _close(int file)
{
	return -1;
}
90004b3c:	f04f 30ff 	mov.w	r0, #4294967295
90004b40:	4770      	bx	lr
90004b42:	bf00      	nop

90004b44 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90004b44:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
90004b48:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
90004b4a:	604b      	str	r3, [r1, #4]
}
90004b4c:	4770      	bx	lr
90004b4e:	bf00      	nop

90004b50 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90004b50:	2001      	movs	r0, #1
90004b52:	4770      	bx	lr

90004b54 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90004b54:	2000      	movs	r0, #0
90004b56:	4770      	bx	lr

90004b58 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
90004b58:	4a0c      	ldr	r2, [pc, #48]	@ (90004b8c <_sbrk+0x34>)
{
90004b5a:	b508      	push	{r3, lr}
90004b5c:	4603      	mov	r3, r0
	if (heap_end == 0)
90004b5e:	6810      	ldr	r0, [r2, #0]
90004b60:	b128      	cbz	r0, 90004b6e <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
90004b62:	4403      	add	r3, r0
90004b64:	4669      	mov	r1, sp
90004b66:	428b      	cmp	r3, r1
90004b68:	d808      	bhi.n	90004b7c <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
90004b6a:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
90004b6c:	bd08      	pop	{r3, pc}
		heap_end = &end;
90004b6e:	4908      	ldr	r1, [pc, #32]	@ (90004b90 <_sbrk+0x38>)
90004b70:	4608      	mov	r0, r1
90004b72:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
90004b74:	4669      	mov	r1, sp
90004b76:	4403      	add	r3, r0
90004b78:	428b      	cmp	r3, r1
90004b7a:	d9f6      	bls.n	90004b6a <_sbrk+0x12>
		errno = ENOMEM;
90004b7c:	f027 feb4 	bl	9002c8e8 <__errno>
90004b80:	220c      	movs	r2, #12
90004b82:	4603      	mov	r3, r0
		return (caddr_t) -1;
90004b84:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
90004b88:	601a      	str	r2, [r3, #0]
}
90004b8a:	bd08      	pop	{r3, pc}
90004b8c:	24009e40 	.word	0x24009e40
90004b90:	240252d8 	.word	0x240252d8

90004b94 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DISPLAY = 4;  // segoeui_28_4bpp
    static const touchgfx::FontId MODE = 5;     // segoeui_24_4bpp
    static const uint16_t NUMBER_OF_FONTS = 6;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90004b94:	4770      	bx	lr
90004b96:	bf00      	nop

90004b98 <_ZN23ApplicationFontProviderD0Ev>:
90004b98:	b510      	push	{r4, lr}
90004b9a:	4604      	mov	r4, r0
90004b9c:	2104      	movs	r1, #4
90004b9e:	f026 ffdc 	bl	9002bb5a <_ZdlPvj>
90004ba2:	4620      	mov	r0, r4
90004ba4:	bd10      	pop	{r4, pc}
90004ba6:	bf00      	nop

90004ba8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
90004ba8:	b508      	push	{r3, lr}
    switch (typography)
90004baa:	2905      	cmp	r1, #5
90004bac:	d81c      	bhi.n	90004be8 <_ZN23ApplicationFontProvider7getFontEt+0x40>
90004bae:	e8df f001 	tbb	[pc, r1]
90004bb2:	0b07      	.short	0x0b07
90004bb4:	0317130f 	.word	0x0317130f
    case Typography::DISPLAY:
        // segoeui_28_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
    case Typography::MODE:
        // segoeui_24_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
90004bb8:	f000 fe4c 	bl	90005854 <_ZN17TypedTextDatabase8getFontsEv>
90004bbc:	6940      	ldr	r0, [r0, #20]
    default:
        return 0;
    }
}
90004bbe:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90004bc0:	f000 fe48 	bl	90005854 <_ZN17TypedTextDatabase8getFontsEv>
90004bc4:	6800      	ldr	r0, [r0, #0]
}
90004bc6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004bc8:	f000 fe44 	bl	90005854 <_ZN17TypedTextDatabase8getFontsEv>
90004bcc:	6840      	ldr	r0, [r0, #4]
}
90004bce:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004bd0:	f000 fe40 	bl	90005854 <_ZN17TypedTextDatabase8getFontsEv>
90004bd4:	6880      	ldr	r0, [r0, #8]
}
90004bd6:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
90004bd8:	f000 fe3c 	bl	90005854 <_ZN17TypedTextDatabase8getFontsEv>
90004bdc:	68c0      	ldr	r0, [r0, #12]
}
90004bde:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
90004be0:	f000 fe38 	bl	90005854 <_ZN17TypedTextDatabase8getFontsEv>
90004be4:	6900      	ldr	r0, [r0, #16]
}
90004be6:	bd08      	pop	{r3, pc}
    switch (typography)
90004be8:	2000      	movs	r0, #0
}
90004bea:	bd08      	pop	{r3, pc}

90004bec <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004bec:	4800      	ldr	r0, [pc, #0]	@ (90004bf0 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90004bee:	4770      	bx	lr
90004bf0:	9002ed38 	.word	0x9002ed38

90004bf4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004bf4:	2011      	movs	r0, #17
90004bf6:	4770      	bx	lr

90004bf8 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90004bf8:	b169      	cbz	r1, 90004c16 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004bfa:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004bfc:	b530      	push	{r4, r5, lr}
90004bfe:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90004c00:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004c02:	6895      	ldr	r5, [r2, #8]
90004c04:	f10d 0303 	add.w	r3, sp, #3
90004c08:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
90004c0a:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004c0c:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004c10:	47a8      	blx	r5
        return glyph;
    }
90004c12:	b003      	add	sp, #12
90004c14:	bd30      	pop	{r4, r5, pc}
            return 0;
90004c16:	4608      	mov	r0, r1
    }
90004c18:	4770      	bx	lr
90004c1a:	bf00      	nop

90004c1c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004c1c:	89c0      	ldrh	r0, [r0, #14]
90004c1e:	4770      	bx	lr

90004c20 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90004c20:	8a00      	ldrh	r0, [r0, #16]
90004c22:	4770      	bx	lr

90004c24 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004c24:	88c0      	ldrh	r0, [r0, #6]
90004c26:	4770      	bx	lr

90004c28 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90004c28:	8880      	ldrh	r0, [r0, #4]
90004c2a:	4770      	bx	lr

90004c2c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004c2c:	7a80      	ldrb	r0, [r0, #10]
    }
90004c2e:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90004c32:	4770      	bx	lr

90004c34 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004c34:	7a80      	ldrb	r0, [r0, #10]
    }
90004c36:	09c0      	lsrs	r0, r0, #7
90004c38:	4770      	bx	lr
90004c3a:	bf00      	nop

90004c3c <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004c3c:	2000      	movs	r0, #0
90004c3e:	4770      	bx	lr

90004c40 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90004c40:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 90004c48 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004c44:	4770      	bx	lr
90004c46:	bf00      	nop
90004c48:	00000000 	.word	0x00000000

90004c4c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90004c4c:	4770      	bx	lr
90004c4e:	bf00      	nop

90004c50 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004c50:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004c54:	6808      	ldr	r0, [r1, #0]
90004c56:	6849      	ldr	r1, [r1, #4]
90004c58:	c303      	stmia	r3!, {r0, r1}
    }
90004c5a:	4770      	bx	lr

90004c5c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90004c5c:	4770      	bx	lr
90004c5e:	bf00      	nop

90004c60 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004c60:	4770      	bx	lr
90004c62:	bf00      	nop

90004c64 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004c64:	6041      	str	r1, [r0, #4]
    }
90004c66:	4770      	bx	lr

90004c68 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90004c68:	4770      	bx	lr
90004c6a:	bf00      	nop

90004c6c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004c6c:	4905      	ldr	r1, [pc, #20]	@ (90004c84 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90004c6e:	2200      	movs	r2, #0
// KeyboardScreen

void FrontendApplicationBase::gotoKeyboardScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoKeyboardScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90004c70:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004c74:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004c78:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004c7c:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoKeyboardScreenScreenNoTransition();
    }
90004c80:	4770      	bx	lr
90004c82:	bf00      	nop
90004c84:	90004d2d 	.word	0x90004d2d

90004c88 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90004c88:	2301      	movs	r3, #1
90004c8a:	7203      	strb	r3, [r0, #8]
    }
90004c8c:	4770      	bx	lr
90004c8e:	bf00      	nop

90004c90 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90004c90:	4770      	bx	lr
90004c92:	bf00      	nop

90004c94 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
90004c94:	4770      	bx	lr
90004c96:	bf00      	nop

90004c98 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004c98:	1d01      	adds	r1, r0, #4
90004c9a:	c90e      	ldmia	r1, {r1, r2, r3}
90004c9c:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004ca0:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004ca4:	07db      	lsls	r3, r3, #31
90004ca6:	d502      	bpl.n	90004cae <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004ca8:	f851 300c 	ldr.w	r3, [r1, ip]
90004cac:	589a      	ldr	r2, [r3, r2]
90004cae:	4710      	bx	r2

90004cb0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90004cb0:	6843      	ldr	r3, [r0, #4]
90004cb2:	b13b      	cbz	r3, 90004cc4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004cb4:	6883      	ldr	r3, [r0, #8]
90004cb6:	b10b      	cbz	r3, 90004cbc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004cb8:	2001      	movs	r0, #1
    }
90004cba:	4770      	bx	lr
90004cbc:	68c0      	ldr	r0, [r0, #12]
90004cbe:	f000 0001 	and.w	r0, r0, #1
90004cc2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004cc4:	4618      	mov	r0, r3
90004cc6:	4770      	bx	lr

90004cc8 <_ZN8touchgfx12NoTransitionD0Ev>:
90004cc8:	b510      	push	{r4, lr}
90004cca:	4604      	mov	r4, r0
90004ccc:	210c      	movs	r1, #12
90004cce:	f026 ff44 	bl	9002bb5a <_ZdlPvj>
90004cd2:	4620      	mov	r0, r4
90004cd4:	bd10      	pop	{r4, pc}
90004cd6:	bf00      	nop

90004cd8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004cd8:	b510      	push	{r4, lr}
90004cda:	4604      	mov	r4, r0
90004cdc:	2110      	movs	r1, #16
90004cde:	f026 ff3c 	bl	9002bb5a <_ZdlPvj>
90004ce2:	4620      	mov	r0, r4
90004ce4:	bd10      	pop	{r4, pc}
90004ce6:	bf00      	nop

90004ce8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004ce8:	b510      	push	{r4, lr}
90004cea:	4604      	mov	r4, r0
90004cec:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004cf0:	f026 ff33 	bl	9002bb5a <_ZdlPvj>
90004cf4:	4620      	mov	r0, r4
90004cf6:	bd10      	pop	{r4, pc}

90004cf8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004cf8:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90004cfa:	f014 fce7 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
90004cfe:	6803      	ldr	r3, [r0, #0]
    }
90004d00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004d04:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004d06:	4718      	bx	r3

90004d08 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
90004d08:	b510      	push	{r4, lr}
90004d0a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90004d0c:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
90004d10:	b158      	cbz	r0, 90004d2a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
90004d12:	6803      	ldr	r3, [r0, #0]
90004d14:	68db      	ldr	r3, [r3, #12]
90004d16:	4798      	blx	r3
90004d18:	b138      	cbz	r0, 90004d2a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
90004d1a:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90004d1e:	6803      	ldr	r3, [r0, #0]
90004d20:	689b      	ldr	r3, [r3, #8]
90004d22:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90004d24:	2300      	movs	r3, #0
90004d26:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
90004d2a:	bd10      	pop	{r4, pc}

90004d2c <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoKeyboardScreenScreenNoTransitionImpl()
{
90004d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<KeyboardScreenView, KeyboardScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004d30:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004d34:	4607      	mov	r7, r0
90004d36:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004d38:	68b0      	ldr	r0, [r6, #8]
90004d3a:	6803      	ldr	r3, [r0, #0]
90004d3c:	6a1b      	ldr	r3, [r3, #32]
90004d3e:	4798      	blx	r3
90004d40:	f5b0 7f0e 	cmp.w	r0, #568	@ 0x238
90004d44:	f0c0 809c 	bcc.w	90004e80 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x154>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004d48:	6870      	ldr	r0, [r6, #4]
90004d4a:	6803      	ldr	r3, [r0, #0]
90004d4c:	6a1b      	ldr	r3, [r3, #32]
90004d4e:	4798      	blx	r3
90004d50:	280f      	cmp	r0, #15
90004d52:	f240 80a1 	bls.w	90004e98 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x16c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004d56:	68f0      	ldr	r0, [r6, #12]
90004d58:	6803      	ldr	r3, [r0, #0]
90004d5a:	6a1b      	ldr	r3, [r3, #32]
90004d5c:	4798      	blx	r3
90004d5e:	280b      	cmp	r0, #11
90004d60:	f240 8094 	bls.w	90004e8c <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x160>
    if (*currentTrans)
90004d64:	f8df 9160 	ldr.w	r9, [pc, #352]	@ 90004ec8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90004d68:	f014 fcb0 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90004d6c:	3004      	adds	r0, #4
90004d6e:	f014 fcd2 	bl	90019716 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004d72:	f8d9 0000 	ldr.w	r0, [r9]
90004d76:	b130      	cbz	r0, 90004d86 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004d78:	6803      	ldr	r3, [r0, #0]
90004d7a:	494a      	ldr	r1, [pc, #296]	@ (90004ea4 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x178>)
90004d7c:	68da      	ldr	r2, [r3, #12]
90004d7e:	428a      	cmp	r2, r1
90004d80:	d177      	bne.n	90004e72 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x146>
        (*currentTrans)->~Transition();
90004d82:	681b      	ldr	r3, [r3, #0]
90004d84:	4798      	blx	r3
    if (*currentScreen)
90004d86:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90004ecc <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x1a0>
90004d8a:	f8d8 0000 	ldr.w	r0, [r8]
90004d8e:	2800      	cmp	r0, #0
90004d90:	d061      	beq.n	90004e56 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x12a>
        (*currentScreen)->tearDownScreen();
90004d92:	6803      	ldr	r3, [r0, #0]
90004d94:	695b      	ldr	r3, [r3, #20]
90004d96:	4798      	blx	r3
    if (*currentPresenter)
90004d98:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004d9c:	2800      	cmp	r0, #0
90004d9e:	d055      	beq.n	90004e4c <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x120>
        (*currentPresenter)->deactivate();
90004da0:	6803      	ldr	r3, [r0, #0]
90004da2:	685b      	ldr	r3, [r3, #4]
90004da4:	4798      	blx	r3
    if (*currentScreen)
90004da6:	f8d8 0000 	ldr.w	r0, [r8]
90004daa:	b110      	cbz	r0, 90004db2 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004dac:	6803      	ldr	r3, [r0, #0]
90004dae:	681b      	ldr	r3, [r3, #0]
90004db0:	4798      	blx	r3
    if (*currentPresenter)
90004db2:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004db6:	b110      	cbz	r0, 90004dbe <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004db8:	6803      	ldr	r3, [r0, #0]
90004dba:	689b      	ldr	r3, [r3, #8]
90004dbc:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004dbe:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90004dc0:	2100      	movs	r1, #0
90004dc2:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004dc4:	468b      	mov	fp, r1
90004dc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004dc8:	4798      	blx	r3
90004dca:	4b37      	ldr	r3, [pc, #220]	@ (90004ea8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x17c>)
90004dcc:	4604      	mov	r4, r0
90004dce:	f8c0 b004 	str.w	fp, [r0, #4]
90004dd2:	f880 b008 	strb.w	fp, [r0, #8]
90004dd6:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004dd8:	68b0      	ldr	r0, [r6, #8]
90004dda:	6023      	str	r3, [r4, #0]
90004ddc:	6803      	ldr	r3, [r0, #0]
90004dde:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004de0:	4798      	blx	r3
90004de2:	4605      	mov	r5, r0
90004de4:	f001 f952 	bl	9000608c <_ZN18KeyboardScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004de8:	6870      	ldr	r0, [r6, #4]
90004dea:	4659      	mov	r1, fp
90004dec:	6803      	ldr	r3, [r0, #0]
90004dee:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004df0:	4798      	blx	r3
90004df2:	4606      	mov	r6, r0
90004df4:	4629      	mov	r1, r5
90004df6:	f001 f88d 	bl	90005f14 <_ZN23KeyboardScreenPresenterC1ER18KeyboardScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90004dfa:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004dfc:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004e00:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004e02:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004e06:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004e0a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004e0e:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90004e10:	f8c6 a008 	str.w	sl, [r6, #8]
90004e14:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004e16:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004e18:	4798      	blx	r3
    newPresenter->activate();
90004e1a:	6833      	ldr	r3, [r6, #0]
90004e1c:	4630      	mov	r0, r6
90004e1e:	681b      	ldr	r3, [r3, #0]
90004e20:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004e22:	4621      	mov	r1, r4
90004e24:	4628      	mov	r0, r5
90004e26:	f016 fcc3 	bl	9001b7b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004e2a:	6823      	ldr	r3, [r4, #0]
90004e2c:	491f      	ldr	r1, [pc, #124]	@ (90004eac <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x180>)
90004e2e:	691a      	ldr	r2, [r3, #16]
90004e30:	428a      	cmp	r2, r1
90004e32:	d11a      	bne.n	90004e6a <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x13e>
    newTransition->invalidate();
90004e34:	695b      	ldr	r3, [r3, #20]
90004e36:	4a1e      	ldr	r2, [pc, #120]	@ (90004eb0 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x184>)
90004e38:	4293      	cmp	r3, r2
90004e3a:	d111      	bne.n	90004e60 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x134>
        Application::getInstance()->invalidate();
90004e3c:	f014 fc46 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
90004e40:	6803      	ldr	r3, [r0, #0]
90004e42:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004e44:	b001      	add	sp, #4
90004e46:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004e4a:	4718      	bx	r3
    if (*currentScreen)
90004e4c:	f8d8 0000 	ldr.w	r0, [r8]
90004e50:	2800      	cmp	r0, #0
90004e52:	d1ab      	bne.n	90004dac <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x80>
90004e54:	e7b3      	b.n	90004dbe <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004e56:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004e5a:	2800      	cmp	r0, #0
90004e5c:	d1a0      	bne.n	90004da0 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x74>
90004e5e:	e7ae      	b.n	90004dbe <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004e60:	4620      	mov	r0, r4
90004e62:	b001      	add	sp, #4
90004e64:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004e68:	4718      	bx	r3
    newTransition->init();
90004e6a:	4620      	mov	r0, r4
90004e6c:	4790      	blx	r2
    newTransition->invalidate();
90004e6e:	6823      	ldr	r3, [r4, #0]
90004e70:	e7e0      	b.n	90004e34 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x108>
        (*currentTrans)->tearDown();
90004e72:	4790      	blx	r2
    if (*currentTrans)
90004e74:	f8d9 0000 	ldr.w	r0, [r9]
90004e78:	2800      	cmp	r0, #0
90004e7a:	d084      	beq.n	90004d86 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004e7c:	6803      	ldr	r3, [r0, #0]
90004e7e:	e780      	b.n	90004d82 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004e80:	4b0c      	ldr	r3, [pc, #48]	@ (90004eb4 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x188>)
90004e82:	21a3      	movs	r1, #163	@ 0xa3
90004e84:	4a0c      	ldr	r2, [pc, #48]	@ (90004eb8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x18c>)
90004e86:	480d      	ldr	r0, [pc, #52]	@ (90004ebc <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x190>)
90004e88:	f027 f9de 	bl	9002c248 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004e8c:	4b0c      	ldr	r3, [pc, #48]	@ (90004ec0 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x194>)
90004e8e:	21a5      	movs	r1, #165	@ 0xa5
90004e90:	4a09      	ldr	r2, [pc, #36]	@ (90004eb8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x18c>)
90004e92:	480a      	ldr	r0, [pc, #40]	@ (90004ebc <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x190>)
90004e94:	f027 f9d8 	bl	9002c248 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004e98:	4b0a      	ldr	r3, [pc, #40]	@ (90004ec4 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x198>)
90004e9a:	21a4      	movs	r1, #164	@ 0xa4
90004e9c:	4a06      	ldr	r2, [pc, #24]	@ (90004eb8 <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x18c>)
90004e9e:	4807      	ldr	r0, [pc, #28]	@ (90004ebc <_ZN23FrontendApplicationBase40gotoKeyboardScreenScreenNoTransitionImplEv+0x190>)
90004ea0:	f027 f9d2 	bl	9002c248 <__assert_func>
90004ea4:	90004c5d 	.word	0x90004c5d
90004ea8:	9002f2f0 	.word	0x9002f2f0
90004eac:	90004c61 	.word	0x90004c61
90004eb0:	90004cf9 	.word	0x90004cf9
90004eb4:	9002ee9c 	.word	0x9002ee9c
90004eb8:	9002ef2c 	.word	0x9002ef2c
90004ebc:	9002f00c 	.word	0x9002f00c
90004ec0:	9002f0f8 	.word	0x9002f0f8
90004ec4:	9002f054 	.word	0x9002f054
90004ec8:	240245e0 	.word	0x240245e0
90004ecc:	240245dc 	.word	0x240245dc

90004ed0 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoTouchpadScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoTouchpadScreenScreenNoTransitionImpl()
{
90004ed0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<TouchpadScreenView, TouchpadScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004ed4:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004ed8:	4607      	mov	r7, r0
90004eda:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004edc:	68b0      	ldr	r0, [r6, #8]
90004ede:	6803      	ldr	r3, [r0, #0]
90004ee0:	6a1b      	ldr	r3, [r3, #32]
90004ee2:	4798      	blx	r3
90004ee4:	f641 5343 	movw	r3, #7491	@ 0x1d43
90004ee8:	4298      	cmp	r0, r3
90004eea:	f240 809c 	bls.w	90005026 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004eee:	6870      	ldr	r0, [r6, #4]
90004ef0:	6803      	ldr	r3, [r0, #0]
90004ef2:	6a1b      	ldr	r3, [r3, #32]
90004ef4:	4798      	blx	r3
90004ef6:	280f      	cmp	r0, #15
90004ef8:	f240 80a1 	bls.w	9000503e <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004efc:	68f0      	ldr	r0, [r6, #12]
90004efe:	6803      	ldr	r3, [r0, #0]
90004f00:	6a1b      	ldr	r3, [r3, #32]
90004f02:	4798      	blx	r3
90004f04:	280b      	cmp	r0, #11
90004f06:	f240 8094 	bls.w	90005032 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004f0a:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90005070 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004f0e:	f014 fbdd 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
90004f12:	3004      	adds	r0, #4
90004f14:	f014 fbff 	bl	90019716 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004f18:	f8d9 0000 	ldr.w	r0, [r9]
90004f1c:	b130      	cbz	r0, 90004f2c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x5c>
        (*currentTrans)->tearDown();
90004f1e:	6803      	ldr	r3, [r0, #0]
90004f20:	494a      	ldr	r1, [pc, #296]	@ (9000504c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x17c>)
90004f22:	68da      	ldr	r2, [r3, #12]
90004f24:	428a      	cmp	r2, r1
90004f26:	d177      	bne.n	90005018 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90004f28:	681b      	ldr	r3, [r3, #0]
90004f2a:	4798      	blx	r3
    if (*currentScreen)
90004f2c:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90005074 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x1a4>
90004f30:	f8d8 0000 	ldr.w	r0, [r8]
90004f34:	2800      	cmp	r0, #0
90004f36:	d061      	beq.n	90004ffc <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90004f38:	6803      	ldr	r3, [r0, #0]
90004f3a:	695b      	ldr	r3, [r3, #20]
90004f3c:	4798      	blx	r3
    if (*currentPresenter)
90004f3e:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004f42:	2800      	cmp	r0, #0
90004f44:	d055      	beq.n	90004ff2 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90004f46:	6803      	ldr	r3, [r0, #0]
90004f48:	685b      	ldr	r3, [r3, #4]
90004f4a:	4798      	blx	r3
    if (*currentScreen)
90004f4c:	f8d8 0000 	ldr.w	r0, [r8]
90004f50:	b110      	cbz	r0, 90004f58 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x88>
        (*currentScreen)->~Screen();
90004f52:	6803      	ldr	r3, [r0, #0]
90004f54:	681b      	ldr	r3, [r3, #0]
90004f56:	4798      	blx	r3
    if (*currentPresenter)
90004f58:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004f5c:	b110      	cbz	r0, 90004f64 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x94>
        (*currentPresenter)->~Presenter();
90004f5e:	6803      	ldr	r3, [r0, #0]
90004f60:	689b      	ldr	r3, [r3, #8]
90004f62:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004f64:	68f0      	ldr	r0, [r6, #12]
90004f66:	2100      	movs	r1, #0
90004f68:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004f6a:	468b      	mov	fp, r1
90004f6c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004f6e:	4798      	blx	r3
90004f70:	4b37      	ldr	r3, [pc, #220]	@ (90005050 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x180>)
90004f72:	4604      	mov	r4, r0
90004f74:	f8c0 b004 	str.w	fp, [r0, #4]
90004f78:	f880 b008 	strb.w	fp, [r0, #8]
90004f7c:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004f7e:	68b0      	ldr	r0, [r6, #8]
90004f80:	6023      	str	r3, [r4, #0]
90004f82:	6803      	ldr	r3, [r0, #0]
90004f84:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004f86:	4798      	blx	r3
90004f88:	4605      	mov	r5, r0
90004f8a:	f001 fdad 	bl	90006ae8 <_ZN18TouchpadScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004f8e:	6870      	ldr	r0, [r6, #4]
90004f90:	4659      	mov	r1, fp
90004f92:	6803      	ldr	r3, [r0, #0]
90004f94:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004f96:	4798      	blx	r3
90004f98:	4606      	mov	r6, r0
90004f9a:	4629      	mov	r1, r5
90004f9c:	f001 fd8c 	bl	90006ab8 <_ZN23TouchpadScreenPresenterC1ER18TouchpadScreenView>
    model->bind(newPresenter);
90004fa0:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004fa2:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004fa6:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004fa8:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004fac:	f8c8 5000 	str.w	r5, [r8]
90004fb0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004fb4:	682b      	ldr	r3, [r5, #0]
90004fb6:	f8c6 a008 	str.w	sl, [r6, #8]
90004fba:	68db      	ldr	r3, [r3, #12]
90004fbc:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004fbe:	4798      	blx	r3
    newPresenter->activate();
90004fc0:	6833      	ldr	r3, [r6, #0]
90004fc2:	4630      	mov	r0, r6
90004fc4:	681b      	ldr	r3, [r3, #0]
90004fc6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004fc8:	4621      	mov	r1, r4
90004fca:	4628      	mov	r0, r5
90004fcc:	f016 fbf0 	bl	9001b7b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004fd0:	6823      	ldr	r3, [r4, #0]
90004fd2:	4920      	ldr	r1, [pc, #128]	@ (90005054 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x184>)
90004fd4:	691a      	ldr	r2, [r3, #16]
90004fd6:	428a      	cmp	r2, r1
90004fd8:	d11a      	bne.n	90005010 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90004fda:	695b      	ldr	r3, [r3, #20]
90004fdc:	4a1e      	ldr	r2, [pc, #120]	@ (90005058 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x188>)
90004fde:	4293      	cmp	r3, r2
90004fe0:	d111      	bne.n	90005006 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004fe2:	f014 fb73 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
90004fe6:	6803      	ldr	r3, [r0, #0]
90004fe8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004fea:	b001      	add	sp, #4
90004fec:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004ff0:	4718      	bx	r3
    if (*currentScreen)
90004ff2:	f8d8 0000 	ldr.w	r0, [r8]
90004ff6:	2800      	cmp	r0, #0
90004ff8:	d1ab      	bne.n	90004f52 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x82>
90004ffa:	e7b3      	b.n	90004f64 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x94>
    if (*currentPresenter)
90004ffc:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005000:	2800      	cmp	r0, #0
90005002:	d1a0      	bne.n	90004f46 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x76>
90005004:	e7ae      	b.n	90004f64 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x94>
    newTransition->invalidate();
90005006:	4620      	mov	r0, r4
90005008:	b001      	add	sp, #4
9000500a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000500e:	4718      	bx	r3
    newTransition->init();
90005010:	4620      	mov	r0, r4
90005012:	4790      	blx	r2
    newTransition->invalidate();
90005014:	6823      	ldr	r3, [r4, #0]
90005016:	e7e0      	b.n	90004fda <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90005018:	4790      	blx	r2
    if (*currentTrans)
9000501a:	f8d9 0000 	ldr.w	r0, [r9]
9000501e:	2800      	cmp	r0, #0
90005020:	d084      	beq.n	90004f2c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x5c>
        (*currentTrans)->~Transition();
90005022:	6803      	ldr	r3, [r0, #0]
90005024:	e780      	b.n	90004f28 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x58>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005026:	4b0d      	ldr	r3, [pc, #52]	@ (9000505c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x18c>)
90005028:	21a3      	movs	r1, #163	@ 0xa3
9000502a:	4a0d      	ldr	r2, [pc, #52]	@ (90005060 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x190>)
9000502c:	480d      	ldr	r0, [pc, #52]	@ (90005064 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x194>)
9000502e:	f027 f90b 	bl	9002c248 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005032:	4b0d      	ldr	r3, [pc, #52]	@ (90005068 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x198>)
90005034:	21a5      	movs	r1, #165	@ 0xa5
90005036:	4a0a      	ldr	r2, [pc, #40]	@ (90005060 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x190>)
90005038:	480a      	ldr	r0, [pc, #40]	@ (90005064 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x194>)
9000503a:	f027 f905 	bl	9002c248 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000503e:	4b0b      	ldr	r3, [pc, #44]	@ (9000506c <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x19c>)
90005040:	21a4      	movs	r1, #164	@ 0xa4
90005042:	4a07      	ldr	r2, [pc, #28]	@ (90005060 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x190>)
90005044:	4807      	ldr	r0, [pc, #28]	@ (90005064 <_ZN23FrontendApplicationBase40gotoTouchpadScreenScreenNoTransitionImplEv+0x194>)
90005046:	f027 f8ff 	bl	9002c248 <__assert_func>
9000504a:	bf00      	nop
9000504c:	90004c5d 	.word	0x90004c5d
90005050:	9002f2f0 	.word	0x9002f2f0
90005054:	90004c61 	.word	0x90004c61
90005058:	90004cf9 	.word	0x90004cf9
9000505c:	9002ee9c 	.word	0x9002ee9c
90005060:	9002f19c 	.word	0x9002f19c
90005064:	9002f00c 	.word	0x9002f00c
90005068:	9002f0f8 	.word	0x9002f0f8
9000506c:	9002f054 	.word	0x9002f054
90005070:	240245e0 	.word	0x240245e0
90005074:	240245dc 	.word	0x240245dc

90005078 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90005078:	b570      	push	{r4, r5, r6, lr}
9000507a:	4604      	mov	r4, r0
9000507c:	4615      	mov	r5, r2
9000507e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90005080:	f014 fbea 	bl	90019858 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90005084:	4a22      	ldr	r2, [pc, #136]	@ (90005110 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90005086:	2300      	movs	r3, #0
      frontendHeap(heap),
90005088:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
9000508c:	6014      	str	r4, [r2, #0]
        return instance;
9000508e:	4d21      	ldr	r5, [pc, #132]	@ (90005114 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90005090:	4a21      	ldr	r2, [pc, #132]	@ (90005118 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90005092:	6828      	ldr	r0, [r5, #0]
90005094:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90005096:	4a21      	ldr	r2, [pc, #132]	@ (9000511c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90005098:	4921      	ldr	r1, [pc, #132]	@ (90005120 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
9000509a:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
9000509e:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
900050a2:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
900050a6:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
900050aa:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900050ae:	6802      	ldr	r2, [r0, #0]
900050b0:	6892      	ldr	r2, [r2, #8]
900050b2:	428a      	cmp	r2, r1
900050b4:	d129      	bne.n	9000510a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
900050b6:	f44f 7380 	mov.w	r3, #256	@ 0x100
900050ba:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
900050be:	2000      	movs	r0, #0
900050c0:	f000 fb0e 	bl	900056e0 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
900050c4:	682b      	ldr	r3, [r5, #0]
900050c6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900050ca:	b1e2      	cbz	r2, 90005106 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
900050cc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900050ce:	b1d0      	cbz	r0, 90005106 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
900050d0:	f01e fad5 	bl	9002367e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
900050d4:	682b      	ldr	r3, [r5, #0]
900050d6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900050da:	b192      	cbz	r2, 90005102 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
900050dc:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900050de:	b180      	cbz	r0, 90005102 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900050e0:	f01e fb48 	bl	90023774 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
900050e4:	682b      	ldr	r3, [r5, #0]
900050e6:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900050ea:	b12a      	cbz	r2, 900050f8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
900050ec:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900050ee:	b118      	cbz	r0, 900050f8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
900050f0:	f01e fb4c 	bl	9002378c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
900050f4:	4620      	mov	r0, r4
900050f6:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900050f8:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
900050fa:	f01e fb47 	bl	9002378c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
900050fe:	4620      	mov	r0, r4
90005100:	bd70      	pop	{r4, r5, r6, pc}
90005102:	6898      	ldr	r0, [r3, #8]
90005104:	e7ec      	b.n	900050e0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
90005106:	6898      	ldr	r0, [r3, #8]
90005108:	e7e2      	b.n	900050d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000510a:	4619      	mov	r1, r3
9000510c:	4790      	blx	r2
9000510e:	e7d6      	b.n	900050be <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90005110:	240245ec 	.word	0x240245ec
90005114:	24024598 	.word	0x24024598
90005118:	9002f29c 	.word	0x9002f29c
9000511c:	9002f284 	.word	0x9002f284
90005120:	90000d6d 	.word	0x90000d6d

90005124 <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005124:	4905      	ldr	r1, [pc, #20]	@ (9000513c <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv+0x18>)
90005126:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90005128:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
9000512c:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90005130:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005134:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005138:	4770      	bx	lr
9000513a:	bf00      	nop
9000513c:	90004d2d 	.word	0x90004d2d

90005140 <_ZN23FrontendApplicationBase36gotoTouchpadScreenScreenNoTransitionEv>:
90005140:	4905      	ldr	r1, [pc, #20]	@ (90005158 <_ZN23FrontendApplicationBase36gotoTouchpadScreenScreenNoTransitionEv+0x18>)
90005142:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90005144:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90005148:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
9000514c:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005150:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005154:	4770      	bx	lr
90005156:	bf00      	nop
90005158:	90004ed1 	.word	0x90004ed1

9000515c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
9000515c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
9000515e:	4770      	bx	lr

90005160 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90005160:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90005162:	4770      	bx	lr

90005164 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90005164:	4770      	bx	lr
90005166:	bf00      	nop

90005168 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
90005168:	888b      	ldrh	r3, [r1, #4]
9000516a:	69c0      	ldr	r0, [r0, #28]
9000516c:	0adb      	lsrs	r3, r3, #11
9000516e:	680a      	ldr	r2, [r1, #0]
90005170:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90005174:	4410      	add	r0, r2
90005176:	4770      	bx	lr

90005178 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90005178:	b1fa      	cbz	r2, 900051ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
9000517a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
9000517c:	7b14      	ldrb	r4, [r2, #12]
9000517e:	b1d4      	cbz	r4, 900051b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90005180:	f892 c00d 	ldrb.w	ip, [r2, #13]
90005184:	f892 e00b 	ldrb.w	lr, [r2, #11]
90005188:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
9000518c:	6a03      	ldr	r3, [r0, #32]
9000518e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
90005192:	ea4e 0202 	orr.w	r2, lr, r2
90005196:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000519a:	eb03 0084 	add.w	r0, r3, r4, lsl #2
9000519e:	e004      	b.n	900051aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
900051a0:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
900051a4:	d807      	bhi.n	900051b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900051a6:	4283      	cmp	r3, r0
900051a8:	d005      	beq.n	900051b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
900051aa:	881a      	ldrh	r2, [r3, #0]
900051ac:	428a      	cmp	r2, r1
900051ae:	d1f7      	bne.n	900051a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
900051b0:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
900051b4:	bd10      	pop	{r4, pc}
        return 0;
900051b6:	2000      	movs	r0, #0
}
900051b8:	bd10      	pop	{r4, pc}
        return 0;
900051ba:	4610      	mov	r0, r2
}
900051bc:	4770      	bx	lr
900051be:	bf00      	nop

900051c0 <_ZN8touchgfx13GeneratedFontD0Ev>:
900051c0:	b510      	push	{r4, lr}
900051c2:	4604      	mov	r4, r0
900051c4:	212c      	movs	r1, #44	@ 0x2c
900051c6:	f026 fcc8 	bl	9002bb5a <_ZdlPvj>
900051ca:	4620      	mov	r0, r4
900051cc:	bd10      	pop	{r4, pc}
900051ce:	bf00      	nop

900051d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051d0:	b530      	push	{r4, r5, lr}
900051d2:	b08b      	sub	sp, #44	@ 0x2c
900051d4:	4604      	mov	r4, r0
900051d6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
900051da:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051dc:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
900051e0:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051e2:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
900051e6:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051e8:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
900051ec:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051ee:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
900051f2:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051f4:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
900051f8:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900051fa:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
900051fe:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005200:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
90005204:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005206:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
9000520a:	9508      	str	r5, [sp, #32]
9000520c:	f015 fea8 	bl	9001af60 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
90005210:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
90005212:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90005214:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90005216:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90005218:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
9000521a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9000521c:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
9000521e:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90005220:	62a3      	str	r3, [r4, #40]	@ 0x28
90005222:	4b02      	ldr	r3, [pc, #8]	@ (9000522c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90005224:	6023      	str	r3, [r4, #0]
}
90005226:	b00b      	add	sp, #44	@ 0x2c
90005228:	bd30      	pop	{r4, r5, pc}
9000522a:	bf00      	nop
9000522c:	9002f314 	.word	0x9002f314

90005230 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
90005230:	4770      	bx	lr
90005232:	bf00      	nop

90005234 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90005234:	4770      	bx	lr
90005236:	bf00      	nop

90005238 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
90005238:	4770      	bx	lr
9000523a:	bf00      	nop

9000523c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
9000523c:	4770      	bx	lr
9000523e:	bf00      	nop

90005240 <_ZN22KeyboardScreenViewBaseD1Ev>:
}

KeyboardScreenViewBase::~KeyboardScreenViewBase()
{

}
90005240:	4770      	bx	lr
90005242:	bf00      	nop

90005244 <_ZN22KeyboardScreenViewBase11setupScreenEv>:

void KeyboardScreenViewBase::setupScreen()
{

}
90005244:	4770      	bx	lr
90005246:	bf00      	nop

90005248 <_ZN22KeyboardScreenViewBaseD0Ev>:
KeyboardScreenViewBase::~KeyboardScreenViewBase()
90005248:	b510      	push	{r4, lr}
9000524a:	4604      	mov	r4, r0
}
9000524c:	216c      	movs	r1, #108	@ 0x6c
9000524e:	f026 fc84 	bl	9002bb5a <_ZdlPvj>
90005252:	4620      	mov	r0, r4
90005254:	bd10      	pop	{r4, pc}
90005256:	bf00      	nop

90005258 <_ZN22KeyboardScreenViewBase18goToTouchpadScreenEv>:

void KeyboardScreenViewBase::goToTouchpadScreen()
{
90005258:	b508      	push	{r3, lr}
     */
    virtual void goToTouchpadScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000525a:	f014 fa37 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
    //Interaction1
    //When goToTouchpadScreen is called change screen to TouchpadScreen
    //Go to TouchpadScreen with no screen transition
    application().gotoTouchpadScreenScreenNoTransition();
}
9000525e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    application().gotoTouchpadScreenScreenNoTransition();
90005262:	f7ff bf6d 	b.w	90005140 <_ZN23FrontendApplicationBase36gotoTouchpadScreenScreenNoTransitionEv>
90005266:	bf00      	nop

90005268 <_ZN22KeyboardScreenViewBaseC1Ev>:
KeyboardScreenViewBase::KeyboardScreenViewBase()
90005268:	b510      	push	{r4, lr}
9000526a:	4604      	mov	r4, r0
        : presenter(0)
9000526c:	f016 f8f4 	bl	9001b458 <_ZN8touchgfx6ScreenC1Ev>
          touchable(false),
90005270:	f44f 7280 	mov.w	r2, #256	@ 0x100
90005274:	480e      	ldr	r0, [pc, #56]	@ (900052b0 <_ZN22KeyboardScreenViewBaseC1Ev+0x48>)
90005276:	2300      	movs	r3, #0
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90005278:	490e      	ldr	r1, [pc, #56]	@ (900052b4 <_ZN22KeyboardScreenViewBaseC1Ev+0x4c>)
9000527a:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
9000527e:	22ff      	movs	r2, #255	@ 0xff
90005280:	6020      	str	r0, [r4, #0]
90005282:	f884 2066 	strb.w	r2, [r4, #102]	@ 0x66
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90005286:	f04f 427f 	mov.w	r2, #4278190080	@ 0xff000000
        rect.x = x;
9000528a:	480b      	ldr	r0, [pc, #44]	@ (900052b8 <_ZN22KeyboardScreenViewBaseC1Ev+0x50>)
        : Widget(), alpha(255), color(0)
9000528c:	6421      	str	r1, [r4, #64]	@ 0x40
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
9000528e:	f104 0140 	add.w	r1, r4, #64	@ 0x40
90005292:	63e3      	str	r3, [r4, #60]	@ 0x3c
        color = newColor;
90005294:	66a2      	str	r2, [r4, #104]	@ 0x68
90005296:	e9c4 3011 	strd	r3, r0, [r4, #68]	@ 0x44
          nextSibling(0),
9000529a:	e9c4 3315 	strd	r3, r3, [r4, #84]	@ 0x54
9000529e:	1d20      	adds	r0, r4, #4
          cachedAbsX(0),
900052a0:	e9c4 3317 	strd	r3, r3, [r4, #92]	@ 0x5c
        rect.x = x;
900052a4:	e9c4 3313 	strd	r3, r3, [r4, #76]	@ 0x4c
900052a8:	f00d ff98 	bl	900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900052ac:	4620      	mov	r0, r4
900052ae:	bd10      	pop	{r4, pc}
900052b0:	9002f37c 	.word	0x9002f37c
900052b4:	900302b4 	.word	0x900302b4
900052b8:	011001e0 	.word	0x011001e0

900052bc <__tcf_0>:

touchgfx::GeneratedFont& getFont_segoeui_20_4bpp();

touchgfx::GeneratedFont& getFont_segoeui_20_4bpp()
{
    static touchgfx::GeneratedFont segoeui_20_4bpp(glyphs_segoeui_20_4bpp, 110, 24, 20, 0, 0, 4, 1, 2, 1, unicodes_segoeui_20_4bpp, kerning_segoeui_20_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900052bc:	4770      	bx	lr
900052be:	bf00      	nop

900052c0 <_Z23getFont_segoeui_20_4bppv>:
{
900052c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont segoeui_20_4bpp(glyphs_segoeui_20_4bpp, 110, 24, 20, 0, 0, 4, 1, 2, 1, unicodes_segoeui_20_4bpp, kerning_segoeui_20_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900052c2:	4d1a      	ldr	r5, [pc, #104]	@ (9000532c <_Z23getFont_segoeui_20_4bppv+0x6c>)
{
900052c4:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont segoeui_20_4bpp(glyphs_segoeui_20_4bpp, 110, 24, 20, 0, 0, 4, 1, 2, 1, unicodes_segoeui_20_4bpp, kerning_segoeui_20_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900052c6:	682c      	ldr	r4, [r5, #0]
900052c8:	f3bf 8f5b 	dmb	ish
900052cc:	f014 0401 	ands.w	r4, r4, #1
900052d0:	d002      	beq.n	900052d8 <_Z23getFont_segoeui_20_4bppv+0x18>
    return segoeui_20_4bpp;
}
900052d2:	4817      	ldr	r0, [pc, #92]	@ (90005330 <_Z23getFont_segoeui_20_4bppv+0x70>)
900052d4:	b00f      	add	sp, #60	@ 0x3c
900052d6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont segoeui_20_4bpp(glyphs_segoeui_20_4bpp, 110, 24, 20, 0, 0, 4, 1, 2, 1, unicodes_segoeui_20_4bpp, kerning_segoeui_20_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900052d8:	4628      	mov	r0, r5
900052da:	f026 fc40 	bl	9002bb5e <__cxa_guard_acquire>
900052de:	2800      	cmp	r0, #0
900052e0:	d0f7      	beq.n	900052d2 <_Z23getFont_segoeui_20_4bppv+0x12>
900052e2:	4914      	ldr	r1, [pc, #80]	@ (90005334 <_Z23getFont_segoeui_20_4bppv+0x74>)
900052e4:	2301      	movs	r3, #1
900052e6:	223f      	movs	r2, #63	@ 0x3f
900052e8:	4811      	ldr	r0, [pc, #68]	@ (90005330 <_Z23getFont_segoeui_20_4bppv+0x70>)
900052ea:	9306      	str	r3, [sp, #24]
900052ec:	9304      	str	r3, [sp, #16]
900052ee:	2304      	movs	r3, #4
900052f0:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
900052f4:	4910      	ldr	r1, [pc, #64]	@ (90005338 <_Z23getFont_segoeui_20_4bppv+0x78>)
900052f6:	9108      	str	r1, [sp, #32]
900052f8:	2114      	movs	r1, #20
900052fa:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
900052fe:	e9cd 4302 	strd	r4, r3, [sp, #8]
90005302:	e9cd 1400 	strd	r1, r4, [sp]
90005306:	4a0d      	ldr	r2, [pc, #52]	@ (9000533c <_Z23getFont_segoeui_20_4bppv+0x7c>)
90005308:	2402      	movs	r4, #2
9000530a:	2318      	movs	r3, #24
9000530c:	490c      	ldr	r1, [pc, #48]	@ (90005340 <_Z23getFont_segoeui_20_4bppv+0x80>)
9000530e:	9207      	str	r2, [sp, #28]
90005310:	226e      	movs	r2, #110	@ 0x6e
90005312:	9405      	str	r4, [sp, #20]
90005314:	f7ff ff5c 	bl	900051d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005318:	480a      	ldr	r0, [pc, #40]	@ (90005344 <_Z23getFont_segoeui_20_4bppv+0x84>)
9000531a:	f026 ffb3 	bl	9002c284 <atexit>
9000531e:	4628      	mov	r0, r5
90005320:	f026 fc29 	bl	9002bb76 <__cxa_guard_release>
}
90005324:	4802      	ldr	r0, [pc, #8]	@ (90005330 <_Z23getFont_segoeui_20_4bppv+0x70>)
90005326:	b00f      	add	sp, #60	@ 0x3c
90005328:	bd30      	pop	{r4, r5, pc}
9000532a:	bf00      	nop
9000532c:	24009e44 	.word	0x24009e44
90005330:	24009e48 	.word	0x24009e48
90005334:	9002f3ac 	.word	0x9002f3ac
90005338:	90030b4c 	.word	0x90030b4c
9000533c:	900312f8 	.word	0x900312f8
90005340:	90204a84 	.word	0x90204a84
90005344:	900052bd 	.word	0x900052bd

90005348 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_segoeui_24_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_segoeui_24_4bpp();

touchgfx::GeneratedFont& getFont_segoeui_24_4bpp()
{
    static touchgfx::GeneratedFont segoeui_24_4bpp(glyphs_segoeui_24_4bpp, 0, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_segoeui_24_4bpp, kerning_segoeui_24_4bpp, 0, 0, 0, 0);
90005348:	4770      	bx	lr
9000534a:	bf00      	nop

9000534c <_Z23getFont_segoeui_24_4bppv>:
{
9000534c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont segoeui_24_4bpp(glyphs_segoeui_24_4bpp, 0, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_segoeui_24_4bpp, kerning_segoeui_24_4bpp, 0, 0, 0, 0);
9000534e:	4d18      	ldr	r5, [pc, #96]	@ (900053b0 <_Z23getFont_segoeui_24_4bppv+0x64>)
{
90005350:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont segoeui_24_4bpp(glyphs_segoeui_24_4bpp, 0, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_segoeui_24_4bpp, kerning_segoeui_24_4bpp, 0, 0, 0, 0);
90005352:	682c      	ldr	r4, [r5, #0]
90005354:	f3bf 8f5b 	dmb	ish
90005358:	f014 0401 	ands.w	r4, r4, #1
9000535c:	d002      	beq.n	90005364 <_Z23getFont_segoeui_24_4bppv+0x18>
    return segoeui_24_4bpp;
}
9000535e:	4815      	ldr	r0, [pc, #84]	@ (900053b4 <_Z23getFont_segoeui_24_4bppv+0x68>)
90005360:	b00f      	add	sp, #60	@ 0x3c
90005362:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont segoeui_24_4bpp(glyphs_segoeui_24_4bpp, 0, 24, 24, 0, 0, 4, 1, 0, 0, unicodes_segoeui_24_4bpp, kerning_segoeui_24_4bpp, 0, 0, 0, 0);
90005364:	4628      	mov	r0, r5
90005366:	f026 fbfa 	bl	9002bb5e <__cxa_guard_acquire>
9000536a:	2800      	cmp	r0, #0
9000536c:	d0f7      	beq.n	9000535e <_Z23getFont_segoeui_24_4bppv+0x12>
9000536e:	4912      	ldr	r1, [pc, #72]	@ (900053b8 <_Z23getFont_segoeui_24_4bppv+0x6c>)
90005370:	2318      	movs	r3, #24
90005372:	4a12      	ldr	r2, [pc, #72]	@ (900053bc <_Z23getFont_segoeui_24_4bppv+0x70>)
90005374:	9300      	str	r3, [sp, #0]
90005376:	480f      	ldr	r0, [pc, #60]	@ (900053b4 <_Z23getFont_segoeui_24_4bppv+0x68>)
90005378:	e9cd 2107 	strd	r2, r1, [sp, #28]
9000537c:	2101      	movs	r1, #1
9000537e:	2204      	movs	r2, #4
90005380:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005384:	e9cd 2103 	strd	r2, r1, [sp, #12]
90005388:	e9cd 4409 	strd	r4, r4, [sp, #36]	@ 0x24
9000538c:	4622      	mov	r2, r4
9000538e:	490c      	ldr	r1, [pc, #48]	@ (900053c0 <_Z23getFont_segoeui_24_4bppv+0x74>)
90005390:	e9cd 4405 	strd	r4, r4, [sp, #20]
90005394:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005398:	f7ff ff1a 	bl	900051d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
9000539c:	4809      	ldr	r0, [pc, #36]	@ (900053c4 <_Z23getFont_segoeui_24_4bppv+0x78>)
9000539e:	f026 ff71 	bl	9002c284 <atexit>
900053a2:	4628      	mov	r0, r5
900053a4:	f026 fbe7 	bl	9002bb76 <__cxa_guard_release>
}
900053a8:	4802      	ldr	r0, [pc, #8]	@ (900053b4 <_Z23getFont_segoeui_24_4bppv+0x68>)
900053aa:	b00f      	add	sp, #60	@ 0x3c
900053ac:	bd30      	pop	{r4, r5, pc}
900053ae:	bf00      	nop
900053b0:	24009e74 	.word	0x24009e74
900053b4:	24009e78 	.word	0x24009e78
900053b8:	90030e8c 	.word	0x90030e8c
900053bc:	9003130c 	.word	0x9003130c
900053c0:	90205088 	.word	0x90205088
900053c4:	90005349 	.word	0x90005349

900053c8 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable segoeui_contextualFormsTable;
touchgfx::GeneratedFont& getFont_segoeui_28_4bpp();

touchgfx::GeneratedFont& getFont_segoeui_28_4bpp()
{
    static touchgfx::GeneratedFont segoeui_28_4bpp(glyphs_segoeui_28_4bpp, 110, 34, 28, 0, 0, 4, 1, 3, 1, unicodes_segoeui_28_4bpp, kerning_segoeui_28_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900053c8:	4770      	bx	lr
900053ca:	bf00      	nop

900053cc <_Z23getFont_segoeui_28_4bppv>:
{
900053cc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont segoeui_28_4bpp(glyphs_segoeui_28_4bpp, 110, 34, 28, 0, 0, 4, 1, 3, 1, unicodes_segoeui_28_4bpp, kerning_segoeui_28_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900053ce:	4d1a      	ldr	r5, [pc, #104]	@ (90005438 <_Z23getFont_segoeui_28_4bppv+0x6c>)
{
900053d0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont segoeui_28_4bpp(glyphs_segoeui_28_4bpp, 110, 34, 28, 0, 0, 4, 1, 3, 1, unicodes_segoeui_28_4bpp, kerning_segoeui_28_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900053d2:	682c      	ldr	r4, [r5, #0]
900053d4:	f3bf 8f5b 	dmb	ish
900053d8:	f014 0401 	ands.w	r4, r4, #1
900053dc:	d002      	beq.n	900053e4 <_Z23getFont_segoeui_28_4bppv+0x18>
    return segoeui_28_4bpp;
}
900053de:	4817      	ldr	r0, [pc, #92]	@ (9000543c <_Z23getFont_segoeui_28_4bppv+0x70>)
900053e0:	b00f      	add	sp, #60	@ 0x3c
900053e2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont segoeui_28_4bpp(glyphs_segoeui_28_4bpp, 110, 34, 28, 0, 0, 4, 1, 3, 1, unicodes_segoeui_28_4bpp, kerning_segoeui_28_4bpp, 63, 0, 0, &segoeui_contextualFormsTable);
900053e4:	4628      	mov	r0, r5
900053e6:	f026 fbba 	bl	9002bb5e <__cxa_guard_acquire>
900053ea:	2800      	cmp	r0, #0
900053ec:	d0f7      	beq.n	900053de <_Z23getFont_segoeui_28_4bppv+0x12>
900053ee:	4914      	ldr	r1, [pc, #80]	@ (90005440 <_Z23getFont_segoeui_28_4bppv+0x74>)
900053f0:	2301      	movs	r3, #1
900053f2:	223f      	movs	r2, #63	@ 0x3f
900053f4:	4811      	ldr	r0, [pc, #68]	@ (9000543c <_Z23getFont_segoeui_28_4bppv+0x70>)
900053f6:	9306      	str	r3, [sp, #24]
900053f8:	9304      	str	r3, [sp, #16]
900053fa:	2304      	movs	r3, #4
900053fc:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
90005400:	4910      	ldr	r1, [pc, #64]	@ (90005444 <_Z23getFont_segoeui_28_4bppv+0x78>)
90005402:	9108      	str	r1, [sp, #32]
90005404:	211c      	movs	r1, #28
90005406:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
9000540a:	e9cd 4302 	strd	r4, r3, [sp, #8]
9000540e:	e9cd 1400 	strd	r1, r4, [sp]
90005412:	4a0d      	ldr	r2, [pc, #52]	@ (90005448 <_Z23getFont_segoeui_28_4bppv+0x7c>)
90005414:	2403      	movs	r4, #3
90005416:	2322      	movs	r3, #34	@ 0x22
90005418:	490c      	ldr	r1, [pc, #48]	@ (9000544c <_Z23getFont_segoeui_28_4bppv+0x80>)
9000541a:	9207      	str	r2, [sp, #28]
9000541c:	226e      	movs	r2, #110	@ 0x6e
9000541e:	9405      	str	r4, [sp, #20]
90005420:	f7ff fed6 	bl	900051d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005424:	480a      	ldr	r0, [pc, #40]	@ (90005450 <_Z23getFont_segoeui_28_4bppv+0x84>)
90005426:	f026 ff2d 	bl	9002c284 <atexit>
9000542a:	4628      	mov	r0, r5
9000542c:	f026 fba3 	bl	9002bb76 <__cxa_guard_release>
}
90005430:	4802      	ldr	r0, [pc, #8]	@ (9000543c <_Z23getFont_segoeui_28_4bppv+0x70>)
90005432:	b00f      	add	sp, #60	@ 0x3c
90005434:	bd30      	pop	{r4, r5, pc}
90005436:	bf00      	nop
90005438:	24009ea4 	.word	0x24009ea4
9000543c:	24009ea8 	.word	0x24009ea8
90005440:	9002f3ac 	.word	0x9002f3ac
90005444:	90030e90 	.word	0x90030e90
90005448:	90031310 	.word	0x90031310
9000544c:	90205098 	.word	0x90205098
90005450:	900053c9 	.word	0x900053c9

90005454 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005454:	4770      	bx	lr
90005456:	bf00      	nop

90005458 <_Z23getFont_verdana_10_4bppv>:
{
90005458:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000545a:	4d18      	ldr	r5, [pc, #96]	@ (900054bc <_Z23getFont_verdana_10_4bppv+0x64>)
{
9000545c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000545e:	682c      	ldr	r4, [r5, #0]
90005460:	f3bf 8f5b 	dmb	ish
90005464:	f014 0401 	ands.w	r4, r4, #1
90005468:	d002      	beq.n	90005470 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
9000546a:	4815      	ldr	r0, [pc, #84]	@ (900054c0 <_Z23getFont_verdana_10_4bppv+0x68>)
9000546c:	b00f      	add	sp, #60	@ 0x3c
9000546e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005470:	4628      	mov	r0, r5
90005472:	f026 fb74 	bl	9002bb5e <__cxa_guard_acquire>
90005476:	2800      	cmp	r0, #0
90005478:	d0f7      	beq.n	9000546a <_Z23getFont_verdana_10_4bppv+0x12>
9000547a:	213f      	movs	r1, #63	@ 0x3f
9000547c:	2201      	movs	r2, #1
9000547e:	230a      	movs	r3, #10
90005480:	2004      	movs	r0, #4
90005482:	9204      	str	r2, [sp, #16]
90005484:	9300      	str	r3, [sp, #0]
90005486:	9003      	str	r0, [sp, #12]
90005488:	480d      	ldr	r0, [pc, #52]	@ (900054c0 <_Z23getFont_verdana_10_4bppv+0x68>)
9000548a:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000548e:	490d      	ldr	r1, [pc, #52]	@ (900054c4 <_Z23getFont_verdana_10_4bppv+0x6c>)
90005490:	9108      	str	r1, [sp, #32]
90005492:	490d      	ldr	r1, [pc, #52]	@ (900054c8 <_Z23getFont_verdana_10_4bppv+0x70>)
90005494:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005498:	9107      	str	r1, [sp, #28]
9000549a:	490c      	ldr	r1, [pc, #48]	@ (900054cc <_Z23getFont_verdana_10_4bppv+0x74>)
9000549c:	e9cd 4405 	strd	r4, r4, [sp, #20]
900054a0:	e9cd 4401 	strd	r4, r4, [sp, #4]
900054a4:	f7ff fe94 	bl	900051d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900054a8:	4809      	ldr	r0, [pc, #36]	@ (900054d0 <_Z23getFont_verdana_10_4bppv+0x78>)
900054aa:	f026 feeb 	bl	9002c284 <atexit>
900054ae:	4628      	mov	r0, r5
900054b0:	f026 fb61 	bl	9002bb76 <__cxa_guard_release>
}
900054b4:	4802      	ldr	r0, [pc, #8]	@ (900054c0 <_Z23getFont_verdana_10_4bppv+0x68>)
900054b6:	b00f      	add	sp, #60	@ 0x3c
900054b8:	bd30      	pop	{r4, r5, pc}
900054ba:	bf00      	nop
900054bc:	24009ed4 	.word	0x24009ed4
900054c0:	24009ed8 	.word	0x24009ed8
900054c4:	900312ec 	.word	0x900312ec
900054c8:	90031324 	.word	0x90031324
900054cc:	9020569c 	.word	0x9020569c
900054d0:	90005455 	.word	0x90005455

900054d4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900054d4:	4770      	bx	lr
900054d6:	bf00      	nop

900054d8 <_Z23getFont_verdana_20_4bppv>:
{
900054d8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900054da:	4d18      	ldr	r5, [pc, #96]	@ (9000553c <_Z23getFont_verdana_20_4bppv+0x64>)
{
900054dc:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900054de:	682c      	ldr	r4, [r5, #0]
900054e0:	f3bf 8f5b 	dmb	ish
900054e4:	f014 0401 	ands.w	r4, r4, #1
900054e8:	d002      	beq.n	900054f0 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
900054ea:	4815      	ldr	r0, [pc, #84]	@ (90005540 <_Z23getFont_verdana_20_4bppv+0x68>)
900054ec:	b00f      	add	sp, #60	@ 0x3c
900054ee:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900054f0:	4628      	mov	r0, r5
900054f2:	f026 fb34 	bl	9002bb5e <__cxa_guard_acquire>
900054f6:	2800      	cmp	r0, #0
900054f8:	d0f7      	beq.n	900054ea <_Z23getFont_verdana_20_4bppv+0x12>
900054fa:	213f      	movs	r1, #63	@ 0x3f
900054fc:	2201      	movs	r2, #1
900054fe:	2314      	movs	r3, #20
90005500:	2004      	movs	r0, #4
90005502:	9204      	str	r2, [sp, #16]
90005504:	9300      	str	r3, [sp, #0]
90005506:	9003      	str	r0, [sp, #12]
90005508:	480d      	ldr	r0, [pc, #52]	@ (90005540 <_Z23getFont_verdana_20_4bppv+0x68>)
9000550a:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000550e:	490d      	ldr	r1, [pc, #52]	@ (90005544 <_Z23getFont_verdana_20_4bppv+0x6c>)
90005510:	9108      	str	r1, [sp, #32]
90005512:	490d      	ldr	r1, [pc, #52]	@ (90005548 <_Z23getFont_verdana_20_4bppv+0x70>)
90005514:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005518:	9107      	str	r1, [sp, #28]
9000551a:	490c      	ldr	r1, [pc, #48]	@ (9000554c <_Z23getFont_verdana_20_4bppv+0x74>)
9000551c:	e9cd 4405 	strd	r4, r4, [sp, #20]
90005520:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005524:	f7ff fe54 	bl	900051d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005528:	4809      	ldr	r0, [pc, #36]	@ (90005550 <_Z23getFont_verdana_20_4bppv+0x78>)
9000552a:	f026 feab 	bl	9002c284 <atexit>
9000552e:	4628      	mov	r0, r5
90005530:	f026 fb21 	bl	9002bb76 <__cxa_guard_release>
}
90005534:	4802      	ldr	r0, [pc, #8]	@ (90005540 <_Z23getFont_verdana_20_4bppv+0x68>)
90005536:	b00f      	add	sp, #60	@ 0x3c
90005538:	bd30      	pop	{r4, r5, pc}
9000553a:	bf00      	nop
9000553c:	24009f04 	.word	0x24009f04
90005540:	24009f08 	.word	0x24009f08
90005544:	900312f0 	.word	0x900312f0
90005548:	90031328 	.word	0x90031328
9000554c:	902056ac 	.word	0x902056ac
90005550:	900054d5 	.word	0x900054d5

90005554 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005554:	4770      	bx	lr
90005556:	bf00      	nop

90005558 <_Z23getFont_verdana_40_4bppv>:
{
90005558:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000555a:	4d18      	ldr	r5, [pc, #96]	@ (900055bc <_Z23getFont_verdana_40_4bppv+0x64>)
{
9000555c:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000555e:	682c      	ldr	r4, [r5, #0]
90005560:	f3bf 8f5b 	dmb	ish
90005564:	f014 0401 	ands.w	r4, r4, #1
90005568:	d002      	beq.n	90005570 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
9000556a:	4815      	ldr	r0, [pc, #84]	@ (900055c0 <_Z23getFont_verdana_40_4bppv+0x68>)
9000556c:	b00f      	add	sp, #60	@ 0x3c
9000556e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90005570:	4628      	mov	r0, r5
90005572:	f026 faf4 	bl	9002bb5e <__cxa_guard_acquire>
90005576:	2800      	cmp	r0, #0
90005578:	d0f7      	beq.n	9000556a <_Z23getFont_verdana_40_4bppv+0x12>
9000557a:	213f      	movs	r1, #63	@ 0x3f
9000557c:	2201      	movs	r2, #1
9000557e:	2328      	movs	r3, #40	@ 0x28
90005580:	2004      	movs	r0, #4
90005582:	9204      	str	r2, [sp, #16]
90005584:	9300      	str	r3, [sp, #0]
90005586:	9003      	str	r0, [sp, #12]
90005588:	480d      	ldr	r0, [pc, #52]	@ (900055c0 <_Z23getFont_verdana_40_4bppv+0x68>)
9000558a:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000558e:	490d      	ldr	r1, [pc, #52]	@ (900055c4 <_Z23getFont_verdana_40_4bppv+0x6c>)
90005590:	9108      	str	r1, [sp, #32]
90005592:	490d      	ldr	r1, [pc, #52]	@ (900055c8 <_Z23getFont_verdana_40_4bppv+0x70>)
90005594:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005598:	9107      	str	r1, [sp, #28]
9000559a:	490c      	ldr	r1, [pc, #48]	@ (900055cc <_Z23getFont_verdana_40_4bppv+0x74>)
9000559c:	e9cd 4405 	strd	r4, r4, [sp, #20]
900055a0:	e9cd 4401 	strd	r4, r4, [sp, #4]
900055a4:	f7ff fe14 	bl	900051d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900055a8:	4809      	ldr	r0, [pc, #36]	@ (900055d0 <_Z23getFont_verdana_40_4bppv+0x78>)
900055aa:	f026 fe6b 	bl	9002c284 <atexit>
900055ae:	4628      	mov	r0, r5
900055b0:	f026 fae1 	bl	9002bb76 <__cxa_guard_release>
}
900055b4:	4802      	ldr	r0, [pc, #8]	@ (900055c0 <_Z23getFont_verdana_40_4bppv+0x68>)
900055b6:	b00f      	add	sp, #60	@ 0x3c
900055b8:	bd30      	pop	{r4, r5, pc}
900055ba:	bf00      	nop
900055bc:	24009f34 	.word	0x24009f34
900055c0:	24009f38 	.word	0x24009f38
900055c4:	900312f4 	.word	0x900312f4
900055c8:	9003132c 	.word	0x9003132c
900055cc:	902056bc 	.word	0x902056bc
900055d0:	90005555 	.word	0x90005555

900055d4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
900055d4:	2000      	movs	r0, #0
900055d6:	4770      	bx	lr

900055d8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
900055d8:	2000      	movs	r0, #0
900055da:	4770      	bx	lr

900055dc <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900055dc:	b40e      	push	{r1, r2, r3}
900055de:	b500      	push	{lr}
900055e0:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900055e2:	2100      	movs	r1, #0
{
900055e4:	ab03      	add	r3, sp, #12
900055e6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900055ea:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900055ec:	f014 ffbc 	bl	9001a568 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900055f0:	b002      	add	sp, #8
900055f2:	f85d eb04 	ldr.w	lr, [sp], #4
900055f6:	b003      	add	sp, #12
900055f8:	4770      	bx	lr
900055fa:	bf00      	nop

900055fc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900055fc:	b40c      	push	{r2, r3}
900055fe:	b500      	push	{lr}
90005600:	b083      	sub	sp, #12
90005602:	ab04      	add	r3, sp, #16
90005604:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90005608:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
9000560a:	f014 ffad 	bl	9001a568 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000560e:	b003      	add	sp, #12
90005610:	f85d eb04 	ldr.w	lr, [sp], #4
90005614:	b002      	add	sp, #8
90005616:	4770      	bx	lr

90005618 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005618:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
9000561a:	b510      	push	{r4, lr}
9000561c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
9000561e:	b133      	cbz	r3, 9000562e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90005620:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
90005622:	b39b      	cbz	r3, 9000568c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90005624:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90005626:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9000562a:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
9000562c:	b923      	cbnz	r3, 90005638 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
9000562e:	4620      	mov	r0, r4
}
90005630:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90005634:	f016 bcd6 	b.w	9001bfe4 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005638:	f016 fdd2 	bl	9001c1e0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
9000563c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9000563e:	2b01      	cmp	r3, #1
90005640:	d92a      	bls.n	90005698 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90005642:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90005644:	1c53      	adds	r3, r2, #1
90005646:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005648:	2b09      	cmp	r3, #9
9000564a:	d812      	bhi.n	90005672 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
9000564c:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90005650:	f640 103f 	movw	r0, #2367	@ 0x93f
90005654:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
90005656:	4281      	cmp	r1, r0
90005658:	d1e9      	bne.n	9000562e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000565a:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000565e:	0052      	lsls	r2, r2, #1
90005660:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
90005662:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
90005666:	4422      	add	r2, r4
90005668:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
9000566c:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
9000566e:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
90005670:	e7dd      	b.n	9000562e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
90005672:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90005676:	f640 113f 	movw	r1, #2367	@ 0x93f
9000567a:	89db      	ldrh	r3, [r3, #14]
9000567c:	428b      	cmp	r3, r1
9000567e:	d1d6      	bne.n	9000562e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90005680:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90005684:	2300      	movs	r3, #0
90005686:	0052      	lsls	r2, r2, #1
90005688:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
9000568a:	e7ea      	b.n	90005662 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
9000568c:	4b05      	ldr	r3, [pc, #20]	@ (900056a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
9000568e:	21c5      	movs	r1, #197	@ 0xc5
90005690:	4a05      	ldr	r2, [pc, #20]	@ (900056a8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
90005692:	4806      	ldr	r0, [pc, #24]	@ (900056ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90005694:	f026 fdd8 	bl	9002c248 <__assert_func>
            assert(offset < used);
90005698:	4b05      	ldr	r3, [pc, #20]	@ (900056b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
9000569a:	21cb      	movs	r1, #203	@ 0xcb
9000569c:	4a05      	ldr	r2, [pc, #20]	@ (900056b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
9000569e:	4803      	ldr	r0, [pc, #12]	@ (900056ac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900056a0:	f026 fdd2 	bl	9002c248 <__assert_func>
900056a4:	9002f808 	.word	0x9002f808
900056a8:	9002f814 	.word	0x9002f814
900056ac:	9002f8c0 	.word	0x9002f8c0
900056b0:	9002f90c 	.word	0x9002f90c
900056b4:	9002f91c 	.word	0x9002f91c

900056b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900056b8:	f016 bc5d 	b.w	9001bf76 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900056bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
900056bc:	b510      	push	{r4, lr}
900056be:	b086      	sub	sp, #24
900056c0:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
900056c4:	ac0a      	add	r4, sp, #40	@ 0x28
{
900056c6:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900056ca:	461a      	mov	r2, r3
900056cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900056ce:	4661      	mov	r1, ip
900056d0:	9401      	str	r4, [sp, #4]
900056d2:	9300      	str	r3, [sp, #0]
900056d4:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
900056d6:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
900056d8:	f013 fbb6 	bl	90018e48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
900056dc:	b006      	add	sp, #24
900056de:	bd10      	pop	{r4, pc}

900056e0 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
900056e0:	b9e0      	cbnz	r0, 9000571c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
900056e2:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
900056e4:	4b13      	ldr	r3, [pc, #76]	@ (90005734 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
900056e6:	681b      	ldr	r3, [r3, #0]
900056e8:	b1cb      	cbz	r3, 9000571e <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900056ea:	4c13      	ldr	r4, [pc, #76]	@ (90005738 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900056ec:	4813      	ldr	r0, [pc, #76]	@ (9000573c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900056ee:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900056f2:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900056f4:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900056f6:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900056f8:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900056fa:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900056fc:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900056fe:	4b10      	ldr	r3, [pc, #64]	@ (90005740 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90005700:	2200      	movs	r2, #0
90005702:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90005704:	f000 f8a6 	bl	90005854 <_ZN17TypedTextDatabase8getFontsEv>
90005708:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
9000570a:	f000 f8a1 	bl	90005850 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
9000570e:	4b0d      	ldr	r3, [pc, #52]	@ (90005744 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90005710:	4a0d      	ldr	r2, [pc, #52]	@ (90005748 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90005712:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90005714:	4b0d      	ldr	r3, [pc, #52]	@ (9000574c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90005716:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005718:	8018      	strh	r0, [r3, #0]
    }
}
9000571a:	bd38      	pop	{r3, r4, r5, pc}
9000571c:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000571e:	4c0c      	ldr	r4, [pc, #48]	@ (90005750 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90005720:	4905      	ldr	r1, [pc, #20]	@ (90005738 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90005722:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90005724:	480b      	ldr	r0, [pc, #44]	@ (90005754 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90005726:	4b05      	ldr	r3, [pc, #20]	@ (9000573c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005728:	4a0b      	ldr	r2, [pc, #44]	@ (90005758 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
9000572a:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
9000572c:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
9000572e:	2c00      	cmp	r4, #0
90005730:	d1e5      	bne.n	900056fe <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90005732:	bd38      	pop	{r3, r4, r5, pc}
90005734:	24009f70 	.word	0x24009f70
90005738:	24009f68 	.word	0x24009f68
9000573c:	24009f64 	.word	0x24009f64
90005740:	24009f6c 	.word	0x24009f6c
90005744:	240245f0 	.word	0x240245f0
90005748:	240245f8 	.word	0x240245f8
9000574c:	240245f4 	.word	0x240245f4
90005750:	902056ec 	.word	0x902056ec
90005754:	902056d8 	.word	0x902056d8
90005758:	902056cc 	.word	0x902056cc

9000575c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
9000575c:	4a04      	ldr	r2, [pc, #16]	@ (90005770 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
9000575e:	4b05      	ldr	r3, [pc, #20]	@ (90005774 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90005760:	6812      	ldr	r2, [r2, #0]
90005762:	681b      	ldr	r3, [r3, #0]
90005764:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90005768:	eb03 0040 	add.w	r0, r3, r0, lsl #1
9000576c:	4770      	bx	lr
9000576e:	bf00      	nop
90005770:	24009f64 	.word	0x24009f64
90005774:	24009f68 	.word	0x24009f68

90005778 <_ZN22TouchpadScreenViewBaseD1Ev>:
}

TouchpadScreenViewBase::~TouchpadScreenViewBase()
{

}
90005778:	4770      	bx	lr
9000577a:	bf00      	nop

9000577c <_ZN22TouchpadScreenViewBase11setupScreenEv>:

void TouchpadScreenViewBase::setupScreen()
{

}
9000577c:	4770      	bx	lr
9000577e:	bf00      	nop

90005780 <_ZN22TouchpadScreenViewBaseD0Ev>:
TouchpadScreenViewBase::~TouchpadScreenViewBase()
90005780:	b510      	push	{r4, lr}
90005782:	4604      	mov	r4, r0
}
90005784:	2198      	movs	r1, #152	@ 0x98
90005786:	f026 f9e8 	bl	9002bb5a <_ZdlPvj>
9000578a:	4620      	mov	r0, r4
9000578c:	bd10      	pop	{r4, pc}
9000578e:	bf00      	nop

90005790 <_ZN22TouchpadScreenViewBase18goToKeyboardScreenEv>:

void TouchpadScreenViewBase::goToKeyboardScreen()
{
90005790:	b508      	push	{r3, lr}
     */
    virtual void goToKeyboardScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005792:	f013 ff9b 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
    //Interaction1
    //When goToKeyboardScreen is called change screen to KeyboardScreen
    //Go to KeyboardScreen with no screen transition
    application().gotoKeyboardScreenScreenNoTransition();
}
90005796:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    application().gotoKeyboardScreenScreenNoTransition();
9000579a:	f7ff bcc3 	b.w	90005124 <_ZN23FrontendApplicationBase36gotoKeyboardScreenScreenNoTransitionEv>
9000579e:	bf00      	nop

900057a0 <_ZN22TouchpadScreenViewBaseC1Ev>:
TouchpadScreenViewBase::TouchpadScreenViewBase()
900057a0:	b5f0      	push	{r4, r5, r6, r7, lr}
900057a2:	b083      	sub	sp, #12
900057a4:	4604      	mov	r4, r0
900057a6:	f015 fe57 	bl	9001b458 <_ZN8touchgfx6ScreenC1Ev>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
900057aa:	f64f 73ff 	movw	r3, #65535	@ 0xffff
          touchable(false),
900057ae:	f44f 7280 	mov.w	r2, #256	@ 0x100
900057b2:	2500      	movs	r5, #0
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
900057b4:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
900057b8:	f104 066c 	add.w	r6, r4, #108	@ 0x6c
900057bc:	f884 3094 	strb.w	r3, [r4, #148]	@ 0x94
900057c0:	1d27      	adds	r7, r4, #4
900057c2:	f8ad 3004 	strh.w	r3, [sp, #4]
    {
        Image::setBitmap(bmp);
900057c6:	4630      	mov	r0, r6
        : Widget(), alpha(255), color(0)
900057c8:	4b1d      	ldr	r3, [pc, #116]	@ (90005840 <_ZN22TouchpadScreenViewBaseC1Ev+0xa0>)
900057ca:	f8a4 2064 	strh.w	r2, [r4, #100]	@ 0x64
900057ce:	f8a4 2090 	strh.w	r2, [r4, #144]	@ 0x90
900057d2:	6423      	str	r3, [r4, #64]	@ 0x40
900057d4:	23ff      	movs	r3, #255	@ 0xff
        : Widget(), bitmap(bmp), alpha(255)
900057d6:	4a1b      	ldr	r2, [pc, #108]	@ (90005844 <_ZN22TouchpadScreenViewBaseC1Ev+0xa4>)
900057d8:	491b      	ldr	r1, [pc, #108]	@ (90005848 <_ZN22TouchpadScreenViewBaseC1Ev+0xa8>)
900057da:	66e2      	str	r2, [r4, #108]	@ 0x6c
900057dc:	6021      	str	r1, [r4, #0]
        Image::setBitmap(bmp);
900057de:	a901      	add	r1, sp, #4
900057e0:	f884 3066 	strb.w	r3, [r4, #102]	@ 0x66
900057e4:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
900057e6:	66a5      	str	r5, [r4, #104]	@ 0x68
        : x(0), y(0), width(0), height(0)
900057e8:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
900057ec:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
900057f0:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
900057f4:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
900057f8:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
900057fc:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
90005800:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90005804:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90005808:	f010 ffaf 	bl	9001676a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        rect.x = x;
9000580c:	4b0f      	ldr	r3, [pc, #60]	@ (9000584c <_ZN22TouchpadScreenViewBaseC1Ev+0xac>)
9000580e:	f104 0140 	add.w	r1, r4, #64	@ 0x40
90005812:	4638      	mov	r0, r7
90005814:	e9c4 5311 	strd	r5, r3, [r4, #68]	@ 0x44
        color = newColor;
90005818:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
9000581c:	66a3      	str	r3, [r4, #104]	@ 0x68
9000581e:	f00d fcdd 	bl	900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_LINES_ID));
90005822:	a901      	add	r1, sp, #4
90005824:	4630      	mov	r0, r6
90005826:	6725      	str	r5, [r4, #112]	@ 0x70
90005828:	f8ad 5004 	strh.w	r5, [sp, #4]
9000582c:	f010 ff9d 	bl	9001676a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005830:	4638      	mov	r0, r7
90005832:	4631      	mov	r1, r6
90005834:	f00d fcd2 	bl	900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005838:	4620      	mov	r0, r4
9000583a:	b003      	add	sp, #12
9000583c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000583e:	bf00      	nop
90005840:	900302b4 	.word	0x900302b4
90005844:	9003031c 	.word	0x9003031c
90005848:	9002f9f8 	.word	0x9002f9f8
9000584c:	011001e0 	.word	0x011001e0

90005850 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90005850:	2003      	movs	r0, #3
90005852:	4770      	bx	lr

90005854 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90005854:	4800      	ldr	r0, [pc, #0]	@ (90005858 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90005856:	4770      	bx	lr
90005858:	24009f74 	.word	0x24009f74

9000585c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 5:
        touchgfx_fonts[5] = &(getFont_segoeui_24_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
9000585c:	b510      	push	{r4, lr}
};
9000585e:	4c0a      	ldr	r4, [pc, #40]	@ (90005888 <_GLOBAL__sub_I_touchgfx_fonts+0x2c>)
    &(getFont_verdana_20_4bpp()),
90005860:	f7ff fe3a 	bl	900054d8 <_Z23getFont_verdana_20_4bppv>
};
90005864:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90005866:	f7ff fe77 	bl	90005558 <_Z23getFont_verdana_40_4bppv>
};
9000586a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
9000586c:	f7ff fdf4 	bl	90005458 <_Z23getFont_verdana_10_4bppv>
};
90005870:	60a0      	str	r0, [r4, #8]
    &(getFont_segoeui_20_4bpp()),
90005872:	f7ff fd25 	bl	900052c0 <_Z23getFont_segoeui_20_4bppv>
};
90005876:	60e0      	str	r0, [r4, #12]
    &(getFont_segoeui_28_4bpp()),
90005878:	f7ff fda8 	bl	900053cc <_Z23getFont_segoeui_28_4bppv>
};
9000587c:	6120      	str	r0, [r4, #16]
    &(getFont_segoeui_24_4bpp())
9000587e:	f7ff fd65 	bl	9000534c <_Z23getFont_segoeui_24_4bppv>
};
90005882:	6160      	str	r0, [r4, #20]
} // namespace TypedTextDatabase
90005884:	bd10      	pop	{r4, pc}
90005886:	bf00      	nop
90005888:	24009f74 	.word	0x24009f74

9000588c <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
9000588c:	b410      	push	{r4}
    pointArray = 0;
9000588e:	2400      	movs	r4, #0
90005890:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
90005892:	600c      	str	r4, [r1, #0]
    commandArray = 0;
90005894:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
90005896:	601c      	str	r4, [r3, #0]
}
90005898:	f85d 4b04 	ldr.w	r4, [sp], #4
9000589c:	4770      	bx	lr
9000589e:	bf00      	nop

900058a0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
900058a0:	4770      	bx	lr
900058a2:	bf00      	nop

900058a4 <_ZN19FrontendApplicationD0Ev>:
900058a4:	b510      	push	{r4, lr}
900058a6:	4604      	mov	r4, r0
900058a8:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
900058ac:	f026 f955 	bl	9002bb5a <_ZdlPvj>
900058b0:	4620      	mov	r0, r4
900058b2:	bd10      	pop	{r4, pc}

900058b4 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
900058b4:	b510      	push	{r4, lr}
900058b6:	4604      	mov	r4, r0
    {
        model.tick();
900058b8:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
900058bc:	f000 ffc4 	bl	90006848 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
900058c0:	4620      	mov	r0, r4
    }
900058c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
900058c6:	f013 bf83 	b.w	900197d0 <_ZN8touchgfx11Application15handleTickEventEv>
900058ca:	bf00      	nop

900058cc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
900058cc:	b510      	push	{r4, lr}
900058ce:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
900058d0:	f7ff fbd2 	bl	90005078 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
900058d4:	4b01      	ldr	r3, [pc, #4]	@ (900058dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
900058d6:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
900058d8:	6023      	str	r3, [r4, #0]
}
900058da:	bd10      	pop	{r4, pc}
900058dc:	9002fa30 	.word	0x9002fa30

900058e0 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
900058e0:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900058e2:	4770      	bx	lr

900058e4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev>:
    {46, Rect(FOURTH_ROW_X_OFFSET + KEY_OFFSET * 8, FOURTH_ROW_Y_OFFSET, KEY_WIDTH, KEY_HEIGHT), BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID},
    {47, Rect(FOURTH_ROW_X_OFFSET + KEY_OFFSET * 9, FOURTH_ROW_Y_OFFSET, KEY_WIDTH, KEY_HEIGHT), BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID},
    {48, Rect(FOURTH_ROW_X_OFFSET + KEY_OFFSET * 10, FOURTH_ROW_Y_OFFSET, KEY_WIDTH, KEY_HEIGHT), BITMAP_KEYBOARD_KEY_HIGHLIGHTED_ID},

    {49, Rect(64*2, 54*4, SPACE_WIDTH, SPACE_HEIGHT), BITMAP_KEYBOARD_SPACE_HIGHLIGHTED_ID}
};
900058e4:	4bf8      	ldr	r3, [pc, #992]	@ (90005cc8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3e4>)
900058e6:	210c      	movs	r1, #12
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900058e8:	4af8      	ldr	r2, [pc, #992]	@ (90005ccc <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3e8>)
900058ea:	2001      	movs	r0, #1
900058ec:	f04f 0c10 	mov.w	ip, #16

void FullScreenKeyboard::keyPressedhandler(Unicode::UnicodeChar keyChar)
{
	touchgfx_printf("Key pressed: %c\n", keyChar);
	keyboard.setBufferPosition(0);
}
900058f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900058f4:	f04f 0b40 	mov.w	fp, #64	@ 0x40
900058f8:	f04f 0703 	mov.w	r7, #3
900058fc:	f04f 0a20 	mov.w	sl, #32
90005900:	f04f 0902 	mov.w	r9, #2
90005904:	f8c3 b00e 	str.w	fp, [r3, #14]
90005908:	f04f 0b60 	mov.w	fp, #96	@ 0x60
9000590c:	761f      	strb	r7, [r3, #24]
9000590e:	f04f 0705 	mov.w	r7, #5
90005912:	f8c3 b01a 	str.w	fp, [r3, #26]
90005916:	f04f 0b04 	mov.w	fp, #4
9000591a:	f883 7030 	strb.w	r7, [r3, #48]	@ 0x30
9000591e:	f04f 0706 	mov.w	r7, #6
90005922:	f883 b024 	strb.w	fp, [r3, #36]	@ 0x24
90005926:	f04f 0b80 	mov.w	fp, #128	@ 0x80
9000592a:	f883 703c 	strb.w	r7, [r3, #60]	@ 0x3c
9000592e:	f04f 0707 	mov.w	r7, #7
90005932:	f8c3 b026 	str.w	fp, [r3, #38]	@ 0x26
90005936:	f04f 0ba0 	mov.w	fp, #160	@ 0xa0
9000593a:	f883 7048 	strb.w	r7, [r3, #72]	@ 0x48
9000593e:	f04f 0708 	mov.w	r7, #8
90005942:	f8c3 b032 	str.w	fp, [r3, #50]	@ 0x32
90005946:	f04f 0bc0 	mov.w	fp, #192	@ 0xc0
9000594a:	7018      	strb	r0, [r3, #0]
9000594c:	f04f 0e0a 	mov.w	lr, #10
90005950:	f8c3 b03e 	str.w	fp, [r3, #62]	@ 0x3e
90005954:	f04f 0be0 	mov.w	fp, #224	@ 0xe0
90005958:	f8c3 a002 	str.w	sl, [r3, #2]
9000595c:	f04f 080f 	mov.w	r8, #15
90005960:	f8c3 b04a 	str.w	fp, [r3, #74]	@ 0x4a
90005964:	f44f 7b80 	mov.w	fp, #256	@ 0x100
90005968:	f8c3 2006 	str.w	r2, [r3, #6]
9000596c:	2400      	movs	r4, #0
9000596e:	8159      	strh	r1, [r3, #10]
90005970:	f8c3 2012 	str.w	r2, [r3, #18]
90005974:	82d9      	strh	r1, [r3, #22]
90005976:	f8c3 201e 	str.w	r2, [r3, #30]
9000597a:	8459      	strh	r1, [r3, #34]	@ 0x22
9000597c:	f8c3 202a 	str.w	r2, [r3, #42]	@ 0x2a
90005980:	85d9      	strh	r1, [r3, #46]	@ 0x2e
90005982:	f8c3 2036 	str.w	r2, [r3, #54]	@ 0x36
90005986:	8759      	strh	r1, [r3, #58]	@ 0x3a
90005988:	f8c3 2042 	str.w	r2, [r3, #66]	@ 0x42
9000598c:	f8a3 1046 	strh.w	r1, [r3, #70]	@ 0x46
90005990:	f8c3 204e 	str.w	r2, [r3, #78]	@ 0x4e
90005994:	f8a3 1052 	strh.w	r1, [r3, #82]	@ 0x52
90005998:	f8c3 205a 	str.w	r2, [r3, #90]	@ 0x5a
9000599c:	f8a3 105e 	strh.w	r1, [r3, #94]	@ 0x5e
900059a0:	f883 7054 	strb.w	r7, [r3, #84]	@ 0x54
900059a4:	f04f 0709 	mov.w	r7, #9
900059a8:	f883 900c 	strb.w	r9, [r3, #12]
900059ac:	f8c3 b056 	str.w	fp, [r3, #86]	@ 0x56
900059b0:	f44f 7b90 	mov.w	fp, #288	@ 0x120
900059b4:	f883 7060 	strb.w	r7, [r3, #96]	@ 0x60
900059b8:	f04f 070b 	mov.w	r7, #11
900059bc:	f8c3 b062 	str.w	fp, [r3, #98]	@ 0x62
900059c0:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
900059c4:	f883 7078 	strb.w	r7, [r3, #120]	@ 0x78
900059c8:	f04f 070d 	mov.w	r7, #13
900059cc:	f8c3 b06e 	str.w	fp, [r3, #110]	@ 0x6e
900059d0:	f44f 7bb0 	mov.w	fp, #352	@ 0x160
900059d4:	f883 7090 	strb.w	r7, [r3, #144]	@ 0x90
900059d8:	f04f 070e 	mov.w	r7, #14
900059dc:	f8c3 b07a 	str.w	fp, [r3, #122]	@ 0x7a
900059e0:	f44f 7bc0 	mov.w	fp, #384	@ 0x180
900059e4:	4eba      	ldr	r6, [pc, #744]	@ (90005cd0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3ec>)
900059e6:	f8c3 b086 	str.w	fp, [r3, #134]	@ 0x86
900059ea:	f44f 7bd0 	mov.w	fp, #416	@ 0x1a0
900059ee:	f883 709c 	strb.w	r7, [r3, #156]	@ 0x9c
900059f2:	f8c3 b092 	str.w	fp, [r3, #146]	@ 0x92
900059f6:	f04f 0b11 	mov.w	fp, #17
900059fa:	4fb6      	ldr	r7, [pc, #728]	@ (90005cd4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3f0>)
900059fc:	f8c3 2066 	str.w	r2, [r3, #102]	@ 0x66
90005a00:	f8a3 106a 	strh.w	r1, [r3, #106]	@ 0x6a
90005a04:	f8c3 2072 	str.w	r2, [r3, #114]	@ 0x72
90005a08:	f8a3 1076 	strh.w	r1, [r3, #118]	@ 0x76
90005a0c:	f8c3 207e 	str.w	r2, [r3, #126]	@ 0x7e
90005a10:	f8a3 1082 	strh.w	r1, [r3, #130]	@ 0x82
90005a14:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
90005a18:	f8c3 208a 	str.w	r2, [r3, #138]	@ 0x8a
90005a1c:	f8a3 108e 	strh.w	r1, [r3, #142]	@ 0x8e
90005a20:	f8c3 2096 	str.w	r2, [r3, #150]	@ 0x96
90005a24:	f8a3 109a 	strh.w	r1, [r3, #154]	@ 0x9a
90005a28:	f8c3 209e 	str.w	r2, [r3, #158]	@ 0x9e
90005a2c:	f8c3 20a2 	str.w	r2, [r3, #162]	@ 0xa2
90005a30:	f8a3 10a6 	strh.w	r1, [r3, #166]	@ 0xa6
90005a34:	f8c3 20ae 	str.w	r2, [r3, #174]	@ 0xae
90005a38:	f8a3 10b2 	strh.w	r1, [r3, #178]	@ 0xb2
90005a3c:	f8c3 70b6 	str.w	r7, [r3, #182]	@ 0xb6
90005a40:	37c0      	adds	r7, #192	@ 0xc0
90005a42:	f8c3 20ba 	str.w	r2, [r3, #186]	@ 0xba
90005a46:	f8a3 10be 	strh.w	r1, [r3, #190]	@ 0xbe
90005a4a:	f883 e06c 	strb.w	lr, [r3, #108]	@ 0x6c
90005a4e:	f883 80a8 	strb.w	r8, [r3, #168]	@ 0xa8
90005a52:	f8c3 60aa 	str.w	r6, [r3, #170]	@ 0xaa
90005a56:	f883 c0b4 	strb.w	ip, [r3, #180]	@ 0xb4
90005a5a:	f883 b0c0 	strb.w	fp, [r3, #192]	@ 0xc0
90005a5e:	f8df b278 	ldr.w	fp, [pc, #632]	@ 90005cd8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3f4>
90005a62:	f8c3 20c6 	str.w	r2, [r3, #198]	@ 0xc6
90005a66:	f8c3 b0c2 	str.w	fp, [r3, #194]	@ 0xc2
90005a6a:	f04f 0b12 	mov.w	fp, #18
90005a6e:	f8a3 10ca 	strh.w	r1, [r3, #202]	@ 0xca
90005a72:	f883 b0cc 	strb.w	fp, [r3, #204]	@ 0xcc
90005a76:	f8df b264 	ldr.w	fp, [pc, #612]	@ 90005cdc <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3f8>
90005a7a:	f8c3 20d2 	str.w	r2, [r3, #210]	@ 0xd2
90005a7e:	f8c3 b0ce 	str.w	fp, [r3, #206]	@ 0xce
90005a82:	f04f 0b13 	mov.w	fp, #19
90005a86:	f8a3 10d6 	strh.w	r1, [r3, #214]	@ 0xd6
90005a8a:	f883 b0d8 	strb.w	fp, [r3, #216]	@ 0xd8
90005a8e:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90005ce0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x3fc>
90005a92:	f8c3 20de 	str.w	r2, [r3, #222]	@ 0xde
90005a96:	f8c3 b0da 	str.w	fp, [r3, #218]	@ 0xda
90005a9a:	f04f 0b14 	mov.w	fp, #20
90005a9e:	f8a3 10e2 	strh.w	r1, [r3, #226]	@ 0xe2
90005aa2:	f883 b0e4 	strb.w	fp, [r3, #228]	@ 0xe4
90005aa6:	f8df b23c 	ldr.w	fp, [pc, #572]	@ 90005ce4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x400>
90005aaa:	f8c3 20ea 	str.w	r2, [r3, #234]	@ 0xea
90005aae:	f8c3 b0e6 	str.w	fp, [r3, #230]	@ 0xe6
90005ab2:	f04f 0b15 	mov.w	fp, #21
90005ab6:	f8a3 10ee 	strh.w	r1, [r3, #238]	@ 0xee
90005aba:	f883 b0f0 	strb.w	fp, [r3, #240]	@ 0xf0
90005abe:	f8df b228 	ldr.w	fp, [pc, #552]	@ 90005ce8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x404>
90005ac2:	f8c3 20f6 	str.w	r2, [r3, #246]	@ 0xf6
90005ac6:	f8c3 b0f2 	str.w	fp, [r3, #242]	@ 0xf2
90005aca:	f04f 0b16 	mov.w	fp, #22
90005ace:	f8a3 10fa 	strh.w	r1, [r3, #250]	@ 0xfa
90005ad2:	f883 b0fc 	strb.w	fp, [r3, #252]	@ 0xfc
90005ad6:	f04f 0b17 	mov.w	fp, #23
90005ada:	f8c3 2102 	str.w	r2, [r3, #258]	@ 0x102
90005ade:	f883 b108 	strb.w	fp, [r3, #264]	@ 0x108
90005ae2:	f8df b208 	ldr.w	fp, [pc, #520]	@ 90005cec <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x408>
90005ae6:	f8a3 1106 	strh.w	r1, [r3, #262]	@ 0x106
90005aea:	f8c3 b10a 	str.w	fp, [r3, #266]	@ 0x10a
90005aee:	f04f 0b18 	mov.w	fp, #24
90005af2:	f8c3 210e 	str.w	r2, [r3, #270]	@ 0x10e
90005af6:	f883 b114 	strb.w	fp, [r3, #276]	@ 0x114
90005afa:	f8df b1f4 	ldr.w	fp, [pc, #500]	@ 90005cf0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x40c>
90005afe:	f8a3 1112 	strh.w	r1, [r3, #274]	@ 0x112
90005b02:	f8c3 b116 	str.w	fp, [r3, #278]	@ 0x116
90005b06:	f04f 0b19 	mov.w	fp, #25
90005b0a:	f8c3 211a 	str.w	r2, [r3, #282]	@ 0x11a
90005b0e:	f883 b120 	strb.w	fp, [r3, #288]	@ 0x120
90005b12:	f8df b1e0 	ldr.w	fp, [pc, #480]	@ 90005cf4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x410>
90005b16:	f8a3 111e 	strh.w	r1, [r3, #286]	@ 0x11e
90005b1a:	f8c3 70fe 	str.w	r7, [r3, #254]	@ 0xfe
90005b1e:	f8c3 b122 	str.w	fp, [r3, #290]	@ 0x122
90005b22:	f883 a174 	strb.w	sl, [r3, #372]	@ 0x174
90005b26:	f04f 0a1a 	mov.w	sl, #26
90005b2a:	f8c3 2126 	str.w	r2, [r3, #294]	@ 0x126
90005b2e:	f883 a12c 	strb.w	sl, [r3, #300]	@ 0x12c
90005b32:	f44f 0ad8 	mov.w	sl, #7077888	@ 0x6c0000
90005b36:	f8a3 112a 	strh.w	r1, [r3, #298]	@ 0x12a
90005b3a:	f8c3 a12e 	str.w	sl, [r3, #302]	@ 0x12e
90005b3e:	f04f 0a1b 	mov.w	sl, #27
90005b42:	f8c3 2132 	str.w	r2, [r3, #306]	@ 0x132
90005b46:	f883 a138 	strb.w	sl, [r3, #312]	@ 0x138
90005b4a:	f8df a1ac 	ldr.w	sl, [pc, #428]	@ 90005cf8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x414>
90005b4e:	f8a3 1136 	strh.w	r1, [r3, #310]	@ 0x136
90005b52:	f8c3 a13a 	str.w	sl, [r3, #314]	@ 0x13a
90005b56:	f04f 0a1c 	mov.w	sl, #28
90005b5a:	f8c3 213e 	str.w	r2, [r3, #318]	@ 0x13e
90005b5e:	f883 a144 	strb.w	sl, [r3, #324]	@ 0x144
90005b62:	f8df a198 	ldr.w	sl, [pc, #408]	@ 90005cfc <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x418>
90005b66:	f8a3 1142 	strh.w	r1, [r3, #322]	@ 0x142
90005b6a:	f8c3 a146 	str.w	sl, [r3, #326]	@ 0x146
90005b6e:	f04f 0a1d 	mov.w	sl, #29
90005b72:	f8c3 214a 	str.w	r2, [r3, #330]	@ 0x14a
90005b76:	f883 a150 	strb.w	sl, [r3, #336]	@ 0x150
90005b7a:	f8df a184 	ldr.w	sl, [pc, #388]	@ 90005d00 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x41c>
90005b7e:	f8a3 114e 	strh.w	r1, [r3, #334]	@ 0x14e
90005b82:	f8c3 a152 	str.w	sl, [r3, #338]	@ 0x152
90005b86:	f04f 0a1e 	mov.w	sl, #30
90005b8a:	f8c3 2156 	str.w	r2, [r3, #342]	@ 0x156
90005b8e:	f883 a15c 	strb.w	sl, [r3, #348]	@ 0x15c
90005b92:	f8df a170 	ldr.w	sl, [pc, #368]	@ 90005d04 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x420>
90005b96:	f8a3 115a 	strh.w	r1, [r3, #346]	@ 0x15a
90005b9a:	f8c3 a15e 	str.w	sl, [r3, #350]	@ 0x15e
90005b9e:	f04f 0a1f 	mov.w	sl, #31
90005ba2:	f8c3 2162 	str.w	r2, [r3, #354]	@ 0x162
90005ba6:	f883 a168 	strb.w	sl, [r3, #360]	@ 0x168
90005baa:	f8df a15c 	ldr.w	sl, [pc, #348]	@ 90005d08 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x424>
90005bae:	f8a3 1166 	strh.w	r1, [r3, #358]	@ 0x166
90005bb2:	f8c3 a16a 	str.w	sl, [r3, #362]	@ 0x16a
90005bb6:	f10a 0a20 	add.w	sl, sl, #32
90005bba:	f8c3 216e 	str.w	r2, [r3, #366]	@ 0x16e
90005bbe:	f8c3 a176 	str.w	sl, [r3, #374]	@ 0x176
90005bc2:	f04f 0a21 	mov.w	sl, #33	@ 0x21
90005bc6:	f8a3 1172 	strh.w	r1, [r3, #370]	@ 0x172
90005bca:	f883 a180 	strb.w	sl, [r3, #384]	@ 0x180
90005bce:	f8df a13c 	ldr.w	sl, [pc, #316]	@ 90005d0c <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x428>
90005bd2:	f8c3 217a 	str.w	r2, [r3, #378]	@ 0x17a
90005bd6:	f8a3 117e 	strh.w	r1, [r3, #382]	@ 0x17e
90005bda:	f8c3 2186 	str.w	r2, [r3, #390]	@ 0x186
90005bde:	f8c3 a182 	str.w	sl, [r3, #386]	@ 0x182
90005be2:	f04f 0a22 	mov.w	sl, #34	@ 0x22
90005be6:	f8a3 118a 	strh.w	r1, [r3, #394]	@ 0x18a
90005bea:	f883 a18c 	strb.w	sl, [r3, #396]	@ 0x18c
90005bee:	f8df a120 	ldr.w	sl, [pc, #288]	@ 90005d10 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x42c>
90005bf2:	f8c3 2192 	str.w	r2, [r3, #402]	@ 0x192
90005bf6:	f8c3 a18e 	str.w	sl, [r3, #398]	@ 0x18e
90005bfa:	f04f 0a23 	mov.w	sl, #35	@ 0x23
90005bfe:	f8a3 1196 	strh.w	r1, [r3, #406]	@ 0x196
90005c02:	f883 a198 	strb.w	sl, [r3, #408]	@ 0x198
90005c06:	f8df a10c 	ldr.w	sl, [pc, #268]	@ 90005d14 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x430>
90005c0a:	f8c3 219e 	str.w	r2, [r3, #414]	@ 0x19e
90005c0e:	f8c3 a19a 	str.w	sl, [r3, #410]	@ 0x19a
90005c12:	f04f 0a24 	mov.w	sl, #36	@ 0x24
90005c16:	f8a3 11a2 	strh.w	r1, [r3, #418]	@ 0x1a2
90005c1a:	f883 a1a4 	strb.w	sl, [r3, #420]	@ 0x1a4
90005c1e:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 90005d18 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x434>
90005c22:	f8c3 21aa 	str.w	r2, [r3, #426]	@ 0x1aa
90005c26:	f8c3 a1a6 	str.w	sl, [r3, #422]	@ 0x1a6
90005c2a:	f04f 0a25 	mov.w	sl, #37	@ 0x25
90005c2e:	f8a3 11ae 	strh.w	r1, [r3, #430]	@ 0x1ae
90005c32:	f883 a1b0 	strb.w	sl, [r3, #432]	@ 0x1b0
90005c36:	f8df a0e4 	ldr.w	sl, [pc, #228]	@ 90005d1c <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x438>
90005c3a:	f8c3 21b6 	str.w	r2, [r3, #438]	@ 0x1b6
90005c3e:	f8c3 a1b2 	str.w	sl, [r3, #434]	@ 0x1b2
90005c42:	f04f 0a26 	mov.w	sl, #38	@ 0x26
90005c46:	f8a3 11ba 	strh.w	r1, [r3, #442]	@ 0x1ba
90005c4a:	f883 a1bc 	strb.w	sl, [r3, #444]	@ 0x1bc
90005c4e:	f8df a0d0 	ldr.w	sl, [pc, #208]	@ 90005d20 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x43c>
90005c52:	f8c3 21c2 	str.w	r2, [r3, #450]	@ 0x1c2
90005c56:	f8c3 a1be 	str.w	sl, [r3, #446]	@ 0x1be
90005c5a:	f04f 0a27 	mov.w	sl, #39	@ 0x27
90005c5e:	f8a3 11c6 	strh.w	r1, [r3, #454]	@ 0x1c6
90005c62:	f883 a1c8 	strb.w	sl, [r3, #456]	@ 0x1c8
90005c66:	f8df a0bc 	ldr.w	sl, [pc, #188]	@ 90005d24 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x440>
90005c6a:	f8c3 21ce 	str.w	r2, [r3, #462]	@ 0x1ce
90005c6e:	f8c3 a1ca 	str.w	sl, [r3, #458]	@ 0x1ca
90005c72:	f04f 0a28 	mov.w	sl, #40	@ 0x28
90005c76:	f8a3 11d2 	strh.w	r1, [r3, #466]	@ 0x1d2
90005c7a:	f883 a1d4 	strb.w	sl, [r3, #468]	@ 0x1d4
90005c7e:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 90005d28 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x444>
90005c82:	f8c3 21da 	str.w	r2, [r3, #474]	@ 0x1da
90005c86:	f8c3 a1d6 	str.w	sl, [r3, #470]	@ 0x1d6
90005c8a:	f04f 0a29 	mov.w	sl, #41	@ 0x29
90005c8e:	f8a3 11de 	strh.w	r1, [r3, #478]	@ 0x1de
90005c92:	f883 a1e0 	strb.w	sl, [r3, #480]	@ 0x1e0
90005c96:	f8df a094 	ldr.w	sl, [pc, #148]	@ 90005d2c <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x448>
90005c9a:	f8c3 21e6 	str.w	r2, [r3, #486]	@ 0x1e6
90005c9e:	f8a3 11ea 	strh.w	r1, [r3, #490]	@ 0x1ea
90005ca2:	f8c3 a1e2 	str.w	sl, [r3, #482]	@ 0x1e2
90005ca6:	f04f 0a2a 	mov.w	sl, #42	@ 0x2a
90005caa:	f8a3 11f6 	strh.w	r1, [r3, #502]	@ 0x1f6
90005cae:	f8a3 1202 	strh.w	r1, [r3, #514]	@ 0x202
90005cb2:	f8a3 120e 	strh.w	r1, [r3, #526]	@ 0x20e
90005cb6:	f8a3 121a 	strh.w	r1, [r3, #538]	@ 0x21a
90005cba:	f8a3 1226 	strh.w	r1, [r3, #550]	@ 0x226
90005cbe:	f8a3 1232 	strh.w	r1, [r3, #562]	@ 0x232
90005cc2:	f8a3 123e 	strh.w	r1, [r3, #574]	@ 0x23e
90005cc6:	e033      	b.n	90005d30 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x44c>
90005cc8:	2400a03c 	.word	0x2400a03c
90005ccc:	00360020 	.word	0x00360020
90005cd0:	00360040 	.word	0x00360040
90005cd4:	00360060 	.word	0x00360060
90005cd8:	00360080 	.word	0x00360080
90005cdc:	003600a0 	.word	0x003600a0
90005ce0:	003600c0 	.word	0x003600c0
90005ce4:	003600e0 	.word	0x003600e0
90005ce8:	00360100 	.word	0x00360100
90005cec:	00360140 	.word	0x00360140
90005cf0:	00360160 	.word	0x00360160
90005cf4:	00360180 	.word	0x00360180
90005cf8:	006c0020 	.word	0x006c0020
90005cfc:	006c0040 	.word	0x006c0040
90005d00:	006c0060 	.word	0x006c0060
90005d04:	006c0080 	.word	0x006c0080
90005d08:	006c00a0 	.word	0x006c00a0
90005d0c:	006c00e0 	.word	0x006c00e0
90005d10:	006c0100 	.word	0x006c0100
90005d14:	006c0120 	.word	0x006c0120
90005d18:	006c0140 	.word	0x006c0140
90005d1c:	006c0160 	.word	0x006c0160
90005d20:	00a20040 	.word	0x00a20040
90005d24:	00a20060 	.word	0x00a20060
90005d28:	00a20080 	.word	0x00a20080
90005d2c:	00a200a0 	.word	0x00a200a0
90005d30:	4959      	ldr	r1, [pc, #356]	@ (90005e98 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5b4>)
90005d32:	485a      	ldr	r0, [pc, #360]	@ (90005e9c <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5b8>)
90005d34:	f8c3 11ee 	str.w	r1, [r3, #494]	@ 0x1ee
90005d38:	212b      	movs	r1, #43	@ 0x2b
90005d3a:	f8c3 21f2 	str.w	r2, [r3, #498]	@ 0x1f2
90005d3e:	f883 11f8 	strb.w	r1, [r3, #504]	@ 0x1f8
90005d42:	4957      	ldr	r1, [pc, #348]	@ (90005ea0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5bc>)
90005d44:	f8c3 21fe 	str.w	r2, [r3, #510]	@ 0x1fe
90005d48:	f8c3 11fa 	str.w	r1, [r3, #506]	@ 0x1fa
90005d4c:	212c      	movs	r1, #44	@ 0x2c
90005d4e:	f8c3 220a 	str.w	r2, [r3, #522]	@ 0x20a
90005d52:	f883 1204 	strb.w	r1, [r3, #516]	@ 0x204
90005d56:	4953      	ldr	r1, [pc, #332]	@ (90005ea4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5c0>)
90005d58:	f8c3 2216 	str.w	r2, [r3, #534]	@ 0x216
90005d5c:	f8c3 1206 	str.w	r1, [r3, #518]	@ 0x206
90005d60:	212d      	movs	r1, #45	@ 0x2d
90005d62:	f8c3 2222 	str.w	r2, [r3, #546]	@ 0x222
90005d66:	f883 1210 	strb.w	r1, [r3, #528]	@ 0x210
90005d6a:	494f      	ldr	r1, [pc, #316]	@ (90005ea8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5c4>)
90005d6c:	f8c3 222e 	str.w	r2, [r3, #558]	@ 0x22e
90005d70:	f8c3 1212 	str.w	r1, [r3, #530]	@ 0x212
90005d74:	212e      	movs	r1, #46	@ 0x2e
90005d76:	f8c3 223a 	str.w	r2, [r3, #570]	@ 0x23a
90005d7a:	f883 121c 	strb.w	r1, [r3, #540]	@ 0x21c
90005d7e:	494b      	ldr	r1, [pc, #300]	@ (90005eac <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5c8>)
90005d80:	f883 a1ec 	strb.w	sl, [r3, #492]	@ 0x1ec
90005d84:	f8c3 121e 	str.w	r1, [r3, #542]	@ 0x21e
90005d88:	212f      	movs	r1, #47	@ 0x2f
90005d8a:	f8c3 7246 	str.w	r7, [r3, #582]	@ 0x246
90005d8e:	f883 1228 	strb.w	r1, [r3, #552]	@ 0x228
90005d92:	4947      	ldr	r1, [pc, #284]	@ (90005eb0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5cc>)
90005d94:	f8a3 824a 	strh.w	r8, [r3, #586]	@ 0x24a
90005d98:	f8c3 122a 	str.w	r1, [r3, #554]	@ 0x22a
90005d9c:	2130      	movs	r1, #48	@ 0x30
90005d9e:	6004      	str	r4, [r0, #0]
90005da0:	f883 1234 	strb.w	r1, [r3, #564]	@ 0x234
90005da4:	4943      	ldr	r1, [pc, #268]	@ (90005eb4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5d0>)
90005da6:	4d44      	ldr	r5, [pc, #272]	@ (90005eb8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5d4>)
90005da8:	f8c3 1236 	str.w	r1, [r3, #566]	@ 0x236
90005dac:	2131      	movs	r1, #49	@ 0x31
90005dae:	f883 1240 	strb.w	r1, [r3, #576]	@ 0x240
90005db2:	4942      	ldr	r1, [pc, #264]	@ (90005ebc <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5d8>)
90005db4:	f8c3 1242 	str.w	r1, [r3, #578]	@ 0x242

	{Rect(0, 54*4, MOD_KEY_WIDTH, MOD_KEY_HEIGHT), 0, BITMAP_KEYBOARD_CTRL_HIGHLIGHTED_ID},       // CTRL
	{Rect(64, 54*4, MOD_KEY_WIDTH, MOD_KEY_HEIGHT), 0, BITMAP_KEYBOARD_MOD_HIGHLIGHTED_ID},       // MOD
    {Rect(13*32, 54*4, MOD_KEY_WIDTH, MOD_KEY_HEIGHT), 0, BITMAP_KEYBOARD_ALT_HIGHLIGHTED_ID},       // ALT

};
90005db8:	f04f 0307 	mov.w	r3, #7
90005dbc:	6042      	str	r2, [r0, #4]
90005dbe:	8383      	strh	r3, [r0, #28]
90005dc0:	f04f 0305 	mov.w	r3, #5
90005dc4:	6642      	str	r2, [r0, #100]	@ 0x64
90005dc6:	8783      	strh	r3, [r0, #60]	@ 0x3c
90005dc8:	4b3d      	ldr	r3, [pc, #244]	@ (90005ec0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5dc>)
90005dca:	6742      	str	r2, [r0, #116]	@ 0x74
90005dcc:	6443      	str	r3, [r0, #68]	@ 0x44
90005dce:	f04f 0309 	mov.w	r3, #9
90005dd2:	f8a0 e00c 	strh.w	lr, [r0, #12]
90005dd6:	f8a0 304c 	strh.w	r3, [r0, #76]	@ 0x4c
90005dda:	f04f 030e 	mov.w	r3, #14
90005dde:	f8a0 c02c 	strh.w	ip, [r0, #44]	@ 0x2c
90005de2:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90005de6:	f04f 030b 	mov.w	r3, #11
90005dea:	6084      	str	r4, [r0, #8]
90005dec:	f8a0 306c 	strh.w	r3, [r0, #108]	@ 0x6c
90005df0:	f04f 0308 	mov.w	r3, #8
90005df4:	6484      	str	r4, [r0, #72]	@ 0x48
90005df6:	f8a0 307c 	strh.w	r3, [r0, #124]	@ 0x7c
90005dfa:	f44f 73e0 	mov.w	r3, #448	@ 0x1c0
90005dfe:	6684      	str	r4, [r0, #104]	@ 0x68
90005e00:	6103      	str	r3, [r0, #16]
90005e02:	f44f 1358 	mov.w	r3, #3538944	@ 0x360000
90005e06:	6784      	str	r4, [r0, #120]	@ 0x78
90005e08:	6203      	str	r3, [r0, #32]
90005e0a:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
90005e0e:	f8c0 6084 	str.w	r6, [r0, #132]	@ 0x84
90005e12:	6303      	str	r3, [r0, #48]	@ 0x30
90005e14:	4b2b      	ldr	r3, [pc, #172]	@ (90005ec4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5e0>)
90005e16:	6403      	str	r3, [r0, #64]	@ 0x40
90005e18:	f44f 0322 	mov.w	r3, #10616832	@ 0xa20000
90005e1c:	6503      	str	r3, [r0, #80]	@ 0x50
90005e1e:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
90005e22:	6603      	str	r3, [r0, #96]	@ 0x60
90005e24:	3320      	adds	r3, #32
90005e26:	6703      	str	r3, [r0, #112]	@ 0x70
90005e28:	f44f 0358 	mov.w	r3, #14155776	@ 0xd80000
90005e2c:	e9c0 2405 	strd	r2, r4, [r0, #20]
90005e30:	e9c0 2409 	strd	r2, r4, [r0, #36]	@ 0x24
90005e34:	e9c0 640d 	strd	r6, r4, [r0, #52]	@ 0x34
90005e38:	e9c0 6415 	strd	r6, r4, [r0, #84]	@ 0x54
90005e3c:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
90005e40:	f04f 0306 	mov.w	r3, #6
        : color(col)
90005e44:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
90005e48:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
90005e4c:	f8a0 308c 	strh.w	r3, [r0, #140]	@ 0x8c
90005e50:	f04f 030d 	mov.w	r3, #13
90005e54:	626a      	str	r2, [r5, #36]	@ 0x24
90005e56:	f8a0 309c 	strh.w	r3, [r0, #156]	@ 0x9c
90005e5a:	f04f 0303 	mov.w	r3, #3
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005e5e:	4a1a      	ldr	r2, [pc, #104]	@ (90005ec8 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5e4>)
90005e60:	f8a0 30ac 	strh.w	r3, [r0, #172]	@ 0xac
90005e64:	4b19      	ldr	r3, [pc, #100]	@ (90005ecc <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5e8>)
        : typedTextId(id)
90005e66:	f8a5 9020 	strh.w	r9, [r5, #32]
90005e6a:	f8c5 3012 	str.w	r3, [r5, #18]
90005e6e:	4b18      	ldr	r3, [pc, #96]	@ (90005ed0 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5ec>)
90005e70:	f8c0 6094 	str.w	r6, [r0, #148]	@ 0x94
90005e74:	61eb      	str	r3, [r5, #28]
90005e76:	4b17      	ldr	r3, [pc, #92]	@ (90005ed4 <_GLOBAL__sub_I__ZN18FullScreenKeyboardC2Ev+0x5f0>)
90005e78:	f8c0 60a4 	str.w	r6, [r0, #164]	@ 0xa4
90005e7c:	f8c0 4098 	str.w	r4, [r0, #152]	@ 0x98
90005e80:	f8c0 40a8 	str.w	r4, [r0, #168]	@ 0xa8
90005e84:	f8c5 4016 	str.w	r4, [r5, #22]
        : color(col)
90005e88:	62ec      	str	r4, [r5, #44]	@ 0x2c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005e8a:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
90005e8e:	f8c0 30a0 	str.w	r3, [r0, #160]	@ 0xa0
90005e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005e96:	bf00      	nop
90005e98:	00a200c0 	.word	0x00a200c0
90005e9c:	24009f8c 	.word	0x24009f8c
90005ea0:	00a200e0 	.word	0x00a200e0
90005ea4:	00a20100 	.word	0x00a20100
90005ea8:	00a20120 	.word	0x00a20120
90005eac:	00a20140 	.word	0x00a20140
90005eb0:	00a20160 	.word	0x00a20160
90005eb4:	00a20180 	.word	0x00a20180
90005eb8:	2400009c 	.word	0x2400009c
90005ebc:	00d80080 	.word	0x00d80080
90005ec0:	00360060 	.word	0x00360060
90005ec4:	006c0180 	.word	0x006c0180
90005ec8:	00d80040 	.word	0x00d80040
90005ecc:	01f401f4 	.word	0x01f401f4
90005ed0:	9002ee94 	.word	0x9002ee94
90005ed4:	00d801a0 	.word	0x00d801a0

90005ed8 <_ZN23KeyboardScreenPresenterD1Ev>:

    void HandleButtonPressed();
    void toggleKeyboardModifier(uint8_t modifiers);
    void handleNormalKey(uint16_t key);

    virtual ~KeyboardScreenPresenter() {}
90005ed8:	4770      	bx	lr
90005eda:	bf00      	nop

90005edc <_ZThn4_N23KeyboardScreenPresenterD1Ev>:
90005edc:	3804      	subs	r0, #4
90005ede:	4770      	bx	lr

90005ee0 <_ZN23KeyboardScreenPresenter10deactivateEv>:
}

void KeyboardScreenPresenter::activate()
{

}
90005ee0:	4770      	bx	lr
90005ee2:	bf00      	nop

90005ee4 <_ZN23KeyboardScreenPresenter19HandleButtonPressedEv>:

}

void KeyboardScreenPresenter::HandleButtonPressed()
{
	view.goToTouchpadScreen();
90005ee4:	68c0      	ldr	r0, [r0, #12]
90005ee6:	6803      	ldr	r3, [r0, #0]
90005ee8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005eea:	4718      	bx	r3

90005eec <_ZN23KeyboardScreenPresenterD0Ev>:
90005eec:	b510      	push	{r4, lr}
90005eee:	4604      	mov	r4, r0
90005ef0:	2110      	movs	r1, #16
90005ef2:	f025 fe32 	bl	9002bb5a <_ZdlPvj>
90005ef6:	4620      	mov	r0, r4
90005ef8:	bd10      	pop	{r4, pc}
90005efa:	bf00      	nop

90005efc <_ZThn4_N23KeyboardScreenPresenterD0Ev>:
90005efc:	b510      	push	{r4, lr}
90005efe:	1f04      	subs	r4, r0, #4
90005f00:	2110      	movs	r1, #16
90005f02:	4620      	mov	r0, r4
90005f04:	f025 fe29 	bl	9002bb5a <_ZdlPvj>
90005f08:	4620      	mov	r0, r4
90005f0a:	bd10      	pop	{r4, pc}

90005f0c <_ZThn4_N23KeyboardScreenPresenter19HandleButtonPressedEv>:
    void HandleButtonPressed();
90005f0c:	6880      	ldr	r0, [r0, #8]
90005f0e:	6803      	ldr	r3, [r0, #0]
90005f10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90005f12:	4718      	bx	r3

90005f14 <_ZN23KeyboardScreenPresenterC1ER18KeyboardScreenView>:
    : view(v)
90005f14:	4a05      	ldr	r2, [pc, #20]	@ (90005f2c <_ZN23KeyboardScreenPresenterC1ER18KeyboardScreenView+0x18>)
90005f16:	60c1      	str	r1, [r0, #12]
90005f18:	6002      	str	r2, [r0, #0]
KeyboardScreenPresenter::KeyboardScreenPresenter(KeyboardScreenView& v)
90005f1a:	b410      	push	{r4}
    ModelListener() : model(0) {}
90005f1c:	2400      	movs	r4, #0
90005f1e:	6084      	str	r4, [r0, #8]
    : view(v)
90005f20:	f102 041c 	add.w	r4, r2, #28
90005f24:	6044      	str	r4, [r0, #4]
}
90005f26:	f85d 4b04 	ldr.w	r4, [sp], #4
90005f2a:	4770      	bx	lr
90005f2c:	9002fa84 	.word	0x9002fa84

90005f30 <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>:
}

void KeyboardScreenPresenter::toggleKeyboardModifier(uint8_t modifiers)
{
	model->toggleKeyboardModifier(modifiers);
90005f30:	6880      	ldr	r0, [r0, #8]
90005f32:	f000 bc9f 	b.w	90006874 <_ZN5Model22toggleKeyboardModifierEh>
90005f36:	bf00      	nop

90005f38 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>:
}

void KeyboardScreenPresenter::handleNormalKey(uint16_t key)
{
	model->handleNormalKey(key);
90005f38:	6880      	ldr	r0, [r0, #8]
90005f3a:	f000 bc9f 	b.w	9000687c <_ZN5Model15handleNormalKeyEt>
90005f3e:	bf00      	nop

90005f40 <_ZN18KeyboardScreenView14tearDownScreenEv>:
}

void KeyboardScreenView::tearDownScreen()
{
    KeyboardScreenViewBase::tearDownScreen();
}
90005f40:	4770      	bx	lr
90005f42:	bf00      	nop

90005f44 <_ZN8touchgfx8CallbackI18KeyboardScreenViewtvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005f44:	4770      	bx	lr
90005f46:	bf00      	nop

90005f48 <_ZN8touchgfx8CallbackI18KeyboardScreenViewvvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005f48:	4770      	bx	lr
90005f4a:	bf00      	nop

90005f4c <_ZN8touchgfx8CallbackI18KeyboardScreenViewtvvE7executeEt>:
    virtual void execute(T1 t1)
90005f4c:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90005f4e:	68c3      	ldr	r3, [r0, #12]
90005f50:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
90005f54:	f013 0f01 	tst.w	r3, #1
90005f58:	eb04 0063 	add.w	r0, r4, r3, asr #1
90005f5c:	d004      	beq.n	90005f68 <_ZN8touchgfx8CallbackI18KeyboardScreenViewtvvE7executeEt+0x1c>
90005f5e:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005f62:	f854 300c 	ldr.w	r3, [r4, ip]
90005f66:	589a      	ldr	r2, [r3, r2]
    }
90005f68:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005f6c:	4710      	bx	r2
90005f6e:	bf00      	nop

90005f70 <_ZNK8touchgfx8CallbackI18KeyboardScreenViewtvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005f70:	6843      	ldr	r3, [r0, #4]
90005f72:	b13b      	cbz	r3, 90005f84 <_ZNK8touchgfx8CallbackI18KeyboardScreenViewtvvE7isValidEv+0x14>
90005f74:	6883      	ldr	r3, [r0, #8]
90005f76:	b10b      	cbz	r3, 90005f7c <_ZNK8touchgfx8CallbackI18KeyboardScreenViewtvvE7isValidEv+0xc>
90005f78:	2001      	movs	r0, #1
    }
90005f7a:	4770      	bx	lr
90005f7c:	68c0      	ldr	r0, [r0, #12]
90005f7e:	f000 0001 	and.w	r0, r0, #1
90005f82:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005f84:	4618      	mov	r0, r3
90005f86:	4770      	bx	lr

90005f88 <_ZN8touchgfx8CallbackI18KeyboardScreenViewvvvE7executeEv>:
        (pobject->*pmemfun)();
90005f88:	1d01      	adds	r1, r0, #4
90005f8a:	c90e      	ldmia	r1, {r1, r2, r3}
90005f8c:	ea4f 0c63 	mov.w	ip, r3, asr #1
90005f90:	eb01 0063 	add.w	r0, r1, r3, asr #1
90005f94:	07db      	lsls	r3, r3, #31
90005f96:	d502      	bpl.n	90005f9e <_ZN8touchgfx8CallbackI18KeyboardScreenViewvvvE7executeEv+0x16>
90005f98:	f851 300c 	ldr.w	r3, [r1, ip]
90005f9c:	589a      	ldr	r2, [r3, r2]
90005f9e:	4710      	bx	r2

90005fa0 <_ZNK8touchgfx8CallbackI18KeyboardScreenViewvvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005fa0:	6843      	ldr	r3, [r0, #4]
90005fa2:	b13b      	cbz	r3, 90005fb4 <_ZNK8touchgfx8CallbackI18KeyboardScreenViewvvvE7isValidEv+0x14>
90005fa4:	6883      	ldr	r3, [r0, #8]
90005fa6:	b10b      	cbz	r3, 90005fac <_ZNK8touchgfx8CallbackI18KeyboardScreenViewvvvE7isValidEv+0xc>
90005fa8:	2001      	movs	r0, #1
    }
90005faa:	4770      	bx	lr
90005fac:	68c0      	ldr	r0, [r0, #12]
90005fae:	f000 0001 	and.w	r0, r0, #1
90005fb2:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005fb4:	4618      	mov	r0, r3
90005fb6:	4770      	bx	lr

90005fb8 <_ZN8touchgfx8CallbackI18KeyboardScreenViewvvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90005fb8:	b510      	push	{r4, lr}
90005fba:	4604      	mov	r4, r0
90005fbc:	2110      	movs	r1, #16
90005fbe:	f025 fdcc 	bl	9002bb5a <_ZdlPvj>
90005fc2:	4620      	mov	r0, r4
90005fc4:	bd10      	pop	{r4, pc}
90005fc6:	bf00      	nop

90005fc8 <_ZN8touchgfx8CallbackI18KeyboardScreenViewtvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005fc8:	b510      	push	{r4, lr}
90005fca:	4604      	mov	r4, r0
90005fcc:	2110      	movs	r1, #16
90005fce:	f025 fdc4 	bl	9002bb5a <_ZdlPvj>
90005fd2:	4620      	mov	r0, r4
90005fd4:	bd10      	pop	{r4, pc}
90005fd6:	bf00      	nop

90005fd8 <_ZN18KeyboardScreenView17escPressedHandlerEv>:

void KeyboardScreenView::escPressedHandler()
{
	presenter->handleNormalKey(0x1);
90005fd8:	2101      	movs	r1, #1
90005fda:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90005fdc:	f7ff bfac 	b.w	90005f38 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90005fe0 <_ZN18KeyboardScreenView17delPressedHandlerEv>:
	touchgfx_printf("ESC pressed\n");
}

void KeyboardScreenView::delPressedHandler()
{
	presenter->handleNormalKey(0x2);
90005fe0:	2102      	movs	r1, #2
90005fe2:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90005fe4:	f7ff bfa8 	b.w	90005f38 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90005fe8 <_ZN18KeyboardScreenView17tabPressedHandlerEv>:
}

void KeyboardScreenView::tabPressedHandler()
{
	presenter->handleNormalKey(0x3);
90005fe8:	2103      	movs	r1, #3
90005fea:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90005fec:	f7ff bfa4 	b.w	90005f38 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90005ff0 <_ZN18KeyboardScreenView23backspacePressedHandlerEv>:
}
void KeyboardScreenView::backspacePressedHandler()
{
	presenter->handleNormalKey(0x4);
90005ff0:	2104      	movs	r1, #4
90005ff2:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90005ff4:	f7ff bfa0 	b.w	90005f38 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90005ff8 <_ZN18KeyboardScreenView19enterPressedHandlerEv>:
}

void KeyboardScreenView::enterPressedHandler()
{
	presenter->handleNormalKey(0x5);
90005ff8:	2105      	movs	r1, #5
90005ffa:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90005ffc:	f7ff bf9c 	b.w	90005f38 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90006000 <_ZN18KeyboardScreenView18homePressedHandlerEv>:
{
	presenter->toggleKeyboardModifier(0x2);
}
void KeyboardScreenView::homePressedHandler()
{
	presenter->handleNormalKey(0x6);
90006000:	2106      	movs	r1, #6
90006002:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006004:	f7ff bf98 	b.w	90005f38 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90006008 <_ZN18KeyboardScreenView17endPressedHandlerEv>:
}
void KeyboardScreenView::endPressedHandler()
{
	presenter->handleNormalKey(0x7);
90006008:	2107      	movs	r1, #7
9000600a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
9000600c:	f7ff bf94 	b.w	90005f38 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>

90006010 <_ZN18KeyboardScreenView19shiftPressedHandlerEv>:
	presenter->toggleKeyboardModifier(0x2);
90006010:	2102      	movs	r1, #2
90006012:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006014:	f7ff bf8c 	b.w	90005f30 <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>

90006018 <_ZN18KeyboardScreenView18ctrlPressedHandlerEv>:
}

void KeyboardScreenView::ctrlPressedHandler()
{
	presenter->toggleKeyboardModifier(0x1);
90006018:	2101      	movs	r1, #1
9000601a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
9000601c:	f7ff bf88 	b.w	90005f30 <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>

90006020 <_ZN18KeyboardScreenView17modPressedHandlerEv>:
}
void KeyboardScreenView::modPressedHandler()
{
	presenter->toggleKeyboardModifier(0x8);
90006020:	2108      	movs	r1, #8
90006022:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006024:	f7ff bf84 	b.w	90005f30 <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>

90006028 <_ZN18KeyboardScreenView17altPressedHandlerEv>:
}
void KeyboardScreenView::altPressedHandler()
{
	presenter->toggleKeyboardModifier(0x4);
90006028:	2104      	movs	r1, #4
9000602a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
9000602c:	f7ff bf80 	b.w	90005f30 <_ZN23KeyboardScreenPresenter22toggleKeyboardModifierEh>

90006030 <_ZN18KeyboardScreenView17keyPressedhandlerEt>:
}

void KeyboardScreenView::keyPressedhandler(Unicode::UnicodeChar keyChar)
{
90006030:	b510      	push	{r4, lr}
90006032:	4604      	mov	r4, r0
	if(keyChar != 0) {
90006034:	b931      	cbnz	r1, 90006044 <_ZN18KeyboardScreenView17keyPressedhandlerEt+0x14>
		touchgfx_printf("Key pressed: %c\n", keyChar);
		presenter->handleNormalKey(keyChar);
	}
	keyboard.setBufferPosition(0);
90006036:	f104 0090 	add.w	r0, r4, #144	@ 0x90
9000603a:	2100      	movs	r1, #0
}
9000603c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	keyboard.setBufferPosition(0);
90006040:	f010 bfdc 	b.w	90016ffc <_ZN8touchgfx8Keyboard17setBufferPositionEt>
		presenter->handleNormalKey(keyChar);
90006044:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006046:	f7ff ff77 	bl	90005f38 <_ZN23KeyboardScreenPresenter15handleNormalKeyEt>
	keyboard.setBufferPosition(0);
9000604a:	f104 0090 	add.w	r0, r4, #144	@ 0x90
9000604e:	2100      	movs	r1, #0
}
90006050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	keyboard.setBufferPosition(0);
90006054:	f010 bfd2 	b.w	90016ffc <_ZN8touchgfx8Keyboard17setBufferPositionEt>

90006058 <_ZN18KeyboardScreenViewD1Ev>:

class KeyboardScreenView : public KeyboardScreenViewBase
{
public:
    KeyboardScreenView();
    virtual ~KeyboardScreenView() {}
90006058:	4b03      	ldr	r3, [pc, #12]	@ (90006068 <_ZN18KeyboardScreenViewD1Ev+0x10>)
9000605a:	b510      	push	{r4, lr}
9000605c:	4604      	mov	r4, r0
9000605e:	6003      	str	r3, [r0, #0]
90006060:	f7ff f8ee 	bl	90005240 <_ZN22KeyboardScreenViewBaseD1Ev>
90006064:	4620      	mov	r0, r4
90006066:	bd10      	pop	{r4, pc}
90006068:	9002fae4 	.word	0x9002fae4

9000606c <_ZN18KeyboardScreenViewD0Ev>:
9000606c:	4b06      	ldr	r3, [pc, #24]	@ (90006088 <_ZN18KeyboardScreenViewD0Ev+0x1c>)
9000606e:	b510      	push	{r4, lr}
90006070:	4604      	mov	r4, r0
90006072:	6003      	str	r3, [r0, #0]
90006074:	f7ff f8e4 	bl	90005240 <_ZN22KeyboardScreenViewBaseD1Ev>
90006078:	f44f 710e 	mov.w	r1, #568	@ 0x238
9000607c:	4620      	mov	r0, r4
9000607e:	f025 fd6c 	bl	9002bb5a <_ZdlPvj>
90006082:	4620      	mov	r0, r4
90006084:	bd10      	pop	{r4, pc}
90006086:	bf00      	nop
90006088:	9002fae4 	.word	0x9002fae4

9000608c <_ZN18KeyboardScreenViewC1Ev>:
KeyboardScreenView::KeyboardScreenView() : keyboard(),
9000608c:	b570      	push	{r4, r5, r6, lr}
9000608e:	4604      	mov	r4, r0
keyPressed(this, &KeyboardScreenView::keyPressedhandler)
90006090:	f7ff f8ea 	bl	90005268 <_ZN22KeyboardScreenViewBaseC1Ev>
90006094:	4b5a      	ldr	r3, [pc, #360]	@ (90006200 <_ZN18KeyboardScreenViewC1Ev+0x174>)
        : pobject(pObject), pmemfun(pmemfun_0)
90006096:	2500      	movs	r5, #0
90006098:	4626      	mov	r6, r4
9000609a:	f846 3b90 	str.w	r3, [r6], #144
KeyboardScreenView::KeyboardScreenView() : keyboard(),
9000609e:	4630      	mov	r0, r6
900060a0:	f010 fd14 	bl	90016acc <_ZN8touchgfx8KeyboardC1Ev>
900060a4:	4a57      	ldr	r2, [pc, #348]	@ (90006204 <_ZN18KeyboardScreenViewC1Ev+0x178>)
900060a6:	4b58      	ldr	r3, [pc, #352]	@ (90006208 <_ZN18KeyboardScreenViewC1Ev+0x17c>)
	keyboard.setLayout(&fullscreenLayout);
900060a8:	4630      	mov	r0, r6
900060aa:	f8c4 2180 	str.w	r2, [r4, #384]	@ 0x180
900060ae:	4a57      	ldr	r2, [pc, #348]	@ (9000620c <_ZN18KeyboardScreenViewC1Ev+0x180>)
900060b0:	f8c4 3178 	str.w	r3, [r4, #376]	@ 0x178
900060b4:	f8c4 2190 	str.w	r2, [r4, #400]	@ 0x190
900060b8:	4a55      	ldr	r2, [pc, #340]	@ (90006210 <_ZN18KeyboardScreenViewC1Ev+0x184>)
900060ba:	f8c4 3188 	str.w	r3, [r4, #392]	@ 0x188
900060be:	f8c4 21a0 	str.w	r2, [r4, #416]	@ 0x1a0
900060c2:	4a54      	ldr	r2, [pc, #336]	@ (90006214 <_ZN18KeyboardScreenViewC1Ev+0x188>)
900060c4:	f8c4 3198 	str.w	r3, [r4, #408]	@ 0x198
900060c8:	f8c4 21b0 	str.w	r2, [r4, #432]	@ 0x1b0
900060cc:	4a52      	ldr	r2, [pc, #328]	@ (90006218 <_ZN18KeyboardScreenViewC1Ev+0x18c>)
900060ce:	f8c4 31a8 	str.w	r3, [r4, #424]	@ 0x1a8
900060d2:	f8c4 21c0 	str.w	r2, [r4, #448]	@ 0x1c0
900060d6:	4a51      	ldr	r2, [pc, #324]	@ (9000621c <_ZN18KeyboardScreenViewC1Ev+0x190>)
900060d8:	f8c4 31b8 	str.w	r3, [r4, #440]	@ 0x1b8
900060dc:	f8c4 21d0 	str.w	r2, [r4, #464]	@ 0x1d0
900060e0:	4a4f      	ldr	r2, [pc, #316]	@ (90006220 <_ZN18KeyboardScreenViewC1Ev+0x194>)
900060e2:	f8c4 31c8 	str.w	r3, [r4, #456]	@ 0x1c8
900060e6:	f8c4 21e0 	str.w	r2, [r4, #480]	@ 0x1e0
900060ea:	4a4e      	ldr	r2, [pc, #312]	@ (90006224 <_ZN18KeyboardScreenViewC1Ev+0x198>)
900060ec:	f8c4 31d8 	str.w	r3, [r4, #472]	@ 0x1d8
900060f0:	f8c4 31e8 	str.w	r3, [r4, #488]	@ 0x1e8
900060f4:	f8c4 21f0 	str.w	r2, [r4, #496]	@ 0x1f0
900060f8:	f8c4 417c 	str.w	r4, [r4, #380]	@ 0x17c
900060fc:	f8c4 5184 	str.w	r5, [r4, #388]	@ 0x184
90006100:	f8c4 418c 	str.w	r4, [r4, #396]	@ 0x18c
90006104:	f8c4 5194 	str.w	r5, [r4, #404]	@ 0x194
90006108:	f8c4 419c 	str.w	r4, [r4, #412]	@ 0x19c
9000610c:	f8c4 51a4 	str.w	r5, [r4, #420]	@ 0x1a4
90006110:	f8c4 41ac 	str.w	r4, [r4, #428]	@ 0x1ac
90006114:	f8c4 51b4 	str.w	r5, [r4, #436]	@ 0x1b4
90006118:	f8c4 41bc 	str.w	r4, [r4, #444]	@ 0x1bc
9000611c:	f8c4 51c4 	str.w	r5, [r4, #452]	@ 0x1c4
90006120:	f8c4 41cc 	str.w	r4, [r4, #460]	@ 0x1cc
90006124:	f8c4 51d4 	str.w	r5, [r4, #468]	@ 0x1d4
90006128:	f8c4 41dc 	str.w	r4, [r4, #476]	@ 0x1dc
9000612c:	f8c4 51e4 	str.w	r5, [r4, #484]	@ 0x1e4
90006130:	f8c4 41ec 	str.w	r4, [r4, #492]	@ 0x1ec
90006134:	f8c4 51f4 	str.w	r5, [r4, #500]	@ 0x1f4
90006138:	4a3b      	ldr	r2, [pc, #236]	@ (90006228 <_ZN18KeyboardScreenViewC1Ev+0x19c>)
	fullscreenLayout.callbackAreaArray[0].callback = &escPressed;
9000613a:	493c      	ldr	r1, [pc, #240]	@ (9000622c <_ZN18KeyboardScreenViewC1Ev+0x1a0>)
9000613c:	e9c4 347e 	strd	r3, r4, [r4, #504]	@ 0x1f8
90006140:	e9c4 5381 	strd	r5, r3, [r4, #516]	@ 0x204
90006144:	f8c4 3218 	str.w	r3, [r4, #536]	@ 0x218
90006148:	4b39      	ldr	r3, [pc, #228]	@ (90006230 <_ZN18KeyboardScreenViewC1Ev+0x1a4>)
9000614a:	f8c4 2200 	str.w	r2, [r4, #512]	@ 0x200
9000614e:	4a39      	ldr	r2, [pc, #228]	@ (90006234 <_ZN18KeyboardScreenViewC1Ev+0x1a8>)
90006150:	f8c4 420c 	str.w	r4, [r4, #524]	@ 0x20c
90006154:	f8c4 2210 	str.w	r2, [r4, #528]	@ 0x210
90006158:	f504 72bc 	add.w	r2, r4, #376	@ 0x178
9000615c:	f8c4 5214 	str.w	r5, [r4, #532]	@ 0x214
90006160:	f8c4 5224 	str.w	r5, [r4, #548]	@ 0x224
90006164:	e9c4 4387 	strd	r4, r3, [r4, #540]	@ 0x21c
        : pobject(pObject), pmemfun(pmemfun_1)
90006168:	4b33      	ldr	r3, [pc, #204]	@ (90006238 <_ZN18KeyboardScreenViewC1Ev+0x1ac>)
9000616a:	e9c4 348a 	strd	r3, r4, [r4, #552]	@ 0x228
9000616e:	4b33      	ldr	r3, [pc, #204]	@ (9000623c <_ZN18KeyboardScreenViewC1Ev+0x1b0>)
90006170:	e9c4 358c 	strd	r3, r5, [r4, #560]	@ 0x230
90006174:	68cb      	ldr	r3, [r1, #12]
90006176:	609a      	str	r2, [r3, #8]
	fullscreenLayout.callbackAreaArray[1].callback = &delPressed;
90006178:	f504 72c4 	add.w	r2, r4, #392	@ 0x188
9000617c:	619a      	str	r2, [r3, #24]
	fullscreenLayout.callbackAreaArray[2].callback = &tabPressed;
9000617e:	f504 72cc 	add.w	r2, r4, #408	@ 0x198
90006182:	629a      	str	r2, [r3, #40]	@ 0x28
	fullscreenLayout.callbackAreaArray[3].callback = &backspacePressed;
90006184:	f504 72d4 	add.w	r2, r4, #424	@ 0x1a8
90006188:	639a      	str	r2, [r3, #56]	@ 0x38
	fullscreenLayout.callbackAreaArray[4].callback = &enterPressed;
9000618a:	f504 72dc 	add.w	r2, r4, #440	@ 0x1b8
9000618e:	649a      	str	r2, [r3, #72]	@ 0x48
	fullscreenLayout.callbackAreaArray[5].callback = &shiftPressed;
90006190:	f504 72e4 	add.w	r2, r4, #456	@ 0x1c8
90006194:	659a      	str	r2, [r3, #88]	@ 0x58
	fullscreenLayout.callbackAreaArray[6].callback = &homePressed;
90006196:	f504 72ec 	add.w	r2, r4, #472	@ 0x1d8
9000619a:	669a      	str	r2, [r3, #104]	@ 0x68
	fullscreenLayout.callbackAreaArray[7].callback = &endPressed;
9000619c:	f504 72f4 	add.w	r2, r4, #488	@ 0x1e8
900061a0:	679a      	str	r2, [r3, #120]	@ 0x78
	fullscreenLayout.callbackAreaArray[8].callback = &ctrlPressed;
900061a2:	f504 72fc 	add.w	r2, r4, #504	@ 0x1f8
900061a6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
	fullscreenLayout.callbackAreaArray[9].callback = &modPressed;
900061aa:	f504 7202 	add.w	r2, r4, #520	@ 0x208
900061ae:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
	fullscreenLayout.callbackAreaArray[10].callback = &altPressed;
900061b2:	f504 7206 	add.w	r2, r4, #536	@ 0x218
900061b6:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
	keyboard.setLayout(&fullscreenLayout);
900061ba:	f010 fd00 	bl	90016bbe <_ZN8touchgfx8Keyboard9setLayoutEPKNS0_6LayoutE>
	keyboard.setKeyListener(keyPressed);
900061be:	f504 730a 	add.w	r3, r4, #552	@ 0x228
	keyboard.setKeymappingList(&keyMappingListAnsi);
900061c2:	4630      	mov	r0, r6
900061c4:	491e      	ldr	r1, [pc, #120]	@ (90006240 <_ZN18KeyboardScreenViewC1Ev+0x1b4>)
     *
     * @note Backspace, shift and mode keys report a 0 as value.
     */
    void setKeyListener(GenericCallback<Unicode::UnicodeChar>& callback)
    {
        keyListener = &callback;
900061c6:	f8c4 30bc 	str.w	r3, [r4, #188]	@ 0xbc
900061ca:	f010 ff1b 	bl	90017004 <_ZN8touchgfx8Keyboard17setKeymappingListEPKNS0_14KeyMappingListE>
	memset(buffer, 0, sizeof(buffer));
900061ce:	f104 036c 	add.w	r3, r4, #108	@ 0x6c
900061d2:	4a1c      	ldr	r2, [pc, #112]	@ (90006244 <_ZN18KeyboardScreenViewC1Ev+0x1b8>)
900061d4:	4629      	mov	r1, r5
900061d6:	4618      	mov	r0, r3
900061d8:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
900061dc:	f8c4 2098 	str.w	r2, [r4, #152]	@ 0x98
900061e0:	2224      	movs	r2, #36	@ 0x24
900061e2:	f026 facd 	bl	9002c780 <memset>
900061e6:	4603      	mov	r3, r0
	keyboard.setBuffer(buffer, BUFFER_SIZE);
900061e8:	2212      	movs	r2, #18
900061ea:	4630      	mov	r0, r6
900061ec:	4619      	mov	r1, r3
900061ee:	f010 fcdb 	bl	90016ba8 <_ZN8touchgfx8Keyboard9setBufferEPtt>
900061f2:	1d20      	adds	r0, r4, #4
900061f4:	4631      	mov	r1, r6
900061f6:	f00c fff1 	bl	900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900061fa:	4620      	mov	r0, r4
900061fc:	bd70      	pop	{r4, r5, r6, pc}
900061fe:	bf00      	nop
90006200:	9002fae4 	.word	0x9002fae4
90006204:	90005fd9 	.word	0x90005fd9
90006208:	9002fab4 	.word	0x9002fab4
9000620c:	90005fe1 	.word	0x90005fe1
90006210:	90005fe9 	.word	0x90005fe9
90006214:	90005ff1 	.word	0x90005ff1
90006218:	90005ff9 	.word	0x90005ff9
9000621c:	90006011 	.word	0x90006011
90006220:	90006001 	.word	0x90006001
90006224:	90006009 	.word	0x90006009
90006228:	90006019 	.word	0x90006019
9000622c:	240000cc 	.word	0x240000cc
90006230:	90006029 	.word	0x90006029
90006234:	90006021 	.word	0x90006021
90006238:	9002facc 	.word	0x9002facc
9000623c:	90006031 	.word	0x90006031
90006240:	9002fb14 	.word	0x9002fb14
90006244:	011001e0 	.word	0x011001e0

90006248 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev>:
};
90006248:	4bf8      	ldr	r3, [pc, #992]	@ (9000662c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3e4>)
9000624a:	210c      	movs	r1, #12
9000624c:	4af8      	ldr	r2, [pc, #992]	@ (90006630 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3e8>)
9000624e:	2001      	movs	r0, #1
90006250:	f04f 0c10 	mov.w	ip, #16
}
90006254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006258:	f04f 0b40 	mov.w	fp, #64	@ 0x40
9000625c:	f04f 0703 	mov.w	r7, #3
90006260:	f04f 0a20 	mov.w	sl, #32
90006264:	f04f 0902 	mov.w	r9, #2
90006268:	f8c3 b00e 	str.w	fp, [r3, #14]
9000626c:	f04f 0b60 	mov.w	fp, #96	@ 0x60
90006270:	761f      	strb	r7, [r3, #24]
90006272:	f04f 0705 	mov.w	r7, #5
90006276:	f8c3 b01a 	str.w	fp, [r3, #26]
9000627a:	f04f 0b04 	mov.w	fp, #4
9000627e:	f883 7030 	strb.w	r7, [r3, #48]	@ 0x30
90006282:	f04f 0706 	mov.w	r7, #6
90006286:	f883 b024 	strb.w	fp, [r3, #36]	@ 0x24
9000628a:	f04f 0b80 	mov.w	fp, #128	@ 0x80
9000628e:	f883 703c 	strb.w	r7, [r3, #60]	@ 0x3c
90006292:	f04f 0707 	mov.w	r7, #7
90006296:	f8c3 b026 	str.w	fp, [r3, #38]	@ 0x26
9000629a:	f04f 0ba0 	mov.w	fp, #160	@ 0xa0
9000629e:	f883 7048 	strb.w	r7, [r3, #72]	@ 0x48
900062a2:	f04f 0708 	mov.w	r7, #8
900062a6:	f8c3 b032 	str.w	fp, [r3, #50]	@ 0x32
900062aa:	f04f 0bc0 	mov.w	fp, #192	@ 0xc0
900062ae:	7018      	strb	r0, [r3, #0]
900062b0:	f04f 0e0a 	mov.w	lr, #10
900062b4:	f8c3 b03e 	str.w	fp, [r3, #62]	@ 0x3e
900062b8:	f04f 0be0 	mov.w	fp, #224	@ 0xe0
900062bc:	f8c3 a002 	str.w	sl, [r3, #2]
900062c0:	f04f 080f 	mov.w	r8, #15
900062c4:	f8c3 b04a 	str.w	fp, [r3, #74]	@ 0x4a
900062c8:	f44f 7b80 	mov.w	fp, #256	@ 0x100
900062cc:	f8c3 2006 	str.w	r2, [r3, #6]
900062d0:	2400      	movs	r4, #0
900062d2:	8159      	strh	r1, [r3, #10]
900062d4:	f8c3 2012 	str.w	r2, [r3, #18]
900062d8:	82d9      	strh	r1, [r3, #22]
900062da:	f8c3 201e 	str.w	r2, [r3, #30]
900062de:	8459      	strh	r1, [r3, #34]	@ 0x22
900062e0:	f8c3 202a 	str.w	r2, [r3, #42]	@ 0x2a
900062e4:	85d9      	strh	r1, [r3, #46]	@ 0x2e
900062e6:	f8c3 2036 	str.w	r2, [r3, #54]	@ 0x36
900062ea:	8759      	strh	r1, [r3, #58]	@ 0x3a
900062ec:	f8c3 2042 	str.w	r2, [r3, #66]	@ 0x42
900062f0:	f8a3 1046 	strh.w	r1, [r3, #70]	@ 0x46
900062f4:	f8c3 204e 	str.w	r2, [r3, #78]	@ 0x4e
900062f8:	f8a3 1052 	strh.w	r1, [r3, #82]	@ 0x52
900062fc:	f8c3 205a 	str.w	r2, [r3, #90]	@ 0x5a
90006300:	f8a3 105e 	strh.w	r1, [r3, #94]	@ 0x5e
90006304:	f883 7054 	strb.w	r7, [r3, #84]	@ 0x54
90006308:	f04f 0709 	mov.w	r7, #9
9000630c:	f883 900c 	strb.w	r9, [r3, #12]
90006310:	f8c3 b056 	str.w	fp, [r3, #86]	@ 0x56
90006314:	f44f 7b90 	mov.w	fp, #288	@ 0x120
90006318:	f883 7060 	strb.w	r7, [r3, #96]	@ 0x60
9000631c:	f04f 070b 	mov.w	r7, #11
90006320:	f8c3 b062 	str.w	fp, [r3, #98]	@ 0x62
90006324:	f44f 7ba0 	mov.w	fp, #320	@ 0x140
90006328:	f883 7078 	strb.w	r7, [r3, #120]	@ 0x78
9000632c:	f04f 070d 	mov.w	r7, #13
90006330:	f8c3 b06e 	str.w	fp, [r3, #110]	@ 0x6e
90006334:	f44f 7bb0 	mov.w	fp, #352	@ 0x160
90006338:	f883 7090 	strb.w	r7, [r3, #144]	@ 0x90
9000633c:	f04f 070e 	mov.w	r7, #14
90006340:	f8c3 b07a 	str.w	fp, [r3, #122]	@ 0x7a
90006344:	f44f 7bc0 	mov.w	fp, #384	@ 0x180
90006348:	4eba      	ldr	r6, [pc, #744]	@ (90006634 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3ec>)
9000634a:	f8c3 b086 	str.w	fp, [r3, #134]	@ 0x86
9000634e:	f44f 7bd0 	mov.w	fp, #416	@ 0x1a0
90006352:	f883 709c 	strb.w	r7, [r3, #156]	@ 0x9c
90006356:	f8c3 b092 	str.w	fp, [r3, #146]	@ 0x92
9000635a:	f04f 0b11 	mov.w	fp, #17
9000635e:	4fb6      	ldr	r7, [pc, #728]	@ (90006638 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3f0>)
90006360:	f8c3 2066 	str.w	r2, [r3, #102]	@ 0x66
90006364:	f8a3 106a 	strh.w	r1, [r3, #106]	@ 0x6a
90006368:	f8c3 2072 	str.w	r2, [r3, #114]	@ 0x72
9000636c:	f8a3 1076 	strh.w	r1, [r3, #118]	@ 0x76
90006370:	f8c3 207e 	str.w	r2, [r3, #126]	@ 0x7e
90006374:	f8a3 1082 	strh.w	r1, [r3, #130]	@ 0x82
90006378:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
9000637c:	f8c3 208a 	str.w	r2, [r3, #138]	@ 0x8a
90006380:	f8a3 108e 	strh.w	r1, [r3, #142]	@ 0x8e
90006384:	f8c3 2096 	str.w	r2, [r3, #150]	@ 0x96
90006388:	f8a3 109a 	strh.w	r1, [r3, #154]	@ 0x9a
9000638c:	f8c3 209e 	str.w	r2, [r3, #158]	@ 0x9e
90006390:	f8c3 20a2 	str.w	r2, [r3, #162]	@ 0xa2
90006394:	f8a3 10a6 	strh.w	r1, [r3, #166]	@ 0xa6
90006398:	f8c3 20ae 	str.w	r2, [r3, #174]	@ 0xae
9000639c:	f8a3 10b2 	strh.w	r1, [r3, #178]	@ 0xb2
900063a0:	f8c3 70b6 	str.w	r7, [r3, #182]	@ 0xb6
900063a4:	37c0      	adds	r7, #192	@ 0xc0
900063a6:	f8c3 20ba 	str.w	r2, [r3, #186]	@ 0xba
900063aa:	f8a3 10be 	strh.w	r1, [r3, #190]	@ 0xbe
900063ae:	f883 e06c 	strb.w	lr, [r3, #108]	@ 0x6c
900063b2:	f883 80a8 	strb.w	r8, [r3, #168]	@ 0xa8
900063b6:	f8c3 60aa 	str.w	r6, [r3, #170]	@ 0xaa
900063ba:	f883 c0b4 	strb.w	ip, [r3, #180]	@ 0xb4
900063be:	f883 b0c0 	strb.w	fp, [r3, #192]	@ 0xc0
900063c2:	f8df b278 	ldr.w	fp, [pc, #632]	@ 9000663c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3f4>
900063c6:	f8c3 20c6 	str.w	r2, [r3, #198]	@ 0xc6
900063ca:	f8c3 b0c2 	str.w	fp, [r3, #194]	@ 0xc2
900063ce:	f04f 0b12 	mov.w	fp, #18
900063d2:	f8a3 10ca 	strh.w	r1, [r3, #202]	@ 0xca
900063d6:	f883 b0cc 	strb.w	fp, [r3, #204]	@ 0xcc
900063da:	f8df b264 	ldr.w	fp, [pc, #612]	@ 90006640 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3f8>
900063de:	f8c3 20d2 	str.w	r2, [r3, #210]	@ 0xd2
900063e2:	f8c3 b0ce 	str.w	fp, [r3, #206]	@ 0xce
900063e6:	f04f 0b13 	mov.w	fp, #19
900063ea:	f8a3 10d6 	strh.w	r1, [r3, #214]	@ 0xd6
900063ee:	f883 b0d8 	strb.w	fp, [r3, #216]	@ 0xd8
900063f2:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90006644 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x3fc>
900063f6:	f8c3 20de 	str.w	r2, [r3, #222]	@ 0xde
900063fa:	f8c3 b0da 	str.w	fp, [r3, #218]	@ 0xda
900063fe:	f04f 0b14 	mov.w	fp, #20
90006402:	f8a3 10e2 	strh.w	r1, [r3, #226]	@ 0xe2
90006406:	f883 b0e4 	strb.w	fp, [r3, #228]	@ 0xe4
9000640a:	f8df b23c 	ldr.w	fp, [pc, #572]	@ 90006648 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x400>
9000640e:	f8c3 20ea 	str.w	r2, [r3, #234]	@ 0xea
90006412:	f8c3 b0e6 	str.w	fp, [r3, #230]	@ 0xe6
90006416:	f04f 0b15 	mov.w	fp, #21
9000641a:	f8a3 10ee 	strh.w	r1, [r3, #238]	@ 0xee
9000641e:	f883 b0f0 	strb.w	fp, [r3, #240]	@ 0xf0
90006422:	f8df b228 	ldr.w	fp, [pc, #552]	@ 9000664c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x404>
90006426:	f8c3 20f6 	str.w	r2, [r3, #246]	@ 0xf6
9000642a:	f8c3 b0f2 	str.w	fp, [r3, #242]	@ 0xf2
9000642e:	f04f 0b16 	mov.w	fp, #22
90006432:	f8a3 10fa 	strh.w	r1, [r3, #250]	@ 0xfa
90006436:	f883 b0fc 	strb.w	fp, [r3, #252]	@ 0xfc
9000643a:	f04f 0b17 	mov.w	fp, #23
9000643e:	f8c3 2102 	str.w	r2, [r3, #258]	@ 0x102
90006442:	f883 b108 	strb.w	fp, [r3, #264]	@ 0x108
90006446:	f8df b208 	ldr.w	fp, [pc, #520]	@ 90006650 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x408>
9000644a:	f8a3 1106 	strh.w	r1, [r3, #262]	@ 0x106
9000644e:	f8c3 b10a 	str.w	fp, [r3, #266]	@ 0x10a
90006452:	f04f 0b18 	mov.w	fp, #24
90006456:	f8c3 210e 	str.w	r2, [r3, #270]	@ 0x10e
9000645a:	f883 b114 	strb.w	fp, [r3, #276]	@ 0x114
9000645e:	f8df b1f4 	ldr.w	fp, [pc, #500]	@ 90006654 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x40c>
90006462:	f8a3 1112 	strh.w	r1, [r3, #274]	@ 0x112
90006466:	f8c3 b116 	str.w	fp, [r3, #278]	@ 0x116
9000646a:	f04f 0b19 	mov.w	fp, #25
9000646e:	f8c3 211a 	str.w	r2, [r3, #282]	@ 0x11a
90006472:	f883 b120 	strb.w	fp, [r3, #288]	@ 0x120
90006476:	f8df b1e0 	ldr.w	fp, [pc, #480]	@ 90006658 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x410>
9000647a:	f8a3 111e 	strh.w	r1, [r3, #286]	@ 0x11e
9000647e:	f8c3 70fe 	str.w	r7, [r3, #254]	@ 0xfe
90006482:	f8c3 b122 	str.w	fp, [r3, #290]	@ 0x122
90006486:	f883 a174 	strb.w	sl, [r3, #372]	@ 0x174
9000648a:	f04f 0a1a 	mov.w	sl, #26
9000648e:	f8c3 2126 	str.w	r2, [r3, #294]	@ 0x126
90006492:	f883 a12c 	strb.w	sl, [r3, #300]	@ 0x12c
90006496:	f44f 0ad8 	mov.w	sl, #7077888	@ 0x6c0000
9000649a:	f8a3 112a 	strh.w	r1, [r3, #298]	@ 0x12a
9000649e:	f8c3 a12e 	str.w	sl, [r3, #302]	@ 0x12e
900064a2:	f04f 0a1b 	mov.w	sl, #27
900064a6:	f8c3 2132 	str.w	r2, [r3, #306]	@ 0x132
900064aa:	f883 a138 	strb.w	sl, [r3, #312]	@ 0x138
900064ae:	f8df a1ac 	ldr.w	sl, [pc, #428]	@ 9000665c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x414>
900064b2:	f8a3 1136 	strh.w	r1, [r3, #310]	@ 0x136
900064b6:	f8c3 a13a 	str.w	sl, [r3, #314]	@ 0x13a
900064ba:	f04f 0a1c 	mov.w	sl, #28
900064be:	f8c3 213e 	str.w	r2, [r3, #318]	@ 0x13e
900064c2:	f883 a144 	strb.w	sl, [r3, #324]	@ 0x144
900064c6:	f8df a198 	ldr.w	sl, [pc, #408]	@ 90006660 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x418>
900064ca:	f8a3 1142 	strh.w	r1, [r3, #322]	@ 0x142
900064ce:	f8c3 a146 	str.w	sl, [r3, #326]	@ 0x146
900064d2:	f04f 0a1d 	mov.w	sl, #29
900064d6:	f8c3 214a 	str.w	r2, [r3, #330]	@ 0x14a
900064da:	f883 a150 	strb.w	sl, [r3, #336]	@ 0x150
900064de:	f8df a184 	ldr.w	sl, [pc, #388]	@ 90006664 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x41c>
900064e2:	f8a3 114e 	strh.w	r1, [r3, #334]	@ 0x14e
900064e6:	f8c3 a152 	str.w	sl, [r3, #338]	@ 0x152
900064ea:	f04f 0a1e 	mov.w	sl, #30
900064ee:	f8c3 2156 	str.w	r2, [r3, #342]	@ 0x156
900064f2:	f883 a15c 	strb.w	sl, [r3, #348]	@ 0x15c
900064f6:	f8df a170 	ldr.w	sl, [pc, #368]	@ 90006668 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x420>
900064fa:	f8a3 115a 	strh.w	r1, [r3, #346]	@ 0x15a
900064fe:	f8c3 a15e 	str.w	sl, [r3, #350]	@ 0x15e
90006502:	f04f 0a1f 	mov.w	sl, #31
90006506:	f8c3 2162 	str.w	r2, [r3, #354]	@ 0x162
9000650a:	f883 a168 	strb.w	sl, [r3, #360]	@ 0x168
9000650e:	f8df a15c 	ldr.w	sl, [pc, #348]	@ 9000666c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x424>
90006512:	f8a3 1166 	strh.w	r1, [r3, #358]	@ 0x166
90006516:	f8c3 a16a 	str.w	sl, [r3, #362]	@ 0x16a
9000651a:	f10a 0a20 	add.w	sl, sl, #32
9000651e:	f8c3 216e 	str.w	r2, [r3, #366]	@ 0x16e
90006522:	f8c3 a176 	str.w	sl, [r3, #374]	@ 0x176
90006526:	f04f 0a21 	mov.w	sl, #33	@ 0x21
9000652a:	f8a3 1172 	strh.w	r1, [r3, #370]	@ 0x172
9000652e:	f883 a180 	strb.w	sl, [r3, #384]	@ 0x180
90006532:	f8df a13c 	ldr.w	sl, [pc, #316]	@ 90006670 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x428>
90006536:	f8c3 217a 	str.w	r2, [r3, #378]	@ 0x17a
9000653a:	f8a3 117e 	strh.w	r1, [r3, #382]	@ 0x17e
9000653e:	f8c3 2186 	str.w	r2, [r3, #390]	@ 0x186
90006542:	f8c3 a182 	str.w	sl, [r3, #386]	@ 0x182
90006546:	f04f 0a22 	mov.w	sl, #34	@ 0x22
9000654a:	f8a3 118a 	strh.w	r1, [r3, #394]	@ 0x18a
9000654e:	f883 a18c 	strb.w	sl, [r3, #396]	@ 0x18c
90006552:	f8df a120 	ldr.w	sl, [pc, #288]	@ 90006674 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x42c>
90006556:	f8c3 2192 	str.w	r2, [r3, #402]	@ 0x192
9000655a:	f8c3 a18e 	str.w	sl, [r3, #398]	@ 0x18e
9000655e:	f04f 0a23 	mov.w	sl, #35	@ 0x23
90006562:	f8a3 1196 	strh.w	r1, [r3, #406]	@ 0x196
90006566:	f883 a198 	strb.w	sl, [r3, #408]	@ 0x198
9000656a:	f8df a10c 	ldr.w	sl, [pc, #268]	@ 90006678 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x430>
9000656e:	f8c3 219e 	str.w	r2, [r3, #414]	@ 0x19e
90006572:	f8c3 a19a 	str.w	sl, [r3, #410]	@ 0x19a
90006576:	f04f 0a24 	mov.w	sl, #36	@ 0x24
9000657a:	f8a3 11a2 	strh.w	r1, [r3, #418]	@ 0x1a2
9000657e:	f883 a1a4 	strb.w	sl, [r3, #420]	@ 0x1a4
90006582:	f8df a0f8 	ldr.w	sl, [pc, #248]	@ 9000667c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x434>
90006586:	f8c3 21aa 	str.w	r2, [r3, #426]	@ 0x1aa
9000658a:	f8c3 a1a6 	str.w	sl, [r3, #422]	@ 0x1a6
9000658e:	f04f 0a25 	mov.w	sl, #37	@ 0x25
90006592:	f8a3 11ae 	strh.w	r1, [r3, #430]	@ 0x1ae
90006596:	f883 a1b0 	strb.w	sl, [r3, #432]	@ 0x1b0
9000659a:	f8df a0e4 	ldr.w	sl, [pc, #228]	@ 90006680 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x438>
9000659e:	f8c3 21b6 	str.w	r2, [r3, #438]	@ 0x1b6
900065a2:	f8c3 a1b2 	str.w	sl, [r3, #434]	@ 0x1b2
900065a6:	f04f 0a26 	mov.w	sl, #38	@ 0x26
900065aa:	f8a3 11ba 	strh.w	r1, [r3, #442]	@ 0x1ba
900065ae:	f883 a1bc 	strb.w	sl, [r3, #444]	@ 0x1bc
900065b2:	f8df a0d0 	ldr.w	sl, [pc, #208]	@ 90006684 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x43c>
900065b6:	f8c3 21c2 	str.w	r2, [r3, #450]	@ 0x1c2
900065ba:	f8c3 a1be 	str.w	sl, [r3, #446]	@ 0x1be
900065be:	f04f 0a27 	mov.w	sl, #39	@ 0x27
900065c2:	f8a3 11c6 	strh.w	r1, [r3, #454]	@ 0x1c6
900065c6:	f883 a1c8 	strb.w	sl, [r3, #456]	@ 0x1c8
900065ca:	f8df a0bc 	ldr.w	sl, [pc, #188]	@ 90006688 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x440>
900065ce:	f8c3 21ce 	str.w	r2, [r3, #462]	@ 0x1ce
900065d2:	f8c3 a1ca 	str.w	sl, [r3, #458]	@ 0x1ca
900065d6:	f04f 0a28 	mov.w	sl, #40	@ 0x28
900065da:	f8a3 11d2 	strh.w	r1, [r3, #466]	@ 0x1d2
900065de:	f883 a1d4 	strb.w	sl, [r3, #468]	@ 0x1d4
900065e2:	f8df a0a8 	ldr.w	sl, [pc, #168]	@ 9000668c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x444>
900065e6:	f8c3 21da 	str.w	r2, [r3, #474]	@ 0x1da
900065ea:	f8c3 a1d6 	str.w	sl, [r3, #470]	@ 0x1d6
900065ee:	f04f 0a29 	mov.w	sl, #41	@ 0x29
900065f2:	f8a3 11de 	strh.w	r1, [r3, #478]	@ 0x1de
900065f6:	f883 a1e0 	strb.w	sl, [r3, #480]	@ 0x1e0
900065fa:	f8df a094 	ldr.w	sl, [pc, #148]	@ 90006690 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x448>
900065fe:	f8c3 21e6 	str.w	r2, [r3, #486]	@ 0x1e6
90006602:	f8a3 11ea 	strh.w	r1, [r3, #490]	@ 0x1ea
90006606:	f8c3 a1e2 	str.w	sl, [r3, #482]	@ 0x1e2
9000660a:	f04f 0a2a 	mov.w	sl, #42	@ 0x2a
9000660e:	f8a3 11f6 	strh.w	r1, [r3, #502]	@ 0x1f6
90006612:	f8a3 1202 	strh.w	r1, [r3, #514]	@ 0x202
90006616:	f8a3 120e 	strh.w	r1, [r3, #526]	@ 0x20e
9000661a:	f8a3 121a 	strh.w	r1, [r3, #538]	@ 0x21a
9000661e:	f8a3 1226 	strh.w	r1, [r3, #550]	@ 0x226
90006622:	f8a3 1232 	strh.w	r1, [r3, #562]	@ 0x232
90006626:	f8a3 123e 	strh.w	r1, [r3, #574]	@ 0x23e
9000662a:	e033      	b.n	90006694 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x44c>
9000662c:	2400a338 	.word	0x2400a338
90006630:	00360020 	.word	0x00360020
90006634:	00360040 	.word	0x00360040
90006638:	00360060 	.word	0x00360060
9000663c:	00360080 	.word	0x00360080
90006640:	003600a0 	.word	0x003600a0
90006644:	003600c0 	.word	0x003600c0
90006648:	003600e0 	.word	0x003600e0
9000664c:	00360100 	.word	0x00360100
90006650:	00360140 	.word	0x00360140
90006654:	00360160 	.word	0x00360160
90006658:	00360180 	.word	0x00360180
9000665c:	006c0020 	.word	0x006c0020
90006660:	006c0040 	.word	0x006c0040
90006664:	006c0060 	.word	0x006c0060
90006668:	006c0080 	.word	0x006c0080
9000666c:	006c00a0 	.word	0x006c00a0
90006670:	006c00e0 	.word	0x006c00e0
90006674:	006c0100 	.word	0x006c0100
90006678:	006c0120 	.word	0x006c0120
9000667c:	006c0140 	.word	0x006c0140
90006680:	006c0160 	.word	0x006c0160
90006684:	00a20040 	.word	0x00a20040
90006688:	00a20060 	.word	0x00a20060
9000668c:	00a20080 	.word	0x00a20080
90006690:	00a200a0 	.word	0x00a200a0
90006694:	4959      	ldr	r1, [pc, #356]	@ (900067fc <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5b4>)
90006696:	485a      	ldr	r0, [pc, #360]	@ (90006800 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5b8>)
90006698:	f8c3 11ee 	str.w	r1, [r3, #494]	@ 0x1ee
9000669c:	212b      	movs	r1, #43	@ 0x2b
9000669e:	f8c3 21f2 	str.w	r2, [r3, #498]	@ 0x1f2
900066a2:	f883 11f8 	strb.w	r1, [r3, #504]	@ 0x1f8
900066a6:	4957      	ldr	r1, [pc, #348]	@ (90006804 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5bc>)
900066a8:	f8c3 21fe 	str.w	r2, [r3, #510]	@ 0x1fe
900066ac:	f8c3 11fa 	str.w	r1, [r3, #506]	@ 0x1fa
900066b0:	212c      	movs	r1, #44	@ 0x2c
900066b2:	f8c3 220a 	str.w	r2, [r3, #522]	@ 0x20a
900066b6:	f883 1204 	strb.w	r1, [r3, #516]	@ 0x204
900066ba:	4953      	ldr	r1, [pc, #332]	@ (90006808 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5c0>)
900066bc:	f8c3 2216 	str.w	r2, [r3, #534]	@ 0x216
900066c0:	f8c3 1206 	str.w	r1, [r3, #518]	@ 0x206
900066c4:	212d      	movs	r1, #45	@ 0x2d
900066c6:	f8c3 2222 	str.w	r2, [r3, #546]	@ 0x222
900066ca:	f883 1210 	strb.w	r1, [r3, #528]	@ 0x210
900066ce:	494f      	ldr	r1, [pc, #316]	@ (9000680c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5c4>)
900066d0:	f8c3 222e 	str.w	r2, [r3, #558]	@ 0x22e
900066d4:	f8c3 1212 	str.w	r1, [r3, #530]	@ 0x212
900066d8:	212e      	movs	r1, #46	@ 0x2e
900066da:	f8c3 223a 	str.w	r2, [r3, #570]	@ 0x23a
900066de:	f883 121c 	strb.w	r1, [r3, #540]	@ 0x21c
900066e2:	494b      	ldr	r1, [pc, #300]	@ (90006810 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5c8>)
900066e4:	f883 a1ec 	strb.w	sl, [r3, #492]	@ 0x1ec
900066e8:	f8c3 121e 	str.w	r1, [r3, #542]	@ 0x21e
900066ec:	212f      	movs	r1, #47	@ 0x2f
900066ee:	f8c3 7246 	str.w	r7, [r3, #582]	@ 0x246
900066f2:	f883 1228 	strb.w	r1, [r3, #552]	@ 0x228
900066f6:	4947      	ldr	r1, [pc, #284]	@ (90006814 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5cc>)
900066f8:	f8a3 824a 	strh.w	r8, [r3, #586]	@ 0x24a
900066fc:	f8c3 122a 	str.w	r1, [r3, #554]	@ 0x22a
90006700:	2130      	movs	r1, #48	@ 0x30
90006702:	6004      	str	r4, [r0, #0]
90006704:	f883 1234 	strb.w	r1, [r3, #564]	@ 0x234
90006708:	4943      	ldr	r1, [pc, #268]	@ (90006818 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5d0>)
9000670a:	4d44      	ldr	r5, [pc, #272]	@ (9000681c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5d4>)
9000670c:	f8c3 1236 	str.w	r1, [r3, #566]	@ 0x236
90006710:	2131      	movs	r1, #49	@ 0x31
90006712:	f883 1240 	strb.w	r1, [r3, #576]	@ 0x240
90006716:	4942      	ldr	r1, [pc, #264]	@ (90006820 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5d8>)
90006718:	f8c3 1242 	str.w	r1, [r3, #578]	@ 0x242
};
9000671c:	f04f 0307 	mov.w	r3, #7
90006720:	6042      	str	r2, [r0, #4]
90006722:	8383      	strh	r3, [r0, #28]
90006724:	f04f 0305 	mov.w	r3, #5
90006728:	6642      	str	r2, [r0, #100]	@ 0x64
9000672a:	8783      	strh	r3, [r0, #60]	@ 0x3c
9000672c:	4b3d      	ldr	r3, [pc, #244]	@ (90006824 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5dc>)
9000672e:	6742      	str	r2, [r0, #116]	@ 0x74
90006730:	6443      	str	r3, [r0, #68]	@ 0x44
90006732:	f04f 0309 	mov.w	r3, #9
90006736:	f8a0 e00c 	strh.w	lr, [r0, #12]
9000673a:	f8a0 304c 	strh.w	r3, [r0, #76]	@ 0x4c
9000673e:	f04f 030e 	mov.w	r3, #14
90006742:	f8a0 c02c 	strh.w	ip, [r0, #44]	@ 0x2c
90006746:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
9000674a:	f04f 030b 	mov.w	r3, #11
9000674e:	6084      	str	r4, [r0, #8]
90006750:	f8a0 306c 	strh.w	r3, [r0, #108]	@ 0x6c
90006754:	f04f 0308 	mov.w	r3, #8
90006758:	6484      	str	r4, [r0, #72]	@ 0x48
9000675a:	f8a0 307c 	strh.w	r3, [r0, #124]	@ 0x7c
9000675e:	f44f 73e0 	mov.w	r3, #448	@ 0x1c0
90006762:	6684      	str	r4, [r0, #104]	@ 0x68
90006764:	6103      	str	r3, [r0, #16]
90006766:	f44f 1358 	mov.w	r3, #3538944	@ 0x360000
9000676a:	6784      	str	r4, [r0, #120]	@ 0x78
9000676c:	6203      	str	r3, [r0, #32]
9000676e:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
90006772:	f8c0 6084 	str.w	r6, [r0, #132]	@ 0x84
90006776:	6303      	str	r3, [r0, #48]	@ 0x30
90006778:	4b2b      	ldr	r3, [pc, #172]	@ (90006828 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5e0>)
9000677a:	6403      	str	r3, [r0, #64]	@ 0x40
9000677c:	f44f 0322 	mov.w	r3, #10616832	@ 0xa20000
90006780:	6503      	str	r3, [r0, #80]	@ 0x50
90006782:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
90006786:	6603      	str	r3, [r0, #96]	@ 0x60
90006788:	3320      	adds	r3, #32
9000678a:	6703      	str	r3, [r0, #112]	@ 0x70
9000678c:	f44f 0358 	mov.w	r3, #14155776	@ 0xd80000
90006790:	e9c0 2405 	strd	r2, r4, [r0, #20]
90006794:	e9c0 2409 	strd	r2, r4, [r0, #36]	@ 0x24
90006798:	e9c0 640d 	strd	r6, r4, [r0, #52]	@ 0x34
9000679c:	e9c0 6415 	strd	r6, r4, [r0, #84]	@ 0x54
900067a0:	f8c0 3080 	str.w	r3, [r0, #128]	@ 0x80
900067a4:	f04f 0306 	mov.w	r3, #6
        : color(col)
900067a8:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
900067ac:	f8c0 4088 	str.w	r4, [r0, #136]	@ 0x88
900067b0:	f8a0 308c 	strh.w	r3, [r0, #140]	@ 0x8c
900067b4:	f04f 030d 	mov.w	r3, #13
900067b8:	626a      	str	r2, [r5, #36]	@ 0x24
900067ba:	f8a0 309c 	strh.w	r3, [r0, #156]	@ 0x9c
900067be:	f04f 0303 	mov.w	r3, #3
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900067c2:	4a1a      	ldr	r2, [pc, #104]	@ (9000682c <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5e4>)
900067c4:	f8a0 30ac 	strh.w	r3, [r0, #172]	@ 0xac
900067c8:	4b19      	ldr	r3, [pc, #100]	@ (90006830 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5e8>)
900067ca:	f8a5 9020 	strh.w	r9, [r5, #32]
900067ce:	f8c5 3012 	str.w	r3, [r5, #18]
900067d2:	4b18      	ldr	r3, [pc, #96]	@ (90006834 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5ec>)
900067d4:	f8c0 6094 	str.w	r6, [r0, #148]	@ 0x94
900067d8:	61eb      	str	r3, [r5, #28]
900067da:	4b17      	ldr	r3, [pc, #92]	@ (90006838 <_GLOBAL__sub_I__ZN18KeyboardScreenViewC2Ev+0x5f0>)
900067dc:	f8c0 60a4 	str.w	r6, [r0, #164]	@ 0xa4
900067e0:	f8c0 4098 	str.w	r4, [r0, #152]	@ 0x98
900067e4:	f8c0 40a8 	str.w	r4, [r0, #168]	@ 0xa8
900067e8:	f8c5 4016 	str.w	r4, [r5, #22]
        : color(col)
900067ec:	62ec      	str	r4, [r5, #44]	@ 0x2c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900067ee:	f8c0 2090 	str.w	r2, [r0, #144]	@ 0x90
900067f2:	f8c0 30a0 	str.w	r3, [r0, #160]	@ 0xa0
900067f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900067fa:	bf00      	nop
900067fc:	00a200c0 	.word	0x00a200c0
90006800:	2400a288 	.word	0x2400a288
90006804:	00a200e0 	.word	0x00a200e0
90006808:	00a20100 	.word	0x00a20100
9000680c:	00a20120 	.word	0x00a20120
90006810:	00a20140 	.word	0x00a20140
90006814:	00a20160 	.word	0x00a20160
90006818:	00a20180 	.word	0x00a20180
9000681c:	240000cc 	.word	0x240000cc
90006820:	00d80080 	.word	0x00d80080
90006824:	00360060 	.word	0x00360060
90006828:	006c0180 	.word	0x006c0180
9000682c:	00d80040 	.word	0x00d80040
90006830:	01f401f4 	.word	0x01f401f4
90006834:	9002ee94 	.word	0x9002ee94
90006838:	00d801a0 	.word	0x00d801a0

9000683c <_ZN18KeyboardScreenView11setupScreenEv>:
    KeyboardScreenViewBase::setupScreen();
9000683c:	f7fe bd02 	b.w	90005244 <_ZN22KeyboardScreenViewBase11setupScreenEv>

90006840 <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
#include <touchgfx/Utils.hpp>



Model::Model() : modelListener(0)
90006840:	2200      	movs	r2, #0
90006842:	6002      	str	r2, [r0, #0]
{

}
90006844:	4770      	bx	lr
90006846:	bf00      	nop

90006848 <_ZN5Model4tickEv>:

void Model::tick()
{
90006848:	b510      	push	{r4, lr}
#ifndef SIMULATOR
	static uint8_t state;
	osStatus_t status = osMessageQueueGet(userButtonQueueHandle, &state, NULL, 0);
9000684a:	2300      	movs	r3, #0
9000684c:	4c07      	ldr	r4, [pc, #28]	@ (9000686c <_ZN5Model4tickEv+0x24>)
{
9000684e:	4684      	mov	ip, r0
	osStatus_t status = osMessageQueueGet(userButtonQueueHandle, &state, NULL, 0);
90006850:	4907      	ldr	r1, [pc, #28]	@ (90006870 <_ZN5Model4tickEv+0x28>)
90006852:	6820      	ldr	r0, [r4, #0]
90006854:	461a      	mov	r2, r3
{
90006856:	4664      	mov	r4, ip
	osStatus_t status = osMessageQueueGet(userButtonQueueHandle, &state, NULL, 0);
90006858:	f009 f900 	bl	9000fa5c <osMessageQueueGet>
	if(status == osOK) {
9000685c:	b928      	cbnz	r0, 9000686a <_ZN5Model4tickEv+0x22>
		modelListener->HandleButtonPressed();
9000685e:	6820      	ldr	r0, [r4, #0]
90006860:	6803      	ldr	r3, [r0, #0]
	}
#endif
}
90006862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		modelListener->HandleButtonPressed();
90006866:	689b      	ldr	r3, [r3, #8]
90006868:	4718      	bx	r3
}
9000686a:	bd10      	pop	{r4, pc}
9000686c:	24009b44 	.word	0x24009b44
90006870:	2400a584 	.word	0x2400a584

90006874 <_ZN5Model22toggleKeyboardModifierEh>:

void Model::toggleKeyboardModifier(uint8_t modifiers)
{
	activeModifiers ^= modifiers;
90006874:	7903      	ldrb	r3, [r0, #4]
90006876:	4059      	eors	r1, r3
90006878:	7101      	strb	r1, [r0, #4]
	touchgfx_printf("Keyboard modifiers changed: 0x%x\n", activeModifiers);
}
9000687a:	4770      	bx	lr

9000687c <_ZN5Model15handleNormalKeyEt>:

void Model::handleNormalKey(uint16_t key)
{
9000687c:	b570      	push	{r4, r5, r6, lr}
9000687e:	4604      	mov	r4, r0
#ifndef SIMULATOR

	GUIKeyboardEvent* keyboardEvent = (GUIKeyboardEvent*) malloc(sizeof(GUIKeyboardEvent));
90006880:	2004      	movs	r0, #4
{
90006882:	460d      	mov	r5, r1
	GUIKeyboardEvent* keyboardEvent = (GUIKeyboardEvent*) malloc(sizeof(GUIKeyboardEvent));
90006884:	f025 fd04 	bl	9002c290 <malloc>
	keyboardEvent->MODIFIERS = activeModifiers;
90006888:	7923      	ldrb	r3, [r4, #4]
	GUIKeyboardEvent* keyboardEvent = (GUIKeyboardEvent*) malloc(sizeof(GUIKeyboardEvent));
9000688a:	4602      	mov	r2, r0

	usbKeyboardEvent = {
		USB_EVENT_KEYBOARD,
		keyboardEvent,
	};
	osMessageQueuePut(usbEventQueueHandle, &usbKeyboardEvent, 0U, 0U);
9000688c:	4908      	ldr	r1, [pc, #32]	@ (900068b0 <_ZN5Model15handleNormalKeyEt+0x34>)
	usbKeyboardEvent = {
9000688e:	f04f 0c01 	mov.w	ip, #1
	keyboardEvent->MODIFIERS = activeModifiers;
90006892:	7003      	strb	r3, [r0, #0]
	osMessageQueuePut(usbEventQueueHandle, &usbKeyboardEvent, 0U, 0U);
90006894:	2300      	movs	r3, #0
	usbKeyboardEvent = {
90006896:	60e2      	str	r2, [r4, #12]
	keyboardEvent->keyChar = key;
90006898:	8055      	strh	r5, [r2, #2]
	osMessageQueuePut(usbEventQueueHandle, &usbKeyboardEvent, 0U, 0U);
9000689a:	461a      	mov	r2, r3
9000689c:	6808      	ldr	r0, [r1, #0]
9000689e:	f104 0108 	add.w	r1, r4, #8
	usbKeyboardEvent = {
900068a2:	f884 c008 	strb.w	ip, [r4, #8]

#else
	touchgfx_printf("Key pressed: 0x%x\n", key);
#endif
}
900068a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	osMessageQueuePut(usbEventQueueHandle, &usbKeyboardEvent, 0U, 0U);
900068aa:	f009 b89b 	b.w	9000f9e4 <osMessageQueuePut>
900068ae:	bf00      	nop
900068b0:	24009b40 	.word	0x24009b40

900068b4 <_ZN5Model19handleMouseMovementEhh>:

void Model::handleMouseMovement(uint8_t x, uint8_t y)
{
900068b4:	b570      	push	{r4, r5, r6, lr}
900068b6:	4604      	mov	r4, r0
#ifndef SIMULATOR
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
900068b8:	2003      	movs	r0, #3
{
900068ba:	460e      	mov	r6, r1
900068bc:	4615      	mov	r5, r2
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
900068be:	f025 fce7 	bl	9002c290 <malloc>
	mouseEvent->BUTTONS = 0;
900068c2:	2300      	movs	r3, #0
	mouseEvent->X = x;
	mouseEvent->Y = y;
	usbMouseEvent = {
900068c4:	6160      	str	r0, [r4, #20]
		USB_EVENT_MOUSE,
		mouseEvent,
	};
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
900068c6:	f104 0110 	add.w	r1, r4, #16
	usbMouseEvent = {
900068ca:	7423      	strb	r3, [r4, #16]
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
900068cc:	461a      	mov	r2, r3
900068ce:	4c04      	ldr	r4, [pc, #16]	@ (900068e0 <_ZN5Model19handleMouseMovementEhh+0x2c>)
	mouseEvent->BUTTONS = 0;
900068d0:	7003      	strb	r3, [r0, #0]
	mouseEvent->X = x;
900068d2:	7046      	strb	r6, [r0, #1]
	mouseEvent->Y = y;
900068d4:	7085      	strb	r5, [r0, #2]
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
900068d6:	6820      	ldr	r0, [r4, #0]

#else
	touchgfx_printf("Mouse moved: %d, %d\n", x, y);
#endif
}
900068d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
900068dc:	f009 b882 	b.w	9000f9e4 <osMessageQueuePut>
900068e0:	24009b40 	.word	0x24009b40

900068e4 <_ZN5Model16handleMouseClickEh>:

void Model::handleMouseClick(uint8_t buttons)
{
900068e4:	b570      	push	{r4, r5, r6, lr}
900068e6:	4604      	mov	r4, r0
#ifndef SIMULATOR
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
900068e8:	2003      	movs	r0, #3
{
900068ea:	460d      	mov	r5, r1
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
900068ec:	f025 fcd0 	bl	9002c290 <malloc>
		mouseEvent->BUTTONS = buttons;
		mouseEvent->X = 0;
900068f0:	2300      	movs	r3, #0
	GUIMouseEvent* mouseEvent = (GUIMouseEvent*) malloc(sizeof(GUIMouseEvent));
900068f2:	4602      	mov	r2, r0
		mouseEvent->Y = 0;
		usbMouseEvent = {
			USB_EVENT_MOUSE,
			mouseEvent,
		};
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
900068f4:	4906      	ldr	r1, [pc, #24]	@ (90006910 <_ZN5Model16handleMouseClickEh+0x2c>)
		usbMouseEvent = {
900068f6:	6162      	str	r2, [r4, #20]
		mouseEvent->BUTTONS = buttons;
900068f8:	7015      	strb	r5, [r2, #0]
		mouseEvent->X = 0;
900068fa:	7053      	strb	r3, [r2, #1]
		mouseEvent->Y = 0;
900068fc:	7093      	strb	r3, [r2, #2]
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
900068fe:	461a      	mov	r2, r3
90006900:	6808      	ldr	r0, [r1, #0]
90006902:	f104 0110 	add.w	r1, r4, #16
		usbMouseEvent = {
90006906:	7423      	strb	r3, [r4, #16]

#else
	touchgfx_printf("Mouse clicked: 0x%x\n", buttons);
#endif
}
90006908:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	osMessageQueuePut(usbEventQueueHandle, &usbMouseEvent, 0U, 0U);
9000690c:	f009 b86a 	b.w	9000f9e4 <osMessageQueuePut>
90006910:	24009b40 	.word	0x24009b40

90006914 <_ZN17TouchpadContainerD1Ev>:
    add(circle1);
	touchgfx_printf("Hello touchable!");
    setTouchable(true);
}

TouchpadContainer::~TouchpadContainer() {
90006914:	4b03      	ldr	r3, [pc, #12]	@ (90006924 <_ZN17TouchpadContainerD1Ev+0x10>)
90006916:	b510      	push	{r4, lr}
90006918:	4604      	mov	r4, r0
9000691a:	6003      	str	r3, [r0, #0]
    CanvasWidgetRenderer::resetBuffer();
9000691c:	f011 f9fe 	bl	90017d1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90006920:	4620      	mov	r0, r4
90006922:	bd10      	pop	{r4, pc}
90006924:	9002fbe8 	.word	0x9002fbe8

90006928 <_ZN17TouchpadContainerD0Ev>:
TouchpadContainer::~TouchpadContainer() {
90006928:	4b06      	ldr	r3, [pc, #24]	@ (90006944 <_ZN17TouchpadContainerD0Ev+0x1c>)
9000692a:	b510      	push	{r4, lr}
9000692c:	4604      	mov	r4, r0
9000692e:	6003      	str	r3, [r0, #0]
    CanvasWidgetRenderer::resetBuffer();
90006930:	f011 f9f4 	bl	90017d1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90006934:	f641 41a8 	movw	r1, #7336	@ 0x1ca8
90006938:	4620      	mov	r0, r4
9000693a:	f025 f90e 	bl	9002bb5a <_ZdlPvj>
9000693e:	4620      	mov	r0, r4
90006940:	bd10      	pop	{r4, pc}
90006942:	bf00      	nop
90006944:	9002fbe8 	.word	0x9002fbe8

90006948 <_ZN17TouchpadContainerC1Ev>:
TouchpadContainer::TouchpadContainer() {
90006948:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
          touchable(false),
9000694c:	f44f 7280 	mov.w	r2, #256	@ 0x100
        : x(0), y(0), width(0), height(0)
90006950:	2500      	movs	r5, #0
90006952:	4b42      	ldr	r3, [pc, #264]	@ (90006a5c <_ZN17TouchpadContainerC1Ev+0x114>)
90006954:	4606      	mov	r6, r0
90006956:	4604      	mov	r4, r0
90006958:	8482      	strh	r2, [r0, #36]	@ 0x24
          firstChild(0)
9000695a:	6285      	str	r5, [r0, #40]	@ 0x28
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000695c:	f8df 8118 	ldr.w	r8, [pc, #280]	@ 90006a78 <_ZN17TouchpadContainerC1Ev+0x130>
90006960:	f104 0774 	add.w	r7, r4, #116	@ 0x74
90006964:	e9c0 5501 	strd	r5, r5, [r0, #4]
90006968:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
9000696c:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
90006970:	e9c0 5507 	strd	r5, r5, [r0, #28]
90006974:	f846 3b2c 	str.w	r3, [r6], #44
90006978:	4630      	mov	r0, r6
9000697a:	f00f f993 	bl	90015ca4 <_ZN8touchgfx6CircleC1Ev>
        : AbstractPainter()
9000697e:	4b38      	ldr	r3, [pc, #224]	@ (90006a60 <_ZN17TouchpadContainerC1Ev+0x118>)
        : widgetWidth(0)
90006980:	f8a4 5078 	strh.w	r5, [r4, #120]	@ 0x78
90006984:	6763      	str	r3, [r4, #116]	@ 0x74
90006986:	f8d8 3000 	ldr.w	r3, [r8]
9000698a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000698e:	b312      	cbz	r2, 900069d6 <_ZN17TouchpadContainerC1Ev+0x8e>
90006990:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90006992:	2800      	cmp	r0, #0
90006994:	d05b      	beq.n	90006a4e <_ZN17TouchpadContainerC1Ev+0x106>
        bool compat = HAL::lcd().framebufferFormat() == format;
90006996:	6803      	ldr	r3, [r0, #0]
90006998:	4d32      	ldr	r5, [pc, #200]	@ (90006a64 <_ZN17TouchpadContainerC1Ev+0x11c>)
9000699a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000699c:	42aa      	cmp	r2, r5
9000699e:	d028      	beq.n	900069f2 <_ZN17TouchpadContainerC1Ev+0xaa>
900069a0:	4790      	blx	r2
        return auxiliaryLCD;
900069a2:	f8d8 3000 	ldr.w	r3, [r8]
900069a6:	fab0 f880 	clz	r8, r0
900069aa:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900069ac:	ea4f 1858 	mov.w	r8, r8, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900069b0:	b140      	cbz	r0, 900069c4 <_ZN17TouchpadContainerC1Ev+0x7c>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900069b2:	6803      	ldr	r3, [r0, #0]
900069b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900069b6:	42ab      	cmp	r3, r5
900069b8:	d01b      	beq.n	900069f2 <_ZN17TouchpadContainerC1Ev+0xaa>
900069ba:	4798      	blx	r3
900069bc:	2800      	cmp	r0, #0
900069be:	bf08      	it	eq
900069c0:	f048 0801 	orreq.w	r8, r8, #1
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
900069c4:	f1b8 0f00 	cmp.w	r8, #0
900069c8:	d113      	bne.n	900069f2 <_ZN17TouchpadContainerC1Ev+0xaa>
900069ca:	4b27      	ldr	r3, [pc, #156]	@ (90006a68 <_ZN17TouchpadContainerC1Ev+0x120>)
900069cc:	212c      	movs	r1, #44	@ 0x2c
900069ce:	4a27      	ldr	r2, [pc, #156]	@ (90006a6c <_ZN17TouchpadContainerC1Ev+0x124>)
900069d0:	4827      	ldr	r0, [pc, #156]	@ (90006a70 <_ZN17TouchpadContainerC1Ev+0x128>)
900069d2:	f025 fc39 	bl	9002c248 <__assert_func>
        return instance->lcdRef;
900069d6:	6898      	ldr	r0, [r3, #8]
900069d8:	4d22      	ldr	r5, [pc, #136]	@ (90006a64 <_ZN17TouchpadContainerC1Ev+0x11c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900069da:	6802      	ldr	r2, [r0, #0]
900069dc:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900069de:	42aa      	cmp	r2, r5
900069e0:	d1de      	bne.n	900069a0 <_ZN17TouchpadContainerC1Ev+0x58>
        return auxiliaryLCD;
900069e2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
900069e4:	b128      	cbz	r0, 900069f2 <_ZN17TouchpadContainerC1Ev+0xaa>
        bool compat = HAL::lcd().framebufferFormat() == format;
900069e6:	6803      	ldr	r3, [r0, #0]
900069e8:	f04f 0801 	mov.w	r8, #1
900069ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900069ee:	42ab      	cmp	r3, r5
900069f0:	d1e3      	bne.n	900069ba <_ZN17TouchpadContainerC1Ev+0x72>
900069f2:	4b20      	ldr	r3, [pc, #128]	@ (90006a74 <_ZN17TouchpadContainerC1Ev+0x12c>)
900069f4:	2500      	movs	r5, #0
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
900069f6:	f104 0088 	add.w	r0, r4, #136	@ 0x88
900069fa:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
900069fe:	6763      	str	r3, [r4, #116]	@ 0x74
90006a00:	3324      	adds	r3, #36	@ 0x24
90006a02:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
90006a06:	67e3      	str	r3, [r4, #124]	@ 0x7c
90006a08:	f011 f97e 	bl	90017d08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90006a0c:	f04f 1228 	mov.w	r2, #2621480	@ 0x280028
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setCenter(const T x, const T y)
    {
        this->circleCenterX = CWRUtil::toQ5(x);
90006a10:	f44f 7320 	mov.w	r3, #640	@ 0x280
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
90006a14:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
    add(circle1);
90006a18:	4631      	mov	r1, r6
        canvasPainter = &painter;
90006a1a:	6567      	str	r7, [r4, #84]	@ 0x54
90006a1c:	6620      	str	r0, [r4, #96]	@ 0x60
90006a1e:	4620      	mov	r0, r4
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
90006a20:	66e5      	str	r5, [r4, #108]	@ 0x6c
        circleArcAngleStart = CWRUtil::toQ5(startAngle);
90006a22:	6665      	str	r5, [r4, #100]	@ 0x64
90006a24:	e9c4 520c 	strd	r5, r2, [r4, #48]	@ 0x30
        this->circleCenterY = CWRUtil::toQ5(y);
90006a28:	e9c4 3316 	strd	r3, r3, [r4, #88]	@ 0x58
        circleArcAngleEnd = CWRUtil::toQ5(endAngle);
90006a2c:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
90006a30:	f04f 33ff 	mov.w	r3, #4294967295
90006a34:	66a2      	str	r2, [r4, #104]	@ 0x68
90006a36:	f8c4 3080 	str.w	r3, [r4, #128]	@ 0x80
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90006a3a:	f8a4 3084 	strh.w	r3, [r4, #132]	@ 0x84
90006a3e:	f00c fbcd 	bl	900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        touchable = touch;
90006a42:	2301      	movs	r3, #1
}
90006a44:	4620      	mov	r0, r4
90006a46:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90006a4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return instance->lcdRef;
90006a4e:	6898      	ldr	r0, [r3, #8]
90006a50:	4d04      	ldr	r5, [pc, #16]	@ (90006a64 <_ZN17TouchpadContainerC1Ev+0x11c>)
90006a52:	6803      	ldr	r3, [r0, #0]
90006a54:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
90006a56:	42aa      	cmp	r2, r5
90006a58:	d0cb      	beq.n	900069f2 <_ZN17TouchpadContainerC1Ev+0xaa>
90006a5a:	e7a1      	b.n	900069a0 <_ZN17TouchpadContainerC1Ev+0x58>
90006a5c:	9002fbe8 	.word	0x9002fbe8
90006a60:	9002ea08 	.word	0x9002ea08
90006a64:	90002ee5 	.word	0x90002ee5
90006a68:	9002e900 	.word	0x9002e900
90006a6c:	9002e960 	.word	0x9002e960
90006a70:	9002e99c 	.word	0x9002e99c
90006a74:	90030074 	.word	0x90030074
90006a78:	24024598 	.word	0x24024598

90006a7c <_ZN23TouchpadScreenPresenterD1Ev>:

    void HandleButtonPressed();
    void handleMouseMovement(uint8_t x, uint8_t y);
    void handleMouseClick(uint8_t buttons);

    virtual ~TouchpadScreenPresenter() {}
90006a7c:	4770      	bx	lr
90006a7e:	bf00      	nop

90006a80 <_ZThn4_N23TouchpadScreenPresenterD1Ev>:
90006a80:	3804      	subs	r0, #4
90006a82:	4770      	bx	lr

90006a84 <_ZN23TouchpadScreenPresenter10deactivateEv>:
}

void TouchpadScreenPresenter::activate()
{

}
90006a84:	4770      	bx	lr
90006a86:	bf00      	nop

90006a88 <_ZN23TouchpadScreenPresenter19HandleButtonPressedEv>:

}

void TouchpadScreenPresenter::HandleButtonPressed()
{
	view.goToKeyboardScreen();
90006a88:	68c0      	ldr	r0, [r0, #12]
90006a8a:	6803      	ldr	r3, [r0, #0]
90006a8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90006a8e:	4718      	bx	r3

90006a90 <_ZN23TouchpadScreenPresenterD0Ev>:
90006a90:	b510      	push	{r4, lr}
90006a92:	4604      	mov	r4, r0
90006a94:	2110      	movs	r1, #16
90006a96:	f025 f860 	bl	9002bb5a <_ZdlPvj>
90006a9a:	4620      	mov	r0, r4
90006a9c:	bd10      	pop	{r4, pc}
90006a9e:	bf00      	nop

90006aa0 <_ZThn4_N23TouchpadScreenPresenterD0Ev>:
90006aa0:	b510      	push	{r4, lr}
90006aa2:	1f04      	subs	r4, r0, #4
90006aa4:	2110      	movs	r1, #16
90006aa6:	4620      	mov	r0, r4
90006aa8:	f025 f857 	bl	9002bb5a <_ZdlPvj>
90006aac:	4620      	mov	r0, r4
90006aae:	bd10      	pop	{r4, pc}

90006ab0 <_ZThn4_N23TouchpadScreenPresenter19HandleButtonPressedEv>:
    void HandleButtonPressed();
90006ab0:	6880      	ldr	r0, [r0, #8]
90006ab2:	6803      	ldr	r3, [r0, #0]
90006ab4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90006ab6:	4718      	bx	r3

90006ab8 <_ZN23TouchpadScreenPresenterC1ER18TouchpadScreenView>:
    : view(v)
90006ab8:	4a05      	ldr	r2, [pc, #20]	@ (90006ad0 <_ZN23TouchpadScreenPresenterC1ER18TouchpadScreenView+0x18>)
90006aba:	60c1      	str	r1, [r0, #12]
90006abc:	6002      	str	r2, [r0, #0]
TouchpadScreenPresenter::TouchpadScreenPresenter(TouchpadScreenView& v)
90006abe:	b410      	push	{r4}
90006ac0:	2400      	movs	r4, #0
90006ac2:	6084      	str	r4, [r0, #8]
    : view(v)
90006ac4:	f102 041c 	add.w	r4, r2, #28
90006ac8:	6044      	str	r4, [r0, #4]
}
90006aca:	f85d 4b04 	ldr.w	r4, [sp], #4
90006ace:	4770      	bx	lr
90006ad0:	9002fc78 	.word	0x9002fc78

90006ad4 <_ZN23TouchpadScreenPresenter19handleMouseMovementEhh>:
}

void TouchpadScreenPresenter::handleMouseMovement(uint8_t x, uint8_t y)
{
	model->handleMouseMovement(x, y);
90006ad4:	6880      	ldr	r0, [r0, #8]
90006ad6:	f7ff beed 	b.w	900068b4 <_ZN5Model19handleMouseMovementEhh>
90006ada:	bf00      	nop

90006adc <_ZN23TouchpadScreenPresenter16handleMouseClickEh>:
}

void TouchpadScreenPresenter::handleMouseClick(uint8_t buttons)
{
	model->handleMouseClick(buttons);
90006adc:	6880      	ldr	r0, [r0, #8]
90006ade:	f7ff bf01 	b.w	900068e4 <_ZN5Model16handleMouseClickEh>
90006ae2:	bf00      	nop

90006ae4 <_ZN18TouchpadScreenView14tearDownScreenEv>:
}

void TouchpadScreenView::tearDownScreen()
{
    TouchpadScreenViewBase::tearDownScreen();
}
90006ae4:	4770      	bx	lr
90006ae6:	bf00      	nop

90006ae8 <_ZN18TouchpadScreenViewC1Ev>:
TouchpadScreenView::TouchpadScreenView() : touchpadContainer()
90006ae8:	b510      	push	{r4, lr}
90006aea:	4604      	mov	r4, r0
90006aec:	f7fe fe58 	bl	900057a0 <_ZN22TouchpadScreenViewBaseC1Ev>
90006af0:	4b06      	ldr	r3, [pc, #24]	@ (90006b0c <_ZN18TouchpadScreenViewC1Ev+0x24>)
90006af2:	4620      	mov	r0, r4
90006af4:	f840 3b98 	str.w	r3, [r0], #152
90006af8:	f7ff ff26 	bl	90006948 <_ZN17TouchpadContainerC1Ev>
90006afc:	f504 5380 	add.w	r3, r4, #4096	@ 0x1000
90006b00:	2200      	movs	r2, #0
}
90006b02:	4620      	mov	r0, r4
TouchpadScreenView::TouchpadScreenView() : touchpadContainer()
90006b04:	f883 2d40 	strb.w	r2, [r3, #3392]	@ 0xd40
}
90006b08:	bd10      	pop	{r4, pc}
90006b0a:	bf00      	nop
90006b0c:	9002fca8 	.word	0x9002fca8

90006b10 <_ZN18TouchpadScreenView11setupScreenEv>:
{
90006b10:	b510      	push	{r4, lr}
90006b12:	4604      	mov	r4, r0
    TouchpadScreenViewBase::setupScreen();
90006b14:	f7fe fe32 	bl	9000577c <_ZN22TouchpadScreenViewBase11setupScreenEv>
        rect.x = x;
90006b18:	2200      	movs	r2, #0
90006b1a:	f04f 1328 	mov.w	r3, #2621480	@ 0x280028
90006b1e:	f104 0198 	add.w	r1, r4, #152	@ 0x98
90006b22:	1d20      	adds	r0, r4, #4
90006b24:	e9c4 2327 	strd	r2, r3, [r4, #156]	@ 0x9c
}
90006b28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90006b2c:	f00c bb56 	b.w	900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>

90006b30 <_ZN18TouchpadScreenViewD1Ev>:

class TouchpadScreenView : public TouchpadScreenViewBase
{
public:
    TouchpadScreenView();
    virtual ~TouchpadScreenView() {}
90006b30:	4b05      	ldr	r3, [pc, #20]	@ (90006b48 <_ZN18TouchpadScreenViewD1Ev+0x18>)
90006b32:	b510      	push	{r4, lr}
90006b34:	4604      	mov	r4, r0
90006b36:	f840 3b98 	str.w	r3, [r0], #152
90006b3a:	f7ff feeb 	bl	90006914 <_ZN17TouchpadContainerD1Ev>
90006b3e:	4620      	mov	r0, r4
90006b40:	f7fe fe1a 	bl	90005778 <_ZN22TouchpadScreenViewBaseD1Ev>
90006b44:	4620      	mov	r0, r4
90006b46:	bd10      	pop	{r4, pc}
90006b48:	9002fca8 	.word	0x9002fca8

90006b4c <_ZN18TouchpadScreenViewD0Ev>:
90006b4c:	4b08      	ldr	r3, [pc, #32]	@ (90006b70 <_ZN18TouchpadScreenViewD0Ev+0x24>)
90006b4e:	b510      	push	{r4, lr}
90006b50:	4604      	mov	r4, r0
90006b52:	f840 3b98 	str.w	r3, [r0], #152
90006b56:	f7ff fedd 	bl	90006914 <_ZN17TouchpadContainerD1Ev>
90006b5a:	4620      	mov	r0, r4
90006b5c:	f7fe fe0c 	bl	90005778 <_ZN22TouchpadScreenViewBaseD1Ev>
90006b60:	4620      	mov	r0, r4
90006b62:	f641 5144 	movw	r1, #7492	@ 0x1d44
90006b66:	f024 fff8 	bl	9002bb5a <_ZdlPvj>
90006b6a:	4620      	mov	r0, r4
90006b6c:	bd10      	pop	{r4, pc}
90006b6e:	bf00      	nop
90006b70:	9002fca8 	.word	0x9002fca8

90006b74 <_ZN18TouchpadScreenView15handleDragEventERKN8touchgfx9DragEventE>:

void TouchpadScreenView::handleDragEvent(const DragEvent& event)
{
	touchgfx_printf("Drag event (%d, %d) -> (%d, %d): %d, %d\n", event.getOldX(), event.getOldY(), event.getNewX(), event.getNewY(), event.getDeltaX(), event.getDeltaY());
	touchpadContainer.moveTo(event.getNewX()-20, event.getNewY()-20);
90006b74:	898a      	ldrh	r2, [r1, #12]
{
90006b76:	b538      	push	{r3, r4, r5, lr}
	touchpadContainer.moveTo(event.getNewX()-20, event.getNewY()-20);
90006b78:	3a14      	subs	r2, #20
{
90006b7a:	460c      	mov	r4, r1
        moveRelative(x - rect.x, y - rect.y);
90006b7c:	f8b0 309e 	ldrh.w	r3, [r0, #158]	@ 0x9e
90006b80:	4605      	mov	r5, r0
	touchpadContainer.moveTo(event.getNewX()-20, event.getNewY()-20);
90006b82:	8949      	ldrh	r1, [r1, #10]
90006b84:	3098      	adds	r0, #152	@ 0x98
90006b86:	1ad2      	subs	r2, r2, r3
90006b88:	8883      	ldrh	r3, [r0, #4]
90006b8a:	3914      	subs	r1, #20
90006b8c:	b212      	sxth	r2, r2
90006b8e:	1ac9      	subs	r1, r1, r3
90006b90:	b209      	sxth	r1, r1
90006b92:	f013 fe95 	bl	9001a8c0 <_ZN8touchgfx8Drawable12moveRelativeEss>
     *
     * @return The distance of this drag event.
     */
    int16_t getDeltaY() const
    {
        return dragNewY - dragOldY;
90006b96:	8923      	ldrh	r3, [r4, #8]
90006b98:	89a2      	ldrh	r2, [r4, #12]
        return dragNewX - dragOldX;
90006b9a:	8961      	ldrh	r1, [r4, #10]
        return dragNewY - dragOldY;
90006b9c:	1ad2      	subs	r2, r2, r3
        return dragNewX - dragOldX;
90006b9e:	88e3      	ldrh	r3, [r4, #6]
	presenter->handleMouseMovement(event.getDeltaX(), event.getDeltaY());
90006ba0:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
90006ba2:	1ac9      	subs	r1, r1, r3
90006ba4:	b2d2      	uxtb	r2, r2
90006ba6:	b2c9      	uxtb	r1, r1
90006ba8:	f7ff ff94 	bl	90006ad4 <_ZN23TouchpadScreenPresenter19handleMouseMovementEhh>
	isPressValid = false;
90006bac:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
90006bb0:	2200      	movs	r2, #0
	TouchpadScreenViewBase::handleDragEvent(event);
90006bb2:	4621      	mov	r1, r4
90006bb4:	4628      	mov	r0, r5
	isPressValid = false;
90006bb6:	f883 2d40 	strb.w	r2, [r3, #3392]	@ 0xd40
}
90006bba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	TouchpadScreenViewBase::handleDragEvent(event);
90006bbe:	f014 bb89 	b.w	9001b2d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>
90006bc2:	bf00      	nop

90006bc4 <_ZN18TouchpadScreenView16handleClickEventERKN8touchgfx10ClickEventE>:

void TouchpadScreenView::handleClickEvent(const ClickEvent& event)
{
90006bc4:	b538      	push	{r3, r4, r5, lr}
90006bc6:	460c      	mov	r4, r1
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
90006bc8:	7909      	ldrb	r1, [r1, #4]
90006bca:	4605      	mov	r5, r0
	if(event.getType() == ClickEvent::RELEASED) {
90006bcc:	2901      	cmp	r1, #1
90006bce:	d01f      	beq.n	90006c10 <_ZN18TouchpadScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x4c>
		touchgfx_printf("Click event (RELEASED) (%d, %d)\n", event.getX(), event.getY());
		if(isPressValid) {
			presenter->handleMouseClick(0x1);
		}
	} else if (event.getType() == ClickEvent::PRESSED) {
90006bd0:	b129      	cbz	r1, 90006bde <_ZN18TouchpadScreenView16handleClickEventERKN8touchgfx10ClickEventE+0x1a>
		touchpadContainer.moveTo(event.getX()-20, event.getY()-20);
		isPressValid = true;
	}
	TouchpadScreenViewBase::handleClickEvent(event);
90006bd2:	4621      	mov	r1, r4
90006bd4:	4628      	mov	r0, r5
}
90006bd6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	TouchpadScreenViewBase::handleClickEvent(event);
90006bda:	f014 bb27 	b.w	9001b22c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
90006bde:	f8b0 309e 	ldrh.w	r3, [r0, #158]	@ 0x9e
90006be2:	3098      	adds	r0, #152	@ 0x98
90006be4:	8922      	ldrh	r2, [r4, #8]
90006be6:	88e1      	ldrh	r1, [r4, #6]
90006be8:	1ad2      	subs	r2, r2, r3
90006bea:	8883      	ldrh	r3, [r0, #4]
90006bec:	1ac9      	subs	r1, r1, r3
90006bee:	3a14      	subs	r2, #20
90006bf0:	3914      	subs	r1, #20
90006bf2:	b212      	sxth	r2, r2
90006bf4:	b209      	sxth	r1, r1
90006bf6:	f013 fe63 	bl	9001a8c0 <_ZN8touchgfx8Drawable12moveRelativeEss>
		isPressValid = true;
90006bfa:	f505 5380 	add.w	r3, r5, #4096	@ 0x1000
90006bfe:	2201      	movs	r2, #1
	TouchpadScreenViewBase::handleClickEvent(event);
90006c00:	4621      	mov	r1, r4
90006c02:	4628      	mov	r0, r5
		isPressValid = true;
90006c04:	f883 2d40 	strb.w	r2, [r3, #3392]	@ 0xd40
}
90006c08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	TouchpadScreenViewBase::handleClickEvent(event);
90006c0c:	f014 bb0e 	b.w	9001b22c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
		if(isPressValid) {
90006c10:	f500 5380 	add.w	r3, r0, #4096	@ 0x1000
90006c14:	f893 3d40 	ldrb.w	r3, [r3, #3392]	@ 0xd40
90006c18:	2b00      	cmp	r3, #0
90006c1a:	d0da      	beq.n	90006bd2 <_ZN18TouchpadScreenView16handleClickEventERKN8touchgfx10ClickEventE+0xe>
			presenter->handleMouseClick(0x1);
90006c1c:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
90006c1e:	f7ff ff5d 	bl	90006adc <_ZN23TouchpadScreenPresenter16handleMouseClickEh>
	TouchpadScreenViewBase::handleClickEvent(event);
90006c22:	4621      	mov	r1, r4
90006c24:	4628      	mov	r0, r5
}
90006c26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	TouchpadScreenViewBase::handleClickEvent(event);
90006c2a:	f014 baff 	b.w	9001b22c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>
90006c2e:	bf00      	nop

90006c30 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90006c30:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006c34:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90006c36:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006c3a:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006c3e:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90006c40:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90006c42:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006c46:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90006c4a:	4770      	bx	lr

90006c4c <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90006c4c:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90006c50:	2b01      	cmp	r3, #1
90006c52:	d102      	bne.n	90006c5a <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90006c54:	2300      	movs	r3, #0
90006c56:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90006c5a:	2000      	movs	r0, #0
90006c5c:	4770      	bx	lr
90006c5e:	bf00      	nop

90006c60 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90006c60:	2000      	movs	r0, #0
90006c62:	4770      	bx	lr

90006c64 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006c64:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006c66:	6904      	ldr	r4, [r0, #16]
90006c68:	8900      	ldrh	r0, [r0, #8]
90006c6a:	46a4      	mov	ip, r4
}
90006c6c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006c70:	4760      	bx	ip
90006c72:	bf00      	nop

90006c74 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006c74:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006c76:	68c4      	ldr	r4, [r0, #12]
90006c78:	8900      	ldrh	r0, [r0, #8]
90006c7a:	46a4      	mov	ip, r4
}
90006c7c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006c80:	4760      	bx	ip
90006c82:	bf00      	nop

90006c84 <FT5336_GestureConfig>:
{
90006c84:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006c86:	f100 0518 	add.w	r5, r0, #24
{
90006c8a:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006c8c:	7809      	ldrb	r1, [r1, #0]
90006c8e:	4628      	mov	r0, r5
90006c90:	f000 f96c 	bl	90006f6c <ft5336_radian_value>
90006c94:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90006c96:	7931      	ldrb	r1, [r6, #4]
90006c98:	4628      	mov	r0, r5
90006c9a:	f000 f975 	bl	90006f88 <ft5336_offset_left_right>
90006c9e:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006ca0:	7a31      	ldrb	r1, [r6, #8]
90006ca2:	4628      	mov	r0, r5
90006ca4:	f000 f97e 	bl	90006fa4 <ft5336_offset_up_down>
90006ca8:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006caa:	7b31      	ldrb	r1, [r6, #12]
90006cac:	4628      	mov	r0, r5
90006cae:	f000 f987 	bl	90006fc0 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006cb2:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006cb4:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006cb6:	4628      	mov	r0, r5
90006cb8:	f000 f990 	bl	90006fdc <ft5336_distance_up_down>
90006cbc:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006cbe:	7d31      	ldrb	r1, [r6, #20]
90006cc0:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006cc2:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006cc4:	f000 f998 	bl	90006ff8 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90006cc8:	42c4      	cmn	r4, r0
}
90006cca:	bf14      	ite	ne
90006ccc:	f04f 30ff 	movne.w	r0, #4294967295
90006cd0:	2000      	moveq	r0, #0
90006cd2:	bd70      	pop	{r4, r5, r6, pc}

90006cd4 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006cd4:	3018      	adds	r0, #24
90006cd6:	f000 b9ab 	b.w	90007030 <ft5336_chip_id>
90006cda:	bf00      	nop

90006cdc <FT5336_GetState>:
{
90006cdc:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006cde:	f100 0518 	add.w	r5, r0, #24
{
90006ce2:	b083      	sub	sp, #12
90006ce4:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006ce6:	4628      	mov	r0, r5
90006ce8:	a901      	add	r1, sp, #4
90006cea:	f000 f931 	bl	90006f50 <ft5336_td_status>
90006cee:	bb10      	cbnz	r0, 90006d36 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006cf0:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006cf4:	2b05      	cmp	r3, #5
90006cf6:	bf94      	ite	ls
90006cf8:	4619      	movls	r1, r3
90006cfa:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006cfc:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006cfe:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006d00:	4628      	mov	r0, r5
90006d02:	2103      	movs	r1, #3
90006d04:	eb0d 0203 	add.w	r2, sp, r3
90006d08:	f000 f910 	bl	90006f2c <ft5336_read_reg>
90006d0c:	b9b0      	cbnz	r0, 90006d3c <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006d0e:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006d12:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006d16:	0212      	lsls	r2, r2, #8
90006d18:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006d1c:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006d1e:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006d22:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006d26:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006d28:	f89d 1007 	ldrb.w	r1, [sp, #7]
90006d2c:	430b      	orrs	r3, r1
90006d2e:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90006d32:	b003      	add	sp, #12
90006d34:	bd30      	pop	{r4, r5, pc}
90006d36:	f04f 31ff 	mov.w	r1, #4294967295
90006d3a:	e7df      	b.n	90006cfc <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90006d3c:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006d40:	e7f7      	b.n	90006d32 <FT5336_GetState+0x56>
90006d42:	bf00      	nop

90006d44 <FT5336_GetMultiTouchState>:
{
90006d44:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006d46:	f100 0518 	add.w	r5, r0, #24
{
90006d4a:	b088      	sub	sp, #32
90006d4c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006d4e:	4628      	mov	r0, r5
90006d50:	4669      	mov	r1, sp
90006d52:	f000 f8fd 	bl	90006f50 <ft5336_td_status>
90006d56:	2800      	cmp	r0, #0
90006d58:	f040 809a 	bne.w	90006e90 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006d5c:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006d60:	2b05      	cmp	r3, #5
90006d62:	bf94      	ite	ls
90006d64:	4619      	movls	r1, r3
90006d66:	2100      	movhi	r1, #0
90006d68:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006d6a:	231e      	movs	r3, #30
90006d6c:	466a      	mov	r2, sp
90006d6e:	4628      	mov	r0, r5
90006d70:	2103      	movs	r1, #3
90006d72:	f000 f8db 	bl	90006f2c <ft5336_read_reg>
90006d76:	2800      	cmp	r0, #0
90006d78:	f040 808d 	bne.w	90006e96 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d7c:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d80:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d84:	020a      	lsls	r2, r1, #8
90006d86:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d8a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d8c:	f89d c007 	ldrb.w	ip, [sp, #7]
90006d90:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006d94:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006d96:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006d9a:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006d9e:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006da0:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006da4:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006da6:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006da8:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006daa:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006dac:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006db0:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006db2:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006db6:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006dba:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006dbc:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006dbe:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dc2:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006dc4:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006dc6:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dc8:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006dcc:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006dce:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dd0:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006dd4:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006dd8:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dda:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006ddc:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dde:	ea45 050c 	orr.w	r5, r5, ip
90006de2:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006de6:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006dea:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006dec:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006dee:	0212      	lsls	r2, r2, #8
90006df0:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006df4:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006df6:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006dfa:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006dfe:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e00:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e02:	f89d 300e 	ldrb.w	r3, [sp, #14]
90006e06:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e08:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e0c:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e0e:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e10:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e14:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e16:	f89d 200f 	ldrb.w	r2, [sp, #15]
90006e1a:	4313      	orrs	r3, r2
90006e1c:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e1e:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e20:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e24:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e28:	020a      	lsls	r2, r1, #8
90006e2a:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e2e:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e30:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e34:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e36:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e3a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e3c:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e40:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e42:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e44:	f89d 1018 	ldrb.w	r1, [sp, #24]
90006e48:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e4a:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e4c:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e4e:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e52:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e54:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e58:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e5a:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e5e:	f89d 301d 	ldrb.w	r3, [sp, #29]
90006e62:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006e64:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e66:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e68:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006e6c:	6625      	str	r5, [r4, #96]	@ 0x60
90006e6e:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e70:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006e74:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006e76:	021b      	lsls	r3, r3, #8
90006e78:	f89d 101b 	ldrb.w	r1, [sp, #27]
90006e7c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90006e80:	430b      	orrs	r3, r1
90006e82:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006e84:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006e88:	4313      	orrs	r3, r2
90006e8a:	6163      	str	r3, [r4, #20]
}
90006e8c:	b008      	add	sp, #32
90006e8e:	bd70      	pop	{r4, r5, r6, pc}
90006e90:	f04f 31ff 	mov.w	r1, #4294967295
90006e94:	e768      	b.n	90006d68 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90006e96:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006e9a:	e7f7      	b.n	90006e8c <FT5336_GetMultiTouchState+0x148>

90006e9c <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006e9c:	3018      	adds	r0, #24
90006e9e:	f000 b84d 	b.w	90006f3c <ft5336_gest_id>
90006ea2:	bf00      	nop

90006ea4 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90006ea4:	2101      	movs	r1, #1
90006ea6:	3018      	adds	r0, #24
90006ea8:	f000 b8b4 	b.w	90007014 <ft5336_g_mode>

90006eac <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006eac:	2100      	movs	r1, #0
90006eae:	3018      	adds	r0, #24
90006eb0:	f000 b8b0 	b.w	90007014 <ft5336_g_mode>

90006eb4 <FT5336_Init>:
{
90006eb4:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90006eb6:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90006eba:	b98d      	cbnz	r5, 90006ee0 <FT5336_Init+0x2c>
    pObj->IO.Init();
90006ebc:	4606      	mov	r6, r0
90006ebe:	4604      	mov	r4, r0
90006ec0:	f856 3b18 	ldr.w	r3, [r6], #24
90006ec4:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006ec6:	4629      	mov	r1, r5
90006ec8:	4630      	mov	r0, r6
90006eca:	f000 f8a3 	bl	90007014 <ft5336_g_mode>
  if(ret != FT5336_OK)
90006ece:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006ed0:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006ed4:	bf18      	it	ne
90006ed6:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006ed8:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90006edc:	4240      	negs	r0, r0
}
90006ede:	bd70      	pop	{r4, r5, r6, pc}
    ret += FT5336_DisableIT(pObj);
90006ee0:	2000      	movs	r0, #0
}
90006ee2:	bd70      	pop	{r4, r5, r6, pc}

90006ee4 <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90006ee4:	2000      	movs	r0, #0
90006ee6:	4770      	bx	lr

90006ee8 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006ee8:	b1c0      	cbz	r0, 90006f1c <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006eea:	890a      	ldrh	r2, [r1, #8]
{
90006eec:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006eee:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90006ef2:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006ef4:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006ef8:	694a      	ldr	r2, [r1, #20]
90006efa:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006efe:	4909      	ldr	r1, [pc, #36]	@ (90006f24 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006f00:	60c5      	str	r5, [r0, #12]
90006f02:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006f06:	4a08      	ldr	r2, [pc, #32]	@ (90006f28 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006f08:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006f0c:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006f0e:	b10b      	cbz	r3, 90006f14 <FT5336_RegisterBusIO+0x2c>
}
90006f10:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90006f12:	4718      	bx	r3
}
90006f14:	f04f 30ff 	mov.w	r0, #4294967295
90006f18:	bc30      	pop	{r4, r5}
90006f1a:	4770      	bx	lr
90006f1c:	f04f 30ff 	mov.w	r0, #4294967295
90006f20:	4770      	bx	lr
90006f22:	bf00      	nop
90006f24:	90006c65 	.word	0x90006c65
90006f28:	90006c75 	.word	0x90006c75

90006f2c <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006f2c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f2e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006f32:	46a4      	mov	ip, r4
}
90006f34:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f38:	4760      	bx	ip
90006f3a:	bf00      	nop

90006f3c <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006f3c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f3e:	2301      	movs	r3, #1
{
90006f40:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f42:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006f46:	4619      	mov	r1, r3
90006f48:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90006f4a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f4e:	4760      	bx	ip

90006f50 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90006f50:	b538      	push	{r3, r4, r5, lr}
90006f52:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006f54:	2301      	movs	r3, #1
90006f56:	2102      	movs	r1, #2
90006f58:	4622      	mov	r2, r4
90006f5a:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90006f5e:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90006f60:	b918      	cbnz	r0, 90006f6a <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90006f62:	7823      	ldrb	r3, [r4, #0]
90006f64:	f003 030f 	and.w	r3, r3, #15
90006f68:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90006f6a:	bd38      	pop	{r3, r4, r5, pc}

90006f6c <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90006f6c:	b510      	push	{r4, lr}
90006f6e:	460c      	mov	r4, r1
90006f70:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f72:	2301      	movs	r3, #1
90006f74:	2191      	movs	r1, #145	@ 0x91
{
90006f76:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f7a:	f10d 0207 	add.w	r2, sp, #7
90006f7e:	6804      	ldr	r4, [r0, #0]
90006f80:	6880      	ldr	r0, [r0, #8]
90006f82:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006f84:	b002      	add	sp, #8
90006f86:	bd10      	pop	{r4, pc}

90006f88 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006f88:	b510      	push	{r4, lr}
90006f8a:	460c      	mov	r4, r1
90006f8c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f8e:	2301      	movs	r3, #1
90006f90:	2192      	movs	r1, #146	@ 0x92
{
90006f92:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006f96:	f10d 0207 	add.w	r2, sp, #7
90006f9a:	6804      	ldr	r4, [r0, #0]
90006f9c:	6880      	ldr	r0, [r0, #8]
90006f9e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006fa0:	b002      	add	sp, #8
90006fa2:	bd10      	pop	{r4, pc}

90006fa4 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006fa4:	b510      	push	{r4, lr}
90006fa6:	460c      	mov	r4, r1
90006fa8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006faa:	2301      	movs	r3, #1
90006fac:	2193      	movs	r1, #147	@ 0x93
{
90006fae:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fb2:	f10d 0207 	add.w	r2, sp, #7
90006fb6:	6804      	ldr	r4, [r0, #0]
90006fb8:	6880      	ldr	r0, [r0, #8]
90006fba:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006fbc:	b002      	add	sp, #8
90006fbe:	bd10      	pop	{r4, pc}

90006fc0 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006fc0:	b510      	push	{r4, lr}
90006fc2:	460c      	mov	r4, r1
90006fc4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fc6:	2301      	movs	r3, #1
90006fc8:	2194      	movs	r1, #148	@ 0x94
{
90006fca:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fce:	f10d 0207 	add.w	r2, sp, #7
90006fd2:	6804      	ldr	r4, [r0, #0]
90006fd4:	6880      	ldr	r0, [r0, #8]
90006fd6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006fd8:	b002      	add	sp, #8
90006fda:	bd10      	pop	{r4, pc}

90006fdc <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006fdc:	b510      	push	{r4, lr}
90006fde:	460c      	mov	r4, r1
90006fe0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fe2:	2301      	movs	r3, #1
90006fe4:	2195      	movs	r1, #149	@ 0x95
{
90006fe6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006fea:	f10d 0207 	add.w	r2, sp, #7
90006fee:	6804      	ldr	r4, [r0, #0]
90006ff0:	6880      	ldr	r0, [r0, #8]
90006ff2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90006ff4:	b002      	add	sp, #8
90006ff6:	bd10      	pop	{r4, pc}

90006ff8 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006ff8:	b510      	push	{r4, lr}
90006ffa:	460c      	mov	r4, r1
90006ffc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006ffe:	2301      	movs	r3, #1
90007000:	2196      	movs	r1, #150	@ 0x96
{
90007002:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007006:	f10d 0207 	add.w	r2, sp, #7
9000700a:	6804      	ldr	r4, [r0, #0]
9000700c:	6880      	ldr	r0, [r0, #8]
9000700e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90007010:	b002      	add	sp, #8
90007012:	bd10      	pop	{r4, pc}

90007014 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90007014:	b510      	push	{r4, lr}
90007016:	460c      	mov	r4, r1
90007018:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
9000701a:	2301      	movs	r3, #1
9000701c:	21a4      	movs	r1, #164	@ 0xa4
{
9000701e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90007022:	f10d 0207 	add.w	r2, sp, #7
90007026:	6804      	ldr	r4, [r0, #0]
90007028:	6880      	ldr	r0, [r0, #8]
9000702a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
9000702c:	b002      	add	sp, #8
9000702e:	bd10      	pop	{r4, pc}

90007030 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90007030:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007032:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90007036:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007038:	2301      	movs	r3, #1
9000703a:	46a4      	mov	ip, r4
9000703c:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
9000703e:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90007042:	4760      	bx	ip

90007044 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90007044:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90007046:	680b      	ldr	r3, [r1, #0]
{
90007048:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000704a:	4c2a      	ldr	r4, [pc, #168]	@ (900070f4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000704c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
{
90007050:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90007052:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90007054:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007056:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90007058:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
9000705a:	2301      	movs	r3, #1
9000705c:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
9000705e:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007060:	f007 fa22 	bl	9000e4a8 <HAL_SDRAM_SendCommand>
90007064:	2800      	cmp	r0, #0
90007066:	d142      	bne.n	900070ee <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90007068:	f000 ff48 	bl	90007efc <HAL_GetTick>
9000706c:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
9000706e:	f000 ff45 	bl	90007efc <HAL_GetTick>
90007072:	4286      	cmp	r6, r0
90007074:	d0fb      	beq.n	9000706e <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90007076:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90007078:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
9000707a:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000707c:	491d      	ldr	r1, [pc, #116]	@ (900070f4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
9000707e:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90007080:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90007082:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007084:	4638      	mov	r0, r7
90007086:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
9000708a:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
9000708c:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000708e:	f007 fa0b 	bl	9000e4a8 <HAL_SDRAM_SendCommand>
90007092:	bb60      	cbnz	r0, 900070ee <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90007094:	4917      	ldr	r1, [pc, #92]	@ (900070f4 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90007096:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
9000709a:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000709c:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
9000709e:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
900070a2:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070a4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
900070a8:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070aa:	f007 f9fd 	bl	9000e4a8 <HAL_SDRAM_SendCommand>
900070ae:	b9f0      	cbnz	r0, 900070ee <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070b0:	4910      	ldr	r1, [pc, #64]	@ (900070f4 <MT48LC4M32B2_Init+0xb0>)
900070b2:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900070b4:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
900070b8:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
900070ba:	696a      	ldr	r2, [r5, #20]
900070bc:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
900070be:	69aa      	ldr	r2, [r5, #24]
900070c0:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
900070c2:	69ea      	ldr	r2, [r5, #28]
900070c4:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
900070c6:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
900070c8:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900070ca:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
900070cc:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070d0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
900070d4:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
900070d6:	f007 f9e7 	bl	9000e4a8 <HAL_SDRAM_SendCommand>
900070da:	b940      	cbnz	r0, 900070ee <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
900070dc:	68a9      	ldr	r1, [r5, #8]
900070de:	4638      	mov	r0, r7
900070e0:	f007 fa02 	bl	9000e4e8 <HAL_SDRAM_ProgramRefreshRate>
900070e4:	3800      	subs	r0, #0
900070e6:	bf18      	it	ne
900070e8:	2001      	movne	r0, #1
900070ea:	4240      	negs	r0, r0
}
900070ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
900070ee:	f04f 30ff 	mov.w	r0, #4294967295
}
900070f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900070f4:	2400a588 	.word	0x2400a588

900070f8 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
900070f8:	4a10      	ldr	r2, [pc, #64]	@ (9000713c <BSP_I2C4_DeInit+0x44>)
{
900070fa:	b508      	push	{r3, lr}
  I2c4InitCounter--;
900070fc:	6813      	ldr	r3, [r2, #0]
900070fe:	3b01      	subs	r3, #1
90007100:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90007102:	b10b      	cbz	r3, 90007108 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90007104:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90007106:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90007108:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
9000710c:	480c      	ldr	r0, [pc, #48]	@ (90007140 <BSP_I2C4_DeInit+0x48>)
9000710e:	f001 fac9 	bl	900086a4 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90007112:	480b      	ldr	r0, [pc, #44]	@ (90007140 <BSP_I2C4_DeInit+0x48>)
90007114:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90007118:	f001 fac4 	bl	900086a4 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
9000711c:	4a09      	ldr	r2, [pc, #36]	@ (90007144 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
9000711e:	480a      	ldr	r0, [pc, #40]	@ (90007148 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90007120:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
90007124:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90007128:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
9000712c:	f001 fec6 	bl	90008ebc <HAL_I2C_DeInit>
90007130:	2800      	cmp	r0, #0
90007132:	d0e7      	beq.n	90007104 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90007134:	f06f 0007 	mvn.w	r0, #7
}
90007138:	bd08      	pop	{r3, pc}
9000713a:	bf00      	nop
9000713c:	2400aff0 	.word	0x2400aff0
90007140:	58020c00 	.word	0x58020c00
90007144:	58024400 	.word	0x58024400
90007148:	2400a598 	.word	0x2400a598

9000714c <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
9000714c:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
9000714e:	2201      	movs	r2, #1
{
90007150:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90007152:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90007156:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
9000715a:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
9000715e:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90007162:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90007164:	f001 fe4e 	bl	90008e04 <HAL_I2C_Init>
90007168:	b108      	cbz	r0, 9000716e <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
9000716a:	2001      	movs	r0, #1
}
9000716c:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
9000716e:	4601      	mov	r1, r0
90007170:	4620      	mov	r0, r4
90007172:	f002 f8c1 	bl	900092f8 <HAL_I2CEx_ConfigAnalogFilter>
90007176:	2800      	cmp	r0, #0
90007178:	d1f7      	bne.n	9000716a <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
9000717a:	4601      	mov	r1, r0
9000717c:	4620      	mov	r0, r4
9000717e:	f002 f8e5 	bl	9000934c <HAL_I2CEx_ConfigDigitalFilter>
90007182:	3800      	subs	r0, #0
90007184:	bf18      	it	ne
90007186:	2001      	movne	r0, #1
}
90007188:	bd10      	pop	{r4, pc}
9000718a:	bf00      	nop

9000718c <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
9000718c:	4b9a      	ldr	r3, [pc, #616]	@ (900073f8 <BSP_I2C4_Init+0x26c>)
  hbus_i2c4.Instance = BUS_I2C4;
9000718e:	489b      	ldr	r0, [pc, #620]	@ (900073fc <BSP_I2C4_Init+0x270>)
90007190:	4a9b      	ldr	r2, [pc, #620]	@ (90007400 <BSP_I2C4_Init+0x274>)
{
90007192:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
90007196:	681c      	ldr	r4, [r3, #0]
{
90007198:	b09d      	sub	sp, #116	@ 0x74
  hbus_i2c4.Instance = BUS_I2C4;
9000719a:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
9000719c:	b11c      	cbz	r4, 900071a6 <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
9000719e:	2000      	movs	r0, #0
}
900071a0:	b01d      	add	sp, #116	@ 0x74
900071a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
900071a6:	2201      	movs	r2, #1
900071a8:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
900071aa:	f002 f89f 	bl	900092ec <HAL_I2C_GetState>
900071ae:	2800      	cmp	r0, #0
900071b0:	d1f5      	bne.n	9000719e <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900071b2:	4d94      	ldr	r5, [pc, #592]	@ (90007404 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900071b4:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
900071b8:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900071ba:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900071bc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900071c0:	f04f 0800 	mov.w	r8, #0
900071c4:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
900071c8:	f043 0308 	orr.w	r3, r3, #8
900071cc:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900071d0:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900071d4:	f003 0308 	and.w	r3, r3, #8
900071d8:	9313      	str	r3, [sp, #76]	@ 0x4c
900071da:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900071dc:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900071e0:	f043 0308 	orr.w	r3, r3, #8
900071e4:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900071e8:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
900071ec:	961a      	str	r6, [sp, #104]	@ 0x68
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900071ee:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900071f2:	e9cd 0116 	strd	r0, r1, [sp, #88]	@ 0x58
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900071f6:	9314      	str	r3, [sp, #80]	@ 0x50
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
900071f8:	a916      	add	r1, sp, #88	@ 0x58
900071fa:	4883      	ldr	r0, [pc, #524]	@ (90007408 <BSP_I2C4_Init+0x27c>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
900071fc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
900071fe:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90007202:	f001 f90d 	bl	90008420 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007206:	2312      	movs	r3, #18
90007208:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000720c:	a916      	add	r1, sp, #88	@ 0x58
9000720e:	487e      	ldr	r0, [pc, #504]	@ (90007408 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90007210:	961a      	str	r6, [sp, #104]	@ 0x68
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90007212:	e9cd 2316 	strd	r2, r3, [sp, #88]	@ 0x58
90007216:	e9cd 8918 	strd	r8, r9, [sp, #96]	@ 0x60
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
9000721a:	f001 f901 	bl	90008420 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
9000721e:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90007222:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90007226:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
9000722a:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
9000722e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90007232:	9315      	str	r3, [sp, #84]	@ 0x54
90007234:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_FORCE_RESET();
90007236:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000723a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000723e:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
90007242:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90007246:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000724a:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000724e:	f006 f841 	bl	9000d2d4 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90007252:	2800      	cmp	r0, #0
90007254:	f000 81fd 	beq.w	90007652 <BSP_I2C4_Init+0x4c6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007258:	4b6c      	ldr	r3, [pc, #432]	@ (9000740c <BSP_I2C4_Init+0x280>)
  if (tsdadel_max <= 0)
9000725a:	4625      	mov	r5, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
9000725c:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007260:	4e6b      	ldr	r6, [pc, #428]	@ (90007410 <BSP_I2C4_Init+0x284>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90007262:	eb03 0350 	add.w	r3, r3, r0, lsr #1
90007266:	9401      	str	r4, [sp, #4]
90007268:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
9000726c:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9000726e:	9700      	str	r7, [sp, #0]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90007270:	eb07 0147 	add.w	r1, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90007274:	f5c3 7cc3 	rsb	ip, r3, #390	@ 0x186
90007278:	4b66      	ldr	r3, [pc, #408]	@ (90007414 <BSP_I2C4_Init+0x288>)
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
9000727a:	007a      	lsls	r2, r7, #1
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
9000727c:	f1c1 0e32 	rsb	lr, r1, #50	@ 0x32
90007280:	6819      	ldr	r1, [r3, #0]
  if (tsdadel_max <= 0)
90007282:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90007286:	9202      	str	r2, [sp, #8]
  if (tsdadel_min <= 0)
90007288:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_max <= 0)
9000728c:	4689      	mov	r9, r1
9000728e:	4622      	mov	r2, r4
90007290:	9111      	str	r1, [sp, #68]	@ 0x44
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007292:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90007296:	46b8      	mov	r8, r7
90007298:	eb07 0347 	add.w	r3, r7, r7, lsl #1
9000729c:	bf2c      	ite	cs
9000729e:	2001      	movcs	r0, #1
900072a0:	2000      	movcc	r0, #0
900072a2:	ebbe 0f47 	cmp.w	lr, r7, lsl #1
900072a6:	f000 0001 	and.w	r0, r0, #1
900072aa:	eb07 0187 	add.w	r1, r7, r7, lsl #2
900072ae:	bf88      	it	hi
900072b0:	2000      	movhi	r0, #0
900072b2:	459e      	cmp	lr, r3
900072b4:	eb07 0483 	add.w	r4, r7, r3, lsl #2
900072b8:	9004      	str	r0, [sp, #16]
900072ba:	bf8c      	ite	hi
900072bc:	2000      	movhi	r0, #0
900072be:	2001      	movls	r0, #1
900072c0:	459c      	cmp	ip, r3
900072c2:	940f      	str	r4, [sp, #60]	@ 0x3c
900072c4:	ebc7 0bc7 	rsb	fp, r7, r7, lsl #3
900072c8:	bf38      	it	cc
900072ca:	2000      	movcc	r0, #0
900072cc:	ebbe 0f87 	cmp.w	lr, r7, lsl #2
900072d0:	9006      	str	r0, [sp, #24]
900072d2:	eb07 0041 	add.w	r0, r7, r1, lsl #1
900072d6:	9005      	str	r0, [sp, #20]
900072d8:	bf94      	ite	ls
900072da:	2001      	movls	r0, #1
900072dc:	2000      	movhi	r0, #0
900072de:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
900072e2:	f000 0401 	and.w	r4, r0, #1
900072e6:	bf38      	it	cc
900072e8:	2400      	movcc	r4, #0
900072ea:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900072ec:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900072f0:	9407      	str	r4, [sp, #28]
900072f2:	bf8c      	ite	hi
900072f4:	2400      	movhi	r4, #0
900072f6:	2401      	movls	r4, #1
900072f8:	458c      	cmp	ip, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
900072fa:	9003      	str	r0, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900072fc:	bf38      	it	cc
900072fe:	2400      	movcc	r4, #0
90007300:	ebbe 0f43 	cmp.w	lr, r3, lsl #1
90007304:	bf98      	it	ls
90007306:	2001      	movls	r0, #1
90007308:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
9000730c:	9408      	str	r4, [sp, #32]
9000730e:	465c      	mov	r4, fp
90007310:	f000 0001 	and.w	r0, r0, #1
90007314:	bf38      	it	cc
90007316:	2000      	movcc	r0, #0
90007318:	45de      	cmp	lr, fp
9000731a:	9009      	str	r0, [sp, #36]	@ 0x24
9000731c:	4658      	mov	r0, fp
9000731e:	bf8c      	ite	hi
90007320:	2000      	movhi	r0, #0
90007322:	2001      	movls	r0, #1
90007324:	45dc      	cmp	ip, fp
90007326:	bf38      	it	cc
90007328:	2000      	movcc	r0, #0
9000732a:	ebbe 0fc7 	cmp.w	lr, r7, lsl #3
9000732e:	4683      	mov	fp, r0
90007330:	bf94      	ite	ls
90007332:	f04f 0b01 	movls.w	fp, #1
90007336:	f04f 0b00 	movhi.w	fp, #0
9000733a:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
9000733e:	900a      	str	r0, [sp, #40]	@ 0x28
90007340:	f00b 0b01 	and.w	fp, fp, #1
90007344:	bf38      	it	cc
90007346:	f04f 0b00 	movcc.w	fp, #0
9000734a:	4658      	mov	r0, fp
9000734c:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
90007350:	eb07 0bc7 	add.w	fp, r7, r7, lsl #3
90007354:	45de      	cmp	lr, fp
90007356:	bf8c      	ite	hi
90007358:	2000      	movhi	r0, #0
9000735a:	2001      	movls	r0, #1
9000735c:	45dc      	cmp	ip, fp
9000735e:	bf38      	it	cc
90007360:	2000      	movcc	r0, #0
90007362:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
90007366:	900c      	str	r0, [sp, #48]	@ 0x30
90007368:	bf98      	it	ls
9000736a:	f04f 0b01 	movls.w	fp, #1
9000736e:	9805      	ldr	r0, [sp, #20]
90007370:	bf88      	it	hi
90007372:	f04f 0b00 	movhi.w	fp, #0
90007376:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
9000737a:	f00b 0b01 	and.w	fp, fp, #1
9000737e:	4601      	mov	r1, r0
90007380:	bf38      	it	cc
90007382:	f04f 0b00 	movcc.w	fp, #0
90007386:	4586      	cmp	lr, r0
90007388:	bf8c      	ite	hi
9000738a:	2100      	movhi	r1, #0
9000738c:	2101      	movls	r1, #1
9000738e:	4584      	cmp	ip, r0
90007390:	4620      	mov	r0, r4
90007392:	bf38      	it	cc
90007394:	2100      	movcc	r1, #0
90007396:	ebbe 0f83 	cmp.w	lr, r3, lsl #2
9000739a:	910d      	str	r1, [sp, #52]	@ 0x34
9000739c:	bf94      	ite	ls
9000739e:	2101      	movls	r1, #1
900073a0:	2100      	movhi	r1, #0
900073a2:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
900073a6:	f001 0101 	and.w	r1, r1, #1
900073aa:	bf38      	it	cc
900073ac:	2100      	movcc	r1, #0
900073ae:	910e      	str	r1, [sp, #56]	@ 0x38
900073b0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900073b2:	4571      	cmp	r1, lr
900073b4:	460b      	mov	r3, r1
900073b6:	bf34      	ite	cc
900073b8:	2300      	movcc	r3, #0
900073ba:	2301      	movcs	r3, #1
900073bc:	4561      	cmp	r1, ip
900073be:	bf88      	it	hi
900073c0:	2300      	movhi	r3, #0
900073c2:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
900073c6:	930f      	str	r3, [sp, #60]	@ 0x3c
900073c8:	bf94      	ite	ls
900073ca:	2301      	movls	r3, #1
900073cc:	2300      	movhi	r3, #0
900073ce:	ebbc 0f44 	cmp.w	ip, r4, lsl #1
900073d2:	f04f 0400 	mov.w	r4, #0
900073d6:	f003 0301 	and.w	r3, r3, #1
900073da:	bf38      	it	cc
900073dc:	2300      	movcc	r3, #0
900073de:	9310      	str	r3, [sp, #64]	@ 0x40
900073e0:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
900073e4:	459e      	cmp	lr, r3
900073e6:	bf8c      	ite	hi
900073e8:	2100      	movhi	r1, #0
900073ea:	2101      	movls	r1, #1
900073ec:	459c      	cmp	ip, r3
900073ee:	bf38      	it	cc
900073f0:	2100      	movcc	r1, #0
900073f2:	9105      	str	r1, [sp, #20]
900073f4:	e014      	b.n	90007420 <BSP_I2C4_Init+0x294>
900073f6:	bf00      	nop
900073f8:	2400aff0 	.word	0x2400aff0
900073fc:	2400a598 	.word	0x2400a598
90007400:	58001c00 	.word	0x58001c00
90007404:	58024400 	.word	0x58024400
90007408:	58020c00 	.word	0x58020c00
9000740c:	3b9aca00 	.word	0x3b9aca00
90007410:	2400a5f0 	.word	0x2400a5f0
90007414:	2400a5ec 	.word	0x2400a5ec
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007418:	2c10      	cmp	r4, #16
9000741a:	44b8      	add	r8, r7
9000741c:	f000 8273 	beq.w	90007906 <BSP_I2C4_Init+0x77a>
      if (tscldel >= (uint32_t)tscldel_min)
90007420:	f5b8 7faf 	cmp.w	r8, #350	@ 0x15e
90007424:	4623      	mov	r3, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90007426:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
9000742a:	d3f5      	bcc.n	90007418 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
9000742c:	ebba 0105 	subs.w	r1, sl, r5
90007430:	bf18      	it	ne
90007432:	2101      	movne	r1, #1
90007434:	f1be 0f00 	cmp.w	lr, #0
90007438:	bf18      	it	ne
9000743a:	2100      	movne	r1, #0
9000743c:	2900      	cmp	r1, #0
9000743e:	f040 8250 	bne.w	900078e2 <BSP_I2C4_Init+0x756>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90007442:	45bc      	cmp	ip, r7
90007444:	bf34      	ite	cc
90007446:	2100      	movcc	r1, #0
90007448:	2101      	movcs	r1, #1
9000744a:	45be      	cmp	lr, r7
9000744c:	bf88      	it	hi
9000744e:	2100      	movhi	r1, #0
            if(presc != prev_presc)
90007450:	45aa      	cmp	sl, r5
90007452:	bf0c      	ite	eq
90007454:	2100      	moveq	r1, #0
90007456:	f001 0101 	andne.w	r1, r1, #1
9000745a:	2900      	cmp	r1, #0
9000745c:	f000 8103 	beq.w	90007666 <BSP_I2C4_Init+0x4da>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007460:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007464:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007468:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000746a:	46b2      	mov	sl, r6
9000746c:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007470:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007474:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007478:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000747a:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000747c:	f200 81aa 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
90007480:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007482:	9a06      	ldr	r2, [sp, #24]
90007484:	45aa      	cmp	sl, r5
90007486:	bf0c      	ite	eq
90007488:	2200      	moveq	r2, #0
9000748a:	f002 0201 	andne.w	r2, r2, #1
9000748e:	2a00      	cmp	r2, #0
90007490:	f000 8105 	beq.w	9000769e <BSP_I2C4_Init+0x512>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007494:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007498:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000749c:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000749e:	46b2      	mov	sl, r6
900074a0:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074a4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074a8:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074ac:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074ae:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074b0:	f200 8190 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
900074b4:	4611      	mov	r1, r2
900074b6:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900074b8:	9a08      	ldr	r2, [sp, #32]
900074ba:	45aa      	cmp	sl, r5
900074bc:	bf0c      	ite	eq
900074be:	2200      	moveq	r2, #0
900074c0:	f002 0201 	andne.w	r2, r2, #1
900074c4:	2a00      	cmp	r2, #0
900074c6:	f000 8105 	beq.w	900076d4 <BSP_I2C4_Init+0x548>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074ca:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900074ce:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074d2:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074d4:	46b2      	mov	sl, r6
900074d6:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074da:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074de:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074e2:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074e4:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074e6:	f200 8175 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
900074ea:	4611      	mov	r1, r2
900074ec:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900074ee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900074f0:	45aa      	cmp	sl, r5
900074f2:	bf0c      	ite	eq
900074f4:	2200      	moveq	r2, #0
900074f6:	f002 0201 	andne.w	r2, r2, #1
900074fa:	2a00      	cmp	r2, #0
900074fc:	f000 8104 	beq.w	90007708 <BSP_I2C4_Init+0x57c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007500:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007504:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007508:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000750a:	46b2      	mov	sl, r6
9000750c:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007510:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007514:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007518:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000751a:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000751c:	f200 815a 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
90007520:	4611      	mov	r1, r2
90007522:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007524:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90007526:	45aa      	cmp	sl, r5
90007528:	bf0c      	ite	eq
9000752a:	2200      	moveq	r2, #0
9000752c:	f002 0201 	andne.w	r2, r2, #1
90007530:	2a00      	cmp	r2, #0
90007532:	f000 8103 	beq.w	9000773c <BSP_I2C4_Init+0x5b0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007536:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000753a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000753e:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007540:	46b2      	mov	sl, r6
90007542:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007546:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000754a:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000754e:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007550:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007552:	f200 813f 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
90007556:	4611      	mov	r1, r2
90007558:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000755a:	980d      	ldr	r0, [sp, #52]	@ 0x34
9000755c:	4555      	cmp	r5, sl
9000755e:	bf0c      	ite	eq
90007560:	2000      	moveq	r0, #0
90007562:	f000 0001 	andne.w	r0, r0, #1
90007566:	2800      	cmp	r0, #0
90007568:	f000 8101 	beq.w	9000776e <BSP_I2C4_Init+0x5e2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000756c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007570:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007574:	210b      	movs	r1, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007576:	46b2      	mov	sl, r6
90007578:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000757c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007580:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007584:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007586:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007588:	f200 8124 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
9000758c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000758e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90007590:	4555      	cmp	r5, sl
90007592:	bf0c      	ite	eq
90007594:	2200      	moveq	r2, #0
90007596:	f002 0201 	andne.w	r2, r2, #1
9000759a:	2a00      	cmp	r2, #0
9000759c:	f000 8100 	beq.w	900077a0 <BSP_I2C4_Init+0x614>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075a0:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900075a4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075a8:	200d      	movs	r0, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075aa:	46b2      	mov	sl, r6
900075ac:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075b0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075b4:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900075b8:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075ba:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075bc:	f200 810a 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
900075c0:	4610      	mov	r0, r2
900075c2:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900075c4:	9a05      	ldr	r2, [sp, #20]
900075c6:	4555      	cmp	r5, sl
900075c8:	bf0c      	ite	eq
900075ca:	2200      	moveq	r2, #0
900075cc:	f002 0201 	andne.w	r2, r2, #1
900075d0:	2a00      	cmp	r2, #0
900075d2:	f000 8182 	beq.w	900078da <BSP_I2C4_Init+0x74e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075d6:	eb09 0189 	add.w	r1, r9, r9, lsl #2
900075da:	f8df a360 	ldr.w	sl, [pc, #864]	@ 9000793c <BSP_I2C4_Init+0x7b0>
              I2c_valid_timing_nbr ++;
900075de:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075e2:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
900075e6:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075ea:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900075ee:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075f0:	f04f 030f 	mov.w	r3, #15
900075f4:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075f6:	f200 80ed 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
900075fa:	46aa      	mov	sl, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900075fc:	e70c      	b.n	90007418 <BSP_I2C4_Init+0x28c>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900075fe:	9a06      	ldr	r2, [sp, #24]
90007600:	4661      	mov	r1, ip
90007602:	f109 0914 	add.w	r9, r9, #20
90007606:	3201      	adds	r2, #1
90007608:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
9000760c:	e9dd 3c0c 	ldrd	r3, ip, [sp, #48]	@ 0x30
90007610:	4572      	cmp	r2, lr
90007612:	9206      	str	r2, [sp, #24]
90007614:	f040 8103 	bne.w	9000781e <BSP_I2C4_Init+0x692>
        if (idx < I2C_VALID_TIMING_NBR)
90007618:	9b01      	ldr	r3, [sp, #4]
9000761a:	2b7f      	cmp	r3, #127	@ 0x7f
9000761c:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
90007620:	d817      	bhi.n	90007652 <BSP_I2C4_Init+0x4c6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007622:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90007626:	eb00 0283 	add.w	r2, r0, r3, lsl #2
9000762a:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000762e:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
90007630:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007632:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007634:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007638:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000763c:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007640:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90007642:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007644:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90007646:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
9000764a:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000764c:	430b      	orrs	r3, r1
9000764e:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90007652:	4621      	mov	r1, r4
90007654:	48b7      	ldr	r0, [pc, #732]	@ (90007934 <BSP_I2C4_Init+0x7a8>)
90007656:	f7ff fd79 	bl	9000714c <MX_I2C4_Init>
9000765a:	2800      	cmp	r0, #0
9000765c:	f43f ad9f 	beq.w	9000719e <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
90007660:	f06f 0007 	mvn.w	r0, #7
  return ret;
90007664:	e59c      	b.n	900071a0 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
90007666:	4611      	mov	r1, r2
90007668:	9a04      	ldr	r2, [sp, #16]
9000766a:	45aa      	cmp	sl, r5
9000766c:	bf0c      	ite	eq
9000766e:	2200      	moveq	r2, #0
90007670:	f002 0201 	andne.w	r2, r2, #1
90007674:	2a00      	cmp	r2, #0
90007676:	f43f af04 	beq.w	90007482 <BSP_I2C4_Init+0x2f6>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000767a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000767e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007682:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007684:	46b2      	mov	sl, r6
90007686:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000768a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000768e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007692:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007694:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007696:	f200 809d 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
9000769a:	4611      	mov	r1, r2
9000769c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000769e:	9a07      	ldr	r2, [sp, #28]
900076a0:	45aa      	cmp	sl, r5
900076a2:	bf0c      	ite	eq
900076a4:	2200      	moveq	r2, #0
900076a6:	f002 0201 	andne.w	r2, r2, #1
900076aa:	2a00      	cmp	r2, #0
900076ac:	f43f af04 	beq.w	900074b8 <BSP_I2C4_Init+0x32c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076b0:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900076b4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076b8:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076ba:	46b2      	mov	sl, r6
900076bc:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076c0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076c4:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076c8:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076ca:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076cc:	f200 8082 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
900076d0:	4611      	mov	r1, r2
900076d2:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900076d4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900076d6:	45aa      	cmp	sl, r5
900076d8:	bf0c      	ite	eq
900076da:	2200      	moveq	r2, #0
900076dc:	f002 0201 	andne.w	r2, r2, #1
900076e0:	2a00      	cmp	r2, #0
900076e2:	f43f af04 	beq.w	900074ee <BSP_I2C4_Init+0x362>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076e6:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900076ea:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900076ee:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076f0:	46b2      	mov	sl, r6
900076f2:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900076f6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900076fa:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900076fe:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007700:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007702:	d867      	bhi.n	900077d4 <BSP_I2C4_Init+0x648>
90007704:	4611      	mov	r1, r2
90007706:	46aa      	mov	sl, r5
            if(presc != prev_presc)
90007708:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9000770a:	45aa      	cmp	sl, r5
9000770c:	bf0c      	ite	eq
9000770e:	2200      	moveq	r2, #0
90007710:	f002 0201 	andne.w	r2, r2, #1
90007714:	2a00      	cmp	r2, #0
90007716:	f43f af05 	beq.w	90007524 <BSP_I2C4_Init+0x398>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000771a:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000771e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007722:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007724:	46b2      	mov	sl, r6
90007726:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000772a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000772e:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007732:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007734:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007736:	d84d      	bhi.n	900077d4 <BSP_I2C4_Init+0x648>
90007738:	4611      	mov	r1, r2
9000773a:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000773c:	45aa      	cmp	sl, r5
9000773e:	bf0c      	ite	eq
90007740:	2200      	moveq	r2, #0
90007742:	f00b 0201 	andne.w	r2, fp, #1
90007746:	2a00      	cmp	r2, #0
90007748:	f43f af07 	beq.w	9000755a <BSP_I2C4_Init+0x3ce>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000774c:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007750:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007754:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007756:	46b2      	mov	sl, r6
90007758:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000775c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007760:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007764:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007766:	6088      	str	r0, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007768:	d834      	bhi.n	900077d4 <BSP_I2C4_Init+0x648>
9000776a:	4611      	mov	r1, r2
9000776c:	46aa      	mov	sl, r5
            if(presc != prev_presc)
9000776e:	980e      	ldr	r0, [sp, #56]	@ 0x38
90007770:	4555      	cmp	r5, sl
90007772:	bf0c      	ite	eq
90007774:	2000      	moveq	r0, #0
90007776:	f000 0001 	andne.w	r0, r0, #1
9000777a:	2800      	cmp	r0, #0
9000777c:	f000 80af 	beq.w	900078de <BSP_I2C4_Init+0x752>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007780:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007784:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007788:	210c      	movs	r1, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000778a:	46b2      	mov	sl, r6
9000778c:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007790:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007794:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007798:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000779a:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000779c:	d81a      	bhi.n	900077d4 <BSP_I2C4_Init+0x648>
9000779e:	46aa      	mov	sl, r5
            if(presc != prev_presc)
900077a0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900077a2:	4555      	cmp	r5, sl
900077a4:	bf0c      	ite	eq
900077a6:	2200      	moveq	r2, #0
900077a8:	f002 0201 	andne.w	r2, r2, #1
900077ac:	2a00      	cmp	r2, #0
900077ae:	f43f af09 	beq.w	900075c4 <BSP_I2C4_Init+0x438>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077b2:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900077b6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900077ba:	46b2      	mov	sl, r6
900077bc:	f846 5021 	str.w	r5, [r6, r1, lsl #2]
900077c0:	eb06 0181 	add.w	r1, r6, r1, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900077c4:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900077c8:	604b      	str	r3, [r1, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900077ca:	f04f 030e 	mov.w	r3, #14
900077ce:	608b      	str	r3, [r1, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900077d0:	f67f af13 	bls.w	900075fa <BSP_I2C4_Init+0x46e>
900077d4:	4b58      	ldr	r3, [pc, #352]	@ (90007938 <BSP_I2C4_Init+0x7ac>)
900077d6:	4650      	mov	r0, sl
900077d8:	9c01      	ldr	r4, [sp, #4]
              I2c_valid_timing_nbr ++;
900077da:	4649      	mov	r1, r9
900077dc:	9a02      	ldr	r2, [sp, #8]
900077de:	f8c3 9000 	str.w	r9, [r3]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900077e2:	2500      	movs	r5, #0
900077e4:	9f00      	ldr	r7, [sp, #0]
900077e6:	f240 2657 	movw	r6, #599	@ 0x257
900077ea:	f240 4301 	movw	r3, #1025	@ 0x401
900077ee:	9506      	str	r5, [sp, #24]
900077f0:	f04f 35ff 	mov.w	r5, #4294967295
900077f4:	42be      	cmp	r6, r7
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900077f6:	468e      	mov	lr, r1
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900077f8:	9501      	str	r5, [sp, #4]
900077fa:	f102 0532 	add.w	r5, r2, #50	@ 0x32
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900077fe:	9408      	str	r4, [sp, #32]
90007800:	eba3 0302 	sub.w	r3, r3, r2
90007804:	bf38      	it	cc
90007806:	463e      	movcc	r6, r7
90007808:	f8df 9130 	ldr.w	r9, [pc, #304]	@ 9000793c <BSP_I2C4_Init+0x7b0>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000780c:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
90007810:	f6a2 0c34 	subw	ip, r2, #2100	@ 0x834
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007814:	f240 4a12 	movw	sl, #1042	@ 0x412
90007818:	4639      	mov	r1, r7
9000781a:	462c      	mov	r4, r5
9000781c:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000781e:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007822:	2500      	movs	r5, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007824:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007828:	1a1a      	subs	r2, r3, r0
9000782a:	1827      	adds	r7, r4, r0
9000782c:	ea4f 0842 	mov.w	r8, r2, lsl #1
90007830:	eb0c 0200 	add.w	r2, ip, r0
90007834:	e9cd 3c0c 	strd	r3, ip, [sp, #48]	@ 0x30
90007838:	9207      	str	r2, [sp, #28]
9000783a:	468c      	mov	ip, r1
9000783c:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
90007840:	e006      	b.n	90007850 <BSP_I2C4_Init+0x6c4>
90007842:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90007846:	4407      	add	r7, r0
90007848:	eba8 0800 	sub.w	r8, r8, r0
9000784c:	f43f aed7 	beq.w	900075fe <BSP_I2C4_Init+0x472>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007850:	f240 5314 	movw	r3, #1300	@ 0x514
90007854:	9500      	str	r5, [sp, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007856:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007858:	429f      	cmp	r7, r3
9000785a:	d9f2      	bls.n	90007842 <BSP_I2C4_Init+0x6b6>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000785c:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007860:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90007864:	d2ed      	bcs.n	90007842 <BSP_I2C4_Init+0x6b6>
90007866:	f640 0e34 	movw	lr, #2100	@ 0x834
9000786a:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000786c:	2200      	movs	r2, #0
9000786e:	ebae 0e03 	sub.w	lr, lr, r3
90007872:	9b07      	ldr	r3, [sp, #28]
90007874:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90007878:	e9cd 7804 	strd	r7, r8, [sp, #16]
9000787c:	443b      	add	r3, r7
9000787e:	f8dd c004 	ldr.w	ip, [sp, #4]
90007882:	f8dd 8018 	ldr.w	r8, [sp, #24]
90007886:	e005      	b.n	90007894 <BSP_I2C4_Init+0x708>
90007888:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000788c:	4403      	add	r3, r0
9000788e:	eba4 0400 	sub.w	r4, r4, r0
90007892:	d01a      	beq.n	900078ca <BSP_I2C4_Init+0x73e>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007894:	eb0e 0103 	add.w	r1, lr, r3
90007898:	4617      	mov	r7, r2
9000789a:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000789e:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900078a0:	42b1      	cmp	r1, r6
900078a2:	d9f1      	bls.n	90007888 <BSP_I2C4_Init+0x6fc>
900078a4:	4555      	cmp	r5, sl
900078a6:	d8ef      	bhi.n	90007888 <BSP_I2C4_Init+0x6fc>
            if (error < 0)
900078a8:	ea33 0123 	bics.w	r1, r3, r3, asr #32
900078ac:	bf28      	it	cs
900078ae:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
900078b0:	458b      	cmp	fp, r1
900078b2:	d9e9      	bls.n	90007888 <BSP_I2C4_Init+0x6fc>
              I2c_valid_timing[count].sclh = sclh;
900078b4:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900078b6:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              I2c_valid_timing[count].scll = scll;
900078ba:	9900      	ldr	r1, [sp, #0]
              I2c_valid_timing[count].sclh = sclh;
900078bc:	46c4      	mov	ip, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900078be:	4403      	add	r3, r0
900078c0:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
900078c4:	e9c9 7103 	strd	r7, r1, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900078c8:	d1e4      	bne.n	90007894 <BSP_I2C4_Init+0x708>
900078ca:	f8cd c004 	str.w	ip, [sp, #4]
900078ce:	9d02      	ldr	r5, [sp, #8]
900078d0:	f8dd 8014 	ldr.w	r8, [sp, #20]
900078d4:	e9dd c703 	ldrd	ip, r7, [sp, #12]
900078d8:	e7b3      	b.n	90007842 <BSP_I2C4_Init+0x6b6>
900078da:	4602      	mov	r2, r0
900078dc:	e59c      	b.n	90007418 <BSP_I2C4_Init+0x28c>
            if(presc != prev_presc)
900078de:	4608      	mov	r0, r1
900078e0:	e655      	b.n	9000758e <BSP_I2C4_Init+0x402>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078e2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900078e6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900078ea:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078ec:	46b2      	mov	sl, r6
900078ee:	f846 5022 	str.w	r5, [r6, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900078f2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900078f6:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900078fa:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900078fc:	6090      	str	r0, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900078fe:	f63f af69 	bhi.w	900077d4 <BSP_I2C4_Init+0x648>
90007902:	46aa      	mov	sl, r5
90007904:	e6b0      	b.n	90007668 <BSP_I2C4_Init+0x4dc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90007906:	3501      	adds	r5, #1
90007908:	9b00      	ldr	r3, [sp, #0]
9000790a:	2d10      	cmp	r5, #16
9000790c:	441f      	add	r7, r3
9000790e:	f47f acc0 	bne.w	90007292 <BSP_I2C4_Init+0x106>
90007912:	4693      	mov	fp, r2
90007914:	9c01      	ldr	r4, [sp, #4]
90007916:	9911      	ldr	r1, [sp, #68]	@ 0x44
90007918:	9a02      	ldr	r2, [sp, #8]
9000791a:	f1bb 0f00 	cmp.w	fp, #0
9000791e:	d003      	beq.n	90007928 <BSP_I2C4_Init+0x79c>
90007920:	4b05      	ldr	r3, [pc, #20]	@ (90007938 <BSP_I2C4_Init+0x7ac>)
90007922:	4649      	mov	r1, r9
90007924:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90007928:	2900      	cmp	r1, #0
9000792a:	f43f ae92 	beq.w	90007652 <BSP_I2C4_Init+0x4c6>
9000792e:	4803      	ldr	r0, [pc, #12]	@ (9000793c <BSP_I2C4_Init+0x7b0>)
90007930:	e757      	b.n	900077e2 <BSP_I2C4_Init+0x656>
90007932:	bf00      	nop
90007934:	2400a598 	.word	0x2400a598
90007938:	2400a5ec 	.word	0x2400a5ec
9000793c:	2400a5f0 	.word	0x2400a5f0

90007940 <BSP_I2C4_WriteReg>:
{
90007940:	b530      	push	{r4, r5, lr}
90007942:	4614      	mov	r4, r2
90007944:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90007946:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
9000794a:	460a      	mov	r2, r1
9000794c:	9301      	str	r3, [sp, #4]
9000794e:	4601      	mov	r1, r0
90007950:	2301      	movs	r3, #1
90007952:	4809      	ldr	r0, [pc, #36]	@ (90007978 <BSP_I2C4_WriteReg+0x38>)
90007954:	9502      	str	r5, [sp, #8]
90007956:	9400      	str	r4, [sp, #0]
90007958:	f001 faca 	bl	90008ef0 <HAL_I2C_Mem_Write>
9000795c:	b908      	cbnz	r0, 90007962 <BSP_I2C4_WriteReg+0x22>
}
9000795e:	b005      	add	sp, #20
90007960:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90007962:	4805      	ldr	r0, [pc, #20]	@ (90007978 <BSP_I2C4_WriteReg+0x38>)
90007964:	f001 fcc6 	bl	900092f4 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90007968:	2804      	cmp	r0, #4
9000796a:	bf14      	ite	ne
9000796c:	f06f 0003 	mvnne.w	r0, #3
90007970:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90007974:	e7f3      	b.n	9000795e <BSP_I2C4_WriteReg+0x1e>
90007976:	bf00      	nop
90007978:	2400a598 	.word	0x2400a598

9000797c <BSP_I2C4_ReadReg>:
{
9000797c:	b530      	push	{r4, r5, lr}
9000797e:	4614      	mov	r4, r2
90007980:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90007982:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
90007986:	460a      	mov	r2, r1
90007988:	9301      	str	r3, [sp, #4]
9000798a:	4601      	mov	r1, r0
9000798c:	2301      	movs	r3, #1
9000798e:	4809      	ldr	r0, [pc, #36]	@ (900079b4 <BSP_I2C4_ReadReg+0x38>)
90007990:	9502      	str	r5, [sp, #8]
90007992:	9400      	str	r4, [sp, #0]
90007994:	f001 fbaa 	bl	900090ec <HAL_I2C_Mem_Read>
90007998:	b908      	cbnz	r0, 9000799e <BSP_I2C4_ReadReg+0x22>
}
9000799a:	b005      	add	sp, #20
9000799c:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000799e:	4805      	ldr	r0, [pc, #20]	@ (900079b4 <BSP_I2C4_ReadReg+0x38>)
900079a0:	f001 fca8 	bl	900092f4 <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
900079a4:	2804      	cmp	r0, #4
900079a6:	bf14      	ite	ne
900079a8:	f06f 0003 	mvnne.w	r0, #3
900079ac:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900079b0:	e7f3      	b.n	9000799a <BSP_I2C4_ReadReg+0x1e>
900079b2:	bf00      	nop
900079b4:	2400a598 	.word	0x2400a598

900079b8 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
900079b8:	f000 baa0 	b.w	90007efc <HAL_GetTick>

900079bc <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
900079bc:	b970      	cbnz	r0, 900079dc <BSP_SDRAM_DeInit+0x20>
{
900079be:	b510      	push	{r4, lr}
900079c0:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
900079c2:	4808      	ldr	r0, [pc, #32]	@ (900079e4 <BSP_SDRAM_DeInit+0x28>)
900079c4:	f006 fd62 	bl	9000e48c <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
900079c8:	207a      	movs	r0, #122	@ 0x7a
900079ca:	f000 fb11 	bl	90007ff0 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900079ce:	4b06      	ldr	r3, [pc, #24]	@ (900079e8 <BSP_SDRAM_DeInit+0x2c>)
900079d0:	4806      	ldr	r0, [pc, #24]	@ (900079ec <BSP_SDRAM_DeInit+0x30>)
900079d2:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
900079d4:	f003 fad2 	bl	9000af7c <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
900079d8:	4620      	mov	r0, r4
}
900079da:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
900079dc:	f06f 0001 	mvn.w	r0, #1
}
900079e0:	4770      	bx	lr
900079e2:	bf00      	nop
900079e4:	2400b0ec 	.word	0x2400b0ec
900079e8:	52000040 	.word	0x52000040
900079ec:	2400aff4 	.word	0x2400aff4

900079f0 <MX_SDRAM_BANK2_Init>:
{
900079f0:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
900079f2:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900079f4:	2200      	movs	r2, #0
{
900079f6:	b089      	sub	sp, #36	@ 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
900079f8:	4c13      	ldr	r4, [pc, #76]	@ (90007a48 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900079fa:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900079fc:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900079fe:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
90007a00:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90007a02:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90007a04:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90007a06:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007a08:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90007a0c:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90007a0e:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007a10:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
90007a12:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007a14:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007a16:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007a1a:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007a1c:	f44f 6500 	mov.w	r5, #2048	@ 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007a20:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007a22:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007a24:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90007a28:	2204      	movs	r2, #4
90007a2a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90007a2e:	2202      	movs	r2, #2
90007a30:	2302      	movs	r3, #2
90007a32:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007a36:	4b05      	ldr	r3, [pc, #20]	@ (90007a4c <MX_SDRAM_BANK2_Init+0x5c>)
90007a38:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007a3a:	f006 fcfd 	bl	9000e438 <HAL_SDRAM_Init>
}
90007a3e:	3800      	subs	r0, #0
90007a40:	bf18      	it	ne
90007a42:	2001      	movne	r0, #1
90007a44:	b009      	add	sp, #36	@ 0x24
90007a46:	bd30      	pop	{r4, r5, pc}
90007a48:	2400b0ec 	.word	0x2400b0ec
90007a4c:	52004140 	.word	0x52004140

90007a50 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90007a50:	2800      	cmp	r0, #0
90007a52:	f040 80cd 	bne.w	90007bf0 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
90007a56:	4b69      	ldr	r3, [pc, #420]	@ (90007bfc <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007a58:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
90007a5a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007a5e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
90007a62:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90007a64:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
{
90007a68:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
90007a6a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007a6e:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007a70:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
90007a72:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90007a74:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007a78:	4c61      	ldr	r4, [pc, #388]	@ (90007c00 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007a7a:	4e62      	ldr	r6, [pc, #392]	@ (90007c04 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90007a7c:	9200      	str	r2, [sp, #0]
90007a7e:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
90007a80:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007a84:	430a      	orrs	r2, r1
90007a86:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90007a8a:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90007a8e:	400a      	ands	r2, r1
90007a90:	9201      	str	r2, [sp, #4]
90007a92:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90007a94:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007a98:	f042 0208 	orr.w	r2, r2, #8
90007a9c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007aa0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007aa4:	f002 0208 	and.w	r2, r2, #8
90007aa8:	9202      	str	r2, [sp, #8]
90007aaa:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90007aac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007ab0:	f042 0210 	orr.w	r2, r2, #16
90007ab4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007ab8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007abc:	f002 0210 	and.w	r2, r2, #16
90007ac0:	9203      	str	r2, [sp, #12]
90007ac2:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007ac4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007ac8:	f042 0220 	orr.w	r2, r2, #32
90007acc:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007ad0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007ad4:	f002 0220 	and.w	r2, r2, #32
90007ad8:	9204      	str	r2, [sp, #16]
90007ada:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90007adc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007ae0:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90007ae4:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90007ae8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007aec:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90007af0:	9205      	str	r2, [sp, #20]
90007af2:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007af4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90007af8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90007afc:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007b00:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007b02:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90007b06:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007b08:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007b0c:	483e      	ldr	r0, [pc, #248]	@ (90007c08 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90007b0e:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007b10:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007b12:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007b16:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007b18:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007b1a:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007b1c:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007b20:	f000 fc7e 	bl	90008420 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007b24:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007b28:	a907      	add	r1, sp, #28
90007b2a:	4838      	ldr	r0, [pc, #224]	@ (90007c0c <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007b2c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007b2e:	f000 fc77 	bl	90008420 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007b32:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007b36:	a907      	add	r1, sp, #28
90007b38:	4835      	ldr	r0, [pc, #212]	@ (90007c10 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007b3a:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007b3c:	f000 fc70 	bl	90008420 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007b40:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007b44:	a907      	add	r1, sp, #28
90007b46:	4833      	ldr	r0, [pc, #204]	@ (90007c14 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007b48:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007b4a:	f000 fc69 	bl	90008420 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007b4e:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007b50:	a907      	add	r1, sp, #28
90007b52:	4831      	ldr	r0, [pc, #196]	@ (90007c18 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007b54:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007b56:	f000 fc63 	bl	90008420 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007b5a:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007b5c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007b60:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90007b64:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90007b66:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90007b68:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007b6a:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007b6c:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007b70:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007b72:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007b74:	4a29      	ldr	r2, [pc, #164]	@ (90007c1c <BSP_SDRAM_Init+0x1cc>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007b76:	6334      	str	r4, [r6, #48]	@ 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007b78:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007b7a:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007b7c:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90007b80:	f640 0308 	movw	r3, #2056	@ 0x808
90007b84:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90007b86:	2320      	movs	r3, #32
90007b88:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007b8a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90007b8e:	e9c4 550b 	strd	r5, r5, [r4, #44]	@ 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007b92:	6263      	str	r3, [r4, #36]	@ 0x24
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90007b94:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90007b98:	f003 f9f0 	bl	9000af7c <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90007b9c:	4620      	mov	r0, r4
90007b9e:	f003 f973 	bl	9000ae88 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90007ba2:	462a      	mov	r2, r5
90007ba4:	210f      	movs	r1, #15
90007ba6:	207a      	movs	r0, #122	@ 0x7a
90007ba8:	f000 f9d8 	bl	90007f5c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90007bac:	207a      	movs	r0, #122	@ 0x7a
90007bae:	f000 fa11 	bl	90007fd4 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90007bb2:	2210      	movs	r2, #16
90007bb4:	2104      	movs	r1, #4
90007bb6:	4630      	mov	r0, r6
90007bb8:	f7ff ff1a 	bl	900079f0 <MX_SDRAM_BANK2_Init>
90007bbc:	4603      	mov	r3, r0
90007bbe:	b9d0      	cbnz	r0, 90007bf6 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007bc0:	4917      	ldr	r1, [pc, #92]	@ (90007c20 <BSP_SDRAM_Init+0x1d0>)
90007bc2:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007bc4:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007bc6:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007bc8:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007bca:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90007bce:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90007bd0:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007bd4:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90007bd8:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90007bdc:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007be0:	f7ff fa30 	bl	90007044 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90007be4:	2800      	cmp	r0, #0
90007be6:	bf18      	it	ne
90007be8:	f06f 0004 	mvnne.w	r0, #4
}
90007bec:	b00d      	add	sp, #52	@ 0x34
90007bee:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007bf0:	f06f 0001 	mvn.w	r0, #1
}
90007bf4:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90007bf6:	f04f 30ff 	mov.w	r0, #4294967295
90007bfa:	e7f7      	b.n	90007bec <BSP_SDRAM_Init+0x19c>
90007bfc:	58024400 	.word	0x58024400
90007c00:	2400b060 	.word	0x2400b060
90007c04:	2400b0ec 	.word	0x2400b0ec
90007c08:	58020c00 	.word	0x58020c00
90007c0c:	58021000 	.word	0x58021000
90007c10:	58021400 	.word	0x58021400
90007c14:	58021800 	.word	0x58021800
90007c18:	58021c00 	.word	0x58021c00
90007c1c:	52000040 	.word	0x52000040
90007c20:	2400b0cc 	.word	0x2400b0cc

90007c24 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90007c24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007c28:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90007c2a:	2800      	cmp	r0, #0
90007c2c:	d16b      	bne.n	90007d06 <BSP_TS_Init+0xe2>
90007c2e:	680b      	ldr	r3, [r1, #0]
90007c30:	460d      	mov	r5, r1
90007c32:	1e5a      	subs	r2, r3, #1
90007c34:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90007c38:	d265      	bcs.n	90007d06 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007c3a:	684a      	ldr	r2, [r1, #4]
90007c3c:	1e51      	subs	r1, r2, #1
90007c3e:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90007c42:	d260      	bcs.n	90007d06 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90007c44:	4293      	cmp	r3, r2
90007c46:	bf28      	it	cs
90007c48:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90007c4a:	68ea      	ldr	r2, [r5, #12]
90007c4c:	429a      	cmp	r2, r3
90007c4e:	d85a      	bhi.n	90007d06 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90007c50:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90007c52:	4b31      	ldr	r3, [pc, #196]	@ (90007d18 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007c54:	4c31      	ldr	r4, [pc, #196]	@ (90007d1c <BSP_TS_Init+0xf8>)
90007c56:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007c58:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90007c5c:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007c5e:	4a30      	ldr	r2, [pc, #192]	@ (90007d20 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007c60:	4b30      	ldr	r3, [pc, #192]	@ (90007d24 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007c62:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007c64:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007c66:	4a30      	ldr	r2, [pc, #192]	@ (90007d28 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007c68:	4b30      	ldr	r3, [pc, #192]	@ (90007d2c <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90007c6a:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007c6c:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007c6e:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90007c70:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007c72:	f7ff f939 	bl	90006ee8 <FT5336_RegisterBusIO>
90007c76:	2800      	cmp	r0, #0
90007c78:	d14b      	bne.n	90007d12 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007c7a:	a901      	add	r1, sp, #4
90007c7c:	4620      	mov	r0, r4
90007c7e:	f7ff f829 	bl	90006cd4 <FT5336_ReadID>
90007c82:	2800      	cmp	r0, #0
90007c84:	d145      	bne.n	90007d12 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007c86:	9b01      	ldr	r3, [sp, #4]
90007c88:	2b51      	cmp	r3, #81	@ 0x51
90007c8a:	d142      	bne.n	90007d12 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007c8c:	4b28      	ldr	r3, [pc, #160]	@ (90007d30 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007c8e:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90007c90:	4f28      	ldr	r7, [pc, #160]	@ (90007d34 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007c92:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90007d3c <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007c96:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007c98:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007c9c:	681b      	ldr	r3, [r3, #0]
90007c9e:	4798      	blx	r3
90007ca0:	4606      	mov	r6, r0
90007ca2:	2800      	cmp	r0, #0
90007ca4:	d135      	bne.n	90007d12 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007ca6:	4c24      	ldr	r4, [pc, #144]	@ (90007d38 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007ca8:	a902      	add	r1, sp, #8
90007caa:	6838      	ldr	r0, [r7, #0]
90007cac:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007cb0:	e9d5 7200 	ldrd	r7, r2, [r5]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007cb4:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007cb6:	e9c4 7200 	strd	r7, r2, [r4]
90007cba:	68aa      	ldr	r2, [r5, #8]
90007cbc:	60a2      	str	r2, [r4, #8]
90007cbe:	68ea      	ldr	r2, [r5, #12]
90007cc0:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007cc2:	4798      	blx	r3
90007cc4:	2800      	cmp	r0, #0
90007cc6:	db18      	blt.n	90007cfa <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007cc8:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007ccc:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007cd0:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007cd2:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007cd6:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007cd8:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007cda:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007cdc:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007cde:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007ce2:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007ce6:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007cea:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007cee:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007cf0:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
90007cf2:	4630      	mov	r0, r6
90007cf4:	b008      	add	sp, #32
90007cf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007cfa:	f06f 0604 	mvn.w	r6, #4
}
90007cfe:	4630      	mov	r0, r6
90007d00:	b008      	add	sp, #32
90007d02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90007d06:	f06f 0601 	mvn.w	r6, #1
}
90007d0a:	4630      	mov	r0, r6
90007d0c:	b008      	add	sp, #32
90007d0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90007d12:	f04f 36ff 	mov.w	r6, #4294967295
90007d16:	e7ec      	b.n	90007cf2 <BSP_TS_Init+0xce>
90007d18:	9000718d 	.word	0x9000718d
90007d1c:	2400b120 	.word	0x2400b120
90007d20:	900070f9 	.word	0x900070f9
90007d24:	9000797d 	.word	0x9000797d
90007d28:	90007941 	.word	0x90007941
90007d2c:	900079b9 	.word	0x900079b9
90007d30:	240000fc 	.word	0x240000fc
90007d34:	2400b188 	.word	0x2400b188
90007d38:	2400b148 	.word	0x2400b148
90007d3c:	2400b18c 	.word	0x2400b18c

90007d40 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90007d40:	2800      	cmp	r0, #0
90007d42:	d154      	bne.n	90007dee <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007d44:	4b2b      	ldr	r3, [pc, #172]	@ (90007df4 <BSP_TS_GetState+0xb4>)
90007d46:	4a2c      	ldr	r2, [pc, #176]	@ (90007df8 <BSP_TS_GetState+0xb8>)
90007d48:	681b      	ldr	r3, [r3, #0]
90007d4a:	6810      	ldr	r0, [r2, #0]
90007d4c:	691b      	ldr	r3, [r3, #16]
{
90007d4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007d52:	b084      	sub	sp, #16
90007d54:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007d56:	a901      	add	r1, sp, #4
90007d58:	4798      	blx	r3
90007d5a:	2800      	cmp	r0, #0
90007d5c:	db3f      	blt.n	90007dde <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007d5e:	4b27      	ldr	r3, [pc, #156]	@ (90007dfc <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90007d60:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007d62:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007d64:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90007d66:	b930      	cbnz	r0, 90007d76 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90007d68:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007d6a:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90007d6e:	2000      	movs	r0, #0
}
90007d70:	b004      	add	sp, #16
90007d72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007d76:	689f      	ldr	r7, [r3, #8]
90007d78:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90007d7a:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007d7e:	d433      	bmi.n	90007de8 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90007d80:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90007d82:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007d84:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007d88:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007d8c:	d003      	beq.n	90007d96 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007d8e:	f10e 32ff 	add.w	r2, lr, #4294967295
90007d92:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007d96:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007d9a:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007d9c:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007d9e:	bf48      	it	mi
90007da0:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007da4:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007da8:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007daa:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007dac:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007db0:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007db4:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007db8:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007dba:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007dbc:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007dbe:	bf8c      	ite	hi
90007dc0:	1b90      	subhi	r0, r2, r6
90007dc2:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007dc4:	42a9      	cmp	r1, r5
90007dc6:	bf8c      	ite	hi
90007dc8:	1b4f      	subhi	r7, r1, r5
90007dca:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007dcc:	42b8      	cmp	r0, r7
90007dce:	bf38      	it	cc
90007dd0:	4638      	movcc	r0, r7
90007dd2:	68df      	ldr	r7, [r3, #12]
90007dd4:	4287      	cmp	r7, r0
90007dd6:	d2c8      	bcs.n	90007d6a <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007dd8:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007dda:	62d9      	str	r1, [r3, #44]	@ 0x2c
90007ddc:	e7c7      	b.n	90007d6e <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90007dde:	f06f 0004 	mvn.w	r0, #4
}
90007de2:	b004      	add	sp, #16
90007de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90007de8:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007dea:	4642      	mov	r2, r8
90007dec:	e7ca      	b.n	90007d84 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
90007dee:	f06f 0001 	mvn.w	r0, #1
}
90007df2:	4770      	bx	lr
90007df4:	2400b18c 	.word	0x2400b18c
90007df8:	2400b188 	.word	0x2400b188
90007dfc:	2400b148 	.word	0x2400b148

90007e00 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007e00:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007e02:	4c19      	ldr	r4, [pc, #100]	@ (90007e68 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007e04:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007e06:	4b19      	ldr	r3, [pc, #100]	@ (90007e6c <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007e08:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90007e0c:	4818      	ldr	r0, [pc, #96]	@ (90007e70 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007e0e:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
90007e12:	f8c4 1088 	str.w	r1, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
90007e16:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007e18:	4c16      	ldr	r4, [pc, #88]	@ (90007e74 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90007e1a:	f041 0101 	orr.w	r1, r1, #1
90007e1e:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90007e20:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90007e22:	6819      	ldr	r1, [r3, #0]
90007e24:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007e26:	4914      	ldr	r1, [pc, #80]	@ (90007e78 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90007e28:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90007e2a:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90007e2c:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90007e2e:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90007e30:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90007e32:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90007e34:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90007e36:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
90007e38:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
90007e3a:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
90007e3c:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
90007e3e:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90007e40:	6818      	ldr	r0, [r3, #0]
90007e42:	f420 2080 	bic.w	r0, r0, #262144	@ 0x40000
90007e46:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90007e48:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007e4a:	6823      	ldr	r3, [r4, #0]
90007e4c:	4019      	ands	r1, r3
90007e4e:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
90007e52:	d203      	bcs.n	90007e5c <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007e54:	4b09      	ldr	r3, [pc, #36]	@ (90007e7c <SystemInit+0x7c>)
90007e56:	2201      	movs	r2, #1
90007e58:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007e5c:	4a08      	ldr	r2, [pc, #32]	@ (90007e80 <SystemInit+0x80>)
90007e5e:	4b02      	ldr	r3, [pc, #8]	@ (90007e68 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90007e60:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007e64:	609a      	str	r2, [r3, #8]
}
90007e66:	4770      	bx	lr
90007e68:	e000ed00 	.word	0xe000ed00
90007e6c:	58024400 	.word	0x58024400
90007e70:	eaf6ed7f 	.word	0xeaf6ed7f
90007e74:	5c001000 	.word	0x5c001000
90007e78:	ffff0000 	.word	0xffff0000
90007e7c:	51008000 	.word	0x51008000
90007e80:	90000000 	.word	0x90000000

90007e84 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90007e84:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007e86:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007e88:	4c12      	ldr	r4, [pc, #72]	@ (90007ed4 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007e8a:	f000 f855 	bl	90007f38 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007e8e:	f004 ffe1 	bl	9000ce54 <HAL_RCC_GetSysClockFreq>
90007e92:	4b11      	ldr	r3, [pc, #68]	@ (90007ed8 <HAL_Init+0x54>)
90007e94:	4911      	ldr	r1, [pc, #68]	@ (90007edc <HAL_Init+0x58>)
90007e96:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007e98:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007e9a:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007e9e:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007ea2:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007ea4:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007ea6:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90007eaa:	490d      	ldr	r1, [pc, #52]	@ (90007ee0 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007eac:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007eb0:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007eb2:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90007eb6:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007eb8:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007eba:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007ebc:	f7fc fd70 	bl	900049a0 <HAL_InitTick>
90007ec0:	b110      	cbz	r0, 90007ec8 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90007ec2:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007ec4:	4620      	mov	r0, r4
90007ec6:	bd10      	pop	{r4, pc}
90007ec8:	4604      	mov	r4, r0
  HAL_MspInit();
90007eca:	f7fc fb27 	bl	9000451c <HAL_MspInit>
}
90007ece:	4620      	mov	r0, r4
90007ed0:	bd10      	pop	{r4, pc}
90007ed2:	bf00      	nop
90007ed4:	2400012c 	.word	0x2400012c
90007ed8:	58024400 	.word	0x58024400
90007edc:	9002fcd8 	.word	0x9002fcd8
90007ee0:	24000130 	.word	0x24000130

90007ee4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007ee4:	4a03      	ldr	r2, [pc, #12]	@ (90007ef4 <HAL_IncTick+0x10>)
90007ee6:	4b04      	ldr	r3, [pc, #16]	@ (90007ef8 <HAL_IncTick+0x14>)
90007ee8:	6811      	ldr	r1, [r2, #0]
90007eea:	781b      	ldrb	r3, [r3, #0]
90007eec:	440b      	add	r3, r1
90007eee:	6013      	str	r3, [r2, #0]
}
90007ef0:	4770      	bx	lr
90007ef2:	bf00      	nop
90007ef4:	2400b190 	.word	0x2400b190
90007ef8:	24000134 	.word	0x24000134

90007efc <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007efc:	4b01      	ldr	r3, [pc, #4]	@ (90007f04 <HAL_GetTick+0x8>)
90007efe:	6818      	ldr	r0, [r3, #0]
}
90007f00:	4770      	bx	lr
90007f02:	bf00      	nop
90007f04:	2400b190 	.word	0x2400b190

90007f08 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
90007f08:	b538      	push	{r3, r4, r5, lr}
90007f0a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
90007f0c:	f7ff fff6 	bl	90007efc <HAL_GetTick>
90007f10:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
90007f12:	1c63      	adds	r3, r4, #1
90007f14:	d002      	beq.n	90007f1c <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
90007f16:	4b04      	ldr	r3, [pc, #16]	@ (90007f28 <HAL_Delay+0x20>)
90007f18:	781b      	ldrb	r3, [r3, #0]
90007f1a:	441c      	add	r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
90007f1c:	f7ff ffee 	bl	90007efc <HAL_GetTick>
90007f20:	1b40      	subs	r0, r0, r5
90007f22:	42a0      	cmp	r0, r4
90007f24:	d3fa      	bcc.n	90007f1c <HAL_Delay+0x14>
  {
  }
}
90007f26:	bd38      	pop	{r3, r4, r5, pc}
90007f28:	24000134 	.word	0x24000134

90007f2c <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007f2c:	4b01      	ldr	r3, [pc, #4]	@ (90007f34 <HAL_GetREVID+0x8>)
90007f2e:	6818      	ldr	r0, [r3, #0]
}
90007f30:	0c00      	lsrs	r0, r0, #16
90007f32:	4770      	bx	lr
90007f34:	5c001000 	.word	0x5c001000

90007f38 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007f38:	4906      	ldr	r1, [pc, #24]	@ (90007f54 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007f3a:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007f3e:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90007f40:	4b05      	ldr	r3, [pc, #20]	@ (90007f58 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007f42:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007f44:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007f48:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90007f4c:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90007f4e:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90007f50:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90007f52:	4770      	bx	lr
90007f54:	e000ed00 	.word	0xe000ed00
90007f58:	05fa0000 	.word	0x05fa0000

90007f5c <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90007f5c:	4b1a      	ldr	r3, [pc, #104]	@ (90007fc8 <HAL_NVIC_SetPriority+0x6c>)
90007f5e:	68db      	ldr	r3, [r3, #12]
90007f60:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90007f64:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007f66:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007f6a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007f6e:	f1be 0f04 	cmp.w	lr, #4
90007f72:	bf28      	it	cs
90007f74:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007f78:	f1bc 0f06 	cmp.w	ip, #6
90007f7c:	d91a      	bls.n	90007fb4 <HAL_NVIC_SetPriority+0x58>
90007f7e:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90007f82:	f04f 33ff 	mov.w	r3, #4294967295
90007f86:	fa03 f30c 	lsl.w	r3, r3, ip
90007f8a:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007f8e:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90007f92:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007f94:	fa03 f30e 	lsl.w	r3, r3, lr
90007f98:	ea21 0303 	bic.w	r3, r1, r3
90007f9c:	fa03 f30c 	lsl.w	r3, r3, ip
90007fa0:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007fa4:	ea4f 1303 	mov.w	r3, r3, lsl #4
90007fa8:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90007faa:	db06      	blt.n	90007fba <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007fac:	4a07      	ldr	r2, [pc, #28]	@ (90007fcc <HAL_NVIC_SetPriority+0x70>)
90007fae:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90007fb0:	f85d fb04 	ldr.w	pc, [sp], #4
90007fb4:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007fb6:	4694      	mov	ip, r2
90007fb8:	e7e9      	b.n	90007f8e <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007fba:	f000 000f 	and.w	r0, r0, #15
90007fbe:	4a04      	ldr	r2, [pc, #16]	@ (90007fd0 <HAL_NVIC_SetPriority+0x74>)
90007fc0:	5413      	strb	r3, [r2, r0]
90007fc2:	f85d fb04 	ldr.w	pc, [sp], #4
90007fc6:	bf00      	nop
90007fc8:	e000ed00 	.word	0xe000ed00
90007fcc:	e000e400 	.word	0xe000e400
90007fd0:	e000ed14 	.word	0xe000ed14

90007fd4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007fd4:	2800      	cmp	r0, #0
90007fd6:	db07      	blt.n	90007fe8 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007fd8:	2301      	movs	r3, #1
90007fda:	f000 011f 	and.w	r1, r0, #31
90007fde:	4a03      	ldr	r2, [pc, #12]	@ (90007fec <HAL_NVIC_EnableIRQ+0x18>)
90007fe0:	0940      	lsrs	r0, r0, #5
90007fe2:	408b      	lsls	r3, r1
90007fe4:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90007fe8:	4770      	bx	lr
90007fea:	bf00      	nop
90007fec:	e000e100 	.word	0xe000e100

90007ff0 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007ff0:	2800      	cmp	r0, #0
90007ff2:	db0c      	blt.n	9000800e <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007ff4:	0943      	lsrs	r3, r0, #5
90007ff6:	2201      	movs	r2, #1
90007ff8:	f000 001f 	and.w	r0, r0, #31
90007ffc:	4904      	ldr	r1, [pc, #16]	@ (90008010 <HAL_NVIC_DisableIRQ+0x20>)
90007ffe:	3320      	adds	r3, #32
90008000:	4082      	lsls	r2, r0
90008002:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90008006:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000800a:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
9000800e:	4770      	bx	lr
90008010:	e000e100 	.word	0xe000e100

90008014 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90008014:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90008018:	4b04      	ldr	r3, [pc, #16]	@ (9000802c <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
9000801a:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
9000801c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000801e:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90008022:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
90008024:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
90008028:	4770      	bx	lr
9000802a:	bf00      	nop
9000802c:	e000ed00 	.word	0xe000ed00

90008030 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90008030:	4b06      	ldr	r3, [pc, #24]	@ (9000804c <HAL_MPU_Enable+0x1c>)
90008032:	f040 0001 	orr.w	r0, r0, #1
90008036:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
9000803a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000803c:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90008040:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90008042:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90008046:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
9000804a:	4770      	bx	lr
9000804c:	e000ed00 	.word	0xe000ed00

90008050 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90008050:	4a16      	ldr	r2, [pc, #88]	@ (900080ac <HAL_MPU_ConfigRegion+0x5c>)
90008052:	7843      	ldrb	r3, [r0, #1]
90008054:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
90008058:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
9000805c:	f023 0301 	bic.w	r3, r3, #1
90008060:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
90008064:	6843      	ldr	r3, [r0, #4]
90008066:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9000806a:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9000806c:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90008070:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
90008072:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90008074:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90008078:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000807c:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
9000807e:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008080:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90008084:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008088:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
9000808c:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
9000808e:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90008092:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90008096:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000809a:	7a01      	ldrb	r1, [r0, #8]
9000809c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
900080a0:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
900080a4:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
900080a8:	4770      	bx	lr
900080aa:	bf00      	nop
900080ac:	e000ed00 	.word	0xe000ed00

900080b0 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
900080b0:	2800      	cmp	r0, #0
900080b2:	d036      	beq.n	90008122 <HAL_CRC_Init+0x72>
{
900080b4:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
900080b6:	7f43      	ldrb	r3, [r0, #29]
900080b8:	4604      	mov	r4, r0
900080ba:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900080be:	b363      	cbz	r3, 9000811a <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
900080c0:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
900080c2:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
900080c4:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
900080c6:	b9f3      	cbnz	r3, 90008106 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
900080c8:	6823      	ldr	r3, [r4, #0]
900080ca:	4a17      	ldr	r2, [pc, #92]	@ (90008128 <HAL_CRC_Init+0x78>)
900080cc:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
900080ce:	689a      	ldr	r2, [r3, #8]
900080d0:	f022 0218 	bic.w	r2, r2, #24
900080d4:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
900080d6:	7962      	ldrb	r2, [r4, #5]
900080d8:	b18a      	cbz	r2, 900080fe <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
900080da:	6922      	ldr	r2, [r4, #16]
900080dc:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
900080de:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900080e0:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
900080e4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
900080e8:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
900080ea:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
900080ec:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900080ee:	689a      	ldr	r2, [r3, #8]
900080f0:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
900080f4:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
900080f6:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
900080f8:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
900080fa:	7761      	strb	r1, [r4, #29]
}
900080fc:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
900080fe:	f04f 32ff 	mov.w	r2, #4294967295
90008102:	611a      	str	r2, [r3, #16]
90008104:	e7eb      	b.n	900080de <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90008106:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
9000810a:	4620      	mov	r0, r4
9000810c:	f000 f80e 	bl	9000812c <HAL_CRCEx_Polynomial_Set>
90008110:	b908      	cbnz	r0, 90008116 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90008112:	6823      	ldr	r3, [r4, #0]
90008114:	e7df      	b.n	900080d6 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90008116:	2001      	movs	r0, #1
}
90008118:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
9000811a:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
9000811c:	f7fc fa18 	bl	90004550 <HAL_CRC_MspInit>
90008120:	e7ce      	b.n	900080c0 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90008122:	2001      	movs	r0, #1
}
90008124:	4770      	bx	lr
90008126:	bf00      	nop
90008128:	04c11db7 	.word	0x04c11db7

9000812c <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
9000812c:	07cb      	lsls	r3, r1, #31
9000812e:	d51a      	bpl.n	90008166 <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90008130:	231f      	movs	r3, #31
{
90008132:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90008134:	3b01      	subs	r3, #1
90008136:	1c5c      	adds	r4, r3, #1
90008138:	fa21 fc03 	lsr.w	ip, r1, r3
9000813c:	d015      	beq.n	9000816a <HAL_CRCEx_Polynomial_Set+0x3e>
9000813e:	f01c 0f01 	tst.w	ip, #1
90008142:	d0f7      	beq.n	90008134 <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
90008144:	2a18      	cmp	r2, #24
90008146:	d811      	bhi.n	9000816c <HAL_CRCEx_Polynomial_Set+0x40>
90008148:	e8df f002 	tbb	[pc, r2]
9000814c:	10101016 	.word	0x10101016
90008150:	10101010 	.word	0x10101010
90008154:	10101024 	.word	0x10101024
90008158:	10101010 	.word	0x10101010
9000815c:	10101021 	.word	0x10101021
90008160:	10101010 	.word	0x10101010
90008164:	14          	.byte	0x14
90008165:	00          	.byte	0x00
90008166:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90008168:	4770      	bx	lr
    switch (PolyLength)
9000816a:	b12a      	cbz	r2, 90008178 <HAL_CRCEx_Polynomial_Set+0x4c>
9000816c:	2001      	movs	r0, #1
}
9000816e:	f85d 4b04 	ldr.w	r4, [sp], #4
90008172:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90008174:	2b06      	cmp	r3, #6
90008176:	d8f9      	bhi.n	9000816c <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90008178:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000817a:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
9000817c:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
9000817e:	68a3      	ldr	r3, [r4, #8]
90008180:	f023 0318 	bic.w	r3, r3, #24
90008184:	4313      	orrs	r3, r2
90008186:	60a3      	str	r3, [r4, #8]
}
90008188:	f85d 4b04 	ldr.w	r4, [sp], #4
9000818c:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
9000818e:	2b07      	cmp	r3, #7
90008190:	d9f2      	bls.n	90008178 <HAL_CRCEx_Polynomial_Set+0x4c>
90008192:	e7eb      	b.n	9000816c <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90008194:	2b0f      	cmp	r3, #15
90008196:	d9ef      	bls.n	90008178 <HAL_CRCEx_Polynomial_Set+0x4c>
90008198:	e7e8      	b.n	9000816c <HAL_CRCEx_Polynomial_Set+0x40>
9000819a:	bf00      	nop

9000819c <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
9000819c:	2800      	cmp	r0, #0
9000819e:	d035      	beq.n	9000820c <HAL_DMA2D_Init+0x70>
{
900081a0:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
900081a2:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
900081a6:	4604      	mov	r4, r0
900081a8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900081ac:	b34b      	cbz	r3, 90008202 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081ae:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900081b0:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081b2:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900081b4:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081b8:	69e1      	ldr	r1, [r4, #28]
900081ba:	681d      	ldr	r5, [r3, #0]
900081bc:	4814      	ldr	r0, [pc, #80]	@ (90008210 <HAL_DMA2D_Init+0x74>)
900081be:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900081c0:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081c2:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900081c4:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081c6:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900081c8:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900081ca:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900081cc:	4302      	orrs	r2, r0
900081ce:	6b59      	ldr	r1, [r3, #52]	@ 0x34
900081d0:	4810      	ldr	r0, [pc, #64]	@ (90008214 <HAL_DMA2D_Init+0x78>)
900081d2:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900081d4:	4910      	ldr	r1, [pc, #64]	@ (90008218 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
900081d6:	4302      	orrs	r2, r0
900081d8:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900081da:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
900081dc:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900081de:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900081e2:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900081e4:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
900081e6:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900081e8:	6b59      	ldr	r1, [r3, #52]	@ 0x34
900081ea:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900081ee:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
900081f0:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
900081f4:	430a      	orrs	r2, r1
900081f6:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900081f8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900081fa:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
900081fc:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90008200:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90008202:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
90008206:	f7fc f9bb 	bl	90004580 <HAL_DMA2D_MspInit>
9000820a:	e7d0      	b.n	900081ae <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
9000820c:	2001      	movs	r0, #1
}
9000820e:	4770      	bx	lr
90008210:	fff8ffbf 	.word	0xfff8ffbf
90008214:	fffffef8 	.word	0xfffffef8
90008218:	ffff0000 	.word	0xffff0000

9000821c <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
9000821c:	4770      	bx	lr
9000821e:	bf00      	nop

90008220 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90008220:	4770      	bx	lr
90008222:	bf00      	nop

90008224 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008224:	6803      	ldr	r3, [r0, #0]
{
90008226:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90008228:	685d      	ldr	r5, [r3, #4]
{
9000822a:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
9000822c:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
9000822e:	07ea      	lsls	r2, r5, #31
90008230:	d501      	bpl.n	90008236 <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90008232:	05f1      	lsls	r1, r6, #23
90008234:	d456      	bmi.n	900082e4 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90008236:	06aa      	lsls	r2, r5, #26
90008238:	d501      	bpl.n	9000823e <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
9000823a:	04b3      	lsls	r3, r6, #18
9000823c:	d43b      	bmi.n	900082b6 <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
9000823e:	0728      	lsls	r0, r5, #28
90008240:	d501      	bpl.n	90008246 <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90008242:	0531      	lsls	r1, r6, #20
90008244:	d421      	bmi.n	9000828a <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90008246:	076a      	lsls	r2, r5, #29
90008248:	d501      	bpl.n	9000824e <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
9000824a:	0573      	lsls	r3, r6, #21
9000824c:	d472      	bmi.n	90008334 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
9000824e:	07a8      	lsls	r0, r5, #30
90008250:	d501      	bpl.n	90008256 <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90008252:	05b1      	lsls	r1, r6, #22
90008254:	d404      	bmi.n	90008260 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90008256:	06ea      	lsls	r2, r5, #27
90008258:	d501      	bpl.n	9000825e <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000825a:	04f3      	lsls	r3, r6, #19
9000825c:	d457      	bmi.n	9000830e <HAL_DMA2D_IRQHandler+0xea>
}
9000825e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90008260:	6823      	ldr	r3, [r4, #0]
90008262:	681a      	ldr	r2, [r3, #0]
90008264:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
90008268:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
9000826a:	2202      	movs	r2, #2
9000826c:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000826e:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008270:	6e63      	ldr	r3, [r4, #100]	@ 0x64
90008272:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90008274:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008276:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
9000827a:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
9000827e:	6a23      	ldr	r3, [r4, #32]
90008280:	2b00      	cmp	r3, #0
90008282:	d0e8      	beq.n	90008256 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90008284:	4620      	mov	r0, r4
90008286:	4798      	blx	r3
90008288:	e7e5      	b.n	90008256 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
9000828a:	6823      	ldr	r3, [r4, #0]
9000828c:	681a      	ldr	r2, [r3, #0]
9000828e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008292:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90008294:	2208      	movs	r2, #8
90008296:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90008298:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
9000829a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000829c:	4313      	orrs	r3, r2
9000829e:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900082a0:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900082a4:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900082a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900082a8:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900082ac:	2b00      	cmp	r3, #0
900082ae:	d0ca      	beq.n	90008246 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
900082b0:	4620      	mov	r0, r4
900082b2:	4798      	blx	r3
900082b4:	e7c7      	b.n	90008246 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
900082b6:	6823      	ldr	r3, [r4, #0]
900082b8:	681a      	ldr	r2, [r3, #0]
900082ba:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
900082be:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
900082c0:	2220      	movs	r2, #32
900082c2:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900082c4:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
900082c6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900082c8:	f043 0302 	orr.w	r3, r3, #2
900082cc:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900082ce:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900082d2:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900082d4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900082d6:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900082da:	2b00      	cmp	r3, #0
900082dc:	d0af      	beq.n	9000823e <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
900082de:	4620      	mov	r0, r4
900082e0:	4798      	blx	r3
900082e2:	e7ac      	b.n	9000823e <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
900082e4:	681a      	ldr	r2, [r3, #0]
900082e6:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
900082ea:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
900082ec:	6e42      	ldr	r2, [r0, #100]	@ 0x64
900082ee:	f042 0201 	orr.w	r2, r2, #1
900082f2:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
900082f4:	2201      	movs	r2, #1
900082f6:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900082f8:	2304      	movs	r3, #4
900082fa:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900082fe:	2300      	movs	r3, #0
90008300:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90008304:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90008306:	2b00      	cmp	r3, #0
90008308:	d095      	beq.n	90008236 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000830a:	4798      	blx	r3
9000830c:	e793      	b.n	90008236 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000830e:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90008310:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008312:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90008314:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90008316:	681a      	ldr	r2, [r3, #0]
90008318:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000831c:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
9000831e:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90008320:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008322:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90008324:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008328:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000832a:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000832e:	f7ff ff77 	bl	90008220 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90008332:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008334:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008336:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008338:	681a      	ldr	r2, [r3, #0]
9000833a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
9000833e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90008340:	2204      	movs	r2, #4
90008342:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008344:	f7ff ff6a 	bl	9000821c <HAL_DMA2D_LineEventCallback>
90008348:	e781      	b.n	9000824e <HAL_DMA2D_IRQHandler+0x2a>
9000834a:	bf00      	nop

9000834c <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
9000834c:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90008350:	2a01      	cmp	r2, #1
90008352:	d05f      	beq.n	90008414 <HAL_DMA2D_ConfigLayer+0xc8>
90008354:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008356:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000835a:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000835c:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
90008360:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90008364:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
90008366:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008368:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
9000836c:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008370:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008372:	6b04      	ldr	r4, [r0, #48]	@ 0x30
90008374:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008376:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90008378:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000837a:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000837e:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008382:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008384:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008386:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000838a:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000838e:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008390:	d923      	bls.n	900083da <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90008392:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90008396:	b971      	cbnz	r1, 900083b6 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008398:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000839a:	491f      	ldr	r1, [pc, #124]	@ (90008418 <HAL_DMA2D_ConfigLayer+0xcc>)
9000839c:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000839e:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900083a0:	4311      	orrs	r1, r2
900083a2:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900083a4:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
900083a6:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
900083a8:	2101      	movs	r1, #1

  return HAL_OK;
900083aa:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
900083ac:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
900083b0:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
900083b4:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
900083b6:	2d0b      	cmp	r5, #11
900083b8:	d12a      	bne.n	90008410 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
900083ba:	6c00      	ldr	r0, [r0, #64]	@ 0x40
900083bc:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
900083c0:	4816      	ldr	r0, [pc, #88]	@ (9000841c <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900083c2:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900083c6:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900083c8:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900083cc:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900083ce:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900083d2:	430a      	orrs	r2, r1
900083d4:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900083d6:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900083d8:	e7e5      	b.n	900083a6 <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900083da:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
900083de:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900083e0:	b959      	cbnz	r1, 900083fa <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900083e2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900083e4:	490c      	ldr	r1, [pc, #48]	@ (90008418 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900083e6:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900083e8:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900083ea:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900083ec:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900083ee:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900083f2:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900083f4:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900083f6:	62a0      	str	r0, [r4, #40]	@ 0x28
900083f8:	e7d5      	b.n	900083a6 <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900083fa:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900083fc:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008400:	4905      	ldr	r1, [pc, #20]	@ (90008418 <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90008402:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008404:	4029      	ands	r1, r5
90008406:	4311      	orrs	r1, r2
90008408:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000840a:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
9000840c:	6226      	str	r6, [r4, #32]
9000840e:	e7ca      	b.n	900083a6 <HAL_DMA2D_ConfigLayer+0x5a>
90008410:	4801      	ldr	r0, [pc, #4]	@ (90008418 <HAL_DMA2D_ConfigLayer+0xcc>)
90008412:	e7d6      	b.n	900083c2 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90008414:	2002      	movs	r0, #2
}
90008416:	4770      	bx	lr
90008418:	00ccfff0 	.word	0x00ccfff0
9000841c:	00c0fff0 	.word	0x00c0fff0

90008420 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90008420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008424:	680c      	ldr	r4, [r1, #0]
{
90008426:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008428:	2c00      	cmp	r4, #0
9000842a:	f000 80a5 	beq.w	90008578 <HAL_GPIO_Init+0x158>
  uint32_t position = 0x00U;
9000842e:	2300      	movs	r3, #0
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90008430:	f04f 0b01 	mov.w	fp, #1
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90008434:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008438:	9100      	str	r1, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000843a:	fa0b fc03 	lsl.w	ip, fp, r3
    if (iocurrent != 0x00U)
9000843e:	ea1c 0a04 	ands.w	sl, ip, r4
90008442:	f000 8094 	beq.w	9000856e <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008446:	9900      	ldr	r1, [sp, #0]
90008448:	005f      	lsls	r7, r3, #1
9000844a:	684d      	ldr	r5, [r1, #4]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000844c:	2103      	movs	r1, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000844e:	f005 0203 	and.w	r2, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008452:	fa01 f607 	lsl.w	r6, r1, r7
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90008456:	f102 38ff 	add.w	r8, r2, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000845a:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000845c:	f1b8 0f01 	cmp.w	r8, #1
90008460:	f240 808d 	bls.w	9000857e <HAL_GPIO_Init+0x15e>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90008464:	2a03      	cmp	r2, #3
90008466:	f040 80cb 	bne.w	90008600 <HAL_GPIO_Init+0x1e0>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
9000846a:	40ba      	lsls	r2, r7
      temp = GPIOx->MODER;
9000846c:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000846e:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90008472:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008476:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
9000847a:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000847c:	d077      	beq.n	9000856e <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000847e:	4e7f      	ldr	r6, [pc, #508]	@ (9000867c <HAL_GPIO_Init+0x25c>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008480:	f003 0703 	and.w	r7, r3, #3
90008484:	210f      	movs	r1, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008486:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000848a:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000848c:	f042 0202 	orr.w	r2, r2, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008490:	fa01 fc07 	lsl.w	ip, r1, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008494:	497a      	ldr	r1, [pc, #488]	@ (90008680 <HAL_GPIO_Init+0x260>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008496:	f8c6 20f4 	str.w	r2, [r6, #244]	@ 0xf4
9000849a:	f8d6 20f4 	ldr.w	r2, [r6, #244]	@ 0xf4
9000849e:	f023 0603 	bic.w	r6, r3, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900084a2:	4288      	cmp	r0, r1
900084a4:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900084a8:	f002 0202 	and.w	r2, r2, #2
900084ac:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
900084b0:	9203      	str	r2, [sp, #12]
900084b2:	9a03      	ldr	r2, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
900084b4:	68b2      	ldr	r2, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900084b6:	ea22 020c 	bic.w	r2, r2, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900084ba:	d031      	beq.n	90008520 <HAL_GPIO_Init+0x100>
900084bc:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
900084c0:	4288      	cmp	r0, r1
900084c2:	f000 80b0 	beq.w	90008626 <HAL_GPIO_Init+0x206>
900084c6:	496f      	ldr	r1, [pc, #444]	@ (90008684 <HAL_GPIO_Init+0x264>)
900084c8:	4288      	cmp	r0, r1
900084ca:	f000 80b2 	beq.w	90008632 <HAL_GPIO_Init+0x212>
900084ce:	f8df c1b8 	ldr.w	ip, [pc, #440]	@ 90008688 <HAL_GPIO_Init+0x268>
900084d2:	4560      	cmp	r0, ip
900084d4:	f000 80a1 	beq.w	9000861a <HAL_GPIO_Init+0x1fa>
900084d8:	f8df c1b0 	ldr.w	ip, [pc, #432]	@ 9000868c <HAL_GPIO_Init+0x26c>
900084dc:	4560      	cmp	r0, ip
900084de:	f000 80b4 	beq.w	9000864a <HAL_GPIO_Init+0x22a>
900084e2:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 90008690 <HAL_GPIO_Init+0x270>
900084e6:	4560      	cmp	r0, ip
900084e8:	f000 80b5 	beq.w	90008656 <HAL_GPIO_Init+0x236>
900084ec:	f8df c1a4 	ldr.w	ip, [pc, #420]	@ 90008694 <HAL_GPIO_Init+0x274>
900084f0:	4560      	cmp	r0, ip
900084f2:	f000 80a4 	beq.w	9000863e <HAL_GPIO_Init+0x21e>
900084f6:	f8df c1a0 	ldr.w	ip, [pc, #416]	@ 90008698 <HAL_GPIO_Init+0x278>
900084fa:	4560      	cmp	r0, ip
900084fc:	f000 80b1 	beq.w	90008662 <HAL_GPIO_Init+0x242>
90008500:	f8df c198 	ldr.w	ip, [pc, #408]	@ 9000869c <HAL_GPIO_Init+0x27c>
90008504:	4560      	cmp	r0, ip
90008506:	f000 80b2 	beq.w	9000866e <HAL_GPIO_Init+0x24e>
9000850a:	f8df c194 	ldr.w	ip, [pc, #404]	@ 900086a0 <HAL_GPIO_Init+0x280>
9000850e:	4560      	cmp	r0, ip
90008510:	bf0c      	ite	eq
90008512:	f04f 0c09 	moveq.w	ip, #9
90008516:	f04f 0c0a 	movne.w	ip, #10
9000851a:	fa0c f707 	lsl.w	r7, ip, r7
9000851e:	433a      	orrs	r2, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
90008520:	60b2      	str	r2, [r6, #8]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90008522:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
90008524:	f8de 2000 	ldr.w	r2, [lr]
        temp &= ~(iocurrent);
90008528:	ea6f 060a 	mvn.w	r6, sl
        {
          temp |= iocurrent;
9000852c:	bf4c      	ite	mi
9000852e:	ea4a 0202 	orrmi.w	r2, sl, r2
        temp &= ~(iocurrent);
90008532:	4032      	andpl	r2, r6
        }
        EXTI->RTSR1 = temp;

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
90008534:	02a9      	lsls	r1, r5, #10
        EXTI->RTSR1 = temp;
90008536:	f8ce 2000 	str.w	r2, [lr]
        temp = EXTI->FTSR1;
9000853a:	f8de 2004 	ldr.w	r2, [lr, #4]
        temp &= ~(iocurrent);
9000853e:	bf54      	ite	pl
90008540:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90008542:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI->FTSR1 = temp;

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90008546:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
90008548:	f8ce 2004 	str.w	r2, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000854c:	f8de 2084 	ldr.w	r2, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
90008550:	bf54      	ite	pl
90008552:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90008554:	ea4a 0202 	orrmi.w	r2, sl, r2
        EXTI_CurrentCPU->EMR1 = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90008558:	03e9      	lsls	r1, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
9000855a:	f8ce 2084 	str.w	r2, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000855e:	f8de 2080 	ldr.w	r2, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90008562:	bf54      	ite	pl
90008564:	4032      	andpl	r2, r6
        {
          temp |= iocurrent;
90008566:	ea4a 0202 	orrmi.w	r2, sl, r2
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000856a:	f8ce 2080 	str.w	r2, [lr, #128]	@ 0x80
      }
    }

    position++;
9000856e:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008570:	fa34 f203 	lsrs.w	r2, r4, r3
90008574:	f47f af61 	bne.w	9000843a <HAL_GPIO_Init+0x1a>
  }
}
90008578:	b005      	add	sp, #20
9000857a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
9000857e:	9900      	ldr	r1, [sp, #0]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008580:	2a02      	cmp	r2, #2
        temp = GPIOx->OSPEEDR;
90008582:	f8d0 9008 	ldr.w	r9, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
90008586:	68c9      	ldr	r1, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008588:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
9000858c:	fa01 f807 	lsl.w	r8, r1, r7
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008590:	9900      	ldr	r1, [sp, #0]
        temp |= (GPIO_Init->Speed << (position * 2U));
90008592:	ea48 0809 	orr.w	r8, r8, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008596:	6889      	ldr	r1, [r1, #8]
        GPIOx->OSPEEDR = temp;
90008598:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000859c:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
900085a0:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900085a4:	fa08 f803 	lsl.w	r8, r8, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
900085a8:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
900085ac:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
900085b0:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900085b4:	fa01 fc07 	lsl.w	ip, r1, r7
      temp = GPIOx->PUPDR;
900085b8:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900085bc:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900085c0:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900085c4:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900085c8:	f47f af4f 	bne.w	9000846a <HAL_GPIO_Init+0x4a>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900085cc:	f003 0c07 	and.w	ip, r3, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900085d0:	9900      	ldr	r1, [sp, #0]
        temp = GPIOx->AFR[position >> 3U];
900085d2:	ea4f 08d3 	mov.w	r8, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900085d6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900085da:	6909      	ldr	r1, [r1, #16]
900085dc:	eb00 0888 	add.w	r8, r0, r8, lsl #2
900085e0:	fa01 f10c 	lsl.w	r1, r1, ip
        temp = GPIOx->AFR[position >> 3U];
900085e4:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900085e8:	9101      	str	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900085ea:	210f      	movs	r1, #15
900085ec:	fa01 fc0c 	lsl.w	ip, r1, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900085f0:	9901      	ldr	r1, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900085f2:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900085f6:	ea41 0c09 	orr.w	ip, r1, r9
        GPIOx->AFR[position >> 3U] = temp;
900085fa:	f8c8 c020 	str.w	ip, [r8, #32]
900085fe:	e734      	b.n	9000846a <HAL_GPIO_Init+0x4a>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008600:	9900      	ldr	r1, [sp, #0]
      temp = GPIOx->PUPDR;
90008602:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008606:	6889      	ldr	r1, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008608:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000860c:	fa01 fc07 	lsl.w	ip, r1, r7
90008610:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90008614:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008618:	e727      	b.n	9000846a <HAL_GPIO_Init+0x4a>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000861a:	f04f 0c03 	mov.w	ip, #3
9000861e:	fa0c f707 	lsl.w	r7, ip, r7
90008622:	433a      	orrs	r2, r7
90008624:	e77c      	b.n	90008520 <HAL_GPIO_Init+0x100>
90008626:	f04f 0c01 	mov.w	ip, #1
9000862a:	fa0c f707 	lsl.w	r7, ip, r7
9000862e:	433a      	orrs	r2, r7
90008630:	e776      	b.n	90008520 <HAL_GPIO_Init+0x100>
90008632:	f04f 0c02 	mov.w	ip, #2
90008636:	fa0c f707 	lsl.w	r7, ip, r7
9000863a:	433a      	orrs	r2, r7
9000863c:	e770      	b.n	90008520 <HAL_GPIO_Init+0x100>
9000863e:	f04f 0c06 	mov.w	ip, #6
90008642:	fa0c f707 	lsl.w	r7, ip, r7
90008646:	433a      	orrs	r2, r7
90008648:	e76a      	b.n	90008520 <HAL_GPIO_Init+0x100>
9000864a:	f04f 0c04 	mov.w	ip, #4
9000864e:	fa0c f707 	lsl.w	r7, ip, r7
90008652:	433a      	orrs	r2, r7
90008654:	e764      	b.n	90008520 <HAL_GPIO_Init+0x100>
90008656:	f04f 0c05 	mov.w	ip, #5
9000865a:	fa0c f707 	lsl.w	r7, ip, r7
9000865e:	433a      	orrs	r2, r7
90008660:	e75e      	b.n	90008520 <HAL_GPIO_Init+0x100>
90008662:	f04f 0c07 	mov.w	ip, #7
90008666:	fa0c f707 	lsl.w	r7, ip, r7
9000866a:	433a      	orrs	r2, r7
9000866c:	e758      	b.n	90008520 <HAL_GPIO_Init+0x100>
9000866e:	f04f 0c08 	mov.w	ip, #8
90008672:	fa0c f707 	lsl.w	r7, ip, r7
90008676:	433a      	orrs	r2, r7
90008678:	e752      	b.n	90008520 <HAL_GPIO_Init+0x100>
9000867a:	bf00      	nop
9000867c:	58024400 	.word	0x58024400
90008680:	58020000 	.word	0x58020000
90008684:	58020800 	.word	0x58020800
90008688:	58020c00 	.word	0x58020c00
9000868c:	58021000 	.word	0x58021000
90008690:	58021400 	.word	0x58021400
90008694:	58021800 	.word	0x58021800
90008698:	58021c00 	.word	0x58021c00
9000869c:	58022000 	.word	0x58022000
900086a0:	58022400 	.word	0x58022400

900086a4 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
900086a4:	2900      	cmp	r1, #0
900086a6:	f000 80ac 	beq.w	90008802 <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
900086aa:	2300      	movs	r3, #0
{
900086ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
900086b0:	2601      	movs	r6, #1
{
900086b2:	b083      	sub	sp, #12
900086b4:	f8df a168 	ldr.w	sl, [pc, #360]	@ 90008820 <HAL_GPIO_DeInit+0x17c>
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900086b8:	f04f 080f 	mov.w	r8, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900086bc:	f04f 0903 	mov.w	r9, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
900086c0:	fa06 f203 	lsl.w	r2, r6, r3
    if (iocurrent != 0x00U)
900086c4:	ea12 0c01 	ands.w	ip, r2, r1
900086c8:	d073      	beq.n	900087b2 <HAL_GPIO_DeInit+0x10e>
      tmp = SYSCFG->EXTICR[position >> 2U];
900086ca:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900086ce:	f003 0403 	and.w	r4, r3, #3
900086d2:	4455      	add	r5, sl
900086d4:	00a4      	lsls	r4, r4, #2
      tmp = SYSCFG->EXTICR[position >> 2U];
900086d6:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900086d8:	fa08 fe04 	lsl.w	lr, r8, r4
900086dc:	ea0e 0707 	and.w	r7, lr, r7
900086e0:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900086e2:	4f4b      	ldr	r7, [pc, #300]	@ (90008810 <HAL_GPIO_DeInit+0x16c>)
900086e4:	42b8      	cmp	r0, r7
900086e6:	d027      	beq.n	90008738 <HAL_GPIO_DeInit+0x94>
900086e8:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
900086ec:	42b8      	cmp	r0, r7
900086ee:	d067      	beq.n	900087c0 <HAL_GPIO_DeInit+0x11c>
900086f0:	4f48      	ldr	r7, [pc, #288]	@ (90008814 <HAL_GPIO_DeInit+0x170>)
900086f2:	42b8      	cmp	r0, r7
900086f4:	d067      	beq.n	900087c6 <HAL_GPIO_DeInit+0x122>
900086f6:	4f48      	ldr	r7, [pc, #288]	@ (90008818 <HAL_GPIO_DeInit+0x174>)
900086f8:	42b8      	cmp	r0, r7
900086fa:	d06e      	beq.n	900087da <HAL_GPIO_DeInit+0x136>
900086fc:	4f47      	ldr	r7, [pc, #284]	@ (9000881c <HAL_GPIO_DeInit+0x178>)
900086fe:	42b8      	cmp	r0, r7
90008700:	d070      	beq.n	900087e4 <HAL_GPIO_DeInit+0x140>
90008702:	f8df b120 	ldr.w	fp, [pc, #288]	@ 90008824 <HAL_GPIO_DeInit+0x180>
90008706:	4558      	cmp	r0, fp
90008708:	d062      	beq.n	900087d0 <HAL_GPIO_DeInit+0x12c>
9000870a:	f8df b11c 	ldr.w	fp, [pc, #284]	@ 90008828 <HAL_GPIO_DeInit+0x184>
9000870e:	4558      	cmp	r0, fp
90008710:	d072      	beq.n	900087f8 <HAL_GPIO_DeInit+0x154>
90008712:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9000882c <HAL_GPIO_DeInit+0x188>
90008716:	4558      	cmp	r0, fp
90008718:	d074      	beq.n	90008804 <HAL_GPIO_DeInit+0x160>
9000871a:	f8df b114 	ldr.w	fp, [pc, #276]	@ 90008830 <HAL_GPIO_DeInit+0x18c>
9000871e:	4558      	cmp	r0, fp
90008720:	d065      	beq.n	900087ee <HAL_GPIO_DeInit+0x14a>
90008722:	f8df b110 	ldr.w	fp, [pc, #272]	@ 90008834 <HAL_GPIO_DeInit+0x190>
90008726:	4558      	cmp	r0, fp
90008728:	bf14      	ite	ne
9000872a:	f04f 0b0a 	movne.w	fp, #10
9000872e:	f04f 0b09 	moveq.w	fp, #9
90008732:	fa0b f404 	lsl.w	r4, fp, r4
90008736:	e000      	b.n	9000873a <HAL_GPIO_DeInit+0x96>
90008738:	2400      	movs	r4, #0
9000873a:	9f01      	ldr	r7, [sp, #4]
9000873c:	42a7      	cmp	r7, r4
9000873e:	d119      	bne.n	90008774 <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90008740:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
90008744:	f8d4 7080 	ldr.w	r7, [r4, #128]	@ 0x80
90008748:	ea27 070c 	bic.w	r7, r7, ip
9000874c:	f8c4 7080 	str.w	r7, [r4, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90008750:	f8d4 7084 	ldr.w	r7, [r4, #132]	@ 0x84
90008754:	ea27 070c 	bic.w	r7, r7, ip
90008758:	f8c4 7084 	str.w	r7, [r4, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
9000875c:	6867      	ldr	r7, [r4, #4]
9000875e:	ea27 070c 	bic.w	r7, r7, ip
90008762:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90008764:	6827      	ldr	r7, [r4, #0]
90008766:	ea27 070c 	bic.w	r7, r7, ip
9000876a:	6027      	str	r7, [r4, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000876c:	68ac      	ldr	r4, [r5, #8]
9000876e:	ea24 040e 	bic.w	r4, r4, lr
90008772:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008774:	005d      	lsls	r5, r3, #1
90008776:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008778:	08df      	lsrs	r7, r3, #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000877a:	fa09 f505 	lsl.w	r5, r9, r5
9000877e:	eb00 0787 	add.w	r7, r0, r7, lsl #2
90008782:	432c      	orrs	r4, r5
90008784:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008786:	f003 0407 	and.w	r4, r3, #7
9000878a:	f8d7 c020 	ldr.w	ip, [r7, #32]
9000878e:	00a4      	lsls	r4, r4, #2
90008790:	fa08 f404 	lsl.w	r4, r8, r4
90008794:	ea2c 0404 	bic.w	r4, ip, r4
90008798:	623c      	str	r4, [r7, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000879a:	68c4      	ldr	r4, [r0, #12]
9000879c:	ea24 0405 	bic.w	r4, r4, r5
900087a0:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900087a2:	6844      	ldr	r4, [r0, #4]
900087a4:	ea24 0202 	bic.w	r2, r4, r2
900087a8:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900087aa:	6882      	ldr	r2, [r0, #8]
900087ac:	ea22 0205 	bic.w	r2, r2, r5
900087b0:	6082      	str	r2, [r0, #8]
    }

    position++;
900087b2:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
900087b4:	fa31 f203 	lsrs.w	r2, r1, r3
900087b8:	d182      	bne.n	900086c0 <HAL_GPIO_DeInit+0x1c>
  }
}
900087ba:	b003      	add	sp, #12
900087bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900087c0:	fa06 f404 	lsl.w	r4, r6, r4
900087c4:	e7b9      	b.n	9000873a <HAL_GPIO_DeInit+0x96>
900087c6:	f04f 0b02 	mov.w	fp, #2
900087ca:	fa0b f404 	lsl.w	r4, fp, r4
900087ce:	e7b4      	b.n	9000873a <HAL_GPIO_DeInit+0x96>
900087d0:	f04f 0b05 	mov.w	fp, #5
900087d4:	fa0b f404 	lsl.w	r4, fp, r4
900087d8:	e7af      	b.n	9000873a <HAL_GPIO_DeInit+0x96>
900087da:	f04f 0b03 	mov.w	fp, #3
900087de:	fa0b f404 	lsl.w	r4, fp, r4
900087e2:	e7aa      	b.n	9000873a <HAL_GPIO_DeInit+0x96>
900087e4:	f04f 0b04 	mov.w	fp, #4
900087e8:	fa0b f404 	lsl.w	r4, fp, r4
900087ec:	e7a5      	b.n	9000873a <HAL_GPIO_DeInit+0x96>
900087ee:	f04f 0b08 	mov.w	fp, #8
900087f2:	fa0b f404 	lsl.w	r4, fp, r4
900087f6:	e7a0      	b.n	9000873a <HAL_GPIO_DeInit+0x96>
900087f8:	f04f 0b06 	mov.w	fp, #6
900087fc:	fa0b f404 	lsl.w	r4, fp, r4
90008800:	e79b      	b.n	9000873a <HAL_GPIO_DeInit+0x96>
90008802:	4770      	bx	lr
90008804:	f04f 0b07 	mov.w	fp, #7
90008808:	fa0b f404 	lsl.w	r4, fp, r4
9000880c:	e795      	b.n	9000873a <HAL_GPIO_DeInit+0x96>
9000880e:	bf00      	nop
90008810:	58020000 	.word	0x58020000
90008814:	58020800 	.word	0x58020800
90008818:	58020c00 	.word	0x58020c00
9000881c:	58021000 	.word	0x58021000
90008820:	58000400 	.word	0x58000400
90008824:	58021400 	.word	0x58021400
90008828:	58021800 	.word	0x58021800
9000882c:	58021c00 	.word	0x58021c00
90008830:	58022000 	.word	0x58022000
90008834:	58022400 	.word	0x58022400

90008838 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90008838:	6903      	ldr	r3, [r0, #16]
9000883a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
9000883c:	bf14      	ite	ne
9000883e:	2001      	movne	r0, #1
90008840:	2000      	moveq	r0, #0
90008842:	4770      	bx	lr

90008844 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90008844:	b902      	cbnz	r2, 90008848 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
90008846:	0409      	lsls	r1, r1, #16
90008848:	6181      	str	r1, [r0, #24]
  }
}
9000884a:	4770      	bx	lr

9000884c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
9000884c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
9000884e:	ea01 0203 	and.w	r2, r1, r3
90008852:	ea21 0103 	bic.w	r1, r1, r3
90008856:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000885a:	6181      	str	r1, [r0, #24]
}
9000885c:	4770      	bx	lr
9000885e:	bf00      	nop

90008860 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @param  Status The actual Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
90008860:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008864:	6803      	ldr	r3, [r0, #0]
90008866:	699a      	ldr	r2, [r3, #24]
90008868:	0414      	lsls	r4, r2, #16
9000886a:	f140 8088 	bpl.w	9000897e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11e>
9000886e:	4604      	mov	r4, r0
90008870:	4688      	mov	r8, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008872:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008876:	699e      	ldr	r6, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008878:	f016 0610 	ands.w	r6, r6, #16
9000887c:	f000 8082 	beq.w	90008984 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x124>
  uint32_t error_code = 0;
90008880:	2600      	movs	r6, #0
  uint32_t tickstart = Tickstart;
90008882:	4645      	mov	r5, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008884:	f8c3 901c 	str.w	r9, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008888:	4637      	mov	r7, r6

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000888a:	699a      	ldr	r2, [r3, #24]
9000888c:	0692      	lsls	r2, r2, #26
9000888e:	d427      	bmi.n	900088e0 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x80>
90008890:	bb4f      	cbnz	r7, 900088e6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008892:	f7ff fb33 	bl	90007efc <HAL_GetTick>
90008896:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008898:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000889a:	2819      	cmp	r0, #25
9000889c:	d9f5      	bls.n	9000888a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000889e:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900088a0:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900088a4:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900088a6:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900088a8:	0409      	lsls	r1, r1, #16
900088aa:	d50b      	bpl.n	900088c4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp1 != I2C_CR2_STOP) && \
900088ac:	0440      	lsls	r0, r0, #17
900088ae:	d409      	bmi.n	900088c4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
900088b0:	2a20      	cmp	r2, #32
900088b2:	d007      	beq.n	900088c4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900088b4:	685a      	ldr	r2, [r3, #4]
900088b6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900088ba:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
900088bc:	f7ff fb1e 	bl	90007efc <HAL_GetTick>
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900088c0:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
900088c2:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900088c4:	699a      	ldr	r2, [r3, #24]
900088c6:	0691      	lsls	r1, r2, #26
900088c8:	d4df      	bmi.n	9000888a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x2a>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900088ca:	f7ff fb17 	bl	90007efc <HAL_GetTick>
900088ce:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900088d0:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900088d2:	2819      	cmp	r0, #25
900088d4:	d9f6      	bls.n	900088c4 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x64>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900088d6:	699a      	ldr	r2, [r3, #24]
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900088d8:	2620      	movs	r6, #32

              status = HAL_ERROR;
900088da:	2701      	movs	r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900088dc:	0692      	lsls	r2, r2, #26
900088de:	d5d7      	bpl.n	90008890 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x30>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
900088e0:	b90f      	cbnz	r7, 900088e6 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x86>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900088e2:	2220      	movs	r2, #32
900088e4:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
900088e6:	f046 0604 	orr.w	r6, r6, #4

    status = HAL_ERROR;
900088ea:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
900088ec:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900088ee:	05d7      	lsls	r7, r2, #23
900088f0:	d531      	bpl.n	90008956 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf6>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900088f2:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900088f6:	0550      	lsls	r0, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900088f8:	f046 0601 	orr.w	r6, r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900088fc:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900088fe:	d504      	bpl.n	9000890a <I2C_WaitOnFlagUntilTimeout.constprop.0+0xaa>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008900:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008904:	f046 0608 	orr.w	r6, r6, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008908:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000890a:	0592      	lsls	r2, r2, #22
9000890c:	d504      	bpl.n	90008918 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000890e:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008912:	f046 0602 	orr.w	r6, r6, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008916:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008918:	699a      	ldr	r2, [r3, #24]
9000891a:	0795      	lsls	r5, r2, #30
9000891c:	d501      	bpl.n	90008922 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xc2>
    hi2c->Instance->TXDR = 0x00U;
9000891e:	2200      	movs	r2, #0
90008920:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008922:	699a      	ldr	r2, [r3, #24]
90008924:	07d0      	lsls	r0, r2, #31
90008926:	d403      	bmi.n	90008930 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd0>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008928:	699a      	ldr	r2, [r3, #24]
9000892a:	f042 0201 	orr.w	r2, r2, #1
9000892e:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90008930:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90008932:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008934:	4d19      	ldr	r5, [pc, #100]	@ (9000899c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008936:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008938:	402a      	ands	r2, r5
9000893a:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000893c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000893e:	4333      	orrs	r3, r6
90008940:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008942:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008946:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
9000894a:	2300      	movs	r3, #0
      return HAL_ERROR;
9000894c:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
9000894e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90008952:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008956:	0551      	lsls	r1, r2, #21
90008958:	d4d2      	bmi.n	90008900 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa0>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000895a:	0597      	lsls	r7, r2, #22
9000895c:	d4d7      	bmi.n	9000890e <I2C_WaitOnFlagUntilTimeout.constprop.0+0xae>
  if (status != HAL_OK)
9000895e:	2d00      	cmp	r5, #0
90008960:	d1da      	bne.n	90008918 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008962:	f7ff facb 	bl	90007efc <HAL_GetTick>
90008966:	eba0 0008 	sub.w	r0, r0, r8
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000896a:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000896c:	2819      	cmp	r0, #25
9000896e:	d902      	bls.n	90008976 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x116>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008970:	699a      	ldr	r2, [r3, #24]
90008972:	0411      	lsls	r1, r2, #16
90008974:	d408      	bmi.n	90008988 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x128>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008976:	699a      	ldr	r2, [r3, #24]
90008978:	0412      	lsls	r2, r2, #16
9000897a:	f53f af7c 	bmi.w	90008876 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x16>
  return HAL_OK;
9000897e:	2000      	movs	r0, #0
}
90008980:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008984:	4635      	mov	r5, r6
90008986:	e7b1      	b.n	900088ec <I2C_WaitOnFlagUntilTimeout.constprop.0+0x8c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008988:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000898a:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000898c:	4313      	orrs	r3, r2
9000898e:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008990:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008994:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90008998:	e7d7      	b.n	9000894a <I2C_WaitOnFlagUntilTimeout.constprop.0+0xea>
9000899a:	bf00      	nop
9000899c:	fe00e800 	.word	0xfe00e800

900089a0 <I2C_WaitOnTXISFlagUntilTimeout>:
{
900089a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900089a4:	6803      	ldr	r3, [r0, #0]
{
900089a6:	4680      	mov	r8, r0
900089a8:	460d      	mov	r5, r1
900089aa:	4692      	mov	sl, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900089ac:	2710      	movs	r7, #16
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900089ae:	699c      	ldr	r4, [r3, #24]
900089b0:	f014 0402 	ands.w	r4, r4, #2
900089b4:	f040 80a5 	bne.w	90008b02 <I2C_WaitOnTXISFlagUntilTimeout+0x162>
  uint32_t itflag   = hi2c->Instance->ISR;
900089b8:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900089ba:	f012 0c10 	ands.w	ip, r2, #16
900089be:	d078      	beq.n	90008ab2 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
  uint32_t tickstart = Tickstart;
900089c0:	46d1      	mov	r9, sl
  HAL_StatusTypeDef status = HAL_OK;
900089c2:	4626      	mov	r6, r4
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900089c4:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900089c6:	1c68      	adds	r0, r5, #1
900089c8:	d001      	beq.n	900089ce <I2C_WaitOnTXISFlagUntilTimeout+0x2e>
900089ca:	e041      	b.n	90008a50 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
900089cc:	b92e      	cbnz	r6, 900089da <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
900089ce:	699a      	ldr	r2, [r3, #24]
900089d0:	0691      	lsls	r1, r2, #26
900089d2:	d5fb      	bpl.n	900089cc <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
    if (status == HAL_OK)
900089d4:	b90e      	cbnz	r6, 900089da <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900089d6:	2220      	movs	r2, #32
900089d8:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
900089da:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
900089dc:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
900089e0:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900089e2:	05d0      	lsls	r0, r2, #23
900089e4:	d569      	bpl.n	90008aba <I2C_WaitOnTXISFlagUntilTimeout+0x11a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900089e6:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900089ea:	0557      	lsls	r7, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900089ec:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900089f0:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900089f2:	d504      	bpl.n	900089fe <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900089f4:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900089f8:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900089fc:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900089fe:	0595      	lsls	r5, r2, #22
90008a00:	d504      	bpl.n	90008a0c <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008a02:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008a06:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008a0a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008a0c:	699a      	ldr	r2, [r3, #24]
90008a0e:	0790      	lsls	r0, r2, #30
90008a10:	d501      	bpl.n	90008a16 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    hi2c->Instance->TXDR = 0x00U;
90008a12:	2200      	movs	r2, #0
90008a14:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008a16:	699a      	ldr	r2, [r3, #24]
90008a18:	07d1      	lsls	r1, r2, #31
90008a1a:	d403      	bmi.n	90008a24 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008a1c:	699a      	ldr	r2, [r3, #24]
90008a1e:	f042 0201 	orr.w	r2, r2, #1
90008a22:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008a24:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008a26:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008a28:	4c37      	ldr	r4, [pc, #220]	@ (90008b08 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008a2a:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008a2c:	4022      	ands	r2, r4
90008a2e:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008a30:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
90008a34:	ea43 030c 	orr.w	r3, r3, ip
90008a38:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008a3c:	f888 0041 	strb.w	r0, [r8, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008a40:	f888 1042 	strb.w	r1, [r8, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008a44:	2300      	movs	r3, #0
      return HAL_ERROR;
90008a46:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008a48:	f888 3040 	strb.w	r3, [r8, #64]	@ 0x40
}
90008a4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008a50:	699a      	ldr	r2, [r3, #24]
90008a52:	0692      	lsls	r2, r2, #26
90008a54:	d4be      	bmi.n	900089d4 <I2C_WaitOnTXISFlagUntilTimeout+0x34>
90008a56:	2e00      	cmp	r6, #0
90008a58:	d1bf      	bne.n	900089da <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008a5a:	f7ff fa4f 	bl	90007efc <HAL_GetTick>
90008a5e:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008a62:	f8d8 3000 	ldr.w	r3, [r8]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008a66:	4285      	cmp	r5, r0
90008a68:	d301      	bcc.n	90008a6e <I2C_WaitOnTXISFlagUntilTimeout+0xce>
90008a6a:	2d00      	cmp	r5, #0
90008a6c:	d1f0      	bne.n	90008a50 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008a6e:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008a70:	f898 2042 	ldrb.w	r2, [r8, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008a74:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008a76:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008a78:	0409      	lsls	r1, r1, #16
90008a7a:	d50c      	bpl.n	90008a96 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              (tmp1 != I2C_CR2_STOP) && \
90008a7c:	0441      	lsls	r1, r0, #17
90008a7e:	d40a      	bmi.n	90008a96 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
90008a80:	2a20      	cmp	r2, #32
90008a82:	d008      	beq.n	90008a96 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008a84:	685a      	ldr	r2, [r3, #4]
90008a86:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008a8a:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008a8c:	f7ff fa36 	bl	90007efc <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008a90:	f8d8 3000 	ldr.w	r3, [r8]
            tickstart = HAL_GetTick();
90008a94:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008a96:	699a      	ldr	r2, [r3, #24]
90008a98:	0692      	lsls	r2, r2, #26
90008a9a:	d494      	bmi.n	900089c6 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008a9c:	f7ff fa2e 	bl	90007efc <HAL_GetTick>
90008aa0:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008aa4:	f8d8 3000 	ldr.w	r3, [r8]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008aa8:	2819      	cmp	r0, #25
90008aaa:	d9f4      	bls.n	90008a96 <I2C_WaitOnTXISFlagUntilTimeout+0xf6>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008aac:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008aae:	2601      	movs	r6, #1
90008ab0:	e789      	b.n	900089c6 <I2C_WaitOnTXISFlagUntilTimeout+0x26>
  itflag = hi2c->Instance->ISR;
90008ab2:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90008ab4:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008ab6:	05d0      	lsls	r0, r2, #23
90008ab8:	d495      	bmi.n	900089e6 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008aba:	0556      	lsls	r6, r2, #21
90008abc:	d49a      	bmi.n	900089f4 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008abe:	0594      	lsls	r4, r2, #22
90008ac0:	d49f      	bmi.n	90008a02 <I2C_WaitOnTXISFlagUntilTimeout+0x62>
  if (status != HAL_OK)
90008ac2:	2900      	cmp	r1, #0
90008ac4:	d1a2      	bne.n	90008a0c <I2C_WaitOnTXISFlagUntilTimeout+0x6c>
    if (Timeout != HAL_MAX_DELAY)
90008ac6:	1c6a      	adds	r2, r5, #1
90008ac8:	f43f af71 	beq.w	900089ae <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008acc:	f7ff fa16 	bl	90007efc <HAL_GetTick>
90008ad0:	eba0 030a 	sub.w	r3, r0, sl
90008ad4:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008ad6:	f8d8 3000 	ldr.w	r3, [r8]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008ada:	d802      	bhi.n	90008ae2 <I2C_WaitOnTXISFlagUntilTimeout+0x142>
90008adc:	2d00      	cmp	r5, #0
90008ade:	f47f af65 	bne.w	900089ac <I2C_WaitOnTXISFlagUntilTimeout+0xc>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008ae2:	699a      	ldr	r2, [r3, #24]
90008ae4:	f012 0202 	ands.w	r2, r2, #2
90008ae8:	f47f af60 	bne.w	900089ac <I2C_WaitOnTXISFlagUntilTimeout+0xc>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008aec:	f8d8 3044 	ldr.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008af0:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008af2:	430b      	orrs	r3, r1
90008af4:	f8c8 3044 	str.w	r3, [r8, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008af8:	f888 1041 	strb.w	r1, [r8, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008afc:	f888 2042 	strb.w	r2, [r8, #66]	@ 0x42
          return HAL_ERROR;
90008b00:	e7a0      	b.n	90008a44 <I2C_WaitOnTXISFlagUntilTimeout+0xa4>
  return HAL_OK;
90008b02:	2000      	movs	r0, #0
}
90008b04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008b08:	fe00e800 	.word	0xfe00e800

90008b0c <I2C_WaitOnFlagUntilTimeout>:
{
90008b0c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008b10:	461c      	mov	r4, r3
90008b12:	4683      	mov	fp, r0
90008b14:	460e      	mov	r6, r1
90008b16:	4615      	mov	r5, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b18:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008b1a:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b1e:	699a      	ldr	r2, [r3, #24]
90008b20:	ea36 0202 	bics.w	r2, r6, r2
90008b24:	bf0c      	ite	eq
90008b26:	2201      	moveq	r2, #1
90008b28:	2200      	movne	r2, #0
90008b2a:	42aa      	cmp	r2, r5
90008b2c:	f040 80af 	bne.w	90008c8e <I2C_WaitOnFlagUntilTimeout+0x182>
  uint32_t itflag   = hi2c->Instance->ISR;
90008b30:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008b32:	f012 0c10 	ands.w	ip, r2, #16
90008b36:	d07d      	beq.n	90008c34 <I2C_WaitOnFlagUntilTimeout+0x128>
  uint32_t error_code = 0;
90008b38:	f04f 0900 	mov.w	r9, #0
  uint32_t tickstart = Tickstart;
90008b3c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008b40:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008b44:	464f      	mov	r7, r9
90008b46:	1c60      	adds	r0, r4, #1
90008b48:	d001      	beq.n	90008b4e <I2C_WaitOnFlagUntilTimeout+0x42>
90008b4a:	e041      	b.n	90008bd0 <I2C_WaitOnFlagUntilTimeout+0xc4>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008b4c:	b92f      	cbnz	r7, 90008b5a <I2C_WaitOnFlagUntilTimeout+0x4e>
90008b4e:	699a      	ldr	r2, [r3, #24]
90008b50:	0691      	lsls	r1, r2, #26
90008b52:	d5fb      	bpl.n	90008b4c <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90008b54:	b90f      	cbnz	r7, 90008b5a <I2C_WaitOnFlagUntilTimeout+0x4e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008b56:	2220      	movs	r2, #32
90008b58:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
90008b5a:	699a      	ldr	r2, [r3, #24]
    error_code |= HAL_I2C_ERROR_AF;
90008b5c:	f049 0c04 	orr.w	ip, r9, #4
    status = HAL_ERROR;
90008b60:	2101      	movs	r1, #1
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008b62:	05d7      	lsls	r7, r2, #23
90008b64:	d56a      	bpl.n	90008c3c <I2C_WaitOnFlagUntilTimeout+0x130>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008b66:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008b6a:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008b6c:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008b70:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008b72:	d504      	bpl.n	90008b7e <I2C_WaitOnFlagUntilTimeout+0x72>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008b74:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008b78:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008b7c:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008b7e:	0592      	lsls	r2, r2, #22
90008b80:	d504      	bpl.n	90008b8c <I2C_WaitOnFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008b82:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008b86:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008b8a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008b8c:	699a      	ldr	r2, [r3, #24]
90008b8e:	0790      	lsls	r0, r2, #30
90008b90:	d501      	bpl.n	90008b96 <I2C_WaitOnFlagUntilTimeout+0x8a>
    hi2c->Instance->TXDR = 0x00U;
90008b92:	2200      	movs	r2, #0
90008b94:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008b96:	699a      	ldr	r2, [r3, #24]
90008b98:	07d1      	lsls	r1, r2, #31
90008b9a:	d403      	bmi.n	90008ba4 <I2C_WaitOnFlagUntilTimeout+0x98>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008b9c:	699a      	ldr	r2, [r3, #24]
90008b9e:	f042 0201 	orr.w	r2, r2, #1
90008ba2:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008ba4:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008ba6:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008ba8:	4c3a      	ldr	r4, [pc, #232]	@ (90008c94 <I2C_WaitOnFlagUntilTimeout+0x188>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008baa:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008bac:	4022      	ands	r2, r4
90008bae:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008bb0:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90008bb4:	ea43 030c 	orr.w	r3, r3, ip
90008bb8:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008bbc:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008bc0:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90008bc4:	2300      	movs	r3, #0
      return HAL_ERROR;
90008bc6:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008bc8:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90008bcc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008bd0:	699a      	ldr	r2, [r3, #24]
90008bd2:	0692      	lsls	r2, r2, #26
90008bd4:	d4be      	bmi.n	90008b54 <I2C_WaitOnFlagUntilTimeout+0x48>
90008bd6:	2f00      	cmp	r7, #0
90008bd8:	d1bf      	bne.n	90008b5a <I2C_WaitOnFlagUntilTimeout+0x4e>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008bda:	f7ff f98f 	bl	90007efc <HAL_GetTick>
90008bde:	eba0 000a 	sub.w	r0, r0, sl
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008be2:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008be6:	4284      	cmp	r4, r0
90008be8:	d301      	bcc.n	90008bee <I2C_WaitOnFlagUntilTimeout+0xe2>
90008bea:	2c00      	cmp	r4, #0
90008bec:	d1f0      	bne.n	90008bd0 <I2C_WaitOnFlagUntilTimeout+0xc4>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008bee:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
90008bf0:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008bf4:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
90008bf6:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008bf8:	0400      	lsls	r0, r0, #16
90008bfa:	d50c      	bpl.n	90008c16 <I2C_WaitOnFlagUntilTimeout+0x10a>
              (tmp1 != I2C_CR2_STOP) && \
90008bfc:	0449      	lsls	r1, r1, #17
90008bfe:	d40a      	bmi.n	90008c16 <I2C_WaitOnFlagUntilTimeout+0x10a>
90008c00:	2a20      	cmp	r2, #32
90008c02:	d008      	beq.n	90008c16 <I2C_WaitOnFlagUntilTimeout+0x10a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008c04:	685a      	ldr	r2, [r3, #4]
90008c06:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008c0a:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008c0c:	f7ff f976 	bl	90007efc <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008c10:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90008c14:	4682      	mov	sl, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008c16:	699a      	ldr	r2, [r3, #24]
90008c18:	0692      	lsls	r2, r2, #26
90008c1a:	d494      	bmi.n	90008b46 <I2C_WaitOnFlagUntilTimeout+0x3a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008c1c:	f7ff f96e 	bl	90007efc <HAL_GetTick>
90008c20:	eba0 000a 	sub.w	r0, r0, sl
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008c24:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008c28:	2819      	cmp	r0, #25
90008c2a:	d9f4      	bls.n	90008c16 <I2C_WaitOnFlagUntilTimeout+0x10a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008c2c:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90008c30:	2701      	movs	r7, #1
90008c32:	e788      	b.n	90008b46 <I2C_WaitOnFlagUntilTimeout+0x3a>
  itflag = hi2c->Instance->ISR;
90008c34:	699a      	ldr	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
90008c36:	4661      	mov	r1, ip
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008c38:	05d7      	lsls	r7, r2, #23
90008c3a:	d494      	bmi.n	90008b66 <I2C_WaitOnFlagUntilTimeout+0x5a>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008c3c:	0550      	lsls	r0, r2, #21
90008c3e:	d499      	bmi.n	90008b74 <I2C_WaitOnFlagUntilTimeout+0x68>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008c40:	0597      	lsls	r7, r2, #22
90008c42:	d49e      	bmi.n	90008b82 <I2C_WaitOnFlagUntilTimeout+0x76>
  if (status != HAL_OK)
90008c44:	2900      	cmp	r1, #0
90008c46:	d1a1      	bne.n	90008b8c <I2C_WaitOnFlagUntilTimeout+0x80>
    if (Timeout != HAL_MAX_DELAY)
90008c48:	1c62      	adds	r2, r4, #1
90008c4a:	f43f af68 	beq.w	90008b1e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c4e:	f7ff f955 	bl	90007efc <HAL_GetTick>
90008c52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90008c54:	1ac3      	subs	r3, r0, r3
90008c56:	42a3      	cmp	r3, r4
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008c58:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c5c:	d802      	bhi.n	90008c64 <I2C_WaitOnFlagUntilTimeout+0x158>
90008c5e:	2c00      	cmp	r4, #0
90008c60:	f47f af5d 	bne.w	90008b1e <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008c64:	699a      	ldr	r2, [r3, #24]
90008c66:	ea36 0202 	bics.w	r2, r6, r2
90008c6a:	bf0c      	ite	eq
90008c6c:	2201      	moveq	r2, #1
90008c6e:	2200      	movne	r2, #0
90008c70:	42aa      	cmp	r2, r5
90008c72:	f47f af54 	bne.w	90008b1e <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008c76:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008c7a:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008c7c:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008c7e:	430b      	orrs	r3, r1
90008c80:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008c84:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008c88:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
90008c8c:	e79a      	b.n	90008bc4 <I2C_WaitOnFlagUntilTimeout+0xb8>
  return HAL_OK;
90008c8e:	2000      	movs	r0, #0
}
90008c90:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008c94:	fe00e800 	.word	0xfe00e800

90008c98 <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008c98:	6803      	ldr	r3, [r0, #0]
{
90008c9a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008c9e:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008ca0:	699a      	ldr	r2, [r3, #24]
90008ca2:	0694      	lsls	r4, r2, #26
90008ca4:	f100 8092 	bmi.w	90008dcc <I2C_WaitOnSTOPFlagUntilTimeout+0x134>
90008ca8:	4605      	mov	r5, r0
90008caa:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008cac:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008cb0:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008cb2:	f012 0c10 	ands.w	ip, r2, #16
90008cb6:	f000 808c 	beq.w	90008dd2 <I2C_WaitOnSTOPFlagUntilTimeout+0x13a>
  uint32_t error_code = 0;
90008cba:	2400      	movs	r4, #0
  uint32_t tickstart = Tickstart;
90008cbc:	46b9      	mov	r9, r7
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008cbe:	f8c3 801c 	str.w	r8, [r3, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008cc2:	46a2      	mov	sl, r4
90008cc4:	1c70      	adds	r0, r6, #1
90008cc6:	d003      	beq.n	90008cd0 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90008cc8:	e043      	b.n	90008d52 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008cca:	f1ba 0f00 	cmp.w	sl, #0
90008cce:	d107      	bne.n	90008ce0 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90008cd0:	699a      	ldr	r2, [r3, #24]
90008cd2:	0691      	lsls	r1, r2, #26
90008cd4:	d5f9      	bpl.n	90008cca <I2C_WaitOnSTOPFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90008cd6:	f1ba 0f00 	cmp.w	sl, #0
90008cda:	d101      	bne.n	90008ce0 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008cdc:	2220      	movs	r2, #32
90008cde:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008ce0:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90008ce4:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90008ce6:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008ce8:	05d0      	lsls	r0, r2, #23
90008cea:	d55a      	bpl.n	90008da2 <I2C_WaitOnSTOPFlagUntilTimeout+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008cec:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008cf0:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008cf2:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008cf6:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008cf8:	d504      	bpl.n	90008d04 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008cfa:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008cfe:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008d02:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008d04:	0596      	lsls	r6, r2, #22
90008d06:	d504      	bpl.n	90008d12 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008d08:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008d0c:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008d10:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008d12:	699a      	ldr	r2, [r3, #24]
90008d14:	0790      	lsls	r0, r2, #30
90008d16:	d501      	bpl.n	90008d1c <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
90008d18:	2200      	movs	r2, #0
90008d1a:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008d1c:	699a      	ldr	r2, [r3, #24]
90008d1e:	07d1      	lsls	r1, r2, #31
90008d20:	d403      	bmi.n	90008d2a <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008d22:	699a      	ldr	r2, [r3, #24]
90008d24:	f042 0201 	orr.w	r2, r2, #1
90008d28:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008d2a:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008d2c:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90008d2e:	4c33      	ldr	r4, [pc, #204]	@ (90008dfc <I2C_WaitOnSTOPFlagUntilTimeout+0x164>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008d30:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008d32:	4022      	ands	r2, r4
90008d34:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008d36:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90008d38:	ea43 030c 	orr.w	r3, r3, ip
90008d3c:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008d3e:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008d42:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90008d46:	2300      	movs	r3, #0
      return HAL_ERROR;
90008d48:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90008d4a:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90008d4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008d52:	699a      	ldr	r2, [r3, #24]
90008d54:	0692      	lsls	r2, r2, #26
90008d56:	d4be      	bmi.n	90008cd6 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
90008d58:	f1ba 0f00 	cmp.w	sl, #0
90008d5c:	d1c0      	bne.n	90008ce0 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008d5e:	f7ff f8cd 	bl	90007efc <HAL_GetTick>
90008d62:	eba0 0009 	sub.w	r0, r0, r9
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008d66:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008d68:	4286      	cmp	r6, r0
90008d6a:	d301      	bcc.n	90008d70 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
90008d6c:	2e00      	cmp	r6, #0
90008d6e:	d1f0      	bne.n	90008d52 <I2C_WaitOnSTOPFlagUntilTimeout+0xba>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008d70:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008d72:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008d76:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008d78:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008d7a:	0409      	lsls	r1, r1, #16
90008d7c:	d503      	bpl.n	90008d86 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              (tmp1 != I2C_CR2_STOP) && \
90008d7e:	0441      	lsls	r1, r0, #17
90008d80:	d401      	bmi.n	90008d86 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008d82:	2a20      	cmp	r2, #32
90008d84:	d130      	bne.n	90008de8 <I2C_WaitOnSTOPFlagUntilTimeout+0x150>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008d86:	699a      	ldr	r2, [r3, #24]
90008d88:	0692      	lsls	r2, r2, #26
90008d8a:	d49b      	bmi.n	90008cc4 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008d8c:	f7ff f8b6 	bl	90007efc <HAL_GetTick>
90008d90:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008d94:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008d96:	2819      	cmp	r0, #25
90008d98:	d9f5      	bls.n	90008d86 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008d9a:	2420      	movs	r4, #32
              status = HAL_ERROR;
90008d9c:	f04f 0a01 	mov.w	sl, #1
90008da0:	e790      	b.n	90008cc4 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008da2:	0550      	lsls	r0, r2, #21
90008da4:	d4a9      	bmi.n	90008cfa <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008da6:	0594      	lsls	r4, r2, #22
90008da8:	d4ae      	bmi.n	90008d08 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
90008daa:	2900      	cmp	r1, #0
90008dac:	d1b1      	bne.n	90008d12 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008dae:	f7ff f8a5 	bl	90007efc <HAL_GetTick>
90008db2:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008db4:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008db6:	42b0      	cmp	r0, r6
90008db8:	d800      	bhi.n	90008dbc <I2C_WaitOnSTOPFlagUntilTimeout+0x124>
90008dba:	b91e      	cbnz	r6, 90008dc4 <I2C_WaitOnSTOPFlagUntilTimeout+0x12c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008dbc:	699a      	ldr	r2, [r3, #24]
90008dbe:	f012 0220 	ands.w	r2, r2, #32
90008dc2:	d008      	beq.n	90008dd6 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008dc4:	699a      	ldr	r2, [r3, #24]
90008dc6:	0692      	lsls	r2, r2, #26
90008dc8:	f57f af72 	bpl.w	90008cb0 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
90008dcc:	2000      	movs	r0, #0
}
90008dce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008dd2:	4661      	mov	r1, ip
90008dd4:	e787      	b.n	90008ce6 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008dd6:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008dd8:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008dda:	430b      	orrs	r3, r1
90008ddc:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90008dde:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90008de2:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90008de6:	e7ae      	b.n	90008d46 <I2C_WaitOnSTOPFlagUntilTimeout+0xae>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90008de8:	685a      	ldr	r2, [r3, #4]
90008dea:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008dee:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008df0:	f7ff f884 	bl	90007efc <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008df4:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90008df6:	4681      	mov	r9, r0
90008df8:	e7c5      	b.n	90008d86 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90008dfa:	bf00      	nop
90008dfc:	fe00e800 	.word	0xfe00e800

90008e00 <HAL_I2C_MspInit>:
}
90008e00:	4770      	bx	lr
90008e02:	bf00      	nop

90008e04 <HAL_I2C_Init>:
  if (hi2c == NULL)
90008e04:	2800      	cmp	r0, #0
90008e06:	d053      	beq.n	90008eb0 <HAL_I2C_Init+0xac>
{
90008e08:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90008e0a:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90008e0e:	4604      	mov	r4, r0
90008e10:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008e14:	2b00      	cmp	r3, #0
90008e16:	d046      	beq.n	90008ea6 <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90008e18:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008e1a:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008e1c:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008e1e:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90008e22:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008e24:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008e28:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90008e2a:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008e2e:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90008e30:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008e32:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008e34:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008e36:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90008e38:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90008e3c:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008e3e:	d009      	beq.n	90008e54 <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008e40:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008e44:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008e46:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008e48:	d107      	bne.n	90008e5a <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008e4a:	685a      	ldr	r2, [r3, #4]
90008e4c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90008e50:	605a      	str	r2, [r3, #4]
90008e52:	e006      	b.n	90008e62 <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008e54:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008e58:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008e5a:	685a      	ldr	r2, [r3, #4]
90008e5c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008e60:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008e62:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
90008e64:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008e68:	4912      	ldr	r1, [pc, #72]	@ (90008eb4 <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008e6a:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008e6c:	4301      	orrs	r1, r0
90008e6e:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90008e70:	68d9      	ldr	r1, [r3, #12]
90008e72:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
90008e76:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90008e78:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008e7c:	4302      	orrs	r2, r0
90008e7e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008e82:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008e86:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008e88:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008e8a:	4301      	orrs	r1, r0
  return HAL_OK;
90008e8c:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008e8e:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90008e90:	6819      	ldr	r1, [r3, #0]
90008e92:	f041 0101 	orr.w	r1, r1, #1
90008e96:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008e98:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008e9a:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90008e9e:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008ea0:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
90008ea4:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
90008ea6:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
90008eaa:	f7ff ffa9 	bl	90008e00 <HAL_I2C_MspInit>
90008eae:	e7b3      	b.n	90008e18 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90008eb0:	2001      	movs	r0, #1
}
90008eb2:	4770      	bx	lr
90008eb4:	02008000 	.word	0x02008000

90008eb8 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90008eb8:	4770      	bx	lr
90008eba:	bf00      	nop

90008ebc <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90008ebc:	b1b0      	cbz	r0, 90008eec <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90008ebe:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008ec0:	2324      	movs	r3, #36	@ 0x24
{
90008ec2:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90008ec4:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
90008ec8:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90008eca:	6813      	ldr	r3, [r2, #0]
90008ecc:	f023 0301 	bic.w	r3, r3, #1
90008ed0:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90008ed2:	f7ff fff1 	bl	90008eb8 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008ed6:	2300      	movs	r3, #0
90008ed8:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
90008eda:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008edc:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90008ee0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90008ee4:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008ee6:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
90008eea:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90008eec:	2001      	movs	r0, #1
}
90008eee:	4770      	bx	lr

90008ef0 <HAL_I2C_Mem_Write>:
{
90008ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008ef4:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
90008ef6:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
90008efa:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
90008efc:	2820      	cmp	r0, #32
{
90008efe:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
90008f02:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
90008f04:	d11e      	bne.n	90008f44 <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
90008f06:	4698      	mov	r8, r3
90008f08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90008f0a:	b1bb      	cbz	r3, 90008f3c <HAL_I2C_Mem_Write+0x4c>
90008f0c:	f1ba 0f00 	cmp.w	sl, #0
90008f10:	d014      	beq.n	90008f3c <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
90008f12:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90008f16:	2b01      	cmp	r3, #1
90008f18:	d014      	beq.n	90008f44 <HAL_I2C_Mem_Write+0x54>
90008f1a:	2301      	movs	r3, #1
90008f1c:	460d      	mov	r5, r1
90008f1e:	4691      	mov	r9, r2
90008f20:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90008f24:	f7fe ffea 	bl	90007efc <HAL_GetTick>
90008f28:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90008f2a:	4620      	mov	r0, r4
90008f2c:	4631      	mov	r1, r6
90008f2e:	f7ff fc97 	bl	90008860 <I2C_WaitOnFlagUntilTimeout.constprop.0>
90008f32:	b158      	cbz	r0, 90008f4c <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
90008f34:	2001      	movs	r0, #1
}
90008f36:	b003      	add	sp, #12
90008f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008f3c:	f44f 7300 	mov.w	r3, #512	@ 0x200
90008f40:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
90008f42:	e7f7      	b.n	90008f34 <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
90008f44:	2002      	movs	r0, #2
}
90008f46:	b003      	add	sp, #12
90008f48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90008f4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008f4e:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90008f52:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
90008f54:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008f56:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90008f58:	4a5f      	ldr	r2, [pc, #380]	@ (900090d8 <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008f5a:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008f5e:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008f60:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008f62:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008f66:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008f68:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008f6a:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008f6e:	684b      	ldr	r3, [r1, #4]
90008f70:	4013      	ands	r3, r2
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008f72:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008f76:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008f7a:	4a58      	ldr	r2, [pc, #352]	@ (900090dc <HAL_I2C_Mem_Write+0x1ec>)
90008f7c:	ea43 030b 	orr.w	r3, r3, fp
90008f80:	431a      	orrs	r2, r3
90008f82:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008f84:	4632      	mov	r2, r6
90008f86:	4639      	mov	r1, r7
90008f88:	f7ff fd0a 	bl	900089a0 <I2C_WaitOnTXISFlagUntilTimeout>
90008f8c:	2800      	cmp	r0, #0
90008f8e:	d176      	bne.n	9000907e <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008f90:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008f94:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008f96:	d169      	bne.n	9000906c <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008f98:	fa5f f289 	uxtb.w	r2, r9
90008f9c:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90008f9e:	463b      	mov	r3, r7
90008fa0:	2200      	movs	r2, #0
90008fa2:	2180      	movs	r1, #128	@ 0x80
90008fa4:	4620      	mov	r0, r4
90008fa6:	9600      	str	r6, [sp, #0]
90008fa8:	f7ff fdb0 	bl	90008b0c <I2C_WaitOnFlagUntilTimeout>
90008fac:	2800      	cmp	r0, #0
90008fae:	d166      	bne.n	9000907e <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008fb0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008fb2:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008fb4:	b29b      	uxth	r3, r3
90008fb6:	2bff      	cmp	r3, #255	@ 0xff
90008fb8:	d965      	bls.n	90009086 <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90008fba:	6853      	ldr	r3, [r2, #4]
90008fbc:	4948      	ldr	r1, [pc, #288]	@ (900090e0 <HAL_I2C_Mem_Write+0x1f0>)
90008fbe:	400b      	ands	r3, r1
90008fc0:	4948      	ldr	r1, [pc, #288]	@ (900090e4 <HAL_I2C_Mem_Write+0x1f4>)
90008fc2:	ea43 030b 	orr.w	r3, r3, fp
90008fc6:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008fc8:	23ff      	movs	r3, #255	@ 0xff
90008fca:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008fcc:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90008fce:	e003      	b.n	90008fd8 <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
90008fd0:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90008fd2:	b29b      	uxth	r3, r3
90008fd4:	2b00      	cmp	r3, #0
90008fd6:	d069      	beq.n	900090ac <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008fd8:	4632      	mov	r2, r6
90008fda:	4639      	mov	r1, r7
90008fdc:	4620      	mov	r0, r4
90008fde:	f7ff fcdf 	bl	900089a0 <I2C_WaitOnTXISFlagUntilTimeout>
90008fe2:	4602      	mov	r2, r0
90008fe4:	2800      	cmp	r0, #0
90008fe6:	d1a5      	bne.n	90008f34 <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008fe8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008fea:	6825      	ldr	r5, [r4, #0]
90008fec:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
90008ff0:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008ff2:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
90008ff4:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90008ff8:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90008ffa:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90008ffc:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
90009000:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90009002:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
90009006:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
90009008:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000900c:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
9000900e:	b289      	uxth	r1, r1
90009010:	2b00      	cmp	r3, #0
90009012:	d1dd      	bne.n	90008fd0 <HAL_I2C_Mem_Write+0xe0>
90009014:	2900      	cmp	r1, #0
90009016:	d0db      	beq.n	90008fd0 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009018:	463b      	mov	r3, r7
9000901a:	2180      	movs	r1, #128	@ 0x80
9000901c:	4620      	mov	r0, r4
9000901e:	9600      	str	r6, [sp, #0]
90009020:	f7ff fd74 	bl	90008b0c <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009024:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009028:	2800      	cmp	r0, #0
9000902a:	d183      	bne.n	90008f34 <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000902c:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000902e:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 900090e0 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009032:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009034:	492b      	ldr	r1, [pc, #172]	@ (900090e4 <HAL_I2C_Mem_Write+0x1f4>)
90009036:	4670      	mov	r0, lr
90009038:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000903a:	4563      	cmp	r3, ip
9000903c:	d909      	bls.n	90009052 <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
9000903e:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009040:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009044:	ea03 030e 	and.w	r3, r3, lr
90009048:	ea43 030b 	orr.w	r3, r3, fp
9000904c:	4319      	orrs	r1, r3
9000904e:	6051      	str	r1, [r2, #4]
}
90009050:	e7be      	b.n	90008fd0 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
90009052:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009054:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90009056:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009058:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
9000905a:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000905c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000905e:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90009062:	430b      	orrs	r3, r1
90009064:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009068:	6053      	str	r3, [r2, #4]
}
9000906a:	e7b1      	b.n	90008fd0 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000906c:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009070:	4639      	mov	r1, r7
90009072:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009074:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009076:	4632      	mov	r2, r6
90009078:	f7ff fc92 	bl	900089a0 <I2C_WaitOnTXISFlagUntilTimeout>
9000907c:	b188      	cbz	r0, 900090a2 <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
9000907e:	2300      	movs	r3, #0
90009080:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009084:	e756      	b.n	90008f34 <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
90009086:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009088:	4815      	ldr	r0, [pc, #84]	@ (900090e0 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
9000908a:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000908c:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000908e:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009090:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009092:	4001      	ands	r1, r0
90009094:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90009098:	430b      	orrs	r3, r1
9000909a:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000909e:	6053      	str	r3, [r2, #4]
}
900090a0:	e79a      	b.n	90008fd8 <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900090a2:	fa5f f289 	uxtb.w	r2, r9
900090a6:	6823      	ldr	r3, [r4, #0]
900090a8:	629a      	str	r2, [r3, #40]	@ 0x28
900090aa:	e778      	b.n	90008f9e <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900090ac:	4632      	mov	r2, r6
900090ae:	4639      	mov	r1, r7
900090b0:	4620      	mov	r0, r4
900090b2:	f7ff fdf1 	bl	90008c98 <I2C_WaitOnSTOPFlagUntilTimeout>
900090b6:	2800      	cmp	r0, #0
900090b8:	f47f af3c 	bne.w	90008f34 <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900090bc:	6823      	ldr	r3, [r4, #0]
900090be:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900090c0:	4d09      	ldr	r5, [pc, #36]	@ (900090e8 <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900090c2:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900090c4:	685a      	ldr	r2, [r3, #4]
900090c6:	402a      	ands	r2, r5
900090c8:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900090ca:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900090ce:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900090d2:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900090d6:	e72e      	b.n	90008f36 <HAL_I2C_Mem_Write+0x46>
900090d8:	fc009800 	.word	0xfc009800
900090dc:	01002000 	.word	0x01002000
900090e0:	fc009c00 	.word	0xfc009c00
900090e4:	01ff0000 	.word	0x01ff0000
900090e8:	fe00e800 	.word	0xfe00e800

900090ec <HAL_I2C_Mem_Read>:
{
900090ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900090f0:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
900090f2:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
900090f6:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
900090f8:	2820      	cmp	r0, #32
{
900090fa:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900090fe:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90009100:	d11e      	bne.n	90009140 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
90009102:	4698      	mov	r8, r3
90009104:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90009106:	b1bb      	cbz	r3, 90009138 <HAL_I2C_Mem_Read+0x4c>
90009108:	f1ba 0f00 	cmp.w	sl, #0
9000910c:	d014      	beq.n	90009138 <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
9000910e:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
90009112:	2b01      	cmp	r3, #1
90009114:	d014      	beq.n	90009140 <HAL_I2C_Mem_Read+0x54>
90009116:	2301      	movs	r3, #1
90009118:	460d      	mov	r5, r1
9000911a:	4691      	mov	r9, r2
9000911c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
90009120:	f7fe feec 	bl	90007efc <HAL_GetTick>
90009124:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
90009126:	4620      	mov	r0, r4
90009128:	4631      	mov	r1, r6
9000912a:	f7ff fb99 	bl	90008860 <I2C_WaitOnFlagUntilTimeout.constprop.0>
9000912e:	b158      	cbz	r0, 90009148 <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
90009130:	2001      	movs	r0, #1
}
90009132:	b002      	add	sp, #8
90009134:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90009138:	f44f 7300 	mov.w	r3, #512	@ 0x200
9000913c:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
9000913e:	e7f7      	b.n	90009130 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
90009140:	2002      	movs	r0, #2
}
90009142:	b002      	add	sp, #8
90009144:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90009148:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000914a:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
9000914e:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
90009150:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009152:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
90009154:	495f      	ldr	r1, [pc, #380]	@ (900092d4 <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90009156:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000915a:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
9000915c:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000915e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90009162:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009164:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90009166:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000916a:	6853      	ldr	r3, [r2, #4]
9000916c:	400b      	ands	r3, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000916e:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90009172:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009176:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
90009178:	432b      	orrs	r3, r5
9000917a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
9000917e:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009180:	4632      	mov	r2, r6
90009182:	f7ff fc0d 	bl	900089a0 <I2C_WaitOnTXISFlagUntilTimeout>
90009186:	2800      	cmp	r0, #0
90009188:	d177      	bne.n	9000927a <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000918a:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000918e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90009190:	d16a      	bne.n	90009268 <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90009192:	fa5f f289 	uxtb.w	r2, r9
90009196:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90009198:	463b      	mov	r3, r7
9000919a:	2200      	movs	r2, #0
9000919c:	2140      	movs	r1, #64	@ 0x40
9000919e:	4620      	mov	r0, r4
900091a0:	9600      	str	r6, [sp, #0]
900091a2:	f7ff fcb3 	bl	90008b0c <I2C_WaitOnFlagUntilTimeout>
900091a6:	2800      	cmp	r0, #0
900091a8:	d167      	bne.n	9000927a <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900091aa:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900091ac:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900091ae:	b29b      	uxth	r3, r3
900091b0:	2bff      	cmp	r3, #255	@ 0xff
900091b2:	d966      	bls.n	90009282 <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
900091b4:	6853      	ldr	r3, [r2, #4]
900091b6:	4947      	ldr	r1, [pc, #284]	@ (900092d4 <HAL_I2C_Mem_Read+0x1e8>)
900091b8:	400b      	ands	r3, r1
900091ba:	4947      	ldr	r1, [pc, #284]	@ (900092d8 <HAL_I2C_Mem_Read+0x1ec>)
900091bc:	432b      	orrs	r3, r5
900091be:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900091c0:	23ff      	movs	r3, #255	@ 0xff
900091c2:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900091c4:	6051      	str	r1, [r2, #4]
}
900091c6:	e003      	b.n	900091d0 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
900091c8:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
900091ca:	b29b      	uxth	r3, r3
900091cc:	2b00      	cmp	r3, #0
900091ce:	d06b      	beq.n	900092a8 <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
900091d0:	463b      	mov	r3, r7
900091d2:	2200      	movs	r2, #0
900091d4:	2104      	movs	r1, #4
900091d6:	4620      	mov	r0, r4
900091d8:	9600      	str	r6, [sp, #0]
900091da:	f7ff fc97 	bl	90008b0c <I2C_WaitOnFlagUntilTimeout>
900091de:	2800      	cmp	r0, #0
900091e0:	d1a6      	bne.n	90009130 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
900091e2:	6821      	ldr	r1, [r4, #0]
900091e4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900091e6:	6a49      	ldr	r1, [r1, #36]	@ 0x24
900091e8:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
900091ea:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900091ee:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
900091f0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900091f2:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
900091f6:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900091f8:	3101      	adds	r1, #1
      hi2c->XferCount--;
900091fa:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
900091fe:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
90009200:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90009202:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90009206:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
90009208:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9000920a:	b289      	uxth	r1, r1
9000920c:	2b00      	cmp	r3, #0
9000920e:	d1db      	bne.n	900091c8 <HAL_I2C_Mem_Read+0xdc>
90009210:	2900      	cmp	r1, #0
90009212:	d0d9      	beq.n	900091c8 <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009214:	4602      	mov	r2, r0
90009216:	463b      	mov	r3, r7
90009218:	2180      	movs	r1, #128	@ 0x80
9000921a:	4620      	mov	r0, r4
9000921c:	9600      	str	r6, [sp, #0]
9000921e:	f7ff fc75 	bl	90008b0c <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90009222:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90009226:	2800      	cmp	r0, #0
90009228:	d182      	bne.n	90009130 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000922a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000922c:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 900092e8 <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009230:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009232:	492a      	ldr	r1, [pc, #168]	@ (900092dc <HAL_I2C_Mem_Read+0x1f0>)
90009234:	4670      	mov	r0, lr
90009236:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90009238:	4563      	cmp	r3, ip
9000923a:	d908      	bls.n	9000924e <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
9000923c:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9000923e:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90009242:	ea03 030e 	and.w	r3, r3, lr
90009246:	432b      	orrs	r3, r5
90009248:	4319      	orrs	r1, r3
9000924a:	6051      	str	r1, [r2, #4]
}
9000924c:	e7bc      	b.n	900091c8 <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
9000924e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009250:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
90009252:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009254:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90009256:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90009258:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000925a:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
9000925e:	430b      	orrs	r3, r1
90009260:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90009264:	6053      	str	r3, [r2, #4]
}
90009266:	e7af      	b.n	900091c8 <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009268:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000926c:	4639      	mov	r1, r7
9000926e:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90009270:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90009272:	4632      	mov	r2, r6
90009274:	f7ff fb94 	bl	900089a0 <I2C_WaitOnTXISFlagUntilTimeout>
90009278:	b188      	cbz	r0, 9000929e <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
9000927a:	2300      	movs	r3, #0
9000927c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90009280:	e756      	b.n	90009130 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
90009282:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90009284:	4813      	ldr	r0, [pc, #76]	@ (900092d4 <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
90009286:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90009288:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
9000928a:	8523      	strh	r3, [r4, #40]	@ 0x28
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000928c:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000928e:	4001      	ands	r1, r0
90009290:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90009294:	430b      	orrs	r3, r1
90009296:	4912      	ldr	r1, [pc, #72]	@ (900092e0 <HAL_I2C_Mem_Read+0x1f4>)
90009298:	4319      	orrs	r1, r3
9000929a:	6051      	str	r1, [r2, #4]
}
9000929c:	e798      	b.n	900091d0 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000929e:	fa5f f289 	uxtb.w	r2, r9
900092a2:	6823      	ldr	r3, [r4, #0]
900092a4:	629a      	str	r2, [r3, #40]	@ 0x28
900092a6:	e777      	b.n	90009198 <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900092a8:	4632      	mov	r2, r6
900092aa:	4639      	mov	r1, r7
900092ac:	4620      	mov	r0, r4
900092ae:	f7ff fcf3 	bl	90008c98 <I2C_WaitOnSTOPFlagUntilTimeout>
900092b2:	2800      	cmp	r0, #0
900092b4:	f47f af3c 	bne.w	90009130 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900092b8:	6823      	ldr	r3, [r4, #0]
900092ba:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900092bc:	4d09      	ldr	r5, [pc, #36]	@ (900092e4 <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900092be:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900092c0:	685a      	ldr	r2, [r3, #4]
900092c2:	402a      	ands	r2, r5
900092c4:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900092c6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900092ca:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900092ce:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
900092d2:	e72e      	b.n	90009132 <HAL_I2C_Mem_Read+0x46>
900092d4:	fc009800 	.word	0xfc009800
900092d8:	01ff2400 	.word	0x01ff2400
900092dc:	01ff0000 	.word	0x01ff0000
900092e0:	02002400 	.word	0x02002400
900092e4:	fe00e800 	.word	0xfe00e800
900092e8:	fc009c00 	.word	0xfc009c00

900092ec <HAL_I2C_GetState>:
  return hi2c->State;
900092ec:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
900092f0:	4770      	bx	lr
900092f2:	bf00      	nop

900092f4 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
900092f4:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
900092f6:	4770      	bx	lr

900092f8 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900092f8:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900092fc:	2a20      	cmp	r2, #32
900092fe:	d123      	bne.n	90009348 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90009300:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90009304:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90009308:	4603      	mov	r3, r0
9000930a:	2a01      	cmp	r2, #1
9000930c:	d01c      	beq.n	90009348 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000930e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009310:	2024      	movs	r0, #36	@ 0x24
{
90009312:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90009314:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009318:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
9000931c:	6810      	ldr	r0, [r2, #0]
9000931e:	f020 0001 	bic.w	r0, r0, #1
90009322:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90009324:	6810      	ldr	r0, [r2, #0]
90009326:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
9000932a:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
9000932c:	6810      	ldr	r0, [r2, #0]
9000932e:	4301      	orrs	r1, r0

    return HAL_OK;
90009330:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90009332:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009334:	6811      	ldr	r1, [r2, #0]
90009336:	f041 0101 	orr.w	r1, r1, #1
9000933a:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000933c:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009340:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009344:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90009348:	2002      	movs	r0, #2
}
9000934a:	4770      	bx	lr

9000934c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
9000934c:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
90009350:	2a20      	cmp	r2, #32
90009352:	d122      	bne.n	9000939a <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90009354:	4603      	mov	r3, r0
{
90009356:	b500      	push	{lr}
90009358:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
9000935c:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90009360:	2a01      	cmp	r2, #1
90009362:	d01c      	beq.n	9000939e <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90009364:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90009366:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90009368:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
9000936c:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
90009370:	6810      	ldr	r0, [r2, #0]
90009372:	f020 0001 	bic.w	r0, r0, #1
90009376:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90009378:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
9000937a:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
9000937e:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90009382:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90009384:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90009386:	6811      	ldr	r1, [r2, #0]
90009388:	f041 0101 	orr.w	r1, r1, #1
9000938c:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
9000938e:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90009392:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90009396:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
9000939a:	2002      	movs	r0, #2
}
9000939c:	4770      	bx	lr
    __HAL_LOCK(hi2c);
9000939e:	2002      	movs	r0, #2
}
900093a0:	f85d fb04 	ldr.w	pc, [sp], #4

900093a4 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
900093a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900093a8:	4699      	mov	r9, r3
900093aa:	4680      	mov	r8, r0
900093ac:	460d      	mov	r5, r1
900093ae:	4614      	mov	r4, r2

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
900093b0:	7803      	ldrb	r3, [r0, #0]
900093b2:	2601      	movs	r6, #1
  p = 0;
900093b4:	2700      	movs	r7, #0
900093b6:	e005      	b.n	900093c4 <JPEG_Bits_To_SizeCodes+0x20>
    i = (uint32_t)Bits[l];
900093b8:	f818 3f01 	ldrb.w	r3, [r8, #1]!
    if ((p + i) > 256UL)
900093bc:	19da      	adds	r2, r3, r7
900093be:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
900093c2:	d83a      	bhi.n	9000943a <JPEG_Bits_To_SizeCodes+0x96>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
900093c4:	19e8      	adds	r0, r5, r7
900093c6:	461a      	mov	r2, r3
900093c8:	4631      	mov	r1, r6
    while (i != 0UL)
900093ca:	b113      	cbz	r3, 900093d2 <JPEG_Bits_To_SizeCodes+0x2e>
      p++;
900093cc:	441f      	add	r7, r3
      Huffsize[p] = (uint8_t) l + 1U;
900093ce:	f023 f9d7 	bl	9002c780 <memset>
  for (l = 0; l < 16UL; l++)
900093d2:	2e10      	cmp	r6, #16
    if ((p + i) > 256UL)
900093d4:	f106 0601 	add.w	r6, r6, #1
  for (l = 0; l < 16UL; l++)
900093d8:	d1ee      	bne.n	900093b8 <JPEG_Bits_To_SizeCodes+0x14>
      i--;
    }
  }
  Huffsize[p] = 0;
900093da:	2300      	movs	r3, #0
900093dc:	55eb      	strb	r3, [r5, r7]
  *LastK = p;
900093de:	f8c9 7000 	str.w	r7, [r9]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
900093e2:	7829      	ldrb	r1, [r5, #0]
900093e4:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
900093e6:	b329      	cbz	r1, 90009434 <JPEG_Bits_To_SizeCodes+0x90>
  code = 0;
900093e8:	4699      	mov	r9, r3
900093ea:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
900093ee:	2701      	movs	r7, #1
  p = 0;
900093f0:	461e      	mov	r6, r3
    while (((uint32_t) Huffsize[p]) == si)
900093f2:	4291      	cmp	r1, r2
900093f4:	d124      	bne.n	90009440 <JPEG_Bits_To_SizeCodes+0x9c>
900093f6:	eb06 0008 	add.w	r0, r6, r8
900093fa:	eb05 0c06 	add.w	ip, r5, r6
900093fe:	464b      	mov	r3, r9
90009400:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
90009404:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
90009408:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
9000940a:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
9000940e:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90009410:	4596      	cmp	lr, r2
90009412:	d0f7      	beq.n	90009404 <JPEG_Bits_To_SizeCodes+0x60>
90009414:	3601      	adds	r6, #1
90009416:	eba6 0609 	sub.w	r6, r6, r9
      p++;
9000941a:	440e      	add	r6, r1
    if(si > 31UL)
9000941c:	2a1f      	cmp	r2, #31
9000941e:	d80c      	bhi.n	9000943a <JPEG_Bits_To_SizeCodes+0x96>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90009420:	fa07 f102 	lsl.w	r1, r7, r2
90009424:	4299      	cmp	r1, r3
90009426:	d908      	bls.n	9000943a <JPEG_Bits_To_SizeCodes+0x96>
  while (Huffsize[p] != 0U)
90009428:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
9000942a:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
9000942e:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
90009430:	2900      	cmp	r1, #0
90009432:	d1de      	bne.n	900093f2 <JPEG_Bits_To_SizeCodes+0x4e>
  }
  /* Return function status */
  return HAL_OK;
90009434:	2000      	movs	r0, #0
}
90009436:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      return HAL_ERROR;
9000943a:	2001      	movs	r0, #1
}
9000943c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (((uint32_t) Huffsize[p]) == si)
90009440:	464b      	mov	r3, r9
90009442:	e7eb      	b.n	9000941c <JPEG_Bits_To_SizeCodes+0x78>

90009444 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90009444:	b5f0      	push	{r4, r5, r6, r7, lr}
90009446:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
9000944a:	460d      	mov	r5, r1
9000944c:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
9000944e:	ab01      	add	r3, sp, #4
90009450:	aa43      	add	r2, sp, #268	@ 0x10c
90009452:	a902      	add	r1, sp, #8
90009454:	f7ff ffa6 	bl	900093a4 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009458:	b9d0      	cbnz	r0, 90009490 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000945a:	9f01      	ldr	r7, [sp, #4]
9000945c:	b1c7      	cbz	r7, 90009490 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000945e:	370f      	adds	r7, #15
90009460:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90009464:	a902      	add	r1, sp, #8
90009466:	f104 0c0f 	add.w	ip, r4, #15
9000946a:	4427      	add	r7, r4
9000946c:	e009      	b.n	90009482 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000946e:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90009472:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009474:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009478:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000947c:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000947e:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90009480:	d006      	beq.n	90009490 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90009482:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90009486:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009488:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000948c:	d9ef      	bls.n	9000946e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000948e:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009490:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90009494:	bdf0      	pop	{r4, r5, r6, r7, pc}
90009496:	bf00      	nop

90009498 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90009498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000949c:	6804      	ldr	r4, [r0, #0]
{
9000949e:	b093      	sub	sp, #76	@ 0x4c
900094a0:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
900094a2:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
900094a6:	429a      	cmp	r2, r3
900094a8:	f000 809d 	beq.w	900095e6 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
900094ac:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
900094b0:	429a      	cmp	r2, r3
900094b2:	d003      	beq.n	900094bc <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
900094b4:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900094b6:	b013      	add	sp, #76	@ 0x4c
900094b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900094bc:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
900094c0:	a903      	add	r1, sp, #12
900094c2:	f7ff ffbf 	bl	90009444 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
900094c6:	2800      	cmp	r0, #0
900094c8:	d1f5      	bne.n	900094b6 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
900094ca:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900094ce:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900094d2:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
900094d6:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900094d8:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
900094dc:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900094de:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
900094e2:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900094e6:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
900094ea:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900094ee:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
900094f2:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900094f4:	f89d 9015 	ldrb.w	r9, [sp, #21]
900094f8:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900094fc:	f89d c014 	ldrb.w	ip, [sp, #20]
90009500:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009504:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009508:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000950c:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009510:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009512:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009516:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
9000951a:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
9000951e:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009522:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009526:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000952a:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000952e:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009532:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009534:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009538:	f89d 2010 	ldrb.w	r2, [sp, #16]
9000953c:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009540:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90009542:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009546:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009548:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
9000954c:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009550:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009554:	f89d 600f 	ldrb.w	r6, [sp, #15]
90009558:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000955c:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009560:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009562:	9b01      	ldr	r3, [sp, #4]
90009564:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009568:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000956c:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009570:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90009574:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009578:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000957a:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000957e:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009582:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90009586:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000958a:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000958e:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009592:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90009596:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000959a:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000959e:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095a2:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
900095a6:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095a8:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
900095ac:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
900095ae:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
900095b2:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095b6:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
900095ba:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095bc:	f89d 2020 	ldrb.w	r2, [sp, #32]
900095c0:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
900095c2:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
900095c6:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095ca:	f89d 301c 	ldrb.w	r3, [sp, #28]
900095ce:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900095d0:	f89d 3018 	ldrb.w	r3, [sp, #24]
900095d4:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
900095d8:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
900095dc:	f844 3c18 	str.w	r3, [r4, #-24]
}
900095e0:	b013      	add	sp, #76	@ 0x4c
900095e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
900095e6:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
900095ea:	e769      	b.n	900094c0 <JPEG_Set_HuffDC_Mem+0x28>

900095ec <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
900095ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900095f0:	6804      	ldr	r4, [r0, #0]
{
900095f2:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
900095f6:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900095f8:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
900095fc:	429a      	cmp	r2, r3
900095fe:	d041      	beq.n	90009684 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90009600:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
90009604:	429a      	cmp	r2, r3
90009606:	d004      	beq.n	90009612 <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90009608:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
9000960a:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
9000960e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009612:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009616:	4628      	mov	r0, r5
90009618:	466b      	mov	r3, sp
9000961a:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
9000961e:	a901      	add	r1, sp, #4
90009620:	f7ff fec0 	bl	900093a4 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009624:	2800      	cmp	r0, #0
90009626:	d1f0      	bne.n	9000960a <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90009628:	9b00      	ldr	r3, [sp, #0]
9000962a:	b373      	cbz	r3, 9000968a <JPEG_Set_HuffAC_Mem+0x9e>
9000962c:	330f      	adds	r3, #15
9000962e:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
90009632:	af01      	add	r7, sp, #4
90009634:	f105 020f 	add.w	r2, r5, #15
90009638:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000963c:	ae42      	add	r6, sp, #264	@ 0x108
9000963e:	e011      	b.n	90009664 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
90009640:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90009644:	2ba1      	cmp	r3, #161	@ 0xa1
90009646:	d8df      	bhi.n	90009608 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009648:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000964c:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90009650:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90009654:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009656:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000965a:	46b1      	mov	r9, r6
9000965c:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009660:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90009662:	d014      	beq.n	9000968e <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90009664:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90009668:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
9000966a:	2900      	cmp	r1, #0
9000966c:	d0ec      	beq.n	90009648 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
9000966e:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90009670:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009674:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
90009676:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000967a:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000967e:	d1df      	bne.n	90009640 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
90009680:	23a1      	movs	r3, #161	@ 0xa1
90009682:	e7e1      	b.n	90009648 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90009684:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90009688:	e7c5      	b.n	90009616 <JPEG_Set_HuffAC_Mem+0x2a>
9000968a:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
9000968e:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
90009692:	4a1a      	ldr	r2, [pc, #104]	@ (900096fc <JPEG_Set_HuffAC_Mem+0x110>)
90009694:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90009698:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
9000969a:	6023      	str	r3, [r4, #0]
9000969c:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
900096a0:	6063      	str	r3, [r4, #4]
900096a2:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
900096a6:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
900096a8:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
900096ac:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
900096ae:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
900096b2:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
900096b6:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
900096b8:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900096bc:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
900096be:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
900096c2:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096c4:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096c8:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096cc:	0212      	lsls	r2, r2, #8
900096ce:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096d2:	021b      	lsls	r3, r3, #8
900096d4:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096d8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
900096dc:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096de:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096e2:	433a      	orrs	r2, r7
    while (i > 1UL)
900096e4:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900096e6:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
900096ea:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900096ee:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
900096f2:	d1e7      	bne.n	900096c4 <JPEG_Set_HuffAC_Mem+0xd8>
}
900096f4:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
900096f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900096fc:	0fd10fd0 	.word	0x0fd10fd0

90009700 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009700:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009702:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
90009704:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
90009708:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000970a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000970c:	f002 0203 	and.w	r2, r2, #3
90009710:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
90009712:	685a      	ldr	r2, [r3, #4]
90009714:	bf0c      	ite	eq
90009716:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
9000971a:	f022 0208 	bicne.w	r2, r2, #8
9000971e:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009720:	681a      	ldr	r2, [r3, #0]
90009722:	f022 0201 	bic.w	r2, r2, #1
90009726:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009728:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000972a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000972e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009730:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009732:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009736:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009738:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000973a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
9000973e:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009740:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009742:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009746:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
90009748:	681a      	ldr	r2, [r3, #0]
9000974a:	f042 0201 	orr.w	r2, r2, #1
9000974e:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009750:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90009752:	f002 020c 	and.w	r2, r2, #12
90009756:	2a08      	cmp	r2, #8
90009758:	d00a      	beq.n	90009770 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000975a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000975c:	f002 020c 	and.w	r2, r2, #12
90009760:	2a0c      	cmp	r2, #12
90009762:	d000      	beq.n	90009766 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90009764:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009766:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009768:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000976c:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000976e:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90009770:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009772:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
90009776:	631a      	str	r2, [r3, #48]	@ 0x30
90009778:	4770      	bx	lr
9000977a:	bf00      	nop

9000977c <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000977c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000977e:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
90009780:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009782:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
90009784:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009786:	42aa      	cmp	r2, r5
90009788:	d32a      	bcc.n	900097e0 <JPEG_DMA_StartProcess+0x64>
9000978a:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000978c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000978e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009790:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009792:	42b3      	cmp	r3, r6
90009794:	d324      	bcc.n	900097e0 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009796:	4f19      	ldr	r7, [pc, #100]	@ (900097fc <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009798:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 90009808 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000979c:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000979e:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
900097a2:	4917      	ldr	r1, [pc, #92]	@ (90009800 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
900097a4:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
900097a6:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
900097a8:	4916      	ldr	r1, [pc, #88]	@ (90009804 <JPEG_DMA_StartProcess+0x88>)
900097aa:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
900097ac:	b1a5      	cbz	r5, 900097d8 <JPEG_DMA_StartProcess+0x5c>
900097ae:	b19e      	cbz	r6, 900097d8 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900097b0:	fbb2 f1f5 	udiv	r1, r2, r5
900097b4:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900097b8:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900097ba:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900097bc:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900097be:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900097c0:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
900097c2:	fbb3 f2f6 	udiv	r2, r3, r6
900097c6:	fb06 3212 	mls	r2, r6, r2, r3
900097ca:	1a9b      	subs	r3, r3, r2
900097cc:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900097ce:	9500      	str	r5, [sp, #0]
900097d0:	69e2      	ldr	r2, [r4, #28]
900097d2:	f001 fc23 	bl	9000b01c <HAL_MDMA_Start_IT>
900097d6:	b130      	cbz	r0, 900097e6 <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900097d8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900097da:	f043 0304 	orr.w	r3, r3, #4
900097de:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
900097e0:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
900097e2:	b003      	add	sp, #12
900097e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900097e6:	6822      	ldr	r2, [r4, #0]
900097e8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
900097ea:	69a1      	ldr	r1, [r4, #24]
900097ec:	3240      	adds	r2, #64	@ 0x40
900097ee:	9500      	str	r5, [sp, #0]
900097f0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900097f2:	f001 fc13 	bl	9000b01c <HAL_MDMA_Start_IT>
900097f6:	2800      	cmp	r0, #0
900097f8:	d0f3      	beq.n	900097e2 <JPEG_DMA_StartProcess+0x66>
900097fa:	e7ed      	b.n	900097d8 <JPEG_DMA_StartProcess+0x5c>
900097fc:	90009de9 	.word	0x90009de9
90009800:	9000a05d 	.word	0x9000a05d
90009804:	9000a0dd 	.word	0x9000a0dd
90009808:	90009e15 	.word	0x90009e15

9000980c <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000980c:	6803      	ldr	r3, [r0, #0]
9000980e:	685a      	ldr	r2, [r3, #4]
90009810:	f002 0203 	and.w	r2, r2, #3
90009814:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
90009816:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000981a:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
9000981c:	d018      	beq.n	90009850 <HAL_JPEG_GetInfo.part.0+0x44>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
9000981e:	685a      	ldr	r2, [r3, #4]
90009820:	f012 0203 	ands.w	r2, r2, #3
90009824:	d10b      	bne.n	9000983e <HAL_JPEG_GetInfo.part.0+0x32>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009826:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009828:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000982c:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000982e:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009830:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009832:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009836:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000983a:	2100      	movs	r1, #0
9000983c:	e02f      	b.n	9000989e <HAL_JPEG_GetInfo.part.0+0x92>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
9000983e:	685a      	ldr	r2, [r3, #4]
90009840:	f002 0203 	and.w	r2, r2, #3
90009844:	2a03      	cmp	r2, #3
90009846:	f000 8097 	beq.w	90009978 <HAL_JPEG_GetInfo.part.0+0x16c>
    return HAL_ERROR;
9000984a:	2001      	movs	r0, #1
}
9000984c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009850:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009852:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009854:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009858:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000985a:	68d9      	ldr	r1, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000985c:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009860:	0c09      	lsrs	r1, r1, #16
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009862:	691a      	ldr	r2, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009864:	695c      	ldr	r4, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009866:	f8c9 100c 	str.w	r1, [r9, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000986a:	0916      	lsrs	r6, r2, #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000986c:	6999      	ldr	r1, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000986e:	f014 0ff0 	tst.w	r4, #240	@ 0xf0
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009872:	f3c2 1203 	ubfx	r2, r2, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009876:	ea4f 1714 	mov.w	r7, r4, lsr #4
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000987a:	ea4f 1111 	mov.w	r1, r1, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000987e:	d105      	bne.n	9000988c <HAL_JPEG_GetInfo.part.0+0x80>
90009880:	2a01      	cmp	r2, #1
90009882:	d103      	bne.n	9000988c <HAL_JPEG_GetInfo.part.0+0x80>
90009884:	070d      	lsls	r5, r1, #28
90009886:	d1d8      	bne.n	9000983a <HAL_JPEG_GetInfo.part.0+0x2e>
90009888:	2102      	movs	r1, #2
9000988a:	e008      	b.n	9000989e <HAL_JPEG_GetInfo.part.0+0x92>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000988c:	433e      	orrs	r6, r7
9000988e:	0734      	lsls	r4, r6, #28
90009890:	d0d3      	beq.n	9000983a <HAL_JPEG_GetInfo.part.0+0x2e>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009892:	430f      	orrs	r7, r1
90009894:	0739      	lsls	r1, r7, #28
90009896:	d1d0      	bne.n	9000983a <HAL_JPEG_GetInfo.part.0+0x2e>
90009898:	2a03      	cmp	r2, #3
9000989a:	d1ce      	bne.n	9000983a <HAL_JPEG_GetInfo.part.0+0x2e>
9000989c:	2101      	movs	r1, #1
9000989e:	4a42      	ldr	r2, [pc, #264]	@ (900099a8 <HAL_JPEG_GetInfo.part.0+0x19c>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
900098a0:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
900098a4:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
900098a8:	2600      	movs	r6, #0
900098aa:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900098ae:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
900098b2:	f241 3188 	movw	r1, #5000	@ 0x1388
900098b6:	e033      	b.n	90009920 <HAL_JPEG_GetInfo.part.0+0x114>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900098b8:	f892 8001 	ldrb.w	r8, [r2, #1]
900098bc:	fb0e f707 	mul.w	r7, lr, r7
900098c0:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
900098c2:	f815 8008 	ldrb.w	r8, [r5, r8]
900098c6:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900098ca:	2f64      	cmp	r7, #100	@ 0x64
900098cc:	d958      	bls.n	90009980 <HAL_JPEG_GetInfo.part.0+0x174>
          quality += 5000UL / scale;
900098ce:	fbb1 f7f7 	udiv	r7, r1, r7
900098d2:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900098d4:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
900098d8:	2f01      	cmp	r7, #1
900098da:	d03d      	beq.n	90009958 <HAL_JPEG_GetInfo.part.0+0x14c>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900098dc:	f892 8002 	ldrb.w	r8, [r2, #2]
900098e0:	fb0e f707 	mul.w	r7, lr, r7
900098e4:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
900098e6:	f815 8008 	ldrb.w	r8, [r5, r8]
900098ea:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900098ee:	2f64      	cmp	r7, #100	@ 0x64
900098f0:	d955      	bls.n	9000999e <HAL_JPEG_GetInfo.part.0+0x192>
          quality += 5000UL / scale;
900098f2:	fbb1 f7f7 	udiv	r7, r1, r7
900098f6:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900098f8:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
900098fa:	2b01      	cmp	r3, #1
900098fc:	d030      	beq.n	90009960 <HAL_JPEG_GetInfo.part.0+0x154>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900098fe:	78d7      	ldrb	r7, [r2, #3]
90009900:	fb0e f303 	mul.w	r3, lr, r3
90009904:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009906:	5def      	ldrb	r7, [r5, r7]
90009908:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
9000990c:	2b64      	cmp	r3, #100	@ 0x64
9000990e:	d93c      	bls.n	9000998a <HAL_JPEG_GetInfo.part.0+0x17e>
          quality += 5000UL / scale;
90009910:	fbb1 f3f3 	udiv	r3, r1, r3
90009914:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009916:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90009918:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000991c:	4294      	cmp	r4, r2
9000991e:	d025      	beq.n	9000996c <HAL_JPEG_GetInfo.part.0+0x160>
    quantRow = *tableAddress;
90009920:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009924:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90009926:	2f01      	cmp	r7, #1
90009928:	d028      	beq.n	9000997c <HAL_JPEG_GetInfo.part.0+0x170>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000992a:	f892 8000 	ldrb.w	r8, [r2]
9000992e:	fb0e f707 	mul.w	r7, lr, r7
90009932:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90009934:	f815 8008 	ldrb.w	r8, [r5, r8]
90009938:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000993c:	2f64      	cmp	r7, #100	@ 0x64
9000993e:	d929      	bls.n	90009994 <HAL_JPEG_GetInfo.part.0+0x188>
          quality += 5000UL / scale;
90009940:	fbb1 f7f7 	udiv	r7, r1, r7
90009944:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009946:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
9000994a:	2f01      	cmp	r7, #1
9000994c:	d1b4      	bne.n	900098b8 <HAL_JPEG_GetInfo.part.0+0xac>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000994e:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90009952:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90009954:	2f01      	cmp	r7, #1
90009956:	d1c1      	bne.n	900098dc <HAL_JPEG_GetInfo.part.0+0xd0>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009958:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
9000995a:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
9000995c:	2b01      	cmp	r3, #1
9000995e:	d1ce      	bne.n	900098fe <HAL_JPEG_GetInfo.part.0+0xf2>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009960:	3204      	adds	r2, #4
        quality += 100UL;
90009962:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
90009964:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009968:	4294      	cmp	r4, r2
9000996a:	d1d9      	bne.n	90009920 <HAL_JPEG_GetInfo.part.0+0x114>
  }

  return (quality / 64UL);
9000996c:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000996e:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90009970:	f8c9 6010 	str.w	r6, [r9, #16]
}
90009974:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009978:	2130      	movs	r1, #48	@ 0x30
9000997a:	e76a      	b.n	90009852 <HAL_JPEG_GetInfo.part.0+0x46>
        quality += 100UL;
9000997c:	3664      	adds	r6, #100	@ 0x64
9000997e:	e7e2      	b.n	90009946 <HAL_JPEG_GetInfo.part.0+0x13a>
          quality += (200UL - scale) / 2UL;
90009980:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009984:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009988:	e7a4      	b.n	900098d4 <HAL_JPEG_GetInfo.part.0+0xc8>
9000998a:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
9000998e:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90009992:	e7c0      	b.n	90009916 <HAL_JPEG_GetInfo.part.0+0x10a>
90009994:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90009998:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000999c:	e7d3      	b.n	90009946 <HAL_JPEG_GetInfo.part.0+0x13a>
9000999e:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
900099a2:	eb06 0657 	add.w	r6, r6, r7, lsr #1
900099a6:	e7a7      	b.n	900098f8 <HAL_JPEG_GetInfo.part.0+0xec>
900099a8:	9002fd68 	.word	0x9002fd68

900099ac <HAL_JPEG_Init>:
  if (hjpeg == NULL)
900099ac:	2800      	cmp	r0, #0
900099ae:	f000 8107 	beq.w	90009bc0 <HAL_JPEG_Init+0x214>
{
900099b2:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
900099b4:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
900099b8:	4605      	mov	r5, r0
900099ba:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900099be:	2b00      	cmp	r3, #0
900099c0:	f000 80f9 	beq.w	90009bb6 <HAL_JPEG_Init+0x20a>
  __HAL_JPEG_ENABLE(hjpeg);
900099c4:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900099c6:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
900099c8:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900099ca:	497e      	ldr	r1, [pc, #504]	@ (90009bc4 <HAL_JPEG_Init+0x218>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900099cc:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
900099d0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900099d2:	f042 0201 	orr.w	r2, r2, #1
900099d6:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900099d8:	6822      	ldr	r2, [r4, #0]
900099da:	f022 0201 	bic.w	r2, r2, #1
900099de:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900099e0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900099e2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900099e6:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900099e8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900099ea:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
900099ee:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900099f0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900099f2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900099f6:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900099f8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
900099fa:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900099fe:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009a00:	4a71      	ldr	r2, [pc, #452]	@ (90009bc8 <HAL_JPEG_Init+0x21c>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90009a02:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a04:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
90009a06:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009a08:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a0c:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90009a10:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
90009a14:	4b6d      	ldr	r3, [pc, #436]	@ (90009bcc <HAL_JPEG_Init+0x220>)
90009a16:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90009a1a:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009a1e:	496c      	ldr	r1, [pc, #432]	@ (90009bd0 <HAL_JPEG_Init+0x224>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a20:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009a24:	4b6b      	ldr	r3, [pc, #428]	@ (90009bd4 <HAL_JPEG_Init+0x228>)
90009a26:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90009a2a:	4a6b      	ldr	r2, [pc, #428]	@ (90009bd8 <HAL_JPEG_Init+0x22c>)
90009a2c:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a30:	4b6a      	ldr	r3, [pc, #424]	@ (90009bdc <HAL_JPEG_Init+0x230>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009a32:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009a36:	496a      	ldr	r1, [pc, #424]	@ (90009be0 <HAL_JPEG_Init+0x234>)
90009a38:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90009a3c:	4a69      	ldr	r2, [pc, #420]	@ (90009be4 <HAL_JPEG_Init+0x238>)
90009a3e:	4b6a      	ldr	r3, [pc, #424]	@ (90009be8 <HAL_JPEG_Init+0x23c>)
90009a40:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
90009a44:	f8c4 2380 	str.w	r2, [r4, #896]	@ 0x380
90009a48:	f8c4 337c 	str.w	r3, [r4, #892]	@ 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009a4c:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
  value = *address & 0xFFFF0000U;
90009a50:	f8d4 142c 	ldr.w	r1, [r4, #1068]	@ 0x42c
90009a54:	4a65      	ldr	r2, [pc, #404]	@ (90009bec <HAL_JPEG_Init+0x240>)
90009a56:	400a      	ands	r2, r1
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90009a58:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009a5c:	4313      	orrs	r3, r2
  *address = value;
90009a5e:	4a64      	ldr	r2, [pc, #400]	@ (90009bf0 <HAL_JPEG_Init+0x244>)
90009a60:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
90009a64:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009a68:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90009a6c:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009a6e:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009a72:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90009a74:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009a78:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90009a7c:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009a7e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009a82:	ea43 030c 	orr.w	r3, r3, ip
90009a86:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009a8a:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009a8e:	d1eb      	bne.n	90009a68 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
90009a90:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009a94:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90009a98:	4954      	ldr	r1, [pc, #336]	@ (90009bec <HAL_JPEG_Init+0x240>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009a9a:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90009a9c:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90009a9e:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
90009aa2:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
90009aa6:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90009aaa:	400b      	ands	r3, r1
  *address = value;
90009aac:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009ab0:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
90009ab4:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
90009ab8:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009abc:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
90009ac0:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90009ac4:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90009ac6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009aca:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
90009ace:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009ad2:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009ad4:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009ad6:	4b47      	ldr	r3, [pc, #284]	@ (90009bf4 <HAL_JPEG_Init+0x248>)
  *address = value;
90009ad8:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009adc:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009ae0:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
90009ae4:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90009ae8:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90009aec:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90009af0:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
90009af2:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
90009af6:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90009afa:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90009afe:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009b00:	493d      	ldr	r1, [pc, #244]	@ (90009bf8 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009b02:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009b04:	4b3d      	ldr	r3, [pc, #244]	@ (90009bfc <HAL_JPEG_Init+0x250>)
  *address = value;
90009b06:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009b0a:	4a3d      	ldr	r2, [pc, #244]	@ (90009c00 <HAL_JPEG_Init+0x254>)
90009b0c:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90009b10:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009b14:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90009b18:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90009b1c:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009b20:	4a38      	ldr	r2, [pc, #224]	@ (90009c04 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90009b22:	b29b      	uxth	r3, r3
90009b24:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009b28:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90009b2c:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009b30:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90009b34:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009b36:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009b3a:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90009b3c:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009b40:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90009b44:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009b46:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90009b4a:	ea43 030c 	orr.w	r3, r3, ip
90009b4e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009b52:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90009b56:	d1eb      	bne.n	90009b30 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90009b58:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90009b5c:	4924      	ldr	r1, [pc, #144]	@ (90009bf0 <HAL_JPEG_Init+0x244>)
90009b5e:	4628      	mov	r0, r5
90009b60:	f7ff fd44 	bl	900095ec <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009b64:	b118      	cbz	r0, 90009b6e <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009b66:	2301      	movs	r3, #1
    return HAL_ERROR;
90009b68:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009b6a:	652b      	str	r3, [r5, #80]	@ 0x50
}
90009b6c:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90009b6e:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90009b72:	4924      	ldr	r1, [pc, #144]	@ (90009c04 <HAL_JPEG_Init+0x258>)
90009b74:	4628      	mov	r0, r5
90009b76:	f7ff fd39 	bl	900095ec <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009b7a:	2800      	cmp	r0, #0
90009b7c:	d1f3      	bne.n	90009b66 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90009b7e:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90009b82:	4921      	ldr	r1, [pc, #132]	@ (90009c08 <HAL_JPEG_Init+0x25c>)
90009b84:	4628      	mov	r0, r5
90009b86:	f7ff fc87 	bl	90009498 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90009b8a:	2800      	cmp	r0, #0
90009b8c:	d1eb      	bne.n	90009b66 <HAL_JPEG_Init+0x1ba>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90009b8e:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90009b92:	491e      	ldr	r1, [pc, #120]	@ (90009c0c <HAL_JPEG_Init+0x260>)
90009b94:	4628      	mov	r0, r5
90009b96:	f7ff fc7f 	bl	90009498 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90009b9a:	2800      	cmp	r0, #0
90009b9c:	d1e3      	bne.n	90009b66 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009b9e:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90009ba0:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009ba2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90009ba6:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90009ba8:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90009baa:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90009bac:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90009bb0:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
90009bb2:	6568      	str	r0, [r5, #84]	@ 0x54
}
90009bb4:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
90009bb6:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90009bba:	f7fa fd05 	bl	900045c8 <HAL_JPEG_MspInit>
90009bbe:	e701      	b.n	900099c4 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90009bc0:	2001      	movs	r0, #1
}
90009bc2:	4770      	bx	lr
90009bc4:	9002fd28 	.word	0x9002fd28
90009bc8:	9002fce8 	.word	0x9002fce8
90009bcc:	01050100 	.word	0x01050100
90009bd0:	0b0a0908 	.word	0x0b0a0908
90009bd4:	07060504 	.word	0x07060504
90009bd8:	03020100 	.word	0x03020100
90009bdc:	7d010000 	.word	0x7d010000
90009be0:	04040505 	.word	0x04040505
90009be4:	03040203 	.word	0x03040203
90009be8:	03010200 	.word	0x03010200
90009bec:	ffff0000 	.word	0xffff0000
90009bf0:	9002fe5c 	.word	0x9002fe5c
90009bf4:	09080706 	.word	0x09080706
90009bf8:	01000404 	.word	0x01000404
90009bfc:	04040201 	.word	0x04040201
90009c00:	05070403 	.word	0x05070403
90009c04:	9002fda8 	.word	0x9002fda8
90009c08:	9002ff2c 	.word	0x9002ff2c
90009c0c:	9002ff10 	.word	0x9002ff10

90009c10 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009c10:	2b00      	cmp	r3, #0
90009c12:	bf18      	it	ne
90009c14:	2900      	cmpne	r1, #0
90009c16:	d036      	beq.n	90009c86 <HAL_JPEG_Decode_DMA+0x76>
{
90009c18:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009c1a:	fab0 f580 	clz	r5, r0
90009c1e:	4604      	mov	r4, r0
90009c20:	096d      	lsrs	r5, r5, #5
90009c22:	b370      	cbz	r0, 90009c82 <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90009c24:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90009c28:	f1bc 0f01 	cmp.w	ip, #1
90009c2c:	d022      	beq.n	90009c74 <HAL_JPEG_Decode_DMA+0x64>
90009c2e:	f04f 0c01 	mov.w	ip, #1
90009c32:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009c36:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90009c3a:	f1bc 0f01 	cmp.w	ip, #1
90009c3e:	d117      	bne.n	90009c70 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90009c40:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90009c42:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90009c46:	9b04      	ldr	r3, [sp, #16]
90009c48:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90009c4a:	2304      	movs	r3, #4
90009c4c:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90009c50:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c52:	f023 030f 	bic.w	r3, r3, #15
90009c56:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90009c58:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c5a:	f043 030e 	orr.w	r3, r3, #14
90009c5e:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90009c60:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90009c62:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90009c64:	f7ff fd4c 	bl	90009700 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90009c68:	f7ff fd88 	bl	9000977c <JPEG_DMA_StartProcess>
90009c6c:	b920      	cbnz	r0, 90009c78 <HAL_JPEG_Decode_DMA+0x68>
}
90009c6e:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90009c70:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90009c74:	2002      	movs	r0, #2
}
90009c76:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009c78:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90009c7a:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009c7e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90009c82:	2001      	movs	r0, #1
}
90009c84:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90009c86:	2001      	movs	r0, #1
}
90009c88:	4770      	bx	lr
90009c8a:	bf00      	nop

90009c8c <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009c8c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c8e:	f003 030c 	and.w	r3, r3, #12
90009c92:	2b0c      	cmp	r3, #12
90009c94:	d01a      	beq.n	90009ccc <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009c96:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009c98:	f003 030c 	and.w	r3, r3, #12
90009c9c:	2b08      	cmp	r3, #8
90009c9e:	d001      	beq.n	90009ca4 <HAL_JPEG_Pause+0x18>
}
90009ca0:	2000      	movs	r0, #0
90009ca2:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009ca4:	07ca      	lsls	r2, r1, #31
90009ca6:	d41f      	bmi.n	90009ce8 <HAL_JPEG_Pause+0x5c>
90009ca8:	f04f 3cff 	mov.w	ip, #4294967295
90009cac:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009cb0:	078b      	lsls	r3, r1, #30
90009cb2:	d504      	bpl.n	90009cbe <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009cb4:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009cb6:	4694      	mov	ip, r2
90009cb8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009cbc:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009cbe:	6802      	ldr	r2, [r0, #0]
}
90009cc0:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009cc2:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009cc4:	ea03 030c 	and.w	r3, r3, ip
90009cc8:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009cca:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009ccc:	07cb      	lsls	r3, r1, #31
90009cce:	d503      	bpl.n	90009cd8 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009cd0:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009cd2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90009cd6:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009cd8:	0789      	lsls	r1, r1, #30
90009cda:	d5e1      	bpl.n	90009ca0 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009cdc:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009cde:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90009ce2:	6543      	str	r3, [r0, #84]	@ 0x54
}
90009ce4:	2000      	movs	r0, #0
90009ce6:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009ce8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009cea:	f06f 0c06 	mvn.w	ip, #6
90009cee:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
90009cf2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90009cf6:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009cf8:	e7da      	b.n	90009cb0 <HAL_JPEG_Pause+0x24>
90009cfa:	bf00      	nop

90009cfc <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90009cfc:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90009cfe:	6282      	str	r2, [r0, #40]	@ 0x28
}
90009d00:	4770      	bx	lr
90009d02:	bf00      	nop

90009d04 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90009d04:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90009d06:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90009d08:	4770      	bx	lr
90009d0a:	bf00      	nop

90009d0c <HAL_JPEG_Abort>:
{
90009d0c:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90009d0e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90009d10:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009d12:	6d41      	ldr	r1, [r0, #84]	@ 0x54
90009d14:	4a32      	ldr	r2, [pc, #200]	@ (90009de0 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009d16:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009d1a:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009d1c:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90009d1e:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009d20:	d043      	beq.n	90009daa <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009d22:	6822      	ldr	r2, [r4, #0]
90009d24:	6813      	ldr	r3, [r2, #0]
90009d26:	f023 0301 	bic.w	r3, r3, #1
90009d2a:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90009d2c:	f7fe f8e6 	bl	90007efc <HAL_GetTick>
90009d30:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90009d32:	e005      	b.n	90009d40 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
90009d34:	f7fe f8e2 	bl	90007efc <HAL_GetTick>
90009d38:	1b40      	subs	r0, r0, r5
90009d3a:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90009d3e:	d82b      	bhi.n	90009d98 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90009d40:	6823      	ldr	r3, [r4, #0]
90009d42:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009d44:	0612      	lsls	r2, r2, #24
90009d46:	d4f5      	bmi.n	90009d34 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009d48:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90009d4a:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009d4c:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009d50:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009d52:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009d54:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90009d58:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009d5a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009d5c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90009d60:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009d62:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009d64:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009d68:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90009d6a:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90009d6c:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90009d6e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009d70:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
90009d74:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
90009d76:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90009d78:	b138      	cbz	r0, 90009d8a <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009d7a:	2306      	movs	r3, #6
    return HAL_ERROR;
90009d7c:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90009d7e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90009d82:	2300      	movs	r3, #0
90009d84:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009d88:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90009d8a:	2301      	movs	r3, #1
90009d8c:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90009d90:	2300      	movs	r3, #0
90009d92:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90009d96:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009d98:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009d9a:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009d9c:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90009d9e:	f042 0208 	orr.w	r2, r2, #8
90009da2:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009da4:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90009da8:	e7ce      	b.n	90009d48 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90009daa:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90009dac:	f001 f9a8 	bl	9000b100 <HAL_MDMA_Abort>
90009db0:	b118      	cbz	r0, 90009dba <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90009db2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90009db4:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009db6:	2b40      	cmp	r3, #64	@ 0x40
90009db8:	d00d      	beq.n	90009dd6 <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90009dba:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009dbc:	f001 f9a0 	bl	9000b100 <HAL_MDMA_Abort>
90009dc0:	2800      	cmp	r0, #0
90009dc2:	d0ae      	beq.n	90009d22 <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90009dc4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90009dc6:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90009dc8:	2b40      	cmp	r3, #64	@ 0x40
90009dca:	d1aa      	bne.n	90009d22 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009dcc:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009dce:	f043 0304 	orr.w	r3, r3, #4
90009dd2:	6523      	str	r3, [r4, #80]	@ 0x50
90009dd4:	e7a5      	b.n	90009d22 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009dd6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90009dd8:	f043 0304 	orr.w	r3, r3, #4
90009ddc:	6523      	str	r3, [r4, #80]	@ 0x50
90009dde:	e7ec      	b.n	90009dba <HAL_JPEG_Abort+0xae>
90009de0:	ffff7ff0 	.word	0xffff7ff0

90009de4 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
90009de4:	4770      	bx	lr
90009de6:	bf00      	nop

90009de8 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009de8:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90009dea:	2101      	movs	r1, #1
{
90009dec:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009dee:	6803      	ldr	r3, [r0, #0]
90009df0:	681a      	ldr	r2, [r3, #0]
90009df2:	f022 0201 	bic.w	r2, r2, #1
90009df6:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009df8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009dfa:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009dfe:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009e00:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009e04:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90009e06:	f043 0304 	orr.w	r3, r3, #4
90009e0a:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90009e0c:	f7f8 f97a 	bl	90002104 <HAL_JPEG_ErrorCallback>
}
90009e10:	bd08      	pop	{r3, pc}
90009e12:	bf00      	nop

90009e14 <JPEG_MDMAInCpltCallback>:
{
90009e14:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009e16:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009e18:	f248 010c 	movw	r1, #32780	@ 0x800c
{
90009e1c:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009e1e:	6822      	ldr	r2, [r4, #0]
90009e20:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009e22:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
90009e26:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009e28:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009e2a:	400b      	ands	r3, r1
90009e2c:	2b0c      	cmp	r3, #12
90009e2e:	d001      	beq.n	90009e34 <JPEG_MDMAInCpltCallback+0x20>
}
90009e30:	b003      	add	sp, #12
90009e32:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e34:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009e36:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e38:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009e3a:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009e3c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e3e:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009e42:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009e44:	1a9b      	subs	r3, r3, r2
90009e46:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009e48:	6a21      	ldr	r1, [r4, #32]
90009e4a:	f7f8 f88f 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
90009e4e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009e50:	42ab      	cmp	r3, r5
90009e52:	d311      	bcc.n	90009e78 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009e54:	b305      	cbz	r5, 90009e98 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009e56:	fbb3 f2f5 	udiv	r2, r3, r5
90009e5a:	fb05 3212 	mls	r2, r5, r2, r3
90009e5e:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009e60:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009e62:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009e64:	04d1      	lsls	r1, r2, #19
90009e66:	d400      	bmi.n	90009e6a <JPEG_MDMAInCpltCallback+0x56>
90009e68:	b963      	cbnz	r3, 90009e84 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009e6a:	6822      	ldr	r2, [r4, #0]
90009e6c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90009e6e:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
90009e72:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009e74:	b003      	add	sp, #12
90009e76:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009e78:	b1cb      	cbz	r3, 90009eae <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
90009e7a:	0798      	lsls	r0, r3, #30
90009e7c:	d119      	bne.n	90009eb2 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009e7e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009e80:	04d2      	lsls	r2, r2, #19
90009e82:	d4f2      	bmi.n	90009e6a <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009e84:	6822      	ldr	r2, [r4, #0]
90009e86:	2501      	movs	r5, #1
90009e88:	69a1      	ldr	r1, [r4, #24]
90009e8a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90009e8c:	3240      	adds	r2, #64	@ 0x40
90009e8e:	9500      	str	r5, [sp, #0]
90009e90:	f001 f8c4 	bl	9000b01c <HAL_MDMA_Start_IT>
90009e94:	2800      	cmp	r0, #0
90009e96:	d0e8      	beq.n	90009e6a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009e98:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009e9a:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
90009e9c:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009e9e:	f043 0304 	orr.w	r3, r3, #4
90009ea2:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009ea4:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
90009ea8:	f7f8 f92c 	bl	90002104 <HAL_JPEG_ErrorCallback>
        return;
90009eac:	e7c0      	b.n	90009e30 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009eae:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009eb0:	e7db      	b.n	90009e6a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
90009eb2:	f023 0303 	bic.w	r3, r3, #3
90009eb6:	3304      	adds	r3, #4
90009eb8:	e7d2      	b.n	90009e60 <JPEG_MDMAInCpltCallback+0x4c>
90009eba:	bf00      	nop

90009ebc <JPEG_DMA_PollResidualData>:
{
90009ebc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009ebe:	6802      	ldr	r2, [r0, #0]
90009ec0:	2610      	movs	r6, #16
{
90009ec2:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009ec4:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90009ec6:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
90009eca:	d11d      	bne.n	90009f08 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009ecc:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009ece:	06df      	lsls	r7, r3, #27
90009ed0:	d51a      	bpl.n	90009f08 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
90009ed2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009ed4:	69e7      	ldr	r7, [r4, #28]
90009ed6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009ed8:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009eda:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009edc:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009ede:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009ee0:	6a67      	ldr	r7, [r4, #36]	@ 0x24
90009ee2:	69e2      	ldr	r2, [r4, #28]
90009ee4:	443a      	add	r2, r7
90009ee6:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009ee8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009eea:	69e2      	ldr	r2, [r4, #28]
90009eec:	4402      	add	r2, r0
90009eee:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009ef0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009ef2:	69e2      	ldr	r2, [r4, #28]
90009ef4:	440a      	add	r2, r1
90009ef6:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90009ef8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009efa:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
90009efc:	3304      	adds	r3, #4
90009efe:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009f00:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009f02:	4293      	cmp	r3, r2
90009f04:	d021      	beq.n	90009f4a <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009f06:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
90009f08:	3e01      	subs	r6, #1
90009f0a:	d1db      	bne.n	90009ec4 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
90009f0c:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009f0e:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90009f10:	06d8      	lsls	r0, r3, #27
90009f12:	d501      	bpl.n	90009f18 <JPEG_DMA_PollResidualData+0x5c>
90009f14:	048b      	lsls	r3, r1, #18
90009f16:	d417      	bmi.n	90009f48 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009f18:	6813      	ldr	r3, [r2, #0]
90009f1a:	f023 0301 	bic.w	r3, r3, #1
90009f1e:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
90009f20:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009f22:	b9eb      	cbnz	r3, 90009f60 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
90009f24:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
90009f26:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009f28:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009f2a:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f2c:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009f30:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009f34:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009f38:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f3a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009f3c:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009f3e:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009f42:	d00a      	beq.n	90009f5a <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009f44:	f7ff ff4e 	bl	90009de4 <HAL_JPEG_EncodeCpltCallback>
}
90009f48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f4a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f4c:	4620      	mov	r0, r4
90009f4e:	69e1      	ldr	r1, [r4, #28]
90009f50:	f7f8 f82c 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009f54:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
90009f56:	6265      	str	r5, [r4, #36]	@ 0x24
90009f58:	e7d6      	b.n	90009f08 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009f5a:	f7f8 f8d5 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
90009f5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f60:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009f62:	4620      	mov	r0, r4
90009f64:	69e1      	ldr	r1, [r4, #28]
90009f66:	f7f8 f821 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009f6a:	2300      	movs	r3, #0
90009f6c:	6263      	str	r3, [r4, #36]	@ 0x24
90009f6e:	e7d9      	b.n	90009f24 <JPEG_DMA_PollResidualData+0x68>

90009f70 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009f70:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009f72:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
90009f76:	d06f      	beq.n	9000a058 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009f78:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009f7a:	f003 030c 	and.w	r3, r3, #12
90009f7e:	2b0c      	cmp	r3, #12
{
90009f80:	b530      	push	{r4, r5, lr}
90009f82:	4604      	mov	r4, r0
90009f84:	b083      	sub	sp, #12
90009f86:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009f88:	d007      	beq.n	90009f9a <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009f8a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009f8c:	f003 030c 	and.w	r3, r3, #12
90009f90:	2b08      	cmp	r3, #8
90009f92:	d035      	beq.n	9000a000 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
90009f94:	2000      	movs	r0, #0
}
90009f96:	b003      	add	sp, #12
90009f98:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009f9a:	07c8      	lsls	r0, r1, #31
90009f9c:	d415      	bmi.n	90009fca <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009f9e:	07a9      	lsls	r1, r5, #30
90009fa0:	d5f8      	bpl.n	90009f94 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009fa2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009fa4:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009fa8:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009faa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009fac:	041a      	lsls	r2, r3, #16
90009fae:	d44f      	bmi.n	9000a050 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009fb0:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009fb2:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
90009fb4:	2a00      	cmp	r2, #0
90009fb6:	d13a      	bne.n	9000a02e <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009fb8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009fba:	2206      	movs	r2, #6
    return HAL_ERROR;
90009fbc:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009fbe:	f043 0304 	orr.w	r3, r3, #4
90009fc2:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009fc4:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
90009fc8:	e7e5      	b.n	90009f96 <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009fca:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009fcc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009fce:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009fd2:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009fd4:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
90009fd6:	2a00      	cmp	r2, #0
90009fd8:	d0ee      	beq.n	90009fb8 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
90009fda:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009fdc:	fbb3 f1f2 	udiv	r1, r3, r2
90009fe0:	fb02 3211 	mls	r2, r2, r1, r3
90009fe4:	1a9b      	subs	r3, r3, r2
90009fe6:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
90009fe8:	2b00      	cmp	r3, #0
90009fea:	d0d8      	beq.n	90009f9e <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009fec:	6822      	ldr	r2, [r4, #0]
90009fee:	2101      	movs	r1, #1
90009ff0:	3240      	adds	r2, #64	@ 0x40
90009ff2:	9100      	str	r1, [sp, #0]
90009ff4:	69a1      	ldr	r1, [r4, #24]
90009ff6:	f001 f811 	bl	9000b01c <HAL_MDMA_Start_IT>
90009ffa:	2800      	cmp	r0, #0
90009ffc:	d0cf      	beq.n	90009f9e <HAL_JPEG_Resume+0x2e>
90009ffe:	e7db      	b.n	90009fb8 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000a000:	f011 0101 	ands.w	r1, r1, #1
9000a004:	d011      	beq.n	9000a02a <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a006:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a008:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000a00a:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000a00c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a010:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000a012:	07ab      	lsls	r3, r5, #30
9000a014:	d504      	bpl.n	9000a020 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a016:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000a018:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000a01a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
9000a01e:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
9000a020:	6822      	ldr	r2, [r4, #0]
9000a022:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000a024:	430b      	orrs	r3, r1
9000a026:	6313      	str	r3, [r2, #48]	@ 0x30
9000a028:	e7b4      	b.n	90009f94 <HAL_JPEG_Resume+0x24>
9000a02a:	2228      	movs	r2, #40	@ 0x28
9000a02c:	e7f1      	b.n	9000a012 <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a02e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a030:	fbb3 f1f2 	udiv	r1, r3, r2
9000a034:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a038:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a03a:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a03c:	2201      	movs	r2, #1
9000a03e:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000a040:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a042:	9200      	str	r2, [sp, #0]
9000a044:	69e2      	ldr	r2, [r4, #28]
9000a046:	f000 ffe9 	bl	9000b01c <HAL_MDMA_Start_IT>
9000a04a:	2800      	cmp	r0, #0
9000a04c:	d0a2      	beq.n	90009f94 <HAL_JPEG_Resume+0x24>
9000a04e:	e7b3      	b.n	90009fb8 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
9000a050:	4620      	mov	r0, r4
9000a052:	f7ff ff33 	bl	90009ebc <JPEG_DMA_PollResidualData>
9000a056:	e79d      	b.n	90009f94 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
9000a058:	2001      	movs	r0, #1
}
9000a05a:	4770      	bx	lr

9000a05c <JPEG_MDMAOutCpltCallback>:
{
9000a05c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a05e:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a060:	f248 010c 	movw	r1, #32780	@ 0x800c
{
9000a064:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a066:	6823      	ldr	r3, [r4, #0]
9000a068:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a06a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a06e:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
9000a070:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a072:	400a      	ands	r2, r1
9000a074:	2a0c      	cmp	r2, #12
9000a076:	d001      	beq.n	9000a07c <JPEG_MDMAOutCpltCallback+0x20>
}
9000a078:	b003      	add	sp, #12
9000a07a:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000a07c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a07e:	0692      	lsls	r2, r2, #26
9000a080:	d505      	bpl.n	9000a08e <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a082:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a084:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a088:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000a08a:	b003      	add	sp, #12
9000a08c:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a08e:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a090:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a092:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a094:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a096:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a098:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000a09c:	1a9b      	subs	r3, r3, r2
9000a09e:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0a0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a0a2:	f7f7 ff83 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a0a6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a0a8:	049b      	lsls	r3, r3, #18
9000a0aa:	d501      	bpl.n	9000a0b0 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000a0ac:	6823      	ldr	r3, [r4, #0]
9000a0ae:	e7e8      	b.n	9000a082 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000a0b0:	6821      	ldr	r1, [r4, #0]
9000a0b2:	2501      	movs	r5, #1
9000a0b4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000a0b6:	69e2      	ldr	r2, [r4, #28]
9000a0b8:	3144      	adds	r1, #68	@ 0x44
9000a0ba:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000a0bc:	9500      	str	r5, [sp, #0]
9000a0be:	f000 ffad 	bl	9000b01c <HAL_MDMA_Start_IT>
9000a0c2:	2800      	cmp	r0, #0
9000a0c4:	d0f2      	beq.n	9000a0ac <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a0c6:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a0c8:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000a0ca:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000a0cc:	f043 0304 	orr.w	r3, r3, #4
9000a0d0:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000a0d2:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
9000a0d6:	f7f8 f815 	bl	90002104 <HAL_JPEG_ErrorCallback>
          return;
9000a0da:	e7cd      	b.n	9000a078 <JPEG_MDMAOutCpltCallback+0x1c>

9000a0dc <JPEG_MDMAOutAbortCallback>:
{
9000a0dc:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000a0de:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000a0e0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a0e2:	041a      	lsls	r2, r3, #16
9000a0e4:	d400      	bmi.n	9000a0e8 <JPEG_MDMAOutAbortCallback+0xc>
}
9000a0e6:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a0e8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000a0ea:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a0ec:	681b      	ldr	r3, [r3, #0]
9000a0ee:	695b      	ldr	r3, [r3, #20]
9000a0f0:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a0f4:	1ad3      	subs	r3, r2, r3
9000a0f6:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a0f8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a0fa:	429a      	cmp	r2, r3
9000a0fc:	d025      	beq.n	9000a14a <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a0fe:	6822      	ldr	r2, [r4, #0]
9000a100:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000a102:	f015 0510 	ands.w	r5, r5, #16
9000a106:	d118      	bne.n	9000a13a <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
9000a108:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a10a:	bb4b      	cbnz	r3, 9000a160 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a10c:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a10e:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a110:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a112:	f023 0301 	bic.w	r3, r3, #1
9000a116:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a118:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a11a:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a11c:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a120:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a124:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a128:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a12a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a12c:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a12e:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a132:	d012      	beq.n	9000a15a <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a134:	f7ff fe56 	bl	90009de4 <HAL_JPEG_EncodeCpltCallback>
}
9000a138:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a13a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a13c:	049b      	lsls	r3, r3, #18
9000a13e:	d4d2      	bmi.n	9000a0e6 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
9000a140:	4620      	mov	r0, r4
}
9000a142:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a146:	f7ff beb9 	b.w	90009ebc <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a14a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a14c:	4620      	mov	r0, r4
9000a14e:	69e1      	ldr	r1, [r4, #28]
9000a150:	f7f7 ff2c 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a154:	2300      	movs	r3, #0
9000a156:	6263      	str	r3, [r4, #36]	@ 0x24
9000a158:	e7d1      	b.n	9000a0fe <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a15a:	f7f7 ffd5 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
9000a15e:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a160:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a162:	4620      	mov	r0, r4
9000a164:	69e1      	ldr	r1, [r4, #28]
9000a166:	f7f7 ff21 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a16a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a16c:	6265      	str	r5, [r4, #36]	@ 0x24
9000a16e:	e7cd      	b.n	9000a10c <JPEG_MDMAOutAbortCallback+0x30>

9000a170 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a170:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a172:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a174:	f002 0203 	and.w	r2, r2, #3
9000a178:	2a02      	cmp	r2, #2
{
9000a17a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000a17e:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a180:	d01e      	beq.n	9000a1c0 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
9000a182:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a184:	04d7      	lsls	r7, r2, #19
9000a186:	d407      	bmi.n	9000a198 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
9000a188:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a18a:	0796      	lsls	r6, r2, #30
9000a18c:	f100 811b 	bmi.w	9000a3c6 <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
9000a190:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a192:	0750      	lsls	r0, r2, #29
9000a194:	f100 81cc 	bmi.w	9000a530 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a198:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000a19a:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000a19e:	d107      	bne.n	9000a1b0 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
9000a1a0:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
9000a1a2:	f016 0608 	ands.w	r6, r6, #8
9000a1a6:	d14a      	bne.n	9000a23e <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000a1a8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1aa:	06d2      	lsls	r2, r2, #27
9000a1ac:	f100 81fe 	bmi.w	9000a5ac <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a1b0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1b2:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a1b6:	2a20      	cmp	r2, #32
9000a1b8:	d019      	beq.n	9000a1ee <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
9000a1ba:	2000      	movs	r0, #0
}
9000a1bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a1c0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a1c2:	0652      	lsls	r2, r2, #25
9000a1c4:	d5dd      	bpl.n	9000a182 <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a1c6:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a1c8:	4629      	mov	r1, r5
9000a1ca:	f7ff fb1f 	bl	9000980c <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a1ce:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a1d0:	4629      	mov	r1, r5
9000a1d2:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a1d4:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a1d6:	f7f7 fe9b 	bl	90001f10 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a1da:	6823      	ldr	r3, [r4, #0]
9000a1dc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a1de:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000a1e2:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a1e4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a1e6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000a1ea:	639a      	str	r2, [r3, #56]	@ 0x38
9000a1ec:	e7c9      	b.n	9000a182 <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a1ee:	681a      	ldr	r2, [r3, #0]
9000a1f0:	f022 0201 	bic.w	r2, r2, #1
9000a1f4:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a1f6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a1f8:	f002 020c 	and.w	r2, r2, #12
9000a1fc:	2a08      	cmp	r2, #8
9000a1fe:	f000 8201 	beq.w	9000a604 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a202:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000a204:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000a208:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
9000a20a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a20c:	2b00      	cmp	r3, #0
9000a20e:	f040 81fe 	bne.w	9000a60e <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
9000a212:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
9000a214:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a216:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a218:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a21a:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a21e:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a222:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a226:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a228:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a22a:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a22c:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a230:	f000 81e5 	beq.w	9000a5fe <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a234:	f7ff fdd6 	bl	90009de4 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000a238:	2001      	movs	r0, #1
}
9000a23a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a23e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a240:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a242:	3220      	adds	r2, #32
9000a244:	4296      	cmp	r6, r2
9000a246:	f0c0 8200 	bcc.w	9000a64a <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000a24a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a24c:	69e1      	ldr	r1, [r4, #28]
9000a24e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a250:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a252:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a254:	69e2      	ldr	r2, [r4, #28]
9000a256:	440a      	add	r2, r1
9000a258:	0a19      	lsrs	r1, r3, #8
9000a25a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a25c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a25e:	69e2      	ldr	r2, [r4, #28]
9000a260:	440a      	add	r2, r1
9000a262:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a264:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a266:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a268:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a26a:	69e2      	ldr	r2, [r4, #28]
9000a26c:	440a      	add	r2, r1
9000a26e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a270:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a272:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a274:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a276:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a278:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a27a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a27c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a27e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a280:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a282:	69e2      	ldr	r2, [r4, #28]
9000a284:	440a      	add	r2, r1
9000a286:	0a19      	lsrs	r1, r3, #8
9000a288:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a28a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a28c:	69e2      	ldr	r2, [r4, #28]
9000a28e:	440a      	add	r2, r1
9000a290:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a292:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a294:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a296:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a298:	69e2      	ldr	r2, [r4, #28]
9000a29a:	440a      	add	r2, r1
9000a29c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a29e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a2a0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a2a2:	3304      	adds	r3, #4
9000a2a4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a2a6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a2a8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a2aa:	69e1      	ldr	r1, [r4, #28]
9000a2ac:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a2ae:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2b0:	69e2      	ldr	r2, [r4, #28]
9000a2b2:	440a      	add	r2, r1
9000a2b4:	0a19      	lsrs	r1, r3, #8
9000a2b6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2b8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2ba:	69e2      	ldr	r2, [r4, #28]
9000a2bc:	440a      	add	r2, r1
9000a2be:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2c0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2c2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2c4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2c6:	69e2      	ldr	r2, [r4, #28]
9000a2c8:	440a      	add	r2, r1
9000a2ca:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a2cc:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a2ce:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a2d0:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a2d2:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a2d4:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a2d6:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a2d8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a2da:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a2dc:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2de:	69e2      	ldr	r2, [r4, #28]
9000a2e0:	440a      	add	r2, r1
9000a2e2:	0a19      	lsrs	r1, r3, #8
9000a2e4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2e6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2e8:	69e2      	ldr	r2, [r4, #28]
9000a2ea:	440a      	add	r2, r1
9000a2ec:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2ee:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a2f0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a2f2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a2f4:	69e2      	ldr	r2, [r4, #28]
9000a2f6:	440a      	add	r2, r1
9000a2f8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a2fa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a2fc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a2fe:	3304      	adds	r3, #4
9000a300:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a302:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a304:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a306:	69e1      	ldr	r1, [r4, #28]
9000a308:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a30a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a30c:	69e2      	ldr	r2, [r4, #28]
9000a30e:	440a      	add	r2, r1
9000a310:	0a19      	lsrs	r1, r3, #8
9000a312:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a314:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a316:	69e2      	ldr	r2, [r4, #28]
9000a318:	440a      	add	r2, r1
9000a31a:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a31c:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a31e:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a320:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a322:	69e2      	ldr	r2, [r4, #28]
9000a324:	440a      	add	r2, r1
9000a326:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a328:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a32a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a32c:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a32e:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a330:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a332:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a334:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a336:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a338:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a33a:	69e2      	ldr	r2, [r4, #28]
9000a33c:	440a      	add	r2, r1
9000a33e:	0a19      	lsrs	r1, r3, #8
9000a340:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a342:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a344:	69e2      	ldr	r2, [r4, #28]
9000a346:	440a      	add	r2, r1
9000a348:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a34a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a34c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a34e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a350:	69e2      	ldr	r2, [r4, #28]
9000a352:	440a      	add	r2, r1
9000a354:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a356:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a358:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a35a:	3304      	adds	r3, #4
9000a35c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a35e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a360:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a362:	69e1      	ldr	r1, [r4, #28]
9000a364:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a366:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a368:	69e2      	ldr	r2, [r4, #28]
9000a36a:	440a      	add	r2, r1
9000a36c:	0a19      	lsrs	r1, r3, #8
9000a36e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a370:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a372:	69e2      	ldr	r2, [r4, #28]
9000a374:	440a      	add	r2, r1
9000a376:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a378:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a37a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a37c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a37e:	69e2      	ldr	r2, [r4, #28]
9000a380:	440a      	add	r2, r1
9000a382:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a384:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a386:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000a388:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a38a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000a38c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a38e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a390:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a392:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a394:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a396:	69e2      	ldr	r2, [r4, #28]
9000a398:	440a      	add	r2, r1
9000a39a:	0a19      	lsrs	r1, r3, #8
9000a39c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a39e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3a0:	69e2      	ldr	r2, [r4, #28]
9000a3a2:	440a      	add	r2, r1
9000a3a4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3a6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a3a8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a3aa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a3ac:	69e2      	ldr	r2, [r4, #28]
9000a3ae:	440a      	add	r2, r1
9000a3b0:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a3b2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a3b4:	3304      	adds	r3, #4
9000a3b6:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a3b8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a3ba:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a3bc:	429a      	cmp	r2, r3
9000a3be:	f000 8258 	beq.w	9000a872 <JPEG_Process+0x702>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a3c2:	6823      	ldr	r3, [r4, #0]
9000a3c4:	e6f4      	b.n	9000a1b0 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a3c6:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a3c8:	2a00      	cmp	r2, #0
9000a3ca:	f000 8128 	beq.w	9000a61e <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a3ce:	6a21      	ldr	r1, [r4, #32]
9000a3d0:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a3d2:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a3d4:	f240 81b9 	bls.w	9000a74a <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a3d8:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a3da:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a3dc:	04cd      	lsls	r5, r1, #19
9000a3de:	f53f aedb 	bmi.w	9000a198 <JPEG_Process+0x28>
9000a3e2:	2a00      	cmp	r2, #0
9000a3e4:	f43f aed8 	beq.w	9000a198 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a3e8:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
9000a3ea:	ea4f 0092 	mov.w	r0, r2, lsr #2
    if (nb_words >= nbRequestWords)
9000a3ee:	f200 8248 	bhi.w	9000a882 <JPEG_Process+0x712>
      if (nb_words > 0UL)
9000a3f2:	2a03      	cmp	r2, #3
9000a3f4:	f240 82c0 	bls.w	9000a978 <JPEG_Process+0x808>
          input_count = hjpeg->JpegInCount;
9000a3f8:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a3fa:	2801      	cmp	r0, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a3fc:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a3fe:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a402:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a404:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a406:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a408:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a40c:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a40e:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a412:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a416:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a41a:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a41c:	6a21      	ldr	r1, [r4, #32]
9000a41e:	f101 0104 	add.w	r1, r1, #4
9000a422:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a424:	f43f aeb8 	beq.w	9000a198 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a428:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a42a:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a42c:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a430:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a432:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a434:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a436:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a43a:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a43c:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a440:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a444:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a448:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a44a:	6a21      	ldr	r1, [r4, #32]
9000a44c:	f101 0104 	add.w	r1, r1, #4
9000a450:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a452:	f43f aea1 	beq.w	9000a198 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a456:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a458:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a45a:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a45e:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a460:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a462:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a464:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a468:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a46a:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a46e:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a472:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a476:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a478:	6a21      	ldr	r1, [r4, #32]
9000a47a:	f101 0104 	add.w	r1, r1, #4
9000a47e:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a480:	f43f ae8a 	beq.w	9000a198 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a484:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a486:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a488:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a48c:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a48e:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a490:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a492:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a496:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a498:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a49c:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4a0:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a4a4:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a4a6:	6a21      	ldr	r1, [r4, #32]
9000a4a8:	f101 0104 	add.w	r1, r1, #4
9000a4ac:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a4ae:	f43f ae73 	beq.w	9000a198 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a4b2:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a4b4:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4b6:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a4ba:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4bc:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4be:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4c0:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a4c4:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4c6:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a4ca:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4ce:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a4d2:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a4d4:	6a21      	ldr	r1, [r4, #32]
9000a4d6:	f101 0104 	add.w	r1, r1, #4
9000a4da:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a4dc:	f43f ae5c 	beq.w	9000a198 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a4e0:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a4e2:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4e4:	eb02 0501 	add.w	r5, r2, r1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a4e8:	5c56      	ldrb	r6, [r2, r1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4ea:	78a9      	ldrb	r1, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4ec:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4ee:	ea4f 4101 	mov.w	r1, r1, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a4f2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a4f4:	ea41 2107 	orr.w	r1, r1, r7, lsl #8
9000a4f8:	ea41 0106 	orr.w	r1, r1, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a4fc:	ea41 6105 	orr.w	r1, r1, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a500:	6419      	str	r1, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000a502:	6a21      	ldr	r1, [r4, #32]
9000a504:	f101 0104 	add.w	r1, r1, #4
9000a508:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a50a:	f47f ae45 	bne.w	9000a198 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
9000a50e:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a510:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a512:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a514:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a516:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a518:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a51a:	7849      	ldrb	r1, [r1, #1]
9000a51c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000a520:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a522:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a526:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a528:	6a22      	ldr	r2, [r4, #32]
9000a52a:	3204      	adds	r2, #4
9000a52c:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
9000a52e:	e633      	b.n	9000a198 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
9000a530:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a532:	2a00      	cmp	r2, #0
9000a534:	d073      	beq.n	9000a61e <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a536:	6a21      	ldr	r1, [r4, #32]
9000a538:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a53a:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000a53c:	f200 8182 	bhi.w	9000a844 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a540:	428a      	cmp	r2, r1
9000a542:	f040 8104 	bne.w	9000a74e <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a546:	6a21      	ldr	r1, [r4, #32]
9000a548:	4620      	mov	r0, r4
9000a54a:	f7f7 fd0f 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a54e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a550:	2a04      	cmp	r2, #4
9000a552:	d902      	bls.n	9000a55a <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a554:	f022 0203 	bic.w	r2, r2, #3
9000a558:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a55a:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a55c:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a55e:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a560:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000a562:	04c9      	lsls	r1, r1, #19
9000a564:	f53f ae18 	bmi.w	9000a198 <JPEG_Process+0x28>
9000a568:	2a00      	cmp	r2, #0
9000a56a:	f43f ae15 	beq.w	9000a198 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000a56e:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a570:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
9000a572:	f040 8177 	bne.w	9000a864 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a576:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a578:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a57a:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a57c:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000a57e:	f105 0501 	add.w	r5, r5, #1
9000a582:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a584:	d010      	beq.n	9000a5a8 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a586:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a588:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a58a:	5d45      	ldrb	r5, [r0, r5]
9000a58c:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
9000a590:	6a25      	ldr	r5, [r4, #32]
9000a592:	f105 0501 	add.w	r5, r5, #1
9000a596:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a598:	d106      	bne.n	9000a5a8 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a59a:	6a22      	ldr	r2, [r4, #32]
9000a59c:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000a59e:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a5a0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a5a4:	3201      	adds	r2, #1
9000a5a6:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a5a8:	6419      	str	r1, [r3, #64]	@ 0x40
9000a5aa:	e5f5      	b.n	9000a198 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a5ac:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a5ae:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a5b0:	3204      	adds	r2, #4
9000a5b2:	4295      	cmp	r5, r2
9000a5b4:	f0c0 80cd 	bcc.w	9000a752 <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
9000a5b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a5ba:	69e1      	ldr	r1, [r4, #28]
9000a5bc:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a5be:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a5c0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5c2:	69e2      	ldr	r2, [r4, #28]
9000a5c4:	440a      	add	r2, r1
9000a5c6:	0a19      	lsrs	r1, r3, #8
9000a5c8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a5ca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5cc:	69e2      	ldr	r2, [r4, #28]
9000a5ce:	440a      	add	r2, r1
9000a5d0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a5d2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a5d4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a5d6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a5d8:	69e2      	ldr	r2, [r4, #28]
9000a5da:	440a      	add	r2, r1
9000a5dc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a5de:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a5e0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
9000a5e2:	3304      	adds	r3, #4
9000a5e4:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a5e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a5e8:	429a      	cmp	r2, r3
9000a5ea:	f47f aeea 	bne.w	9000a3c2 <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a5ee:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a5f0:	4620      	mov	r0, r4
9000a5f2:	69e1      	ldr	r1, [r4, #28]
9000a5f4:	f7f7 fcda 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a5f8:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a5fa:	6266      	str	r6, [r4, #36]	@ 0x24
9000a5fc:	e5d8      	b.n	9000a1b0 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a5fe:	f7f7 fd83 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
9000a602:	e619      	b.n	9000a238 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a604:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a606:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000a60a:	631a      	str	r2, [r3, #48]	@ 0x30
9000a60c:	e5f9      	b.n	9000a202 <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a60e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a610:	4620      	mov	r0, r4
9000a612:	69e1      	ldr	r1, [r4, #28]
9000a614:	f7f7 fcca 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a618:	2300      	movs	r3, #0
9000a61a:	6263      	str	r3, [r4, #36]	@ 0x24
9000a61c:	e5f9      	b.n	9000a212 <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a61e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a620:	f002 020c 	and.w	r2, r2, #12
9000a624:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a626:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a628:	f000 811e 	beq.w	9000a868 <JPEG_Process+0x6f8>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a62c:	f002 020c 	and.w	r2, r2, #12
9000a630:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a632:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a634:	f47f adb0 	bne.w	9000a198 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a638:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a63c:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a63e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a640:	f022 0206 	bic.w	r2, r2, #6
9000a644:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a646:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a648:	e5a6      	b.n	9000a198 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a64a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a64c:	4296      	cmp	r6, r2
9000a64e:	f67f adaf 	bls.w	9000a1b0 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a652:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a654:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000a656:	0880      	lsrs	r0, r0, #2
9000a658:	d020      	beq.n	9000a69c <JPEG_Process+0x52c>
9000a65a:	4629      	mov	r1, r5
9000a65c:	e000      	b.n	9000a660 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000a65e:	6823      	ldr	r3, [r4, #0]
9000a660:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a662:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a664:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a666:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a668:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a66a:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a66c:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a66e:	69e2      	ldr	r2, [r4, #28]
9000a670:	4432      	add	r2, r6
9000a672:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000a676:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a678:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a67a:	69e2      	ldr	r2, [r4, #28]
9000a67c:	4432      	add	r2, r6
9000a67e:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a682:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a686:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a688:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000a68a:	69e2      	ldr	r2, [r4, #28]
9000a68c:	4432      	add	r2, r6
9000a68e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a690:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a692:	f103 0304 	add.w	r3, r3, #4
9000a696:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a698:	d1e1      	bne.n	9000a65e <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a69a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000a69c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a69e:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a6a0:	429e      	cmp	r6, r3
9000a6a2:	f000 8161 	beq.w	9000a968 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a6a6:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a6aa:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a6ac:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000a6b0:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a6b2:	d00e      	beq.n	9000a6d2 <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a6b4:	f005 0303 	and.w	r3, r5, #3
9000a6b8:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a6ba:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a6bc:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a6be:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a6c0:	fa27 f303 	lsr.w	r3, r7, r3
9000a6c4:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a6c6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a6c8:	69e1      	ldr	r1, [r4, #28]
9000a6ca:	f103 0301 	add.w	r3, r3, #1
9000a6ce:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a6d0:	d1f0      	bne.n	9000a6b4 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
9000a6d2:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a6d6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a6d8:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a6da:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a6de:	f7f7 fc65 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a6e2:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a6e4:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
9000a6e6:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a6e8:	f63f ae6b 	bhi.w	9000a3c2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a6ec:	ea4f 02c6 	mov.w	r2, r6, lsl #3
9000a6f0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a6f2:	69e0      	ldr	r0, [r4, #28]
9000a6f4:	fa27 f502 	lsr.w	r5, r7, r2
9000a6f8:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a6fa:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a6fc:	f101 0101 	add.w	r1, r1, #1
9000a700:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a702:	f43f ae5e 	beq.w	9000a3c2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a706:	f102 0108 	add.w	r1, r2, #8
9000a70a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a70c:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a70e:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a710:	fa27 f101 	lsr.w	r1, r7, r1
9000a714:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a716:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a718:	f101 0101 	add.w	r1, r1, #1
9000a71c:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a71e:	f43f ae50 	beq.w	9000a3c2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a722:	3210      	adds	r2, #16
9000a724:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a726:	69e0      	ldr	r0, [r4, #28]
9000a728:	fa27 f202 	lsr.w	r2, r7, r2
9000a72c:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a72e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a730:	3201      	adds	r2, #1
9000a732:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a734:	2e00      	cmp	r6, #0
9000a736:	f47f ae44 	bne.w	9000a3c2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a73a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a73c:	0e3f      	lsrs	r7, r7, #24
9000a73e:	69e2      	ldr	r2, [r4, #28]
9000a740:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000a742:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a744:	3301      	adds	r3, #1
9000a746:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a748:	e63b      	b.n	9000a3c2 <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a74a:	428a      	cmp	r2, r1
9000a74c:	d07c      	beq.n	9000a848 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a74e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a750:	e522      	b.n	9000a198 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a752:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a754:	4295      	cmp	r5, r2
9000a756:	f67f ad2b 	bls.w	9000a1b0 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a75a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a75c:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000a75e:	0880      	lsrs	r0, r0, #2
9000a760:	d020      	beq.n	9000a7a4 <JPEG_Process+0x634>
9000a762:	4631      	mov	r1, r6
9000a764:	e000      	b.n	9000a768 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
9000a766:	6823      	ldr	r3, [r4, #0]
9000a768:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000a76a:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a76c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a76e:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a770:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a772:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a774:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a776:	69e2      	ldr	r2, [r4, #28]
9000a778:	442a      	add	r2, r5
9000a77a:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000a77e:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a780:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a782:	69e2      	ldr	r2, [r4, #28]
9000a784:	442a      	add	r2, r5
9000a786:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a78a:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a78e:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a790:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000a792:	69e2      	ldr	r2, [r4, #28]
9000a794:	442a      	add	r2, r5
9000a796:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a798:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a79a:	f103 0304 	add.w	r3, r3, #4
9000a79e:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
9000a7a0:	d1e1      	bne.n	9000a766 <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a7a2:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
9000a7a4:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a7a6:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a7a8:	429d      	cmp	r5, r3
9000a7aa:	f000 80dd 	beq.w	9000a968 <JPEG_Process+0x7f8>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a7ae:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000a7b2:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a7b4:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000a7b8:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000a7ba:	d00e      	beq.n	9000a7da <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a7bc:	f006 0303 	and.w	r3, r6, #3
9000a7c0:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a7c2:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a7c4:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a7c6:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a7c8:	fa27 f303 	lsr.w	r3, r7, r3
9000a7cc:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a7ce:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a7d0:	69e1      	ldr	r1, [r4, #28]
9000a7d2:	f103 0301 	add.w	r3, r3, #1
9000a7d6:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000a7d8:	d1f0      	bne.n	9000a7bc <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000a7da:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a7de:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a7e0:	4620      	mov	r0, r4
9000a7e2:	f7f7 fbe3 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
9000a7e6:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
9000a7ea:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a7ec:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
9000a7ee:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a7f0:	f63f ade7 	bhi.w	9000a3c2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a7f4:	ea4f 02c3 	mov.w	r2, r3, lsl #3
9000a7f8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a7fa:	69e0      	ldr	r0, [r4, #28]
9000a7fc:	fa27 f502 	lsr.w	r5, r7, r2
9000a800:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
9000a802:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a804:	f101 0101 	add.w	r1, r1, #1
9000a808:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a80a:	f43f adda 	beq.w	9000a3c2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a80e:	f102 0108 	add.w	r1, r2, #8
9000a812:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a814:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a816:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a818:	fa27 f101 	lsr.w	r1, r7, r1
9000a81c:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
9000a81e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a820:	f101 0101 	add.w	r1, r1, #1
9000a824:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a826:	f43f adcc 	beq.w	9000a3c2 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a82a:	3210      	adds	r2, #16
9000a82c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000a82e:	69e0      	ldr	r0, [r4, #28]
9000a830:	fa27 f202 	lsr.w	r2, r7, r2
9000a834:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a836:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a838:	3201      	adds	r2, #1
9000a83a:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a83c:	2b00      	cmp	r3, #0
9000a83e:	f43f af7c 	beq.w	9000a73a <JPEG_Process+0x5ca>
9000a842:	e5be      	b.n	9000a3c2 <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a844:	1a52      	subs	r2, r2, r1
9000a846:	e68b      	b.n	9000a560 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a848:	6a21      	ldr	r1, [r4, #32]
9000a84a:	4620      	mov	r0, r4
9000a84c:	f7f7 fb8e 	bl	90001f6c <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a850:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a852:	2a04      	cmp	r2, #4
9000a854:	d902      	bls.n	9000a85c <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a856:	f022 0203 	bic.w	r2, r2, #3
9000a85a:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000a85c:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a85e:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a860:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000a862:	e5ba      	b.n	9000a3da <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
9000a864:	6a22      	ldr	r2, [r4, #32]
9000a866:	e653      	b.n	9000a510 <JPEG_Process+0x3a0>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a868:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
9000a86c:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a86e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9000a870:	e492      	b.n	9000a198 <JPEG_Process+0x28>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a872:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a874:	4620      	mov	r0, r4
9000a876:	69e1      	ldr	r1, [r4, #28]
9000a878:	f7f7 fb98 	bl	90001fac <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a87c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a87e:	6265      	str	r5, [r4, #36]	@ 0x24
9000a880:	e496      	b.n	9000a1b0 <JPEG_Process+0x40>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a882:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
9000a884:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a886:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a888:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a88a:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a88c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a88e:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a890:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a892:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a896:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a898:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a89c:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a89e:	6a21      	ldr	r1, [r4, #32]
9000a8a0:	3104      	adds	r1, #4
9000a8a2:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a8a4:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8a6:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8a8:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8aa:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8ac:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8ae:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a8b0:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8b2:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a8b6:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8b8:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8bc:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a8be:	6a21      	ldr	r1, [r4, #32]
9000a8c0:	3104      	adds	r1, #4
9000a8c2:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a8c4:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8c6:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8c8:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8ca:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8cc:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8ce:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a8d0:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8d2:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a8d6:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8d8:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8dc:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a8de:	6a21      	ldr	r1, [r4, #32]
9000a8e0:	3104      	adds	r1, #4
9000a8e2:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a8e4:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8e6:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8e8:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8ea:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8ec:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8ee:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a8f0:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a8f2:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a8f6:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a8f8:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a8fc:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a8fe:	6a21      	ldr	r1, [r4, #32]
9000a900:	3104      	adds	r1, #4
9000a902:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a904:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a906:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a908:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a90a:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a90c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a90e:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a910:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a912:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a916:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a918:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a91c:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a91e:	6a21      	ldr	r1, [r4, #32]
9000a920:	3104      	adds	r1, #4
9000a922:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a924:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a926:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a928:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a92a:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a92c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a92e:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a930:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a932:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a936:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a938:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a93c:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a93e:	6a21      	ldr	r1, [r4, #32]
9000a940:	3104      	adds	r1, #4
9000a942:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a944:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a946:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a948:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a94a:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a94c:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a94e:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a950:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a952:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
9000a956:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a958:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a95c:	6419      	str	r1, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
9000a95e:	6a21      	ldr	r1, [r4, #32]
9000a960:	3104      	adds	r1, #4
9000a962:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
9000a964:	6a20      	ldr	r0, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a966:	e5d3      	b.n	9000a510 <JPEG_Process+0x3a0>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a968:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000a96a:	4620      	mov	r0, r4
9000a96c:	f7f7 fb1e 	bl	90001fac <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a970:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a972:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a974:	6262      	str	r2, [r4, #36]	@ 0x24
9000a976:	e41b      	b.n	9000a1b0 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a978:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a97a:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a97c:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a97e:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000a980:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a984:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000a986:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a988:	f43f ae0e 	beq.w	9000a5a8 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a98c:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a98e:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a990:	5c28      	ldrb	r0, [r5, r0]
9000a992:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000a996:	6a20      	ldr	r0, [r4, #32]
9000a998:	f100 0001 	add.w	r0, r0, #1
9000a99c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a99e:	f47f ae03 	bne.w	9000a5a8 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a9a2:	6a22      	ldr	r2, [r4, #32]
9000a9a4:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000a9a6:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a9a8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a9ac:	3201      	adds	r2, #1
9000a9ae:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a9b0:	e5fa      	b.n	9000a5a8 <JPEG_Process+0x438>
9000a9b2:	bf00      	nop

9000a9b4 <HAL_JPEG_IRQHandler>:
{
9000a9b4:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
9000a9b6:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
9000a9ba:	3b03      	subs	r3, #3
9000a9bc:	2b01      	cmp	r3, #1
9000a9be:	d900      	bls.n	9000a9c2 <HAL_JPEG_IRQHandler+0xe>
}
9000a9c0:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a9c2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a9c4:	4604      	mov	r4, r0
9000a9c6:	f003 030c 	and.w	r3, r3, #12
9000a9ca:	2b08      	cmp	r3, #8
9000a9cc:	d050      	beq.n	9000aa70 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a9ce:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000a9d0:	f003 030c 	and.w	r3, r3, #12
9000a9d4:	2b0c      	cmp	r3, #12
9000a9d6:	d1f3      	bne.n	9000a9c0 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a9d8:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a9da:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a9dc:	f002 0203 	and.w	r2, r2, #3
9000a9e0:	2a02      	cmp	r2, #2
9000a9e2:	d049      	beq.n	9000aa78 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000a9e4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000a9e6:	0692      	lsls	r2, r2, #26
9000a9e8:	d5ea      	bpl.n	9000a9c0 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a9ea:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a9ec:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a9ee:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
9000a9f2:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a9f4:	681a      	ldr	r2, [r3, #0]
9000a9f6:	f022 0201 	bic.w	r2, r2, #1
9000a9fa:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a9fc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000a9fe:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000aa02:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000aa04:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000aa06:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000aa0a:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000aa0c:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000aa10:	2b02      	cmp	r3, #2
9000aa12:	d054      	beq.n	9000aabe <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000aa14:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000aa16:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000aa1a:	2b02      	cmp	r3, #2
9000aa1c:	d043      	beq.n	9000aaa6 <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000aa1e:	6803      	ldr	r3, [r0, #0]
9000aa20:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000aa22:	695b      	ldr	r3, [r3, #20]
9000aa24:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000aa28:	1ad3      	subs	r3, r2, r3
9000aa2a:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000aa2c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa2e:	429a      	cmp	r2, r3
9000aa30:	d048      	beq.n	9000aac4 <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000aa32:	6822      	ldr	r2, [r4, #0]
9000aa34:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000aa36:	f015 0510 	ands.w	r5, r5, #16
9000aa3a:	d138      	bne.n	9000aaae <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
9000aa3c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000aa3e:	2b00      	cmp	r3, #0
9000aa40:	d14b      	bne.n	9000aada <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aa42:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000aa44:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000aa46:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aa48:	f023 0301 	bic.w	r3, r3, #1
9000aa4c:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000aa4e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa50:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa52:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000aa56:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa5a:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000aa5e:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa60:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000aa62:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000aa64:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000aa68:	d034      	beq.n	9000aad4 <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000aa6a:	f7ff f9bb 	bl	90009de4 <HAL_JPEG_EncodeCpltCallback>
}
9000aa6e:	bd38      	pop	{r3, r4, r5, pc}
9000aa70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000aa74:	f7ff bb7c 	b.w	9000a170 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000aa78:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aa7a:	0651      	lsls	r1, r2, #25
9000aa7c:	d5b2      	bpl.n	9000a9e4 <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000aa7e:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000aa80:	4629      	mov	r1, r5
9000aa82:	f7fe fec3 	bl	9000980c <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000aa86:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000aa88:	4629      	mov	r1, r5
9000aa8a:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000aa8c:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000aa8e:	f7f7 fa3f 	bl	90001f10 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000aa92:	6823      	ldr	r3, [r4, #0]
9000aa94:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000aa96:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
9000aa9a:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000aa9c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000aa9e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000aaa2:	639a      	str	r2, [r3, #56]	@ 0x38
9000aaa4:	e79e      	b.n	9000a9e4 <HAL_JPEG_IRQHandler+0x30>
}
9000aaa6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000aaaa:	f000 bb63 	b.w	9000b174 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000aaae:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000aab0:	049b      	lsls	r3, r3, #18
9000aab2:	d485      	bmi.n	9000a9c0 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
9000aab4:	4620      	mov	r0, r4
}
9000aab6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000aaba:	f7ff b9ff 	b.w	90009ebc <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000aabe:	f000 fb59 	bl	9000b174 <HAL_MDMA_Abort_IT>
9000aac2:	e7a7      	b.n	9000aa14 <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aac4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aac6:	4620      	mov	r0, r4
9000aac8:	69e1      	ldr	r1, [r4, #28]
9000aaca:	f7f7 fa6f 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000aace:	2300      	movs	r3, #0
9000aad0:	6263      	str	r3, [r4, #36]	@ 0x24
9000aad2:	e7ae      	b.n	9000aa32 <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000aad4:	f7f7 fb18 	bl	90002108 <HAL_JPEG_DecodeCpltCallback>
}
9000aad8:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000aada:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000aadc:	4620      	mov	r0, r4
9000aade:	69e1      	ldr	r1, [r4, #28]
9000aae0:	f7f7 fa64 	bl	90001fac <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000aae4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000aae6:	6265      	str	r5, [r4, #36]	@ 0x24
9000aae8:	e7ab      	b.n	9000aa42 <HAL_JPEG_IRQHandler+0x8e>
9000aaea:	bf00      	nop

9000aaec <HAL_JPEG_GetState>:
  return hjpeg->State;
9000aaec:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
9000aaf0:	4770      	bx	lr
9000aaf2:	bf00      	nop

9000aaf4 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000aaf4:	2800      	cmp	r0, #0
9000aaf6:	d067      	beq.n	9000abc8 <HAL_LTDC_Init+0xd4>
{
9000aaf8:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000aafa:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
9000aafe:	4604      	mov	r4, r0
9000ab00:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000ab04:	2b00      	cmp	r3, #0
9000ab06:	d05a      	beq.n	9000abbe <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab08:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ab0a:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab0c:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ab10:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab14:	4302      	orrs	r2, r0
9000ab16:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ab18:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab1a:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000ab1c:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ab1e:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000ab22:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000ab24:	4929      	ldr	r1, [pc, #164]	@ (9000abcc <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000ab26:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab28:	6998      	ldr	r0, [r3, #24]
9000ab2a:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000ab2c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000ab2e:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000ab30:	689a      	ldr	r2, [r3, #8]
9000ab32:	400a      	ands	r2, r1
9000ab34:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000ab36:	689a      	ldr	r2, [r3, #8]
9000ab38:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ab3c:	69a0      	ldr	r0, [r4, #24]
9000ab3e:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000ab40:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000ab42:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000ab44:	68da      	ldr	r2, [r3, #12]
9000ab46:	400a      	ands	r2, r1
9000ab48:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000ab4a:	68da      	ldr	r2, [r3, #12]
9000ab4c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ab50:	6a20      	ldr	r0, [r4, #32]
9000ab52:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000ab54:	6a60      	ldr	r0, [r4, #36]	@ 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000ab56:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000ab58:	691a      	ldr	r2, [r3, #16]
9000ab5a:	400a      	ands	r2, r1
9000ab5c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000ab5e:	691a      	ldr	r2, [r3, #16]
9000ab60:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ab64:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000ab66:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000ab68:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000ab6a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000ab6c:	695a      	ldr	r2, [r3, #20]
9000ab6e:	400a      	ands	r2, r1
9000ab70:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000ab72:	695a      	ldr	r2, [r3, #20]
9000ab74:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000ab76:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000ab7a:	430a      	orrs	r2, r1
9000ab7c:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000ab7e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000ab80:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000ab84:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000ab88:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000ab8c:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000ab8e:	6add      	ldr	r5, [r3, #44]	@ 0x2c
9000ab90:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
9000ab94:	432a      	orrs	r2, r5
9000ab96:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000ab9a:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000ab9c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000aba0:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000aba2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000aba4:	f042 0206 	orr.w	r2, r2, #6
9000aba8:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000abaa:	699a      	ldr	r2, [r3, #24]
9000abac:	f042 0201 	orr.w	r2, r2, #1
9000abb0:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000abb2:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000abb4:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000abb8:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
9000abbc:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000abbe:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
9000abc2:	f7f9 fd8d 	bl	900046e0 <HAL_LTDC_MspInit>
9000abc6:	e79f      	b.n	9000ab08 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000abc8:	2001      	movs	r0, #1
}
9000abca:	4770      	bx	lr
9000abcc:	f000f800 	.word	0xf000f800

9000abd0 <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
9000abd0:	4770      	bx	lr
9000abd2:	bf00      	nop

9000abd4 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
9000abd4:	4770      	bx	lr
9000abd6:	bf00      	nop

9000abd8 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000abd8:	6803      	ldr	r3, [r0, #0]
{
9000abda:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000abdc:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
9000abde:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000abe0:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000abe2:	076a      	lsls	r2, r5, #29
9000abe4:	d501      	bpl.n	9000abea <HAL_LTDC_IRQHandler+0x12>
9000abe6:	0771      	lsls	r1, r6, #29
9000abe8:	d41d      	bmi.n	9000ac26 <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000abea:	07aa      	lsls	r2, r5, #30
9000abec:	d501      	bpl.n	9000abf2 <HAL_LTDC_IRQHandler+0x1a>
9000abee:	07b3      	lsls	r3, r6, #30
9000abf0:	d42d      	bmi.n	9000ac4e <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000abf2:	07e8      	lsls	r0, r5, #31
9000abf4:	d501      	bpl.n	9000abfa <HAL_LTDC_IRQHandler+0x22>
9000abf6:	07f1      	lsls	r1, r6, #31
9000abf8:	d440      	bmi.n	9000ac7c <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000abfa:	072a      	lsls	r2, r5, #28
9000abfc:	d501      	bpl.n	9000ac02 <HAL_LTDC_IRQHandler+0x2a>
9000abfe:	0733      	lsls	r3, r6, #28
9000ac00:	d400      	bmi.n	9000ac04 <HAL_LTDC_IRQHandler+0x2c>
}
9000ac02:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000ac04:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000ac06:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000ac08:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000ac0a:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000ac0c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ac0e:	f022 0208 	bic.w	r2, r2, #8
9000ac12:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000ac14:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000ac16:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000ac18:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000ac1c:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000ac20:	f7ff ffd8 	bl	9000abd4 <HAL_LTDC_ReloadEventCallback>
}
9000ac24:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000ac26:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ac28:	f022 0204 	bic.w	r2, r2, #4
9000ac2c:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000ac2e:	2204      	movs	r2, #4
9000ac30:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000ac32:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
9000ac36:	f043 0301 	orr.w	r3, r3, #1
9000ac3a:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000ac3e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000ac40:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000ac44:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000ac48:	f7ff ffc2 	bl	9000abd0 <HAL_LTDC_ErrorCallback>
9000ac4c:	e7cd      	b.n	9000abea <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000ac4e:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000ac50:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000ac52:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ac54:	f022 0202 	bic.w	r2, r2, #2
9000ac58:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000ac5a:	2202      	movs	r2, #2
9000ac5c:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000ac5e:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000ac60:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
9000ac64:	f043 0302 	orr.w	r3, r3, #2
9000ac68:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
9000ac6c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000ac6e:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000ac72:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000ac76:	f7ff ffab 	bl	9000abd0 <HAL_LTDC_ErrorCallback>
9000ac7a:	e7ba      	b.n	9000abf2 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ac7c:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000ac7e:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ac80:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000ac82:	f022 0201 	bic.w	r2, r2, #1
9000ac86:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000ac88:	2201      	movs	r2, #1
9000ac8a:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
9000ac8c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000ac8e:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
9000ac92:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000ac96:	f7f8 fcf1 	bl	9000367c <HAL_LTDC_LineEventCallback>
9000ac9a:	e7ae      	b.n	9000abfa <HAL_LTDC_IRQHandler+0x22>

9000ac9c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000ac9c:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
9000aca0:	2b01      	cmp	r3, #1
9000aca2:	f000 80c6 	beq.w	9000ae32 <HAL_LTDC_ConfigLayer+0x196>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000aca6:	2302      	movs	r3, #2
{
9000aca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000acac:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000acb0:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000acb4:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
{
9000acb8:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000acba:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000acbe:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000acc0:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000acc4:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000acc6:	f102 0684 	add.w	r6, r2, #132	@ 0x84
9000acca:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000accc:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000acd0:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000acd2:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000acd6:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000acda:	f8df a164 	ldr.w	sl, [pc, #356]	@ 9000ae40 <HAL_LTDC_ConfigLayer+0x1a4>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000acde:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000ace2:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
9000ace6:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ace8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000acea:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000acee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000acf0:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000acf2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000acf6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000acf8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000acfc:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000acfe:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000ad00:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ad04:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000ad06:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000ad08:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000ad0c:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000ad10:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ad12:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000ad14:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000ad18:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000ad1c:	440b      	add	r3, r1
9000ad1e:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000ad22:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ad26:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ad2a:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ad2e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ad32:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000ad36:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000ad38:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000ad3c:	68ab      	ldr	r3, [r5, #8]
9000ad3e:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000ad42:	3301      	adds	r3, #1
9000ad44:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000ad48:	4403      	add	r3, r0
9000ad4a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000ad4e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000ad50:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000ad54:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000ad58:	f023 0307 	bic.w	r3, r3, #7
9000ad5c:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000ad60:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000ad64:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000ad68:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000ad6a:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000ad6e:	f895 4031 	ldrb.w	r4, [r5, #49]	@ 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000ad72:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000ad76:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
9000ad7a:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000ad7e:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000ad82:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000ad86:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000ad8a:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000ad8e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
9000ad92:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000ad96:	696b      	ldr	r3, [r5, #20]
9000ad98:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ad9c:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000ada0:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000ada2:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000ada6:	6a28      	ldr	r0, [r5, #32]
9000ada8:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000adaa:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000adae:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000adb2:	f8dc 3028 	ldr.w	r3, [ip, #40]	@ 0x28
9000adb6:	2300      	movs	r3, #0
9000adb8:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000adbc:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
9000adbe:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000adc2:	b3a1      	cbz	r1, 9000ae2e <HAL_LTDC_ConfigLayer+0x192>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000adc4:	2901      	cmp	r1, #1
9000adc6:	d036      	beq.n	9000ae36 <HAL_LTDC_ConfigLayer+0x19a>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
9000adc8:	1e8b      	subs	r3, r1, #2
9000adca:	2907      	cmp	r1, #7
9000adcc:	bf18      	it	ne
9000adce:	2b02      	cmpne	r3, #2
9000add0:	bf94      	ite	ls
9000add2:	2301      	movls	r3, #1
9000add4:	2300      	movhi	r3, #0
9000add6:	3301      	adds	r3, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000add8:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000adda:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000addc:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000ade0:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000ade4:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000ade6:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000ade8:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000adec:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
9000adf0:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
9000adf4:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
9000adf8:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000adfc:	4b0f      	ldr	r3, [pc, #60]	@ (9000ae3c <HAL_LTDC_ConfigLayer+0x1a0>)
9000adfe:	f8dc 1030 	ldr.w	r1, [ip, #48]	@ 0x30
9000ae02:	400b      	ands	r3, r1
9000ae04:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000ae08:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000ae0c:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000ae0e:	f859 3006 	ldr.w	r3, [r9, r6]
9000ae12:	4313      	orrs	r3, r2
9000ae14:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000ae18:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000ae1a:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
9000ae1e:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000ae20:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
9000ae24:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
9000ae28:	b003      	add	sp, #12
9000ae2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 4U;
9000ae2e:	2304      	movs	r3, #4
9000ae30:	e7d2      	b.n	9000add8 <HAL_LTDC_ConfigLayer+0x13c>
  __HAL_LOCK(hltdc);
9000ae32:	2002      	movs	r0, #2
}
9000ae34:	4770      	bx	lr
    tmp = 3U;
9000ae36:	2303      	movs	r3, #3
9000ae38:	e7ce      	b.n	9000add8 <HAL_LTDC_ConfigLayer+0x13c>
9000ae3a:	bf00      	nop
9000ae3c:	fffff800 	.word	0xfffff800
9000ae40:	fffff8f8 	.word	0xfffff8f8

9000ae44 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000ae44:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
9000ae48:	2a01      	cmp	r2, #1
9000ae4a:	d019      	beq.n	9000ae80 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ae4c:	6802      	ldr	r2, [r0, #0]
9000ae4e:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ae50:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000ae52:	f04f 0c00 	mov.w	ip, #0
{
9000ae56:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000ae58:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ae5c:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000ae5e:	4c09      	ldr	r4, [pc, #36]	@ (9000ae84 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000ae60:	f020 0001 	bic.w	r0, r0, #1
9000ae64:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000ae66:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000ae68:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000ae6a:	6b51      	ldr	r1, [r2, #52]	@ 0x34
9000ae6c:	4301      	orrs	r1, r0
9000ae6e:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000ae70:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
9000ae74:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000ae76:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000ae7a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ae7e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000ae80:	2002      	movs	r0, #2
}
9000ae82:	4770      	bx	lr
9000ae84:	50001000 	.word	0x50001000

9000ae88 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000ae88:	b538      	push	{r3, r4, r5, lr}
9000ae8a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000ae8c:	f7fd f836 	bl	90007efc <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000ae90:	2c00      	cmp	r4, #0
9000ae92:	d058      	beq.n	9000af46 <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000ae94:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000ae96:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000ae98:	2100      	movs	r1, #0
9000ae9a:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000ae9c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000aea0:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000aea4:	68da      	ldr	r2, [r3, #12]
9000aea6:	f022 0201 	bic.w	r2, r2, #1
9000aeaa:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000aeac:	e005      	b.n	9000aeba <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000aeae:	f7fd f825 	bl	90007efc <HAL_GetTick>
9000aeb2:	1b43      	subs	r3, r0, r5
9000aeb4:	2b05      	cmp	r3, #5
9000aeb6:	d841      	bhi.n	9000af3c <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000aeb8:	6823      	ldr	r3, [r4, #0]
9000aeba:	68da      	ldr	r2, [r3, #12]
9000aebc:	07d2      	lsls	r2, r2, #31
9000aebe:	d4f6      	bmi.n	9000aeae <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000aec0:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000aec4:	69e0      	ldr	r0, [r4, #28]
9000aec6:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000aec8:	68e1      	ldr	r1, [r4, #12]
9000aeca:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000aecc:	4302      	orrs	r2, r0
9000aece:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000aed0:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000aed2:	4302      	orrs	r2, r0
9000aed4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000aed6:	4302      	orrs	r2, r0
9000aed8:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000aeda:	4302      	orrs	r2, r0
9000aedc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000aede:	4302      	orrs	r2, r0
9000aee0:	68a0      	ldr	r0, [r4, #8]
9000aee2:	4302      	orrs	r2, r0
9000aee4:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000aee6:	3801      	subs	r0, #1
9000aee8:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aeec:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000aeee:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aef0:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000aef4:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000aef6:	d103      	bne.n	9000af00 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000aef8:	691a      	ldr	r2, [r3, #16]
9000aefa:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000aefe:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000af00:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000af02:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000af04:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000af06:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000af08:	db1f      	blt.n	9000af4a <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000af0a:	b292      	uxth	r2, r2
9000af0c:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000af0e:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000af10:	2a00      	cmp	r2, #0
9000af12:	db24      	blt.n	9000af5e <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000af14:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000af16:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000af1a:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000af1e:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000af20:	d029      	beq.n	9000af76 <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000af22:	b2c0      	uxtb	r0, r0
9000af24:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000af26:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000af28:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000af2a:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000af2c:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000af2e:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000af30:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000af32:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000af36:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000af3a:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000af3c:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000af3e:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000af40:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000af42:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000af46:	2001      	movs	r0, #1
}
9000af48:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000af4a:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000af4c:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000af4e:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000af52:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000af54:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000af56:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000af58:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000af5a:	2a00      	cmp	r2, #0
9000af5c:	dada      	bge.n	9000af14 <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000af5e:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000af60:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000af62:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000af66:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000af6a:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000af6c:	6a19      	ldr	r1, [r3, #32]
9000af6e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000af72:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000af74:	d1d5      	bne.n	9000af22 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000af76:	2200      	movs	r2, #0
9000af78:	629a      	str	r2, [r3, #40]	@ 0x28
9000af7a:	e7d4      	b.n	9000af26 <HAL_MDMA_Init+0x9e>

9000af7c <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000af7c:	b1f8      	cbz	r0, 9000afbe <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000af7e:	6802      	ldr	r2, [r0, #0]
9000af80:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000af82:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000af84:	68d0      	ldr	r0, [r2, #12]
{
9000af86:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000af88:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000af8c:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000af8e:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000af90:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000af92:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000af94:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000af96:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000af98:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000af9a:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000af9c:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000af9e:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000afa0:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000afa2:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000afa4:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000afa6:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000afa8:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000afaa:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000afae:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000afb2:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000afb6:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000afb8:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000afbc:	4770      	bx	lr
    return HAL_ERROR;
9000afbe:	2001      	movs	r0, #1
}
9000afc0:	4770      	bx	lr
9000afc2:	bf00      	nop

9000afc4 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000afc4:	b308      	cbz	r0, 9000b00a <HAL_MDMA_ConfigPostRequestMask+0x46>
9000afc6:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000afc8:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000afcc:	2801      	cmp	r0, #1
9000afce:	d01e      	beq.n	9000b00e <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000afd0:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000afd2:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000afd6:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000afda:	45f4      	cmp	ip, lr
9000afdc:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000afe0:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000afe4:	d004      	beq.n	9000aff0 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000afe6:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000afe8:	2200      	movs	r2, #0
9000afea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000afee:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000aff0:	681c      	ldr	r4, [r3, #0]
9000aff2:	6925      	ldr	r5, [r4, #16]
9000aff4:	006d      	lsls	r5, r5, #1
9000aff6:	d4f7      	bmi.n	9000afe8 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000aff8:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000affa:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000affc:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000affe:	b941      	cbnz	r1, 9000b012 <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000b000:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000b004:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000b006:	2000      	movs	r0, #0
9000b008:	e7ee      	b.n	9000afe8 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000b00a:	2001      	movs	r0, #1
9000b00c:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000b00e:	2002      	movs	r0, #2
}
9000b010:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000b012:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000b016:	6122      	str	r2, [r4, #16]
9000b018:	e7f5      	b.n	9000b006 <HAL_MDMA_ConfigPostRequestMask+0x42>
9000b01a:	bf00      	nop

9000b01c <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000b01c:	2800      	cmp	r0, #0
9000b01e:	d06b      	beq.n	9000b0f8 <HAL_MDMA_Start_IT+0xdc>
{
9000b020:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000b022:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000b026:	2c01      	cmp	r4, #1
9000b028:	d009      	beq.n	9000b03e <HAL_MDMA_Start_IT+0x22>
9000b02a:	2401      	movs	r4, #1
9000b02c:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000b030:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000b034:	2c01      	cmp	r4, #1
9000b036:	d005      	beq.n	9000b044 <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000b038:	2300      	movs	r3, #0
9000b03a:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000b03e:	2002      	movs	r0, #2
}
9000b040:	bc70      	pop	{r4, r5, r6}
9000b042:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b044:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b046:	9e03      	ldr	r6, [sp, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b048:	4d2c      	ldr	r5, [pc, #176]	@ (9000b0fc <HAL_MDMA_Start_IT+0xe0>)
9000b04a:	f3c3 0310 	ubfx	r3, r3, #0, #17
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000b04e:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b052:	2400      	movs	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b054:	f106 3cff 	add.w	ip, r6, #4294967295
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b058:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000b05c:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000b05e:	6804      	ldr	r4, [r0, #0]
9000b060:	68e6      	ldr	r6, [r4, #12]
9000b062:	f026 0601 	bic.w	r6, r6, #1
9000b066:	60e6      	str	r6, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000b068:	6966      	ldr	r6, [r4, #20]
9000b06a:	ea05 0506 	and.w	r5, r5, r6
9000b06e:	ea45 0503 	orr.w	r5, r5, r3
9000b072:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000b074:	6963      	ldr	r3, [r4, #20]
9000b076:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000b07a:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000b07e:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000b080:	f04f 031f 	mov.w	r3, #31
9000b084:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000b086:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000b088:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000b08a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b08c:	bf0c      	ite	eq
9000b08e:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b092:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000b096:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000b09a:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000b09c:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000b09e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b0a0:	bf0c      	ite	eq
9000b0a2:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000b0a6:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000b0aa:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000b0ac:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000b0ae:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000b0b0:	68e3      	ldr	r3, [r4, #12]
9000b0b2:	f043 0306 	orr.w	r3, r3, #6
9000b0b6:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000b0b8:	b11a      	cbz	r2, 9000b0c2 <HAL_MDMA_Start_IT+0xa6>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000b0ba:	68e3      	ldr	r3, [r4, #12]
9000b0bc:	f043 0310 	orr.w	r3, r3, #16
9000b0c0:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b0c2:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000b0c4:	b11b      	cbz	r3, 9000b0ce <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000b0c6:	68e3      	ldr	r3, [r4, #12]
9000b0c8:	f043 0308 	orr.w	r3, r3, #8
9000b0cc:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000b0ce:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000b0d0:	b11b      	cbz	r3, 9000b0da <HAL_MDMA_Start_IT+0xbe>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000b0d2:	68e3      	ldr	r3, [r4, #12]
9000b0d4:	f043 0320 	orr.w	r3, r3, #32
9000b0d8:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000b0da:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b0dc:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000b0de:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b0e2:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000b0e6:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000b0e8:	d103      	bne.n	9000b0f2 <HAL_MDMA_Start_IT+0xd6>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000b0ea:	68e3      	ldr	r3, [r4, #12]
9000b0ec:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b0f0:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000b0f2:	2000      	movs	r0, #0
}
9000b0f4:	bc70      	pop	{r4, r5, r6}
9000b0f6:	4770      	bx	lr
    return HAL_ERROR;
9000b0f8:	2001      	movs	r0, #1
}
9000b0fa:	4770      	bx	lr
9000b0fc:	fffe0000 	.word	0xfffe0000

9000b100 <HAL_MDMA_Abort>:
{
9000b100:	b538      	push	{r3, r4, r5, lr}
9000b102:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000b104:	f7fc fefa 	bl	90007efc <HAL_GetTick>
  if(hmdma == NULL)
9000b108:	b334      	cbz	r4, 9000b158 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b10a:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000b10e:	2b02      	cmp	r3, #2
9000b110:	d11d      	bne.n	9000b14e <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b112:	6822      	ldr	r2, [r4, #0]
9000b114:	4605      	mov	r5, r0
9000b116:	68d3      	ldr	r3, [r2, #12]
9000b118:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000b11c:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000b11e:	68d3      	ldr	r3, [r2, #12]
9000b120:	f023 0301 	bic.w	r3, r3, #1
9000b124:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b126:	e005      	b.n	9000b134 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000b128:	f7fc fee8 	bl	90007efc <HAL_GetTick>
9000b12c:	1b43      	subs	r3, r0, r5
9000b12e:	2b05      	cmp	r3, #5
9000b130:	d814      	bhi.n	9000b15c <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b132:	6822      	ldr	r2, [r4, #0]
9000b134:	68d3      	ldr	r3, [r2, #12]
9000b136:	f013 0301 	ands.w	r3, r3, #1
9000b13a:	d1f5      	bne.n	9000b128 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b13c:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000b13e:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000b140:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000b142:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000b144:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000b148:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000b14c:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b14e:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000b150:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b152:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000b154:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000b158:	2001      	movs	r0, #1
}
9000b15a:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b15c:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000b15e:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b160:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b162:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000b166:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000b16a:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000b16c:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000b170:	e7f2      	b.n	9000b158 <HAL_MDMA_Abort+0x58>
9000b172:	bf00      	nop

9000b174 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000b174:	4603      	mov	r3, r0
9000b176:	b128      	cbz	r0, 9000b184 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000b178:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000b17c:	2a02      	cmp	r2, #2
9000b17e:	d003      	beq.n	9000b188 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000b180:	2280      	movs	r2, #128	@ 0x80
9000b182:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000b184:	2001      	movs	r0, #1
9000b186:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000b188:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b18a:	2104      	movs	r1, #4
  return HAL_OK;
9000b18c:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b18e:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000b192:	68d3      	ldr	r3, [r2, #12]
9000b194:	f023 0301 	bic.w	r3, r3, #1
9000b198:	60d3      	str	r3, [r2, #12]
}
9000b19a:	4770      	bx	lr

9000b19c <HAL_MDMA_IRQHandler>:
{
9000b19c:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000b19e:	2300      	movs	r3, #0
{
9000b1a0:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b1a2:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000b1a6:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000b1a8:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b1aa:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b1ac:	4b57      	ldr	r3, [pc, #348]	@ (9000b30c <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b1ae:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b1b0:	4a57      	ldr	r2, [pc, #348]	@ (9000b310 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000b1b2:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000b1b4:	6823      	ldr	r3, [r4, #0]
9000b1b6:	441a      	add	r2, r3
9000b1b8:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000b1bc:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000b1c0:	4202      	tst	r2, r0
9000b1c2:	f000 80a0 	beq.w	9000b306 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000b1c6:	681a      	ldr	r2, [r3, #0]
9000b1c8:	07d1      	lsls	r1, r2, #31
9000b1ca:	d529      	bpl.n	9000b220 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000b1cc:	68da      	ldr	r2, [r3, #12]
9000b1ce:	0792      	lsls	r2, r2, #30
9000b1d0:	d526      	bpl.n	9000b220 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000b1d2:	68da      	ldr	r2, [r3, #12]
9000b1d4:	f022 0202 	bic.w	r2, r2, #2
9000b1d8:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000b1da:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b1dc:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000b1de:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000b1e0:	bf54      	ite	pl
9000b1e2:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000b1e6:	f041 0102 	orrmi.w	r1, r1, #2
9000b1ea:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000b1ec:	0591      	lsls	r1, r2, #22
9000b1ee:	d503      	bpl.n	9000b1f8 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000b1f0:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b1f2:	f041 0104 	orr.w	r1, r1, #4
9000b1f6:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000b1f8:	05d0      	lsls	r0, r2, #23
9000b1fa:	d503      	bpl.n	9000b204 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000b1fc:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b1fe:	f041 0108 	orr.w	r1, r1, #8
9000b202:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000b204:	0551      	lsls	r1, r2, #21
9000b206:	d503      	bpl.n	9000b210 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000b208:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b20a:	f041 0110 	orr.w	r1, r1, #16
9000b20e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000b210:	0510      	lsls	r0, r2, #20
9000b212:	d503      	bpl.n	9000b21c <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000b214:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000b216:	f042 0220 	orr.w	r2, r2, #32
9000b21a:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000b21c:	2201      	movs	r2, #1
9000b21e:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000b220:	681a      	ldr	r2, [r3, #0]
9000b222:	06d1      	lsls	r1, r2, #27
9000b224:	d509      	bpl.n	9000b23a <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000b226:	68da      	ldr	r2, [r3, #12]
9000b228:	0692      	lsls	r2, r2, #26
9000b22a:	d506      	bpl.n	9000b23a <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b22c:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000b22e:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000b230:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000b232:	b112      	cbz	r2, 9000b23a <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000b234:	4620      	mov	r0, r4
9000b236:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000b238:	6823      	ldr	r3, [r4, #0]
9000b23a:	681a      	ldr	r2, [r3, #0]
9000b23c:	0710      	lsls	r0, r2, #28
9000b23e:	d509      	bpl.n	9000b254 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000b240:	68da      	ldr	r2, [r3, #12]
9000b242:	06d1      	lsls	r1, r2, #27
9000b244:	d506      	bpl.n	9000b254 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b246:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000b248:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000b24a:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000b24c:	b112      	cbz	r2, 9000b254 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000b24e:	4620      	mov	r0, r4
9000b250:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000b252:	6823      	ldr	r3, [r4, #0]
9000b254:	681a      	ldr	r2, [r3, #0]
9000b256:	0752      	lsls	r2, r2, #29
9000b258:	d509      	bpl.n	9000b26e <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000b25a:	68da      	ldr	r2, [r3, #12]
9000b25c:	0710      	lsls	r0, r2, #28
9000b25e:	d506      	bpl.n	9000b26e <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b260:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b262:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000b264:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000b266:	b112      	cbz	r2, 9000b26e <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000b268:	4620      	mov	r0, r4
9000b26a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000b26c:	6823      	ldr	r3, [r4, #0]
9000b26e:	681a      	ldr	r2, [r3, #0]
9000b270:	0791      	lsls	r1, r2, #30
9000b272:	d516      	bpl.n	9000b2a2 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000b274:	68da      	ldr	r2, [r3, #12]
9000b276:	0752      	lsls	r2, r2, #29
9000b278:	d513      	bpl.n	9000b2a2 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000b27a:	68da      	ldr	r2, [r3, #12]
9000b27c:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000b280:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000b282:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000b286:	2a04      	cmp	r2, #4
9000b288:	d034      	beq.n	9000b2f4 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b28a:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000b28c:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000b28e:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000b290:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000b292:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000b294:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000b298:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000b29c:	b10b      	cbz	r3, 9000b2a2 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000b29e:	4620      	mov	r0, r4
9000b2a0:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000b2a2:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000b2a4:	2b00      	cmp	r3, #0
9000b2a6:	d02e      	beq.n	9000b306 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000b2a8:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b2aa:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000b2ac:	4b19      	ldr	r3, [pc, #100]	@ (9000b314 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000b2ae:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000b2b2:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000b2b6:	68cb      	ldr	r3, [r1, #12]
9000b2b8:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000b2bc:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000b2be:	60cb      	str	r3, [r1, #12]
9000b2c0:	e002      	b.n	9000b2c8 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000b2c2:	68cb      	ldr	r3, [r1, #12]
9000b2c4:	07d8      	lsls	r0, r3, #31
9000b2c6:	d504      	bpl.n	9000b2d2 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000b2c8:	9b01      	ldr	r3, [sp, #4]
9000b2ca:	3301      	adds	r3, #1
9000b2cc:	4293      	cmp	r3, r2
9000b2ce:	9301      	str	r3, [sp, #4]
9000b2d0:	d9f7      	bls.n	9000b2c2 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000b2d2:	2300      	movs	r3, #0
9000b2d4:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000b2d8:	68cb      	ldr	r3, [r1, #12]
9000b2da:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000b2dc:	bf4c      	ite	mi
9000b2de:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000b2e0:	2301      	movpl	r3, #1
9000b2e2:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000b2e6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000b2e8:	b16b      	cbz	r3, 9000b306 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000b2ea:	4620      	mov	r0, r4
}
9000b2ec:	b003      	add	sp, #12
9000b2ee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000b2f2:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000b2f4:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000b2f6:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000b2f8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000b2fa:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000b2fe:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000b302:	2b00      	cmp	r3, #0
9000b304:	d1f1      	bne.n	9000b2ea <HAL_MDMA_IRQHandler+0x14e>
}
9000b306:	b003      	add	sp, #12
9000b308:	bd30      	pop	{r4, r5, pc}
9000b30a:	bf00      	nop
9000b30c:	24000130 	.word	0x24000130
9000b310:	adffffc0 	.word	0xadffffc0
9000b314:	1b4e81b5 	.word	0x1b4e81b5

9000b318 <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
9000b318:	b570      	push	{r4, r5, r6, lr}
9000b31a:	b082      	sub	sp, #8
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
9000b31c:	b1d0      	cbz	r0, 9000b354 <HAL_PCD_Init+0x3c>
  }

  /* Check the parameters */
  assert_param(IS_PCD_ALL_INSTANCE(hpcd->Instance));

  if (hpcd->State == HAL_PCD_STATE_RESET)
9000b31e:	f890 3495 	ldrb.w	r3, [r0, #1173]	@ 0x495
9000b322:	4604      	mov	r4, r0
9000b324:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000b328:	2b00      	cmp	r3, #0
9000b32a:	f000 81eb 	beq.w	9000b704 <HAL_PCD_Init+0x3ec>
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
9000b32e:	2603      	movs	r6, #3

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
9000b330:	6820      	ldr	r0, [r4, #0]

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
9000b332:	1d25      	adds	r5, r4, #4
  hpcd->State = HAL_PCD_STATE_BUSY;
9000b334:	f884 6495 	strb.w	r6, [r4, #1173]	@ 0x495
  __HAL_PCD_DISABLE(hpcd);
9000b338:	f003 fc62 	bl	9000ec00 <USB_DisableGlobalInt>
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
9000b33c:	7c23      	ldrb	r3, [r4, #16]
9000b33e:	f88d 3000 	strb.w	r3, [sp]
9000b342:	6820      	ldr	r0, [r4, #0]
9000b344:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9000b348:	f003 fb4a 	bl	9000e9e0 <USB_CoreInit>
9000b34c:	b130      	cbz	r0, 9000b35c <HAL_PCD_Init+0x44>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
9000b34e:	2302      	movs	r3, #2
9000b350:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
    return HAL_ERROR;
9000b354:	2501      	movs	r5, #1
  }

  (void)USB_DevDisconnect(hpcd->Instance);

  return HAL_OK;
}
9000b356:	4628      	mov	r0, r5
9000b358:	b002      	add	sp, #8
9000b35a:	bd70      	pop	{r4, r5, r6, pc}
  if (USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE) != HAL_OK)
9000b35c:	4601      	mov	r1, r0
9000b35e:	6820      	ldr	r0, [r4, #0]
9000b360:	f003 fc56 	bl	9000ec10 <USB_SetCurrentMode>
9000b364:	2800      	cmp	r0, #0
9000b366:	d1f2      	bne.n	9000b34e <HAL_PCD_Init+0x36>
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b368:	7922      	ldrb	r2, [r4, #4]
9000b36a:	2a00      	cmp	r2, #0
9000b36c:	f000 81b1 	beq.w	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->IN_ep[i].num = i;
9000b370:	f44f 7380 	mov.w	r3, #256	@ 0x100
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b374:	2a01      	cmp	r2, #1
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b376:	85e0      	strh	r0, [r4, #46]	@ 0x2e
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b378:	7620      	strb	r0, [r4, #24]
    hpcd->IN_ep[i].xfer_len = 0U;
9000b37a:	6260      	str	r0, [r4, #36]	@ 0x24
    hpcd->IN_ep[i].num = i;
9000b37c:	82a3      	strh	r3, [r4, #20]
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b37e:	e9c4 0007 	strd	r0, r0, [r4, #28]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b382:	f000 81c8 	beq.w	9000b716 <HAL_PCD_Init+0x3fe>
    hpcd->IN_ep[i].num = i;
9000b386:	f240 1301 	movw	r3, #257	@ 0x101
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b38a:	2a02      	cmp	r2, #2
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b38c:	f884 003c 	strb.w	r0, [r4, #60]	@ 0x3c
    hpcd->IN_ep[i].num = i;
9000b390:	8723      	strh	r3, [r4, #56]	@ 0x38
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b392:	f04f 0301 	mov.w	r3, #1
    hpcd->IN_ep[i].xfer_len = 0U;
9000b396:	64a0      	str	r0, [r4, #72]	@ 0x48
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b398:	f8a4 3052 	strh.w	r3, [r4, #82]	@ 0x52
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b39c:	e9c4 0010 	strd	r0, r0, [r4, #64]	@ 0x40
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3a0:	f000 80e0 	beq.w	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b3a4:	f44f 7381 	mov.w	r3, #258	@ 0x102
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3a8:	2a03      	cmp	r2, #3
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b3aa:	f884 0060 	strb.w	r0, [r4, #96]	@ 0x60
    hpcd->IN_ep[i].num = i;
9000b3ae:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3b2:	f04f 0302 	mov.w	r3, #2
    hpcd->IN_ep[i].xfer_len = 0U;
9000b3b6:	66e0      	str	r0, [r4, #108]	@ 0x6c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3b8:	f8a4 3076 	strh.w	r3, [r4, #118]	@ 0x76
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b3bc:	e9c4 0019 	strd	r0, r0, [r4, #100]	@ 0x64
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3c0:	f000 80d0 	beq.w	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b3c4:	f240 1303 	movw	r3, #259	@ 0x103
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3c8:	2a04      	cmp	r2, #4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3ca:	f8a4 609a 	strh.w	r6, [r4, #154]	@ 0x9a
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b3ce:	f884 0084 	strb.w	r0, [r4, #132]	@ 0x84
    hpcd->IN_ep[i].xfer_len = 0U;
9000b3d2:	f8c4 0090 	str.w	r0, [r4, #144]	@ 0x90
    hpcd->IN_ep[i].num = i;
9000b3d6:	f8a4 3080 	strh.w	r3, [r4, #128]	@ 0x80
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b3da:	e9c4 0022 	strd	r0, r0, [r4, #136]	@ 0x88
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3de:	f000 80c1 	beq.w	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b3e2:	f44f 7382 	mov.w	r3, #260	@ 0x104
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b3e6:	2a05      	cmp	r2, #5
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b3e8:	f884 00a8 	strb.w	r0, [r4, #168]	@ 0xa8
    hpcd->IN_ep[i].num = i;
9000b3ec:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3f0:	f04f 0304 	mov.w	r3, #4
    hpcd->IN_ep[i].xfer_len = 0U;
9000b3f4:	f8c4 00b4 	str.w	r0, [r4, #180]	@ 0xb4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b3f8:	f8a4 30be 	strh.w	r3, [r4, #190]	@ 0xbe
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b3fc:	e9c4 002b 	strd	r0, r0, [r4, #172]	@ 0xac
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b400:	f000 80b0 	beq.w	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b404:	f240 1305 	movw	r3, #261	@ 0x105
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b408:	2a06      	cmp	r2, #6
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b40a:	f884 00cc 	strb.w	r0, [r4, #204]	@ 0xcc
    hpcd->IN_ep[i].num = i;
9000b40e:	f8a4 30c8 	strh.w	r3, [r4, #200]	@ 0xc8
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b412:	f04f 0305 	mov.w	r3, #5
    hpcd->IN_ep[i].xfer_len = 0U;
9000b416:	f8c4 00d8 	str.w	r0, [r4, #216]	@ 0xd8
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b41a:	f8a4 30e2 	strh.w	r3, [r4, #226]	@ 0xe2
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b41e:	e9c4 0034 	strd	r0, r0, [r4, #208]	@ 0xd0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b422:	f000 809f 	beq.w	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b426:	f44f 7383 	mov.w	r3, #262	@ 0x106
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b42a:	2a07      	cmp	r2, #7
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b42c:	f884 00f0 	strb.w	r0, [r4, #240]	@ 0xf0
    hpcd->IN_ep[i].num = i;
9000b430:	f8a4 30ec 	strh.w	r3, [r4, #236]	@ 0xec
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b434:	f04f 0306 	mov.w	r3, #6
    hpcd->IN_ep[i].xfer_len = 0U;
9000b438:	f8c4 00fc 	str.w	r0, [r4, #252]	@ 0xfc
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b43c:	f8a4 3106 	strh.w	r3, [r4, #262]	@ 0x106
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b440:	e9c4 003d 	strd	r0, r0, [r4, #244]	@ 0xf4
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b444:	f000 808e 	beq.w	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b448:	f240 1107 	movw	r1, #263	@ 0x107
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b44c:	2300      	movs	r3, #0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b44e:	2a08      	cmp	r2, #8
    hpcd->IN_ep[i].num = i;
9000b450:	f8a4 1110 	strh.w	r1, [r4, #272]	@ 0x110
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b454:	f04f 0107 	mov.w	r1, #7
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b458:	f884 3114 	strb.w	r3, [r4, #276]	@ 0x114
    hpcd->IN_ep[i].xfer_len = 0U;
9000b45c:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b460:	f8a4 112a 	strh.w	r1, [r4, #298]	@ 0x12a
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b464:	e9c4 3346 	strd	r3, r3, [r4, #280]	@ 0x118
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b468:	d07c      	beq.n	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b46a:	f44f 7184 	mov.w	r1, #264	@ 0x108
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b46e:	2a09      	cmp	r2, #9
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b470:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
    hpcd->IN_ep[i].num = i;
9000b474:	f8a4 1134 	strh.w	r1, [r4, #308]	@ 0x134
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b478:	f04f 0108 	mov.w	r1, #8
    hpcd->IN_ep[i].xfer_len = 0U;
9000b47c:	f8c4 3144 	str.w	r3, [r4, #324]	@ 0x144
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b480:	f8a4 114e 	strh.w	r1, [r4, #334]	@ 0x14e
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b484:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b488:	d06c      	beq.n	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b48a:	f240 1109 	movw	r1, #265	@ 0x109
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b48e:	2a0a      	cmp	r2, #10
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b490:	f884 315c 	strb.w	r3, [r4, #348]	@ 0x15c
    hpcd->IN_ep[i].num = i;
9000b494:	f8a4 1158 	strh.w	r1, [r4, #344]	@ 0x158
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b498:	f04f 0109 	mov.w	r1, #9
    hpcd->IN_ep[i].xfer_len = 0U;
9000b49c:	f8c4 3168 	str.w	r3, [r4, #360]	@ 0x168
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4a0:	f8a4 1172 	strh.w	r1, [r4, #370]	@ 0x172
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b4a4:	e9c4 3358 	strd	r3, r3, [r4, #352]	@ 0x160
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4a8:	d05c      	beq.n	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b4aa:	f44f 7185 	mov.w	r1, #266	@ 0x10a
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4ae:	2a0b      	cmp	r2, #11
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b4b0:	f884 3180 	strb.w	r3, [r4, #384]	@ 0x180
    hpcd->IN_ep[i].num = i;
9000b4b4:	f8a4 117c 	strh.w	r1, [r4, #380]	@ 0x17c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4b8:	f04f 010a 	mov.w	r1, #10
    hpcd->IN_ep[i].xfer_len = 0U;
9000b4bc:	f8c4 318c 	str.w	r3, [r4, #396]	@ 0x18c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4c0:	f8a4 1196 	strh.w	r1, [r4, #406]	@ 0x196
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b4c4:	e9c4 3361 	strd	r3, r3, [r4, #388]	@ 0x184
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4c8:	d04c      	beq.n	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b4ca:	f240 110b 	movw	r1, #267	@ 0x10b
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4ce:	2a0c      	cmp	r2, #12
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b4d0:	f884 31a4 	strb.w	r3, [r4, #420]	@ 0x1a4
    hpcd->IN_ep[i].num = i;
9000b4d4:	f8a4 11a0 	strh.w	r1, [r4, #416]	@ 0x1a0
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4d8:	f04f 010b 	mov.w	r1, #11
    hpcd->IN_ep[i].xfer_len = 0U;
9000b4dc:	f8c4 31b0 	str.w	r3, [r4, #432]	@ 0x1b0
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4e0:	f8a4 11ba 	strh.w	r1, [r4, #442]	@ 0x1ba
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b4e4:	e9c4 336a 	strd	r3, r3, [r4, #424]	@ 0x1a8
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4e8:	d03c      	beq.n	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b4ea:	f44f 7186 	mov.w	r1, #268	@ 0x10c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b4ee:	2a0d      	cmp	r2, #13
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b4f0:	f884 31c8 	strb.w	r3, [r4, #456]	@ 0x1c8
    hpcd->IN_ep[i].num = i;
9000b4f4:	f8a4 11c4 	strh.w	r1, [r4, #452]	@ 0x1c4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b4f8:	f04f 010c 	mov.w	r1, #12
    hpcd->IN_ep[i].xfer_len = 0U;
9000b4fc:	f8c4 31d4 	str.w	r3, [r4, #468]	@ 0x1d4
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b500:	f8a4 11de 	strh.w	r1, [r4, #478]	@ 0x1de
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b504:	e9c4 3373 	strd	r3, r3, [r4, #460]	@ 0x1cc
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b508:	d02c      	beq.n	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b50a:	f240 110d 	movw	r1, #269	@ 0x10d
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b50e:	2a0e      	cmp	r2, #14
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b510:	f884 31ec 	strb.w	r3, [r4, #492]	@ 0x1ec
    hpcd->IN_ep[i].num = i;
9000b514:	f8a4 11e8 	strh.w	r1, [r4, #488]	@ 0x1e8
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b518:	f04f 010d 	mov.w	r1, #13
    hpcd->IN_ep[i].xfer_len = 0U;
9000b51c:	f8c4 31f8 	str.w	r3, [r4, #504]	@ 0x1f8
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b520:	f8a4 1202 	strh.w	r1, [r4, #514]	@ 0x202
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b524:	e9c4 337c 	strd	r3, r3, [r4, #496]	@ 0x1f0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b528:	d01c      	beq.n	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b52a:	f44f 7187 	mov.w	r1, #270	@ 0x10e
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b52e:	2a0f      	cmp	r2, #15
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b530:	f884 3210 	strb.w	r3, [r4, #528]	@ 0x210
    hpcd->IN_ep[i].num = i;
9000b534:	f8a4 120c 	strh.w	r1, [r4, #524]	@ 0x20c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b538:	f04f 010e 	mov.w	r1, #14
    hpcd->IN_ep[i].xfer_len = 0U;
9000b53c:	f8c4 321c 	str.w	r3, [r4, #540]	@ 0x21c
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b540:	f8a4 1226 	strh.w	r1, [r4, #550]	@ 0x226
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b544:	e9c4 3385 	strd	r3, r3, [r4, #532]	@ 0x214
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b548:	d00c      	beq.n	9000b564 <HAL_PCD_Init+0x24c>
    hpcd->IN_ep[i].num = i;
9000b54a:	f240 110f 	movw	r1, #271	@ 0x10f
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
9000b54e:	f884 3234 	strb.w	r3, [r4, #564]	@ 0x234
    hpcd->IN_ep[i].xfer_len = 0U;
9000b552:	f8c4 3240 	str.w	r3, [r4, #576]	@ 0x240
    hpcd->IN_ep[i].num = i;
9000b556:	f8a4 1230 	strh.w	r1, [r4, #560]	@ 0x230
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b55a:	210f      	movs	r1, #15
    hpcd->IN_ep[i].xfer_buff = 0U;
9000b55c:	e9c4 338e 	strd	r3, r3, [r4, #568]	@ 0x238
    hpcd->IN_ep[i].tx_fifo_num = i;
9000b560:	f8a4 124a 	strh.w	r1, [r4, #586]	@ 0x24a
    hpcd->OUT_ep[i].num = i;
9000b564:	2300      	movs	r3, #0
9000b566:	2101      	movs	r1, #1
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b568:	2a02      	cmp	r2, #2
    hpcd->OUT_ep[i].num = i;
9000b56a:	f8a4 3254 	strh.w	r3, [r4, #596]	@ 0x254
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b56e:	f884 3258 	strb.w	r3, [r4, #600]	@ 0x258
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b572:	f8c4 3264 	str.w	r3, [r4, #612]	@ 0x264
    hpcd->OUT_ep[i].num = i;
9000b576:	f8a4 1278 	strh.w	r1, [r4, #632]	@ 0x278
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b57a:	f884 327c 	strb.w	r3, [r4, #636]	@ 0x27c
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b57e:	f8c4 3288 	str.w	r3, [r4, #648]	@ 0x288
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b582:	e9c4 3397 	strd	r3, r3, [r4, #604]	@ 0x25c
9000b586:	e9c4 33a0 	strd	r3, r3, [r4, #640]	@ 0x280
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b58a:	f000 80a2 	beq.w	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b58e:	2102      	movs	r1, #2
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b590:	2a03      	cmp	r2, #3
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b592:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
    hpcd->OUT_ep[i].num = i;
9000b596:	f8a4 129c 	strh.w	r1, [r4, #668]	@ 0x29c
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b59a:	f8c4 32ac 	str.w	r3, [r4, #684]	@ 0x2ac
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b59e:	e9c4 33a9 	strd	r3, r3, [r4, #676]	@ 0x2a4
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5a2:	f000 8096 	beq.w	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b5a6:	2103      	movs	r1, #3
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5a8:	2a04      	cmp	r2, #4
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b5aa:	f884 32c4 	strb.w	r3, [r4, #708]	@ 0x2c4
    hpcd->OUT_ep[i].num = i;
9000b5ae:	f8a4 12c0 	strh.w	r1, [r4, #704]	@ 0x2c0
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b5b2:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b5b6:	e9c4 33b2 	strd	r3, r3, [r4, #712]	@ 0x2c8
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5ba:	f000 808a 	beq.w	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b5be:	2104      	movs	r1, #4
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5c0:	2a05      	cmp	r2, #5
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b5c2:	f884 32e8 	strb.w	r3, [r4, #744]	@ 0x2e8
    hpcd->OUT_ep[i].num = i;
9000b5c6:	f8a4 12e4 	strh.w	r1, [r4, #740]	@ 0x2e4
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b5ca:	f8c4 32f4 	str.w	r3, [r4, #756]	@ 0x2f4
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b5ce:	e9c4 33bb 	strd	r3, r3, [r4, #748]	@ 0x2ec
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5d2:	d07e      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b5d4:	2105      	movs	r1, #5
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5d6:	2a06      	cmp	r2, #6
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b5d8:	f884 330c 	strb.w	r3, [r4, #780]	@ 0x30c
    hpcd->OUT_ep[i].num = i;
9000b5dc:	f8a4 1308 	strh.w	r1, [r4, #776]	@ 0x308
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b5e0:	f8c4 3318 	str.w	r3, [r4, #792]	@ 0x318
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b5e4:	e9c4 33c4 	strd	r3, r3, [r4, #784]	@ 0x310
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5e8:	d073      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b5ea:	2106      	movs	r1, #6
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5ec:	2a07      	cmp	r2, #7
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b5ee:	f884 3330 	strb.w	r3, [r4, #816]	@ 0x330
    hpcd->OUT_ep[i].num = i;
9000b5f2:	f8a4 132c 	strh.w	r1, [r4, #812]	@ 0x32c
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b5f6:	f8c4 333c 	str.w	r3, [r4, #828]	@ 0x33c
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b5fa:	e9c4 33cd 	strd	r3, r3, [r4, #820]	@ 0x334
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b5fe:	d068      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b600:	2107      	movs	r1, #7
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b602:	2a08      	cmp	r2, #8
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b604:	f884 3354 	strb.w	r3, [r4, #852]	@ 0x354
    hpcd->OUT_ep[i].num = i;
9000b608:	f8a4 1350 	strh.w	r1, [r4, #848]	@ 0x350
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b60c:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b610:	e9c4 33d6 	strd	r3, r3, [r4, #856]	@ 0x358
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b614:	d05d      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b616:	2108      	movs	r1, #8
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b618:	2a09      	cmp	r2, #9
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b61a:	f884 3378 	strb.w	r3, [r4, #888]	@ 0x378
    hpcd->OUT_ep[i].num = i;
9000b61e:	f8a4 1374 	strh.w	r1, [r4, #884]	@ 0x374
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b622:	f8c4 3384 	str.w	r3, [r4, #900]	@ 0x384
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b626:	e9c4 33df 	strd	r3, r3, [r4, #892]	@ 0x37c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b62a:	d052      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b62c:	2109      	movs	r1, #9
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b62e:	2a0a      	cmp	r2, #10
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b630:	f884 339c 	strb.w	r3, [r4, #924]	@ 0x39c
    hpcd->OUT_ep[i].num = i;
9000b634:	f8a4 1398 	strh.w	r1, [r4, #920]	@ 0x398
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b638:	f8c4 33a8 	str.w	r3, [r4, #936]	@ 0x3a8
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b63c:	e9c4 33e8 	strd	r3, r3, [r4, #928]	@ 0x3a0
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b640:	d047      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b642:	210a      	movs	r1, #10
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b644:	2a0b      	cmp	r2, #11
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b646:	f884 33c0 	strb.w	r3, [r4, #960]	@ 0x3c0
    hpcd->OUT_ep[i].num = i;
9000b64a:	f8a4 13bc 	strh.w	r1, [r4, #956]	@ 0x3bc
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b64e:	f8c4 33cc 	str.w	r3, [r4, #972]	@ 0x3cc
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b652:	e9c4 33f1 	strd	r3, r3, [r4, #964]	@ 0x3c4
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b656:	d03c      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b658:	210b      	movs	r1, #11
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b65a:	2a0c      	cmp	r2, #12
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b65c:	f884 33e4 	strb.w	r3, [r4, #996]	@ 0x3e4
    hpcd->OUT_ep[i].num = i;
9000b660:	f8a4 13e0 	strh.w	r1, [r4, #992]	@ 0x3e0
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b664:	f8c4 33f0 	str.w	r3, [r4, #1008]	@ 0x3f0
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b668:	e9c4 33fa 	strd	r3, r3, [r4, #1000]	@ 0x3e8
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b66c:	d031      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b66e:	210c      	movs	r1, #12
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b670:	2a0d      	cmp	r2, #13
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b672:	f884 3408 	strb.w	r3, [r4, #1032]	@ 0x408
    hpcd->OUT_ep[i].maxpacket = 0U;
9000b676:	f8c4 340c 	str.w	r3, [r4, #1036]	@ 0x40c
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b67a:	f8c4 3410 	str.w	r3, [r4, #1040]	@ 0x410
    hpcd->OUT_ep[i].num = i;
9000b67e:	f8a4 1404 	strh.w	r1, [r4, #1028]	@ 0x404
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b682:	f8c4 3414 	str.w	r3, [r4, #1044]	@ 0x414
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b686:	d024      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b688:	210d      	movs	r1, #13
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b68a:	2a0e      	cmp	r2, #14
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b68c:	f884 342c 	strb.w	r3, [r4, #1068]	@ 0x42c
    hpcd->OUT_ep[i].maxpacket = 0U;
9000b690:	f8c4 3430 	str.w	r3, [r4, #1072]	@ 0x430
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b694:	f8c4 3434 	str.w	r3, [r4, #1076]	@ 0x434
    hpcd->OUT_ep[i].num = i;
9000b698:	f8a4 1428 	strh.w	r1, [r4, #1064]	@ 0x428
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b69c:	f8c4 3438 	str.w	r3, [r4, #1080]	@ 0x438
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6a0:	d017      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b6a2:	210e      	movs	r1, #14
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6a4:	2a0f      	cmp	r2, #15
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b6a6:	f884 3450 	strb.w	r3, [r4, #1104]	@ 0x450
    hpcd->OUT_ep[i].maxpacket = 0U;
9000b6aa:	f8c4 3454 	str.w	r3, [r4, #1108]	@ 0x454
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b6ae:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
    hpcd->OUT_ep[i].num = i;
9000b6b2:	f8a4 144c 	strh.w	r1, [r4, #1100]	@ 0x44c
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b6b6:	f8c4 345c 	str.w	r3, [r4, #1116]	@ 0x45c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b6ba:	d00a      	beq.n	9000b6d2 <HAL_PCD_Init+0x3ba>
    hpcd->OUT_ep[i].num = i;
9000b6bc:	220f      	movs	r2, #15
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b6be:	f884 3474 	strb.w	r3, [r4, #1140]	@ 0x474
    hpcd->OUT_ep[i].maxpacket = 0U;
9000b6c2:	f8c4 3478 	str.w	r3, [r4, #1144]	@ 0x478
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b6c6:	f8c4 347c 	str.w	r3, [r4, #1148]	@ 0x47c
    hpcd->OUT_ep[i].num = i;
9000b6ca:	f8a4 2470 	strh.w	r2, [r4, #1136]	@ 0x470
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b6ce:	f8c4 3480 	str.w	r3, [r4, #1152]	@ 0x480
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
9000b6d2:	7c20      	ldrb	r0, [r4, #16]
9000b6d4:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9000b6d8:	f88d 0000 	strb.w	r0, [sp]
9000b6dc:	6820      	ldr	r0, [r4, #0]
9000b6de:	f003 facd 	bl	9000ec7c <USB_DevInit>
9000b6e2:	4605      	mov	r5, r0
9000b6e4:	2800      	cmp	r0, #0
9000b6e6:	f47f ae32 	bne.w	9000b34e <HAL_PCD_Init+0x36>
  hpcd->State = HAL_PCD_STATE_READY;
9000b6ea:	2201      	movs	r2, #1
  if (hpcd->Init.lpm_enable == 1U)
9000b6ec:	7b23      	ldrb	r3, [r4, #12]
  hpcd->USB_Address = 0U;
9000b6ee:	7460      	strb	r0, [r4, #17]
  if (hpcd->Init.lpm_enable == 1U)
9000b6f0:	4293      	cmp	r3, r2
  hpcd->State = HAL_PCD_STATE_READY;
9000b6f2:	f884 2495 	strb.w	r2, [r4, #1173]	@ 0x495
  if (hpcd->Init.lpm_enable == 1U)
9000b6f6:	d00a      	beq.n	9000b70e <HAL_PCD_Init+0x3f6>
  (void)USB_DevDisconnect(hpcd->Instance);
9000b6f8:	6820      	ldr	r0, [r4, #0]
9000b6fa:	f003 ff85 	bl	9000f608 <USB_DevDisconnect>
}
9000b6fe:	4628      	mov	r0, r5
9000b700:	b002      	add	sp, #8
9000b702:	bd70      	pop	{r4, r5, r6, pc}
    hpcd->Lock = HAL_UNLOCKED;
9000b704:	f880 2494 	strb.w	r2, [r0, #1172]	@ 0x494
    HAL_PCD_MspInit(hpcd);
9000b708:	f7f8 f992 	bl	90003a30 <HAL_PCD_MspInit>
9000b70c:	e60f      	b.n	9000b32e <HAL_PCD_Init+0x16>
    (void)HAL_PCDEx_ActivateLPM(hpcd);
9000b70e:	4620      	mov	r0, r4
9000b710:	f000 ffee 	bl	9000c6f0 <HAL_PCDEx_ActivateLPM>
9000b714:	e7f0      	b.n	9000b6f8 <HAL_PCD_Init+0x3e0>
    hpcd->OUT_ep[i].num = i;
9000b716:	f8a4 0254 	strh.w	r0, [r4, #596]	@ 0x254
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
9000b71a:	f884 0258 	strb.w	r0, [r4, #600]	@ 0x258
    hpcd->OUT_ep[i].xfer_len = 0U;
9000b71e:	f8c4 0264 	str.w	r0, [r4, #612]	@ 0x264
    hpcd->OUT_ep[i].xfer_buff = 0U;
9000b722:	e9c4 0097 	strd	r0, r0, [r4, #604]	@ 0x25c
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000b726:	e7d4      	b.n	9000b6d2 <HAL_PCD_Init+0x3ba>

9000b728 <HAL_PCD_DeInit>:
  * @brief  DeInitializes the PCD peripheral.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_DeInit(PCD_HandleTypeDef *hpcd)
{
9000b728:	b538      	push	{r3, r4, r5, lr}
  /* Check the PCD handle allocation */
  if (hpcd == NULL)
9000b72a:	b140      	cbz	r0, 9000b73e <HAL_PCD_DeInit+0x16>
  {
    return HAL_ERROR;
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
9000b72c:	4604      	mov	r4, r0
9000b72e:	2303      	movs	r3, #3

  /* Stop Device */
  if (USB_StopDevice(hpcd->Instance) != HAL_OK)
9000b730:	6800      	ldr	r0, [r0, #0]
  hpcd->State = HAL_PCD_STATE_BUSY;
9000b732:	f884 3495 	strb.w	r3, [r4, #1173]	@ 0x495
  if (USB_StopDevice(hpcd->Instance) != HAL_OK)
9000b736:	f003 febd 	bl	9000f4b4 <USB_StopDevice>
9000b73a:	4605      	mov	r5, r0
9000b73c:	b110      	cbz	r0, 9000b744 <HAL_PCD_DeInit+0x1c>
    return HAL_ERROR;
9000b73e:	2501      	movs	r5, #1
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  hpcd->State = HAL_PCD_STATE_RESET;

  return HAL_OK;
}
9000b740:	4628      	mov	r0, r5
9000b742:	bd38      	pop	{r3, r4, r5, pc}
  HAL_PCD_MspDeInit(hpcd);
9000b744:	4620      	mov	r0, r4
9000b746:	f7f8 f9d5 	bl	90003af4 <HAL_PCD_MspDeInit>
}
9000b74a:	4628      	mov	r0, r5
  hpcd->State = HAL_PCD_STATE_RESET;
9000b74c:	f884 5495 	strb.w	r5, [r4, #1173]	@ 0x495
}
9000b750:	bd38      	pop	{r3, r4, r5, pc}
9000b752:	bf00      	nop

9000b754 <HAL_PCD_Start>:
  * @brief  Start the USB device
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Start(PCD_HandleTypeDef *hpcd)
{
9000b754:	b510      	push	{r4, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;

  __HAL_LOCK(hpcd);
9000b756:	f890 3494 	ldrb.w	r3, [r0, #1172]	@ 0x494
{
9000b75a:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000b75c:	6800      	ldr	r0, [r0, #0]
  __HAL_LOCK(hpcd);
9000b75e:	2b01      	cmp	r3, #1
9000b760:	d017      	beq.n	9000b792 <HAL_PCD_Start+0x3e>
9000b762:	2301      	movs	r3, #1
9000b764:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
9000b768:	68c3      	ldr	r3, [r0, #12]
9000b76a:	065b      	lsls	r3, r3, #25
9000b76c:	d502      	bpl.n	9000b774 <HAL_PCD_Start+0x20>
9000b76e:	7b63      	ldrb	r3, [r4, #13]
9000b770:	2b01      	cmp	r3, #1
9000b772:	d009      	beq.n	9000b788 <HAL_PCD_Start+0x34>
  {
    /* Enable USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
  }

  __HAL_PCD_ENABLE(hpcd);
9000b774:	f003 fa3c 	bl	9000ebf0 <USB_EnableGlobalInt>
  (void)USB_DevConnect(hpcd->Instance);
9000b778:	6820      	ldr	r0, [r4, #0]
9000b77a:	f003 ff35 	bl	9000f5e8 <USB_DevConnect>
  __HAL_UNLOCK(hpcd);
9000b77e:	2300      	movs	r3, #0

  return HAL_OK;
9000b780:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000b782:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000b786:	bd10      	pop	{r4, pc}
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
9000b788:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9000b78a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000b78e:	6383      	str	r3, [r0, #56]	@ 0x38
9000b790:	e7f0      	b.n	9000b774 <HAL_PCD_Start+0x20>
  __HAL_LOCK(hpcd);
9000b792:	2002      	movs	r0, #2
}
9000b794:	bd10      	pop	{r4, pc}
9000b796:	bf00      	nop

9000b798 <HAL_PCD_Stop>:
  * @brief  Stop the USB device.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Stop(PCD_HandleTypeDef *hpcd)
{
9000b798:	b538      	push	{r3, r4, r5, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;

  __HAL_LOCK(hpcd);
9000b79a:	f890 3494 	ldrb.w	r3, [r0, #1172]	@ 0x494
9000b79e:	2b01      	cmp	r3, #1
9000b7a0:	d019      	beq.n	9000b7d6 <HAL_PCD_Stop+0x3e>
9000b7a2:	2301      	movs	r3, #1
9000b7a4:	4604      	mov	r4, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000b7a6:	6805      	ldr	r5, [r0, #0]
  __HAL_LOCK(hpcd);
9000b7a8:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  __HAL_PCD_DISABLE(hpcd);
9000b7ac:	4628      	mov	r0, r5
9000b7ae:	f003 fa27 	bl	9000ec00 <USB_DisableGlobalInt>
  (void)USB_DevDisconnect(hpcd->Instance);
9000b7b2:	6820      	ldr	r0, [r4, #0]
9000b7b4:	f003 ff28 	bl	9000f608 <USB_DevDisconnect>

  (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
9000b7b8:	2110      	movs	r1, #16
9000b7ba:	6820      	ldr	r0, [r4, #0]
9000b7bc:	f003 fb94 	bl	9000eee8 <USB_FlushTxFifo>

  if (((USBx->GUSBCFG & USB_OTG_GUSBCFG_PHYSEL) != 0U) &&
9000b7c0:	68eb      	ldr	r3, [r5, #12]
9000b7c2:	065b      	lsls	r3, r3, #25
9000b7c4:	d502      	bpl.n	9000b7cc <HAL_PCD_Stop+0x34>
9000b7c6:	7b63      	ldrb	r3, [r4, #13]
9000b7c8:	2b01      	cmp	r3, #1
9000b7ca:	d006      	beq.n	9000b7da <HAL_PCD_Stop+0x42>
  {
    /* Disable USB Transceiver */
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
  }

  __HAL_UNLOCK(hpcd);
9000b7cc:	2300      	movs	r3, #0

  return HAL_OK;
9000b7ce:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000b7d0:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000b7d4:	bd38      	pop	{r3, r4, r5, pc}
  __HAL_LOCK(hpcd);
9000b7d6:	2002      	movs	r0, #2
}
9000b7d8:	bd38      	pop	{r3, r4, r5, pc}
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000b7da:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000b7dc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000b7e0:	63ab      	str	r3, [r5, #56]	@ 0x38
  __HAL_UNLOCK(hpcd);
9000b7e2:	2300      	movs	r3, #0
  return HAL_OK;
9000b7e4:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000b7e6:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  return HAL_OK;
9000b7ea:	e7f3      	b.n	9000b7d4 <HAL_PCD_Stop+0x3c>

9000b7ec <HAL_PCD_IRQHandler>:
  * @brief  Handles PCD interrupt request.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
void HAL_PCD_IRQHandler(PCD_HandleTypeDef *hpcd)
{
9000b7ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000b7f0:	6806      	ldr	r6, [r0, #0]
{
9000b7f2:	b089      	sub	sp, #36	@ 0x24
9000b7f4:	4604      	mov	r4, r0
  uint32_t epnum;
  uint32_t fifoemptymsk;
  uint32_t RegVal;

  /* ensure that we are in device mode */
  if (USB_GetMode(hpcd->Instance) == USB_OTG_MODE_DEVICE)
9000b7f6:	4630      	mov	r0, r6
9000b7f8:	f003 ff44 	bl	9000f684 <USB_GetMode>
9000b7fc:	b110      	cbz	r0, 9000b804 <HAL_PCD_IRQHandler+0x18>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
      hpcd->Instance->GOTGINT |= RegVal;
    }
  }
}
9000b7fe:	b009      	add	sp, #36	@ 0x24
9000b800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (__HAL_PCD_IS_INVALID_INTERRUPT(hpcd))
9000b804:	4605      	mov	r5, r0
9000b806:	6820      	ldr	r0, [r4, #0]
9000b808:	f003 ff0e 	bl	9000f628 <USB_ReadInterrupts>
9000b80c:	2800      	cmp	r0, #0
9000b80e:	d0f6      	beq.n	9000b7fe <HAL_PCD_IRQHandler+0x12>
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
9000b810:	f8d6 3808 	ldr.w	r3, [r6, #2056]	@ 0x808
9000b814:	f506 6200 	add.w	r2, r6, #2048	@ 0x800
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
9000b818:	6820      	ldr	r0, [r4, #0]
    hpcd->FrameNumber = (USBx_DEVICE->DSTS & USB_OTG_DSTS_FNSOF_Msk) >> USB_OTG_DSTS_FNSOF_Pos;
9000b81a:	f3c3 230d 	ubfx	r3, r3, #8, #14
9000b81e:	9203      	str	r2, [sp, #12]
9000b820:	f8c4 34d4 	str.w	r3, [r4, #1236]	@ 0x4d4
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
9000b824:	f003 ff00 	bl	9000f628 <USB_ReadInterrupts>
9000b828:	f010 0f02 	tst.w	r0, #2
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
9000b82c:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_MMIS))
9000b82e:	d003      	beq.n	9000b838 <HAL_PCD_IRQHandler+0x4c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_MMIS);
9000b830:	6943      	ldr	r3, [r0, #20]
9000b832:	f003 0302 	and.w	r3, r3, #2
9000b836:	6143      	str	r3, [r0, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
9000b838:	f003 fef6 	bl	9000f628 <USB_ReadInterrupts>
9000b83c:	f010 0f10 	tst.w	r0, #16
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000b840:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_RXFLVL))
9000b842:	d012      	beq.n	9000b86a <HAL_PCD_IRQHandler+0x7e>
      USB_MASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000b844:	6983      	ldr	r3, [r0, #24]
9000b846:	f023 0310 	bic.w	r3, r3, #16
9000b84a:	6183      	str	r3, [r0, #24]
      RegVal = USBx->GRXSTSP;
9000b84c:	6a37      	ldr	r7, [r6, #32]
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
9000b84e:	f3c7 4343 	ubfx	r3, r7, #17, #4
      ep = &hpcd->OUT_ep[RegVal & USB_OTG_GRXSTSP_EPNUM];
9000b852:	f007 080f 	and.w	r8, r7, #15
      if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) ==  STS_DATA_UPDT)
9000b856:	2b02      	cmp	r3, #2
9000b858:	f000 83dc 	beq.w	9000c014 <HAL_PCD_IRQHandler+0x828>
      else if (((RegVal & USB_OTG_GRXSTSP_PKTSTS) >> 17) == STS_SETUP_UPDT)
9000b85c:	2b06      	cmp	r3, #6
9000b85e:	f000 8379 	beq.w	9000bf54 <HAL_PCD_IRQHandler+0x768>
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000b862:	6983      	ldr	r3, [r0, #24]
9000b864:	f043 0310 	orr.w	r3, r3, #16
9000b868:	6183      	str	r3, [r0, #24]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
9000b86a:	f003 fedd 	bl	9000f628 <USB_ReadInterrupts>
9000b86e:	f410 2f00 	tst.w	r0, #524288	@ 0x80000
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
9000b872:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OEPINT))
9000b874:	f040 82d1 	bne.w	9000be1a <HAL_PCD_IRQHandler+0x62e>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IEPINT))
9000b878:	f003 fed6 	bl	9000f628 <USB_ReadInterrupts>
9000b87c:	0347      	lsls	r7, r0, #13
9000b87e:	f100 8228 	bmi.w	9000bcd2 <HAL_PCD_IRQHandler+0x4e6>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
9000b882:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
9000b884:	f003 fed0 	bl	9000f628 <USB_ReadInterrupts>
9000b888:	2800      	cmp	r0, #0
9000b88a:	f2c0 819a 	blt.w	9000bbc2 <HAL_PCD_IRQHandler+0x3d6>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP))
9000b88e:	6820      	ldr	r0, [r4, #0]
9000b890:	f003 feca 	bl	9000f628 <USB_ReadInterrupts>
9000b894:	0502      	lsls	r2, r0, #20
9000b896:	f100 8157 	bmi.w	9000bb48 <HAL_PCD_IRQHandler+0x35c>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
9000b89a:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT))
9000b89c:	f003 fec4 	bl	9000f628 <USB_ReadInterrupts>
9000b8a0:	0107      	lsls	r7, r0, #4
9000b8a2:	d514      	bpl.n	9000b8ce <HAL_PCD_IRQHandler+0xe2>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_LPMINT);
9000b8a4:	6822      	ldr	r2, [r4, #0]
9000b8a6:	6953      	ldr	r3, [r2, #20]
9000b8a8:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
9000b8ac:	6153      	str	r3, [r2, #20]
      if (hpcd->LPM_State == LPM_L0)
9000b8ae:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
9000b8b2:	2b00      	cmp	r3, #0
9000b8b4:	f040 8301 	bne.w	9000beba <HAL_PCD_IRQHandler+0x6ce>
        hpcd->LPM_State = LPM_L1;
9000b8b8:	2101      	movs	r1, #1
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
9000b8ba:	4620      	mov	r0, r4
        hpcd->LPM_State = LPM_L1;
9000b8bc:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        hpcd->BESL = (hpcd->Instance->GLPMCFG & USB_OTG_GLPMCFG_BESL) >> 2U;
9000b8c0:	6d53      	ldr	r3, [r2, #84]	@ 0x54
9000b8c2:	f3c3 0383 	ubfx	r3, r3, #2, #4
9000b8c6:	f8c4 34d0 	str.w	r3, [r4, #1232]	@ 0x4d0
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L1_ACTIVE);
9000b8ca:	f000 ff29 	bl	9000c720 <HAL_PCDEx_LPM_Callback>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_USBRST))
9000b8ce:	6820      	ldr	r0, [r4, #0]
9000b8d0:	f003 feaa 	bl	9000f628 <USB_ReadInterrupts>
9000b8d4:	04c0      	lsls	r0, r0, #19
9000b8d6:	f100 819e 	bmi.w	9000bc16 <HAL_PCD_IRQHandler+0x42a>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
9000b8da:	6820      	ldr	r0, [r4, #0]
9000b8dc:	f003 fea4 	bl	9000f628 <USB_ReadInterrupts>
9000b8e0:	f410 5f00 	tst.w	r0, #8192	@ 0x2000
      (void)USB_ActivateSetup(hpcd->Instance);
9000b8e4:	6820      	ldr	r0, [r4, #0]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE))
9000b8e6:	f040 817f 	bne.w	9000bbe8 <HAL_PCD_IRQHandler+0x3fc>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SOF))
9000b8ea:	f003 fe9d 	bl	9000f628 <USB_ReadInterrupts>
9000b8ee:	0701      	lsls	r1, r0, #28
9000b8f0:	f100 81e6 	bmi.w	9000bcc0 <HAL_PCD_IRQHandler+0x4d4>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_BOUTNAKEFF))
9000b8f4:	6820      	ldr	r0, [r4, #0]
9000b8f6:	f003 fe97 	bl	9000f628 <USB_ReadInterrupts>
9000b8fa:	0602      	lsls	r2, r0, #24
9000b8fc:	d571      	bpl.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
      USBx->GINTMSK &= ~USB_OTG_GINTMSK_GONAKEFFM;
9000b8fe:	69b3      	ldr	r3, [r6, #24]
9000b900:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000b904:	61b3      	str	r3, [r6, #24]
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b906:	7923      	ldrb	r3, [r4, #4]
9000b908:	2b01      	cmp	r3, #1
9000b90a:	d96a      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b90c:	f894 227b 	ldrb.w	r2, [r4, #635]	@ 0x27b
9000b910:	2a01      	cmp	r2, #1
9000b912:	f000 83ed 	beq.w	9000c0f0 <HAL_PCD_IRQHandler+0x904>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b916:	2b02      	cmp	r3, #2
9000b918:	d963      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b91a:	f894 229f 	ldrb.w	r2, [r4, #671]	@ 0x29f
9000b91e:	2a01      	cmp	r2, #1
9000b920:	f000 8401 	beq.w	9000c126 <HAL_PCD_IRQHandler+0x93a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b924:	2b03      	cmp	r3, #3
9000b926:	d95c      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b928:	f894 22c3 	ldrb.w	r2, [r4, #707]	@ 0x2c3
9000b92c:	2a01      	cmp	r2, #1
9000b92e:	f000 830a 	beq.w	9000bf46 <HAL_PCD_IRQHandler+0x75a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b932:	2b04      	cmp	r3, #4
9000b934:	d955      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b936:	f894 22e7 	ldrb.w	r2, [r4, #743]	@ 0x2e7
9000b93a:	2a01      	cmp	r2, #1
9000b93c:	f000 831d 	beq.w	9000bf7a <HAL_PCD_IRQHandler+0x78e>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b940:	2b05      	cmp	r3, #5
9000b942:	d94e      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b944:	f894 230b 	ldrb.w	r2, [r4, #779]	@ 0x30b
9000b948:	2a01      	cmp	r2, #1
9000b94a:	f000 842c 	beq.w	9000c1a6 <HAL_PCD_IRQHandler+0x9ba>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b94e:	2b06      	cmp	r3, #6
9000b950:	d947      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b952:	f894 232f 	ldrb.w	r2, [r4, #815]	@ 0x32f
9000b956:	2a01      	cmp	r2, #1
9000b958:	f000 8439 	beq.w	9000c1ce <HAL_PCD_IRQHandler+0x9e2>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b95c:	2b07      	cmp	r3, #7
9000b95e:	d940      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b960:	f894 2353 	ldrb.w	r2, [r4, #851]	@ 0x353
9000b964:	2a01      	cmp	r2, #1
9000b966:	f000 844b 	beq.w	9000c200 <HAL_PCD_IRQHandler+0xa14>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b96a:	2b08      	cmp	r3, #8
9000b96c:	d939      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b96e:	f894 2377 	ldrb.w	r2, [r4, #887]	@ 0x377
9000b972:	2a01      	cmp	r2, #1
9000b974:	f000 8458 	beq.w	9000c228 <HAL_PCD_IRQHandler+0xa3c>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b978:	2b09      	cmp	r3, #9
9000b97a:	d932      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b97c:	f894 239b 	ldrb.w	r2, [r4, #923]	@ 0x39b
9000b980:	2a01      	cmp	r2, #1
9000b982:	f000 8465 	beq.w	9000c250 <HAL_PCD_IRQHandler+0xa64>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b986:	2b0a      	cmp	r3, #10
9000b988:	d92b      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b98a:	f894 23bf 	ldrb.w	r2, [r4, #959]	@ 0x3bf
9000b98e:	2a01      	cmp	r2, #1
9000b990:	f000 8472 	beq.w	9000c278 <HAL_PCD_IRQHandler+0xa8c>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b994:	2b0b      	cmp	r3, #11
9000b996:	d924      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b998:	f894 23e3 	ldrb.w	r2, [r4, #995]	@ 0x3e3
9000b99c:	2a01      	cmp	r2, #1
9000b99e:	f000 847f 	beq.w	9000c2a0 <HAL_PCD_IRQHandler+0xab4>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9a2:	2b0c      	cmp	r3, #12
9000b9a4:	d91d      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9a6:	f894 2407 	ldrb.w	r2, [r4, #1031]	@ 0x407
9000b9aa:	2a01      	cmp	r2, #1
9000b9ac:	f000 8484 	beq.w	9000c2b8 <HAL_PCD_IRQHandler+0xacc>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9b0:	2b0d      	cmp	r3, #13
9000b9b2:	d916      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9b4:	f894 242b 	ldrb.w	r2, [r4, #1067]	@ 0x42b
9000b9b8:	2a01      	cmp	r2, #1
9000b9ba:	f000 84a4 	beq.w	9000c306 <HAL_PCD_IRQHandler+0xb1a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9be:	2b0e      	cmp	r3, #14
9000b9c0:	d90f      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9c2:	f894 244f 	ldrb.w	r2, [r4, #1103]	@ 0x44f
9000b9c6:	2a01      	cmp	r2, #1
9000b9c8:	f000 84ab 	beq.w	9000c322 <HAL_PCD_IRQHandler+0xb36>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9cc:	2b0f      	cmp	r3, #15
9000b9ce:	d908      	bls.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
        if (hpcd->OUT_ep[epnum].is_iso_incomplete == 1U)
9000b9d0:	f894 3473 	ldrb.w	r3, [r4, #1139]	@ 0x473
9000b9d4:	2b01      	cmp	r3, #1
9000b9d6:	d104      	bne.n	9000b9e2 <HAL_PCD_IRQHandler+0x1f6>
  {
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
  }

  /* Stop Xfer */
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000b9d8:	f504 618e 	add.w	r1, r4, #1136	@ 0x470
9000b9dc:	6820      	ldr	r0, [r4, #0]
9000b9de:	f003 fc81 	bl	9000f2e4 <USB_EPStopXfer>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR))
9000b9e2:	6820      	ldr	r0, [r4, #0]
9000b9e4:	f003 fe20 	bl	9000f628 <USB_ReadInterrupts>
9000b9e8:	02c3      	lsls	r3, r0, #11
9000b9ea:	f140 80ab 	bpl.w	9000bb44 <HAL_PCD_IRQHandler+0x358>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000b9ee:	7923      	ldrb	r3, [r4, #4]
9000b9f0:	2b01      	cmp	r3, #1
9000b9f2:	f240 8089 	bls.w	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000b9f6:	f894 203c 	ldrb.w	r2, [r4, #60]	@ 0x3c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000b9fa:	f8d6 1920 	ldr.w	r1, [r6, #2336]	@ 0x920
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000b9fe:	2a01      	cmp	r2, #1
9000ba00:	f000 826a 	beq.w	9000bed8 <HAL_PCD_IRQHandler+0x6ec>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba04:	2b02      	cmp	r3, #2
9000ba06:	d97f      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba08:	f894 2060 	ldrb.w	r2, [r4, #96]	@ 0x60
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba0c:	f8d6 1940 	ldr.w	r1, [r6, #2368]	@ 0x940
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba10:	2a01      	cmp	r2, #1
9000ba12:	f000 8274 	beq.w	9000befe <HAL_PCD_IRQHandler+0x712>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba16:	2b03      	cmp	r3, #3
9000ba18:	d976      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba1a:	f894 2084 	ldrb.w	r2, [r4, #132]	@ 0x84
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba1e:	f8d6 1960 	ldr.w	r1, [r6, #2400]	@ 0x960
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba22:	2a01      	cmp	r2, #1
9000ba24:	f000 8277 	beq.w	9000bf16 <HAL_PCD_IRQHandler+0x72a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba28:	2b04      	cmp	r3, #4
9000ba2a:	d96d      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba2c:	f894 20a8 	ldrb.w	r2, [r4, #168]	@ 0xa8
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba30:	f8d6 1980 	ldr.w	r1, [r6, #2432]	@ 0x980
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba34:	2a01      	cmp	r2, #1
9000ba36:	f000 827a 	beq.w	9000bf2e <HAL_PCD_IRQHandler+0x742>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba3a:	2b05      	cmp	r3, #5
9000ba3c:	d964      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba3e:	f894 20cc 	ldrb.w	r2, [r4, #204]	@ 0xcc
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba42:	f8d6 19a0 	ldr.w	r1, [r6, #2464]	@ 0x9a0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba46:	2a01      	cmp	r2, #1
9000ba48:	f000 8346 	beq.w	9000c0d8 <HAL_PCD_IRQHandler+0x8ec>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba4c:	2b06      	cmp	r3, #6
9000ba4e:	d95b      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba50:	f894 20f0 	ldrb.w	r2, [r4, #240]	@ 0xf0
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba54:	f8d6 19c0 	ldr.w	r1, [r6, #2496]	@ 0x9c0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba58:	2a01      	cmp	r2, #1
9000ba5a:	f000 8358 	beq.w	9000c10e <HAL_PCD_IRQHandler+0x922>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba5e:	2b07      	cmp	r3, #7
9000ba60:	d952      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba62:	f894 2114 	ldrb.w	r2, [r4, #276]	@ 0x114
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba66:	f8d6 19e0 	ldr.w	r1, [r6, #2528]	@ 0x9e0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba6a:	2a01      	cmp	r2, #1
9000ba6c:	f000 8363 	beq.w	9000c136 <HAL_PCD_IRQHandler+0x94a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba70:	2b08      	cmp	r3, #8
9000ba72:	d949      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba74:	f894 2138 	ldrb.w	r2, [r4, #312]	@ 0x138
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba78:	f8d6 1a00 	ldr.w	r1, [r6, #2560]	@ 0xa00
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba7c:	2a01      	cmp	r2, #1
9000ba7e:	f000 836a 	beq.w	9000c156 <HAL_PCD_IRQHandler+0x96a>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba82:	2b09      	cmp	r3, #9
9000ba84:	d940      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba86:	f894 215c 	ldrb.w	r2, [r4, #348]	@ 0x15c
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba8a:	f8d6 1a20 	ldr.w	r1, [r6, #2592]	@ 0xa20
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba8e:	2a01      	cmp	r2, #1
9000ba90:	f000 8375 	beq.w	9000c17e <HAL_PCD_IRQHandler+0x992>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000ba94:	2b0a      	cmp	r3, #10
9000ba96:	d937      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000ba98:	f894 2180 	ldrb.w	r2, [r4, #384]	@ 0x180
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000ba9c:	f8d6 1a40 	ldr.w	r1, [r6, #2624]	@ 0xa40
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000baa0:	2a01      	cmp	r2, #1
9000baa2:	f000 8388 	beq.w	9000c1b6 <HAL_PCD_IRQHandler+0x9ca>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000baa6:	2b0b      	cmp	r3, #11
9000baa8:	d92e      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000baaa:	f894 21a4 	ldrb.w	r2, [r4, #420]	@ 0x1a4
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000baae:	f8d6 1a60 	ldr.w	r1, [r6, #2656]	@ 0xa60
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bab2:	2a01      	cmp	r2, #1
9000bab4:	f000 8398 	beq.w	9000c1e8 <HAL_PCD_IRQHandler+0x9fc>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bab8:	2b0c      	cmp	r3, #12
9000baba:	d925      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000babc:	f894 21c8 	ldrb.w	r2, [r4, #456]	@ 0x1c8
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bac0:	f8d6 1a80 	ldr.w	r1, [r6, #2688]	@ 0xa80
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bac4:	2a01      	cmp	r2, #1
9000bac6:	f000 83a3 	beq.w	9000c210 <HAL_PCD_IRQHandler+0xa24>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000baca:	2b0d      	cmp	r3, #13
9000bacc:	d91c      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bace:	f894 21ec 	ldrb.w	r2, [r4, #492]	@ 0x1ec
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bad2:	f8d6 1aa0 	ldr.w	r1, [r6, #2720]	@ 0xaa0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bad6:	2a01      	cmp	r2, #1
9000bad8:	f000 83ae 	beq.w	9000c238 <HAL_PCD_IRQHandler+0xa4c>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000badc:	2b0e      	cmp	r3, #14
9000bade:	d913      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bae0:	f894 2210 	ldrb.w	r2, [r4, #528]	@ 0x210
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bae4:	f8d6 1ac0 	ldr.w	r1, [r6, #2752]	@ 0xac0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bae8:	2a01      	cmp	r2, #1
9000baea:	f000 83b9 	beq.w	9000c260 <HAL_PCD_IRQHandler+0xa74>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000baee:	2b0f      	cmp	r3, #15
9000baf0:	d90a      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000baf2:	f894 2234 	ldrb.w	r2, [r4, #564]	@ 0x234
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000baf6:	f8d6 1ae0 	ldr.w	r1, [r6, #2784]	@ 0xae0
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bafa:	2a01      	cmp	r2, #1
9000bafc:	f000 83c4 	beq.w	9000c288 <HAL_PCD_IRQHandler+0xa9c>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bb00:	2b10      	cmp	r3, #16
9000bb02:	d901      	bls.n	9000bb08 <HAL_PCD_IRQHandler+0x31c>
        RegVal = USBx_INEP(epnum)->DIEPCTL;
9000bb04:	f8d6 3b00 	ldr.w	r3, [r6, #2816]	@ 0xb00
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
9000bb08:	6820      	ldr	r0, [r4, #0]
9000bb0a:	6943      	ldr	r3, [r0, #20]
9000bb0c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
9000bb10:	6143      	str	r3, [r0, #20]
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT))
9000bb12:	f003 fd89 	bl	9000f628 <USB_ReadInterrupts>
9000bb16:	0287      	lsls	r7, r0, #10
9000bb18:	d421      	bmi.n	9000bb5e <HAL_PCD_IRQHandler+0x372>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT))
9000bb1a:	6820      	ldr	r0, [r4, #0]
9000bb1c:	f003 fd84 	bl	9000f628 <USB_ReadInterrupts>
9000bb20:	0040      	lsls	r0, r0, #1
9000bb22:	f100 80c4 	bmi.w	9000bcae <HAL_PCD_IRQHandler+0x4c2>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_OTGINT))
9000bb26:	6820      	ldr	r0, [r4, #0]
9000bb28:	f003 fd7e 	bl	9000f628 <USB_ReadInterrupts>
9000bb2c:	0741      	lsls	r1, r0, #29
9000bb2e:	f57f ae66 	bpl.w	9000b7fe <HAL_PCD_IRQHandler+0x12>
      RegVal = hpcd->Instance->GOTGINT;
9000bb32:	6823      	ldr	r3, [r4, #0]
9000bb34:	685d      	ldr	r5, [r3, #4]
      if ((RegVal & USB_OTG_GOTGINT_SEDET) == USB_OTG_GOTGINT_SEDET)
9000bb36:	076a      	lsls	r2, r5, #29
9000bb38:	f100 828d 	bmi.w	9000c056 <HAL_PCD_IRQHandler+0x86a>
      hpcd->Instance->GOTGINT |= RegVal;
9000bb3c:	685a      	ldr	r2, [r3, #4]
9000bb3e:	432a      	orrs	r2, r5
9000bb40:	605a      	str	r2, [r3, #4]
9000bb42:	e65c      	b.n	9000b7fe <HAL_PCD_IRQHandler+0x12>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_IISOIXFR);
9000bb44:	6820      	ldr	r0, [r4, #0]
9000bb46:	e7e4      	b.n	9000bb12 <HAL_PCD_IRQHandler+0x326>
      if ((USBx_DEVICE->DSTS & USB_OTG_DSTS_SUSPSTS) == USB_OTG_DSTS_SUSPSTS)
9000bb48:	9b03      	ldr	r3, [sp, #12]
9000bb4a:	689b      	ldr	r3, [r3, #8]
9000bb4c:	07db      	lsls	r3, r3, #31
9000bb4e:	f100 827e 	bmi.w	9000c04e <HAL_PCD_IRQHandler+0x862>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBSUSP);
9000bb52:	6820      	ldr	r0, [r4, #0]
9000bb54:	6943      	ldr	r3, [r0, #20]
9000bb56:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
9000bb5a:	6143      	str	r3, [r0, #20]
9000bb5c:	e69e      	b.n	9000b89c <HAL_PCD_IRQHandler+0xb0>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bb5e:	f894 c004 	ldrb.w	ip, [r4, #4]
9000bb62:	f1bc 0f01 	cmp.w	ip, #1
9000bb66:	d926      	bls.n	9000bbb6 <HAL_PCD_IRQHandler+0x3ca>
9000bb68:	f506 6232 	add.w	r2, r6, #2848	@ 0xb20
9000bb6c:	4623      	mov	r3, r4
9000bb6e:	2101      	movs	r1, #1
9000bb70:	e004      	b.n	9000bb7c <HAL_PCD_IRQHandler+0x390>
9000bb72:	3101      	adds	r1, #1
9000bb74:	3220      	adds	r2, #32
9000bb76:	3324      	adds	r3, #36	@ 0x24
9000bb78:	4561      	cmp	r1, ip
9000bb7a:	d01c      	beq.n	9000bbb6 <HAL_PCD_IRQHandler+0x3ca>
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
9000bb7c:	f893 027c 	ldrb.w	r0, [r3, #636]	@ 0x27c
        RegVal = USBx_OUTEP(epnum)->DOEPCTL;
9000bb80:	6815      	ldr	r5, [r2, #0]
        if ((hpcd->OUT_ep[epnum].type == EP_TYPE_ISOC) &&
9000bb82:	2801      	cmp	r0, #1
9000bb84:	d1f5      	bne.n	9000bb72 <HAL_PCD_IRQHandler+0x386>
9000bb86:	2d00      	cmp	r5, #0
9000bb88:	daf3      	bge.n	9000bb72 <HAL_PCD_IRQHandler+0x386>
            ((RegVal & (0x1U << 16)) == (hpcd->FrameNumber & 0x1U)))
9000bb8a:	f8d4 74d4 	ldr.w	r7, [r4, #1236]	@ 0x4d4
9000bb8e:	f405 3580 	and.w	r5, r5, #65536	@ 0x10000
9000bb92:	f007 0701 	and.w	r7, r7, #1
            ((RegVal & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA) &&
9000bb96:	42bd      	cmp	r5, r7
9000bb98:	d1eb      	bne.n	9000bb72 <HAL_PCD_IRQHandler+0x386>
          hpcd->OUT_ep[epnum].is_iso_incomplete = 1U;
9000bb9a:	f883 027b 	strb.w	r0, [r3, #635]	@ 0x27b
          USBx->GINTMSK |= USB_OTG_GINTMSK_GONAKEFFM;
9000bb9e:	69b0      	ldr	r0, [r6, #24]
9000bba0:	f040 0080 	orr.w	r0, r0, #128	@ 0x80
9000bba4:	61b0      	str	r0, [r6, #24]
          if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == 0U)
9000bba6:	6970      	ldr	r0, [r6, #20]
9000bba8:	0605      	lsls	r5, r0, #24
9000bbaa:	d4e2      	bmi.n	9000bb72 <HAL_PCD_IRQHandler+0x386>
            USBx_DEVICE->DCTL |= USB_OTG_DCTL_SGONAK;
9000bbac:	9a03      	ldr	r2, [sp, #12]
9000bbae:	6853      	ldr	r3, [r2, #4]
9000bbb0:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
9000bbb4:	6053      	str	r3, [r2, #4]
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_PXFR_INCOMPISOOUT);
9000bbb6:	6820      	ldr	r0, [r4, #0]
9000bbb8:	6943      	ldr	r3, [r0, #20]
9000bbba:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
9000bbbe:	6143      	str	r3, [r0, #20]
9000bbc0:	e7ac      	b.n	9000bb1c <HAL_PCD_IRQHandler+0x330>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
9000bbc2:	9a03      	ldr	r2, [sp, #12]
9000bbc4:	6853      	ldr	r3, [r2, #4]
9000bbc6:	f023 0301 	bic.w	r3, r3, #1
9000bbca:	6053      	str	r3, [r2, #4]
      if (hpcd->LPM_State == LPM_L1)
9000bbcc:	f894 34cc 	ldrb.w	r3, [r4, #1228]	@ 0x4cc
9000bbd0:	2b01      	cmp	r3, #1
9000bbd2:	f000 818d 	beq.w	9000bef0 <HAL_PCD_IRQHandler+0x704>
        HAL_PCD_ResumeCallback(hpcd);
9000bbd6:	4620      	mov	r0, r4
9000bbd8:	f7f7 fff6 	bl	90003bc8 <HAL_PCD_ResumeCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT);
9000bbdc:	6820      	ldr	r0, [r4, #0]
9000bbde:	6943      	ldr	r3, [r0, #20]
9000bbe0:	f003 4300 	and.w	r3, r3, #2147483648	@ 0x80000000
9000bbe4:	6143      	str	r3, [r0, #20]
9000bbe6:	e653      	b.n	9000b890 <HAL_PCD_IRQHandler+0xa4>
      (void)USB_ActivateSetup(hpcd->Instance);
9000bbe8:	f003 fd50 	bl	9000f68c <USB_ActivateSetup>
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
9000bbec:	6820      	ldr	r0, [r4, #0]
9000bbee:	f003 f9a3 	bl	9000ef38 <USB_GetDevSpeed>
      (void)USB_SetTurnaroundTime(hpcd->Instance,
9000bbf2:	6825      	ldr	r5, [r4, #0]
      hpcd->Init.speed = USB_GetDevSpeed(hpcd->Instance);
9000bbf4:	71e0      	strb	r0, [r4, #7]
      (void)USB_SetTurnaroundTime(hpcd->Instance,
9000bbf6:	f001 fae5 	bl	9000d1c4 <HAL_RCC_GetHCLKFreq>
9000bbfa:	79e2      	ldrb	r2, [r4, #7]
9000bbfc:	4601      	mov	r1, r0
9000bbfe:	4628      	mov	r0, r5
9000bc00:	f002 ff7c 	bl	9000eafc <USB_SetTurnaroundTime>
      HAL_PCD_ResetCallback(hpcd);
9000bc04:	4620      	mov	r0, r4
9000bc06:	f7f7 ffb1 	bl	90003b6c <HAL_PCD_ResetCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_ENUMDNE);
9000bc0a:	6820      	ldr	r0, [r4, #0]
9000bc0c:	6943      	ldr	r3, [r0, #20]
9000bc0e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
9000bc12:	6143      	str	r3, [r0, #20]
9000bc14:	e669      	b.n	9000b8ea <HAL_PCD_IRQHandler+0xfe>
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
9000bc16:	9a03      	ldr	r2, [sp, #12]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
9000bc18:	2110      	movs	r1, #16
9000bc1a:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_RWUSIG;
9000bc1c:	6853      	ldr	r3, [r2, #4]
9000bc1e:	f023 0301 	bic.w	r3, r3, #1
9000bc22:	6053      	str	r3, [r2, #4]
      (void)USB_FlushTxFifo(hpcd->Instance, 0x10U);
9000bc24:	f003 f960 	bl	9000eee8 <USB_FlushTxFifo>
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000bc28:	7920      	ldrb	r0, [r4, #4]
9000bc2a:	b1d8      	cbz	r0, 9000bc64 <HAL_PCD_IRQHandler+0x478>
9000bc2c:	f506 6310 	add.w	r3, r6, #2304	@ 0x900
        USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000bc30:	f64f 317f 	movw	r1, #64383	@ 0xfb7f
9000bc34:	6099      	str	r1, [r3, #8]
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000bc36:	3501      	adds	r5, #1
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000bc38:	681a      	ldr	r2, [r3, #0]
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000bc3a:	3320      	adds	r3, #32
9000bc3c:	4285      	cmp	r5, r0
        USBx_INEP(i)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000bc3e:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
9000bc42:	f843 2c20 	str.w	r2, [r3, #-32]
        USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000bc46:	f8c3 11e8 	str.w	r1, [r3, #488]	@ 0x1e8
        USBx_OUTEP(i)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
9000bc4a:	f8d3 21e0 	ldr.w	r2, [r3, #480]	@ 0x1e0
9000bc4e:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
9000bc52:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
        USBx_OUTEP(i)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
9000bc56:	f8d3 21e0 	ldr.w	r2, [r3, #480]	@ 0x1e0
9000bc5a:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
9000bc5e:	f8c3 21e0 	str.w	r2, [r3, #480]	@ 0x1e0
      for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
9000bc62:	d1e7      	bne.n	9000bc34 <HAL_PCD_IRQHandler+0x448>
      USBx_DEVICE->DAINTMSK |= 0x10001U;
9000bc64:	9a03      	ldr	r2, [sp, #12]
9000bc66:	69d3      	ldr	r3, [r2, #28]
9000bc68:	f043 1301 	orr.w	r3, r3, #65537	@ 0x10001
9000bc6c:	61d3      	str	r3, [r2, #28]
      if (hpcd->Init.use_dedicated_ep1 != 0U)
9000bc6e:	7be3      	ldrb	r3, [r4, #15]
9000bc70:	2b00      	cmp	r3, #0
9000bc72:	f000 8126 	beq.w	9000bec2 <HAL_PCD_IRQHandler+0x6d6>
        USBx_DEVICE->DOUTEP1MSK |= USB_OTG_DOEPMSK_STUPM |
9000bc76:	f8d2 3084 	ldr.w	r3, [r2, #132]	@ 0x84
9000bc7a:	f043 030b 	orr.w	r3, r3, #11
9000bc7e:	f8c2 3084 	str.w	r3, [r2, #132]	@ 0x84
        USBx_DEVICE->DINEP1MSK |= USB_OTG_DIEPMSK_TOM |
9000bc82:	6c53      	ldr	r3, [r2, #68]	@ 0x44
9000bc84:	f043 030b 	orr.w	r3, r3, #11
9000bc88:	6453      	str	r3, [r2, #68]	@ 0x44
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
9000bc8a:	f8d6 3800 	ldr.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
9000bc8e:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
9000bc92:	6820      	ldr	r0, [r4, #0]
      USBx_DEVICE->DCFG &= ~USB_OTG_DCFG_DAD;
9000bc94:	f423 63fe 	bic.w	r3, r3, #2032	@ 0x7f0
9000bc98:	f8c6 3800 	str.w	r3, [r6, #2048]	@ 0x800
      (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable,
9000bc9c:	79a1      	ldrb	r1, [r4, #6]
9000bc9e:	f003 fd0b 	bl	9000f6b8 <USB_EP0_OutStart>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_USBRST);
9000bca2:	6820      	ldr	r0, [r4, #0]
9000bca4:	6943      	ldr	r3, [r0, #20]
9000bca6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
9000bcaa:	6143      	str	r3, [r0, #20]
9000bcac:	e616      	b.n	9000b8dc <HAL_PCD_IRQHandler+0xf0>
      HAL_PCD_ConnectCallback(hpcd);
9000bcae:	4620      	mov	r0, r4
9000bcb0:	f7f7 ff96 	bl	90003be0 <HAL_PCD_ConnectCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SRQINT);
9000bcb4:	6820      	ldr	r0, [r4, #0]
9000bcb6:	6943      	ldr	r3, [r0, #20]
9000bcb8:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
9000bcbc:	6143      	str	r3, [r0, #20]
9000bcbe:	e733      	b.n	9000bb28 <HAL_PCD_IRQHandler+0x33c>
      HAL_PCD_SOFCallback(hpcd);
9000bcc0:	4620      	mov	r0, r4
9000bcc2:	f7f7 ff4f 	bl	90003b64 <HAL_PCD_SOFCallback>
      __HAL_PCD_CLEAR_FLAG(hpcd, USB_OTG_GINTSTS_SOF);
9000bcc6:	6820      	ldr	r0, [r4, #0]
9000bcc8:	6943      	ldr	r3, [r0, #20]
9000bcca:	f003 0308 	and.w	r3, r3, #8
9000bcce:	6143      	str	r3, [r0, #20]
9000bcd0:	e611      	b.n	9000b8f6 <HAL_PCD_IRQHandler+0x10a>
      ep_intr = USB_ReadDevAllInEpInterrupt(hpcd->Instance);
9000bcd2:	6820      	ldr	r0, [r4, #0]
9000bcd4:	f003 fcb4 	bl	9000f640 <USB_ReadDevAllInEpInterrupt>
      while (ep_intr != 0U)
9000bcd8:	4681      	mov	r9, r0
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
9000bcda:	6820      	ldr	r0, [r4, #0]
      while (ep_intr != 0U)
9000bcdc:	f1b9 0f00 	cmp.w	r9, #0
9000bce0:	f43f add0 	beq.w	9000b884 <HAL_PCD_IRQHandler+0x98>
9000bce4:	f506 6710 	add.w	r7, r6, #2304	@ 0x900
9000bce8:	46a0      	mov	r8, r4
      epnum = 0U;
9000bcea:	f04f 0a00 	mov.w	sl, #0
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
9000bcee:	46bb      	mov	fp, r7
9000bcf0:	e9cd 6504 	strd	r6, r5, [sp, #16]
9000bcf4:	4605      	mov	r5, r0
9000bcf6:	e009      	b.n	9000bd0c <HAL_PCD_IRQHandler+0x520>
      while (ep_intr != 0U)
9000bcf8:	ea5f 0959 	movs.w	r9, r9, lsr #1
        epnum++;
9000bcfc:	f10a 0a01 	add.w	sl, sl, #1
      while (ep_intr != 0U)
9000bd00:	f108 0824 	add.w	r8, r8, #36	@ 0x24
9000bd04:	f10b 0b20 	add.w	fp, fp, #32
9000bd08:	f000 8140 	beq.w	9000bf8c <HAL_PCD_IRQHandler+0x7a0>
        if ((ep_intr & 0x1U) != 0U) /* In ITR */
9000bd0c:	f019 0f01 	tst.w	r9, #1
9000bd10:	d0f2      	beq.n	9000bcf8 <HAL_PCD_IRQHandler+0x50c>
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
9000bd12:	fa5f f78a 	uxtb.w	r7, sl
9000bd16:	4628      	mov	r0, r5
9000bd18:	4639      	mov	r1, r7
9000bd1a:	f003 fca3 	bl	9000f664 <USB_ReadDevInEPInterrupt>
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
9000bd1e:	07c1      	lsls	r1, r0, #31
          epint = USB_ReadDevInEPInterrupt(hpcd->Instance, (uint8_t)epnum);
9000bd20:	4606      	mov	r6, r0
          if ((epint & USB_OTG_DIEPINT_XFRC) == USB_OTG_DIEPINT_XFRC)
9000bd22:	d513      	bpl.n	9000bd4c <HAL_PCD_IRQHandler+0x560>
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000bd24:	2001      	movs	r0, #1
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000bd26:	9b03      	ldr	r3, [sp, #12]
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000bd28:	f00a 010f 	and.w	r1, sl, #15
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000bd2c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
            fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000bd2e:	fa00 f101 	lsl.w	r1, r0, r1
            USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000bd32:	ea22 0201 	bic.w	r2, r2, r1
9000bd36:	635a      	str	r2, [r3, #52]	@ 0x34
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_XFRC);
9000bd38:	f8cb 0008 	str.w	r0, [fp, #8]
            if (hpcd->Init.dma_enable == 1U)
9000bd3c:	79a1      	ldrb	r1, [r4, #6]
9000bd3e:	4281      	cmp	r1, r0
9000bd40:	f000 818e 	beq.w	9000c060 <HAL_PCD_IRQHandler+0x874>
            HAL_PCD_DataInStageCallback(hpcd, (uint8_t)epnum);
9000bd44:	4639      	mov	r1, r7
9000bd46:	4620      	mov	r0, r4
9000bd48:	f7f7 ff02 	bl	90003b50 <HAL_PCD_DataInStageCallback>
          if ((epint & USB_OTG_DIEPINT_TOC) == USB_OTG_DIEPINT_TOC)
9000bd4c:	0732      	lsls	r2, r6, #28
9000bd4e:	d502      	bpl.n	9000bd56 <HAL_PCD_IRQHandler+0x56a>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_TOC);
9000bd50:	2308      	movs	r3, #8
9000bd52:	f8cb 3008 	str.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_ITTXFE) == USB_OTG_DIEPINT_ITTXFE)
9000bd56:	06f3      	lsls	r3, r6, #27
9000bd58:	d502      	bpl.n	9000bd60 <HAL_PCD_IRQHandler+0x574>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_ITTXFE);
9000bd5a:	2310      	movs	r3, #16
9000bd5c:	f8cb 3008 	str.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_INEPNE) == USB_OTG_DIEPINT_INEPNE)
9000bd60:	0675      	lsls	r5, r6, #25
9000bd62:	d502      	bpl.n	9000bd6a <HAL_PCD_IRQHandler+0x57e>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_INEPNE);
9000bd64:	2340      	movs	r3, #64	@ 0x40
9000bd66:	f8cb 3008 	str.w	r3, [fp, #8]
          if ((epint & USB_OTG_DIEPINT_EPDISD) == USB_OTG_DIEPINT_EPDISD)
9000bd6a:	07b0      	lsls	r0, r6, #30
9000bd6c:	f100 8145 	bmi.w	9000bffa <HAL_PCD_IRQHandler+0x80e>
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
9000bd70:	0631      	lsls	r1, r6, #24
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_WriteEmptyTxFifo(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000bd72:	6825      	ldr	r5, [r4, #0]
          if ((epint & USB_OTG_DIEPINT_TXFE) == USB_OTG_DIEPINT_TXFE)
9000bd74:	d5c0      	bpl.n	9000bcf8 <HAL_PCD_IRQHandler+0x50c>
  uint32_t len32b;
  uint32_t fifoemptymsk;

  ep = &hpcd->IN_ep[epnum];

  if (ep->xfer_count > ep->xfer_len)
9000bd76:	e9d8 2309 	ldrd	r2, r3, [r8, #36]	@ 0x24
9000bd7a:	4293      	cmp	r3, r2
9000bd7c:	d8bc      	bhi.n	9000bcf8 <HAL_PCD_IRQHandler+0x50c>
  {
    return HAL_ERROR;
  }

  len = ep->xfer_len - ep->xfer_count;
9000bd7e:	eba2 0e03 	sub.w	lr, r2, r3
  if (len > ep->maxpacket)
  {
    len = ep->maxpacket;
  }

  len32b = (len + 3U) / 4U;
9000bd82:	f8d8 101c 	ldr.w	r1, [r8, #28]

  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bd86:	f505 6c10 	add.w	ip, r5, #2304	@ 0x900
  uint32_t USBx_BASE = (uint32_t)USBx;
9000bd8a:	9507      	str	r5, [sp, #28]
  len32b = (len + 3U) / 4U;
9000bd8c:	458e      	cmp	lr, r1
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bd8e:	eb0c 164a 	add.w	r6, ip, sl, lsl #5
  len32b = (len + 3U) / 4U;
9000bd92:	bf28      	it	cs
9000bd94:	468e      	movcs	lr, r1
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bd96:	69b0      	ldr	r0, [r6, #24]
  len32b = (len + 3U) / 4U;
9000bd98:	f10e 0103 	add.w	r1, lr, #3
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bd9c:	fa1f fe80 	uxth.w	lr, r0
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
9000bda0:	ebbe 0f91 	cmp.w	lr, r1, lsr #2
9000bda4:	f0c0 8194 	bcc.w	9000c0d0 <HAL_PCD_IRQHandler+0x8e4>
9000bda8:	f8cd b018 	str.w	fp, [sp, #24]
9000bdac:	e024      	b.n	9000bdf8 <HAL_PCD_IRQHandler+0x60c>
  {
    /* Write the FIFO */
    len = ep->xfer_len - ep->xfer_count;
9000bdae:	eba2 0b03 	sub.w	fp, r2, r3
9000bdb2:	f8d8 301c 	ldr.w	r3, [r8, #28]
    {
      len = ep->maxpacket;
    }
    len32b = (len + 3U) / 4U;

    (void)USB_WritePacket(USBx, ep->xfer_buff, (uint8_t)epnum, (uint16_t)len,
9000bdb6:	f8d8 1020 	ldr.w	r1, [r8, #32]
9000bdba:	463a      	mov	r2, r7
9000bdbc:	459b      	cmp	fp, r3
9000bdbe:	4628      	mov	r0, r5
9000bdc0:	bf28      	it	cs
9000bdc2:	469b      	movcs	fp, r3
9000bdc4:	79a3      	ldrb	r3, [r4, #6]
9000bdc6:	9300      	str	r3, [sp, #0]
9000bdc8:	fa1f f38b 	uxth.w	r3, fp
9000bdcc:	f003 fad4 	bl	9000f378 <USB_WritePacket>
                          (uint8_t)hpcd->Init.dma_enable);

    ep->xfer_buff  += len;
9000bdd0:	f8d8 3020 	ldr.w	r3, [r8, #32]
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bdd4:	69b2      	ldr	r2, [r6, #24]
    ep->xfer_buff  += len;
9000bdd6:	445b      	add	r3, fp
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bdd8:	b292      	uxth	r2, r2
    ep->xfer_buff  += len;
9000bdda:	f8c8 3020 	str.w	r3, [r8, #32]
    ep->xfer_count += len;
9000bdde:	f8d8 3028 	ldr.w	r3, [r8, #40]	@ 0x28
9000bde2:	445b      	add	r3, fp
    len32b = (len + 3U) / 4U;
9000bde4:	f10b 0b03 	add.w	fp, fp, #3
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
9000bde8:	ebb2 0f9b 	cmp.w	r2, fp, lsr #2
    ep->xfer_count += len;
9000bdec:	f8c8 3028 	str.w	r3, [r8, #40]	@ 0x28
         (ep->xfer_count < ep->xfer_len) && (ep->xfer_len != 0U))
9000bdf0:	f0c0 8169 	bcc.w	9000c0c6 <HAL_PCD_IRQHandler+0x8da>
  }

  if (ep->xfer_len <= ep->xfer_count)
9000bdf4:	f8d8 2024 	ldr.w	r2, [r8, #36]	@ 0x24
  while (((USBx_INEP(epnum)->DTXFSTS & USB_OTG_DTXFSTS_INEPTFSAV) >= len32b) &&
9000bdf8:	4293      	cmp	r3, r2
9000bdfa:	d3d8      	bcc.n	9000bdae <HAL_PCD_IRQHandler+0x5c2>
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
9000bdfc:	f8dd b018 	ldr.w	fp, [sp, #24]
9000be00:	6825      	ldr	r5, [r4, #0]
  {
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000be02:	9b07      	ldr	r3, [sp, #28]
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000be04:	2201      	movs	r2, #1
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000be06:	f503 6100 	add.w	r1, r3, #2048	@ 0x800
    fifoemptymsk = (uint32_t)(0x1UL << (epnum & EP_ADDR_MSK));
9000be0a:	f00a 030f 	and.w	r3, sl, #15
9000be0e:	409a      	lsls	r2, r3
    USBx_DEVICE->DIEPEMPMSK &= ~fifoemptymsk;
9000be10:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9000be12:	ea23 0302 	bic.w	r3, r3, r2
9000be16:	634b      	str	r3, [r1, #52]	@ 0x34
9000be18:	e76e      	b.n	9000bcf8 <HAL_PCD_IRQHandler+0x50c>
      ep_intr = USB_ReadDevAllOutEpInterrupt(hpcd->Instance);
9000be1a:	f003 fc09 	bl	9000f630 <USB_ReadDevAllOutEpInterrupt>
      while (ep_intr != 0U)
9000be1e:	4607      	mov	r7, r0
9000be20:	2800      	cmp	r0, #0
9000be22:	f000 80b1 	beq.w	9000bf88 <HAL_PCD_IRQHandler+0x79c>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
9000be26:	9504      	str	r5, [sp, #16]
9000be28:	f506 6830 	add.w	r8, r6, #2816	@ 0xb00
9000be2c:	46a3      	mov	fp, r4
      epnum = 0U;
9000be2e:	f04f 0a00 	mov.w	sl, #0
9000be32:	6820      	ldr	r0, [r4, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
9000be34:	4625      	mov	r5, r4
9000be36:	e008      	b.n	9000be4a <HAL_PCD_IRQHandler+0x65e>
      while (ep_intr != 0U)
9000be38:	087f      	lsrs	r7, r7, #1
        epnum++;
9000be3a:	f10a 0a01 	add.w	sl, sl, #1
      while (ep_intr != 0U)
9000be3e:	f108 0820 	add.w	r8, r8, #32
9000be42:	f10b 0b24 	add.w	fp, fp, #36	@ 0x24
9000be46:	f000 80a5 	beq.w	9000bf94 <HAL_PCD_IRQHandler+0x7a8>
        if ((ep_intr & 0x1U) != 0U)
9000be4a:	07fc      	lsls	r4, r7, #31
9000be4c:	d5f4      	bpl.n	9000be38 <HAL_PCD_IRQHandler+0x64c>
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
9000be4e:	fa5f f48a 	uxtb.w	r4, sl
9000be52:	4621      	mov	r1, r4
9000be54:	f003 fbfc 	bl	9000f650 <USB_ReadDevOutEPInterrupt>
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
9000be58:	f010 0f01 	tst.w	r0, #1
          epint = USB_ReadDevOutEPInterrupt(hpcd->Instance, (uint8_t)epnum);
9000be5c:	4681      	mov	r9, r0
          if ((epint & USB_OTG_DOEPINT_XFRC) == USB_OTG_DOEPINT_XFRC)
9000be5e:	f040 809c 	bne.w	9000bf9a <HAL_PCD_IRQHandler+0x7ae>
          if ((epint & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP)
9000be62:	f019 0f08 	tst.w	r9, #8
9000be66:	f040 80b7 	bne.w	9000bfd8 <HAL_PCD_IRQHandler+0x7ec>
          if ((epint & USB_OTG_DOEPINT_OTEPDIS) == USB_OTG_DOEPINT_OTEPDIS)
9000be6a:	f019 0f10 	tst.w	r9, #16
9000be6e:	d002      	beq.n	9000be76 <HAL_PCD_IRQHandler+0x68a>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPDIS);
9000be70:	2210      	movs	r2, #16
9000be72:	f8c8 2008 	str.w	r2, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_EPDISD) == USB_OTG_DOEPINT_EPDISD)
9000be76:	f019 0f02 	tst.w	r9, #2
9000be7a:	d00f      	beq.n	9000be9c <HAL_PCD_IRQHandler+0x6b0>
            if ((USBx->GINTSTS & USB_OTG_GINTSTS_BOUTNAKEFF) == USB_OTG_GINTSTS_BOUTNAKEFF)
9000be7c:	6972      	ldr	r2, [r6, #20]
9000be7e:	0610      	lsls	r0, r2, #24
9000be80:	d504      	bpl.n	9000be8c <HAL_PCD_IRQHandler+0x6a0>
              USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGONAK;
9000be82:	9b03      	ldr	r3, [sp, #12]
9000be84:	685a      	ldr	r2, [r3, #4]
9000be86:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
9000be8a:	605a      	str	r2, [r3, #4]
            if (ep->is_iso_incomplete == 1U)
9000be8c:	f89b 2257 	ldrb.w	r2, [fp, #599]	@ 0x257
9000be90:	2a01      	cmp	r2, #1
9000be92:	f000 8134 	beq.w	9000c0fe <HAL_PCD_IRQHandler+0x912>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_EPDISD);
9000be96:	2302      	movs	r3, #2
9000be98:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
9000be9c:	f019 0f20 	tst.w	r9, #32
9000bea0:	d002      	beq.n	9000bea8 <HAL_PCD_IRQHandler+0x6bc>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
9000bea2:	2320      	movs	r3, #32
9000bea4:	f8c8 3008 	str.w	r3, [r8, #8]
          if ((epint & USB_OTG_DOEPINT_NAK) == USB_OTG_DOEPINT_NAK)
9000bea8:	f419 5f00 	tst.w	r9, #8192	@ 0x2000
9000beac:	d003      	beq.n	9000beb6 <HAL_PCD_IRQHandler+0x6ca>
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_NAK);
9000beae:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
9000beb2:	f8c8 3008 	str.w	r3, [r8, #8]
9000beb6:	6828      	ldr	r0, [r5, #0]
9000beb8:	e7be      	b.n	9000be38 <HAL_PCD_IRQHandler+0x64c>
        HAL_PCD_SuspendCallback(hpcd);
9000beba:	4620      	mov	r0, r4
9000bebc:	f7f7 fe6c 	bl	90003b98 <HAL_PCD_SuspendCallback>
9000bec0:	e505      	b.n	9000b8ce <HAL_PCD_IRQHandler+0xe2>
        USBx_DEVICE->DOEPMSK |= USB_OTG_DOEPMSK_STUPM |
9000bec2:	4611      	mov	r1, r2
9000bec4:	f242 032b 	movw	r3, #8235	@ 0x202b
9000bec8:	6952      	ldr	r2, [r2, #20]
9000beca:	4313      	orrs	r3, r2
9000becc:	614b      	str	r3, [r1, #20]
        USBx_DEVICE->DIEPMSK |= USB_OTG_DIEPMSK_TOM |
9000bece:	690b      	ldr	r3, [r1, #16]
9000bed0:	f043 030b 	orr.w	r3, r3, #11
9000bed4:	610b      	str	r3, [r1, #16]
9000bed6:	e6d8      	b.n	9000bc8a <HAL_PCD_IRQHandler+0x49e>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bed8:	2900      	cmp	r1, #0
9000beda:	f6bf ad93 	bge.w	9000ba04 <HAL_PCD_IRQHandler+0x218>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bede:	f104 0138 	add.w	r1, r4, #56	@ 0x38
9000bee2:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000bee4:	f884 203b 	strb.w	r2, [r4, #59]	@ 0x3b
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bee8:	f003 f9fc 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000beec:	7923      	ldrb	r3, [r4, #4]
9000beee:	e589      	b.n	9000ba04 <HAL_PCD_IRQHandler+0x218>
        hpcd->LPM_State = LPM_L0;
9000bef0:	2100      	movs	r1, #0
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
9000bef2:	4620      	mov	r0, r4
        hpcd->LPM_State = LPM_L0;
9000bef4:	f884 14cc 	strb.w	r1, [r4, #1228]	@ 0x4cc
        HAL_PCDEx_LPM_Callback(hpcd, PCD_LPM_L0_ACTIVE);
9000bef8:	f000 fc12 	bl	9000c720 <HAL_PCDEx_LPM_Callback>
9000befc:	e66e      	b.n	9000bbdc <HAL_PCD_IRQHandler+0x3f0>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000befe:	2900      	cmp	r1, #0
9000bf00:	f6bf ad89 	bge.w	9000ba16 <HAL_PCD_IRQHandler+0x22a>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf04:	f104 015c 	add.w	r1, r4, #92	@ 0x5c
9000bf08:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000bf0a:	f884 205f 	strb.w	r2, [r4, #95]	@ 0x5f
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf0e:	f003 f9e9 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf12:	7923      	ldrb	r3, [r4, #4]
9000bf14:	e57f      	b.n	9000ba16 <HAL_PCD_IRQHandler+0x22a>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bf16:	2900      	cmp	r1, #0
9000bf18:	f6bf ad86 	bge.w	9000ba28 <HAL_PCD_IRQHandler+0x23c>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf1c:	f104 0180 	add.w	r1, r4, #128	@ 0x80
9000bf20:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000bf22:	f884 2083 	strb.w	r2, [r4, #131]	@ 0x83
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf26:	f003 f9dd 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf2a:	7923      	ldrb	r3, [r4, #4]
9000bf2c:	e57c      	b.n	9000ba28 <HAL_PCD_IRQHandler+0x23c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000bf2e:	2900      	cmp	r1, #0
9000bf30:	f6bf ad83 	bge.w	9000ba3a <HAL_PCD_IRQHandler+0x24e>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf34:	f104 01a4 	add.w	r1, r4, #164	@ 0xa4
9000bf38:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000bf3a:	f884 20a7 	strb.w	r2, [r4, #167]	@ 0xa7
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf3e:	f003 f9d1 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf42:	7923      	ldrb	r3, [r4, #4]
9000bf44:	e579      	b.n	9000ba3a <HAL_PCD_IRQHandler+0x24e>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf46:	f504 7130 	add.w	r1, r4, #704	@ 0x2c0
9000bf4a:	6820      	ldr	r0, [r4, #0]
9000bf4c:	f003 f9ca 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf50:	7923      	ldrb	r3, [r4, #4]
9000bf52:	e4ee      	b.n	9000b932 <HAL_PCD_IRQHandler+0x146>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000bf54:	eb08 08c8 	add.w	r8, r8, r8, lsl #3
        (void)USB_ReadPacket(USBx, (uint8_t *)hpcd->Setup, 8U);
9000bf58:	2208      	movs	r2, #8
9000bf5a:	f204 419c 	addw	r1, r4, #1180	@ 0x49c
9000bf5e:	4630      	mov	r0, r6
9000bf60:	f003 fa20 	bl	9000f3a4 <USB_ReadPacket>
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000bf64:	f3c7 130a 	ubfx	r3, r7, #4, #11
9000bf68:	eb04 0288 	add.w	r2, r4, r8, lsl #2
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000bf6c:	6820      	ldr	r0, [r4, #0]
        ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000bf6e:	f8d2 1268 	ldr.w	r1, [r2, #616]	@ 0x268
9000bf72:	440b      	add	r3, r1
9000bf74:	f8c2 3268 	str.w	r3, [r2, #616]	@ 0x268
9000bf78:	e473      	b.n	9000b862 <HAL_PCD_IRQHandler+0x76>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000bf7a:	f504 7139 	add.w	r1, r4, #740	@ 0x2e4
9000bf7e:	6820      	ldr	r0, [r4, #0]
9000bf80:	f003 f9b0 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000bf84:	7923      	ldrb	r3, [r4, #4]
9000bf86:	e4db      	b.n	9000b940 <HAL_PCD_IRQHandler+0x154>
9000bf88:	6820      	ldr	r0, [r4, #0]
9000bf8a:	e475      	b.n	9000b878 <HAL_PCD_IRQHandler+0x8c>
9000bf8c:	4628      	mov	r0, r5
9000bf8e:	9e04      	ldr	r6, [sp, #16]
9000bf90:	9d05      	ldr	r5, [sp, #20]
9000bf92:	e477      	b.n	9000b884 <HAL_PCD_IRQHandler+0x98>
9000bf94:	462c      	mov	r4, r5
9000bf96:	9d04      	ldr	r5, [sp, #16]
9000bf98:	e46e      	b.n	9000b878 <HAL_PCD_IRQHandler+0x8c>
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutXfrComplete_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  USB_OTG_EPTypeDef *ep;
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000bf9a:	6828      	ldr	r0, [r5, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_XFRC);
9000bf9c:	2201      	movs	r2, #1
9000bf9e:	f8c8 2008 	str.w	r2, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000bfa2:	f500 6230 	add.w	r2, r0, #2816	@ 0xb00

  if (hpcd->Init.dma_enable == 1U)
9000bfa6:	79a9      	ldrb	r1, [r5, #6]
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000bfa8:	eb02 124a 	add.w	r2, r2, sl, lsl #5
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
9000bfac:	f8d0 e040 	ldr.w	lr, [r0, #64]	@ 0x40
  if (hpcd->Init.dma_enable == 1U)
9000bfb0:	2901      	cmp	r1, #1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000bfb2:	6893      	ldr	r3, [r2, #8]
  if (hpcd->Init.dma_enable == 1U)
9000bfb4:	d079      	beq.n	9000c0aa <HAL_PCD_IRQHandler+0x8be>
      /* ... */
    }
  }
  else
  {
    if (gSNPSiD == USB_OTG_CORE_ID_310A)
9000bfb6:	49be      	ldr	r1, [pc, #760]	@ (9000c2b0 <HAL_PCD_IRQHandler+0xac4>)
9000bfb8:	458e      	cmp	lr, r1
9000bfba:	f000 80d8 	beq.w	9000c16e <HAL_PCD_IRQHandler+0x982>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
      }
    }
    else
    {
      if ((epnum == 0U) && (hpcd->OUT_ep[epnum].xfer_len == 0U))
9000bfbe:	f1ba 0f00 	cmp.w	sl, #0
9000bfc2:	d104      	bne.n	9000bfce <HAL_PCD_IRQHandler+0x7e2>
9000bfc4:	f8d5 2264 	ldr.w	r2, [r5, #612]	@ 0x264
9000bfc8:	2a00      	cmp	r2, #0
9000bfca:	f000 81a4 	beq.w	9000c316 <HAL_PCD_IRQHandler+0xb2a>
      }

#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
      hpcd->DataOutStageCallback(hpcd, (uint8_t)epnum);
#else
      HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
9000bfce:	4621      	mov	r1, r4
9000bfd0:	4628      	mov	r0, r5
9000bfd2:	f7f7 fdb3 	bl	90003b3c <HAL_PCD_DataOutStageCallback>
9000bfd6:	e744      	b.n	9000be62 <HAL_PCD_IRQHandler+0x676>
  * @param  epnum endpoint number
  * @retval HAL status
  */
static HAL_StatusTypeDef PCD_EP_OutSetupPacket_int(PCD_HandleTypeDef *hpcd, uint32_t epnum)
{
  const USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000bfd8:	6829      	ldr	r1, [r5, #0]
            CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STUP);
9000bfda:	2208      	movs	r2, #8
9000bfdc:	f8c8 2008 	str.w	r2, [r8, #8]
  uint32_t USBx_BASE = (uint32_t)USBx;
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000bfe0:	f501 6230 	add.w	r2, r1, #2816	@ 0xb00
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
9000bfe4:	6c08      	ldr	r0, [r1, #64]	@ 0x40

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000bfe6:	49b3      	ldr	r1, [pc, #716]	@ (9000c2b4 <HAL_PCD_IRQHandler+0xac8>)
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000bfe8:	eb02 124a 	add.w	r2, r2, sl, lsl #5
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000bfec:	4288      	cmp	r0, r1
  uint32_t DoepintReg = USBx_OUTEP(epnum)->DOEPINT;
9000bfee:	6893      	ldr	r3, [r2, #8]
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000bff0:	d849      	bhi.n	9000c086 <HAL_PCD_IRQHandler+0x89a>

  /* Inform the upper layer that a setup packet is available */
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
  hpcd->SetupStageCallback(hpcd);
#else
  HAL_PCD_SetupStageCallback(hpcd);
9000bff2:	4628      	mov	r0, r5
9000bff4:	f7f7 fd9c 	bl	90003b30 <HAL_PCD_SetupStageCallback>
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */

  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
9000bff8:	e737      	b.n	9000be6a <HAL_PCD_IRQHandler+0x67e>
            (void)USB_FlushTxFifo(USBx, epnum);
9000bffa:	4651      	mov	r1, sl
9000bffc:	9804      	ldr	r0, [sp, #16]
9000bffe:	f002 ff73 	bl	9000eee8 <USB_FlushTxFifo>
            if (ep->is_iso_incomplete == 1U)
9000c002:	f898 2017 	ldrb.w	r2, [r8, #23]
9000c006:	2a01      	cmp	r2, #1
9000c008:	f000 80c5 	beq.w	9000c196 <HAL_PCD_IRQHandler+0x9aa>
            CLEAR_IN_EP_INTR(epnum, USB_OTG_DIEPINT_EPDISD);
9000c00c:	2202      	movs	r2, #2
9000c00e:	f8cb 2008 	str.w	r2, [fp, #8]
9000c012:	e6ad      	b.n	9000bd70 <HAL_PCD_IRQHandler+0x584>
        if ((RegVal & USB_OTG_GRXSTSP_BCNT) != 0U)
9000c014:	f647 73f0 	movw	r3, #32752	@ 0x7ff0
9000c018:	421f      	tst	r7, r3
9000c01a:	f43f ac22 	beq.w	9000b862 <HAL_PCD_IRQHandler+0x76>
          (void)USB_ReadPacket(USBx, ep->xfer_buff,
9000c01e:	eb08 08c8 	add.w	r8, r8, r8, lsl #3
9000c022:	f3c7 120a 	ubfx	r2, r7, #4, #11
9000c026:	4630      	mov	r0, r6
9000c028:	eb04 0888 	add.w	r8, r4, r8, lsl #2
9000c02c:	4617      	mov	r7, r2
9000c02e:	f8d8 1260 	ldr.w	r1, [r8, #608]	@ 0x260
9000c032:	f003 f9b7 	bl	9000f3a4 <USB_ReadPacket>
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000c036:	f8d8 3260 	ldr.w	r3, [r8, #608]	@ 0x260
      USB_UNMASK_INTERRUPT(hpcd->Instance, USB_OTG_GINTSTS_RXFLVL);
9000c03a:	6820      	ldr	r0, [r4, #0]
          ep->xfer_buff += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000c03c:	443b      	add	r3, r7
9000c03e:	f8c8 3260 	str.w	r3, [r8, #608]	@ 0x260
          ep->xfer_count += (RegVal & USB_OTG_GRXSTSP_BCNT) >> 4;
9000c042:	f8d8 3268 	ldr.w	r3, [r8, #616]	@ 0x268
9000c046:	443b      	add	r3, r7
9000c048:	f8c8 3268 	str.w	r3, [r8, #616]	@ 0x268
9000c04c:	e409      	b.n	9000b862 <HAL_PCD_IRQHandler+0x76>
        HAL_PCD_SuspendCallback(hpcd);
9000c04e:	4620      	mov	r0, r4
9000c050:	f7f7 fda2 	bl	90003b98 <HAL_PCD_SuspendCallback>
9000c054:	e57d      	b.n	9000bb52 <HAL_PCD_IRQHandler+0x366>
        HAL_PCD_DisconnectCallback(hpcd);
9000c056:	4620      	mov	r0, r4
9000c058:	f7f7 fdc6 	bl	90003be8 <HAL_PCD_DisconnectCallback>
      hpcd->Instance->GOTGINT |= RegVal;
9000c05c:	6823      	ldr	r3, [r4, #0]
9000c05e:	e56d      	b.n	9000bb3c <HAL_PCD_IRQHandler+0x350>
              hpcd->IN_ep[epnum].xfer_buff += hpcd->IN_ep[epnum].maxpacket;
9000c060:	e9d8 0207 	ldrd	r0, r2, [r8, #28]
9000c064:	4402      	add	r2, r0
9000c066:	f8c8 2020 	str.w	r2, [r8, #32]
              if ((epnum == 0U) && (hpcd->IN_ep[epnum].xfer_len == 0U))
9000c06a:	f1ba 0f00 	cmp.w	sl, #0
9000c06e:	f47f ae69 	bne.w	9000bd44 <HAL_PCD_IRQHandler+0x558>
9000c072:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000c074:	2a00      	cmp	r2, #0
9000c076:	f47f ae65 	bne.w	9000bd44 <HAL_PCD_IRQHandler+0x558>
                (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
9000c07a:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
9000c07e:	6820      	ldr	r0, [r4, #0]
9000c080:	f003 fb1a 	bl	9000f6b8 <USB_EP0_OutStart>
9000c084:	e65e      	b.n	9000bd44 <HAL_PCD_IRQHandler+0x558>
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000c086:	041b      	lsls	r3, r3, #16
9000c088:	d561      	bpl.n	9000c14e <HAL_PCD_IRQHandler+0x962>
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
9000c08a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
  HAL_PCD_SetupStageCallback(hpcd);
9000c08e:	4628      	mov	r0, r5
    CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
9000c090:	6091      	str	r1, [r2, #8]
  HAL_PCD_SetupStageCallback(hpcd);
9000c092:	f7f7 fd4d 	bl	90003b30 <HAL_PCD_SetupStageCallback>
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
9000c096:	79a9      	ldrb	r1, [r5, #6]
9000c098:	2901      	cmp	r1, #1
9000c09a:	f47f aee6 	bne.w	9000be6a <HAL_PCD_IRQHandler+0x67e>
  {
    (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
9000c09e:	f205 429c 	addw	r2, r5, #1180	@ 0x49c
9000c0a2:	6828      	ldr	r0, [r5, #0]
9000c0a4:	f003 fb08 	bl	9000f6b8 <USB_EP0_OutStart>
9000c0a8:	e6df      	b.n	9000be6a <HAL_PCD_IRQHandler+0x67e>
    if ((DoepintReg & USB_OTG_DOEPINT_STUP) == USB_OTG_DOEPINT_STUP) /* Class C */
9000c0aa:	0719      	lsls	r1, r3, #28
9000c0ac:	f140 8097 	bpl.w	9000c1de <HAL_PCD_IRQHandler+0x9f2>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000c0b0:	4980      	ldr	r1, [pc, #512]	@ (9000c2b4 <HAL_PCD_IRQHandler+0xac8>)
9000c0b2:	458e      	cmp	lr, r1
9000c0b4:	f67f aed5 	bls.w	9000be62 <HAL_PCD_IRQHandler+0x676>
9000c0b8:	0418      	lsls	r0, r3, #16
9000c0ba:	f57f aed2 	bpl.w	9000be62 <HAL_PCD_IRQHandler+0x676>
        CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_STPKTRX);
9000c0be:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
9000c0c2:	6091      	str	r1, [r2, #8]
9000c0c4:	e6cd      	b.n	9000be62 <HAL_PCD_IRQHandler+0x676>
  if (ep->xfer_len <= ep->xfer_count)
9000c0c6:	f8dd b018 	ldr.w	fp, [sp, #24]
9000c0ca:	f8d8 2024 	ldr.w	r2, [r8, #36]	@ 0x24
    if (__HAL_PCD_GET_FLAG(hpcd, USB_OTG_GINTSTS_WKUINT))
9000c0ce:	6825      	ldr	r5, [r4, #0]
  if (ep->xfer_len <= ep->xfer_count)
9000c0d0:	4293      	cmp	r3, r2
9000c0d2:	f4ff ae11 	bcc.w	9000bcf8 <HAL_PCD_IRQHandler+0x50c>
9000c0d6:	e694      	b.n	9000be02 <HAL_PCD_IRQHandler+0x616>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c0d8:	2900      	cmp	r1, #0
9000c0da:	f6bf acb7 	bge.w	9000ba4c <HAL_PCD_IRQHandler+0x260>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c0de:	f104 01c8 	add.w	r1, r4, #200	@ 0xc8
9000c0e2:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c0e4:	f884 20cb 	strb.w	r2, [r4, #203]	@ 0xcb
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c0e8:	f003 f8fc 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c0ec:	7923      	ldrb	r3, [r4, #4]
9000c0ee:	e4ad      	b.n	9000ba4c <HAL_PCD_IRQHandler+0x260>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c0f0:	f504 711e 	add.w	r1, r4, #632	@ 0x278
9000c0f4:	6820      	ldr	r0, [r4, #0]
9000c0f6:	f003 f8f5 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c0fa:	7923      	ldrb	r3, [r4, #4]
9000c0fc:	e40b      	b.n	9000b916 <HAL_PCD_IRQHandler+0x12a>
              ep->is_iso_incomplete = 0U;
9000c0fe:	2200      	movs	r2, #0
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
9000c100:	4621      	mov	r1, r4
9000c102:	4628      	mov	r0, r5
              ep->is_iso_incomplete = 0U;
9000c104:	f88b 2257 	strb.w	r2, [fp, #599]	@ 0x257
              HAL_PCD_ISOOUTIncompleteCallback(hpcd, (uint8_t)epnum);
9000c108:	f7f7 fd62 	bl	90003bd0 <HAL_PCD_ISOOUTIncompleteCallback>
9000c10c:	e6c3      	b.n	9000be96 <HAL_PCD_IRQHandler+0x6aa>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c10e:	2900      	cmp	r1, #0
9000c110:	f6bf aca5 	bge.w	9000ba5e <HAL_PCD_IRQHandler+0x272>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c114:	f104 01ec 	add.w	r1, r4, #236	@ 0xec
9000c118:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c11a:	f884 20ef 	strb.w	r2, [r4, #239]	@ 0xef
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c11e:	f003 f8e1 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c122:	7923      	ldrb	r3, [r4, #4]
9000c124:	e49b      	b.n	9000ba5e <HAL_PCD_IRQHandler+0x272>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c126:	f504 7127 	add.w	r1, r4, #668	@ 0x29c
9000c12a:	6820      	ldr	r0, [r4, #0]
9000c12c:	f003 f8da 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c130:	7923      	ldrb	r3, [r4, #4]
9000c132:	f7ff bbf7 	b.w	9000b924 <HAL_PCD_IRQHandler+0x138>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c136:	2900      	cmp	r1, #0
9000c138:	f6bf ac9a 	bge.w	9000ba70 <HAL_PCD_IRQHandler+0x284>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c13c:	f504 7188 	add.w	r1, r4, #272	@ 0x110
9000c140:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c142:	f884 2113 	strb.w	r2, [r4, #275]	@ 0x113
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c146:	f003 f8cd 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c14a:	7923      	ldrb	r3, [r4, #4]
9000c14c:	e490      	b.n	9000ba70 <HAL_PCD_IRQHandler+0x284>
  HAL_PCD_SetupStageCallback(hpcd);
9000c14e:	4628      	mov	r0, r5
9000c150:	f7f7 fcee 	bl	90003b30 <HAL_PCD_SetupStageCallback>
  if ((gSNPSiD > USB_OTG_CORE_ID_300A) && (hpcd->Init.dma_enable == 1U))
9000c154:	e79f      	b.n	9000c096 <HAL_PCD_IRQHandler+0x8aa>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c156:	2900      	cmp	r1, #0
9000c158:	f6bf ac93 	bge.w	9000ba82 <HAL_PCD_IRQHandler+0x296>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c15c:	f504 719a 	add.w	r1, r4, #308	@ 0x134
9000c160:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c162:	f884 2137 	strb.w	r2, [r4, #311]	@ 0x137
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c166:	f003 f8bd 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c16a:	7923      	ldrb	r3, [r4, #4]
9000c16c:	e489      	b.n	9000ba82 <HAL_PCD_IRQHandler+0x296>
      if ((DoepintReg & USB_OTG_DOEPINT_STPKTRX) == USB_OTG_DOEPINT_STPKTRX)
9000c16e:	0418      	lsls	r0, r3, #16
9000c170:	d4a5      	bmi.n	9000c0be <HAL_PCD_IRQHandler+0x8d2>
        if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR)
9000c172:	0699      	lsls	r1, r3, #26
9000c174:	f57f af2b 	bpl.w	9000bfce <HAL_PCD_IRQHandler+0x7e2>
          CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
9000c178:	2120      	movs	r1, #32
9000c17a:	6091      	str	r1, [r2, #8]
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
9000c17c:	e727      	b.n	9000bfce <HAL_PCD_IRQHandler+0x7e2>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c17e:	2900      	cmp	r1, #0
9000c180:	f6bf ac88 	bge.w	9000ba94 <HAL_PCD_IRQHandler+0x2a8>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c184:	f504 71ac 	add.w	r1, r4, #344	@ 0x158
9000c188:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c18a:	f884 215b 	strb.w	r2, [r4, #347]	@ 0x15b
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c18e:	f003 f8a9 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c192:	7923      	ldrb	r3, [r4, #4]
9000c194:	e47e      	b.n	9000ba94 <HAL_PCD_IRQHandler+0x2a8>
              ep->is_iso_incomplete = 0U;
9000c196:	2200      	movs	r2, #0
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
9000c198:	4639      	mov	r1, r7
9000c19a:	4620      	mov	r0, r4
              ep->is_iso_incomplete = 0U;
9000c19c:	f888 2017 	strb.w	r2, [r8, #23]
              HAL_PCD_ISOINIncompleteCallback(hpcd, (uint8_t)epnum);
9000c1a0:	f7f7 fd1a 	bl	90003bd8 <HAL_PCD_ISOINIncompleteCallback>
9000c1a4:	e732      	b.n	9000c00c <HAL_PCD_IRQHandler+0x820>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1a6:	f504 7142 	add.w	r1, r4, #776	@ 0x308
9000c1aa:	6820      	ldr	r0, [r4, #0]
9000c1ac:	f003 f89a 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c1b0:	7923      	ldrb	r3, [r4, #4]
9000c1b2:	f7ff bbcc 	b.w	9000b94e <HAL_PCD_IRQHandler+0x162>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c1b6:	2900      	cmp	r1, #0
9000c1b8:	f6bf ac75 	bge.w	9000baa6 <HAL_PCD_IRQHandler+0x2ba>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1bc:	f504 71be 	add.w	r1, r4, #380	@ 0x17c
9000c1c0:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c1c2:	f884 217f 	strb.w	r2, [r4, #383]	@ 0x17f
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1c6:	f003 f88d 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c1ca:	7923      	ldrb	r3, [r4, #4]
9000c1cc:	e46b      	b.n	9000baa6 <HAL_PCD_IRQHandler+0x2ba>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1ce:	f504 714b 	add.w	r1, r4, #812	@ 0x32c
9000c1d2:	6820      	ldr	r0, [r4, #0]
9000c1d4:	f003 f886 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c1d8:	7923      	ldrb	r3, [r4, #4]
9000c1da:	f7ff bbbf 	b.w	9000b95c <HAL_PCD_IRQHandler+0x170>
    else if ((DoepintReg & USB_OTG_DOEPINT_OTEPSPR) == USB_OTG_DOEPINT_OTEPSPR) /* Class E */
9000c1de:	0699      	lsls	r1, r3, #26
9000c1e0:	d572      	bpl.n	9000c2c8 <HAL_PCD_IRQHandler+0xadc>
      CLEAR_OUT_EP_INTR(epnum, USB_OTG_DOEPINT_OTEPSPR);
9000c1e2:	2120      	movs	r1, #32
9000c1e4:	6091      	str	r1, [r2, #8]
9000c1e6:	e63c      	b.n	9000be62 <HAL_PCD_IRQHandler+0x676>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c1e8:	2900      	cmp	r1, #0
9000c1ea:	f6bf ac65 	bge.w	9000bab8 <HAL_PCD_IRQHandler+0x2cc>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1ee:	f504 71d0 	add.w	r1, r4, #416	@ 0x1a0
9000c1f2:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c1f4:	f884 21a3 	strb.w	r2, [r4, #419]	@ 0x1a3
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c1f8:	f003 f874 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c1fc:	7923      	ldrb	r3, [r4, #4]
9000c1fe:	e45b      	b.n	9000bab8 <HAL_PCD_IRQHandler+0x2cc>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c200:	f504 7154 	add.w	r1, r4, #848	@ 0x350
9000c204:	6820      	ldr	r0, [r4, #0]
9000c206:	f003 f86d 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c20a:	7923      	ldrb	r3, [r4, #4]
9000c20c:	f7ff bbad 	b.w	9000b96a <HAL_PCD_IRQHandler+0x17e>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c210:	2900      	cmp	r1, #0
9000c212:	f6bf ac5a 	bge.w	9000baca <HAL_PCD_IRQHandler+0x2de>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c216:	f504 71e2 	add.w	r1, r4, #452	@ 0x1c4
9000c21a:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c21c:	f884 21c7 	strb.w	r2, [r4, #455]	@ 0x1c7
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c220:	f003 f860 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c224:	7923      	ldrb	r3, [r4, #4]
9000c226:	e450      	b.n	9000baca <HAL_PCD_IRQHandler+0x2de>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c228:	f504 715d 	add.w	r1, r4, #884	@ 0x374
9000c22c:	6820      	ldr	r0, [r4, #0]
9000c22e:	f003 f859 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c232:	7923      	ldrb	r3, [r4, #4]
9000c234:	f7ff bba0 	b.w	9000b978 <HAL_PCD_IRQHandler+0x18c>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c238:	2900      	cmp	r1, #0
9000c23a:	f6bf ac4f 	bge.w	9000badc <HAL_PCD_IRQHandler+0x2f0>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c23e:	f504 71f4 	add.w	r1, r4, #488	@ 0x1e8
9000c242:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c244:	f884 21eb 	strb.w	r2, [r4, #491]	@ 0x1eb
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c248:	f003 f84c 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c24c:	7923      	ldrb	r3, [r4, #4]
9000c24e:	e445      	b.n	9000badc <HAL_PCD_IRQHandler+0x2f0>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c250:	f504 7166 	add.w	r1, r4, #920	@ 0x398
9000c254:	6820      	ldr	r0, [r4, #0]
9000c256:	f003 f845 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c25a:	7923      	ldrb	r3, [r4, #4]
9000c25c:	f7ff bb93 	b.w	9000b986 <HAL_PCD_IRQHandler+0x19a>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c260:	2900      	cmp	r1, #0
9000c262:	f6bf ac44 	bge.w	9000baee <HAL_PCD_IRQHandler+0x302>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c266:	f504 7103 	add.w	r1, r4, #524	@ 0x20c
9000c26a:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c26c:	f884 220f 	strb.w	r2, [r4, #527]	@ 0x20f
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c270:	f003 f838 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c274:	7923      	ldrb	r3, [r4, #4]
9000c276:	e43a      	b.n	9000baee <HAL_PCD_IRQHandler+0x302>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c278:	f504 716f 	add.w	r1, r4, #956	@ 0x3bc
9000c27c:	6820      	ldr	r0, [r4, #0]
9000c27e:	f003 f831 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c282:	7923      	ldrb	r3, [r4, #4]
9000c284:	f7ff bb86 	b.w	9000b994 <HAL_PCD_IRQHandler+0x1a8>
        if ((hpcd->IN_ep[epnum].type == EP_TYPE_ISOC) &&
9000c288:	2900      	cmp	r1, #0
9000c28a:	f6bf ac39 	bge.w	9000bb00 <HAL_PCD_IRQHandler+0x314>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c28e:	f504 710c 	add.w	r1, r4, #560	@ 0x230
9000c292:	6820      	ldr	r0, [r4, #0]
          hpcd->IN_ep[epnum].is_iso_incomplete = 1U;
9000c294:	f884 2233 	strb.w	r2, [r4, #563]	@ 0x233
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c298:	f003 f824 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c29c:	7923      	ldrb	r3, [r4, #4]
9000c29e:	e42f      	b.n	9000bb00 <HAL_PCD_IRQHandler+0x314>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c2a0:	f504 7178 	add.w	r1, r4, #992	@ 0x3e0
9000c2a4:	6820      	ldr	r0, [r4, #0]
9000c2a6:	f003 f81d 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c2aa:	7923      	ldrb	r3, [r4, #4]
9000c2ac:	f7ff bb79 	b.w	9000b9a2 <HAL_PCD_IRQHandler+0x1b6>
9000c2b0:	4f54310a 	.word	0x4f54310a
9000c2b4:	4f54300a 	.word	0x4f54300a
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c2b8:	f204 4104 	addw	r1, r4, #1028	@ 0x404
9000c2bc:	6820      	ldr	r0, [r4, #0]
9000c2be:	f003 f811 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c2c2:	7923      	ldrb	r3, [r4, #4]
9000c2c4:	f7ff bb74 	b.w	9000b9b0 <HAL_PCD_IRQHandler+0x1c4>
    else if ((DoepintReg & (USB_OTG_DOEPINT_STUP | USB_OTG_DOEPINT_OTEPSPR)) == 0U)
9000c2c8:	f013 0f28 	tst.w	r3, #40	@ 0x28
9000c2cc:	f47f adc9 	bne.w	9000be62 <HAL_PCD_IRQHandler+0x676>
      if ((gSNPSiD > USB_OTG_CORE_ID_300A) &&
9000c2d0:	491b      	ldr	r1, [pc, #108]	@ (9000c340 <HAL_PCD_IRQHandler+0xb54>)
9000c2d2:	458e      	cmp	lr, r1
9000c2d4:	d902      	bls.n	9000c2dc <HAL_PCD_IRQHandler+0xaf0>
9000c2d6:	041b      	lsls	r3, r3, #16
9000c2d8:	f53f aef1 	bmi.w	9000c0be <HAL_PCD_IRQHandler+0x8d2>
        ep->xfer_count = ep->xfer_size - (USBx_OUTEP(epnum)->DOEPTSIZ & USB_OTG_DOEPTSIZ_XFRSIZ);
9000c2dc:	6911      	ldr	r1, [r2, #16]
9000c2de:	f8db 2274 	ldr.w	r2, [fp, #628]	@ 0x274
9000c2e2:	f3c1 0112 	ubfx	r1, r1, #0, #19
9000c2e6:	1a52      	subs	r2, r2, r1
9000c2e8:	f8cb 2268 	str.w	r2, [fp, #616]	@ 0x268
        if (epnum == 0U)
9000c2ec:	f1ba 0f00 	cmp.w	sl, #0
9000c2f0:	f47f ae6d 	bne.w	9000bfce <HAL_PCD_IRQHandler+0x7e2>
          if (ep->xfer_len == 0U)
9000c2f4:	f8d5 1264 	ldr.w	r1, [r5, #612]	@ 0x264
9000c2f8:	b1d9      	cbz	r1, 9000c332 <HAL_PCD_IRQHandler+0xb46>
            ep->xfer_buff += ep->xfer_count;
9000c2fa:	f8d5 1260 	ldr.w	r1, [r5, #608]	@ 0x260
9000c2fe:	4411      	add	r1, r2
9000c300:	f8c5 1260 	str.w	r1, [r5, #608]	@ 0x260
        HAL_PCD_DataOutStageCallback(hpcd, (uint8_t)epnum);
9000c304:	e663      	b.n	9000bfce <HAL_PCD_IRQHandler+0x7e2>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c306:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
9000c30a:	6820      	ldr	r0, [r4, #0]
9000c30c:	f002 ffea 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c310:	7923      	ldrb	r3, [r4, #4]
9000c312:	f7ff bb54 	b.w	9000b9be <HAL_PCD_IRQHandler+0x1d2>
        (void)USB_EP0_OutStart(hpcd->Instance, 0U, (uint8_t *)hpcd->Setup);
9000c316:	f205 429c 	addw	r2, r5, #1180	@ 0x49c
9000c31a:	4651      	mov	r1, sl
9000c31c:	f003 f9cc 	bl	9000f6b8 <USB_EP0_OutStart>
9000c320:	e655      	b.n	9000bfce <HAL_PCD_IRQHandler+0x7e2>
  ret = USB_EPStopXfer(hpcd->Instance, ep);
9000c322:	f204 414c 	addw	r1, r4, #1100	@ 0x44c
9000c326:	6820      	ldr	r0, [r4, #0]
9000c328:	f002 ffdc 	bl	9000f2e4 <USB_EPStopXfer>
      for (epnum = 1U; epnum < hpcd->Init.dev_endpoints; epnum++)
9000c32c:	7923      	ldrb	r3, [r4, #4]
9000c32e:	f7ff bb4d 	b.w	9000b9cc <HAL_PCD_IRQHandler+0x1e0>
            (void)USB_EP0_OutStart(hpcd->Instance, 1U, (uint8_t *)hpcd->Setup);
9000c332:	f205 429c 	addw	r2, r5, #1180	@ 0x49c
9000c336:	2101      	movs	r1, #1
9000c338:	f003 f9be 	bl	9000f6b8 <USB_EP0_OutStart>
9000c33c:	e647      	b.n	9000bfce <HAL_PCD_IRQHandler+0x7e2>
9000c33e:	bf00      	nop
9000c340:	4f54300a 	.word	0x4f54300a

9000c344 <HAL_PCD_SetAddress>:
  __HAL_LOCK(hpcd);
9000c344:	f890 2494 	ldrb.w	r2, [r0, #1172]	@ 0x494
9000c348:	2a01      	cmp	r2, #1
9000c34a:	d00d      	beq.n	9000c368 <HAL_PCD_SetAddress+0x24>
9000c34c:	2201      	movs	r2, #1
{
9000c34e:	b510      	push	{r4, lr}
9000c350:	4604      	mov	r4, r0
  (void)USB_SetDevAddress(hpcd->Instance, address);
9000c352:	6800      	ldr	r0, [r0, #0]
  hpcd->USB_Address = address;
9000c354:	7461      	strb	r1, [r4, #17]
  __HAL_LOCK(hpcd);
9000c356:	f884 2494 	strb.w	r2, [r4, #1172]	@ 0x494
  (void)USB_SetDevAddress(hpcd->Instance, address);
9000c35a:	f003 f933 	bl	9000f5c4 <USB_SetDevAddress>
  __HAL_UNLOCK(hpcd);
9000c35e:	2300      	movs	r3, #0
  return HAL_OK;
9000c360:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000c362:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000c366:	bd10      	pop	{r4, pc}
  __HAL_LOCK(hpcd);
9000c368:	2002      	movs	r0, #2
}
9000c36a:	4770      	bx	lr

9000c36c <HAL_PCD_EP_Open>:
{
9000c36c:	b510      	push	{r4, lr}
9000c36e:	f001 0e0f 	and.w	lr, r1, #15
  if ((ep_addr & 0x80U) == 0x80U)
9000c372:	0609      	lsls	r1, r1, #24
{
9000c374:	4604      	mov	r4, r0
9000c376:	eb0e 0cce 	add.w	ip, lr, lr, lsl #3
9000c37a:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
  if ((ep_addr & 0x80U) == 0x80U)
9000c37e:	d425      	bmi.n	9000c3cc <HAL_PCD_EP_Open+0x60>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c380:	f50c 7115 	add.w	r1, ip, #596	@ 0x254
    ep->is_in = 0U;
9000c384:	f04f 0c00 	mov.w	ip, #0
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c388:	4401      	add	r1, r0
    ep->is_in = 0U;
9000c38a:	eb0e 00ce 	add.w	r0, lr, lr, lsl #3
9000c38e:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000c392:	f880 c255 	strb.w	ip, [r0, #597]	@ 0x255
  ep->maxpacket = ep_mps;
9000c396:	608a      	str	r2, [r1, #8]
  if (ep->is_in != 0U)
9000c398:	784a      	ldrb	r2, [r1, #1]
  ep->num = ep_addr & EP_ADDR_MSK;
9000c39a:	f881 e000 	strb.w	lr, [r1]
  ep->type = ep_type;
9000c39e:	710b      	strb	r3, [r1, #4]
  if (ep->is_in != 0U)
9000c3a0:	b10a      	cbz	r2, 9000c3a6 <HAL_PCD_EP_Open+0x3a>
    ep->tx_fifo_num = ep->num;
9000c3a2:	f8a1 e01a 	strh.w	lr, [r1, #26]
  if (ep_type == EP_TYPE_BULK)
9000c3a6:	2b02      	cmp	r3, #2
9000c3a8:	d101      	bne.n	9000c3ae <HAL_PCD_EP_Open+0x42>
    ep->data_pid_start = 0U;
9000c3aa:	2300      	movs	r3, #0
9000c3ac:	714b      	strb	r3, [r1, #5]
  __HAL_LOCK(hpcd);
9000c3ae:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c3b2:	2b01      	cmp	r3, #1
9000c3b4:	d016      	beq.n	9000c3e4 <HAL_PCD_EP_Open+0x78>
9000c3b6:	2301      	movs	r3, #1
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
9000c3b8:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
9000c3ba:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_ActivateEndpoint(hpcd->Instance, ep);
9000c3be:	f002 fdc7 	bl	9000ef50 <USB_ActivateEndpoint>
  __HAL_UNLOCK(hpcd);
9000c3c2:	2300      	movs	r3, #0
  return ret;
9000c3c4:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000c3c6:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000c3ca:	bd10      	pop	{r4, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c3cc:	f10c 0114 	add.w	r1, ip, #20
    ep->is_in = 1U;
9000c3d0:	f04f 0c01 	mov.w	ip, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c3d4:	4401      	add	r1, r0
    ep->is_in = 1U;
9000c3d6:	eb0e 00ce 	add.w	r0, lr, lr, lsl #3
9000c3da:	eb04 0080 	add.w	r0, r4, r0, lsl #2
9000c3de:	f880 c015 	strb.w	ip, [r0, #21]
9000c3e2:	e7d8      	b.n	9000c396 <HAL_PCD_EP_Open+0x2a>
  __HAL_LOCK(hpcd);
9000c3e4:	2002      	movs	r0, #2
}
9000c3e6:	bd10      	pop	{r4, pc}

9000c3e8 <HAL_PCD_EP_Close>:
  if ((ep_addr & 0x80U) == 0x80U)
9000c3e8:	f001 030f 	and.w	r3, r1, #15
9000c3ec:	0609      	lsls	r1, r1, #24
9000c3ee:	461a      	mov	r2, r3
9000c3f0:	eb03 03c3 	add.w	r3, r3, r3, lsl #3
{
9000c3f4:	b510      	push	{r4, lr}
9000c3f6:	ea4f 0383 	mov.w	r3, r3, lsl #2
9000c3fa:	4604      	mov	r4, r0
  if ((ep_addr & 0x80U) == 0x80U)
9000c3fc:	d419      	bmi.n	9000c432 <HAL_PCD_EP_Close+0x4a>
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c3fe:	f503 7115 	add.w	r1, r3, #596	@ 0x254
    ep->is_in = 0U;
9000c402:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
9000c406:	2000      	movs	r0, #0
9000c408:	eb04 0383 	add.w	r3, r4, r3, lsl #2
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c40c:	4421      	add	r1, r4
    ep->is_in = 0U;
9000c40e:	f883 0255 	strb.w	r0, [r3, #597]	@ 0x255
  ep->num = ep_addr & EP_ADDR_MSK;
9000c412:	700a      	strb	r2, [r1, #0]
  __HAL_LOCK(hpcd);
9000c414:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c418:	2b01      	cmp	r3, #1
9000c41a:	d01a      	beq.n	9000c452 <HAL_PCD_EP_Close+0x6a>
9000c41c:	2301      	movs	r3, #1
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
9000c41e:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
9000c420:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_DeactivateEndpoint(hpcd->Instance, ep);
9000c424:	f002 fdda 	bl	9000efdc <USB_DeactivateEndpoint>
  __HAL_UNLOCK(hpcd);
9000c428:	2300      	movs	r3, #0
  return HAL_OK;
9000c42a:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000c42c:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000c430:	bd10      	pop	{r4, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c432:	f103 0114 	add.w	r1, r3, #20
    ep->is_in = 1U;
9000c436:	eb02 00c2 	add.w	r0, r2, r2, lsl #3
9000c43a:	f04f 0c01 	mov.w	ip, #1
9000c43e:	eb04 0380 	add.w	r3, r4, r0, lsl #2
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c442:	4421      	add	r1, r4
    ep->is_in = 1U;
9000c444:	f883 c015 	strb.w	ip, [r3, #21]
  ep->num = ep_addr & EP_ADDR_MSK;
9000c448:	700a      	strb	r2, [r1, #0]
  __HAL_LOCK(hpcd);
9000c44a:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c44e:	2b01      	cmp	r3, #1
9000c450:	d1e4      	bne.n	9000c41c <HAL_PCD_EP_Close+0x34>
9000c452:	2002      	movs	r0, #2
}
9000c454:	bd10      	pop	{r4, pc}
9000c456:	bf00      	nop

9000c458 <HAL_PCD_EP_Receive>:
{
9000c458:	b510      	push	{r4, lr}
9000c45a:	f001 0e0f 	and.w	lr, r1, #15
9000c45e:	4614      	mov	r4, r2
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c460:	2124      	movs	r1, #36	@ 0x24
  ep->xfer_buff = pBuf;
9000c462:	eb0e 0cce 	add.w	ip, lr, lr, lsl #3
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c466:	fb01 010e 	mla	r1, r1, lr, r0
  ep->xfer_buff = pBuf;
9000c46a:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
  ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c46e:	f501 7115 	add.w	r1, r1, #596	@ 0x254
  ep->xfer_len = len;
9000c472:	f8cc 3264 	str.w	r3, [ip, #612]	@ 0x264
  ep->xfer_count = 0U;
9000c476:	2300      	movs	r3, #0
  ep->num = ep_addr & EP_ADDR_MSK;
9000c478:	f88c e254 	strb.w	lr, [ip, #596]	@ 0x254
  ep->xfer_buff = pBuf;
9000c47c:	f8cc 2260 	str.w	r2, [ip, #608]	@ 0x260
  ep->xfer_count = 0U;
9000c480:	f8cc 3268 	str.w	r3, [ip, #616]	@ 0x268
  ep->is_in = 0U;
9000c484:	f88c 3255 	strb.w	r3, [ip, #597]	@ 0x255
  if (hpcd->Init.dma_enable == 1U)
9000c488:	7982      	ldrb	r2, [r0, #6]
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000c48a:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
9000c48c:	2a01      	cmp	r2, #1
    ep->dma_addr = (uint32_t)pBuf;
9000c48e:	bf08      	it	eq
9000c490:	f8cc 4270 	streq.w	r4, [ip, #624]	@ 0x270
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000c494:	f002 fe00 	bl	9000f098 <USB_EPStartXfer>
}
9000c498:	2000      	movs	r0, #0
9000c49a:	bd10      	pop	{r4, pc}

9000c49c <HAL_PCD_EP_Transmit>:
{
9000c49c:	b510      	push	{r4, lr}
9000c49e:	f001 0e0f 	and.w	lr, r1, #15
9000c4a2:	4614      	mov	r4, r2
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c4a4:	2124      	movs	r1, #36	@ 0x24
  ep->xfer_buff = pBuf;
9000c4a6:	eb0e 0cce 	add.w	ip, lr, lr, lsl #3
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c4aa:	fb01 010e 	mla	r1, r1, lr, r0
  ep->xfer_buff = pBuf;
9000c4ae:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
  ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c4b2:	3114      	adds	r1, #20
  ep->xfer_len = len;
9000c4b4:	f8cc 3024 	str.w	r3, [ip, #36]	@ 0x24
  ep->xfer_count = 0U;
9000c4b8:	2300      	movs	r3, #0
  ep->num = ep_addr & EP_ADDR_MSK;
9000c4ba:	f88c e014 	strb.w	lr, [ip, #20]
  ep->xfer_count = 0U;
9000c4be:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28
  ep->is_in = 1U;
9000c4c2:	2301      	movs	r3, #1
  ep->xfer_buff = pBuf;
9000c4c4:	f8cc 2020 	str.w	r2, [ip, #32]
  ep->is_in = 1U;
9000c4c8:	f88c 3015 	strb.w	r3, [ip, #21]
  if (hpcd->Init.dma_enable == 1U)
9000c4cc:	7982      	ldrb	r2, [r0, #6]
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000c4ce:	6800      	ldr	r0, [r0, #0]
  if (hpcd->Init.dma_enable == 1U)
9000c4d0:	429a      	cmp	r2, r3
    ep->dma_addr = (uint32_t)pBuf;
9000c4d2:	bf08      	it	eq
9000c4d4:	f8cc 4030 	streq.w	r4, [ip, #48]	@ 0x30
  (void)USB_EPStartXfer(hpcd->Instance, ep, (uint8_t)hpcd->Init.dma_enable);
9000c4d8:	f002 fdde 	bl	9000f098 <USB_EPStartXfer>
}
9000c4dc:	2000      	movs	r0, #0
9000c4de:	bd10      	pop	{r4, pc}

9000c4e0 <HAL_PCD_EP_SetStall>:
{
9000c4e0:	b538      	push	{r3, r4, r5, lr}
9000c4e2:	f001 050f 	and.w	r5, r1, #15
  if (((uint32_t)ep_addr & EP_ADDR_MSK) > hpcd->Init.dev_endpoints)
9000c4e6:	7903      	ldrb	r3, [r0, #4]
9000c4e8:	42ab      	cmp	r3, r5
9000c4ea:	d333      	bcc.n	9000c554 <HAL_PCD_EP_SetStall+0x74>
  if ((0x80U & ep_addr) == 0x80U)
9000c4ec:	060b      	lsls	r3, r1, #24
9000c4ee:	4604      	mov	r4, r0
9000c4f0:	d41d      	bmi.n	9000c52e <HAL_PCD_EP_SetStall+0x4e>
    ep = &hpcd->OUT_ep[ep_addr];
9000c4f2:	2224      	movs	r2, #36	@ 0x24
    ep->is_in = 0U;
9000c4f4:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
    ep = &hpcd->OUT_ep[ep_addr];
9000c4f8:	fb02 0101 	mla	r1, r2, r1, r0
    ep->is_in = 0U;
9000c4fc:	eb00 0383 	add.w	r3, r0, r3, lsl #2
9000c500:	2200      	movs	r2, #0
    ep = &hpcd->OUT_ep[ep_addr];
9000c502:	f501 7115 	add.w	r1, r1, #596	@ 0x254
    ep->is_in = 0U;
9000c506:	f883 2255 	strb.w	r2, [r3, #597]	@ 0x255
  ep->is_stall = 1U;
9000c50a:	2301      	movs	r3, #1
  ep->num = ep_addr & EP_ADDR_MSK;
9000c50c:	700d      	strb	r5, [r1, #0]
  ep->is_stall = 1U;
9000c50e:	708b      	strb	r3, [r1, #2]
  __HAL_LOCK(hpcd);
9000c510:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
9000c514:	429a      	cmp	r2, r3
9000c516:	d01b      	beq.n	9000c550 <HAL_PCD_EP_SetStall+0x70>
  (void)USB_EPSetStall(hpcd->Instance, ep);
9000c518:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
9000c51a:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPSetStall(hpcd->Instance, ep);
9000c51e:	f002 ff65 	bl	9000f3ec <USB_EPSetStall>
  if ((ep_addr & EP_ADDR_MSK) == 0U)
9000c522:	b1cd      	cbz	r5, 9000c558 <HAL_PCD_EP_SetStall+0x78>
  __HAL_UNLOCK(hpcd);
9000c524:	2300      	movs	r3, #0
  return HAL_OK;
9000c526:	4618      	mov	r0, r3
  __HAL_UNLOCK(hpcd);
9000c528:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
}
9000c52c:	bd38      	pop	{r3, r4, r5, pc}
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c52e:	2124      	movs	r1, #36	@ 0x24
    ep->is_in = 1U;
9000c530:	eb05 03c5 	add.w	r3, r5, r5, lsl #3
9000c534:	2201      	movs	r2, #1
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c536:	fb01 0105 	mla	r1, r1, r5, r0
    ep->is_in = 1U;
9000c53a:	eb00 0383 	add.w	r3, r0, r3, lsl #2
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c53e:	3114      	adds	r1, #20
    ep->is_in = 1U;
9000c540:	755a      	strb	r2, [r3, #21]
  ep->is_stall = 1U;
9000c542:	2301      	movs	r3, #1
  ep->num = ep_addr & EP_ADDR_MSK;
9000c544:	700d      	strb	r5, [r1, #0]
  ep->is_stall = 1U;
9000c546:	708b      	strb	r3, [r1, #2]
  __HAL_LOCK(hpcd);
9000c548:	f894 2494 	ldrb.w	r2, [r4, #1172]	@ 0x494
9000c54c:	429a      	cmp	r2, r3
9000c54e:	d1e3      	bne.n	9000c518 <HAL_PCD_EP_SetStall+0x38>
9000c550:	2002      	movs	r0, #2
}
9000c552:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000c554:	2001      	movs	r0, #1
}
9000c556:	bd38      	pop	{r3, r4, r5, pc}
    (void)USB_EP0_OutStart(hpcd->Instance, (uint8_t)hpcd->Init.dma_enable, (uint8_t *)hpcd->Setup);
9000c558:	f204 429c 	addw	r2, r4, #1180	@ 0x49c
9000c55c:	79a1      	ldrb	r1, [r4, #6]
9000c55e:	6820      	ldr	r0, [r4, #0]
9000c560:	f003 f8aa 	bl	9000f6b8 <USB_EP0_OutStart>
9000c564:	e7de      	b.n	9000c524 <HAL_PCD_EP_SetStall+0x44>
9000c566:	bf00      	nop

9000c568 <HAL_PCD_EP_ClrStall>:
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
9000c568:	f001 020f 	and.w	r2, r1, #15
{
9000c56c:	b538      	push	{r3, r4, r5, lr}
  if (((uint32_t)ep_addr & 0x0FU) > hpcd->Init.dev_endpoints)
9000c56e:	7903      	ldrb	r3, [r0, #4]
9000c570:	4293      	cmp	r3, r2
9000c572:	d332      	bcc.n	9000c5da <HAL_PCD_EP_ClrStall+0x72>
  if ((0x80U & ep_addr) == 0x80U)
9000c574:	eb02 03c2 	add.w	r3, r2, r2, lsl #3
9000c578:	0609      	lsls	r1, r1, #24
9000c57a:	4604      	mov	r4, r0
9000c57c:	ea4f 0383 	mov.w	r3, r3, lsl #2
9000c580:	d41a      	bmi.n	9000c5b8 <HAL_PCD_EP_ClrStall+0x50>
    ep->is_in = 0U;
9000c582:	eb02 00c2 	add.w	r0, r2, r2, lsl #3
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c586:	f503 7315 	add.w	r3, r3, #596	@ 0x254
    ep->is_in = 0U;
9000c58a:	2500      	movs	r5, #0
9000c58c:	eb04 0080 	add.w	r0, r4, r0, lsl #2
    ep = &hpcd->OUT_ep[ep_addr & EP_ADDR_MSK];
9000c590:	18e1      	adds	r1, r4, r3
    ep->is_in = 0U;
9000c592:	f880 5255 	strb.w	r5, [r0, #597]	@ 0x255
  ep->is_stall = 0U;
9000c596:	2500      	movs	r5, #0
  ep->num = ep_addr & EP_ADDR_MSK;
9000c598:	700a      	strb	r2, [r1, #0]
  ep->is_stall = 0U;
9000c59a:	708d      	strb	r5, [r1, #2]
  __HAL_LOCK(hpcd);
9000c59c:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c5a0:	2b01      	cmp	r3, #1
9000c5a2:	d018      	beq.n	9000c5d6 <HAL_PCD_EP_ClrStall+0x6e>
9000c5a4:	2301      	movs	r3, #1
  (void)USB_EPClearStall(hpcd->Instance, ep);
9000c5a6:	6820      	ldr	r0, [r4, #0]
  __HAL_LOCK(hpcd);
9000c5a8:	f884 3494 	strb.w	r3, [r4, #1172]	@ 0x494
  (void)USB_EPClearStall(hpcd->Instance, ep);
9000c5ac:	f002 ff56 	bl	9000f45c <USB_EPClearStall>
  return HAL_OK;
9000c5b0:	4628      	mov	r0, r5
  __HAL_UNLOCK(hpcd);
9000c5b2:	f884 5494 	strb.w	r5, [r4, #1172]	@ 0x494
}
9000c5b6:	bd38      	pop	{r3, r4, r5, pc}
    ep->is_in = 1U;
9000c5b8:	eb02 00c2 	add.w	r0, r2, r2, lsl #3
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c5bc:	3314      	adds	r3, #20
    ep->is_in = 1U;
9000c5be:	2501      	movs	r5, #1
9000c5c0:	eb04 0080 	add.w	r0, r4, r0, lsl #2
    ep = &hpcd->IN_ep[ep_addr & EP_ADDR_MSK];
9000c5c4:	18e1      	adds	r1, r4, r3
    ep->is_in = 1U;
9000c5c6:	7545      	strb	r5, [r0, #21]
  ep->is_stall = 0U;
9000c5c8:	2500      	movs	r5, #0
  ep->num = ep_addr & EP_ADDR_MSK;
9000c5ca:	700a      	strb	r2, [r1, #0]
  ep->is_stall = 0U;
9000c5cc:	708d      	strb	r5, [r1, #2]
  __HAL_LOCK(hpcd);
9000c5ce:	f894 3494 	ldrb.w	r3, [r4, #1172]	@ 0x494
9000c5d2:	2b01      	cmp	r3, #1
9000c5d4:	d1e6      	bne.n	9000c5a4 <HAL_PCD_EP_ClrStall+0x3c>
9000c5d6:	2002      	movs	r0, #2
}
9000c5d8:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000c5da:	2001      	movs	r0, #1
}
9000c5dc:	bd38      	pop	{r3, r4, r5, pc}
9000c5de:	bf00      	nop

9000c5e0 <HAL_PCDEx_SetTxFiFo>:
         --> Txn should be configured with the minimum space of 16 words
     The FIFO is used optimally when used TxFIFOs are allocated in the top
         of the FIFO.Ex: use EP1 and EP2 as IN instead of EP1 and EP3 as IN ones.
     When DMA is used 3n * FIFO locations should be reserved for internal DMA registers */

  Tx_Offset = hpcd->Instance->GRXFSIZ;
9000c5e0:	6800      	ldr	r0, [r0, #0]

  if (fifo == 0U)
  {
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
9000c5e2:	0412      	lsls	r2, r2, #16
  Tx_Offset = hpcd->Instance->GRXFSIZ;
9000c5e4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
  if (fifo == 0U)
9000c5e6:	b919      	cbnz	r1, 9000c5f0 <HAL_PCDEx_SetTxFiFo+0x10>
    hpcd->Instance->DIEPTXF0_HNPTXFSIZ = ((uint32_t)size << 16) | Tx_Offset;
9000c5e8:	4313      	orrs	r3, r2
9000c5ea:	6283      	str	r3, [r0, #40]	@ 0x28
    /* Multiply Tx_Size by 2 to get higher performance */
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
  }

  return HAL_OK;
}
9000c5ec:	2000      	movs	r0, #0
9000c5ee:	4770      	bx	lr
{
9000c5f0:	b430      	push	{r4, r5}
    for (i = 0U; i < (fifo - 1U); i++)
9000c5f2:	3901      	subs	r1, #1
    Tx_Offset += (hpcd->Instance->DIEPTXF0_HNPTXFSIZ) >> 16;
9000c5f4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000c5f6:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c5fa:	d06b      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c5fc:	f8d0 4104 	ldr.w	r4, [r0, #260]	@ 0x104
    for (i = 0U; i < (fifo - 1U); i++)
9000c600:	2901      	cmp	r1, #1
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c602:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c606:	d065      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c608:	f8d0 4108 	ldr.w	r4, [r0, #264]	@ 0x108
    for (i = 0U; i < (fifo - 1U); i++)
9000c60c:	2902      	cmp	r1, #2
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c60e:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c612:	d05f      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c614:	f8d0 410c 	ldr.w	r4, [r0, #268]	@ 0x10c
    for (i = 0U; i < (fifo - 1U); i++)
9000c618:	2903      	cmp	r1, #3
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c61a:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c61e:	d059      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c620:	f8d0 4110 	ldr.w	r4, [r0, #272]	@ 0x110
    for (i = 0U; i < (fifo - 1U); i++)
9000c624:	2904      	cmp	r1, #4
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c626:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c62a:	d053      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c62c:	f8d0 4114 	ldr.w	r4, [r0, #276]	@ 0x114
    for (i = 0U; i < (fifo - 1U); i++)
9000c630:	2905      	cmp	r1, #5
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c632:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c636:	d04d      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c638:	f8d0 4118 	ldr.w	r4, [r0, #280]	@ 0x118
    for (i = 0U; i < (fifo - 1U); i++)
9000c63c:	2906      	cmp	r1, #6
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c63e:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c642:	d047      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c644:	f8d0 411c 	ldr.w	r4, [r0, #284]	@ 0x11c
    for (i = 0U; i < (fifo - 1U); i++)
9000c648:	2907      	cmp	r1, #7
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c64a:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c64e:	d041      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c650:	f8d0 4120 	ldr.w	r4, [r0, #288]	@ 0x120
    for (i = 0U; i < (fifo - 1U); i++)
9000c654:	2908      	cmp	r1, #8
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c656:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c65a:	d03b      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c65c:	f8d0 4124 	ldr.w	r4, [r0, #292]	@ 0x124
    for (i = 0U; i < (fifo - 1U); i++)
9000c660:	2909      	cmp	r1, #9
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c662:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c666:	d035      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c668:	f8d0 4128 	ldr.w	r4, [r0, #296]	@ 0x128
    for (i = 0U; i < (fifo - 1U); i++)
9000c66c:	290a      	cmp	r1, #10
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c66e:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c672:	d02f      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c674:	f8d0 412c 	ldr.w	r4, [r0, #300]	@ 0x12c
    for (i = 0U; i < (fifo - 1U); i++)
9000c678:	290b      	cmp	r1, #11
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c67a:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c67e:	d029      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c680:	f8d0 4130 	ldr.w	r4, [r0, #304]	@ 0x130
    for (i = 0U; i < (fifo - 1U); i++)
9000c684:	290c      	cmp	r1, #12
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c686:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c68a:	d023      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c68c:	f8d0 4134 	ldr.w	r4, [r0, #308]	@ 0x134
    for (i = 0U; i < (fifo - 1U); i++)
9000c690:	290d      	cmp	r1, #13
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c692:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c696:	d01d      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c698:	f8d0 4138 	ldr.w	r4, [r0, #312]	@ 0x138
    for (i = 0U; i < (fifo - 1U); i++)
9000c69c:	290e      	cmp	r1, #14
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c69e:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6a2:	d017      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6a4:	f8d0 413c 	ldr.w	r4, [r0, #316]	@ 0x13c
    for (i = 0U; i < (fifo - 1U); i++)
9000c6a8:	290f      	cmp	r1, #15
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6aa:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6ae:	d011      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6b0:	f8d0 4140 	ldr.w	r4, [r0, #320]	@ 0x140
    for (i = 0U; i < (fifo - 1U); i++)
9000c6b4:	2910      	cmp	r1, #16
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6b6:	eb03 4314 	add.w	r3, r3, r4, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6ba:	d00b      	beq.n	9000c6d4 <HAL_PCDEx_SetTxFiFo+0xf4>
9000c6bc:	2410      	movs	r4, #16
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6be:	f104 0c40 	add.w	ip, r4, #64	@ 0x40
    for (i = 0U; i < (fifo - 1U); i++)
9000c6c2:	3401      	adds	r4, #1
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6c4:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
    for (i = 0U; i < (fifo - 1U); i++)
9000c6c8:	428c      	cmp	r4, r1
      Tx_Offset += (hpcd->Instance->DIEPTXF[i] >> 16);
9000c6ca:	f8dc 5004 	ldr.w	r5, [ip, #4]
9000c6ce:	eb03 4315 	add.w	r3, r3, r5, lsr #16
    for (i = 0U; i < (fifo - 1U); i++)
9000c6d2:	d3f4      	bcc.n	9000c6be <HAL_PCDEx_SetTxFiFo+0xde>
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
9000c6d4:	3140      	adds	r1, #64	@ 0x40
9000c6d6:	431a      	orrs	r2, r3
9000c6d8:	eb00 0381 	add.w	r3, r0, r1, lsl #2
}
9000c6dc:	2000      	movs	r0, #0
9000c6de:	bc30      	pop	{r4, r5}
    hpcd->Instance->DIEPTXF[fifo - 1U] = ((uint32_t)size << 16) | Tx_Offset;
9000c6e0:	605a      	str	r2, [r3, #4]
}
9000c6e2:	4770      	bx	lr

9000c6e4 <HAL_PCDEx_SetRxFiFo>:
  * @param  hpcd PCD handle
  * @param  size Size of Rx fifo
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_SetRxFiFo(PCD_HandleTypeDef *hpcd, uint16_t size)
{
9000c6e4:	4603      	mov	r3, r0
  hpcd->Instance->GRXFSIZ = size;

  return HAL_OK;
}
9000c6e6:	2000      	movs	r0, #0
  hpcd->Instance->GRXFSIZ = size;
9000c6e8:	681b      	ldr	r3, [r3, #0]
9000c6ea:	6259      	str	r1, [r3, #36]	@ 0x24
}
9000c6ec:	4770      	bx	lr
9000c6ee:	bf00      	nop

9000c6f0 <HAL_PCDEx_ActivateLPM>:
  * @brief  Activate LPM feature.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_ActivateLPM(PCD_HandleTypeDef *hpcd)
{
9000c6f0:	4603      	mov	r3, r0
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;

  hpcd->lpm_active = 1U;
  hpcd->LPM_State = LPM_L0;
9000c6f2:	f04f 0c00 	mov.w	ip, #0
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
9000c6f6:	4909      	ldr	r1, [pc, #36]	@ (9000c71c <HAL_PCDEx_ActivateLPM+0x2c>)
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
9000c6f8:	681a      	ldr	r2, [r3, #0]

  return HAL_OK;
}
9000c6fa:	4660      	mov	r0, ip
{
9000c6fc:	b410      	push	{r4}
  hpcd->lpm_active = 1U;
9000c6fe:	2401      	movs	r4, #1
  hpcd->LPM_State = LPM_L0;
9000c700:	f883 c4cc 	strb.w	ip, [r3, #1228]	@ 0x4cc
  hpcd->lpm_active = 1U;
9000c704:	f8c3 44d8 	str.w	r4, [r3, #1240]	@ 0x4d8
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
9000c708:	6993      	ldr	r3, [r2, #24]
}
9000c70a:	f85d 4b04 	ldr.w	r4, [sp], #4
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
9000c70e:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
9000c712:	6193      	str	r3, [r2, #24]
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
9000c714:	6d53      	ldr	r3, [r2, #84]	@ 0x54
9000c716:	4319      	orrs	r1, r3
9000c718:	6551      	str	r1, [r2, #84]	@ 0x54
}
9000c71a:	4770      	bx	lr
9000c71c:	10000003 	.word	0x10000003

9000c720 <HAL_PCDEx_LPM_Callback>:
  UNUSED(msg);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_PCDEx_LPM_Callback could be implemented in the user file
   */
}
9000c720:	4770      	bx	lr
9000c722:	bf00      	nop

9000c724 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000c724:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000c726:	4c10      	ldr	r4, [pc, #64]	@ (9000c768 <HAL_PWREx_ConfigSupply+0x44>)
9000c728:	68e3      	ldr	r3, [r4, #12]
9000c72a:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000c72e:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000c730:	d105      	bne.n	9000c73e <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000c732:	f003 0307 	and.w	r3, r3, #7
9000c736:	1a18      	subs	r0, r3, r0
9000c738:	bf18      	it	ne
9000c73a:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000c73c:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000c73e:	f023 0307 	bic.w	r3, r3, #7
9000c742:	4303      	orrs	r3, r0
9000c744:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000c746:	f7fb fbd9 	bl	90007efc <HAL_GetTick>
9000c74a:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000c74c:	e005      	b.n	9000c75a <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000c74e:	f7fb fbd5 	bl	90007efc <HAL_GetTick>
9000c752:	1b40      	subs	r0, r0, r5
9000c754:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000c758:	d804      	bhi.n	9000c764 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000c75a:	6863      	ldr	r3, [r4, #4]
9000c75c:	049b      	lsls	r3, r3, #18
9000c75e:	d5f6      	bpl.n	9000c74e <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000c760:	2000      	movs	r0, #0
}
9000c762:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000c764:	2001      	movs	r0, #1
}
9000c766:	bd38      	pop	{r3, r4, r5, pc}
9000c768:	58024800 	.word	0x58024800

9000c76c <HAL_PWREx_EnableUSBVoltageDetector>:
  * @retval None.
  */
void HAL_PWREx_EnableUSBVoltageDetector (void)
{
  /* Enable the USB voltage detector */
  SET_BIT (PWR->CR3, PWR_CR3_USB33DEN);
9000c76c:	4a02      	ldr	r2, [pc, #8]	@ (9000c778 <HAL_PWREx_EnableUSBVoltageDetector+0xc>)
9000c76e:	68d3      	ldr	r3, [r2, #12]
9000c770:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000c774:	60d3      	str	r3, [r2, #12]
}
9000c776:	4770      	bx	lr
9000c778:	58024800 	.word	0x58024800

9000c77c <HAL_PWREx_DisableUSBVoltageDetector>:
  * @retval None.
  */
void HAL_PWREx_DisableUSBVoltageDetector (void)
{
  /* Disable the USB voltage detector */
  CLEAR_BIT (PWR->CR3, PWR_CR3_USB33DEN);
9000c77c:	4a02      	ldr	r2, [pc, #8]	@ (9000c788 <HAL_PWREx_DisableUSBVoltageDetector+0xc>)
9000c77e:	68d3      	ldr	r3, [r2, #12]
9000c780:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000c784:	60d3      	str	r3, [r2, #12]
}
9000c786:	4770      	bx	lr
9000c788:	58024800 	.word	0x58024800

9000c78c <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c78c:	4b33      	ldr	r3, [pc, #204]	@ (9000c85c <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000c78e:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c790:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c792:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c794:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000c796:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c79a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000c79c:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000c7a0:	d036      	beq.n	9000c810 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c7a2:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000c7a6:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c7aa:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c7ae:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000c7b2:	fb05 f202 	mul.w	r2, r5, r2
9000c7b6:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c7b8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c7bc:	ee06 2a90 	vmov	s13, r2
9000c7c0:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000c7c4:	d002      	beq.n	9000c7cc <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000c7c6:	2902      	cmp	r1, #2
9000c7c8:	d042      	beq.n	9000c850 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000c7ca:	b319      	cbz	r1, 9000c814 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c7cc:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000c860 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000c7d0:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000c7d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000c7d6:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c7da:	ee07 3a90 	vmov	s15, r3
9000c7de:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c7e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c7e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000c7ea:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000c7ee:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000c7f2:	4b1a      	ldr	r3, [pc, #104]	@ (9000c85c <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000c7f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000c7f6:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c7fa:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000c7fc:	ee07 3a10 	vmov	s14, r3
9000c800:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000c804:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000c808:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000c80c:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000c810:	bc30      	pop	{r4, r5}
9000c812:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c814:	681a      	ldr	r2, [r3, #0]
9000c816:	0692      	lsls	r2, r2, #26
9000c818:	d51d      	bpl.n	9000c856 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c81a:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c81c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c820:	4a10      	ldr	r2, [pc, #64]	@ (9000c864 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c822:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c824:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c828:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c82c:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c82e:	ee07 3a90 	vmov	s15, r3
9000c832:	ee06 2a10 	vmov	s12, r2
9000c836:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c83a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c83e:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000c842:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000c846:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000c84a:	ee67 7a87 	vmul.f32	s15, s15, s14
9000c84e:	e7d0      	b.n	9000c7f2 <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c850:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c868 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000c854:	e7bc      	b.n	9000c7d0 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000c856:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c86c <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000c85a:	e7b9      	b.n	9000c7d0 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000c85c:	58024400 	.word	0x58024400
9000c860:	4a742400 	.word	0x4a742400
9000c864:	03d09000 	.word	0x03d09000
9000c868:	4bbebc20 	.word	0x4bbebc20
9000c86c:	4c742400 	.word	0x4c742400

9000c870 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000c870:	2800      	cmp	r0, #0
9000c872:	f000 82e9 	beq.w	9000ce48 <HAL_RCC_OscConfig+0x5d8>
{
9000c876:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000c878:	6803      	ldr	r3, [r0, #0]
9000c87a:	4604      	mov	r4, r0
9000c87c:	07d9      	lsls	r1, r3, #31
9000c87e:	d52e      	bpl.n	9000c8de <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c880:	4997      	ldr	r1, [pc, #604]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
9000c882:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c884:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c886:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000c88a:	2a10      	cmp	r2, #16
9000c88c:	f000 80ee 	beq.w	9000ca6c <HAL_RCC_OscConfig+0x1fc>
9000c890:	2a18      	cmp	r2, #24
9000c892:	f000 80e6 	beq.w	9000ca62 <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000c896:	6863      	ldr	r3, [r4, #4]
9000c898:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000c89c:	f000 8111 	beq.w	9000cac2 <HAL_RCC_OscConfig+0x252>
9000c8a0:	2b00      	cmp	r3, #0
9000c8a2:	f000 8167 	beq.w	9000cb74 <HAL_RCC_OscConfig+0x304>
9000c8a6:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000c8aa:	4b8d      	ldr	r3, [pc, #564]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
9000c8ac:	681a      	ldr	r2, [r3, #0]
9000c8ae:	f000 828a 	beq.w	9000cdc6 <HAL_RCC_OscConfig+0x556>
9000c8b2:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000c8b6:	601a      	str	r2, [r3, #0]
9000c8b8:	681a      	ldr	r2, [r3, #0]
9000c8ba:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000c8be:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000c8c0:	f7fb fb1c 	bl	90007efc <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c8c4:	4e86      	ldr	r6, [pc, #536]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000c8c6:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c8c8:	e005      	b.n	9000c8d6 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000c8ca:	f7fb fb17 	bl	90007efc <HAL_GetTick>
9000c8ce:	1b40      	subs	r0, r0, r5
9000c8d0:	2864      	cmp	r0, #100	@ 0x64
9000c8d2:	f200 814d 	bhi.w	9000cb70 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000c8d6:	6833      	ldr	r3, [r6, #0]
9000c8d8:	039b      	lsls	r3, r3, #14
9000c8da:	d5f6      	bpl.n	9000c8ca <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000c8dc:	6823      	ldr	r3, [r4, #0]
9000c8de:	079d      	lsls	r5, r3, #30
9000c8e0:	d470      	bmi.n	9000c9c4 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000c8e2:	06d9      	lsls	r1, r3, #27
9000c8e4:	d533      	bpl.n	9000c94e <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c8e6:	4a7e      	ldr	r2, [pc, #504]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
9000c8e8:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c8ea:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c8ec:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000c8f0:	2b08      	cmp	r3, #8
9000c8f2:	f000 80cb 	beq.w	9000ca8c <HAL_RCC_OscConfig+0x21c>
9000c8f6:	2b18      	cmp	r3, #24
9000c8f8:	f000 80c3 	beq.w	9000ca82 <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000c8fc:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000c8fe:	4d78      	ldr	r5, [pc, #480]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000c900:	2b00      	cmp	r3, #0
9000c902:	f000 816f 	beq.w	9000cbe4 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000c906:	682b      	ldr	r3, [r5, #0]
9000c908:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000c90c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c90e:	f7fb faf5 	bl	90007efc <HAL_GetTick>
9000c912:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c914:	e005      	b.n	9000c922 <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000c916:	f7fb faf1 	bl	90007efc <HAL_GetTick>
9000c91a:	1b80      	subs	r0, r0, r6
9000c91c:	2802      	cmp	r0, #2
9000c91e:	f200 8127 	bhi.w	9000cb70 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000c922:	682b      	ldr	r3, [r5, #0]
9000c924:	05db      	lsls	r3, r3, #23
9000c926:	d5f6      	bpl.n	9000c916 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000c928:	f7fb fb00 	bl	90007f2c <HAL_GetREVID>
9000c92c:	f241 0303 	movw	r3, #4099	@ 0x1003
9000c930:	4298      	cmp	r0, r3
9000c932:	f200 8269 	bhi.w	9000ce08 <HAL_RCC_OscConfig+0x598>
9000c936:	6a22      	ldr	r2, [r4, #32]
9000c938:	686b      	ldr	r3, [r5, #4]
9000c93a:	2a20      	cmp	r2, #32
9000c93c:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000c940:	bf0c      	ite	eq
9000c942:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000c946:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000c94a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000c94c:	6823      	ldr	r3, [r4, #0]
9000c94e:	071d      	lsls	r5, r3, #28
9000c950:	d516      	bpl.n	9000c980 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000c952:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000c954:	4d62      	ldr	r5, [pc, #392]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000c956:	2b00      	cmp	r3, #0
9000c958:	f000 8122 	beq.w	9000cba0 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000c95c:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000c95e:	f043 0301 	orr.w	r3, r3, #1
9000c962:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000c964:	f7fb faca 	bl	90007efc <HAL_GetTick>
9000c968:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000c96a:	e005      	b.n	9000c978 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000c96c:	f7fb fac6 	bl	90007efc <HAL_GetTick>
9000c970:	1b80      	subs	r0, r0, r6
9000c972:	2802      	cmp	r0, #2
9000c974:	f200 80fc 	bhi.w	9000cb70 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000c978:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000c97a:	0798      	lsls	r0, r3, #30
9000c97c:	d5f6      	bpl.n	9000c96c <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000c97e:	6823      	ldr	r3, [r4, #0]
9000c980:	069a      	lsls	r2, r3, #26
9000c982:	d516      	bpl.n	9000c9b2 <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000c984:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000c986:	4d56      	ldr	r5, [pc, #344]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000c988:	2b00      	cmp	r3, #0
9000c98a:	f000 811a 	beq.w	9000cbc2 <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000c98e:	682b      	ldr	r3, [r5, #0]
9000c990:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000c994:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000c996:	f7fb fab1 	bl	90007efc <HAL_GetTick>
9000c99a:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000c99c:	e005      	b.n	9000c9aa <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000c99e:	f7fb faad 	bl	90007efc <HAL_GetTick>
9000c9a2:	1b80      	subs	r0, r0, r6
9000c9a4:	2802      	cmp	r0, #2
9000c9a6:	f200 80e3 	bhi.w	9000cb70 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000c9aa:	682b      	ldr	r3, [r5, #0]
9000c9ac:	049f      	lsls	r7, r3, #18
9000c9ae:	d5f6      	bpl.n	9000c99e <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000c9b0:	6823      	ldr	r3, [r4, #0]
9000c9b2:	0759      	lsls	r1, r3, #29
9000c9b4:	f100 808b 	bmi.w	9000cace <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000c9b8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000c9ba:	2b00      	cmp	r3, #0
9000c9bc:	f040 80bf 	bne.w	9000cb3e <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000c9c0:	2000      	movs	r0, #0
}
9000c9c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000c9c4:	4a46      	ldr	r2, [pc, #280]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
9000c9c6:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000c9c8:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000c9ca:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000c9ce:	d12d      	bne.n	9000ca2c <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000c9d0:	4b43      	ldr	r3, [pc, #268]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000c9d2:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000c9d4:	681b      	ldr	r3, [r3, #0]
9000c9d6:	0759      	lsls	r1, r3, #29
9000c9d8:	d501      	bpl.n	9000c9de <HAL_RCC_OscConfig+0x16e>
9000c9da:	2a00      	cmp	r2, #0
9000c9dc:	d04f      	beq.n	9000ca7e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000c9de:	4d40      	ldr	r5, [pc, #256]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
9000c9e0:	682b      	ldr	r3, [r5, #0]
9000c9e2:	f023 0319 	bic.w	r3, r3, #25
9000c9e6:	4313      	orrs	r3, r2
9000c9e8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000c9ea:	f7fb fa87 	bl	90007efc <HAL_GetTick>
9000c9ee:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c9f0:	e005      	b.n	9000c9fe <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000c9f2:	f7fb fa83 	bl	90007efc <HAL_GetTick>
9000c9f6:	1b80      	subs	r0, r0, r6
9000c9f8:	2802      	cmp	r0, #2
9000c9fa:	f200 80b9 	bhi.w	9000cb70 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000c9fe:	682b      	ldr	r3, [r5, #0]
9000ca00:	075b      	lsls	r3, r3, #29
9000ca02:	d5f6      	bpl.n	9000c9f2 <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000ca04:	f7fb fa92 	bl	90007f2c <HAL_GetREVID>
9000ca08:	f241 0303 	movw	r3, #4099	@ 0x1003
9000ca0c:	4298      	cmp	r0, r3
9000ca0e:	f200 8110 	bhi.w	9000cc32 <HAL_RCC_OscConfig+0x3c2>
9000ca12:	6922      	ldr	r2, [r4, #16]
9000ca14:	686b      	ldr	r3, [r5, #4]
9000ca16:	2a40      	cmp	r2, #64	@ 0x40
9000ca18:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000ca1c:	bf0c      	ite	eq
9000ca1e:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000ca22:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000ca26:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000ca28:	6823      	ldr	r3, [r4, #0]
9000ca2a:	e75a      	b.n	9000c8e2 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000ca2c:	2b18      	cmp	r3, #24
9000ca2e:	f000 80fc 	beq.w	9000cc2a <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ca32:	4d2b      	ldr	r5, [pc, #172]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000ca34:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ca36:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000ca38:	2a00      	cmp	r2, #0
9000ca3a:	f000 80e5 	beq.w	9000cc08 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000ca3e:	f023 0319 	bic.w	r3, r3, #25
9000ca42:	4313      	orrs	r3, r2
9000ca44:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ca46:	f7fb fa59 	bl	90007efc <HAL_GetTick>
9000ca4a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ca4c:	e005      	b.n	9000ca5a <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000ca4e:	f7fb fa55 	bl	90007efc <HAL_GetTick>
9000ca52:	1b80      	subs	r0, r0, r6
9000ca54:	2802      	cmp	r0, #2
9000ca56:	f200 808b 	bhi.w	9000cb70 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ca5a:	682b      	ldr	r3, [r5, #0]
9000ca5c:	075f      	lsls	r7, r3, #29
9000ca5e:	d5f6      	bpl.n	9000ca4e <HAL_RCC_OscConfig+0x1de>
9000ca60:	e7d0      	b.n	9000ca04 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000ca62:	f001 0103 	and.w	r1, r1, #3
9000ca66:	2902      	cmp	r1, #2
9000ca68:	f47f af15 	bne.w	9000c896 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000ca6c:	4a1c      	ldr	r2, [pc, #112]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
9000ca6e:	6812      	ldr	r2, [r2, #0]
9000ca70:	0392      	lsls	r2, r2, #14
9000ca72:	f57f af34 	bpl.w	9000c8de <HAL_RCC_OscConfig+0x6e>
9000ca76:	6862      	ldr	r2, [r4, #4]
9000ca78:	2a00      	cmp	r2, #0
9000ca7a:	f47f af30 	bne.w	9000c8de <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000ca7e:	2001      	movs	r0, #1
}
9000ca80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000ca82:	f002 0203 	and.w	r2, r2, #3
9000ca86:	2a01      	cmp	r2, #1
9000ca88:	f47f af38 	bne.w	9000c8fc <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000ca8c:	4b14      	ldr	r3, [pc, #80]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
9000ca8e:	681b      	ldr	r3, [r3, #0]
9000ca90:	05da      	lsls	r2, r3, #23
9000ca92:	d502      	bpl.n	9000ca9a <HAL_RCC_OscConfig+0x22a>
9000ca94:	69e3      	ldr	r3, [r4, #28]
9000ca96:	2b80      	cmp	r3, #128	@ 0x80
9000ca98:	d1f1      	bne.n	9000ca7e <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ca9a:	f7fb fa47 	bl	90007f2c <HAL_GetREVID>
9000ca9e:	f241 0303 	movw	r3, #4099	@ 0x1003
9000caa2:	4298      	cmp	r0, r3
9000caa4:	f200 80ce 	bhi.w	9000cc44 <HAL_RCC_OscConfig+0x3d4>
9000caa8:	6a22      	ldr	r2, [r4, #32]
9000caaa:	2a20      	cmp	r2, #32
9000caac:	f000 81bb 	beq.w	9000ce26 <HAL_RCC_OscConfig+0x5b6>
9000cab0:	490b      	ldr	r1, [pc, #44]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
9000cab2:	684b      	ldr	r3, [r1, #4]
9000cab4:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000cab8:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000cabc:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000cabe:	6823      	ldr	r3, [r4, #0]
9000cac0:	e745      	b.n	9000c94e <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000cac2:	4a07      	ldr	r2, [pc, #28]	@ (9000cae0 <HAL_RCC_OscConfig+0x270>)
9000cac4:	6813      	ldr	r3, [r2, #0]
9000cac6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000caca:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000cacc:	e6f8      	b.n	9000c8c0 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000cace:	4d05      	ldr	r5, [pc, #20]	@ (9000cae4 <HAL_RCC_OscConfig+0x274>)
9000cad0:	682b      	ldr	r3, [r5, #0]
9000cad2:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000cad6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000cad8:	f7fb fa10 	bl	90007efc <HAL_GetTick>
9000cadc:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000cade:	e008      	b.n	9000caf2 <HAL_RCC_OscConfig+0x282>
9000cae0:	58024400 	.word	0x58024400
9000cae4:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000cae8:	f7fb fa08 	bl	90007efc <HAL_GetTick>
9000caec:	1b80      	subs	r0, r0, r6
9000caee:	2864      	cmp	r0, #100	@ 0x64
9000caf0:	d83e      	bhi.n	9000cb70 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000caf2:	682b      	ldr	r3, [r5, #0]
9000caf4:	05da      	lsls	r2, r3, #23
9000caf6:	d5f7      	bpl.n	9000cae8 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000caf8:	68a3      	ldr	r3, [r4, #8]
9000cafa:	2b01      	cmp	r3, #1
9000cafc:	f000 818d 	beq.w	9000ce1a <HAL_RCC_OscConfig+0x5aa>
9000cb00:	2b00      	cmp	r3, #0
9000cb02:	f000 8168 	beq.w	9000cdd6 <HAL_RCC_OscConfig+0x566>
9000cb06:	2b05      	cmp	r3, #5
9000cb08:	4b85      	ldr	r3, [pc, #532]	@ (9000cd20 <HAL_RCC_OscConfig+0x4b0>)
9000cb0a:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000cb0c:	f000 8194 	beq.w	9000ce38 <HAL_RCC_OscConfig+0x5c8>
9000cb10:	f022 0201 	bic.w	r2, r2, #1
9000cb14:	671a      	str	r2, [r3, #112]	@ 0x70
9000cb16:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000cb18:	f022 0204 	bic.w	r2, r2, #4
9000cb1c:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000cb1e:	f7fb f9ed 	bl	90007efc <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000cb22:	4e7f      	ldr	r6, [pc, #508]	@ (9000cd20 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cb24:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000cb28:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000cb2a:	e004      	b.n	9000cb36 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cb2c:	f7fb f9e6 	bl	90007efc <HAL_GetTick>
9000cb30:	1b40      	subs	r0, r0, r5
9000cb32:	42b8      	cmp	r0, r7
9000cb34:	d81c      	bhi.n	9000cb70 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000cb36:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000cb38:	079b      	lsls	r3, r3, #30
9000cb3a:	d5f7      	bpl.n	9000cb2c <HAL_RCC_OscConfig+0x2bc>
9000cb3c:	e73c      	b.n	9000c9b8 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000cb3e:	4d78      	ldr	r5, [pc, #480]	@ (9000cd20 <HAL_RCC_OscConfig+0x4b0>)
9000cb40:	692a      	ldr	r2, [r5, #16]
9000cb42:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000cb46:	2a18      	cmp	r2, #24
9000cb48:	f000 80f0 	beq.w	9000cd2c <HAL_RCC_OscConfig+0x4bc>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000cb4c:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000cb4e:	682b      	ldr	r3, [r5, #0]
9000cb50:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000cb54:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000cb56:	d07f      	beq.n	9000cc58 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000cb58:	f7fb f9d0 	bl	90007efc <HAL_GetTick>
9000cb5c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000cb5e:	682b      	ldr	r3, [r5, #0]
9000cb60:	019b      	lsls	r3, r3, #6
9000cb62:	f57f af2d 	bpl.w	9000c9c0 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000cb66:	f7fb f9c9 	bl	90007efc <HAL_GetTick>
9000cb6a:	1b00      	subs	r0, r0, r4
9000cb6c:	2802      	cmp	r0, #2
9000cb6e:	d9f6      	bls.n	9000cb5e <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000cb70:	2003      	movs	r0, #3
}
9000cb72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000cb74:	4d6a      	ldr	r5, [pc, #424]	@ (9000cd20 <HAL_RCC_OscConfig+0x4b0>)
9000cb76:	682b      	ldr	r3, [r5, #0]
9000cb78:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000cb7c:	602b      	str	r3, [r5, #0]
9000cb7e:	682b      	ldr	r3, [r5, #0]
9000cb80:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000cb84:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000cb86:	f7fb f9b9 	bl	90007efc <HAL_GetTick>
9000cb8a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000cb8c:	e004      	b.n	9000cb98 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000cb8e:	f7fb f9b5 	bl	90007efc <HAL_GetTick>
9000cb92:	1b80      	subs	r0, r0, r6
9000cb94:	2864      	cmp	r0, #100	@ 0x64
9000cb96:	d8eb      	bhi.n	9000cb70 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000cb98:	682b      	ldr	r3, [r5, #0]
9000cb9a:	039f      	lsls	r7, r3, #14
9000cb9c:	d4f7      	bmi.n	9000cb8e <HAL_RCC_OscConfig+0x31e>
9000cb9e:	e69d      	b.n	9000c8dc <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000cba0:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000cba2:	f023 0301 	bic.w	r3, r3, #1
9000cba6:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000cba8:	f7fb f9a8 	bl	90007efc <HAL_GetTick>
9000cbac:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000cbae:	e004      	b.n	9000cbba <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000cbb0:	f7fb f9a4 	bl	90007efc <HAL_GetTick>
9000cbb4:	1b80      	subs	r0, r0, r6
9000cbb6:	2802      	cmp	r0, #2
9000cbb8:	d8da      	bhi.n	9000cb70 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000cbba:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000cbbc:	0799      	lsls	r1, r3, #30
9000cbbe:	d4f7      	bmi.n	9000cbb0 <HAL_RCC_OscConfig+0x340>
9000cbc0:	e6dd      	b.n	9000c97e <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000cbc2:	682b      	ldr	r3, [r5, #0]
9000cbc4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000cbc8:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000cbca:	f7fb f997 	bl	90007efc <HAL_GetTick>
9000cbce:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000cbd0:	e004      	b.n	9000cbdc <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000cbd2:	f7fb f993 	bl	90007efc <HAL_GetTick>
9000cbd6:	1b80      	subs	r0, r0, r6
9000cbd8:	2802      	cmp	r0, #2
9000cbda:	d8c9      	bhi.n	9000cb70 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000cbdc:	682b      	ldr	r3, [r5, #0]
9000cbde:	0498      	lsls	r0, r3, #18
9000cbe0:	d4f7      	bmi.n	9000cbd2 <HAL_RCC_OscConfig+0x362>
9000cbe2:	e6e5      	b.n	9000c9b0 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000cbe4:	682b      	ldr	r3, [r5, #0]
9000cbe6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000cbea:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000cbec:	f7fb f986 	bl	90007efc <HAL_GetTick>
9000cbf0:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000cbf2:	e004      	b.n	9000cbfe <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000cbf4:	f7fb f982 	bl	90007efc <HAL_GetTick>
9000cbf8:	1b80      	subs	r0, r0, r6
9000cbfa:	2802      	cmp	r0, #2
9000cbfc:	d8b8      	bhi.n	9000cb70 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000cbfe:	682b      	ldr	r3, [r5, #0]
9000cc00:	05df      	lsls	r7, r3, #23
9000cc02:	d4f7      	bmi.n	9000cbf4 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000cc04:	6823      	ldr	r3, [r4, #0]
9000cc06:	e6a2      	b.n	9000c94e <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000cc08:	f023 0301 	bic.w	r3, r3, #1
9000cc0c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000cc0e:	f7fb f975 	bl	90007efc <HAL_GetTick>
9000cc12:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000cc14:	e004      	b.n	9000cc20 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000cc16:	f7fb f971 	bl	90007efc <HAL_GetTick>
9000cc1a:	1b80      	subs	r0, r0, r6
9000cc1c:	2802      	cmp	r0, #2
9000cc1e:	d8a7      	bhi.n	9000cb70 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000cc20:	682b      	ldr	r3, [r5, #0]
9000cc22:	0758      	lsls	r0, r3, #29
9000cc24:	d4f7      	bmi.n	9000cc16 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000cc26:	6823      	ldr	r3, [r4, #0]
9000cc28:	e65b      	b.n	9000c8e2 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000cc2a:	0790      	lsls	r0, r2, #30
9000cc2c:	f47f af01 	bne.w	9000ca32 <HAL_RCC_OscConfig+0x1c2>
9000cc30:	e6ce      	b.n	9000c9d0 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000cc32:	686b      	ldr	r3, [r5, #4]
9000cc34:	6922      	ldr	r2, [r4, #16]
9000cc36:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000cc3a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000cc3e:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000cc40:	6823      	ldr	r3, [r4, #0]
9000cc42:	e64e      	b.n	9000c8e2 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000cc44:	4a36      	ldr	r2, [pc, #216]	@ (9000cd20 <HAL_RCC_OscConfig+0x4b0>)
9000cc46:	6a21      	ldr	r1, [r4, #32]
9000cc48:	68d3      	ldr	r3, [r2, #12]
9000cc4a:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000cc4e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000cc52:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000cc54:	6823      	ldr	r3, [r4, #0]
9000cc56:	e67a      	b.n	9000c94e <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000cc58:	f7fb f950 	bl	90007efc <HAL_GetTick>
9000cc5c:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000cc5e:	e004      	b.n	9000cc6a <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000cc60:	f7fb f94c 	bl	90007efc <HAL_GetTick>
9000cc64:	1b80      	subs	r0, r0, r6
9000cc66:	2802      	cmp	r0, #2
9000cc68:	d882      	bhi.n	9000cb70 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000cc6a:	682b      	ldr	r3, [r5, #0]
9000cc6c:	0199      	lsls	r1, r3, #6
9000cc6e:	d4f7      	bmi.n	9000cc60 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000cc70:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000cc72:	4b2c      	ldr	r3, [pc, #176]	@ (9000cd24 <HAL_RCC_OscConfig+0x4b4>)
9000cc74:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000cc76:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000cc78:	492b      	ldr	r1, [pc, #172]	@ (9000cd28 <HAL_RCC_OscConfig+0x4b8>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000cc7a:	4e29      	ldr	r6, [pc, #164]	@ (9000cd20 <HAL_RCC_OscConfig+0x4b0>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000cc7c:	4313      	orrs	r3, r2
9000cc7e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000cc80:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000cc84:	62ab      	str	r3, [r5, #40]	@ 0x28
9000cc86:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000cc8a:	3b01      	subs	r3, #1
9000cc8c:	3a01      	subs	r2, #1
9000cc8e:	025b      	lsls	r3, r3, #9
9000cc90:	0412      	lsls	r2, r2, #16
9000cc92:	b29b      	uxth	r3, r3
9000cc94:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000cc98:	4313      	orrs	r3, r2
9000cc9a:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9000cc9c:	3a01      	subs	r2, #1
9000cc9e:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000cca2:	4313      	orrs	r3, r2
9000cca4:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000cca6:	3a01      	subs	r2, #1
9000cca8:	0612      	lsls	r2, r2, #24
9000ccaa:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000ccae:	4313      	orrs	r3, r2
9000ccb0:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000ccb2:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ccb4:	f023 0301 	bic.w	r3, r3, #1
9000ccb8:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000ccba:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
9000ccbc:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
9000ccbe:	4011      	ands	r1, r2
9000ccc0:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000ccc4:	6369      	str	r1, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000ccc6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ccc8:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000ccca:	f023 030c 	bic.w	r3, r3, #12
9000ccce:	4313      	orrs	r3, r2
9000ccd0:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000ccd2:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ccd4:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000ccd6:	f023 0302 	bic.w	r3, r3, #2
9000ccda:	4313      	orrs	r3, r2
9000ccdc:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000ccde:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000cce0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000cce4:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000cce6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000cce8:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000ccec:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000ccee:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ccf0:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000ccf4:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000ccf6:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ccf8:	f043 0301 	orr.w	r3, r3, #1
9000ccfc:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000ccfe:	682b      	ldr	r3, [r5, #0]
9000cd00:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000cd04:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000cd06:	f7fb f8f9 	bl	90007efc <HAL_GetTick>
9000cd0a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000cd0c:	6833      	ldr	r3, [r6, #0]
9000cd0e:	019a      	lsls	r2, r3, #6
9000cd10:	f53f ae56 	bmi.w	9000c9c0 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000cd14:	f7fb f8f2 	bl	90007efc <HAL_GetTick>
9000cd18:	1b00      	subs	r0, r0, r4
9000cd1a:	2802      	cmp	r0, #2
9000cd1c:	d9f6      	bls.n	9000cd0c <HAL_RCC_OscConfig+0x49c>
9000cd1e:	e727      	b.n	9000cb70 <HAL_RCC_OscConfig+0x300>
9000cd20:	58024400 	.word	0x58024400
9000cd24:	fffffc0c 	.word	0xfffffc0c
9000cd28:	ffff0007 	.word	0xffff0007
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000cd2c:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000cd2e:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000cd30:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000cd32:	f43f aea4 	beq.w	9000ca7e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000cd36:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000cd3a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000cd3c:	428b      	cmp	r3, r1
9000cd3e:	f47f ae9e 	bne.w	9000ca7e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000cd42:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000cd46:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000cd48:	429a      	cmp	r2, r3
9000cd4a:	f47f ae98 	bne.w	9000ca7e <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000cd4e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000cd50:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000cd54:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000cd56:	429a      	cmp	r2, r3
9000cd58:	f47f ae91 	bne.w	9000ca7e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000cd5c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000cd5e:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000cd62:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000cd64:	429a      	cmp	r2, r3
9000cd66:	f47f ae8a 	bne.w	9000ca7e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000cd6a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000cd6c:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000cd70:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000cd72:	429a      	cmp	r2, r3
9000cd74:	f47f ae83 	bne.w	9000ca7e <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000cd78:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000cd7a:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000cd7e:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000cd80:	4298      	cmp	r0, r3
9000cd82:	f47f ae7c 	bne.w	9000ca7e <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000cd86:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000cd88:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000cd8a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000cd8e:	429a      	cmp	r2, r3
9000cd90:	f43f ae16 	beq.w	9000c9c0 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000cd94:	4a2d      	ldr	r2, [pc, #180]	@ (9000ce4c <HAL_RCC_OscConfig+0x5dc>)
9000cd96:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000cd98:	f023 0301 	bic.w	r3, r3, #1
9000cd9c:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000cd9e:	f7fb f8ad 	bl	90007efc <HAL_GetTick>
9000cda2:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000cda4:	f7fb f8aa 	bl	90007efc <HAL_GetTick>
9000cda8:	42a8      	cmp	r0, r5
9000cdaa:	d0fb      	beq.n	9000cda4 <HAL_RCC_OscConfig+0x534>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000cdac:	4a27      	ldr	r2, [pc, #156]	@ (9000ce4c <HAL_RCC_OscConfig+0x5dc>)
9000cdae:	4b28      	ldr	r3, [pc, #160]	@ (9000ce50 <HAL_RCC_OscConfig+0x5e0>)
9000cdb0:	6b50      	ldr	r0, [r2, #52]	@ 0x34
9000cdb2:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000cdb4:	4003      	ands	r3, r0
9000cdb6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000cdba:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000cdbc:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000cdbe:	f043 0301 	orr.w	r3, r3, #1
9000cdc2:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000cdc4:	e5fc      	b.n	9000c9c0 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000cdc6:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000cdca:	601a      	str	r2, [r3, #0]
9000cdcc:	681a      	ldr	r2, [r3, #0]
9000cdce:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000cdd2:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000cdd4:	e574      	b.n	9000c8c0 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000cdd6:	4d1d      	ldr	r5, [pc, #116]	@ (9000ce4c <HAL_RCC_OscConfig+0x5dc>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cdd8:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000cddc:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000cdde:	f023 0301 	bic.w	r3, r3, #1
9000cde2:	672b      	str	r3, [r5, #112]	@ 0x70
9000cde4:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000cde6:	f023 0304 	bic.w	r3, r3, #4
9000cdea:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000cdec:	f7fb f886 	bl	90007efc <HAL_GetTick>
9000cdf0:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000cdf2:	e005      	b.n	9000ce00 <HAL_RCC_OscConfig+0x590>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000cdf4:	f7fb f882 	bl	90007efc <HAL_GetTick>
9000cdf8:	1b80      	subs	r0, r0, r6
9000cdfa:	42b8      	cmp	r0, r7
9000cdfc:	f63f aeb8 	bhi.w	9000cb70 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000ce00:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ce02:	0798      	lsls	r0, r3, #30
9000ce04:	d4f6      	bmi.n	9000cdf4 <HAL_RCC_OscConfig+0x584>
9000ce06:	e5d7      	b.n	9000c9b8 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ce08:	68eb      	ldr	r3, [r5, #12]
9000ce0a:	6a22      	ldr	r2, [r4, #32]
9000ce0c:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000ce10:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000ce14:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ce16:	6823      	ldr	r3, [r4, #0]
9000ce18:	e599      	b.n	9000c94e <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ce1a:	4a0c      	ldr	r2, [pc, #48]	@ (9000ce4c <HAL_RCC_OscConfig+0x5dc>)
9000ce1c:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000ce1e:	f043 0301 	orr.w	r3, r3, #1
9000ce22:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ce24:	e67b      	b.n	9000cb1e <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ce26:	4a09      	ldr	r2, [pc, #36]	@ (9000ce4c <HAL_RCC_OscConfig+0x5dc>)
9000ce28:	6853      	ldr	r3, [r2, #4]
9000ce2a:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000ce2e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000ce32:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ce34:	6823      	ldr	r3, [r4, #0]
9000ce36:	e58a      	b.n	9000c94e <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ce38:	f042 0204 	orr.w	r2, r2, #4
9000ce3c:	671a      	str	r2, [r3, #112]	@ 0x70
9000ce3e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ce40:	f042 0201 	orr.w	r2, r2, #1
9000ce44:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ce46:	e66a      	b.n	9000cb1e <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000ce48:	2001      	movs	r0, #1
}
9000ce4a:	4770      	bx	lr
9000ce4c:	58024400 	.word	0x58024400
9000ce50:	ffff0007 	.word	0xffff0007

9000ce54 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ce54:	4a3f      	ldr	r2, [pc, #252]	@ (9000cf54 <HAL_RCC_GetSysClockFreq+0x100>)
9000ce56:	6913      	ldr	r3, [r2, #16]
9000ce58:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000ce5c:	2b10      	cmp	r3, #16
9000ce5e:	d004      	beq.n	9000ce6a <HAL_RCC_GetSysClockFreq+0x16>
9000ce60:	2b18      	cmp	r3, #24
9000ce62:	d00d      	beq.n	9000ce80 <HAL_RCC_GetSysClockFreq+0x2c>
9000ce64:	b11b      	cbz	r3, 9000ce6e <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000ce66:	483c      	ldr	r0, [pc, #240]	@ (9000cf58 <HAL_RCC_GetSysClockFreq+0x104>)
9000ce68:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ce6a:	483c      	ldr	r0, [pc, #240]	@ (9000cf5c <HAL_RCC_GetSysClockFreq+0x108>)
9000ce6c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ce6e:	6813      	ldr	r3, [r2, #0]
9000ce70:	0699      	lsls	r1, r3, #26
9000ce72:	d548      	bpl.n	9000cf06 <HAL_RCC_GetSysClockFreq+0xb2>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ce74:	6813      	ldr	r3, [r2, #0]
9000ce76:	483a      	ldr	r0, [pc, #232]	@ (9000cf60 <HAL_RCC_GetSysClockFreq+0x10c>)
9000ce78:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ce7c:	40d8      	lsrs	r0, r3
9000ce7e:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ce80:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000ce82:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ce84:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ce86:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000ce88:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ce8c:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ce8e:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000ce92:	d036      	beq.n	9000cf02 <HAL_RCC_GetSysClockFreq+0xae>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ce94:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ce98:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ce9c:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cea0:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000cea4:	fb05 f303 	mul.w	r3, r5, r3
9000cea8:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ceaa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ceae:	ee06 3a90 	vmov	s13, r3
9000ceb2:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
9000ceb6:	d002      	beq.n	9000cebe <HAL_RCC_GetSysClockFreq+0x6a>
9000ceb8:	2902      	cmp	r1, #2
9000ceba:	d026      	beq.n	9000cf0a <HAL_RCC_GetSysClockFreq+0xb6>
9000cebc:	b341      	cbz	r1, 9000cf10 <HAL_RCC_GetSysClockFreq+0xbc>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cebe:	ed9f 7a29 	vldr	s14, [pc, #164]	@ 9000cf64 <HAL_RCC_GetSysClockFreq+0x110>
9000cec2:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000cec6:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000cec8:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000cecc:	ee07 3a10 	vmov	s14, r3
9000ced0:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ced4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ced8:	ee37 7a26 	vadd.f32	s14, s14, s13
9000cedc:	ee37 7a25 	vadd.f32	s14, s14, s11
9000cee0:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000cee4:	4b1b      	ldr	r3, [pc, #108]	@ (9000cf54 <HAL_RCC_GetSysClockFreq+0x100>)
9000cee6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000cee8:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ceec:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000ceee:	ee07 3a90 	vmov	s15, r3
9000cef2:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000cef6:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000cefa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000cefe:	ee17 0a90 	vmov	r0, s15
}
9000cf02:	bc30      	pop	{r4, r5}
9000cf04:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000cf06:	4816      	ldr	r0, [pc, #88]	@ (9000cf60 <HAL_RCC_GetSysClockFreq+0x10c>)
}
9000cf08:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf0a:	ed9f 7a17 	vldr	s14, [pc, #92]	@ 9000cf68 <HAL_RCC_GetSysClockFreq+0x114>
9000cf0e:	e7d8      	b.n	9000cec2 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000cf10:	6813      	ldr	r3, [r2, #0]
9000cf12:	069b      	lsls	r3, r3, #26
9000cf14:	d51a      	bpl.n	9000cf4c <HAL_RCC_GetSysClockFreq+0xf8>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cf16:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf18:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000cf1c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cf1e:	4910      	ldr	r1, [pc, #64]	@ (9000cf60 <HAL_RCC_GetSysClockFreq+0x10c>)
9000cf20:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf24:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000cf28:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf2a:	ee07 3a10 	vmov	s14, r3
9000cf2e:	ee06 1a10 	vmov	s12, r1
9000cf32:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000cf36:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000cf3a:	ee77 6a26 	vadd.f32	s13, s14, s13
9000cf3e:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000cf42:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000cf46:	ee27 7a27 	vmul.f32	s14, s14, s15
9000cf4a:	e7cb      	b.n	9000cee4 <HAL_RCC_GetSysClockFreq+0x90>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000cf4c:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000cf6c <HAL_RCC_GetSysClockFreq+0x118>
9000cf50:	e7b7      	b.n	9000cec2 <HAL_RCC_GetSysClockFreq+0x6e>
9000cf52:	bf00      	nop
9000cf54:	58024400 	.word	0x58024400
9000cf58:	003d0900 	.word	0x003d0900
9000cf5c:	017d7840 	.word	0x017d7840
9000cf60:	03d09000 	.word	0x03d09000
9000cf64:	4a742400 	.word	0x4a742400
9000cf68:	4bbebc20 	.word	0x4bbebc20
9000cf6c:	4c742400 	.word	0x4c742400

9000cf70 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000cf70:	2800      	cmp	r0, #0
9000cf72:	f000 810e 	beq.w	9000d192 <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000cf76:	4a8d      	ldr	r2, [pc, #564]	@ (9000d1ac <HAL_RCC_ClockConfig+0x23c>)
9000cf78:	6813      	ldr	r3, [r2, #0]
9000cf7a:	f003 030f 	and.w	r3, r3, #15
9000cf7e:	428b      	cmp	r3, r1
{
9000cf80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000cf84:	4604      	mov	r4, r0
9000cf86:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000cf88:	d20c      	bcs.n	9000cfa4 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000cf8a:	6813      	ldr	r3, [r2, #0]
9000cf8c:	f023 030f 	bic.w	r3, r3, #15
9000cf90:	430b      	orrs	r3, r1
9000cf92:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000cf94:	6813      	ldr	r3, [r2, #0]
9000cf96:	f003 030f 	and.w	r3, r3, #15
9000cf9a:	428b      	cmp	r3, r1
9000cf9c:	d002      	beq.n	9000cfa4 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000cf9e:	2001      	movs	r0, #1
}
9000cfa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000cfa4:	6823      	ldr	r3, [r4, #0]
9000cfa6:	0758      	lsls	r0, r3, #29
9000cfa8:	d50b      	bpl.n	9000cfc2 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000cfaa:	4981      	ldr	r1, [pc, #516]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000cfac:	6920      	ldr	r0, [r4, #16]
9000cfae:	698a      	ldr	r2, [r1, #24]
9000cfb0:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000cfb4:	4290      	cmp	r0, r2
9000cfb6:	d904      	bls.n	9000cfc2 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000cfb8:	698a      	ldr	r2, [r1, #24]
9000cfba:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000cfbe:	4302      	orrs	r2, r0
9000cfc0:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000cfc2:	0719      	lsls	r1, r3, #28
9000cfc4:	d50b      	bpl.n	9000cfde <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000cfc6:	497a      	ldr	r1, [pc, #488]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000cfc8:	6960      	ldr	r0, [r4, #20]
9000cfca:	69ca      	ldr	r2, [r1, #28]
9000cfcc:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000cfd0:	4290      	cmp	r0, r2
9000cfd2:	d904      	bls.n	9000cfde <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000cfd4:	69ca      	ldr	r2, [r1, #28]
9000cfd6:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000cfda:	4302      	orrs	r2, r0
9000cfdc:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000cfde:	06da      	lsls	r2, r3, #27
9000cfe0:	d50b      	bpl.n	9000cffa <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000cfe2:	4973      	ldr	r1, [pc, #460]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000cfe4:	69a0      	ldr	r0, [r4, #24]
9000cfe6:	69ca      	ldr	r2, [r1, #28]
9000cfe8:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000cfec:	4290      	cmp	r0, r2
9000cfee:	d904      	bls.n	9000cffa <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000cff0:	69ca      	ldr	r2, [r1, #28]
9000cff2:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000cff6:	4302      	orrs	r2, r0
9000cff8:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000cffa:	069f      	lsls	r7, r3, #26
9000cffc:	d50b      	bpl.n	9000d016 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000cffe:	496c      	ldr	r1, [pc, #432]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000d000:	69e0      	ldr	r0, [r4, #28]
9000d002:	6a0a      	ldr	r2, [r1, #32]
9000d004:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d008:	4290      	cmp	r0, r2
9000d00a:	d904      	bls.n	9000d016 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000d00c:	6a0a      	ldr	r2, [r1, #32]
9000d00e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000d012:	4302      	orrs	r2, r0
9000d014:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000d016:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000d018:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000d01c:	f140 80ab 	bpl.w	9000d176 <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000d020:	4e63      	ldr	r6, [pc, #396]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000d022:	68e0      	ldr	r0, [r4, #12]
9000d024:	69b1      	ldr	r1, [r6, #24]
9000d026:	f001 010f 	and.w	r1, r1, #15
9000d02a:	4288      	cmp	r0, r1
9000d02c:	d904      	bls.n	9000d038 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000d02e:	69b1      	ldr	r1, [r6, #24]
9000d030:	f021 010f 	bic.w	r1, r1, #15
9000d034:	4301      	orrs	r1, r0
9000d036:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000d038:	2a00      	cmp	r2, #0
9000d03a:	d030      	beq.n	9000d09e <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000d03c:	4a5c      	ldr	r2, [pc, #368]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000d03e:	68a1      	ldr	r1, [r4, #8]
9000d040:	6993      	ldr	r3, [r2, #24]
9000d042:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000d046:	430b      	orrs	r3, r1
9000d048:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000d04a:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d04c:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000d04e:	2902      	cmp	r1, #2
9000d050:	f000 80a1 	beq.w	9000d196 <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000d054:	2903      	cmp	r1, #3
9000d056:	f000 8098 	beq.w	9000d18a <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000d05a:	2901      	cmp	r1, #1
9000d05c:	f000 80a1 	beq.w	9000d1a2 <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000d060:	075f      	lsls	r7, r3, #29
9000d062:	d59c      	bpl.n	9000cf9e <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000d064:	4e52      	ldr	r6, [pc, #328]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000d066:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000d06a:	6933      	ldr	r3, [r6, #16]
9000d06c:	f023 0307 	bic.w	r3, r3, #7
9000d070:	430b      	orrs	r3, r1
9000d072:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000d074:	f7fa ff42 	bl	90007efc <HAL_GetTick>
9000d078:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000d07a:	e005      	b.n	9000d088 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000d07c:	f7fa ff3e 	bl	90007efc <HAL_GetTick>
9000d080:	1bc0      	subs	r0, r0, r7
9000d082:	4540      	cmp	r0, r8
9000d084:	f200 808b 	bhi.w	9000d19e <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000d088:	6933      	ldr	r3, [r6, #16]
9000d08a:	6862      	ldr	r2, [r4, #4]
9000d08c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d090:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000d094:	d1f2      	bne.n	9000d07c <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000d096:	6823      	ldr	r3, [r4, #0]
9000d098:	079e      	lsls	r6, r3, #30
9000d09a:	d506      	bpl.n	9000d0aa <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000d09c:	68e0      	ldr	r0, [r4, #12]
9000d09e:	4944      	ldr	r1, [pc, #272]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000d0a0:	698a      	ldr	r2, [r1, #24]
9000d0a2:	f002 020f 	and.w	r2, r2, #15
9000d0a6:	4282      	cmp	r2, r0
9000d0a8:	d869      	bhi.n	9000d17e <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000d0aa:	4940      	ldr	r1, [pc, #256]	@ (9000d1ac <HAL_RCC_ClockConfig+0x23c>)
9000d0ac:	680a      	ldr	r2, [r1, #0]
9000d0ae:	f002 020f 	and.w	r2, r2, #15
9000d0b2:	42aa      	cmp	r2, r5
9000d0b4:	d90a      	bls.n	9000d0cc <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000d0b6:	680a      	ldr	r2, [r1, #0]
9000d0b8:	f022 020f 	bic.w	r2, r2, #15
9000d0bc:	432a      	orrs	r2, r5
9000d0be:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000d0c0:	680a      	ldr	r2, [r1, #0]
9000d0c2:	f002 020f 	and.w	r2, r2, #15
9000d0c6:	42aa      	cmp	r2, r5
9000d0c8:	f47f af69 	bne.w	9000cf9e <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000d0cc:	0758      	lsls	r0, r3, #29
9000d0ce:	d50b      	bpl.n	9000d0e8 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000d0d0:	4937      	ldr	r1, [pc, #220]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000d0d2:	6920      	ldr	r0, [r4, #16]
9000d0d4:	698a      	ldr	r2, [r1, #24]
9000d0d6:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d0da:	4290      	cmp	r0, r2
9000d0dc:	d204      	bcs.n	9000d0e8 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000d0de:	698a      	ldr	r2, [r1, #24]
9000d0e0:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000d0e4:	4302      	orrs	r2, r0
9000d0e6:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000d0e8:	0719      	lsls	r1, r3, #28
9000d0ea:	d50b      	bpl.n	9000d104 <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000d0ec:	4930      	ldr	r1, [pc, #192]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000d0ee:	6960      	ldr	r0, [r4, #20]
9000d0f0:	69ca      	ldr	r2, [r1, #28]
9000d0f2:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d0f6:	4290      	cmp	r0, r2
9000d0f8:	d204      	bcs.n	9000d104 <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000d0fa:	69ca      	ldr	r2, [r1, #28]
9000d0fc:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000d100:	4302      	orrs	r2, r0
9000d102:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000d104:	06da      	lsls	r2, r3, #27
9000d106:	d50b      	bpl.n	9000d120 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000d108:	4929      	ldr	r1, [pc, #164]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000d10a:	69a0      	ldr	r0, [r4, #24]
9000d10c:	69ca      	ldr	r2, [r1, #28]
9000d10e:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000d112:	4290      	cmp	r0, r2
9000d114:	d204      	bcs.n	9000d120 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000d116:	69ca      	ldr	r2, [r1, #28]
9000d118:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000d11c:	4302      	orrs	r2, r0
9000d11e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000d120:	069b      	lsls	r3, r3, #26
9000d122:	d50b      	bpl.n	9000d13c <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000d124:	4a22      	ldr	r2, [pc, #136]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000d126:	69e1      	ldr	r1, [r4, #28]
9000d128:	6a13      	ldr	r3, [r2, #32]
9000d12a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000d12e:	4299      	cmp	r1, r3
9000d130:	d204      	bcs.n	9000d13c <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000d132:	6a13      	ldr	r3, [r2, #32]
9000d134:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000d138:	430b      	orrs	r3, r1
9000d13a:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d13c:	f7ff fe8a 	bl	9000ce54 <HAL_RCC_GetSysClockFreq>
9000d140:	4a1b      	ldr	r2, [pc, #108]	@ (9000d1b0 <HAL_RCC_ClockConfig+0x240>)
9000d142:	4603      	mov	r3, r0
9000d144:	481b      	ldr	r0, [pc, #108]	@ (9000d1b4 <HAL_RCC_ClockConfig+0x244>)
9000d146:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d148:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d14a:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000d14e:	4d1a      	ldr	r5, [pc, #104]	@ (9000d1b8 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d150:	f002 020f 	and.w	r2, r2, #15
9000d154:	4c19      	ldr	r4, [pc, #100]	@ (9000d1bc <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d156:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d158:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d15a:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000d15e:	4818      	ldr	r0, [pc, #96]	@ (9000d1c0 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d160:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000d164:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000d166:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000d168:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d16a:	40d3      	lsrs	r3, r2
9000d16c:	6023      	str	r3, [r4, #0]
}
9000d16e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000d172:	f7f7 bc15 	b.w	900049a0 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000d176:	2a00      	cmp	r2, #0
9000d178:	f47f af60 	bne.w	9000d03c <HAL_RCC_ClockConfig+0xcc>
9000d17c:	e795      	b.n	9000d0aa <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000d17e:	698a      	ldr	r2, [r1, #24]
9000d180:	f022 020f 	bic.w	r2, r2, #15
9000d184:	4302      	orrs	r2, r0
9000d186:	618a      	str	r2, [r1, #24]
9000d188:	e78f      	b.n	9000d0aa <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000d18a:	019a      	lsls	r2, r3, #6
9000d18c:	f53f af6a 	bmi.w	9000d064 <HAL_RCC_ClockConfig+0xf4>
9000d190:	e705      	b.n	9000cf9e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000d192:	2001      	movs	r0, #1
}
9000d194:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000d196:	0398      	lsls	r0, r3, #14
9000d198:	f53f af64 	bmi.w	9000d064 <HAL_RCC_ClockConfig+0xf4>
9000d19c:	e6ff      	b.n	9000cf9e <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000d19e:	2003      	movs	r0, #3
9000d1a0:	e6fe      	b.n	9000cfa0 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000d1a2:	05db      	lsls	r3, r3, #23
9000d1a4:	f53f af5e 	bmi.w	9000d064 <HAL_RCC_ClockConfig+0xf4>
9000d1a8:	e6f9      	b.n	9000cf9e <HAL_RCC_ClockConfig+0x2e>
9000d1aa:	bf00      	nop
9000d1ac:	52002000 	.word	0x52002000
9000d1b0:	58024400 	.word	0x58024400
9000d1b4:	9002fcd8 	.word	0x9002fcd8
9000d1b8:	24000130 	.word	0x24000130
9000d1bc:	2400012c 	.word	0x2400012c
9000d1c0:	24000138 	.word	0x24000138

9000d1c4 <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d1c4:	4a18      	ldr	r2, [pc, #96]	@ (9000d228 <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000d1c6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d1c8:	6913      	ldr	r3, [r2, #16]
9000d1ca:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d1ce:	2b10      	cmp	r3, #16
9000d1d0:	d019      	beq.n	9000d206 <HAL_RCC_GetHCLKFreq+0x42>
9000d1d2:	2b18      	cmp	r3, #24
9000d1d4:	d022      	beq.n	9000d21c <HAL_RCC_GetHCLKFreq+0x58>
9000d1d6:	b1c3      	cbz	r3, 9000d20a <HAL_RCC_GetHCLKFreq+0x46>
      sysclockfreq = CSI_VALUE;
9000d1d8:	4b14      	ldr	r3, [pc, #80]	@ (9000d22c <HAL_RCC_GetHCLKFreq+0x68>)
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d1da:	4913      	ldr	r1, [pc, #76]	@ (9000d228 <HAL_RCC_GetHCLKFreq+0x64>)
9000d1dc:	4814      	ldr	r0, [pc, #80]	@ (9000d230 <HAL_RCC_GetHCLKFreq+0x6c>)
9000d1de:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d1e0:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d1e2:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d1e6:	4c13      	ldr	r4, [pc, #76]	@ (9000d234 <HAL_RCC_GetHCLKFreq+0x70>)
9000d1e8:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000d1ec:	4d12      	ldr	r5, [pc, #72]	@ (9000d238 <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d1ee:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d1f0:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d1f2:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d1f6:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d1fa:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d1fc:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000d200:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d202:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000d204:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d206:	4b0d      	ldr	r3, [pc, #52]	@ (9000d23c <HAL_RCC_GetHCLKFreq+0x78>)
9000d208:	e7e7      	b.n	9000d1da <HAL_RCC_GetHCLKFreq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d20a:	6813      	ldr	r3, [r2, #0]
9000d20c:	069b      	lsls	r3, r3, #26
9000d20e:	d509      	bpl.n	9000d224 <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d210:	6812      	ldr	r2, [r2, #0]
9000d212:	4b0b      	ldr	r3, [pc, #44]	@ (9000d240 <HAL_RCC_GetHCLKFreq+0x7c>)
9000d214:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000d218:	40d3      	lsrs	r3, r2
9000d21a:	e7de      	b.n	9000d1da <HAL_RCC_GetHCLKFreq+0x16>
9000d21c:	f7ff fab6 	bl	9000c78c <HAL_RCC_GetSysClockFreq.part.0>
9000d220:	4603      	mov	r3, r0
9000d222:	e7da      	b.n	9000d1da <HAL_RCC_GetHCLKFreq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000d224:	4b06      	ldr	r3, [pc, #24]	@ (9000d240 <HAL_RCC_GetHCLKFreq+0x7c>)
9000d226:	e7d8      	b.n	9000d1da <HAL_RCC_GetHCLKFreq+0x16>
9000d228:	58024400 	.word	0x58024400
9000d22c:	003d0900 	.word	0x003d0900
9000d230:	9002fcd8 	.word	0x9002fcd8
9000d234:	2400012c 	.word	0x2400012c
9000d238:	24000130 	.word	0x24000130
9000d23c:	017d7840 	.word	0x017d7840
9000d240:	03d09000 	.word	0x03d09000

9000d244 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d244:	4a1c      	ldr	r2, [pc, #112]	@ (9000d2b8 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000d246:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d248:	6913      	ldr	r3, [r2, #16]
9000d24a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d24e:	2b10      	cmp	r3, #16
9000d250:	d020      	beq.n	9000d294 <HAL_RCC_GetPCLK1Freq+0x50>
9000d252:	2b18      	cmp	r3, #24
9000d254:	d029      	beq.n	9000d2aa <HAL_RCC_GetPCLK1Freq+0x66>
9000d256:	b1fb      	cbz	r3, 9000d298 <HAL_RCC_GetPCLK1Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000d258:	4b18      	ldr	r3, [pc, #96]	@ (9000d2bc <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d25a:	4a17      	ldr	r2, [pc, #92]	@ (9000d2b8 <HAL_RCC_GetPCLK1Freq+0x74>)
9000d25c:	4918      	ldr	r1, [pc, #96]	@ (9000d2c0 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000d25e:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000d260:	4d18      	ldr	r5, [pc, #96]	@ (9000d2c4 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d262:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d266:	4c18      	ldr	r4, [pc, #96]	@ (9000d2c8 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d268:	5c08      	ldrb	r0, [r1, r0]
9000d26a:	f000 001f 	and.w	r0, r0, #31
9000d26e:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d270:	6990      	ldr	r0, [r2, #24]
9000d272:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000d276:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d278:	5c08      	ldrb	r0, [r1, r0]
9000d27a:	f000 001f 	and.w	r0, r0, #31
9000d27e:	40c3      	lsrs	r3, r0
9000d280:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000d282:	69d2      	ldr	r2, [r2, #28]
9000d284:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000d288:	5c88      	ldrb	r0, [r1, r2]
9000d28a:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000d28e:	fa23 f000 	lsr.w	r0, r3, r0
9000d292:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d294:	4b0d      	ldr	r3, [pc, #52]	@ (9000d2cc <HAL_RCC_GetPCLK1Freq+0x88>)
9000d296:	e7e0      	b.n	9000d25a <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d298:	6813      	ldr	r3, [r2, #0]
9000d29a:	069b      	lsls	r3, r3, #26
9000d29c:	d509      	bpl.n	9000d2b2 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d29e:	6812      	ldr	r2, [r2, #0]
9000d2a0:	4b0b      	ldr	r3, [pc, #44]	@ (9000d2d0 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000d2a2:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000d2a6:	40d3      	lsrs	r3, r2
9000d2a8:	e7d7      	b.n	9000d25a <HAL_RCC_GetPCLK1Freq+0x16>
9000d2aa:	f7ff fa6f 	bl	9000c78c <HAL_RCC_GetSysClockFreq.part.0>
9000d2ae:	4603      	mov	r3, r0
9000d2b0:	e7d3      	b.n	9000d25a <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000d2b2:	4b07      	ldr	r3, [pc, #28]	@ (9000d2d0 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000d2b4:	e7d1      	b.n	9000d25a <HAL_RCC_GetPCLK1Freq+0x16>
9000d2b6:	bf00      	nop
9000d2b8:	58024400 	.word	0x58024400
9000d2bc:	003d0900 	.word	0x003d0900
9000d2c0:	9002fcd8 	.word	0x9002fcd8
9000d2c4:	24000130 	.word	0x24000130
9000d2c8:	2400012c 	.word	0x2400012c
9000d2cc:	017d7840 	.word	0x017d7840
9000d2d0:	03d09000 	.word	0x03d09000

9000d2d4 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d2d4:	4a1c      	ldr	r2, [pc, #112]	@ (9000d348 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000d2d6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d2d8:	6913      	ldr	r3, [r2, #16]
9000d2da:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000d2de:	2b10      	cmp	r3, #16
9000d2e0:	d020      	beq.n	9000d324 <HAL_RCC_GetPCLK2Freq+0x50>
9000d2e2:	2b18      	cmp	r3, #24
9000d2e4:	d029      	beq.n	9000d33a <HAL_RCC_GetPCLK2Freq+0x66>
9000d2e6:	b1fb      	cbz	r3, 9000d328 <HAL_RCC_GetPCLK2Freq+0x54>
      sysclockfreq = CSI_VALUE;
9000d2e8:	4b18      	ldr	r3, [pc, #96]	@ (9000d34c <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d2ea:	4a17      	ldr	r2, [pc, #92]	@ (9000d348 <HAL_RCC_GetPCLK2Freq+0x74>)
9000d2ec:	4918      	ldr	r1, [pc, #96]	@ (9000d350 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000d2ee:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000d2f0:	4d18      	ldr	r5, [pc, #96]	@ (9000d354 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d2f2:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d2f6:	4c18      	ldr	r4, [pc, #96]	@ (9000d358 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000d2f8:	5c08      	ldrb	r0, [r1, r0]
9000d2fa:	f000 001f 	and.w	r0, r0, #31
9000d2fe:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d300:	6990      	ldr	r0, [r2, #24]
9000d302:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000d306:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000d308:	5c08      	ldrb	r0, [r1, r0]
9000d30a:	f000 001f 	and.w	r0, r0, #31
9000d30e:	40c3      	lsrs	r3, r0
9000d310:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000d312:	69d2      	ldr	r2, [r2, #28]
9000d314:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000d318:	5c88      	ldrb	r0, [r1, r2]
9000d31a:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000d31e:	fa23 f000 	lsr.w	r0, r3, r0
9000d322:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000d324:	4b0d      	ldr	r3, [pc, #52]	@ (9000d35c <HAL_RCC_GetPCLK2Freq+0x88>)
9000d326:	e7e0      	b.n	9000d2ea <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000d328:	6813      	ldr	r3, [r2, #0]
9000d32a:	069b      	lsls	r3, r3, #26
9000d32c:	d509      	bpl.n	9000d342 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000d32e:	6812      	ldr	r2, [r2, #0]
9000d330:	4b0b      	ldr	r3, [pc, #44]	@ (9000d360 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000d332:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000d336:	40d3      	lsrs	r3, r2
9000d338:	e7d7      	b.n	9000d2ea <HAL_RCC_GetPCLK2Freq+0x16>
9000d33a:	f7ff fa27 	bl	9000c78c <HAL_RCC_GetSysClockFreq.part.0>
9000d33e:	4603      	mov	r3, r0
9000d340:	e7d3      	b.n	9000d2ea <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000d342:	4b07      	ldr	r3, [pc, #28]	@ (9000d360 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000d344:	e7d1      	b.n	9000d2ea <HAL_RCC_GetPCLK2Freq+0x16>
9000d346:	bf00      	nop
9000d348:	58024400 	.word	0x58024400
9000d34c:	003d0900 	.word	0x003d0900
9000d350:	9002fcd8 	.word	0x9002fcd8
9000d354:	24000130 	.word	0x24000130
9000d358:	2400012c 	.word	0x2400012c
9000d35c:	017d7840 	.word	0x017d7840
9000d360:	03d09000 	.word	0x03d09000

9000d364 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000d364:	4b13      	ldr	r3, [pc, #76]	@ (9000d3b4 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000d366:	223f      	movs	r2, #63	@ 0x3f
9000d368:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000d36a:	691a      	ldr	r2, [r3, #16]
9000d36c:	f002 0207 	and.w	r2, r2, #7
9000d370:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000d372:	699a      	ldr	r2, [r3, #24]
9000d374:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000d378:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000d37a:	699a      	ldr	r2, [r3, #24]
9000d37c:	f002 020f 	and.w	r2, r2, #15
9000d380:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000d382:	699a      	ldr	r2, [r3, #24]
9000d384:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d388:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000d38a:	69da      	ldr	r2, [r3, #28]
9000d38c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000d390:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000d392:	69da      	ldr	r2, [r3, #28]
9000d394:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000d398:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000d39a:	6a1b      	ldr	r3, [r3, #32]
{
9000d39c:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000d39e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000d3a2:	4c05      	ldr	r4, [pc, #20]	@ (9000d3b8 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000d3a4:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000d3a6:	6823      	ldr	r3, [r4, #0]
}
9000d3a8:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000d3ac:	f003 030f 	and.w	r3, r3, #15
9000d3b0:	600b      	str	r3, [r1, #0]
}
9000d3b2:	4770      	bx	lr
9000d3b4:	58024400 	.word	0x58024400
9000d3b8:	52002000 	.word	0x52002000

9000d3bc <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000d3bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000d3be:	4c36      	ldr	r4, [pc, #216]	@ (9000d498 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000d3c0:	4606      	mov	r6, r0
9000d3c2:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000d3c4:	6823      	ldr	r3, [r4, #0]
9000d3c6:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000d3ca:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d3cc:	f7fa fd96 	bl	90007efc <HAL_GetTick>
9000d3d0:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000d3d2:	e004      	b.n	9000d3de <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000d3d4:	f7fa fd92 	bl	90007efc <HAL_GetTick>
9000d3d8:	1b40      	subs	r0, r0, r5
9000d3da:	2802      	cmp	r0, #2
9000d3dc:	d856      	bhi.n	9000d48c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000d3de:	6823      	ldr	r3, [r4, #0]
9000d3e0:	011a      	lsls	r2, r3, #4
9000d3e2:	d4f7      	bmi.n	9000d3d4 <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000d3e4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000d3e6:	6832      	ldr	r2, [r6, #0]
9000d3e8:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000d3ec:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000d3f0:	62a3      	str	r3, [r4, #40]	@ 0x28
9000d3f2:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000d3f6:	3b01      	subs	r3, #1
9000d3f8:	3a01      	subs	r2, #1
9000d3fa:	025b      	lsls	r3, r3, #9
9000d3fc:	0412      	lsls	r2, r2, #16
9000d3fe:	b29b      	uxth	r3, r3
9000d400:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000d404:	4313      	orrs	r3, r2
9000d406:	6872      	ldr	r2, [r6, #4]
9000d408:	3a01      	subs	r2, #1
9000d40a:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000d40e:	4313      	orrs	r3, r2
9000d410:	6932      	ldr	r2, [r6, #16]
9000d412:	3a01      	subs	r2, #1
9000d414:	0612      	lsls	r2, r2, #24
9000d416:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000d41a:	4313      	orrs	r3, r2
9000d41c:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000d41e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d420:	6972      	ldr	r2, [r6, #20]
9000d422:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000d426:	4313      	orrs	r3, r2
9000d428:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000d42a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d42c:	69b3      	ldr	r3, [r6, #24]
9000d42e:	f022 0220 	bic.w	r2, r2, #32
9000d432:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000d434:	4b19      	ldr	r3, [pc, #100]	@ (9000d49c <RCCEx_PLL2_Config.part.0+0xe0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000d436:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000d438:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d43a:	f022 0210 	bic.w	r2, r2, #16
9000d43e:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000d440:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
9000d442:	69f2      	ldr	r2, [r6, #28]
9000d444:	400b      	ands	r3, r1
9000d446:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000d44a:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000d44c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d44e:	f043 0310 	orr.w	r3, r3, #16
9000d452:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000d454:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000d456:	b1df      	cbz	r7, 9000d490 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000d458:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000d45a:	bf0c      	ite	eq
9000d45c:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000d460:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000d464:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000d466:	4c0c      	ldr	r4, [pc, #48]	@ (9000d498 <RCCEx_PLL2_Config.part.0+0xdc>)
9000d468:	6823      	ldr	r3, [r4, #0]
9000d46a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000d46e:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d470:	f7fa fd44 	bl	90007efc <HAL_GetTick>
9000d474:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000d476:	e004      	b.n	9000d482 <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000d478:	f7fa fd40 	bl	90007efc <HAL_GetTick>
9000d47c:	1b40      	subs	r0, r0, r5
9000d47e:	2802      	cmp	r0, #2
9000d480:	d804      	bhi.n	9000d48c <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000d482:	6823      	ldr	r3, [r4, #0]
9000d484:	011b      	lsls	r3, r3, #4
9000d486:	d5f7      	bpl.n	9000d478 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000d488:	2000      	movs	r0, #0
}
9000d48a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000d48c:	2003      	movs	r0, #3
}
9000d48e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000d490:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000d494:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000d496:	e7e6      	b.n	9000d466 <RCCEx_PLL2_Config.part.0+0xaa>
9000d498:	58024400 	.word	0x58024400
9000d49c:	ffff0007 	.word	0xffff0007

9000d4a0 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000d4a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000d4a2:	4c36      	ldr	r4, [pc, #216]	@ (9000d57c <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000d4a4:	4606      	mov	r6, r0
9000d4a6:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000d4a8:	6823      	ldr	r3, [r4, #0]
9000d4aa:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000d4ae:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d4b0:	f7fa fd24 	bl	90007efc <HAL_GetTick>
9000d4b4:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000d4b6:	e004      	b.n	9000d4c2 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000d4b8:	f7fa fd20 	bl	90007efc <HAL_GetTick>
9000d4bc:	1b40      	subs	r0, r0, r5
9000d4be:	2802      	cmp	r0, #2
9000d4c0:	d856      	bhi.n	9000d570 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000d4c2:	6823      	ldr	r3, [r4, #0]
9000d4c4:	009a      	lsls	r2, r3, #2
9000d4c6:	d4f7      	bmi.n	9000d4b8 <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000d4c8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000d4ca:	6832      	ldr	r2, [r6, #0]
9000d4cc:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000d4d0:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000d4d4:	62a3      	str	r3, [r4, #40]	@ 0x28
9000d4d6:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000d4da:	3b01      	subs	r3, #1
9000d4dc:	3a01      	subs	r2, #1
9000d4de:	025b      	lsls	r3, r3, #9
9000d4e0:	0412      	lsls	r2, r2, #16
9000d4e2:	b29b      	uxth	r3, r3
9000d4e4:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000d4e8:	4313      	orrs	r3, r2
9000d4ea:	6872      	ldr	r2, [r6, #4]
9000d4ec:	3a01      	subs	r2, #1
9000d4ee:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000d4f2:	4313      	orrs	r3, r2
9000d4f4:	6932      	ldr	r2, [r6, #16]
9000d4f6:	3a01      	subs	r2, #1
9000d4f8:	0612      	lsls	r2, r2, #24
9000d4fa:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000d4fe:	4313      	orrs	r3, r2
9000d500:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000d502:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d504:	6972      	ldr	r2, [r6, #20]
9000d506:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000d50a:	4313      	orrs	r3, r2
9000d50c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000d50e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d510:	69b3      	ldr	r3, [r6, #24]
9000d512:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
9000d516:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000d518:	4b19      	ldr	r3, [pc, #100]	@ (9000d580 <RCCEx_PLL3_Config.part.0+0xe0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000d51a:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000d51c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000d51e:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000d522:	62e2      	str	r2, [r4, #44]	@ 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000d524:	6c61      	ldr	r1, [r4, #68]	@ 0x44
9000d526:	69f2      	ldr	r2, [r6, #28]
9000d528:	400b      	ands	r3, r1
9000d52a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000d52e:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000d530:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000d532:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000d536:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000d538:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000d53a:	b1df      	cbz	r7, 9000d574 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000d53c:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000d53e:	bf0c      	ite	eq
9000d540:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000d544:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000d548:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000d54a:	4c0c      	ldr	r4, [pc, #48]	@ (9000d57c <RCCEx_PLL3_Config.part.0+0xdc>)
9000d54c:	6823      	ldr	r3, [r4, #0]
9000d54e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000d552:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000d554:	f7fa fcd2 	bl	90007efc <HAL_GetTick>
9000d558:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000d55a:	e004      	b.n	9000d566 <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000d55c:	f7fa fcce 	bl	90007efc <HAL_GetTick>
9000d560:	1b40      	subs	r0, r0, r5
9000d562:	2802      	cmp	r0, #2
9000d564:	d804      	bhi.n	9000d570 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000d566:	6823      	ldr	r3, [r4, #0]
9000d568:	009b      	lsls	r3, r3, #2
9000d56a:	d5f7      	bpl.n	9000d55c <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000d56c:	2000      	movs	r0, #0
}
9000d56e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000d570:	2003      	movs	r0, #3
}
9000d572:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000d574:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000d578:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000d57a:	e7e6      	b.n	9000d54a <RCCEx_PLL3_Config.part.0+0xaa>
9000d57c:	58024400 	.word	0x58024400
9000d580:	ffff0007 	.word	0xffff0007

9000d584 <HAL_RCCEx_PeriphCLKConfig>:
{
9000d584:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000d588:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000d58c:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000d58e:	011d      	lsls	r5, r3, #4
9000d590:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000d594:	d525      	bpl.n	9000d5e2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d596:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000d598:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000d59c:	f000 8660 	beq.w	9000e260 <HAL_RCCEx_PeriphCLKConfig+0xcdc>
9000d5a0:	d814      	bhi.n	9000d5cc <HAL_RCCEx_PeriphCLKConfig+0x48>
9000d5a2:	2900      	cmp	r1, #0
9000d5a4:	f000 86fa 	beq.w	9000e39c <HAL_RCCEx_PeriphCLKConfig+0xe18>
9000d5a8:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000d5ac:	f040 8466 	bne.w	9000de7c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d5b0:	49ad      	ldr	r1, [pc, #692]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d5b2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d5b4:	f001 0103 	and.w	r1, r1, #3
9000d5b8:	2903      	cmp	r1, #3
9000d5ba:	f000 845f 	beq.w	9000de7c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000d5be:	2102      	movs	r1, #2
9000d5c0:	3008      	adds	r0, #8
9000d5c2:	f7ff fefb 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000d5c6:	4606      	mov	r6, r0
        break;
9000d5c8:	f000 be56 	b.w	9000e278 <HAL_RCCEx_PeriphCLKConfig+0xcf4>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000d5cc:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000d5d0:	f040 8454 	bne.w	9000de7c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000d5d4:	4da4      	ldr	r5, [pc, #656]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000d5d6:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000d5d8:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000d5da:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000d5de:	4301      	orrs	r1, r0
9000d5e0:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000d5e2:	05d8      	lsls	r0, r3, #23
9000d5e4:	d50a      	bpl.n	9000d5fc <HAL_RCCEx_PeriphCLKConfig+0x78>
    switch (PeriphClkInit->Sai1ClockSelection)
9000d5e6:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000d5e8:	2904      	cmp	r1, #4
9000d5ea:	d806      	bhi.n	9000d5fa <HAL_RCCEx_PeriphCLKConfig+0x76>
9000d5ec:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d5f0:	064c04a8 	.word	0x064c04a8
9000d5f4:	04ad0661 	.word	0x04ad0661
9000d5f8:	04ad      	.short	0x04ad
9000d5fa:	2601      	movs	r6, #1
9000d5fc:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000d5fe:	0599      	lsls	r1, r3, #22
9000d600:	d524      	bpl.n	9000d64c <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch (PeriphClkInit->Sai23ClockSelection)
9000d602:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000d604:	2980      	cmp	r1, #128	@ 0x80
9000d606:	f000 8664 	beq.w	9000e2d2 <HAL_RCCEx_PeriphCLKConfig+0xd4e>
9000d60a:	f200 8122 	bhi.w	9000d852 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
9000d60e:	2900      	cmp	r1, #0
9000d610:	f000 84ac 	beq.w	9000df6c <HAL_RCCEx_PeriphCLKConfig+0x9e8>
9000d614:	2940      	cmp	r1, #64	@ 0x40
9000d616:	f040 8123 	bne.w	9000d860 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d61a:	4993      	ldr	r1, [pc, #588]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d61c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d61e:	f001 0103 	and.w	r1, r1, #3
9000d622:	2903      	cmp	r1, #3
9000d624:	f000 811c 	beq.w	9000d860 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000d628:	2100      	movs	r1, #0
9000d62a:	f104 0008 	add.w	r0, r4, #8
9000d62e:	f7ff fec5 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000d632:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d634:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d638:	2d00      	cmp	r5, #0
9000d63a:	f040 851b 	bne.w	9000e074 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000d63e:	4f8a      	ldr	r7, [pc, #552]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d640:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000d642:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d644:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000d648:	4301      	orrs	r1, r0
9000d64a:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000d64c:	055f      	lsls	r7, r3, #21
9000d64e:	d528      	bpl.n	9000d6a2 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4AClockSelection)
9000d650:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000d654:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000d658:	f000 864f 	beq.w	9000e2fa <HAL_RCCEx_PeriphCLKConfig+0xd76>
9000d65c:	f200 8106 	bhi.w	9000d86c <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000d660:	2900      	cmp	r1, #0
9000d662:	f000 8463 	beq.w	9000df2c <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000d666:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000d66a:	f040 8107 	bne.w	9000d87c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d66e:	497e      	ldr	r1, [pc, #504]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d670:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d672:	f001 0103 	and.w	r1, r1, #3
9000d676:	2903      	cmp	r1, #3
9000d678:	f000 8100 	beq.w	9000d87c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000d67c:	2100      	movs	r1, #0
9000d67e:	f104 0008 	add.w	r0, r4, #8
9000d682:	f7ff fe9b 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000d686:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d688:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d68c:	2d00      	cmp	r5, #0
9000d68e:	f040 84f4 	bne.w	9000e07a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000d692:	4f75      	ldr	r7, [pc, #468]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d694:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000d698:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d69a:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000d69e:	4301      	orrs	r1, r0
9000d6a0:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000d6a2:	0518      	lsls	r0, r3, #20
9000d6a4:	d528      	bpl.n	9000d6f8 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d6a6:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000d6aa:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000d6ae:	f000 85ac 	beq.w	9000e20a <HAL_RCCEx_PeriphCLKConfig+0xc86>
9000d6b2:	f200 80e6 	bhi.w	9000d882 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9000d6b6:	2900      	cmp	r1, #0
9000d6b8:	f000 8425 	beq.w	9000df06 <HAL_RCCEx_PeriphCLKConfig+0x982>
9000d6bc:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000d6c0:	f040 80e7 	bne.w	9000d892 <HAL_RCCEx_PeriphCLKConfig+0x30e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d6c4:	4968      	ldr	r1, [pc, #416]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d6c6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d6c8:	f001 0103 	and.w	r1, r1, #3
9000d6cc:	2903      	cmp	r1, #3
9000d6ce:	f000 80e0 	beq.w	9000d892 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000d6d2:	2100      	movs	r1, #0
9000d6d4:	f104 0008 	add.w	r0, r4, #8
9000d6d8:	f7ff fe70 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000d6dc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d6de:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d6e2:	2d00      	cmp	r5, #0
9000d6e4:	f040 84cc 	bne.w	9000e080 <HAL_RCCEx_PeriphCLKConfig+0xafc>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000d6e8:	4f5f      	ldr	r7, [pc, #380]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d6ea:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000d6ee:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d6f0:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000d6f4:	4301      	orrs	r1, r0
9000d6f6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000d6f8:	0199      	lsls	r1, r3, #6
9000d6fa:	d518      	bpl.n	9000d72e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->QspiClockSelection)
9000d6fc:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000d6fe:	2920      	cmp	r1, #32
9000d700:	f000 84ff 	beq.w	9000e102 <HAL_RCCEx_PeriphCLKConfig+0xb7e>
9000d704:	f200 80c8 	bhi.w	9000d898 <HAL_RCCEx_PeriphCLKConfig+0x314>
9000d708:	b139      	cbz	r1, 9000d71a <HAL_RCCEx_PeriphCLKConfig+0x196>
9000d70a:	2910      	cmp	r1, #16
9000d70c:	f040 80c7 	bne.w	9000d89e <HAL_RCCEx_PeriphCLKConfig+0x31a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d710:	4855      	ldr	r0, [pc, #340]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d712:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d714:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d718:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d71a:	2d00      	cmp	r5, #0
9000d71c:	f040 849f 	bne.w	9000e05e <HAL_RCCEx_PeriphCLKConfig+0xada>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000d720:	4f51      	ldr	r7, [pc, #324]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d722:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000d724:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000d726:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000d72a:	4301      	orrs	r1, r0
9000d72c:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000d72e:	04df      	lsls	r7, r3, #19
9000d730:	d526      	bpl.n	9000d780 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d732:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000d734:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000d738:	f000 857b 	beq.w	9000e232 <HAL_RCCEx_PeriphCLKConfig+0xcae>
9000d73c:	f200 80b2 	bhi.w	9000d8a4 <HAL_RCCEx_PeriphCLKConfig+0x320>
9000d740:	2900      	cmp	r1, #0
9000d742:	f000 83ea 	beq.w	9000df1a <HAL_RCCEx_PeriphCLKConfig+0x996>
9000d746:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000d74a:	f040 80b3 	bne.w	9000d8b4 <HAL_RCCEx_PeriphCLKConfig+0x330>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d74e:	4946      	ldr	r1, [pc, #280]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d750:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d752:	f001 0103 	and.w	r1, r1, #3
9000d756:	2903      	cmp	r1, #3
9000d758:	f000 80ac 	beq.w	9000d8b4 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000d75c:	2100      	movs	r1, #0
9000d75e:	f104 0008 	add.w	r0, r4, #8
9000d762:	f7ff fe2b 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000d766:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d768:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d76c:	2d00      	cmp	r5, #0
9000d76e:	f040 848a 	bne.w	9000e086 <HAL_RCCEx_PeriphCLKConfig+0xb02>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000d772:	4f3d      	ldr	r7, [pc, #244]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d774:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000d776:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d778:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000d77c:	4301      	orrs	r1, r0
9000d77e:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000d780:	0498      	lsls	r0, r3, #18
9000d782:	d524      	bpl.n	9000d7ce <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d784:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000d786:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000d78a:	f000 8516 	beq.w	9000e1ba <HAL_RCCEx_PeriphCLKConfig+0xc36>
9000d78e:	f200 8094 	bhi.w	9000d8ba <HAL_RCCEx_PeriphCLKConfig+0x336>
9000d792:	b191      	cbz	r1, 9000d7ba <HAL_RCCEx_PeriphCLKConfig+0x236>
9000d794:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000d798:	f040 8099 	bne.w	9000d8ce <HAL_RCCEx_PeriphCLKConfig+0x34a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d79c:	4932      	ldr	r1, [pc, #200]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d79e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d7a0:	f001 0103 	and.w	r1, r1, #3
9000d7a4:	2903      	cmp	r1, #3
9000d7a6:	f000 8092 	beq.w	9000d8ce <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000d7aa:	2101      	movs	r1, #1
9000d7ac:	f104 0008 	add.w	r0, r4, #8
9000d7b0:	f7ff fe04 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000d7b4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d7b6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d7ba:	2d00      	cmp	r5, #0
9000d7bc:	f040 8476 	bne.w	9000e0ac <HAL_RCCEx_PeriphCLKConfig+0xb28>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000d7c0:	4f29      	ldr	r7, [pc, #164]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d7c2:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000d7c4:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000d7c6:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000d7ca:	4301      	orrs	r1, r0
9000d7cc:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000d7ce:	0459      	lsls	r1, r3, #17
9000d7d0:	d523      	bpl.n	9000d81a <HAL_RCCEx_PeriphCLKConfig+0x296>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d7d2:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000d7d6:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000d7da:	f000 8502 	beq.w	9000e1e2 <HAL_RCCEx_PeriphCLKConfig+0xc5e>
9000d7de:	d879      	bhi.n	9000d8d4 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000d7e0:	b181      	cbz	r1, 9000d804 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000d7e2:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000d7e6:	d17d      	bne.n	9000d8e4 <HAL_RCCEx_PeriphCLKConfig+0x360>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d7e8:	491f      	ldr	r1, [pc, #124]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d7ea:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d7ec:	f001 0103 	and.w	r1, r1, #3
9000d7f0:	2903      	cmp	r1, #3
9000d7f2:	d077      	beq.n	9000d8e4 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000d7f4:	2101      	movs	r1, #1
9000d7f6:	f104 0008 	add.w	r0, r4, #8
9000d7fa:	f7ff fddf 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000d7fe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d800:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d804:	2d00      	cmp	r5, #0
9000d806:	f040 8454 	bne.w	9000e0b2 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000d80a:	4f17      	ldr	r7, [pc, #92]	@ (9000d868 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
9000d80c:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000d810:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000d812:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000d816:	4301      	orrs	r1, r0
9000d818:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000d81a:	041f      	lsls	r7, r3, #16
9000d81c:	d50d      	bpl.n	9000d83a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
    switch (PeriphClkInit->FdcanClockSelection)
9000d81e:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000d820:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000d824:	f000 82e2 	beq.w	9000ddec <HAL_RCCEx_PeriphCLKConfig+0x868>
9000d828:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000d82c:	f000 83f0 	beq.w	9000e010 <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9000d830:	2900      	cmp	r1, #0
9000d832:	f000 82e0 	beq.w	9000ddf6 <HAL_RCCEx_PeriphCLKConfig+0x872>
9000d836:	2601      	movs	r6, #1
9000d838:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000d83a:	01d8      	lsls	r0, r3, #7
9000d83c:	d55e      	bpl.n	9000d8fc <HAL_RCCEx_PeriphCLKConfig+0x378>
    switch (PeriphClkInit->FmcClockSelection)
9000d83e:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000d840:	2903      	cmp	r1, #3
9000d842:	f200 85cd 	bhi.w	9000e3e0 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000d846:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d84a:	0055      	.short	0x0055
9000d84c:	04930050 	.word	0x04930050
9000d850:	0055      	.short	0x0055
    switch (PeriphClkInit->Sai23ClockSelection)
9000d852:	29c0      	cmp	r1, #192	@ 0xc0
9000d854:	f43f aef0 	beq.w	9000d638 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000d858:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000d85c:	f43f aeec 	beq.w	9000d638 <HAL_RCCEx_PeriphCLKConfig+0xb4>
9000d860:	2601      	movs	r6, #1
9000d862:	4635      	mov	r5, r6
9000d864:	e6f2      	b.n	9000d64c <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000d866:	bf00      	nop
9000d868:	58024400 	.word	0x58024400
    switch (PeriphClkInit->Sai4AClockSelection)
9000d86c:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000d870:	f43f af0c 	beq.w	9000d68c <HAL_RCCEx_PeriphCLKConfig+0x108>
9000d874:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000d878:	f43f af08 	beq.w	9000d68c <HAL_RCCEx_PeriphCLKConfig+0x108>
9000d87c:	2601      	movs	r6, #1
9000d87e:	4635      	mov	r5, r6
9000d880:	e70f      	b.n	9000d6a2 <HAL_RCCEx_PeriphCLKConfig+0x11e>
    switch (PeriphClkInit->Sai4BClockSelection)
9000d882:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000d886:	f43f af2c 	beq.w	9000d6e2 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000d88a:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000d88e:	f43f af28 	beq.w	9000d6e2 <HAL_RCCEx_PeriphCLKConfig+0x15e>
9000d892:	2601      	movs	r6, #1
9000d894:	4635      	mov	r5, r6
9000d896:	e72f      	b.n	9000d6f8 <HAL_RCCEx_PeriphCLKConfig+0x174>
    switch (PeriphClkInit->QspiClockSelection)
9000d898:	2930      	cmp	r1, #48	@ 0x30
9000d89a:	f43f af3e 	beq.w	9000d71a <HAL_RCCEx_PeriphCLKConfig+0x196>
9000d89e:	2601      	movs	r6, #1
9000d8a0:	4635      	mov	r5, r6
9000d8a2:	e744      	b.n	9000d72e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000d8a4:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000d8a8:	f43f af60 	beq.w	9000d76c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000d8ac:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000d8b0:	f43f af5c 	beq.w	9000d76c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
9000d8b4:	2601      	movs	r6, #1
9000d8b6:	4635      	mov	r5, r6
9000d8b8:	e762      	b.n	9000d780 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
    switch (PeriphClkInit->Spi45ClockSelection)
9000d8ba:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000d8be:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000d8c2:	f43f af7a 	beq.w	9000d7ba <HAL_RCCEx_PeriphCLKConfig+0x236>
9000d8c6:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000d8ca:	f43f af76 	beq.w	9000d7ba <HAL_RCCEx_PeriphCLKConfig+0x236>
9000d8ce:	2601      	movs	r6, #1
9000d8d0:	4635      	mov	r5, r6
9000d8d2:	e77c      	b.n	9000d7ce <HAL_RCCEx_PeriphCLKConfig+0x24a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000d8d4:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000d8d8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000d8dc:	d092      	beq.n	9000d804 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000d8de:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000d8e2:	d08f      	beq.n	9000d804 <HAL_RCCEx_PeriphCLKConfig+0x280>
9000d8e4:	2601      	movs	r6, #1
9000d8e6:	4635      	mov	r5, r6
9000d8e8:	e797      	b.n	9000d81a <HAL_RCCEx_PeriphCLKConfig+0x296>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000d8ea:	4837      	ldr	r0, [pc, #220]	@ (9000d9c8 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000d8ec:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000d8ee:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000d8f2:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000d8f4:	2d00      	cmp	r5, #0
9000d8f6:	f000 83b5 	beq.w	9000e064 <HAL_RCCEx_PeriphCLKConfig+0xae0>
9000d8fa:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000d8fc:	0259      	lsls	r1, r3, #9
9000d8fe:	f100 82c0 	bmi.w	9000de82 <HAL_RCCEx_PeriphCLKConfig+0x8fe>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000d902:	07df      	lsls	r7, r3, #31
9000d904:	d52f      	bpl.n	9000d966 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
    switch (PeriphClkInit->Usart16ClockSelection)
9000d906:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000d908:	2928      	cmp	r1, #40	@ 0x28
9000d90a:	d82a      	bhi.n	9000d962 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000d90c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d910:	002902ab 	.word	0x002902ab
9000d914:	00290029 	.word	0x00290029
9000d918:	00290029 	.word	0x00290029
9000d91c:	00290029 	.word	0x00290029
9000d920:	0029029c 	.word	0x0029029c
9000d924:	00290029 	.word	0x00290029
9000d928:	00290029 	.word	0x00290029
9000d92c:	00290029 	.word	0x00290029
9000d930:	0029052d 	.word	0x0029052d
9000d934:	00290029 	.word	0x00290029
9000d938:	00290029 	.word	0x00290029
9000d93c:	00290029 	.word	0x00290029
9000d940:	002902ab 	.word	0x002902ab
9000d944:	00290029 	.word	0x00290029
9000d948:	00290029 	.word	0x00290029
9000d94c:	00290029 	.word	0x00290029
9000d950:	002902ab 	.word	0x002902ab
9000d954:	00290029 	.word	0x00290029
9000d958:	00290029 	.word	0x00290029
9000d95c:	00290029 	.word	0x00290029
9000d960:	02ab      	.short	0x02ab
9000d962:	2601      	movs	r6, #1
9000d964:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000d966:	0798      	lsls	r0, r3, #30
9000d968:	d51e      	bpl.n	9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000d96a:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000d96c:	2905      	cmp	r1, #5
9000d96e:	f200 851c 	bhi.w	9000e3aa <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000d972:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d976:	0015      	.short	0x0015
9000d978:	04e80006 	.word	0x04e80006
9000d97c:	00150015 	.word	0x00150015
9000d980:	0015      	.short	0x0015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d982:	4911      	ldr	r1, [pc, #68]	@ (9000d9c8 <HAL_RCCEx_PeriphCLKConfig+0x444>)
9000d984:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d986:	f001 0103 	and.w	r1, r1, #3
9000d98a:	2903      	cmp	r1, #3
9000d98c:	f000 850d 	beq.w	9000e3aa <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000d990:	2101      	movs	r1, #1
9000d992:	f104 0008 	add.w	r0, r4, #8
9000d996:	f7ff fd11 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000d99a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d99c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d9a0:	2d00      	cmp	r5, #0
9000d9a2:	f000 837b 	beq.w	9000e09c <HAL_RCCEx_PeriphCLKConfig+0xb18>
9000d9a6:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000d9a8:	0759      	lsls	r1, r3, #29
9000d9aa:	d522      	bpl.n	9000d9f2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000d9ac:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000d9b0:	2905      	cmp	r1, #5
9000d9b2:	f200 84fe 	bhi.w	9000e3b2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000d9b6:	e8df f011 	tbh	[pc, r1, lsl #1]
9000d9ba:	0018      	.short	0x0018
9000d9bc:	04b40009 	.word	0x04b40009
9000d9c0:	00180018 	.word	0x00180018
9000d9c4:	0018      	.short	0x0018
9000d9c6:	bf00      	nop
9000d9c8:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000d9cc:	49b0      	ldr	r1, [pc, #704]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000d9ce:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000d9d0:	f001 0103 	and.w	r1, r1, #3
9000d9d4:	2903      	cmp	r1, #3
9000d9d6:	f000 84ec 	beq.w	9000e3b2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000d9da:	2101      	movs	r1, #1
9000d9dc:	f104 0008 	add.w	r0, r4, #8
9000d9e0:	f7ff fcec 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000d9e4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d9e6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000d9ea:	2d00      	cmp	r5, #0
9000d9ec:	f000 8364 	beq.w	9000e0b8 <HAL_RCCEx_PeriphCLKConfig+0xb34>
9000d9f0:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000d9f2:	069f      	lsls	r7, r3, #26
9000d9f4:	d526      	bpl.n	9000da44 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000d9f6:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000d9fa:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000d9fe:	f000 836e 	beq.w	9000e0de <HAL_RCCEx_PeriphCLKConfig+0xb5a>
9000da02:	f200 8194 	bhi.w	9000dd2e <HAL_RCCEx_PeriphCLKConfig+0x7aa>
9000da06:	b191      	cbz	r1, 9000da2e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000da08:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000da0c:	f040 8199 	bne.w	9000dd42 <HAL_RCCEx_PeriphCLKConfig+0x7be>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000da10:	499f      	ldr	r1, [pc, #636]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000da12:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000da14:	f001 0103 	and.w	r1, r1, #3
9000da18:	2903      	cmp	r1, #3
9000da1a:	f000 8192 	beq.w	9000dd42 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000da1e:	2100      	movs	r1, #0
9000da20:	f104 0008 	add.w	r0, r4, #8
9000da24:	f7ff fcca 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000da28:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000da2a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000da2e:	2d00      	cmp	r5, #0
9000da30:	f040 834b 	bne.w	9000e0ca <HAL_RCCEx_PeriphCLKConfig+0xb46>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000da34:	4f96      	ldr	r7, [pc, #600]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000da36:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000da3a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000da3c:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000da40:	4301      	orrs	r1, r0
9000da42:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000da44:	0658      	lsls	r0, r3, #25
9000da46:	d526      	bpl.n	9000da96 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000da48:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000da4c:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000da50:	f000 83a1 	beq.w	9000e196 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000da54:	f200 8178 	bhi.w	9000dd48 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
9000da58:	b191      	cbz	r1, 9000da80 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000da5a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000da5e:	f040 817d 	bne.w	9000dd5c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000da62:	498b      	ldr	r1, [pc, #556]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000da64:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000da66:	f001 0103 	and.w	r1, r1, #3
9000da6a:	2903      	cmp	r1, #3
9000da6c:	f000 8176 	beq.w	9000dd5c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000da70:	2100      	movs	r1, #0
9000da72:	f104 0008 	add.w	r0, r4, #8
9000da76:	f7ff fca1 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000da7a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000da7c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000da80:	2d00      	cmp	r5, #0
9000da82:	f040 8328 	bne.w	9000e0d6 <HAL_RCCEx_PeriphCLKConfig+0xb52>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000da86:	4f82      	ldr	r7, [pc, #520]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000da88:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000da8c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000da8e:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000da92:	4301      	orrs	r1, r0
9000da94:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000da96:	0619      	lsls	r1, r3, #24
9000da98:	d526      	bpl.n	9000dae8 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000da9a:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000da9e:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000daa2:	f000 8353 	beq.w	9000e14c <HAL_RCCEx_PeriphCLKConfig+0xbc8>
9000daa6:	f200 815c 	bhi.w	9000dd62 <HAL_RCCEx_PeriphCLKConfig+0x7de>
9000daaa:	b191      	cbz	r1, 9000dad2 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000daac:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000dab0:	f040 8161 	bne.w	9000dd76 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dab4:	4976      	ldr	r1, [pc, #472]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dab6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000dab8:	f001 0103 	and.w	r1, r1, #3
9000dabc:	2903      	cmp	r1, #3
9000dabe:	f000 815a 	beq.w	9000dd76 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000dac2:	2100      	movs	r1, #0
9000dac4:	f104 0008 	add.w	r0, r4, #8
9000dac8:	f7ff fc78 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000dacc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000dace:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000dad2:	2d00      	cmp	r5, #0
9000dad4:	f040 82fb 	bne.w	9000e0ce <HAL_RCCEx_PeriphCLKConfig+0xb4a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000dad8:	4f6d      	ldr	r7, [pc, #436]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dada:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000dade:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000dae0:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000dae4:	4301      	orrs	r1, r0
9000dae6:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000dae8:	071f      	lsls	r7, r3, #28
9000daea:	d50b      	bpl.n	9000db04 <HAL_RCCEx_PeriphCLKConfig+0x580>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000daec:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000daf0:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000daf4:	f000 8250 	beq.w	9000df98 <HAL_RCCEx_PeriphCLKConfig+0xa14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000daf8:	4f65      	ldr	r7, [pc, #404]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dafa:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000dafc:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000db00:	4301      	orrs	r1, r0
9000db02:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000db04:	06d8      	lsls	r0, r3, #27
9000db06:	d50b      	bpl.n	9000db20 <HAL_RCCEx_PeriphCLKConfig+0x59c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000db08:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000db0c:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000db10:	f000 8257 	beq.w	9000dfc2 <HAL_RCCEx_PeriphCLKConfig+0xa3e>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000db14:	4f5e      	ldr	r7, [pc, #376]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000db16:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000db18:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000db1c:	4301      	orrs	r1, r0
9000db1e:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000db20:	0319      	lsls	r1, r3, #12
9000db22:	d50e      	bpl.n	9000db42 <HAL_RCCEx_PeriphCLKConfig+0x5be>
    switch (PeriphClkInit->AdcClockSelection)
9000db24:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000db28:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000db2c:	f000 816e 	beq.w	9000de0c <HAL_RCCEx_PeriphCLKConfig+0x888>
9000db30:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000db34:	f000 8179 	beq.w	9000de2a <HAL_RCCEx_PeriphCLKConfig+0x8a6>
9000db38:	2900      	cmp	r1, #0
9000db3a:	f000 827a 	beq.w	9000e032 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000db3e:	2601      	movs	r6, #1
9000db40:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000db42:	035f      	lsls	r7, r3, #13
9000db44:	d50f      	bpl.n	9000db66 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
    switch (PeriphClkInit->UsbClockSelection)
9000db46:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000db4a:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000db4e:	f000 82eb 	beq.w	9000e128 <HAL_RCCEx_PeriphCLKConfig+0xba4>
9000db52:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000db56:	f000 813d 	beq.w	9000ddd4 <HAL_RCCEx_PeriphCLKConfig+0x850>
9000db5a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000db5e:	f000 8134 	beq.w	9000ddca <HAL_RCCEx_PeriphCLKConfig+0x846>
9000db62:	2601      	movs	r6, #1
9000db64:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000db66:	03d8      	lsls	r0, r3, #15
9000db68:	d520      	bpl.n	9000dbac <HAL_RCCEx_PeriphCLKConfig+0x628>
    switch (PeriphClkInit->SdmmcClockSelection)
9000db6a:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000db6c:	2900      	cmp	r1, #0
9000db6e:	f000 8245 	beq.w	9000dffc <HAL_RCCEx_PeriphCLKConfig+0xa78>
9000db72:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000db76:	f040 8125 	bne.w	9000ddc4 <HAL_RCCEx_PeriphCLKConfig+0x840>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000db7a:	4945      	ldr	r1, [pc, #276]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000db7c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000db7e:	f001 0103 	and.w	r1, r1, #3
9000db82:	2903      	cmp	r1, #3
9000db84:	f000 811e 	beq.w	9000ddc4 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000db88:	2102      	movs	r1, #2
9000db8a:	f104 0008 	add.w	r0, r4, #8
9000db8e:	f7ff fc15 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000db92:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000db94:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000db98:	2d00      	cmp	r5, #0
9000db9a:	f040 8237 	bne.w	9000e00c <HAL_RCCEx_PeriphCLKConfig+0xa88>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000db9e:	4f3c      	ldr	r7, [pc, #240]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dba0:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000dba2:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000dba4:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000dba8:	4301      	orrs	r1, r0
9000dbaa:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000dbac:	0099      	lsls	r1, r3, #2
9000dbae:	d50e      	bpl.n	9000dbce <HAL_RCCEx_PeriphCLKConfig+0x64a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dbb0:	4937      	ldr	r1, [pc, #220]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dbb2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000dbb4:	f001 0103 	and.w	r1, r1, #3
9000dbb8:	2903      	cmp	r1, #3
9000dbba:	d007      	beq.n	9000dbcc <HAL_RCCEx_PeriphCLKConfig+0x648>
9000dbbc:	2102      	movs	r1, #2
9000dbbe:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000dbc2:	f7ff fc6d 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000dbc6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000dbca:	b100      	cbz	r0, 9000dbce <HAL_RCCEx_PeriphCLKConfig+0x64a>
      status = HAL_ERROR;
9000dbcc:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000dbce:	039f      	lsls	r7, r3, #14
9000dbd0:	f140 80e0 	bpl.w	9000dd94 <HAL_RCCEx_PeriphCLKConfig+0x810>
    switch (PeriphClkInit->RngClockSelection)
9000dbd4:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000dbd8:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000dbdc:	f000 8205 	beq.w	9000dfea <HAL_RCCEx_PeriphCLKConfig+0xa66>
9000dbe0:	f240 80cc 	bls.w	9000dd7c <HAL_RCCEx_PeriphCLKConfig+0x7f8>
9000dbe4:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000dbe8:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000dbec:	f000 80c9 	beq.w	9000dd82 <HAL_RCCEx_PeriphCLKConfig+0x7fe>
9000dbf0:	2501      	movs	r5, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000dbf2:	02d8      	lsls	r0, r3, #11
9000dbf4:	d506      	bpl.n	9000dc04 <HAL_RCCEx_PeriphCLKConfig+0x680>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000dbf6:	4826      	ldr	r0, [pc, #152]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dbf8:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000dbfa:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000dbfc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000dc00:	4331      	orrs	r1, r6
9000dc02:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000dc04:	00d9      	lsls	r1, r3, #3
9000dc06:	d507      	bpl.n	9000dc18 <HAL_RCCEx_PeriphCLKConfig+0x694>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000dc08:	4821      	ldr	r0, [pc, #132]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc0a:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000dc0e:	6901      	ldr	r1, [r0, #16]
9000dc10:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000dc14:	4331      	orrs	r1, r6
9000dc16:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000dc18:	029f      	lsls	r7, r3, #10
9000dc1a:	d506      	bpl.n	9000dc2a <HAL_RCCEx_PeriphCLKConfig+0x6a6>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000dc1c:	481c      	ldr	r0, [pc, #112]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc1e:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000dc20:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000dc22:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000dc26:	4331      	orrs	r1, r6
9000dc28:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000dc2a:	005e      	lsls	r6, r3, #1
9000dc2c:	d509      	bpl.n	9000dc42 <HAL_RCCEx_PeriphCLKConfig+0x6be>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000dc2e:	4918      	ldr	r1, [pc, #96]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc30:	6908      	ldr	r0, [r1, #16]
9000dc32:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000dc36:	6108      	str	r0, [r1, #16]
9000dc38:	6908      	ldr	r0, [r1, #16]
9000dc3a:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000dc3e:	4330      	orrs	r0, r6
9000dc40:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000dc42:	2b00      	cmp	r3, #0
9000dc44:	da06      	bge.n	9000dc54 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000dc46:	4812      	ldr	r0, [pc, #72]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc48:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000dc4a:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000dc4c:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000dc50:	4331      	orrs	r1, r6
9000dc52:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000dc54:	0218      	lsls	r0, r3, #8
9000dc56:	d507      	bpl.n	9000dc68 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000dc58:	490d      	ldr	r1, [pc, #52]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc5a:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000dc5e:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000dc60:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000dc64:	4303      	orrs	r3, r0
9000dc66:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000dc68:	07d1      	lsls	r1, r2, #31
9000dc6a:	d513      	bpl.n	9000dc94 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dc6c:	4b08      	ldr	r3, [pc, #32]	@ (9000dc90 <HAL_RCCEx_PeriphCLKConfig+0x70c>)
9000dc6e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dc70:	f003 0303 	and.w	r3, r3, #3
9000dc74:	2b03      	cmp	r3, #3
9000dc76:	f000 818d 	beq.w	9000df94 <HAL_RCCEx_PeriphCLKConfig+0xa10>
9000dc7a:	2100      	movs	r1, #0
9000dc7c:	f104 0008 	add.w	r0, r4, #8
9000dc80:	f7ff fb9c 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000dc84:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000dc86:	2800      	cmp	r0, #0
9000dc88:	f040 8204 	bne.w	9000e094 <HAL_RCCEx_PeriphCLKConfig+0xb10>
9000dc8c:	e002      	b.n	9000dc94 <HAL_RCCEx_PeriphCLKConfig+0x710>
9000dc8e:	bf00      	nop
9000dc90:	58024400 	.word	0x58024400
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000dc94:	0793      	lsls	r3, r2, #30
9000dc96:	d50f      	bpl.n	9000dcb8 <HAL_RCCEx_PeriphCLKConfig+0x734>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dc98:	4bb2      	ldr	r3, [pc, #712]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dc9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dc9c:	f003 0303 	and.w	r3, r3, #3
9000dca0:	2b03      	cmp	r3, #3
9000dca2:	f000 816c 	beq.w	9000df7e <HAL_RCCEx_PeriphCLKConfig+0x9fa>
9000dca6:	2101      	movs	r1, #1
9000dca8:	f104 0008 	add.w	r0, r4, #8
9000dcac:	f7ff fb86 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000dcb0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000dcb2:	2800      	cmp	r0, #0
9000dcb4:	f040 81f0 	bne.w	9000e098 <HAL_RCCEx_PeriphCLKConfig+0xb14>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000dcb8:	0757      	lsls	r7, r2, #29
9000dcba:	d50f      	bpl.n	9000dcdc <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dcbc:	4ba9      	ldr	r3, [pc, #676]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dcbe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dcc0:	f003 0303 	and.w	r3, r3, #3
9000dcc4:	2b03      	cmp	r3, #3
9000dcc6:	f000 815c 	beq.w	9000df82 <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9000dcca:	2102      	movs	r1, #2
9000dccc:	f104 0008 	add.w	r0, r4, #8
9000dcd0:	f7ff fb74 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000dcd4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000dcd6:	2800      	cmp	r0, #0
9000dcd8:	f040 81d8 	bne.w	9000e08c <HAL_RCCEx_PeriphCLKConfig+0xb08>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000dcdc:	0716      	lsls	r6, r2, #28
9000dcde:	d50f      	bpl.n	9000dd00 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dce0:	4ba0      	ldr	r3, [pc, #640]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dce2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dce4:	f003 0303 	and.w	r3, r3, #3
9000dce8:	2b03      	cmp	r3, #3
9000dcea:	f000 814c 	beq.w	9000df86 <HAL_RCCEx_PeriphCLKConfig+0xa02>
9000dcee:	2100      	movs	r1, #0
9000dcf0:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000dcf4:	f7ff fbd4 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000dcf8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000dcfa:	2800      	cmp	r0, #0
9000dcfc:	f040 81c8 	bne.w	9000e090 <HAL_RCCEx_PeriphCLKConfig+0xb0c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000dd00:	06d0      	lsls	r0, r2, #27
9000dd02:	d54a      	bpl.n	9000dd9a <HAL_RCCEx_PeriphCLKConfig+0x816>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dd04:	4b97      	ldr	r3, [pc, #604]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000dd06:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dd0a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dd0c:	f003 0303 	and.w	r3, r3, #3
9000dd10:	2b03      	cmp	r3, #3
9000dd12:	f000 813a 	beq.w	9000df8a <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000dd16:	2101      	movs	r1, #1
9000dd18:	4630      	mov	r0, r6
9000dd1a:	f7ff fbc1 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000dd1e:	2800      	cmp	r0, #0
9000dd20:	d03a      	beq.n	9000dd98 <HAL_RCCEx_PeriphCLKConfig+0x814>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000dd22:	6863      	ldr	r3, [r4, #4]
9000dd24:	069a      	lsls	r2, r3, #26
9000dd26:	f140 808c 	bpl.w	9000de42 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000dd2a:	4605      	mov	r5, r0
9000dd2c:	e039      	b.n	9000dda2 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000dd2e:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000dd32:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000dd36:	f43f ae7a 	beq.w	9000da2e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000dd3a:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000dd3e:	f43f ae76 	beq.w	9000da2e <HAL_RCCEx_PeriphCLKConfig+0x4aa>
9000dd42:	2601      	movs	r6, #1
9000dd44:	4635      	mov	r5, r6
9000dd46:	e67d      	b.n	9000da44 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000dd48:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000dd4c:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000dd50:	f43f ae96 	beq.w	9000da80 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000dd54:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000dd58:	f43f ae92 	beq.w	9000da80 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
9000dd5c:	2601      	movs	r6, #1
9000dd5e:	4635      	mov	r5, r6
9000dd60:	e699      	b.n	9000da96 <HAL_RCCEx_PeriphCLKConfig+0x512>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000dd62:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000dd66:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000dd6a:	f43f aeb2 	beq.w	9000dad2 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000dd6e:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000dd72:	f43f aeae 	beq.w	9000dad2 <HAL_RCCEx_PeriphCLKConfig+0x54e>
9000dd76:	2601      	movs	r6, #1
9000dd78:	4635      	mov	r5, r6
9000dd7a:	e6b5      	b.n	9000dae8 <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch (PeriphClkInit->RngClockSelection)
9000dd7c:	2900      	cmp	r1, #0
9000dd7e:	f47f af37 	bne.w	9000dbf0 <HAL_RCCEx_PeriphCLKConfig+0x66c>
    if (ret == HAL_OK)
9000dd82:	2d00      	cmp	r5, #0
9000dd84:	f47f af35 	bne.w	9000dbf2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000dd88:	4d76      	ldr	r5, [pc, #472]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dd8a:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000dd8c:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000dd90:	4301      	orrs	r1, r0
9000dd92:	6569      	str	r1, [r5, #84]	@ 0x54
      status = HAL_ERROR;
9000dd94:	4635      	mov	r5, r6
9000dd96:	e72c      	b.n	9000dbf2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000dd98:	6862      	ldr	r2, [r4, #4]
9000dd9a:	0693      	lsls	r3, r2, #26
9000dd9c:	d50d      	bpl.n	9000ddba <HAL_RCCEx_PeriphCLKConfig+0x836>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000dd9e:	f104 0628 	add.w	r6, r4, #40	@ 0x28
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dda2:	4b70      	ldr	r3, [pc, #448]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dda4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000dda6:	f003 0303 	and.w	r3, r3, #3
9000ddaa:	2b03      	cmp	r3, #3
9000ddac:	d049      	beq.n	9000de42 <HAL_RCCEx_PeriphCLKConfig+0x8be>
9000ddae:	2102      	movs	r1, #2
9000ddb0:	4630      	mov	r0, r6
9000ddb2:	f7ff fb75 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000ddb6:	2800      	cmp	r0, #0
9000ddb8:	d143      	bne.n	9000de42 <HAL_RCCEx_PeriphCLKConfig+0x8be>
  if (status == HAL_OK)
9000ddba:	1e28      	subs	r0, r5, #0
9000ddbc:	bf18      	it	ne
9000ddbe:	2001      	movne	r0, #1
}
9000ddc0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000ddc4:	2601      	movs	r6, #1
9000ddc6:	4635      	mov	r5, r6
9000ddc8:	e6f0      	b.n	9000dbac <HAL_RCCEx_PeriphCLKConfig+0x628>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ddca:	4866      	ldr	r0, [pc, #408]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ddcc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000ddce:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000ddd2:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000ddd4:	2d00      	cmp	r5, #0
9000ddd6:	f040 8140 	bne.w	9000e05a <HAL_RCCEx_PeriphCLKConfig+0xad6>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000ddda:	4f62      	ldr	r7, [pc, #392]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000dddc:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000dde0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000dde2:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000dde6:	4301      	orrs	r1, r0
9000dde8:	6579      	str	r1, [r7, #84]	@ 0x54
9000ddea:	e6bc      	b.n	9000db66 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ddec:	485d      	ldr	r0, [pc, #372]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ddee:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000ddf0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000ddf4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000ddf6:	2d00      	cmp	r5, #0
9000ddf8:	f040 812c 	bne.w	9000e054 <HAL_RCCEx_PeriphCLKConfig+0xad0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000ddfc:	4f59      	ldr	r7, [pc, #356]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000ddfe:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000de00:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000de02:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000de06:	4301      	orrs	r1, r0
9000de08:	6539      	str	r1, [r7, #80]	@ 0x50
9000de0a:	e516      	b.n	9000d83a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000de0c:	4955      	ldr	r1, [pc, #340]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de0e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000de10:	f001 0103 	and.w	r1, r1, #3
9000de14:	2903      	cmp	r1, #3
9000de16:	f43f ae92 	beq.w	9000db3e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000de1a:	2102      	movs	r1, #2
9000de1c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000de20:	f7ff fb3e 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000de24:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000de26:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000de2a:	2d00      	cmp	r5, #0
9000de2c:	f040 8151 	bne.w	9000e0d2 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000de30:	4f4c      	ldr	r7, [pc, #304]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de32:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000de36:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000de38:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000de3c:	4301      	orrs	r1, r0
9000de3e:	65b9      	str	r1, [r7, #88]	@ 0x58
9000de40:	e67f      	b.n	9000db42 <HAL_RCCEx_PeriphCLKConfig+0x5be>
  return HAL_ERROR;
9000de42:	2001      	movs	r0, #1
}
9000de44:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000de48:	4946      	ldr	r1, [pc, #280]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de4a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000de4c:	f001 0103 	and.w	r1, r1, #3
9000de50:	2903      	cmp	r1, #3
9000de52:	f43f ad86 	beq.w	9000d962 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000de56:	2101      	movs	r1, #1
9000de58:	f104 0008 	add.w	r0, r4, #8
9000de5c:	f7ff faae 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000de60:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000de62:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000de66:	2d00      	cmp	r5, #0
9000de68:	f040 8137 	bne.w	9000e0da <HAL_RCCEx_PeriphCLKConfig+0xb56>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000de6c:	4f3d      	ldr	r7, [pc, #244]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000de6e:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000de70:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000de72:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000de76:	4301      	orrs	r1, r0
9000de78:	6579      	str	r1, [r7, #84]	@ 0x54
9000de7a:	e574      	b.n	9000d966 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9000de7c:	2601      	movs	r6, #1
9000de7e:	f7ff bbb0 	b.w	9000d5e2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000de82:	4f39      	ldr	r7, [pc, #228]	@ (9000df68 <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9000de84:	683b      	ldr	r3, [r7, #0]
9000de86:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000de8a:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000de8c:	f7fa f836 	bl	90007efc <HAL_GetTick>
9000de90:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000de92:	e006      	b.n	9000dea2 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000de94:	f7fa f832 	bl	90007efc <HAL_GetTick>
9000de98:	eba0 0008 	sub.w	r0, r0, r8
9000de9c:	2864      	cmp	r0, #100	@ 0x64
9000de9e:	f200 8277 	bhi.w	9000e390 <HAL_RCCEx_PeriphCLKConfig+0xe0c>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000dea2:	683b      	ldr	r3, [r7, #0]
9000dea4:	05da      	lsls	r2, r3, #23
9000dea6:	d5f5      	bpl.n	9000de94 <HAL_RCCEx_PeriphCLKConfig+0x910>
    if (ret == HAL_OK)
9000dea8:	2d00      	cmp	r5, #0
9000deaa:	f040 8272 	bne.w	9000e392 <HAL_RCCEx_PeriphCLKConfig+0xe0e>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000deae:	4a2d      	ldr	r2, [pc, #180]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000deb0:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000deb4:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000deb6:	4059      	eors	r1, r3
9000deb8:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000debc:	d00b      	beq.n	9000ded6 <HAL_RCCEx_PeriphCLKConfig+0x952>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000debe:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000dec0:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000dec2:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000dec6:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000deca:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000decc:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000dece:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000ded2:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000ded4:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000ded6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000deda:	f000 8285 	beq.w	9000e3e8 <HAL_RCCEx_PeriphCLKConfig+0xe64>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000dede:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000dee2:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000dee6:	f000 8293 	beq.w	9000e410 <HAL_RCCEx_PeriphCLKConfig+0xe8c>
9000deea:	491e      	ldr	r1, [pc, #120]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000deec:	690a      	ldr	r2, [r1, #16]
9000deee:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000def2:	610a      	str	r2, [r1, #16]
9000def4:	481b      	ldr	r0, [pc, #108]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000def6:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000defa:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000defc:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000defe:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000df02:	6701      	str	r1, [r0, #112]	@ 0x70
9000df04:	e4fd      	b.n	9000d902 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000df06:	4817      	ldr	r0, [pc, #92]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df08:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000df0a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000df0e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000df10:	2d00      	cmp	r5, #0
9000df12:	f040 80b5 	bne.w	9000e080 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000df16:	f7ff bbe7 	b.w	9000d6e8 <HAL_RCCEx_PeriphCLKConfig+0x164>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000df1a:	4812      	ldr	r0, [pc, #72]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df1c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000df1e:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000df22:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000df24:	2d00      	cmp	r5, #0
9000df26:	f040 80ae 	bne.w	9000e086 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000df2a:	e422      	b.n	9000d772 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000df2c:	480d      	ldr	r0, [pc, #52]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df2e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000df30:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000df34:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000df36:	2d00      	cmp	r5, #0
9000df38:	f040 809f 	bne.w	9000e07a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000df3c:	f7ff bba9 	b.w	9000d692 <HAL_RCCEx_PeriphCLKConfig+0x10e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000df40:	4808      	ldr	r0, [pc, #32]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df42:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000df44:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000df48:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000df4a:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000df4c:	2d00      	cmp	r5, #0
9000df4e:	f040 81ad 	bne.w	9000e2ac <HAL_RCCEx_PeriphCLKConfig+0xd28>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000df52:	4f04      	ldr	r7, [pc, #16]	@ (9000df64 <HAL_RCCEx_PeriphCLKConfig+0x9e0>)
9000df54:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000df56:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000df58:	f021 0107 	bic.w	r1, r1, #7
9000df5c:	4301      	orrs	r1, r0
9000df5e:	6539      	str	r1, [r7, #80]	@ 0x50
9000df60:	f7ff bb4d 	b.w	9000d5fe <HAL_RCCEx_PeriphCLKConfig+0x7a>
9000df64:	58024400 	.word	0x58024400
9000df68:	58024800 	.word	0x58024800
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000df6c:	48bb      	ldr	r0, [pc, #748]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000df6e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000df70:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000df74:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000df76:	2d00      	cmp	r5, #0
9000df78:	d17c      	bne.n	9000e074 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000df7a:	f7ff bb60 	b.w	9000d63e <HAL_RCCEx_PeriphCLKConfig+0xba>
    return HAL_ERROR;
9000df7e:	2501      	movs	r5, #1
9000df80:	e69a      	b.n	9000dcb8 <HAL_RCCEx_PeriphCLKConfig+0x734>
9000df82:	2501      	movs	r5, #1
9000df84:	e6aa      	b.n	9000dcdc <HAL_RCCEx_PeriphCLKConfig+0x758>
    return HAL_ERROR;
9000df86:	2501      	movs	r5, #1
9000df88:	e6ba      	b.n	9000dd00 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000df8a:	0691      	lsls	r1, r2, #26
9000df8c:	f57f af59 	bpl.w	9000de42 <HAL_RCCEx_PeriphCLKConfig+0x8be>
    return HAL_ERROR;
9000df90:	2501      	movs	r5, #1
9000df92:	e706      	b.n	9000dda2 <HAL_RCCEx_PeriphCLKConfig+0x81e>
    return HAL_ERROR;
9000df94:	2501      	movs	r5, #1
9000df96:	e67d      	b.n	9000dc94 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000df98:	49b0      	ldr	r1, [pc, #704]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000df9a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000df9c:	f001 0103 	and.w	r1, r1, #3
9000dfa0:	2903      	cmp	r1, #3
9000dfa2:	f000 820a 	beq.w	9000e3ba <HAL_RCCEx_PeriphCLKConfig+0xe36>
9000dfa6:	2102      	movs	r1, #2
9000dfa8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000dfac:	f7ff fa78 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000dfb0:	2800      	cmp	r0, #0
9000dfb2:	f000 820f 	beq.w	9000e3d4 <HAL_RCCEx_PeriphCLKConfig+0xe50>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000dfb6:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000dfba:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000dfbc:	e9d4 3200 	ldrd	r3, r2, [r4]
9000dfc0:	e59a      	b.n	9000daf8 <HAL_RCCEx_PeriphCLKConfig+0x574>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000dfc2:	49a6      	ldr	r1, [pc, #664]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000dfc4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000dfc6:	f001 0103 	and.w	r1, r1, #3
9000dfca:	2903      	cmp	r1, #3
9000dfcc:	f000 81f8 	beq.w	9000e3c0 <HAL_RCCEx_PeriphCLKConfig+0xe3c>
9000dfd0:	2102      	movs	r1, #2
9000dfd2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000dfd6:	f7ff fa63 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000dfda:	2800      	cmp	r0, #0
9000dfdc:	f040 81f3 	bne.w	9000e3c6 <HAL_RCCEx_PeriphCLKConfig+0xe42>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000dfe0:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000dfe4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000dfe8:	e594      	b.n	9000db14 <HAL_RCCEx_PeriphCLKConfig+0x590>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dfea:	4f9c      	ldr	r7, [pc, #624]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000dfec:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000dfee:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000dff2:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000dff4:	2d00      	cmp	r5, #0
9000dff6:	f47f adfc 	bne.w	9000dbf2 <HAL_RCCEx_PeriphCLKConfig+0x66e>
9000dffa:	e6c5      	b.n	9000dd88 <HAL_RCCEx_PeriphCLKConfig+0x804>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000dffc:	4897      	ldr	r0, [pc, #604]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000dffe:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000e000:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000e004:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000e006:	2d00      	cmp	r5, #0
9000e008:	f43f adc9 	beq.w	9000db9e <HAL_RCCEx_PeriphCLKConfig+0x61a>
9000e00c:	462e      	mov	r6, r5
9000e00e:	e5cd      	b.n	9000dbac <HAL_RCCEx_PeriphCLKConfig+0x628>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e010:	4992      	ldr	r1, [pc, #584]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e012:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e014:	f001 0103 	and.w	r1, r1, #3
9000e018:	2903      	cmp	r1, #3
9000e01a:	f43f ac0c 	beq.w	9000d836 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
9000e01e:	2101      	movs	r1, #1
9000e020:	f104 0008 	add.w	r0, r4, #8
9000e024:	f7ff f9ca 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000e028:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000e02a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e02e:	b98d      	cbnz	r5, 9000e054 <HAL_RCCEx_PeriphCLKConfig+0xad0>
9000e030:	e6e4      	b.n	9000ddfc <HAL_RCCEx_PeriphCLKConfig+0x878>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e032:	488a      	ldr	r0, [pc, #552]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e034:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000e036:	f000 0003 	and.w	r0, r0, #3
9000e03a:	2803      	cmp	r0, #3
9000e03c:	f43f ad7f 	beq.w	9000db3e <HAL_RCCEx_PeriphCLKConfig+0x5ba>
9000e040:	f104 0008 	add.w	r0, r4, #8
9000e044:	f7ff f9ba 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000e048:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000e04a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e04e:	2d00      	cmp	r5, #0
9000e050:	d13f      	bne.n	9000e0d2 <HAL_RCCEx_PeriphCLKConfig+0xb4e>
9000e052:	e6ed      	b.n	9000de30 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
9000e054:	462e      	mov	r6, r5
9000e056:	f7ff bbf0 	b.w	9000d83a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000e05a:	462e      	mov	r6, r5
9000e05c:	e583      	b.n	9000db66 <HAL_RCCEx_PeriphCLKConfig+0x5e2>
9000e05e:	462e      	mov	r6, r5
9000e060:	f7ff bb65 	b.w	9000d72e <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000e064:	4f7d      	ldr	r7, [pc, #500]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e066:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000e068:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000e06a:	f021 0103 	bic.w	r1, r1, #3
9000e06e:	4301      	orrs	r1, r0
9000e070:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000e072:	e443      	b.n	9000d8fc <HAL_RCCEx_PeriphCLKConfig+0x378>
9000e074:	462e      	mov	r6, r5
9000e076:	f7ff bae9 	b.w	9000d64c <HAL_RCCEx_PeriphCLKConfig+0xc8>
9000e07a:	462e      	mov	r6, r5
9000e07c:	f7ff bb11 	b.w	9000d6a2 <HAL_RCCEx_PeriphCLKConfig+0x11e>
9000e080:	462e      	mov	r6, r5
9000e082:	f7ff bb39 	b.w	9000d6f8 <HAL_RCCEx_PeriphCLKConfig+0x174>
9000e086:	462e      	mov	r6, r5
9000e088:	f7ff bb7a 	b.w	9000d780 <HAL_RCCEx_PeriphCLKConfig+0x1fc>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000e08c:	4605      	mov	r5, r0
9000e08e:	e625      	b.n	9000dcdc <HAL_RCCEx_PeriphCLKConfig+0x758>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000e090:	4605      	mov	r5, r0
9000e092:	e635      	b.n	9000dd00 <HAL_RCCEx_PeriphCLKConfig+0x77c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000e094:	4605      	mov	r5, r0
9000e096:	e5fd      	b.n	9000dc94 <HAL_RCCEx_PeriphCLKConfig+0x710>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000e098:	4605      	mov	r5, r0
9000e09a:	e60d      	b.n	9000dcb8 <HAL_RCCEx_PeriphCLKConfig+0x734>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000e09c:	4f6f      	ldr	r7, [pc, #444]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e09e:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000e0a0:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000e0a2:	f021 0107 	bic.w	r1, r1, #7
9000e0a6:	4301      	orrs	r1, r0
9000e0a8:	6579      	str	r1, [r7, #84]	@ 0x54
9000e0aa:	e47d      	b.n	9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000e0ac:	462e      	mov	r6, r5
9000e0ae:	f7ff bb8e 	b.w	9000d7ce <HAL_RCCEx_PeriphCLKConfig+0x24a>
9000e0b2:	462e      	mov	r6, r5
9000e0b4:	f7ff bbb1 	b.w	9000d81a <HAL_RCCEx_PeriphCLKConfig+0x296>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000e0b8:	4f68      	ldr	r7, [pc, #416]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e0ba:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000e0be:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000e0c0:	f021 0107 	bic.w	r1, r1, #7
9000e0c4:	4301      	orrs	r1, r0
9000e0c6:	65b9      	str	r1, [r7, #88]	@ 0x58
9000e0c8:	e493      	b.n	9000d9f2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
9000e0ca:	462e      	mov	r6, r5
9000e0cc:	e4ba      	b.n	9000da44 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
9000e0ce:	462e      	mov	r6, r5
9000e0d0:	e50a      	b.n	9000dae8 <HAL_RCCEx_PeriphCLKConfig+0x564>
9000e0d2:	462e      	mov	r6, r5
9000e0d4:	e535      	b.n	9000db42 <HAL_RCCEx_PeriphCLKConfig+0x5be>
9000e0d6:	462e      	mov	r6, r5
9000e0d8:	e4dd      	b.n	9000da96 <HAL_RCCEx_PeriphCLKConfig+0x512>
9000e0da:	462e      	mov	r6, r5
9000e0dc:	e443      	b.n	9000d966 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e0de:	495f      	ldr	r1, [pc, #380]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e0e0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e0e2:	f001 0103 	and.w	r1, r1, #3
9000e0e6:	2903      	cmp	r1, #3
9000e0e8:	f43f ae2b 	beq.w	9000dd42 <HAL_RCCEx_PeriphCLKConfig+0x7be>
9000e0ec:	2102      	movs	r1, #2
9000e0ee:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e0f2:	f7ff f9d5 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e0f6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000e0f8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e0fc:	2d00      	cmp	r5, #0
9000e0fe:	d1e4      	bne.n	9000e0ca <HAL_RCCEx_PeriphCLKConfig+0xb46>
9000e100:	e498      	b.n	9000da34 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e102:	4956      	ldr	r1, [pc, #344]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e104:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e106:	f001 0103 	and.w	r1, r1, #3
9000e10a:	2903      	cmp	r1, #3
9000e10c:	f43f abc7 	beq.w	9000d89e <HAL_RCCEx_PeriphCLKConfig+0x31a>
9000e110:	2102      	movs	r1, #2
9000e112:	f104 0008 	add.w	r0, r4, #8
9000e116:	f7ff f951 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000e11a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000e11c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e120:	2d00      	cmp	r5, #0
9000e122:	d19c      	bne.n	9000e05e <HAL_RCCEx_PeriphCLKConfig+0xada>
9000e124:	f7ff bafc 	b.w	9000d720 <HAL_RCCEx_PeriphCLKConfig+0x19c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e128:	494c      	ldr	r1, [pc, #304]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e12a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e12c:	f001 0103 	and.w	r1, r1, #3
9000e130:	2903      	cmp	r1, #3
9000e132:	f43f ad16 	beq.w	9000db62 <HAL_RCCEx_PeriphCLKConfig+0x5de>
9000e136:	2101      	movs	r1, #1
9000e138:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e13c:	f7ff f9b0 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e140:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000e142:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e146:	2d00      	cmp	r5, #0
9000e148:	d187      	bne.n	9000e05a <HAL_RCCEx_PeriphCLKConfig+0xad6>
9000e14a:	e646      	b.n	9000ddda <HAL_RCCEx_PeriphCLKConfig+0x856>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e14c:	4943      	ldr	r1, [pc, #268]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e14e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e150:	f001 0103 	and.w	r1, r1, #3
9000e154:	2903      	cmp	r1, #3
9000e156:	f43f ae0e 	beq.w	9000dd76 <HAL_RCCEx_PeriphCLKConfig+0x7f2>
9000e15a:	2102      	movs	r1, #2
9000e15c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e160:	f7ff f99e 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e164:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000e166:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e16a:	2d00      	cmp	r5, #0
9000e16c:	d1af      	bne.n	9000e0ce <HAL_RCCEx_PeriphCLKConfig+0xb4a>
9000e16e:	e4b3      	b.n	9000dad8 <HAL_RCCEx_PeriphCLKConfig+0x554>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e170:	493a      	ldr	r1, [pc, #232]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e172:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e174:	f001 0103 	and.w	r1, r1, #3
9000e178:	2903      	cmp	r1, #3
9000e17a:	f000 8131 	beq.w	9000e3e0 <HAL_RCCEx_PeriphCLKConfig+0xe5c>
9000e17e:	2102      	movs	r1, #2
9000e180:	f104 0008 	add.w	r0, r4, #8
9000e184:	f7ff f91a 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000e188:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000e18a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e18e:	2d00      	cmp	r5, #0
9000e190:	f47f abb3 	bne.w	9000d8fa <HAL_RCCEx_PeriphCLKConfig+0x376>
9000e194:	e766      	b.n	9000e064 <HAL_RCCEx_PeriphCLKConfig+0xae0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e196:	4931      	ldr	r1, [pc, #196]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e198:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e19a:	f001 0103 	and.w	r1, r1, #3
9000e19e:	2903      	cmp	r1, #3
9000e1a0:	f43f addc 	beq.w	9000dd5c <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9000e1a4:	2102      	movs	r1, #2
9000e1a6:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e1aa:	f7ff f979 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e1ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000e1b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e1b4:	2d00      	cmp	r5, #0
9000e1b6:	d18e      	bne.n	9000e0d6 <HAL_RCCEx_PeriphCLKConfig+0xb52>
9000e1b8:	e465      	b.n	9000da86 <HAL_RCCEx_PeriphCLKConfig+0x502>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e1ba:	4928      	ldr	r1, [pc, #160]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e1bc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e1be:	f001 0103 	and.w	r1, r1, #3
9000e1c2:	2903      	cmp	r1, #3
9000e1c4:	f43f ab83 	beq.w	9000d8ce <HAL_RCCEx_PeriphCLKConfig+0x34a>
9000e1c8:	2101      	movs	r1, #1
9000e1ca:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e1ce:	f7ff f967 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e1d2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000e1d4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e1d8:	2d00      	cmp	r5, #0
9000e1da:	f47f af67 	bne.w	9000e0ac <HAL_RCCEx_PeriphCLKConfig+0xb28>
9000e1de:	f7ff baef 	b.w	9000d7c0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e1e2:	491e      	ldr	r1, [pc, #120]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e1e4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e1e6:	f001 0103 	and.w	r1, r1, #3
9000e1ea:	2903      	cmp	r1, #3
9000e1ec:	f43f ab7a 	beq.w	9000d8e4 <HAL_RCCEx_PeriphCLKConfig+0x360>
9000e1f0:	2101      	movs	r1, #1
9000e1f2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e1f6:	f7ff f953 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e1fa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000e1fc:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e200:	2d00      	cmp	r5, #0
9000e202:	f47f af56 	bne.w	9000e0b2 <HAL_RCCEx_PeriphCLKConfig+0xb2e>
9000e206:	f7ff bb00 	b.w	9000d80a <HAL_RCCEx_PeriphCLKConfig+0x286>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e20a:	4914      	ldr	r1, [pc, #80]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e20c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e20e:	f001 0103 	and.w	r1, r1, #3
9000e212:	2903      	cmp	r1, #3
9000e214:	f43f ab3d 	beq.w	9000d892 <HAL_RCCEx_PeriphCLKConfig+0x30e>
9000e218:	2100      	movs	r1, #0
9000e21a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e21e:	f7ff f93f 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e222:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000e224:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e228:	2d00      	cmp	r5, #0
9000e22a:	f47f af29 	bne.w	9000e080 <HAL_RCCEx_PeriphCLKConfig+0xafc>
9000e22e:	f7ff ba5b 	b.w	9000d6e8 <HAL_RCCEx_PeriphCLKConfig+0x164>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e232:	490a      	ldr	r1, [pc, #40]	@ (9000e25c <HAL_RCCEx_PeriphCLKConfig+0xcd8>)
9000e234:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e236:	f001 0103 	and.w	r1, r1, #3
9000e23a:	2903      	cmp	r1, #3
9000e23c:	f43f ab3a 	beq.w	9000d8b4 <HAL_RCCEx_PeriphCLKConfig+0x330>
9000e240:	2100      	movs	r1, #0
9000e242:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e246:	f7ff f92b 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e24a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000e24c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e250:	2d00      	cmp	r5, #0
9000e252:	f47f af18 	bne.w	9000e086 <HAL_RCCEx_PeriphCLKConfig+0xb02>
9000e256:	f7ff ba8c 	b.w	9000d772 <HAL_RCCEx_PeriphCLKConfig+0x1ee>
9000e25a:	bf00      	nop
9000e25c:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e260:	4973      	ldr	r1, [pc, #460]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e262:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e264:	f001 0103 	and.w	r1, r1, #3
9000e268:	2903      	cmp	r1, #3
9000e26a:	f43f ae07 	beq.w	9000de7c <HAL_RCCEx_PeriphCLKConfig+0x8f8>
9000e26e:	2102      	movs	r1, #2
9000e270:	3028      	adds	r0, #40	@ 0x28
9000e272:	f7ff f915 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e276:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000e278:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e27c:	2e00      	cmp	r6, #0
9000e27e:	f47f a9b0 	bne.w	9000d5e2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000e282:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000e284:	f7ff b9a6 	b.w	9000d5d4 <HAL_RCCEx_PeriphCLKConfig+0x50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e288:	4969      	ldr	r1, [pc, #420]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e28a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e28c:	f001 0103 	and.w	r1, r1, #3
9000e290:	2903      	cmp	r1, #3
9000e292:	f43f a9b2 	beq.w	9000d5fa <HAL_RCCEx_PeriphCLKConfig+0x76>
9000e296:	2100      	movs	r1, #0
9000e298:	f104 0008 	add.w	r0, r4, #8
9000e29c:	f7ff f88e 	bl	9000d3bc <RCCEx_PLL2_Config.part.0>
9000e2a0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000e2a2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e2a6:	2d00      	cmp	r5, #0
9000e2a8:	f43f ae53 	beq.w	9000df52 <HAL_RCCEx_PeriphCLKConfig+0x9ce>
9000e2ac:	462e      	mov	r6, r5
9000e2ae:	f7ff b9a6 	b.w	9000d5fe <HAL_RCCEx_PeriphCLKConfig+0x7a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e2b2:	495f      	ldr	r1, [pc, #380]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e2b4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e2b6:	f001 0103 	and.w	r1, r1, #3
9000e2ba:	2903      	cmp	r1, #3
9000e2bc:	f43f a99d 	beq.w	9000d5fa <HAL_RCCEx_PeriphCLKConfig+0x76>
9000e2c0:	2100      	movs	r1, #0
9000e2c2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e2c6:	f7ff f8eb 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e2ca:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000e2cc:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000e2d0:	e63c      	b.n	9000df4c <HAL_RCCEx_PeriphCLKConfig+0x9c8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e2d2:	4957      	ldr	r1, [pc, #348]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e2d4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e2d6:	f001 0103 	and.w	r1, r1, #3
9000e2da:	2903      	cmp	r1, #3
9000e2dc:	f43f aac0 	beq.w	9000d860 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
9000e2e0:	2100      	movs	r1, #0
9000e2e2:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e2e6:	f7ff f8db 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e2ea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000e2ec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e2f0:	2d00      	cmp	r5, #0
9000e2f2:	f47f aebf 	bne.w	9000e074 <HAL_RCCEx_PeriphCLKConfig+0xaf0>
9000e2f6:	f7ff b9a2 	b.w	9000d63e <HAL_RCCEx_PeriphCLKConfig+0xba>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e2fa:	494d      	ldr	r1, [pc, #308]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e2fc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e2fe:	f001 0103 	and.w	r1, r1, #3
9000e302:	2903      	cmp	r1, #3
9000e304:	f43f aaba 	beq.w	9000d87c <HAL_RCCEx_PeriphCLKConfig+0x2f8>
9000e308:	2100      	movs	r1, #0
9000e30a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e30e:	f7ff f8c7 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e312:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000e314:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e318:	2d00      	cmp	r5, #0
9000e31a:	f47f aeae 	bne.w	9000e07a <HAL_RCCEx_PeriphCLKConfig+0xaf6>
9000e31e:	f7ff b9b8 	b.w	9000d692 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e322:	4943      	ldr	r1, [pc, #268]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e324:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e326:	f001 0103 	and.w	r1, r1, #3
9000e32a:	2903      	cmp	r1, #3
9000e32c:	d041      	beq.n	9000e3b2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000e32e:	2101      	movs	r1, #1
9000e330:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e334:	f7ff f8b4 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e338:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000e33a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e33e:	2d00      	cmp	r5, #0
9000e340:	f47f ab56 	bne.w	9000d9f0 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000e344:	e6b8      	b.n	9000e0b8 <HAL_RCCEx_PeriphCLKConfig+0xb34>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e346:	493a      	ldr	r1, [pc, #232]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e348:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e34a:	f001 0103 	and.w	r1, r1, #3
9000e34e:	2903      	cmp	r1, #3
9000e350:	d02b      	beq.n	9000e3aa <HAL_RCCEx_PeriphCLKConfig+0xe26>
9000e352:	2101      	movs	r1, #1
9000e354:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e358:	f7ff f8a2 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e35c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000e35e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e362:	2d00      	cmp	r5, #0
9000e364:	f47f ab1f 	bne.w	9000d9a6 <HAL_RCCEx_PeriphCLKConfig+0x422>
9000e368:	e698      	b.n	9000e09c <HAL_RCCEx_PeriphCLKConfig+0xb18>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000e36a:	4931      	ldr	r1, [pc, #196]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e36c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000e36e:	f001 0103 	and.w	r1, r1, #3
9000e372:	2903      	cmp	r1, #3
9000e374:	f43f aaf5 	beq.w	9000d962 <HAL_RCCEx_PeriphCLKConfig+0x3de>
9000e378:	2101      	movs	r1, #1
9000e37a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000e37e:	f7ff f88f 	bl	9000d4a0 <RCCEx_PLL3_Config.part.0>
9000e382:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000e384:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000e388:	2d00      	cmp	r5, #0
9000e38a:	f47f aea6 	bne.w	9000e0da <HAL_RCCEx_PeriphCLKConfig+0xb56>
9000e38e:	e56d      	b.n	9000de6c <HAL_RCCEx_PeriphCLKConfig+0x8e8>
        ret = HAL_TIMEOUT;
9000e390:	2503      	movs	r5, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000e392:	462e      	mov	r6, r5
9000e394:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e398:	f7ff bab3 	b.w	9000d902 <HAL_RCCEx_PeriphCLKConfig+0x37e>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000e39c:	4d24      	ldr	r5, [pc, #144]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e39e:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000e3a0:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000e3a4:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000e3a6:	f7ff b915 	b.w	9000d5d4 <HAL_RCCEx_PeriphCLKConfig+0x50>
9000e3aa:	2601      	movs	r6, #1
9000e3ac:	4635      	mov	r5, r6
9000e3ae:	f7ff bafb 	b.w	9000d9a8 <HAL_RCCEx_PeriphCLKConfig+0x424>
9000e3b2:	2601      	movs	r6, #1
9000e3b4:	4635      	mov	r5, r6
9000e3b6:	f7ff bb1c 	b.w	9000d9f2 <HAL_RCCEx_PeriphCLKConfig+0x46e>
        status = HAL_ERROR;
9000e3ba:	2601      	movs	r6, #1
9000e3bc:	f7ff bb9c 	b.w	9000daf8 <HAL_RCCEx_PeriphCLKConfig+0x574>
        status = HAL_ERROR;
9000e3c0:	2601      	movs	r6, #1
9000e3c2:	f7ff bba7 	b.w	9000db14 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000e3c6:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000e3ca:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000e3cc:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e3d0:	f7ff bba0 	b.w	9000db14 <HAL_RCCEx_PeriphCLKConfig+0x590>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000e3d4:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000e3d8:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e3dc:	f7ff bb8c 	b.w	9000daf8 <HAL_RCCEx_PeriphCLKConfig+0x574>
9000e3e0:	2601      	movs	r6, #1
9000e3e2:	4635      	mov	r5, r6
9000e3e4:	f7ff ba8a 	b.w	9000d8fc <HAL_RCCEx_PeriphCLKConfig+0x378>
        tickstart = HAL_GetTick();
9000e3e8:	f7f9 fd88 	bl	90007efc <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e3ec:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>
        tickstart = HAL_GetTick();
9000e3f0:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e3f2:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e3f6:	e004      	b.n	9000e402 <HAL_RCCEx_PeriphCLKConfig+0xe7e>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000e3f8:	f7f9 fd80 	bl	90007efc <HAL_GetTick>
9000e3fc:	1bc0      	subs	r0, r0, r7
9000e3fe:	4548      	cmp	r0, r9
9000e400:	d810      	bhi.n	9000e424 <HAL_RCCEx_PeriphCLKConfig+0xea0>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000e402:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000e406:	079b      	lsls	r3, r3, #30
9000e408:	d5f6      	bpl.n	9000e3f8 <HAL_RCCEx_PeriphCLKConfig+0xe74>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000e40a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000e40e:	e566      	b.n	9000dede <HAL_RCCEx_PeriphCLKConfig+0x95a>
9000e410:	4807      	ldr	r0, [pc, #28]	@ (9000e430 <HAL_RCCEx_PeriphCLKConfig+0xeac>)
9000e412:	4a08      	ldr	r2, [pc, #32]	@ (9000e434 <HAL_RCCEx_PeriphCLKConfig+0xeb0>)
9000e414:	6901      	ldr	r1, [r0, #16]
9000e416:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000e41a:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000e41e:	430a      	orrs	r2, r1
9000e420:	6102      	str	r2, [r0, #16]
9000e422:	e567      	b.n	9000def4 <HAL_RCCEx_PeriphCLKConfig+0x970>
        status = ret;
9000e424:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000e426:	e9d4 3200 	ldrd	r3, r2, [r4]
9000e42a:	4635      	mov	r5, r6
9000e42c:	f7ff ba69 	b.w	9000d902 <HAL_RCCEx_PeriphCLKConfig+0x37e>
9000e430:	58024400 	.word	0x58024400
9000e434:	00ffffcf 	.word	0x00ffffcf

9000e438 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000e438:	b318      	cbz	r0, 9000e482 <HAL_SDRAM_Init+0x4a>
{
9000e43a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000e43c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000e440:	4604      	mov	r4, r0
9000e442:	460d      	mov	r5, r1
9000e444:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000e448:	b1b3      	cbz	r3, 9000e478 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000e44a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e44c:	2302      	movs	r3, #2
9000e44e:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000e452:	f851 0b04 	ldr.w	r0, [r1], #4
9000e456:	f000 fa13 	bl	9000e880 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000e45a:	6862      	ldr	r2, [r4, #4]
9000e45c:	4629      	mov	r1, r5
9000e45e:	6820      	ldr	r0, [r4, #0]
9000e460:	f000 fa46 	bl	9000e8f0 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000e464:	4a08      	ldr	r2, [pc, #32]	@ (9000e488 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000e466:	2101      	movs	r1, #1

  return HAL_OK;
9000e468:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000e46a:	6813      	ldr	r3, [r2, #0]
9000e46c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000e470:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000e472:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000e476:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000e478:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000e47c:	f7f6 f9de 	bl	9000483c <HAL_SDRAM_MspInit>
9000e480:	e7e3      	b.n	9000e44a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000e482:	2001      	movs	r0, #1
}
9000e484:	4770      	bx	lr
9000e486:	bf00      	nop
9000e488:	52004000 	.word	0x52004000

9000e48c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000e48c:	b510      	push	{r4, lr}
9000e48e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000e490:	f7f6 fa50 	bl	90004934 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000e494:	e9d4 0100 	ldrd	r0, r1, [r4]
9000e498:	f000 fa68 	bl	9000e96c <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000e49c:	2000      	movs	r0, #0
9000e49e:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000e4a2:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000e4a6:	bd10      	pop	{r4, pc}

9000e4a8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000e4a8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000e4aa:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000e4ae:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000e4b0:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000e4b2:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000e4b4:	d004      	beq.n	9000e4c0 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000e4b6:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000e4ba:	2c01      	cmp	r4, #1
9000e4bc:	d001      	beq.n	9000e4c2 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000e4be:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000e4c0:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e4c2:	2302      	movs	r3, #2
9000e4c4:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000e4c6:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e4c8:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000e4cc:	f000 fa62 	bl	9000e994 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000e4d0:	6833      	ldr	r3, [r6, #0]
9000e4d2:	2b02      	cmp	r3, #2
9000e4d4:	d003      	beq.n	9000e4de <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000e4d6:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000e4da:	2000      	movs	r0, #0
}
9000e4dc:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000e4de:	2305      	movs	r3, #5
9000e4e0:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000e4e4:	e7f9      	b.n	9000e4da <HAL_SDRAM_SendCommand+0x32>
9000e4e6:	bf00      	nop

9000e4e8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000e4e8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000e4ea:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000e4ee:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000e4f0:	2b02      	cmp	r3, #2
9000e4f2:	b2d8      	uxtb	r0, r3
9000e4f4:	d005      	beq.n	9000e502 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000e4f6:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000e4fa:	2b01      	cmp	r3, #1
9000e4fc:	b2dd      	uxtb	r5, r3
9000e4fe:	d001      	beq.n	9000e504 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000e500:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000e502:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e504:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000e506:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000e508:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000e50c:	f000 fa5a 	bl	9000e9c4 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000e510:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000e512:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000e516:	bd38      	pop	{r3, r4, r5, pc}

9000e518 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000e518:	4770      	bx	lr
9000e51a:	bf00      	nop

9000e51c <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000e51c:	2800      	cmp	r0, #0
9000e51e:	f000 8094 	beq.w	9000e64a <HAL_TIM_Base_Init+0x12e>
{
9000e522:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000e524:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000e528:	4604      	mov	r4, r0
9000e52a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000e52e:	2b00      	cmp	r3, #0
9000e530:	d07b      	beq.n	9000e62a <HAL_TIM_Base_Init+0x10e>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000e532:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000e534:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e536:	4946      	ldr	r1, [pc, #280]	@ (9000e650 <HAL_TIM_Base_Init+0x134>)
9000e538:	4846      	ldr	r0, [pc, #280]	@ (9000e654 <HAL_TIM_Base_Init+0x138>)
9000e53a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000e53e:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000e542:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e546:	eba3 0e00 	sub.w	lr, r3, r0
  tmpcr1 = TIMx->CR1;
9000e54a:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e54c:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e550:	69a7      	ldr	r7, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e552:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000e556:	6865      	ldr	r5, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e558:	ea4f 1151 	mov.w	r1, r1, lsr #5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e55c:	68e6      	ldr	r6, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000e55e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000e562:	d020      	beq.n	9000e5a6 <HAL_TIM_Base_Init+0x8a>
9000e564:	b9f9      	cbnz	r1, 9000e5a6 <HAL_TIM_Base_Init+0x8a>
9000e566:	f8df c0fc 	ldr.w	ip, [pc, #252]	@ 9000e664 <HAL_TIM_Base_Init+0x148>
9000e56a:	4563      	cmp	r3, ip
9000e56c:	d01b      	beq.n	9000e5a6 <HAL_TIM_Base_Init+0x8a>
9000e56e:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000e572:	4563      	cmp	r3, ip
9000e574:	d017      	beq.n	9000e5a6 <HAL_TIM_Base_Init+0x8a>
9000e576:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000e57a:	4563      	cmp	r3, ip
9000e57c:	d013      	beq.n	9000e5a6 <HAL_TIM_Base_Init+0x8a>
9000e57e:	f1be 0f00 	cmp.w	lr, #0
9000e582:	d110      	bne.n	9000e5a6 <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e584:	4834      	ldr	r0, [pc, #208]	@ (9000e658 <HAL_TIM_Base_Init+0x13c>)
9000e586:	4935      	ldr	r1, [pc, #212]	@ (9000e65c <HAL_TIM_Base_Init+0x140>)
9000e588:	428b      	cmp	r3, r1
9000e58a:	bf18      	it	ne
9000e58c:	4283      	cmpne	r3, r0
9000e58e:	d051      	beq.n	9000e634 <HAL_TIM_Base_Init+0x118>
9000e590:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000e594:	428b      	cmp	r3, r1
9000e596:	d04d      	beq.n	9000e634 <HAL_TIM_Base_Init+0x118>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e598:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000e59c:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000e59e:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e5a0:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e5a2:	629d      	str	r5, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e5a4:	e01d      	b.n	9000e5e2 <HAL_TIM_Base_Init+0xc6>
    tmpcr1 |= Structure->CounterMode;
9000e5a6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000e5a8:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000e5ac:	4302      	orrs	r2, r0
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e5ae:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e5b0:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e5b4:	4302      	orrs	r2, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e5b6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000e5ba:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000e5bc:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e5be:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e5c0:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e5c2:	b961      	cbnz	r1, 9000e5de <HAL_TIM_Base_Init+0xc2>
9000e5c4:	f1be 0f00 	cmp.w	lr, #0
9000e5c8:	d109      	bne.n	9000e5de <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e5ca:	4925      	ldr	r1, [pc, #148]	@ (9000e660 <HAL_TIM_Base_Init+0x144>)
9000e5cc:	4a22      	ldr	r2, [pc, #136]	@ (9000e658 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e5ce:	4293      	cmp	r3, r2
9000e5d0:	bf18      	it	ne
9000e5d2:	428b      	cmpne	r3, r1
9000e5d4:	d003      	beq.n	9000e5de <HAL_TIM_Base_Init+0xc2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000e5d6:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e5da:	4293      	cmp	r3, r2
9000e5dc:	d101      	bne.n	9000e5e2 <HAL_TIM_Base_Init+0xc6>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000e5de:	6962      	ldr	r2, [r4, #20]
9000e5e0:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000e5e2:	2201      	movs	r2, #1
9000e5e4:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
9000e5e6:	691a      	ldr	r2, [r3, #16]
9000e5e8:	07d2      	lsls	r2, r2, #31
9000e5ea:	d503      	bpl.n	9000e5f4 <HAL_TIM_Base_Init+0xd8>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
9000e5ec:	691a      	ldr	r2, [r3, #16]
9000e5ee:	f022 0201 	bic.w	r2, r2, #1
9000e5f2:	611a      	str	r2, [r3, #16]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000e5f4:	2301      	movs	r3, #1
  return HAL_OK;
9000e5f6:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000e5f8:	f884 3048 	strb.w	r3, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e5fc:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
9000e600:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
9000e604:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000e608:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
9000e60c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9000e610:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000e614:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000e618:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000e61c:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
9000e620:	f884 3047 	strb.w	r3, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000e624:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
}
9000e628:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    htim->Lock = HAL_UNLOCKED;
9000e62a:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000e62e:	f7ff ff73 	bl	9000e518 <HAL_TIM_Base_MspInit>
9000e632:	e77e      	b.n	9000e532 <HAL_TIM_Base_Init+0x16>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e634:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000e636:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000e63a:	430a      	orrs	r2, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000e63c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000e640:	433a      	orrs	r2, r7
  TIMx->CR1 = tmpcr1;
9000e642:	601a      	str	r2, [r3, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000e644:	62de      	str	r6, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000e646:	629d      	str	r5, [r3, #40]	@ 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000e648:	e7bf      	b.n	9000e5ca <HAL_TIM_Base_Init+0xae>
    return HAL_ERROR;
9000e64a:	2001      	movs	r0, #1
}
9000e64c:	4770      	bx	lr
9000e64e:	bf00      	nop
9000e650:	40010000 	.word	0x40010000
9000e654:	40010400 	.word	0x40010400
9000e658:	40014000 	.word	0x40014000
9000e65c:	40014400 	.word	0x40014400
9000e660:	40014800 	.word	0x40014800
9000e664:	40000400 	.word	0x40000400

9000e668 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000e668:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000e66c:	2b01      	cmp	r3, #1
9000e66e:	d13d      	bne.n	9000e6ec <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e670:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000e672:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e674:	4b1e      	ldr	r3, [pc, #120]	@ (9000e6f0 <HAL_TIM_Base_Start_IT+0x88>)
9000e676:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000e67a:	bf18      	it	ne
9000e67c:	429a      	cmpne	r2, r3
{
9000e67e:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e680:	bf0c      	ite	eq
9000e682:	2301      	moveq	r3, #1
9000e684:	2300      	movne	r3, #0
9000e686:	4d1b      	ldr	r5, [pc, #108]	@ (9000e6f4 <HAL_TIM_Base_Start_IT+0x8c>)
9000e688:	4c1b      	ldr	r4, [pc, #108]	@ (9000e6f8 <HAL_TIM_Base_Start_IT+0x90>)
9000e68a:	42aa      	cmp	r2, r5
9000e68c:	bf08      	it	eq
9000e68e:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000e692:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e696:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e698:	42a2      	cmp	r2, r4
9000e69a:	bf08      	it	eq
9000e69c:	f043 0301 	orreq.w	r3, r3, #1
9000e6a0:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e6a4:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e6a8:	4814      	ldr	r0, [pc, #80]	@ (9000e6fc <HAL_TIM_Base_Start_IT+0x94>)
9000e6aa:	42a2      	cmp	r2, r4
9000e6ac:	bf08      	it	eq
9000e6ae:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000e6b2:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000e6b4:	4282      	cmp	r2, r0
9000e6b6:	bf08      	it	eq
9000e6b8:	f043 0301 	orreq.w	r3, r3, #1
9000e6bc:	4910      	ldr	r1, [pc, #64]	@ (9000e700 <HAL_TIM_Base_Start_IT+0x98>)
9000e6be:	428a      	cmp	r2, r1
9000e6c0:	bf08      	it	eq
9000e6c2:	f043 0301 	orreq.w	r3, r3, #1
9000e6c6:	b913      	cbnz	r3, 9000e6ce <HAL_TIM_Base_Start_IT+0x66>
9000e6c8:	4b0e      	ldr	r3, [pc, #56]	@ (9000e704 <HAL_TIM_Base_Start_IT+0x9c>)
9000e6ca:	429a      	cmp	r2, r3
9000e6cc:	d107      	bne.n	9000e6de <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000e6ce:	6891      	ldr	r1, [r2, #8]
9000e6d0:	4b0d      	ldr	r3, [pc, #52]	@ (9000e708 <HAL_TIM_Base_Start_IT+0xa0>)
9000e6d2:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000e6d4:	2b06      	cmp	r3, #6
9000e6d6:	d006      	beq.n	9000e6e6 <HAL_TIM_Base_Start_IT+0x7e>
9000e6d8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000e6dc:	d003      	beq.n	9000e6e6 <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000e6de:	6813      	ldr	r3, [r2, #0]
9000e6e0:	f043 0301 	orr.w	r3, r3, #1
9000e6e4:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000e6e6:	2000      	movs	r0, #0
}
9000e6e8:	bc30      	pop	{r4, r5}
9000e6ea:	4770      	bx	lr
    return HAL_ERROR;
9000e6ec:	2001      	movs	r0, #1
}
9000e6ee:	4770      	bx	lr
9000e6f0:	40010000 	.word	0x40010000
9000e6f4:	40000400 	.word	0x40000400
9000e6f8:	40000800 	.word	0x40000800
9000e6fc:	40010400 	.word	0x40010400
9000e700:	40001800 	.word	0x40001800
9000e704:	40014000 	.word	0x40014000
9000e708:	00010007 	.word	0x00010007

9000e70c <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000e70c:	4770      	bx	lr
9000e70e:	bf00      	nop

9000e710 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000e710:	4770      	bx	lr
9000e712:	bf00      	nop

9000e714 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000e714:	4770      	bx	lr
9000e716:	bf00      	nop

9000e718 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000e718:	4770      	bx	lr
9000e71a:	bf00      	nop

9000e71c <HAL_TIM_IRQHandler>:
{
9000e71c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t itsource = htim->Instance->DIER;
9000e71e:	6803      	ldr	r3, [r0, #0]
{
9000e720:	4605      	mov	r5, r0
  uint32_t itsource = htim->Instance->DIER;
9000e722:	68de      	ldr	r6, [r3, #12]
  uint32_t itflag   = htim->Instance->SR;
9000e724:	691c      	ldr	r4, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000e726:	07a1      	lsls	r1, r4, #30
9000e728:	d501      	bpl.n	9000e72e <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000e72a:	07b2      	lsls	r2, r6, #30
9000e72c:	d457      	bmi.n	9000e7de <HAL_TIM_IRQHandler+0xc2>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000e72e:	0767      	lsls	r7, r4, #29
9000e730:	d501      	bpl.n	9000e736 <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000e732:	0770      	lsls	r0, r6, #29
9000e734:	d440      	bmi.n	9000e7b8 <HAL_TIM_IRQHandler+0x9c>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000e736:	0721      	lsls	r1, r4, #28
9000e738:	d501      	bpl.n	9000e73e <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000e73a:	0732      	lsls	r2, r6, #28
9000e73c:	d42a      	bmi.n	9000e794 <HAL_TIM_IRQHandler+0x78>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000e73e:	06e7      	lsls	r7, r4, #27
9000e740:	d501      	bpl.n	9000e746 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000e742:	06f0      	lsls	r0, r6, #27
9000e744:	d413      	bmi.n	9000e76e <HAL_TIM_IRQHandler+0x52>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000e746:	07e1      	lsls	r1, r4, #31
9000e748:	d501      	bpl.n	9000e74e <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000e74a:	07f2      	lsls	r2, r6, #31
9000e74c:	d465      	bmi.n	9000e81a <HAL_TIM_IRQHandler+0xfe>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000e74e:	f414 5f02 	tst.w	r4, #8320	@ 0x2080
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000e752:	f404 7780 	and.w	r7, r4, #256	@ 0x100
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000e756:	d052      	beq.n	9000e7fe <HAL_TIM_IRQHandler+0xe2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000e758:	0633      	lsls	r3, r6, #24
9000e75a:	d466      	bmi.n	9000e82a <HAL_TIM_IRQHandler+0x10e>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000e75c:	0660      	lsls	r0, r4, #25
9000e75e:	d501      	bpl.n	9000e764 <HAL_TIM_IRQHandler+0x48>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000e760:	0671      	lsls	r1, r6, #25
9000e762:	d473      	bmi.n	9000e84c <HAL_TIM_IRQHandler+0x130>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000e764:	06a2      	lsls	r2, r4, #26
9000e766:	d501      	bpl.n	9000e76c <HAL_TIM_IRQHandler+0x50>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000e768:	06b3      	lsls	r3, r6, #26
9000e76a:	d44d      	bmi.n	9000e808 <HAL_TIM_IRQHandler+0xec>
}
9000e76c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000e76e:	682b      	ldr	r3, [r5, #0]
9000e770:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000e774:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000e776:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000e778:	2208      	movs	r2, #8
9000e77a:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000e77c:	69db      	ldr	r3, [r3, #28]
9000e77e:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000e782:	d174      	bne.n	9000e86e <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e784:	f7ff ffc2 	bl	9000e70c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e788:	4628      	mov	r0, r5
9000e78a:	f7ff ffc3 	bl	9000e714 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e78e:	2300      	movs	r3, #0
9000e790:	772b      	strb	r3, [r5, #28]
9000e792:	e7d8      	b.n	9000e746 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000e794:	682b      	ldr	r3, [r5, #0]
9000e796:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000e79a:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000e79c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000e79e:	2204      	movs	r2, #4
9000e7a0:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000e7a2:	69db      	ldr	r3, [r3, #28]
9000e7a4:	079b      	lsls	r3, r3, #30
9000e7a6:	d15f      	bne.n	9000e868 <HAL_TIM_IRQHandler+0x14c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e7a8:	f7ff ffb0 	bl	9000e70c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e7ac:	4628      	mov	r0, r5
9000e7ae:	f7ff ffb1 	bl	9000e714 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e7b2:	2300      	movs	r3, #0
9000e7b4:	772b      	strb	r3, [r5, #28]
9000e7b6:	e7c2      	b.n	9000e73e <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000e7b8:	682b      	ldr	r3, [r5, #0]
9000e7ba:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000e7be:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000e7c0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000e7c2:	2202      	movs	r2, #2
9000e7c4:	772a      	strb	r2, [r5, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000e7c6:	699b      	ldr	r3, [r3, #24]
9000e7c8:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000e7cc:	d149      	bne.n	9000e862 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000e7ce:	f7ff ff9d 	bl	9000e70c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e7d2:	4628      	mov	r0, r5
9000e7d4:	f7ff ff9e 	bl	9000e714 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e7d8:	2300      	movs	r3, #0
9000e7da:	772b      	strb	r3, [r5, #28]
9000e7dc:	e7ab      	b.n	9000e736 <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000e7de:	f06f 0202 	mvn.w	r2, #2
9000e7e2:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000e7e4:	2201      	movs	r2, #1
9000e7e6:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000e7e8:	699b      	ldr	r3, [r3, #24]
9000e7ea:	079b      	lsls	r3, r3, #30
9000e7ec:	d136      	bne.n	9000e85c <HAL_TIM_IRQHandler+0x140>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000e7ee:	f7ff ff8d 	bl	9000e70c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000e7f2:	4628      	mov	r0, r5
9000e7f4:	f7ff ff8e 	bl	9000e714 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000e7f8:	2300      	movs	r3, #0
9000e7fa:	772b      	strb	r3, [r5, #28]
9000e7fc:	e797      	b.n	9000e72e <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000e7fe:	2f00      	cmp	r7, #0
9000e800:	d0ac      	beq.n	9000e75c <HAL_TIM_IRQHandler+0x40>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000e802:	0637      	lsls	r7, r6, #24
9000e804:	d41a      	bmi.n	9000e83c <HAL_TIM_IRQHandler+0x120>
9000e806:	e7a9      	b.n	9000e75c <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000e808:	682b      	ldr	r3, [r5, #0]
9000e80a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000e80e:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000e810:	611a      	str	r2, [r3, #16]
}
9000e812:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
      HAL_TIMEx_CommutCallback(htim);
9000e816:	f000 b82d 	b.w	9000e874 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000e81a:	682b      	ldr	r3, [r5, #0]
9000e81c:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000e820:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000e822:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000e824:	f7f5 fe6e 	bl	90004504 <HAL_TIM_PeriodElapsedCallback>
9000e828:	e791      	b.n	9000e74e <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000e82a:	682b      	ldr	r3, [r5, #0]
9000e82c:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000e830:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000e832:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000e834:	f000 f820 	bl	9000e878 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000e838:	2f00      	cmp	r7, #0
9000e83a:	d08f      	beq.n	9000e75c <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000e83c:	682b      	ldr	r3, [r5, #0]
9000e83e:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000e842:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000e844:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000e846:	f000 f819 	bl	9000e87c <HAL_TIMEx_Break2Callback>
9000e84a:	e787      	b.n	9000e75c <HAL_TIM_IRQHandler+0x40>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000e84c:	682b      	ldr	r3, [r5, #0]
9000e84e:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000e852:	4628      	mov	r0, r5
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000e854:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000e856:	f7ff ff5f 	bl	9000e718 <HAL_TIM_TriggerCallback>
9000e85a:	e783      	b.n	9000e764 <HAL_TIM_IRQHandler+0x48>
          HAL_TIM_IC_CaptureCallback(htim);
9000e85c:	f7ff ff58 	bl	9000e710 <HAL_TIM_IC_CaptureCallback>
9000e860:	e7ca      	b.n	9000e7f8 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000e862:	f7ff ff55 	bl	9000e710 <HAL_TIM_IC_CaptureCallback>
9000e866:	e7b7      	b.n	9000e7d8 <HAL_TIM_IRQHandler+0xbc>
        HAL_TIM_IC_CaptureCallback(htim);
9000e868:	f7ff ff52 	bl	9000e710 <HAL_TIM_IC_CaptureCallback>
9000e86c:	e7a1      	b.n	9000e7b2 <HAL_TIM_IRQHandler+0x96>
        HAL_TIM_IC_CaptureCallback(htim);
9000e86e:	f7ff ff4f 	bl	9000e710 <HAL_TIM_IC_CaptureCallback>
9000e872:	e78c      	b.n	9000e78e <HAL_TIM_IRQHandler+0x72>

9000e874 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000e874:	4770      	bx	lr
9000e876:	bf00      	nop

9000e878 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000e878:	4770      	bx	lr
9000e87a:	bf00      	nop

9000e87c <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000e87c:	4770      	bx	lr
9000e87e:	bf00      	nop

9000e880 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
9000e880:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e884:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000e888:	e9d1 8200 	ldrd	r8, r2, [r1]
9000e88c:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000e88e:	ea43 030e 	orr.w	r3, r3, lr
9000e892:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000e896:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000e89a:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000e89c:	f1b8 0f00 	cmp.w	r8, #0
9000e8a0:	d10f      	bne.n	9000e8c2 <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e8a2:	433b      	orrs	r3, r7
9000e8a4:	4313      	orrs	r3, r2
9000e8a6:	4a11      	ldr	r2, [pc, #68]	@ (9000e8ec <FMC_SDRAM_Init+0x6c>)
9000e8a8:	ea43 030c 	orr.w	r3, r3, ip
9000e8ac:	4333      	orrs	r3, r6
9000e8ae:	432b      	orrs	r3, r5
9000e8b0:	4323      	orrs	r3, r4
9000e8b2:	430b      	orrs	r3, r1
9000e8b4:	6801      	ldr	r1, [r0, #0]
9000e8b6:	400a      	ands	r2, r1
9000e8b8:	4313      	orrs	r3, r2
9000e8ba:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000e8bc:	2000      	movs	r0, #0
9000e8be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e8c2:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e8c6:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e8c8:	4332      	orrs	r2, r6
9000e8ca:	432a      	orrs	r2, r5
9000e8cc:	4322      	orrs	r2, r4
9000e8ce:	4c07      	ldr	r4, [pc, #28]	@ (9000e8ec <FMC_SDRAM_Init+0x6c>)
9000e8d0:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000e8d2:	6801      	ldr	r1, [r0, #0]
9000e8d4:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000e8d8:	430b      	orrs	r3, r1
9000e8da:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000e8dc:	6843      	ldr	r3, [r0, #4]
9000e8de:	401c      	ands	r4, r3
9000e8e0:	4322      	orrs	r2, r4
9000e8e2:	6042      	str	r2, [r0, #4]
}
9000e8e4:	2000      	movs	r0, #0
9000e8e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e8ea:	bf00      	nop
9000e8ec:	ffff8000 	.word	0xffff8000

9000e8f0 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000e8f0:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e8f2:	68cc      	ldr	r4, [r1, #12]
9000e8f4:	694b      	ldr	r3, [r1, #20]
9000e8f6:	3c01      	subs	r4, #1
9000e8f8:	688d      	ldr	r5, [r1, #8]
9000e8fa:	698f      	ldr	r7, [r1, #24]
9000e8fc:	3b01      	subs	r3, #1
9000e8fe:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000e902:	684c      	ldr	r4, [r1, #4]
9000e904:	680e      	ldr	r6, [r1, #0]
9000e906:	3d01      	subs	r5, #1
9000e908:	3c01      	subs	r4, #1
9000e90a:	051b      	lsls	r3, r3, #20
9000e90c:	022d      	lsls	r5, r5, #8
9000e90e:	3e01      	subs	r6, #1
9000e910:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000e914:	690c      	ldr	r4, [r1, #16]
9000e916:	1e79      	subs	r1, r7, #1
9000e918:	3c01      	subs	r4, #1
9000e91a:	0609      	lsls	r1, r1, #24
9000e91c:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000e91e:	b972      	cbnz	r2, 9000e93e <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e920:	ea4e 0303 	orr.w	r3, lr, r3
9000e924:	6882      	ldr	r2, [r0, #8]
9000e926:	4333      	orrs	r3, r6
9000e928:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000e92c:	ea43 030c 	orr.w	r3, r3, ip
9000e930:	432b      	orrs	r3, r5
9000e932:	4323      	orrs	r3, r4
9000e934:	430b      	orrs	r3, r1
9000e936:	4313      	orrs	r3, r2
9000e938:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000e93a:	2000      	movs	r0, #0
9000e93c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e93e:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e942:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e946:	4a08      	ldr	r2, [pc, #32]	@ (9000e968 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e948:	4333      	orrs	r3, r6
9000e94a:	4323      	orrs	r3, r4
9000e94c:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000e94e:	6881      	ldr	r1, [r0, #8]
9000e950:	400a      	ands	r2, r1
9000e952:	ea42 020e 	orr.w	r2, r2, lr
9000e956:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000e958:	68c2      	ldr	r2, [r0, #12]
9000e95a:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000e95e:	4313      	orrs	r3, r2
9000e960:	60c3      	str	r3, [r0, #12]
}
9000e962:	2000      	movs	r0, #0
9000e964:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000e966:	bf00      	nop
9000e968:	ff0f0fff 	.word	0xff0f0fff

9000e96c <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000e96c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000e96e:	2200      	movs	r2, #0
{
9000e970:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000e972:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e976:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000e97a:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000e97e:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000e982:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000e984:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000e988:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000e98a:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000e98c:	619a      	str	r2, [r3, #24]
}
9000e98e:	bc30      	pop	{r4, r5}
9000e990:	4770      	bx	lr
9000e992:	bf00      	nop

9000e994 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000e994:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e996:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000e99a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e99c:	6900      	ldr	r0, [r0, #16]
9000e99e:	4323      	orrs	r3, r4
9000e9a0:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000e9a4:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000e9a8:	4c05      	ldr	r4, [pc, #20]	@ (9000e9c0 <FMC_SDRAM_SendCommand+0x2c>)
9000e9aa:	3901      	subs	r1, #1
9000e9ac:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000e9ae:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e9b0:	4323      	orrs	r3, r4
}
9000e9b2:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000e9b6:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000e9ba:	6113      	str	r3, [r2, #16]
}
9000e9bc:	4770      	bx	lr
9000e9be:	bf00      	nop
9000e9c0:	ffc00000 	.word	0xffc00000

9000e9c4 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000e9c4:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e9c6:	4b05      	ldr	r3, [pc, #20]	@ (9000e9dc <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000e9c8:	2000      	movs	r0, #0
{
9000e9ca:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e9cc:	6954      	ldr	r4, [r2, #20]
9000e9ce:	4023      	ands	r3, r4
}
9000e9d0:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000e9d4:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000e9d8:	6153      	str	r3, [r2, #20]
}
9000e9da:	4770      	bx	lr
9000e9dc:	ffffc001 	.word	0xffffc001

9000e9e0 <USB_CoreInit>:
  * @param  cfg pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_CoreInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
9000e9e0:	b084      	sub	sp, #16
9000e9e2:	b082      	sub	sp, #8
9000e9e4:	f10d 0c0c 	add.w	ip, sp, #12
9000e9e8:	e88c 000e 	stmia.w	ip, {r1, r2, r3}
  HAL_StatusTypeDef ret;
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
9000e9ec:	f89d 2011 	ldrb.w	r2, [sp, #17]
{
9000e9f0:	4603      	mov	r3, r0
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
9000e9f2:	2a01      	cmp	r2, #1
9000e9f4:	d135      	bne.n	9000ea62 <USB_CoreInit+0x82>
  {
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000e9f6:	6b81      	ldr	r1, [r0, #56]	@ 0x38

    /* Init The ULPI Interface */
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
9000e9f8:	f1a2 1242 	sub.w	r2, r2, #4325442	@ 0x420042

    /* Select vbus source */
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
    if (cfg.use_external_vbus == 1U)
9000e9fc:	f89d 0018 	ldrb.w	r0, [sp, #24]
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000ea00:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
    if (cfg.use_external_vbus == 1U)
9000ea04:	2801      	cmp	r0, #1
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000ea06:	6399      	str	r1, [r3, #56]	@ 0x38
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_TSDPS | USB_OTG_GUSBCFG_ULPIFSLS | USB_OTG_GUSBCFG_PHYSEL);
9000ea08:	68d9      	ldr	r1, [r3, #12]
9000ea0a:	ea02 0201 	and.w	r2, r2, r1
9000ea0e:	60da      	str	r2, [r3, #12]
    USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_ULPIEVBUSD | USB_OTG_GUSBCFG_ULPIEVBUSI);
9000ea10:	68da      	ldr	r2, [r3, #12]
9000ea12:	f422 1240 	bic.w	r2, r2, #3145728	@ 0x300000
9000ea16:	60da      	str	r2, [r3, #12]
    if (cfg.use_external_vbus == 1U)
9000ea18:	d068      	beq.n	9000eaec <USB_CoreInit+0x10c>
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
  __IO uint32_t count = 0U;
9000ea1a:	2200      	movs	r2, #0
9000ea1c:	9200      	str	r2, [sp, #0]
9000ea1e:	e002      	b.n	9000ea26 <USB_CoreInit+0x46>

    if (count > HAL_USB_TIMEOUT)
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000ea20:	691a      	ldr	r2, [r3, #16]
9000ea22:	2a00      	cmp	r2, #0
9000ea24:	db37      	blt.n	9000ea96 <USB_CoreInit+0xb6>
    count++;
9000ea26:	9a00      	ldr	r2, [sp, #0]
9000ea28:	3201      	adds	r2, #1
9000ea2a:	9200      	str	r2, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000ea2c:	9a00      	ldr	r2, [sp, #0]
9000ea2e:	f1b2 6f70 	cmp.w	r2, #251658240	@ 0xf000000
9000ea32:	d9f5      	bls.n	9000ea20 <USB_CoreInit+0x40>
      return HAL_TIMEOUT;
9000ea34:	2003      	movs	r0, #3
  if (cfg.dma_enable == 1U)
9000ea36:	f89d 200e 	ldrb.w	r2, [sp, #14]
9000ea3a:	2a01      	cmp	r2, #1
9000ea3c:	d10e      	bne.n	9000ea5c <USB_CoreInit+0x7c>
    USBx->GDFIFOCFG &= ~(0xFFFFU << 16);
9000ea3e:	6dd9      	ldr	r1, [r3, #92]	@ 0x5c
    USBx->GDFIFOCFG |= 0x3EEU << 16;
9000ea40:	4a2d      	ldr	r2, [pc, #180]	@ (9000eaf8 <USB_CoreInit+0x118>)
    USBx->GDFIFOCFG &= ~(0xFFFFU << 16);
9000ea42:	b289      	uxth	r1, r1
9000ea44:	65d9      	str	r1, [r3, #92]	@ 0x5c
    USBx->GDFIFOCFG |= 0x3EEU << 16;
9000ea46:	6dd9      	ldr	r1, [r3, #92]	@ 0x5c
9000ea48:	430a      	orrs	r2, r1
9000ea4a:	65da      	str	r2, [r3, #92]	@ 0x5c
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_HBSTLEN_2;
9000ea4c:	689a      	ldr	r2, [r3, #8]
9000ea4e:	f042 0206 	orr.w	r2, r2, #6
9000ea52:	609a      	str	r2, [r3, #8]
    USBx->GAHBCFG |= USB_OTG_GAHBCFG_DMAEN;
9000ea54:	689a      	ldr	r2, [r3, #8]
9000ea56:	f042 0220 	orr.w	r2, r2, #32
9000ea5a:	609a      	str	r2, [r3, #8]
}
9000ea5c:	b002      	add	sp, #8
9000ea5e:	b004      	add	sp, #16
9000ea60:	4770      	bx	lr
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
9000ea62:	68c2      	ldr	r2, [r0, #12]
  __IO uint32_t count = 0U;
9000ea64:	2100      	movs	r1, #0
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
9000ea66:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
9000ea6a:	60c2      	str	r2, [r0, #12]
  __IO uint32_t count = 0U;
9000ea6c:	9101      	str	r1, [sp, #4]
9000ea6e:	e002      	b.n	9000ea76 <USB_CoreInit+0x96>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000ea70:	691a      	ldr	r2, [r3, #16]
9000ea72:	2a00      	cmp	r2, #0
9000ea74:	db27      	blt.n	9000eac6 <USB_CoreInit+0xe6>
    count++;
9000ea76:	9a01      	ldr	r2, [sp, #4]
9000ea78:	3201      	adds	r2, #1
9000ea7a:	9201      	str	r2, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000ea7c:	9a01      	ldr	r2, [sp, #4]
9000ea7e:	f1b2 6f70 	cmp.w	r2, #251658240	@ 0xf000000
9000ea82:	d9f5      	bls.n	9000ea70 <USB_CoreInit+0x90>
      return HAL_TIMEOUT;
9000ea84:	2003      	movs	r0, #3
    if (cfg.battery_charging_enable == 0U)
9000ea86:	f89d 2015 	ldrb.w	r2, [sp, #21]
9000ea8a:	b9ba      	cbnz	r2, 9000eabc <USB_CoreInit+0xdc>
      USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
9000ea8c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000ea8e:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000ea92:	639a      	str	r2, [r3, #56]	@ 0x38
9000ea94:	e7cf      	b.n	9000ea36 <USB_CoreInit+0x56>

  /* Core Soft Reset */
  count = 0U;
9000ea96:	2200      	movs	r2, #0
9000ea98:	9200      	str	r2, [sp, #0]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
9000ea9a:	691a      	ldr	r2, [r3, #16]
9000ea9c:	f042 0201 	orr.w	r2, r2, #1
9000eaa0:	611a      	str	r2, [r3, #16]
9000eaa2:	e003      	b.n	9000eaac <USB_CoreInit+0xcc>

    if (count > HAL_USB_TIMEOUT)
    {
      return HAL_TIMEOUT;
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
9000eaa4:	6918      	ldr	r0, [r3, #16]
9000eaa6:	f010 0001 	ands.w	r0, r0, #1
9000eaaa:	d0c4      	beq.n	9000ea36 <USB_CoreInit+0x56>
    count++;
9000eaac:	9a00      	ldr	r2, [sp, #0]
9000eaae:	3201      	adds	r2, #1
9000eab0:	9200      	str	r2, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000eab2:	9a00      	ldr	r2, [sp, #0]
9000eab4:	f1b2 6f70 	cmp.w	r2, #251658240	@ 0xf000000
9000eab8:	d9f4      	bls.n	9000eaa4 <USB_CoreInit+0xc4>
9000eaba:	e7bb      	b.n	9000ea34 <USB_CoreInit+0x54>
      USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
9000eabc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000eabe:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000eac2:	639a      	str	r2, [r3, #56]	@ 0x38
9000eac4:	e7b7      	b.n	9000ea36 <USB_CoreInit+0x56>
  count = 0U;
9000eac6:	2200      	movs	r2, #0
9000eac8:	9201      	str	r2, [sp, #4]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
9000eaca:	691a      	ldr	r2, [r3, #16]
9000eacc:	f042 0201 	orr.w	r2, r2, #1
9000ead0:	611a      	str	r2, [r3, #16]
9000ead2:	e003      	b.n	9000eadc <USB_CoreInit+0xfc>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
9000ead4:	6918      	ldr	r0, [r3, #16]
9000ead6:	f010 0001 	ands.w	r0, r0, #1
9000eada:	d0d4      	beq.n	9000ea86 <USB_CoreInit+0xa6>
    count++;
9000eadc:	9a01      	ldr	r2, [sp, #4]
9000eade:	3201      	adds	r2, #1
9000eae0:	9201      	str	r2, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000eae2:	9a01      	ldr	r2, [sp, #4]
9000eae4:	f1b2 6f70 	cmp.w	r2, #251658240	@ 0xf000000
9000eae8:	d9f4      	bls.n	9000ead4 <USB_CoreInit+0xf4>
9000eaea:	e7cb      	b.n	9000ea84 <USB_CoreInit+0xa4>
      USBx->GUSBCFG |= USB_OTG_GUSBCFG_ULPIEVBUSD;
9000eaec:	68da      	ldr	r2, [r3, #12]
9000eaee:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
9000eaf2:	60da      	str	r2, [r3, #12]
9000eaf4:	e791      	b.n	9000ea1a <USB_CoreInit+0x3a>
9000eaf6:	bf00      	nop
9000eaf8:	03ee0000 	.word	0x03ee0000

9000eafc <USB_SetTurnaroundTime>:
  if (speed == USBD_FS_SPEED)
9000eafc:	2a02      	cmp	r2, #2
{
9000eafe:	4603      	mov	r3, r0
  if (speed == USBD_FS_SPEED)
9000eb00:	d00a      	beq.n	9000eb18 <USB_SetTurnaroundTime+0x1c>
9000eb02:	f44f 5110 	mov.w	r1, #9216	@ 0x2400
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
9000eb06:	68da      	ldr	r2, [r3, #12]
}
9000eb08:	2000      	movs	r0, #0
  USBx->GUSBCFG &= ~USB_OTG_GUSBCFG_TRDT;
9000eb0a:	f422 5270 	bic.w	r2, r2, #15360	@ 0x3c00
9000eb0e:	60da      	str	r2, [r3, #12]
  USBx->GUSBCFG |= (uint32_t)((UsbTrd << 10) & USB_OTG_GUSBCFG_TRDT);
9000eb10:	68da      	ldr	r2, [r3, #12]
9000eb12:	430a      	orrs	r2, r1
9000eb14:	60da      	str	r2, [r3, #12]
}
9000eb16:	4770      	bx	lr
    if ((hclk >= 14200000U) && (hclk < 15000000U))
9000eb18:	4a23      	ldr	r2, [pc, #140]	@ (9000eba8 <USB_SetTurnaroundTime+0xac>)
9000eb1a:	4824      	ldr	r0, [pc, #144]	@ (9000ebac <USB_SetTurnaroundTime+0xb0>)
9000eb1c:	440a      	add	r2, r1
9000eb1e:	4282      	cmp	r2, r0
9000eb20:	d92c      	bls.n	9000eb7c <USB_SetTurnaroundTime+0x80>
    else if ((hclk >= 15000000U) && (hclk < 16000000U))
9000eb22:	4a23      	ldr	r2, [pc, #140]	@ (9000ebb0 <USB_SetTurnaroundTime+0xb4>)
9000eb24:	4823      	ldr	r0, [pc, #140]	@ (9000ebb4 <USB_SetTurnaroundTime+0xb8>)
9000eb26:	440a      	add	r2, r1
9000eb28:	4282      	cmp	r2, r0
9000eb2a:	d92a      	bls.n	9000eb82 <USB_SetTurnaroundTime+0x86>
    else if ((hclk >= 16000000U) && (hclk < 17200000U))
9000eb2c:	4a22      	ldr	r2, [pc, #136]	@ (9000ebb8 <USB_SetTurnaroundTime+0xbc>)
9000eb2e:	4823      	ldr	r0, [pc, #140]	@ (9000ebbc <USB_SetTurnaroundTime+0xc0>)
9000eb30:	440a      	add	r2, r1
9000eb32:	4282      	cmp	r2, r0
9000eb34:	d928      	bls.n	9000eb88 <USB_SetTurnaroundTime+0x8c>
    else if ((hclk >= 17200000U) && (hclk < 18500000U))
9000eb36:	4a22      	ldr	r2, [pc, #136]	@ (9000ebc0 <USB_SetTurnaroundTime+0xc4>)
9000eb38:	4822      	ldr	r0, [pc, #136]	@ (9000ebc4 <USB_SetTurnaroundTime+0xc8>)
9000eb3a:	440a      	add	r2, r1
9000eb3c:	4282      	cmp	r2, r0
9000eb3e:	d326      	bcc.n	9000eb8e <USB_SetTurnaroundTime+0x92>
    else if ((hclk >= 18500000U) && (hclk < 20000000U))
9000eb40:	4a21      	ldr	r2, [pc, #132]	@ (9000ebc8 <USB_SetTurnaroundTime+0xcc>)
9000eb42:	4822      	ldr	r0, [pc, #136]	@ (9000ebcc <USB_SetTurnaroundTime+0xd0>)
9000eb44:	440a      	add	r2, r1
9000eb46:	4282      	cmp	r2, r0
9000eb48:	d924      	bls.n	9000eb94 <USB_SetTurnaroundTime+0x98>
    else if ((hclk >= 20000000U) && (hclk < 21800000U))
9000eb4a:	4a21      	ldr	r2, [pc, #132]	@ (9000ebd0 <USB_SetTurnaroundTime+0xd4>)
9000eb4c:	4821      	ldr	r0, [pc, #132]	@ (9000ebd4 <USB_SetTurnaroundTime+0xd8>)
9000eb4e:	440a      	add	r2, r1
9000eb50:	4282      	cmp	r2, r0
9000eb52:	d322      	bcc.n	9000eb9a <USB_SetTurnaroundTime+0x9e>
    else if ((hclk >= 21800000U) && (hclk < 24000000U))
9000eb54:	4a20      	ldr	r2, [pc, #128]	@ (9000ebd8 <USB_SetTurnaroundTime+0xdc>)
9000eb56:	4821      	ldr	r0, [pc, #132]	@ (9000ebdc <USB_SetTurnaroundTime+0xe0>)
9000eb58:	440a      	add	r2, r1
9000eb5a:	4282      	cmp	r2, r0
9000eb5c:	d3d1      	bcc.n	9000eb02 <USB_SetTurnaroundTime+0x6>
    else if ((hclk >= 24000000U) && (hclk < 27700000U))
9000eb5e:	4a20      	ldr	r2, [pc, #128]	@ (9000ebe0 <USB_SetTurnaroundTime+0xe4>)
9000eb60:	4820      	ldr	r0, [pc, #128]	@ (9000ebe4 <USB_SetTurnaroundTime+0xe8>)
9000eb62:	440a      	add	r2, r1
9000eb64:	4282      	cmp	r2, r0
9000eb66:	d31b      	bcc.n	9000eba0 <USB_SetTurnaroundTime+0xa4>
    else if ((hclk >= 27700000U) && (hclk < 32000000U))
9000eb68:	4a1f      	ldr	r2, [pc, #124]	@ (9000ebe8 <USB_SetTurnaroundTime+0xec>)
9000eb6a:	4820      	ldr	r0, [pc, #128]	@ (9000ebec <USB_SetTurnaroundTime+0xf0>)
9000eb6c:	440a      	add	r2, r1
9000eb6e:	4282      	cmp	r2, r0
9000eb70:	bf2c      	ite	cs
9000eb72:	f44f 51c0 	movcs.w	r1, #6144	@ 0x1800
9000eb76:	f44f 51e0 	movcc.w	r1, #7168	@ 0x1c00
9000eb7a:	e7c4      	b.n	9000eb06 <USB_SetTurnaroundTime+0xa>
9000eb7c:	f44f 5170 	mov.w	r1, #15360	@ 0x3c00
9000eb80:	e7c1      	b.n	9000eb06 <USB_SetTurnaroundTime+0xa>
9000eb82:	f44f 5160 	mov.w	r1, #14336	@ 0x3800
9000eb86:	e7be      	b.n	9000eb06 <USB_SetTurnaroundTime+0xa>
9000eb88:	f44f 5150 	mov.w	r1, #13312	@ 0x3400
9000eb8c:	e7bb      	b.n	9000eb06 <USB_SetTurnaroundTime+0xa>
9000eb8e:	f44f 5140 	mov.w	r1, #12288	@ 0x3000
9000eb92:	e7b8      	b.n	9000eb06 <USB_SetTurnaroundTime+0xa>
9000eb94:	f44f 5130 	mov.w	r1, #11264	@ 0x2c00
9000eb98:	e7b5      	b.n	9000eb06 <USB_SetTurnaroundTime+0xa>
9000eb9a:	f44f 5120 	mov.w	r1, #10240	@ 0x2800
9000eb9e:	e7b2      	b.n	9000eb06 <USB_SetTurnaroundTime+0xa>
9000eba0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
9000eba4:	e7af      	b.n	9000eb06 <USB_SetTurnaroundTime+0xa>
9000eba6:	bf00      	nop
9000eba8:	ff275340 	.word	0xff275340
9000ebac:	000c34ff 	.word	0x000c34ff
9000ebb0:	ff1b1e40 	.word	0xff1b1e40
9000ebb4:	000f423f 	.word	0x000f423f
9000ebb8:	ff0bdc00 	.word	0xff0bdc00
9000ebbc:	00124f7f 	.word	0x00124f7f
9000ebc0:	fef98c80 	.word	0xfef98c80
9000ebc4:	0013d620 	.word	0x0013d620
9000ebc8:	fee5b660 	.word	0xfee5b660
9000ebcc:	0016e35f 	.word	0x0016e35f
9000ebd0:	feced300 	.word	0xfeced300
9000ebd4:	001b7740 	.word	0x001b7740
9000ebd8:	feb35bc0 	.word	0xfeb35bc0
9000ebdc:	002191c0 	.word	0x002191c0
9000ebe0:	fe91ca00 	.word	0xfe91ca00
9000ebe4:	00387520 	.word	0x00387520
9000ebe8:	fe5954e0 	.word	0xfe5954e0
9000ebec:	00419ce0 	.word	0x00419ce0

9000ebf0 <USB_EnableGlobalInt>:
{
9000ebf0:	4603      	mov	r3, r0
}
9000ebf2:	2000      	movs	r0, #0
  USBx->GAHBCFG |= USB_OTG_GAHBCFG_GINT;
9000ebf4:	689a      	ldr	r2, [r3, #8]
9000ebf6:	f042 0201 	orr.w	r2, r2, #1
9000ebfa:	609a      	str	r2, [r3, #8]
}
9000ebfc:	4770      	bx	lr
9000ebfe:	bf00      	nop

9000ec00 <USB_DisableGlobalInt>:
{
9000ec00:	4603      	mov	r3, r0
}
9000ec02:	2000      	movs	r0, #0
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
9000ec04:	689a      	ldr	r2, [r3, #8]
9000ec06:	f022 0201 	bic.w	r2, r2, #1
9000ec0a:	609a      	str	r2, [r3, #8]
}
9000ec0c:	4770      	bx	lr
9000ec0e:	bf00      	nop

9000ec10 <USB_SetCurrentMode>:
{
9000ec10:	b538      	push	{r3, r4, r5, lr}
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
9000ec12:	68c3      	ldr	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
9000ec14:	2901      	cmp	r1, #1
{
9000ec16:	4605      	mov	r5, r0
  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
9000ec18:	f023 43c0 	bic.w	r3, r3, #1610612736	@ 0x60000000
9000ec1c:	60c3      	str	r3, [r0, #12]
  if (mode == USB_HOST_MODE)
9000ec1e:	d017      	beq.n	9000ec50 <USB_SetCurrentMode+0x40>
  else if (mode == USB_DEVICE_MODE)
9000ec20:	b9a1      	cbnz	r1, 9000ec4c <USB_SetCurrentMode+0x3c>
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
9000ec22:	68c3      	ldr	r3, [r0, #12]
  uint32_t ms = 0U;
9000ec24:	460c      	mov	r4, r1
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
9000ec26:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000ec2a:	60c3      	str	r3, [r0, #12]
9000ec2c:	e001      	b.n	9000ec32 <USB_SetCurrentMode+0x22>
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
9000ec2e:	2cc8      	cmp	r4, #200	@ 0xc8
9000ec30:	d00c      	beq.n	9000ec4c <USB_SetCurrentMode+0x3c>
      HAL_Delay(10U);
9000ec32:	200a      	movs	r0, #10
      ms += 10U;
9000ec34:	4404      	add	r4, r0
      HAL_Delay(10U);
9000ec36:	f7f9 f967 	bl	90007f08 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
9000ec3a:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
9000ec3c:	07db      	lsls	r3, r3, #31
9000ec3e:	d4f6      	bmi.n	9000ec2e <USB_SetCurrentMode+0x1e>
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
9000ec40:	f1a4 00c8 	sub.w	r0, r4, #200	@ 0xc8
9000ec44:	fab0 f080 	clz	r0, r0
9000ec48:	0940      	lsrs	r0, r0, #5
}
9000ec4a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000ec4c:	2001      	movs	r0, #1
}
9000ec4e:	bd38      	pop	{r3, r4, r5, pc}
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
9000ec50:	68c3      	ldr	r3, [r0, #12]
  uint32_t ms = 0U;
9000ec52:	2400      	movs	r4, #0
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
9000ec54:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
9000ec58:	60c3      	str	r3, [r0, #12]
9000ec5a:	e001      	b.n	9000ec60 <USB_SetCurrentMode+0x50>
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
9000ec5c:	2cc8      	cmp	r4, #200	@ 0xc8
9000ec5e:	d0f5      	beq.n	9000ec4c <USB_SetCurrentMode+0x3c>
      HAL_Delay(10U);
9000ec60:	200a      	movs	r0, #10
      ms += 10U;
9000ec62:	4404      	add	r4, r0
      HAL_Delay(10U);
9000ec64:	f7f9 f950 	bl	90007f08 <HAL_Delay>
  return ((USBx->GINTSTS) & 0x1U);
9000ec68:	696b      	ldr	r3, [r5, #20]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < HAL_USB_CURRENT_MODE_MAX_DELAY_MS));
9000ec6a:	07da      	lsls	r2, r3, #31
9000ec6c:	d5f6      	bpl.n	9000ec5c <USB_SetCurrentMode+0x4c>
  if (ms == HAL_USB_CURRENT_MODE_MAX_DELAY_MS)
9000ec6e:	f1a4 00c8 	sub.w	r0, r4, #200	@ 0xc8
9000ec72:	fab0 f080 	clz	r0, r0
9000ec76:	0940      	lsrs	r0, r0, #5
9000ec78:	e7e7      	b.n	9000ec4a <USB_SetCurrentMode+0x3a>
9000ec7a:	bf00      	nop

9000ec7c <USB_DevInit>:
{
9000ec7c:	b084      	sub	sp, #16
9000ec7e:	4684      	mov	ip, r0
9000ec80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ec84:	b082      	sub	sp, #8
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
9000ec86:	f500 6e00 	add.w	lr, r0, #2048	@ 0x800
{
9000ec8a:	ac09      	add	r4, sp, #36	@ 0x24
9000ec8c:	e884 000e 	stmia.w	r4, {r1, r2, r3}
    USBx->DIEPTXF[i] = 0U;
9000ec90:	2300      	movs	r3, #0
9000ec92:	f89d 402e 	ldrb.w	r4, [sp, #46]	@ 0x2e
9000ec96:	f89d 5024 	ldrb.w	r5, [sp, #36]	@ 0x24
9000ec9a:	f8c0 3104 	str.w	r3, [r0, #260]	@ 0x104
9000ec9e:	f8c0 3108 	str.w	r3, [r0, #264]	@ 0x108
9000eca2:	f8c0 310c 	str.w	r3, [r0, #268]	@ 0x10c
9000eca6:	f8c0 3110 	str.w	r3, [r0, #272]	@ 0x110
9000ecaa:	f8c0 3114 	str.w	r3, [r0, #276]	@ 0x114
9000ecae:	f8c0 3118 	str.w	r3, [r0, #280]	@ 0x118
9000ecb2:	f8c0 311c 	str.w	r3, [r0, #284]	@ 0x11c
9000ecb6:	f8c0 3120 	str.w	r3, [r0, #288]	@ 0x120
9000ecba:	f8c0 3124 	str.w	r3, [r0, #292]	@ 0x124
9000ecbe:	f8c0 3128 	str.w	r3, [r0, #296]	@ 0x128
9000ecc2:	f8c0 312c 	str.w	r3, [r0, #300]	@ 0x12c
9000ecc6:	f8c0 3130 	str.w	r3, [r0, #304]	@ 0x130
9000ecca:	f8c0 3134 	str.w	r3, [r0, #308]	@ 0x134
9000ecce:	f8c0 3138 	str.w	r3, [r0, #312]	@ 0x138
9000ecd2:	f8c0 313c 	str.w	r3, [r0, #316]	@ 0x13c
  if (cfg.vbus_sensing_enable == 0U)
9000ecd6:	2c00      	cmp	r4, #0
9000ecd8:	f040 80bf 	bne.w	9000ee5a <USB_DevInit+0x1de>
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
9000ecdc:	f8de 3004 	ldr.w	r3, [lr, #4]
9000ece0:	f043 0302 	orr.w	r3, r3, #2
9000ece4:	f8ce 3004 	str.w	r3, [lr, #4]
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBDEN;
9000ece8:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9000ecea:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
9000ecee:	6383      	str	r3, [r0, #56]	@ 0x38
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOEN;
9000ecf0:	6803      	ldr	r3, [r0, #0]
9000ecf2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9000ecf6:	6003      	str	r3, [r0, #0]
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOVAL;
9000ecf8:	6803      	ldr	r3, [r0, #0]
9000ecfa:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000ecfe:	6003      	str	r3, [r0, #0]
  USBx_PCGCCTL = 0U;
9000ed00:	2300      	movs	r3, #0
9000ed02:	f8cc 3e00 	str.w	r3, [ip, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
9000ed06:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
9000ed0a:	2b01      	cmp	r3, #1
9000ed0c:	f000 80b1 	beq.w	9000ee72 <USB_DevInit+0x1f6>
  USBx_DEVICE->DCFG |= speed;
9000ed10:	f8dc 3800 	ldr.w	r3, [ip, #2048]	@ 0x800
9000ed14:	f043 0303 	orr.w	r3, r3, #3
9000ed18:	f8cc 3800 	str.w	r3, [ip, #2048]	@ 0x800
  __IO uint32_t count = 0U;
9000ed1c:	2300      	movs	r3, #0
9000ed1e:	9300      	str	r3, [sp, #0]
9000ed20:	e004      	b.n	9000ed2c <USB_DevInit+0xb0>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000ed22:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000ed26:	2b00      	cmp	r3, #0
9000ed28:	f2c0 80be 	blt.w	9000eea8 <USB_DevInit+0x22c>
    count++;
9000ed2c:	9b00      	ldr	r3, [sp, #0]
9000ed2e:	3301      	adds	r3, #1
9000ed30:	9300      	str	r3, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000ed32:	9b00      	ldr	r3, [sp, #0]
9000ed34:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000ed38:	d9f3      	bls.n	9000ed22 <USB_DevInit+0xa6>
9000ed3a:	2001      	movs	r0, #1
  __IO uint32_t count = 0U;
9000ed3c:	2300      	movs	r3, #0
9000ed3e:	9301      	str	r3, [sp, #4]
9000ed40:	e004      	b.n	9000ed4c <USB_DevInit+0xd0>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000ed42:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000ed46:	2b00      	cmp	r3, #0
9000ed48:	f2c0 809b 	blt.w	9000ee82 <USB_DevInit+0x206>
    count++;
9000ed4c:	9b01      	ldr	r3, [sp, #4]
9000ed4e:	3301      	adds	r3, #1
9000ed50:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000ed52:	9b01      	ldr	r3, [sp, #4]
9000ed54:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000ed58:	d9f3      	bls.n	9000ed42 <USB_DevInit+0xc6>
    ret = HAL_ERROR;
9000ed5a:	2001      	movs	r0, #1
  USBx_DEVICE->DIEPMSK = 0U;
9000ed5c:	2200      	movs	r2, #0
9000ed5e:	f8ce 2010 	str.w	r2, [lr, #16]
  USBx_DEVICE->DOEPMSK = 0U;
9000ed62:	f8ce 2014 	str.w	r2, [lr, #20]
  USBx_DEVICE->DAINTMSK = 0U;
9000ed66:	f8ce 201c 	str.w	r2, [lr, #28]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ed6a:	b305      	cbz	r5, 9000edae <USB_DevInit+0x132>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000ed6c:	f8dc 1900 	ldr.w	r1, [ip, #2304]	@ 0x900
9000ed70:	f50c 6310 	add.w	r3, ip, #2304	@ 0x900
9000ed74:	2900      	cmp	r1, #0
9000ed76:	db14      	blt.n	9000eda2 <USB_DevInit+0x126>
      USBx_INEP(i)->DIEPCTL = 0U;
9000ed78:	2600      	movs	r6, #0
9000ed7a:	4611      	mov	r1, r2
9000ed7c:	601e      	str	r6, [r3, #0]
    USBx_INEP(i)->DIEPTSIZ = 0U;
9000ed7e:	2700      	movs	r7, #0
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
9000ed80:	f64f 367f 	movw	r6, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ed84:	1c4a      	adds	r2, r1, #1
    USBx_INEP(i)->DIEPTSIZ = 0U;
9000ed86:	611f      	str	r7, [r3, #16]
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
9000ed88:	609e      	str	r6, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ed8a:	3320      	adds	r3, #32
9000ed8c:	4295      	cmp	r5, r2
9000ed8e:	d040      	beq.n	9000ee12 <USB_DevInit+0x196>
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000ed90:	6819      	ldr	r1, [r3, #0]
9000ed92:	2900      	cmp	r1, #0
9000ed94:	daf0      	bge.n	9000ed78 <USB_DevInit+0xfc>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
9000ed96:	f04f 4890 	mov.w	r8, #1207959552	@ 0x48000000
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ed9a:	4611      	mov	r1, r2
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
9000ed9c:	f8c3 8000 	str.w	r8, [r3]
9000eda0:	e7f0      	b.n	9000ed84 <USB_DevInit+0x108>
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
9000eda2:	f04f 6600 	mov.w	r6, #134217728	@ 0x8000000
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000eda6:	4611      	mov	r1, r2
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
9000eda8:	f8cc 6900 	str.w	r6, [ip, #2304]	@ 0x900
9000edac:	e7e7      	b.n	9000ed7e <USB_DevInit+0x102>
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
9000edae:	f8de 3010 	ldr.w	r3, [lr, #16]
  USBx->GINTMSK = 0U;
9000edb2:	2200      	movs	r2, #0
  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
9000edb4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000edb8:	f8ce 3010 	str.w	r3, [lr, #16]
  USBx->GINTSTS = 0xBFFFFFFFU;
9000edbc:	f06f 4380 	mvn.w	r3, #1073741824	@ 0x40000000
  USBx->GINTMSK = 0U;
9000edc0:	f8cc 2018 	str.w	r2, [ip, #24]
  USBx->GINTSTS = 0xBFFFFFFFU;
9000edc4:	f8cc 3014 	str.w	r3, [ip, #20]
  if (cfg.dma_enable == 0U)
9000edc8:	f89d 3026 	ldrb.w	r3, [sp, #38]	@ 0x26
9000edcc:	b92b      	cbnz	r3, 9000edda <USB_DevInit+0x15e>
    USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
9000edce:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000edd2:	f043 0310 	orr.w	r3, r3, #16
9000edd6:	f8cc 3018 	str.w	r3, [ip, #24]
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
9000edda:	f8dc 2018 	ldr.w	r2, [ip, #24]
9000edde:	4b40      	ldr	r3, [pc, #256]	@ (9000eee0 <USB_DevInit+0x264>)
9000ede0:	4313      	orrs	r3, r2
  if (cfg.Sof_enable != 0U)
9000ede2:	f89d 202a 	ldrb.w	r2, [sp, #42]	@ 0x2a
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
9000ede6:	f8cc 3018 	str.w	r3, [ip, #24]
  if (cfg.Sof_enable != 0U)
9000edea:	b12a      	cbz	r2, 9000edf8 <USB_DevInit+0x17c>
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
9000edec:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000edf0:	f043 0308 	orr.w	r3, r3, #8
9000edf4:	f8cc 3018 	str.w	r3, [ip, #24]
  if (cfg.vbus_sensing_enable == 1U)
9000edf8:	2c01      	cmp	r4, #1
9000edfa:	d105      	bne.n	9000ee08 <USB_DevInit+0x18c>
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
9000edfc:	f8dc 2018 	ldr.w	r2, [ip, #24]
9000ee00:	4b38      	ldr	r3, [pc, #224]	@ (9000eee4 <USB_DevInit+0x268>)
9000ee02:	4313      	orrs	r3, r2
9000ee04:	f8cc 3018 	str.w	r3, [ip, #24]
}
9000ee08:	b002      	add	sp, #8
9000ee0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9000ee0e:	b004      	add	sp, #16
9000ee10:	4770      	bx	lr
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000ee12:	f8dc 2b00 	ldr.w	r2, [ip, #2816]	@ 0xb00
9000ee16:	f50c 6330 	add.w	r3, ip, #2816	@ 0xb00
9000ee1a:	2a00      	cmp	r2, #0
9000ee1c:	db17      	blt.n	9000ee4e <USB_DevInit+0x1d2>
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee1e:	2500      	movs	r5, #0
      USBx_OUTEP(i)->DOEPCTL = 0U;
9000ee20:	2600      	movs	r6, #0
9000ee22:	462a      	mov	r2, r5
9000ee24:	601e      	str	r6, [r3, #0]
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
9000ee26:	2700      	movs	r7, #0
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
9000ee28:	f64f 367f 	movw	r6, #64383	@ 0xfb7f
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee2c:	4291      	cmp	r1, r2
    USBx_OUTEP(i)->DOEPTSIZ = 0U;
9000ee2e:	611f      	str	r7, [r3, #16]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee30:	f102 0501 	add.w	r5, r2, #1
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
9000ee34:	609e      	str	r6, [r3, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee36:	f103 0320 	add.w	r3, r3, #32
9000ee3a:	d0b8      	beq.n	9000edae <USB_DevInit+0x132>
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000ee3c:	681a      	ldr	r2, [r3, #0]
9000ee3e:	2a00      	cmp	r2, #0
9000ee40:	daee      	bge.n	9000ee20 <USB_DevInit+0x1a4>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
9000ee42:	f04f 4890 	mov.w	r8, #1207959552	@ 0x48000000
9000ee46:	462a      	mov	r2, r5
9000ee48:	f8c3 8000 	str.w	r8, [r3]
9000ee4c:	e7ee      	b.n	9000ee2c <USB_DevInit+0x1b0>
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
9000ee4e:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
9000ee52:	f8cc 2b00 	str.w	r2, [ip, #2816]	@ 0xb00
  for (i = 0U; i < cfg.dev_endpoints; i++)
9000ee56:	2200      	movs	r2, #0
9000ee58:	e7e5      	b.n	9000ee26 <USB_DevInit+0x1aa>
    USBx->GCCFG |= USB_OTG_GCCFG_VBDEN;
9000ee5a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9000ee5c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
9000ee60:	6383      	str	r3, [r0, #56]	@ 0x38
  USBx_PCGCCTL = 0U;
9000ee62:	2300      	movs	r3, #0
9000ee64:	f8cc 3e00 	str.w	r3, [ip, #3584]	@ 0xe00
  if (cfg.phy_itface == USB_OTG_ULPI_PHY)
9000ee68:	f89d 3029 	ldrb.w	r3, [sp, #41]	@ 0x29
9000ee6c:	2b01      	cmp	r3, #1
9000ee6e:	f47f af4f 	bne.w	9000ed10 <USB_DevInit+0x94>
    if (cfg.speed == USBD_HS_SPEED)
9000ee72:	f89d 3027 	ldrb.w	r3, [sp, #39]	@ 0x27
9000ee76:	bb63      	cbnz	r3, 9000eed2 <USB_DevInit+0x256>
  USBx_DEVICE->DCFG |= speed;
9000ee78:	f8dc 3800 	ldr.w	r3, [ip, #2048]	@ 0x800
9000ee7c:	f8cc 3800 	str.w	r3, [ip, #2048]	@ 0x800
  return HAL_OK;
9000ee80:	e74c      	b.n	9000ed1c <USB_DevInit+0xa0>
  count = 0U;
9000ee82:	2300      	movs	r3, #0
9000ee84:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
9000ee86:	2310      	movs	r3, #16
9000ee88:	f8cc 3010 	str.w	r3, [ip, #16]
9000ee8c:	e004      	b.n	9000ee98 <USB_DevInit+0x21c>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
9000ee8e:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000ee92:	06db      	lsls	r3, r3, #27
9000ee94:	f57f af62 	bpl.w	9000ed5c <USB_DevInit+0xe0>
    count++;
9000ee98:	9b01      	ldr	r3, [sp, #4]
9000ee9a:	3301      	adds	r3, #1
9000ee9c:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000ee9e:	9b01      	ldr	r3, [sp, #4]
9000eea0:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000eea4:	d9f3      	bls.n	9000ee8e <USB_DevInit+0x212>
9000eea6:	e758      	b.n	9000ed5a <USB_DevInit+0xde>
  count = 0U;
9000eea8:	2300      	movs	r3, #0
9000eeaa:	9300      	str	r3, [sp, #0]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000eeac:	f44f 6384 	mov.w	r3, #1056	@ 0x420
9000eeb0:	f8cc 3010 	str.w	r3, [ip, #16]
9000eeb4:	e005      	b.n	9000eec2 <USB_DevInit+0x246>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
9000eeb6:	f8dc 0010 	ldr.w	r0, [ip, #16]
9000eeba:	f010 0020 	ands.w	r0, r0, #32
9000eebe:	f43f af3d 	beq.w	9000ed3c <USB_DevInit+0xc0>
    count++;
9000eec2:	9b00      	ldr	r3, [sp, #0]
9000eec4:	3301      	adds	r3, #1
9000eec6:	9300      	str	r3, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000eec8:	9b00      	ldr	r3, [sp, #0]
9000eeca:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000eece:	d9f2      	bls.n	9000eeb6 <USB_DevInit+0x23a>
9000eed0:	e733      	b.n	9000ed3a <USB_DevInit+0xbe>
  USBx_DEVICE->DCFG |= speed;
9000eed2:	f8dc 3800 	ldr.w	r3, [ip, #2048]	@ 0x800
9000eed6:	f043 0301 	orr.w	r3, r3, #1
9000eeda:	f8cc 3800 	str.w	r3, [ip, #2048]	@ 0x800
  return HAL_OK;
9000eede:	e71d      	b.n	9000ed1c <USB_DevInit+0xa0>
9000eee0:	803c3800 	.word	0x803c3800
9000eee4:	40000004 	.word	0x40000004

9000eee8 <USB_FlushTxFifo>:
{
9000eee8:	b082      	sub	sp, #8
  __IO uint32_t count = 0U;
9000eeea:	2300      	movs	r3, #0
9000eeec:	9301      	str	r3, [sp, #4]
9000eeee:	e002      	b.n	9000eef6 <USB_FlushTxFifo+0xe>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000eef0:	6903      	ldr	r3, [r0, #16]
9000eef2:	2b00      	cmp	r3, #0
9000eef4:	db09      	blt.n	9000ef0a <USB_FlushTxFifo+0x22>
    count++;
9000eef6:	9b01      	ldr	r3, [sp, #4]
9000eef8:	3301      	adds	r3, #1
9000eefa:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000eefc:	9b01      	ldr	r3, [sp, #4]
9000eefe:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000ef02:	d9f5      	bls.n	9000eef0 <USB_FlushTxFifo+0x8>
      return HAL_TIMEOUT;
9000ef04:	2003      	movs	r0, #3
}
9000ef06:	b002      	add	sp, #8
9000ef08:	4770      	bx	lr
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000ef0a:	0189      	lsls	r1, r1, #6
  count = 0U;
9000ef0c:	2300      	movs	r3, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000ef0e:	f041 0120 	orr.w	r1, r1, #32
  count = 0U;
9000ef12:	9301      	str	r3, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000ef14:	6101      	str	r1, [r0, #16]
9000ef16:	e003      	b.n	9000ef20 <USB_FlushTxFifo+0x38>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
9000ef18:	6903      	ldr	r3, [r0, #16]
9000ef1a:	f013 0320 	ands.w	r3, r3, #32
9000ef1e:	d007      	beq.n	9000ef30 <USB_FlushTxFifo+0x48>
    count++;
9000ef20:	9b01      	ldr	r3, [sp, #4]
9000ef22:	3301      	adds	r3, #1
9000ef24:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000ef26:	9b01      	ldr	r3, [sp, #4]
9000ef28:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000ef2c:	d9f4      	bls.n	9000ef18 <USB_FlushTxFifo+0x30>
9000ef2e:	e7e9      	b.n	9000ef04 <USB_FlushTxFifo+0x1c>
  return HAL_OK;
9000ef30:	4618      	mov	r0, r3
}
9000ef32:	b002      	add	sp, #8
9000ef34:	4770      	bx	lr
9000ef36:	bf00      	nop

9000ef38 <USB_GetDevSpeed>:
  uint32_t DevEnumSpeed = USBx_DEVICE->DSTS & USB_OTG_DSTS_ENUMSPD;
9000ef38:	f8d0 3808 	ldr.w	r3, [r0, #2056]	@ 0x808
  if (DevEnumSpeed == DSTS_ENUMSPD_HS_PHY_30MHZ_OR_60MHZ)
9000ef3c:	f013 0006 	ands.w	r0, r3, #6
9000ef40:	d004      	beq.n	9000ef4c <USB_GetDevSpeed+0x14>
    speed = USBD_FS_SPEED;
9000ef42:	f013 0f02 	tst.w	r3, #2
9000ef46:	bf0c      	ite	eq
9000ef48:	200f      	moveq	r0, #15
9000ef4a:	2002      	movne	r0, #2
}
9000ef4c:	4770      	bx	lr
9000ef4e:	bf00      	nop

9000ef50 <USB_ActivateEndpoint>:
{
9000ef50:	b530      	push	{r4, r5, lr}
  uint32_t epnum = (uint32_t)ep->num;
9000ef52:	780a      	ldrb	r2, [r1, #0]
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
9000ef54:	2301      	movs	r3, #1
9000ef56:	f500 6c00 	add.w	ip, r0, #2048	@ 0x800
9000ef5a:	f002 0e0f 	and.w	lr, r2, #15
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
9000ef5e:	eb00 1042 	add.w	r0, r0, r2, lsl #5
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
9000ef62:	fa03 f30e 	lsl.w	r3, r3, lr
  if (ep->is_in == 1U)
9000ef66:	f891 e001 	ldrb.w	lr, [r1, #1]
9000ef6a:	f1be 0f01 	cmp.w	lr, #1
9000ef6e:	d018      	beq.n	9000efa2 <USB_ActivateEndpoint+0x52>
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16);
9000ef70:	f8dc 201c 	ldr.w	r2, [ip, #28]
9000ef74:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
9000ef78:	f8cc 301c 	str.w	r3, [ip, #28]
    if (((USBx_OUTEP(epnum)->DOEPCTL) & USB_OTG_DOEPCTL_USBAEP) == 0U)
9000ef7c:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000ef80:	041b      	lsls	r3, r3, #16
9000ef82:	d40c      	bmi.n	9000ef9e <USB_ActivateEndpoint+0x4e>
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
9000ef84:	688b      	ldr	r3, [r1, #8]
9000ef86:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
9000ef8a:	f3c3 030a 	ubfx	r3, r3, #0, #11
                                    ((uint32_t)ep->type << 18) |
9000ef8e:	7909      	ldrb	r1, [r1, #4]
      USBx_OUTEP(epnum)->DOEPCTL |= (ep->maxpacket & USB_OTG_DOEPCTL_MPSIZ) |
9000ef90:	4a11      	ldr	r2, [pc, #68]	@ (9000efd8 <USB_ActivateEndpoint+0x88>)
9000ef92:	4323      	orrs	r3, r4
9000ef94:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
9000ef98:	431a      	orrs	r2, r3
9000ef9a:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
}
9000ef9e:	2000      	movs	r0, #0
9000efa0:	bd30      	pop	{r4, r5, pc}
    USBx_DEVICE->DAINTMSK |= USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK));
9000efa2:	f8dc 401c 	ldr.w	r4, [ip, #28]
9000efa6:	4323      	orrs	r3, r4
9000efa8:	f8cc 301c 	str.w	r3, [ip, #28]
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_USBAEP) == 0U)
9000efac:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000efb0:	041c      	lsls	r4, r3, #16
9000efb2:	d4f4      	bmi.n	9000ef9e <USB_ActivateEndpoint+0x4e>
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
9000efb4:	688b      	ldr	r3, [r1, #8]
9000efb6:	f8d0 5900 	ldr.w	r5, [r0, #2304]	@ 0x900
9000efba:	f3c3 030a 	ubfx	r3, r3, #0, #11
                                   ((uint32_t)ep->type << 18) | (epnum << 22) |
9000efbe:	790c      	ldrb	r4, [r1, #4]
      USBx_INEP(epnum)->DIEPCTL |= (ep->maxpacket & USB_OTG_DIEPCTL_MPSIZ) |
9000efc0:	4905      	ldr	r1, [pc, #20]	@ (9000efd8 <USB_ActivateEndpoint+0x88>)
9000efc2:	432b      	orrs	r3, r5
9000efc4:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
9000efc8:	ea43 5382 	orr.w	r3, r3, r2, lsl #22
9000efcc:	4319      	orrs	r1, r3
9000efce:	f8c0 1900 	str.w	r1, [r0, #2304]	@ 0x900
}
9000efd2:	2000      	movs	r0, #0
9000efd4:	bd30      	pop	{r4, r5, pc}
9000efd6:	bf00      	nop
9000efd8:	10008000 	.word	0x10008000

9000efdc <USB_DeactivateEndpoint>:
  if (ep->is_in == 1U)
9000efdc:	784a      	ldrb	r2, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
9000efde:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
9000efe0:	2a01      	cmp	r2, #1
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000efe2:	eb00 1c43 	add.w	ip, r0, r3, lsl #5
  if (ep->is_in == 1U)
9000efe6:	d02a      	beq.n	9000f03e <USB_DeactivateEndpoint+0x62>
    if ((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000efe8:	f8dc 2b00 	ldr.w	r2, [ip, #2816]	@ 0xb00
9000efec:	2a00      	cmp	r2, #0
9000efee:	db19      	blt.n	9000f024 <USB_DeactivateEndpoint+0x48>
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
9000eff0:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
9000eff4:	f003 030f 	and.w	r3, r3, #15
9000eff8:	f8d0 183c 	ldr.w	r1, [r0, #2108]	@ 0x83c
9000effc:	fa02 f303 	lsl.w	r3, r2, r3
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
9000f000:	4a23      	ldr	r2, [pc, #140]	@ (9000f090 <USB_DeactivateEndpoint+0xb4>)
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
9000f002:	ea21 0103 	bic.w	r1, r1, r3
9000f006:	f8c0 183c 	str.w	r1, [r0, #2108]	@ 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_OEPM & ((uint32_t)(1UL << (ep->num & EP_ADDR_MSK)) << 16));
9000f00a:	f8d0 181c 	ldr.w	r1, [r0, #2076]	@ 0x81c
9000f00e:	ea21 0303 	bic.w	r3, r1, r3
9000f012:	f8c0 381c 	str.w	r3, [r0, #2076]	@ 0x81c
}
9000f016:	2000      	movs	r0, #0
    USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_USBAEP |
9000f018:	f8dc 3b00 	ldr.w	r3, [ip, #2816]	@ 0xb00
9000f01c:	401a      	ands	r2, r3
9000f01e:	f8cc 2b00 	str.w	r2, [ip, #2816]	@ 0xb00
}
9000f022:	4770      	bx	lr
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SNAK;
9000f024:	f8dc 2b00 	ldr.w	r2, [ip, #2816]	@ 0xb00
9000f028:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
9000f02c:	f8cc 2b00 	str.w	r2, [ip, #2816]	@ 0xb00
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_EPDIS;
9000f030:	f8dc 2b00 	ldr.w	r2, [ip, #2816]	@ 0xb00
9000f034:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
9000f038:	f8cc 2b00 	str.w	r2, [ip, #2816]	@ 0xb00
9000f03c:	e7d8      	b.n	9000eff0 <USB_DeactivateEndpoint+0x14>
    if ((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000f03e:	f8dc 2900 	ldr.w	r2, [ip, #2304]	@ 0x900
9000f042:	2a00      	cmp	r2, #0
9000f044:	da0b      	bge.n	9000f05e <USB_DeactivateEndpoint+0x82>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SNAK;
9000f046:	f8dc 2900 	ldr.w	r2, [ip, #2304]	@ 0x900
9000f04a:	f042 6200 	orr.w	r2, r2, #134217728	@ 0x8000000
9000f04e:	f8cc 2900 	str.w	r2, [ip, #2304]	@ 0x900
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_EPDIS;
9000f052:	f8dc 2900 	ldr.w	r2, [ip, #2304]	@ 0x900
9000f056:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
9000f05a:	f8cc 2900 	str.w	r2, [ip, #2304]	@ 0x900
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
9000f05e:	f003 020f 	and.w	r2, r3, #15
9000f062:	2301      	movs	r3, #1
9000f064:	f8d0 183c 	ldr.w	r1, [r0, #2108]	@ 0x83c
9000f068:	4093      	lsls	r3, r2
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
9000f06a:	4a0a      	ldr	r2, [pc, #40]	@ (9000f094 <USB_DeactivateEndpoint+0xb8>)
    USBx_DEVICE->DEACHMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
9000f06c:	ea21 0103 	bic.w	r1, r1, r3
9000f070:	f8c0 183c 	str.w	r1, [r0, #2108]	@ 0x83c
    USBx_DEVICE->DAINTMSK &= ~(USB_OTG_DAINTMSK_IEPM & (uint32_t)(1UL << (ep->num & EP_ADDR_MSK)));
9000f074:	f8d0 181c 	ldr.w	r1, [r0, #2076]	@ 0x81c
9000f078:	ea21 0303 	bic.w	r3, r1, r3
9000f07c:	f8c0 381c 	str.w	r3, [r0, #2076]	@ 0x81c
}
9000f080:	2000      	movs	r0, #0
    USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_USBAEP |
9000f082:	f8dc 3900 	ldr.w	r3, [ip, #2304]	@ 0x900
9000f086:	401a      	ands	r2, r3
9000f088:	f8cc 2900 	str.w	r2, [ip, #2304]	@ 0x900
}
9000f08c:	4770      	bx	lr
9000f08e:	bf00      	nop
9000f090:	eff37800 	.word	0xeff37800
9000f094:	ec337800 	.word	0xec337800

9000f098 <USB_EPStartXfer>:
{
9000f098:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (ep->is_in == 1U)
9000f09a:	784c      	ldrb	r4, [r1, #1]
  uint32_t epnum = (uint32_t)ep->num;
9000f09c:	780e      	ldrb	r6, [r1, #0]
  if (ep->is_in == 1U)
9000f09e:	2c01      	cmp	r4, #1
    if (ep->xfer_len == 0U)
9000f0a0:	690d      	ldr	r5, [r1, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f0a2:	eb00 1346 	add.w	r3, r0, r6, lsl #5
      if (ep->type == EP_TYPE_ISOC)
9000f0a6:	f891 e004 	ldrb.w	lr, [r1, #4]
  if (ep->is_in == 1U)
9000f0aa:	d05e      	beq.n	9000f16a <USB_EPStartXfer+0xd2>
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_XFRSIZ);
9000f0ac:	f8d3 7b10 	ldr.w	r7, [r3, #2832]	@ 0xb10
9000f0b0:	f503 6c30 	add.w	ip, r3, #2816	@ 0xb00
9000f0b4:	4c88      	ldr	r4, [pc, #544]	@ (9000f2d8 <USB_EPStartXfer+0x240>)
9000f0b6:	403c      	ands	r4, r7
9000f0b8:	f8c3 4b10 	str.w	r4, [r3, #2832]	@ 0xb10
    USBx_OUTEP(epnum)->DOEPTSIZ &= ~(USB_OTG_DOEPTSIZ_PKTCNT);
9000f0bc:	4c87      	ldr	r4, [pc, #540]	@ (9000f2dc <USB_EPStartXfer+0x244>)
9000f0be:	f8d3 7b10 	ldr.w	r7, [r3, #2832]	@ 0xb10
9000f0c2:	403c      	ands	r4, r7
9000f0c4:	f8c3 4b10 	str.w	r4, [r3, #2832]	@ 0xb10
        ep->xfer_len = ep->maxpacket;
9000f0c8:	688c      	ldr	r4, [r1, #8]
    if (epnum == 0U)
9000f0ca:	bb56      	cbnz	r6, 9000f122 <USB_EPStartXfer+0x8a>
      if (ep->xfer_len > 0U)
9000f0cc:	b105      	cbz	r5, 9000f0d0 <USB_EPStartXfer+0x38>
        ep->xfer_len = ep->maxpacket;
9000f0ce:	610c      	str	r4, [r1, #16]
      ep->xfer_size = ep->maxpacket;
9000f0d0:	620c      	str	r4, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
9000f0d2:	f8dc 5010 	ldr.w	r5, [ip, #16]
9000f0d6:	f3c4 0412 	ubfx	r4, r4, #0, #19
    if (dma == 1U)
9000f0da:	2a01      	cmp	r2, #1
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_XFRSIZ & ep->maxpacket);
9000f0dc:	ea44 0405 	orr.w	r4, r4, r5
9000f0e0:	f8cc 4010 	str.w	r4, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
9000f0e4:	f8dc 4010 	ldr.w	r4, [ip, #16]
9000f0e8:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
9000f0ec:	f8cc 4010 	str.w	r4, [ip, #16]
    if (dma == 1U)
9000f0f0:	d035      	beq.n	9000f15e <USB_EPStartXfer+0xc6>
    if (ep->type == EP_TYPE_ISOC)
9000f0f2:	f1be 0f01 	cmp.w	lr, #1
9000f0f6:	d10c      	bne.n	9000f112 <USB_EPStartXfer+0x7a>
      if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
9000f0f8:	f8d0 2808 	ldr.w	r2, [r0, #2056]	@ 0x808
9000f0fc:	f412 7f80 	tst.w	r2, #256	@ 0x100
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SODDFRM;
9000f100:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	@ 0xb00
9000f104:	bf0c      	ite	eq
9000f106:	f042 5200 	orreq.w	r2, r2, #536870912	@ 0x20000000
        USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM;
9000f10a:	f042 5280 	orrne.w	r2, r2, #268435456	@ 0x10000000
9000f10e:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
    USBx_OUTEP(epnum)->DOEPCTL |= (USB_OTG_DOEPCTL_CNAK | USB_OTG_DOEPCTL_EPENA);
9000f112:	f8d3 2b00 	ldr.w	r2, [r3, #2816]	@ 0xb00
9000f116:	f042 4204 	orr.w	r2, r2, #2214592512	@ 0x84000000
9000f11a:	f8c3 2b00 	str.w	r2, [r3, #2816]	@ 0xb00
}
9000f11e:	2000      	movs	r0, #0
9000f120:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (ep->xfer_len == 0U)
9000f122:	2d00      	cmp	r5, #0
9000f124:	d0d5      	beq.n	9000f0d2 <USB_EPStartXfer+0x3a>
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
9000f126:	4425      	add	r5, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
9000f128:	4e6d      	ldr	r6, [pc, #436]	@ (9000f2e0 <USB_EPStartXfer+0x248>)
    if (dma == 1U)
9000f12a:	2a01      	cmp	r2, #1
        pktcnt = (uint16_t)((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket);
9000f12c:	f105 35ff 	add.w	r5, r5, #4294967295
9000f130:	fbb5 f5f4 	udiv	r5, r5, r4
9000f134:	b2ad      	uxth	r5, r5
        ep->xfer_size = ep->maxpacket * pktcnt;
9000f136:	fb05 f404 	mul.w	r4, r5, r4
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
9000f13a:	ea06 45c5 	and.w	r5, r6, r5, lsl #19
9000f13e:	f8dc 6010 	ldr.w	r6, [ip, #16]
        ep->xfer_size = ep->maxpacket * pktcnt;
9000f142:	620c      	str	r4, [r1, #32]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
9000f144:	f3c4 0412 	ubfx	r4, r4, #0, #19
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_PKTCNT & ((uint32_t)pktcnt << 19);
9000f148:	ea45 0506 	orr.w	r5, r5, r6
9000f14c:	f8cc 5010 	str.w	r5, [ip, #16]
        USBx_OUTEP(epnum)->DOEPTSIZ |= USB_OTG_DOEPTSIZ_XFRSIZ & ep->xfer_size;
9000f150:	f8dc 5010 	ldr.w	r5, [ip, #16]
9000f154:	ea44 0405 	orr.w	r4, r4, r5
9000f158:	f8cc 4010 	str.w	r4, [ip, #16]
    if (dma == 1U)
9000f15c:	d1c9      	bne.n	9000f0f2 <USB_EPStartXfer+0x5a>
      if ((uint32_t)ep->xfer_buff != 0U)
9000f15e:	68ca      	ldr	r2, [r1, #12]
9000f160:	2a00      	cmp	r2, #0
9000f162:	d0c6      	beq.n	9000f0f2 <USB_EPStartXfer+0x5a>
        USBx_OUTEP(epnum)->DOEPDMA = (uint32_t)(ep->xfer_buff);
9000f164:	f8cc 2014 	str.w	r2, [ip, #20]
9000f168:	e7c3      	b.n	9000f0f2 <USB_EPStartXfer+0x5a>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f16a:	f503 6410 	add.w	r4, r3, #2304	@ 0x900
9000f16e:	f8d4 c010 	ldr.w	ip, [r4, #16]
    if (ep->xfer_len == 0U)
9000f172:	2d00      	cmp	r5, #0
9000f174:	d138      	bne.n	9000f1e8 <USB_EPStartXfer+0x150>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f176:	4f59      	ldr	r7, [pc, #356]	@ (9000f2dc <USB_EPStartXfer+0x244>)
    if (dma == 1U)
9000f178:	2a01      	cmp	r2, #1
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f17a:	ea0c 0707 	and.w	r7, ip, r7
9000f17e:	6127      	str	r7, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
9000f180:	6927      	ldr	r7, [r4, #16]
9000f182:	f447 2700 	orr.w	r7, r7, #524288	@ 0x80000
9000f186:	6127      	str	r7, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
9000f188:	4f53      	ldr	r7, [pc, #332]	@ (9000f2d8 <USB_EPStartXfer+0x240>)
9000f18a:	f8d4 c010 	ldr.w	ip, [r4, #16]
9000f18e:	ea0c 0707 	and.w	r7, ip, r7
9000f192:	6127      	str	r7, [r4, #16]
    if (dma == 1U)
9000f194:	d068      	beq.n	9000f268 <USB_EPStartXfer+0x1d0>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f196:	f8d3 4900 	ldr.w	r4, [r3, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
9000f19a:	f1be 0f01 	cmp.w	lr, #1
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f19e:	f044 4404 	orr.w	r4, r4, #2214592512	@ 0x84000000
9000f1a2:	f8c3 4900 	str.w	r4, [r3, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
9000f1a6:	d1ba      	bne.n	9000f11e <USB_EPStartXfer+0x86>
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
9000f1a8:	f8d0 4808 	ldr.w	r4, [r0, #2056]	@ 0x808
9000f1ac:	f414 7f80 	tst.w	r4, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
9000f1b0:	f8d3 4900 	ldr.w	r4, [r3, #2304]	@ 0x900
9000f1b4:	bf0c      	ite	eq
9000f1b6:	f044 5400 	orreq.w	r4, r4, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
9000f1ba:	f044 5480 	orrne.w	r4, r4, #268435456	@ 0x10000000
9000f1be:	f8c3 4900 	str.w	r4, [r3, #2304]	@ 0x900
  if (dma == 0U)
9000f1c2:	2a00      	cmp	r2, #0
9000f1c4:	d1ab      	bne.n	9000f11e <USB_EPStartXfer+0x86>
    count32b = ((uint32_t)len + 3U) / 4U;
9000f1c6:	b2ad      	uxth	r5, r5
9000f1c8:	3503      	adds	r5, #3
    for (i = 0U; i < count32b; i++)
9000f1ca:	08ad      	lsrs	r5, r5, #2
9000f1cc:	d0a7      	beq.n	9000f11e <USB_EPStartXfer+0x86>
        (void)USB_WritePacket(USBx, ep->xfer_buff, ep->num, (uint16_t)ep->xfer_len, dma);
9000f1ce:	68cb      	ldr	r3, [r1, #12]
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
9000f1d0:	eb00 3606 	add.w	r6, r0, r6, lsl #12
9000f1d4:	eb03 0185 	add.w	r1, r3, r5, lsl #2
9000f1d8:	f506 5680 	add.w	r6, r6, #4096	@ 0x1000
9000f1dc:	f853 2b04 	ldr.w	r2, [r3], #4
    for (i = 0U; i < count32b; i++)
9000f1e0:	4299      	cmp	r1, r3
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
9000f1e2:	6032      	str	r2, [r6, #0]
    for (i = 0U; i < count32b; i++)
9000f1e4:	d1fa      	bne.n	9000f1dc <USB_EPStartXfer+0x144>
9000f1e6:	e79a      	b.n	9000f11e <USB_EPStartXfer+0x86>
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_XFRSIZ);
9000f1e8:	4f3b      	ldr	r7, [pc, #236]	@ (9000f2d8 <USB_EPStartXfer+0x240>)
9000f1ea:	ea0c 0707 	and.w	r7, ip, r7
9000f1ee:	6127      	str	r7, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_PKTCNT);
9000f1f0:	4f3a      	ldr	r7, [pc, #232]	@ (9000f2dc <USB_EPStartXfer+0x244>)
9000f1f2:	f8d4 c010 	ldr.w	ip, [r4, #16]
9000f1f6:	ea0c 0707 	and.w	r7, ip, r7
9000f1fa:	6127      	str	r7, [r4, #16]
        if (ep->xfer_len > ep->maxpacket)
9000f1fc:	688f      	ldr	r7, [r1, #8]
      if (epnum == 0U)
9000f1fe:	bb26      	cbnz	r6, 9000f24a <USB_EPStartXfer+0x1b2>
        if (ep->xfer_len > ep->maxpacket)
9000f200:	42bd      	cmp	r5, r7
9000f202:	d850      	bhi.n	9000f2a6 <USB_EPStartXfer+0x20e>
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT & (1U << 19));
9000f204:	6927      	ldr	r7, [r4, #16]
9000f206:	f447 2700 	orr.w	r7, r7, #524288	@ 0x80000
9000f20a:	6127      	str	r7, [r4, #16]
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
9000f20c:	f8d4 c010 	ldr.w	ip, [r4, #16]
9000f210:	f3c5 0712 	ubfx	r7, r5, #0, #19
      if (ep->type == EP_TYPE_ISOC)
9000f214:	f1be 0f01 	cmp.w	lr, #1
      USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_XFRSIZ & ep->xfer_len);
9000f218:	ea47 070c 	orr.w	r7, r7, ip
9000f21c:	6127      	str	r7, [r4, #16]
      if (ep->type == EP_TYPE_ISOC)
9000f21e:	d031      	beq.n	9000f284 <USB_EPStartXfer+0x1ec>
    if (dma == 1U)
9000f220:	2a01      	cmp	r2, #1
9000f222:	d054      	beq.n	9000f2ce <USB_EPStartXfer+0x236>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f224:	f8d3 2900 	ldr.w	r2, [r3, #2304]	@ 0x900
9000f228:	f042 4204 	orr.w	r2, r2, #2214592512	@ 0x84000000
9000f22c:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
        if (ep->xfer_len > 0U)
9000f230:	2d00      	cmp	r5, #0
9000f232:	f43f af74 	beq.w	9000f11e <USB_EPStartXfer+0x86>
          USBx_DEVICE->DIEPEMPMSK |= 1UL << (ep->num & EP_ADDR_MSK);
9000f236:	f006 060f 	and.w	r6, r6, #15
9000f23a:	2301      	movs	r3, #1
9000f23c:	f8d0 2834 	ldr.w	r2, [r0, #2100]	@ 0x834
9000f240:	40b3      	lsls	r3, r6
9000f242:	4313      	orrs	r3, r2
9000f244:	f8c0 3834 	str.w	r3, [r0, #2100]	@ 0x834
9000f248:	e769      	b.n	9000f11e <USB_EPStartXfer+0x86>
                                       (((ep->xfer_len + ep->maxpacket - 1U) / ep->maxpacket) << 19));
9000f24a:	eb05 0c07 	add.w	ip, r5, r7
9000f24e:	f10c 3cff 	add.w	ip, ip, #4294967295
9000f252:	fbbc fcf7 	udiv	ip, ip, r7
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_PKTCNT &
9000f256:	4f22      	ldr	r7, [pc, #136]	@ (9000f2e0 <USB_EPStartXfer+0x248>)
9000f258:	ea07 47cc 	and.w	r7, r7, ip, lsl #19
9000f25c:	f8d4 c010 	ldr.w	ip, [r4, #16]
9000f260:	ea47 070c 	orr.w	r7, r7, ip
9000f264:	6127      	str	r7, [r4, #16]
9000f266:	e7d1      	b.n	9000f20c <USB_EPStartXfer+0x174>
      if ((uint32_t)ep->dma_addr != 0U)
9000f268:	69ca      	ldr	r2, [r1, #28]
9000f26a:	b102      	cbz	r2, 9000f26e <USB_EPStartXfer+0x1d6>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
9000f26c:	6162      	str	r2, [r4, #20]
      if (ep->type == EP_TYPE_ISOC)
9000f26e:	f1be 0f01 	cmp.w	lr, #1
9000f272:	d01e      	beq.n	9000f2b2 <USB_EPStartXfer+0x21a>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f274:	f8d3 2900 	ldr.w	r2, [r3, #2304]	@ 0x900
}
9000f278:	2000      	movs	r0, #0
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f27a:	f042 4204 	orr.w	r2, r2, #2214592512	@ 0x84000000
9000f27e:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
}
9000f282:	bdf0      	pop	{r4, r5, r6, r7, pc}
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
9000f284:	6927      	ldr	r7, [r4, #16]
    if (dma == 1U)
9000f286:	2a01      	cmp	r2, #1
        USBx_INEP(epnum)->DIEPTSIZ &= ~(USB_OTG_DIEPTSIZ_MULCNT);
9000f288:	f027 47c0 	bic.w	r7, r7, #1610612736	@ 0x60000000
9000f28c:	6127      	str	r7, [r4, #16]
        USBx_INEP(epnum)->DIEPTSIZ |= (USB_OTG_DIEPTSIZ_MULCNT & (1U << 29));
9000f28e:	6927      	ldr	r7, [r4, #16]
9000f290:	f047 5700 	orr.w	r7, r7, #536870912	@ 0x20000000
9000f294:	6127      	str	r7, [r4, #16]
    if (dma == 1U)
9000f296:	d009      	beq.n	9000f2ac <USB_EPStartXfer+0x214>
      USBx_INEP(epnum)->DIEPCTL |= (USB_OTG_DIEPCTL_CNAK | USB_OTG_DIEPCTL_EPENA);
9000f298:	f8d3 4900 	ldr.w	r4, [r3, #2304]	@ 0x900
9000f29c:	f044 4404 	orr.w	r4, r4, #2214592512	@ 0x84000000
9000f2a0:	f8c3 4900 	str.w	r4, [r3, #2304]	@ 0x900
      if (ep->type != EP_TYPE_ISOC)
9000f2a4:	e780      	b.n	9000f1a8 <USB_EPStartXfer+0x110>
          ep->xfer_len = ep->maxpacket;
9000f2a6:	463d      	mov	r5, r7
9000f2a8:	610f      	str	r7, [r1, #16]
9000f2aa:	e7ab      	b.n	9000f204 <USB_EPStartXfer+0x16c>
      if ((uint32_t)ep->dma_addr != 0U)
9000f2ac:	69ca      	ldr	r2, [r1, #28]
9000f2ae:	b102      	cbz	r2, 9000f2b2 <USB_EPStartXfer+0x21a>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
9000f2b0:	6162      	str	r2, [r4, #20]
        if ((USBx_DEVICE->DSTS & (1U << 8)) == 0U)
9000f2b2:	f8d0 2808 	ldr.w	r2, [r0, #2056]	@ 0x808
9000f2b6:	f412 7f80 	tst.w	r2, #256	@ 0x100
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SODDFRM;
9000f2ba:	f8d3 2900 	ldr.w	r2, [r3, #2304]	@ 0x900
9000f2be:	bf0c      	ite	eq
9000f2c0:	f042 5200 	orreq.w	r2, r2, #536870912	@ 0x20000000
          USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM;
9000f2c4:	f042 5280 	orrne.w	r2, r2, #268435456	@ 0x10000000
9000f2c8:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
9000f2cc:	e7d2      	b.n	9000f274 <USB_EPStartXfer+0x1dc>
      if ((uint32_t)ep->dma_addr != 0U)
9000f2ce:	69ca      	ldr	r2, [r1, #28]
9000f2d0:	2a00      	cmp	r2, #0
9000f2d2:	d0cf      	beq.n	9000f274 <USB_EPStartXfer+0x1dc>
        USBx_INEP(epnum)->DIEPDMA = (uint32_t)(ep->dma_addr);
9000f2d4:	6162      	str	r2, [r4, #20]
      if (ep->type == EP_TYPE_ISOC)
9000f2d6:	e7cd      	b.n	9000f274 <USB_EPStartXfer+0x1dc>
9000f2d8:	fff80000 	.word	0xfff80000
9000f2dc:	e007ffff 	.word	0xe007ffff
9000f2e0:	1ff80000 	.word	0x1ff80000

9000f2e4 <USB_EPStopXfer>:
{
9000f2e4:	b410      	push	{r4}
  __IO uint32_t count = 0U;
9000f2e6:	2300      	movs	r3, #0
{
9000f2e8:	b083      	sub	sp, #12
  if (ep->is_in == 1U)
9000f2ea:	784a      	ldrb	r2, [r1, #1]
  __IO uint32_t count = 0U;
9000f2ec:	9301      	str	r3, [sp, #4]
  if (ep->is_in == 1U)
9000f2ee:	2a01      	cmp	r2, #1
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000f2f0:	780b      	ldrb	r3, [r1, #0]
9000f2f2:	ea4f 1343 	mov.w	r3, r3, lsl #5
  if (ep->is_in == 1U)
9000f2f6:	d023      	beq.n	9000f340 <USB_EPStopXfer+0x5c>
    if (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000f2f8:	f500 6030 	add.w	r0, r0, #2816	@ 0xb00
9000f2fc:	58c1      	ldr	r1, [r0, r3]
9000f2fe:	18c2      	adds	r2, r0, r3
9000f300:	2900      	cmp	r1, #0
9000f302:	db04      	blt.n	9000f30e <USB_EPStopXfer+0x2a>
  HAL_StatusTypeDef ret = HAL_OK;
9000f304:	2000      	movs	r0, #0
}
9000f306:	b003      	add	sp, #12
9000f308:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f30c:	4770      	bx	lr
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
9000f30e:	58c4      	ldr	r4, [r0, r3]
        if (count > 10000U)
9000f310:	f242 7110 	movw	r1, #10000	@ 0x2710
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_SNAK);
9000f314:	f044 6400 	orr.w	r4, r4, #134217728	@ 0x8000000
9000f318:	50c4      	str	r4, [r0, r3]
      USBx_OUTEP(ep->num)->DOEPCTL |= (USB_OTG_DOEPCTL_EPDIS);
9000f31a:	58c4      	ldr	r4, [r0, r3]
9000f31c:	f044 4480 	orr.w	r4, r4, #1073741824	@ 0x40000000
9000f320:	50c4      	str	r4, [r0, r3]
9000f322:	e002      	b.n	9000f32a <USB_EPStopXfer+0x46>
      } while (((USBx_OUTEP(ep->num)->DOEPCTL) & USB_OTG_DOEPCTL_EPENA) ==  USB_OTG_DOEPCTL_EPENA);
9000f324:	6813      	ldr	r3, [r2, #0]
9000f326:	2b00      	cmp	r3, #0
9000f328:	daec      	bge.n	9000f304 <USB_EPStopXfer+0x20>
        count++;
9000f32a:	9b01      	ldr	r3, [sp, #4]
9000f32c:	3301      	adds	r3, #1
9000f32e:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
9000f330:	9b01      	ldr	r3, [sp, #4]
9000f332:	428b      	cmp	r3, r1
9000f334:	d9f6      	bls.n	9000f324 <USB_EPStopXfer+0x40>
          ret = HAL_ERROR;
9000f336:	2001      	movs	r0, #1
}
9000f338:	b003      	add	sp, #12
9000f33a:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f33e:	4770      	bx	lr
    if (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
9000f340:	f500 6010 	add.w	r0, r0, #2304	@ 0x900
9000f344:	58c1      	ldr	r1, [r0, r3]
9000f346:	18c2      	adds	r2, r0, r3
9000f348:	2900      	cmp	r1, #0
9000f34a:	dadb      	bge.n	9000f304 <USB_EPStopXfer+0x20>
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
9000f34c:	58c4      	ldr	r4, [r0, r3]
        if (count > 10000U)
9000f34e:	f242 7110 	movw	r1, #10000	@ 0x2710
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_SNAK);
9000f352:	f044 6400 	orr.w	r4, r4, #134217728	@ 0x8000000
9000f356:	50c4      	str	r4, [r0, r3]
      USBx_INEP(ep->num)->DIEPCTL |= (USB_OTG_DIEPCTL_EPDIS);
9000f358:	58c4      	ldr	r4, [r0, r3]
9000f35a:	f044 4480 	orr.w	r4, r4, #1073741824	@ 0x40000000
9000f35e:	50c4      	str	r4, [r0, r3]
9000f360:	e002      	b.n	9000f368 <USB_EPStopXfer+0x84>
      } while (((USBx_INEP(ep->num)->DIEPCTL) & USB_OTG_DIEPCTL_EPENA) ==  USB_OTG_DIEPCTL_EPENA);
9000f362:	6813      	ldr	r3, [r2, #0]
9000f364:	2b00      	cmp	r3, #0
9000f366:	dacd      	bge.n	9000f304 <USB_EPStopXfer+0x20>
        count++;
9000f368:	9b01      	ldr	r3, [sp, #4]
9000f36a:	3301      	adds	r3, #1
9000f36c:	9301      	str	r3, [sp, #4]
        if (count > 10000U)
9000f36e:	9b01      	ldr	r3, [sp, #4]
9000f370:	428b      	cmp	r3, r1
9000f372:	d9f6      	bls.n	9000f362 <USB_EPStopXfer+0x7e>
9000f374:	e7df      	b.n	9000f336 <USB_EPStopXfer+0x52>
9000f376:	bf00      	nop

9000f378 <USB_WritePacket>:
{
9000f378:	b410      	push	{r4}
9000f37a:	f89d 4004 	ldrb.w	r4, [sp, #4]
  if (dma == 0U)
9000f37e:	b964      	cbnz	r4, 9000f39a <USB_WritePacket+0x22>
    count32b = ((uint32_t)len + 3U) / 4U;
9000f380:	3303      	adds	r3, #3
    for (i = 0U; i < count32b; i++)
9000f382:	089b      	lsrs	r3, r3, #2
9000f384:	d009      	beq.n	9000f39a <USB_WritePacket+0x22>
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
9000f386:	3201      	adds	r2, #1
9000f388:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9000f38c:	eb00 3002 	add.w	r0, r0, r2, lsl #12
9000f390:	f851 2b04 	ldr.w	r2, [r1], #4
    for (i = 0U; i < count32b; i++)
9000f394:	428b      	cmp	r3, r1
      USBx_DFIFO((uint32_t)ch_ep_num) = __UNALIGNED_UINT32_READ(pSrc);
9000f396:	6002      	str	r2, [r0, #0]
    for (i = 0U; i < count32b; i++)
9000f398:	d1fa      	bne.n	9000f390 <USB_WritePacket+0x18>
}
9000f39a:	2000      	movs	r0, #0
9000f39c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000f3a0:	4770      	bx	lr
9000f3a2:	bf00      	nop

9000f3a4 <USB_ReadPacket>:
{
9000f3a4:	b570      	push	{r4, r5, r6, lr}
  for (i = 0U; i < count32b; i++)
9000f3a6:	ea5f 0e92 	movs.w	lr, r2, lsr #2
{
9000f3aa:	4605      	mov	r5, r0
  uint16_t remaining_bytes = len % 4U;
9000f3ac:	f002 0603 	and.w	r6, r2, #3
  for (i = 0U; i < count32b; i++)
9000f3b0:	d01a      	beq.n	9000f3e8 <USB_ReadPacket+0x44>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
9000f3b2:	f500 5480 	add.w	r4, r0, #4096	@ 0x1000
  uint8_t *pDest = dest;
9000f3b6:	468c      	mov	ip, r1
  for (i = 0U; i < count32b; i++)
9000f3b8:	2300      	movs	r3, #0
9000f3ba:	3301      	adds	r3, #1
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
9000f3bc:	6822      	ldr	r2, [r4, #0]
  for (i = 0U; i < count32b; i++)
9000f3be:	459e      	cmp	lr, r3
    __UNALIGNED_UINT32_WRITE(pDest, USBx_DFIFO(0U));
9000f3c0:	f84c 2b04 	str.w	r2, [ip], #4
  for (i = 0U; i < count32b; i++)
9000f3c4:	d1f9      	bne.n	9000f3ba <USB_ReadPacket+0x16>
    pDest++;
9000f3c6:	eb01 008e 	add.w	r0, r1, lr, lsl #2
  if (remaining_bytes != 0U)
9000f3ca:	b166      	cbz	r6, 9000f3e6 <USB_ReadPacket+0x42>
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
9000f3cc:	f505 5580 	add.w	r5, r5, #4096	@ 0x1000
    } while (remaining_bytes != 0U);
9000f3d0:	2e01      	cmp	r6, #1
    __UNALIGNED_UINT32_WRITE(&pData, USBx_DFIFO(0U));
9000f3d2:	682b      	ldr	r3, [r5, #0]
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
9000f3d4:	7003      	strb	r3, [r0, #0]
    } while (remaining_bytes != 0U);
9000f3d6:	d005      	beq.n	9000f3e4 <USB_ReadPacket+0x40>
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
9000f3d8:	0a1a      	lsrs	r2, r3, #8
    } while (remaining_bytes != 0U);
9000f3da:	2e02      	cmp	r6, #2
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
9000f3dc:	7042      	strb	r2, [r0, #1]
    } while (remaining_bytes != 0U);
9000f3de:	d001      	beq.n	9000f3e4 <USB_ReadPacket+0x40>
      *(uint8_t *)pDest = (uint8_t)(pData >> (8U * (uint8_t)(i)));
9000f3e0:	0c1b      	lsrs	r3, r3, #16
9000f3e2:	7083      	strb	r3, [r0, #2]
      pDest++;
9000f3e4:	4430      	add	r0, r6
}
9000f3e6:	bd70      	pop	{r4, r5, r6, pc}
  uint8_t *pDest = dest;
9000f3e8:	4608      	mov	r0, r1
9000f3ea:	e7ee      	b.n	9000f3ca <USB_ReadPacket+0x26>

9000f3ec <USB_EPSetStall>:
  uint32_t epnum = (uint32_t)ep->num;
9000f3ec:	780b      	ldrb	r3, [r1, #0]
  if (ep->is_in == 1U)
9000f3ee:	784a      	ldrb	r2, [r1, #1]
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
9000f3f0:	eb00 1043 	add.w	r0, r0, r3, lsl #5
9000f3f4:	3b00      	subs	r3, #0
9000f3f6:	bf18      	it	ne
9000f3f8:	2301      	movne	r3, #1
  if (ep->is_in == 1U)
9000f3fa:	2a01      	cmp	r2, #1
9000f3fc:	d00c      	beq.n	9000f418 <USB_EPSetStall+0x2c>
    if (((USBx_OUTEP(epnum)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == 0U) && (epnum != 0U))
9000f3fe:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
9000f402:	2a00      	cmp	r2, #0
9000f404:	db00      	blt.n	9000f408 <USB_EPSetStall+0x1c>
9000f406:	b9a3      	cbnz	r3, 9000f432 <USB_EPSetStall+0x46>
    USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_STALL;
9000f408:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000f40c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
9000f410:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
}
9000f414:	2000      	movs	r0, #0
9000f416:	4770      	bx	lr
    if (((USBx_INEP(epnum)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == 0U) && (epnum != 0U))
9000f418:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
9000f41c:	2a00      	cmp	r2, #0
9000f41e:	db00      	blt.n	9000f422 <USB_EPSetStall+0x36>
9000f420:	b973      	cbnz	r3, 9000f440 <USB_EPSetStall+0x54>
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
9000f422:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000f426:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
9000f42a:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
9000f42e:	2000      	movs	r0, #0
9000f430:	4770      	bx	lr
      USBx_OUTEP(epnum)->DOEPCTL &= ~(USB_OTG_DOEPCTL_EPDIS);
9000f432:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000f436:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
9000f43a:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
9000f43e:	e7e3      	b.n	9000f408 <USB_EPSetStall+0x1c>
      USBx_INEP(epnum)->DIEPCTL &= ~(USB_OTG_DIEPCTL_EPDIS);
9000f440:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000f444:	f023 4380 	bic.w	r3, r3, #1073741824	@ 0x40000000
9000f448:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
    USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_STALL;
9000f44c:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000f450:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
9000f454:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
9000f458:	e7e9      	b.n	9000f42e <USB_EPSetStall+0x42>
9000f45a:	bf00      	nop

9000f45c <USB_EPClearStall>:
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f45c:	790b      	ldrb	r3, [r1, #4]
  if (ep->is_in == 1U)
9000f45e:	784a      	ldrb	r2, [r1, #1]
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000f460:	f891 c000 	ldrb.w	ip, [r1]
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f464:	3b02      	subs	r3, #2
  if (ep->is_in == 1U)
9000f466:	2a01      	cmp	r2, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000f468:	eb00 104c 	add.w	r0, r0, ip, lsl #5
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f46c:	b2db      	uxtb	r3, r3
  if (ep->is_in == 1U)
9000f46e:	d011      	beq.n	9000f494 <USB_EPClearStall+0x38>
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
9000f470:	f8d0 2b00 	ldr.w	r2, [r0, #2816]	@ 0xb00
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f474:	2b01      	cmp	r3, #1
    USBx_OUTEP(epnum)->DOEPCTL &= ~USB_OTG_DOEPCTL_STALL;
9000f476:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
9000f47a:	f8c0 2b00 	str.w	r2, [r0, #2816]	@ 0xb00
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f47e:	d901      	bls.n	9000f484 <USB_EPClearStall+0x28>
}
9000f480:	2000      	movs	r0, #0
9000f482:	4770      	bx	lr
      USBx_OUTEP(epnum)->DOEPCTL |= USB_OTG_DOEPCTL_SD0PID_SEVNFRM; /* DATA0 */
9000f484:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000f488:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000f48c:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
}
9000f490:	2000      	movs	r0, #0
9000f492:	4770      	bx	lr
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000f494:	f8d0 2900 	ldr.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f498:	2b01      	cmp	r3, #1
    USBx_INEP(epnum)->DIEPCTL &= ~USB_OTG_DIEPCTL_STALL;
9000f49a:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
9000f49e:	f8c0 2900 	str.w	r2, [r0, #2304]	@ 0x900
    if ((ep->type == EP_TYPE_INTR) || (ep->type == EP_TYPE_BULK))
9000f4a2:	d8ed      	bhi.n	9000f480 <USB_EPClearStall+0x24>
      USBx_INEP(epnum)->DIEPCTL |= USB_OTG_DIEPCTL_SD0PID_SEVNFRM; /* DATA0 */
9000f4a4:	f8d0 3900 	ldr.w	r3, [r0, #2304]	@ 0x900
9000f4a8:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000f4ac:	f8c0 3900 	str.w	r3, [r0, #2304]	@ 0x900
}
9000f4b0:	2000      	movs	r0, #0
9000f4b2:	4770      	bx	lr

9000f4b4 <USB_StopDevice>:
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4b4:	f64f 337f 	movw	r3, #64383	@ 0xfb7f
  USBx_DEVICE->DIEPMSK  = 0U;
9000f4b8:	2200      	movs	r2, #0
{
9000f4ba:	b082      	sub	sp, #8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4bc:	f8c0 3908 	str.w	r3, [r0, #2312]	@ 0x908
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4c0:	f8c0 3b08 	str.w	r3, [r0, #2824]	@ 0xb08
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4c4:	f8c0 3928 	str.w	r3, [r0, #2344]	@ 0x928
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4c8:	f8c0 3b28 	str.w	r3, [r0, #2856]	@ 0xb28
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4cc:	f8c0 3948 	str.w	r3, [r0, #2376]	@ 0x948
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4d0:	f8c0 3b48 	str.w	r3, [r0, #2888]	@ 0xb48
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4d4:	f8c0 3968 	str.w	r3, [r0, #2408]	@ 0x968
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4d8:	f8c0 3b68 	str.w	r3, [r0, #2920]	@ 0xb68
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4dc:	f8c0 3988 	str.w	r3, [r0, #2440]	@ 0x988
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4e0:	f8c0 3b88 	str.w	r3, [r0, #2952]	@ 0xb88
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4e4:	f8c0 39a8 	str.w	r3, [r0, #2472]	@ 0x9a8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4e8:	f8c0 3ba8 	str.w	r3, [r0, #2984]	@ 0xba8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4ec:	f8c0 39c8 	str.w	r3, [r0, #2504]	@ 0x9c8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4f0:	f8c0 3bc8 	str.w	r3, [r0, #3016]	@ 0xbc8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4f4:	f8c0 39e8 	str.w	r3, [r0, #2536]	@ 0x9e8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f4f8:	f8c0 3be8 	str.w	r3, [r0, #3048]	@ 0xbe8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f4fc:	f8c0 3a08 	str.w	r3, [r0, #2568]	@ 0xa08
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f500:	f8c0 3c08 	str.w	r3, [r0, #3080]	@ 0xc08
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f504:	f8c0 3a28 	str.w	r3, [r0, #2600]	@ 0xa28
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f508:	f8c0 3c28 	str.w	r3, [r0, #3112]	@ 0xc28
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f50c:	f8c0 3a48 	str.w	r3, [r0, #2632]	@ 0xa48
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f510:	f8c0 3c48 	str.w	r3, [r0, #3144]	@ 0xc48
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f514:	f8c0 3a68 	str.w	r3, [r0, #2664]	@ 0xa68
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f518:	f8c0 3c68 	str.w	r3, [r0, #3176]	@ 0xc68
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f51c:	f8c0 3a88 	str.w	r3, [r0, #2696]	@ 0xa88
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f520:	f8c0 3c88 	str.w	r3, [r0, #3208]	@ 0xc88
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f524:	f8c0 3aa8 	str.w	r3, [r0, #2728]	@ 0xaa8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f528:	f8c0 3ca8 	str.w	r3, [r0, #3240]	@ 0xca8
    USBx_INEP(i)->DIEPINT = 0xFB7FU;
9000f52c:	f8c0 3ac8 	str.w	r3, [r0, #2760]	@ 0xac8
    USBx_OUTEP(i)->DOEPINT = 0xFB7FU;
9000f530:	f8c0 3cc8 	str.w	r3, [r0, #3272]	@ 0xcc8
  USBx_DEVICE->DIEPMSK  = 0U;
9000f534:	f8c0 2810 	str.w	r2, [r0, #2064]	@ 0x810
  USBx_DEVICE->DOEPMSK  = 0U;
9000f538:	f8c0 2814 	str.w	r2, [r0, #2068]	@ 0x814
  USBx_DEVICE->DAINTMSK = 0U;
9000f53c:	f8c0 281c 	str.w	r2, [r0, #2076]	@ 0x81c
  __IO uint32_t count = 0U;
9000f540:	9200      	str	r2, [sp, #0]
9000f542:	e002      	b.n	9000f54a <USB_StopDevice+0x96>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000f544:	6903      	ldr	r3, [r0, #16]
9000f546:	2b00      	cmp	r3, #0
9000f548:	db09      	blt.n	9000f55e <USB_StopDevice+0xaa>
    count++;
9000f54a:	9b00      	ldr	r3, [sp, #0]
9000f54c:	3301      	adds	r3, #1
9000f54e:	9300      	str	r3, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000f550:	9b00      	ldr	r3, [sp, #0]
9000f552:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000f556:	d9f5      	bls.n	9000f544 <USB_StopDevice+0x90>
      return HAL_TIMEOUT;
9000f558:	2003      	movs	r0, #3
}
9000f55a:	b002      	add	sp, #8
9000f55c:	4770      	bx	lr
  count = 0U;
9000f55e:	2200      	movs	r2, #0
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
9000f560:	2310      	movs	r3, #16
  count = 0U;
9000f562:	9200      	str	r2, [sp, #0]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
9000f564:	6103      	str	r3, [r0, #16]
9000f566:	e003      	b.n	9000f570 <USB_StopDevice+0xbc>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
9000f568:	6903      	ldr	r3, [r0, #16]
9000f56a:	f013 0310 	ands.w	r3, r3, #16
9000f56e:	d007      	beq.n	9000f580 <USB_StopDevice+0xcc>
    count++;
9000f570:	9b00      	ldr	r3, [sp, #0]
9000f572:	3301      	adds	r3, #1
9000f574:	9300      	str	r3, [sp, #0]
    if (count > HAL_USB_TIMEOUT)
9000f576:	9b00      	ldr	r3, [sp, #0]
9000f578:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000f57c:	d9f4      	bls.n	9000f568 <USB_StopDevice+0xb4>
9000f57e:	e7eb      	b.n	9000f558 <USB_StopDevice+0xa4>
  __IO uint32_t count = 0U;
9000f580:	9301      	str	r3, [sp, #4]
9000f582:	e002      	b.n	9000f58a <USB_StopDevice+0xd6>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
9000f584:	6903      	ldr	r3, [r0, #16]
9000f586:	2b00      	cmp	r3, #0
9000f588:	db07      	blt.n	9000f59a <USB_StopDevice+0xe6>
    count++;
9000f58a:	9b01      	ldr	r3, [sp, #4]
9000f58c:	3301      	adds	r3, #1
9000f58e:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000f590:	9b01      	ldr	r3, [sp, #4]
9000f592:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000f596:	d9f5      	bls.n	9000f584 <USB_StopDevice+0xd0>
9000f598:	e7de      	b.n	9000f558 <USB_StopDevice+0xa4>
  count = 0U;
9000f59a:	2200      	movs	r2, #0
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000f59c:	f44f 6384 	mov.w	r3, #1056	@ 0x420
  count = 0U;
9000f5a0:	9201      	str	r2, [sp, #4]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
9000f5a2:	6103      	str	r3, [r0, #16]
9000f5a4:	e003      	b.n	9000f5ae <USB_StopDevice+0xfa>
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
9000f5a6:	6903      	ldr	r3, [r0, #16]
9000f5a8:	f013 0320 	ands.w	r3, r3, #32
9000f5ac:	d007      	beq.n	9000f5be <USB_StopDevice+0x10a>
    count++;
9000f5ae:	9b01      	ldr	r3, [sp, #4]
9000f5b0:	3301      	adds	r3, #1
9000f5b2:	9301      	str	r3, [sp, #4]
    if (count > HAL_USB_TIMEOUT)
9000f5b4:	9b01      	ldr	r3, [sp, #4]
9000f5b6:	f1b3 6f70 	cmp.w	r3, #251658240	@ 0xf000000
9000f5ba:	d9f4      	bls.n	9000f5a6 <USB_StopDevice+0xf2>
9000f5bc:	e7cc      	b.n	9000f558 <USB_StopDevice+0xa4>
  return HAL_OK;
9000f5be:	4618      	mov	r0, r3
}
9000f5c0:	b002      	add	sp, #8
9000f5c2:	4770      	bx	lr

9000f5c4 <USB_SetDevAddress>:
{
9000f5c4:	4603      	mov	r3, r0
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
9000f5c6:	0109      	lsls	r1, r1, #4
}
9000f5c8:	2000      	movs	r0, #0
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
9000f5ca:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
9000f5ce:	f401 61fe 	and.w	r1, r1, #2032	@ 0x7f0
  USBx_DEVICE->DCFG &= ~(USB_OTG_DCFG_DAD);
9000f5d2:	f422 62fe 	bic.w	r2, r2, #2032	@ 0x7f0
9000f5d6:	f8c3 2800 	str.w	r2, [r3, #2048]	@ 0x800
  USBx_DEVICE->DCFG |= ((uint32_t)address << 4) & USB_OTG_DCFG_DAD;
9000f5da:	f8d3 2800 	ldr.w	r2, [r3, #2048]	@ 0x800
9000f5de:	4311      	orrs	r1, r2
9000f5e0:	f8c3 1800 	str.w	r1, [r3, #2048]	@ 0x800
}
9000f5e4:	4770      	bx	lr
9000f5e6:	bf00      	nop

9000f5e8 <USB_DevConnect>:
{
9000f5e8:	4603      	mov	r3, r0
}
9000f5ea:	2000      	movs	r0, #0
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
9000f5ec:	f8d3 2e00 	ldr.w	r2, [r3, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
9000f5f0:	f503 6100 	add.w	r1, r3, #2048	@ 0x800
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
9000f5f4:	f022 0203 	bic.w	r2, r2, #3
9000f5f8:	f8c3 2e00 	str.w	r2, [r3, #3584]	@ 0xe00
  USBx_DEVICE->DCTL &= ~USB_OTG_DCTL_SDIS;
9000f5fc:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
9000f600:	f023 0302 	bic.w	r3, r3, #2
9000f604:	604b      	str	r3, [r1, #4]
}
9000f606:	4770      	bx	lr

9000f608 <USB_DevDisconnect>:
{
9000f608:	4603      	mov	r3, r0
}
9000f60a:	2000      	movs	r0, #0
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
9000f60c:	f8d3 2e00 	ldr.w	r2, [r3, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
9000f610:	f503 6100 	add.w	r1, r3, #2048	@ 0x800
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
9000f614:	f022 0203 	bic.w	r2, r2, #3
9000f618:	f8c3 2e00 	str.w	r2, [r3, #3584]	@ 0xe00
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
9000f61c:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
9000f620:	f043 0302 	orr.w	r3, r3, #2
9000f624:	604b      	str	r3, [r1, #4]
}
9000f626:	4770      	bx	lr

9000f628 <USB_ReadInterrupts>:
  tmpreg = USBx->GINTSTS;
9000f628:	6942      	ldr	r2, [r0, #20]
  tmpreg &= USBx->GINTMSK;
9000f62a:	6980      	ldr	r0, [r0, #24]
}
9000f62c:	4010      	ands	r0, r2
9000f62e:	4770      	bx	lr

9000f630 <USB_ReadDevAllOutEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
9000f630:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
  tmpreg &= USBx_DEVICE->DAINTMSK;
9000f634:	f8d0 081c 	ldr.w	r0, [r0, #2076]	@ 0x81c
9000f638:	4018      	ands	r0, r3
}
9000f63a:	0c00      	lsrs	r0, r0, #16
9000f63c:	4770      	bx	lr
9000f63e:	bf00      	nop

9000f640 <USB_ReadDevAllInEpInterrupt>:
  tmpreg  = USBx_DEVICE->DAINT;
9000f640:	f8d0 3818 	ldr.w	r3, [r0, #2072]	@ 0x818
  tmpreg &= USBx_DEVICE->DAINTMSK;
9000f644:	f8d0 081c 	ldr.w	r0, [r0, #2076]	@ 0x81c
9000f648:	4018      	ands	r0, r3
}
9000f64a:	b280      	uxth	r0, r0
9000f64c:	4770      	bx	lr
9000f64e:	bf00      	nop

9000f650 <USB_ReadDevOutEPInterrupt>:
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
9000f650:	eb00 1141 	add.w	r1, r0, r1, lsl #5
  tmpreg &= USBx_DEVICE->DOEPMSK;
9000f654:	f500 6000 	add.w	r0, r0, #2048	@ 0x800
  tmpreg  = USBx_OUTEP((uint32_t)epnum)->DOEPINT;
9000f658:	f8d1 2b08 	ldr.w	r2, [r1, #2824]	@ 0xb08
  tmpreg &= USBx_DEVICE->DOEPMSK;
9000f65c:	6940      	ldr	r0, [r0, #20]
}
9000f65e:	4010      	ands	r0, r2
9000f660:	4770      	bx	lr
9000f662:	bf00      	nop

9000f664 <USB_ReadDevInEPInterrupt>:
  msk = USBx_DEVICE->DIEPMSK;
9000f664:	f8d0 2810 	ldr.w	r2, [r0, #2064]	@ 0x810
  emp = USBx_DEVICE->DIEPEMPMSK;
9000f668:	f8d0 3834 	ldr.w	r3, [r0, #2100]	@ 0x834
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
9000f66c:	eb00 1041 	add.w	r0, r0, r1, lsl #5
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
9000f670:	f001 010f 	and.w	r1, r1, #15
  tmpreg = USBx_INEP((uint32_t)epnum)->DIEPINT & msk;
9000f674:	f8d0 0908 	ldr.w	r0, [r0, #2312]	@ 0x908
  msk |= ((emp >> (epnum & EP_ADDR_MSK)) & 0x1U) << 7;
9000f678:	40cb      	lsrs	r3, r1
9000f67a:	01db      	lsls	r3, r3, #7
9000f67c:	b2db      	uxtb	r3, r3
9000f67e:	4313      	orrs	r3, r2
}
9000f680:	4018      	ands	r0, r3
9000f682:	4770      	bx	lr

9000f684 <USB_GetMode>:
  return ((USBx->GINTSTS) & 0x1U);
9000f684:	6940      	ldr	r0, [r0, #20]
}
9000f686:	f000 0001 	and.w	r0, r0, #1
9000f68a:	4770      	bx	lr

9000f68c <USB_ActivateSetup>:
{
9000f68c:	4603      	mov	r3, r0
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
9000f68e:	4a09      	ldr	r2, [pc, #36]	@ (9000f6b4 <USB_ActivateSetup+0x28>)
}
9000f690:	2000      	movs	r0, #0
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
9000f692:	f503 6100 	add.w	r1, r3, #2048	@ 0x800
{
9000f696:	b410      	push	{r4}
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
9000f698:	f8d3 4900 	ldr.w	r4, [r3, #2304]	@ 0x900
9000f69c:	4022      	ands	r2, r4
}
9000f69e:	f85d 4b04 	ldr.w	r4, [sp], #4
  USBx_INEP(0U)->DIEPCTL &= ~USB_OTG_DIEPCTL_MPSIZ;
9000f6a2:	f8c3 2900 	str.w	r2, [r3, #2304]	@ 0x900
  USBx_DEVICE->DCTL |= USB_OTG_DCTL_CGINAK;
9000f6a6:	f8d3 3804 	ldr.w	r3, [r3, #2052]	@ 0x804
9000f6aa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000f6ae:	604b      	str	r3, [r1, #4]
}
9000f6b0:	4770      	bx	lr
9000f6b2:	bf00      	nop
9000f6b4:	fffff800 	.word	0xfffff800

9000f6b8 <USB_EP0_OutStart>:
{
9000f6b8:	b430      	push	{r4, r5}
  uint32_t gSNPSiD = *(__IO const uint32_t *)(&USBx->CID + 0x1U);
9000f6ba:	6c05      	ldr	r5, [r0, #64]	@ 0x40
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000f6bc:	f500 6330 	add.w	r3, r0, #2816	@ 0xb00
  if (gSNPSiD > USB_OTG_CORE_ID_300A)
9000f6c0:	4c10      	ldr	r4, [pc, #64]	@ (9000f704 <USB_EP0_OutStart+0x4c>)
9000f6c2:	42a5      	cmp	r5, r4
9000f6c4:	d903      	bls.n	9000f6ce <USB_EP0_OutStart+0x16>
    if ((USBx_OUTEP(0U)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
9000f6c6:	f8d0 4b00 	ldr.w	r4, [r0, #2816]	@ 0xb00
9000f6ca:	2c00      	cmp	r4, #0
9000f6cc:	db16      	blt.n	9000f6fc <USB_EP0_OutStart+0x44>
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
9000f6ce:	2400      	movs	r4, #0
  if (dma == 1U)
9000f6d0:	2901      	cmp	r1, #1
  USBx_OUTEP(0U)->DOEPTSIZ = 0U;
9000f6d2:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (USB_OTG_DOEPTSIZ_PKTCNT & (1U << 19));
9000f6d4:	691c      	ldr	r4, [r3, #16]
9000f6d6:	f444 2400 	orr.w	r4, r4, #524288	@ 0x80000
9000f6da:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |= (3U * 8U);
9000f6dc:	691c      	ldr	r4, [r3, #16]
9000f6de:	f044 0418 	orr.w	r4, r4, #24
9000f6e2:	611c      	str	r4, [r3, #16]
  USBx_OUTEP(0U)->DOEPTSIZ |=  USB_OTG_DOEPTSIZ_STUPCNT;
9000f6e4:	691c      	ldr	r4, [r3, #16]
9000f6e6:	f044 44c0 	orr.w	r4, r4, #1610612736	@ 0x60000000
9000f6ea:	611c      	str	r4, [r3, #16]
  if (dma == 1U)
9000f6ec:	d106      	bne.n	9000f6fc <USB_EP0_OutStart+0x44>
    USBx_OUTEP(0U)->DOEPDMA = (uint32_t)psetup;
9000f6ee:	615a      	str	r2, [r3, #20]
    USBx_OUTEP(0U)->DOEPCTL |= USB_OTG_DOEPCTL_EPENA | USB_OTG_DOEPCTL_USBAEP;
9000f6f0:	f8d0 3b00 	ldr.w	r3, [r0, #2816]	@ 0xb00
9000f6f4:	f043 2380 	orr.w	r3, r3, #2147516416	@ 0x80008000
9000f6f8:	f8c0 3b00 	str.w	r3, [r0, #2816]	@ 0xb00
}
9000f6fc:	2000      	movs	r0, #0
9000f6fe:	bc30      	pop	{r4, r5}
9000f700:	4770      	bx	lr
9000f702:	bf00      	nop
9000f704:	4f54300a 	.word	0x4f54300a

9000f708 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000f708:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000f70a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f70e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000f710:	f002 fb4a 	bl	90011da8 <xTaskGetSchedulerState>
9000f714:	2801      	cmp	r0, #1
9000f716:	d100      	bne.n	9000f71a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000f718:	bd08      	pop	{r3, pc}
9000f71a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000f71e:	f000 bc31 	b.w	9000ff84 <xPortSysTickHandler>
9000f722:	bf00      	nop

9000f724 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000f724:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f728:	b92b      	cbnz	r3, 9000f736 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000f72a:	4b06      	ldr	r3, [pc, #24]	@ (9000f744 <osKernelInitialize+0x20>)
9000f72c:	6818      	ldr	r0, [r3, #0]
9000f72e:	b928      	cbnz	r0, 9000f73c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000f730:	2201      	movs	r2, #1
9000f732:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000f734:	4770      	bx	lr
    stat = osErrorISR;
9000f736:	f06f 0005 	mvn.w	r0, #5
9000f73a:	4770      	bx	lr
    } else {
      stat = osError;
9000f73c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000f740:	4770      	bx	lr
9000f742:	bf00      	nop
9000f744:	2400b854 	.word	0x2400b854

9000f748 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000f748:	b510      	push	{r4, lr}
9000f74a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000f74e:	b974      	cbnz	r4, 9000f76e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000f750:	4b08      	ldr	r3, [pc, #32]	@ (9000f774 <osKernelStart+0x2c>)
9000f752:	681a      	ldr	r2, [r3, #0]
9000f754:	2a01      	cmp	r2, #1
9000f756:	d107      	bne.n	9000f768 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000f758:	4907      	ldr	r1, [pc, #28]	@ (9000f778 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000f75a:	2202      	movs	r2, #2
9000f75c:	77cc      	strb	r4, [r1, #31]
9000f75e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000f760:	f002 f8c0 	bl	900118e4 <vTaskStartScheduler>
      stat = osOK;
9000f764:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000f766:	bd10      	pop	{r4, pc}
      stat = osError;
9000f768:	f04f 30ff 	mov.w	r0, #4294967295
}
9000f76c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000f76e:	f06f 0005 	mvn.w	r0, #5
}
9000f772:	bd10      	pop	{r4, pc}
9000f774:	2400b854 	.word	0x2400b854
9000f778:	e000ed00 	.word	0xe000ed00

9000f77c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f77c:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000f77e:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000f780:	b087      	sub	sp, #28
  hTask = NULL;
9000f782:	9505      	str	r5, [sp, #20]
9000f784:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000f788:	b300      	cbz	r0, 9000f7cc <osThreadNew+0x50>
9000f78a:	b9fb      	cbnz	r3, 9000f7cc <osThreadNew+0x50>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000f78c:	4614      	mov	r4, r2
9000f78e:	b302      	cbz	r2, 9000f7d2 <osThreadNew+0x56>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000f790:	6996      	ldr	r6, [r2, #24]
9000f792:	b9c6      	cbnz	r6, 9000f7c6 <osThreadNew+0x4a>
9000f794:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f796:	6863      	ldr	r3, [r4, #4]
9000f798:	07db      	lsls	r3, r3, #31
9000f79a:	d417      	bmi.n	9000f7cc <osThreadNew+0x50>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000f79c:	6963      	ldr	r3, [r4, #20]
9000f79e:	b32b      	cbz	r3, 9000f7ec <osThreadNew+0x70>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000f7a0:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f7a2:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000f7a4:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000f7a8:	68e7      	ldr	r7, [r4, #12]
9000f7aa:	b30d      	cbz	r5, 9000f7f0 <osThreadNew+0x74>
9000f7ac:	2f5f      	cmp	r7, #95	@ 0x5f
9000f7ae:	d90d      	bls.n	9000f7cc <osThreadNew+0x50>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000f7b0:	6924      	ldr	r4, [r4, #16]
9000f7b2:	b15b      	cbz	r3, 9000f7cc <osThreadNew+0x50>
9000f7b4:	b154      	cbz	r4, 9000f7cc <osThreadNew+0x50>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000f7b6:	460b      	mov	r3, r1
9000f7b8:	9600      	str	r6, [sp, #0]
9000f7ba:	4661      	mov	r1, ip
9000f7bc:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000f7c0:	f001 fefe 	bl	900115c0 <xTaskCreateStatic>
9000f7c4:	e003      	b.n	9000f7ce <osThreadNew+0x52>
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000f7c6:	1e72      	subs	r2, r6, #1
9000f7c8:	2a37      	cmp	r2, #55	@ 0x37
9000f7ca:	d9e4      	bls.n	9000f796 <osThreadNew+0x1a>
        return (NULL);
9000f7cc:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000f7ce:	b007      	add	sp, #28
9000f7d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000f7d2:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000f7d4:	2618      	movs	r6, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f7d6:	460b      	mov	r3, r1
9000f7d8:	4621      	mov	r1, r4
9000f7da:	ac05      	add	r4, sp, #20
9000f7dc:	9600      	str	r6, [sp, #0]
9000f7de:	9401      	str	r4, [sp, #4]
9000f7e0:	f001 ff98 	bl	90011714 <xTaskCreate>
9000f7e4:	2801      	cmp	r0, #1
9000f7e6:	d1f1      	bne.n	9000f7cc <osThreadNew+0x50>
  return ((osThreadId_t)hTask);
9000f7e8:	9805      	ldr	r0, [sp, #20]
9000f7ea:	e7f0      	b.n	9000f7ce <osThreadNew+0x52>
    stack = configMINIMAL_STACK_SIZE;
9000f7ec:	2280      	movs	r2, #128	@ 0x80
9000f7ee:	e7d8      	b.n	9000f7a2 <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000f7f0:	2f00      	cmp	r7, #0
9000f7f2:	d1eb      	bne.n	9000f7cc <osThreadNew+0x50>
9000f7f4:	6923      	ldr	r3, [r4, #16]
9000f7f6:	2b00      	cmp	r3, #0
9000f7f8:	d1e8      	bne.n	9000f7cc <osThreadNew+0x50>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000f7fa:	b292      	uxth	r2, r2
9000f7fc:	4664      	mov	r4, ip
9000f7fe:	e7ea      	b.n	9000f7d6 <osThreadNew+0x5a>

9000f800 <osDelay>:
9000f800:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000f804:	b93a      	cbnz	r2, 9000f816 <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000f806:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000f808:	b908      	cbnz	r0, 9000f80e <osDelay+0xe>
    stat = osOK;
9000f80a:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000f80c:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000f80e:	f002 f813 	bl	90011838 <vTaskDelay>
    stat = osOK;
9000f812:	2000      	movs	r0, #0
}
9000f814:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000f816:	f06f 0005 	mvn.w	r0, #5
}
9000f81a:	4770      	bx	lr

9000f81c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000f81c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f81e:	b083      	sub	sp, #12
9000f820:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000f824:	b98e      	cbnz	r6, 9000f84a <osSemaphoreNew+0x2e>
9000f826:	4605      	mov	r5, r0
9000f828:	b178      	cbz	r0, 9000f84a <osSemaphoreNew+0x2e>
9000f82a:	4288      	cmp	r0, r1
9000f82c:	460f      	mov	r7, r1
9000f82e:	d30c      	bcc.n	9000f84a <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000f830:	4614      	mov	r4, r2
9000f832:	b172      	cbz	r2, 9000f852 <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000f834:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000f838:	b14a      	cbz	r2, 9000f84e <osSemaphoreNew+0x32>
9000f83a:	2b4f      	cmp	r3, #79	@ 0x4f
9000f83c:	d905      	bls.n	9000f84a <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000f83e:	2801      	cmp	r0, #1
9000f840:	d02f      	beq.n	9000f8a2 <osSemaphoreNew+0x86>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000f842:	f000 fd7d 	bl	90010340 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000f846:	4605      	mov	r5, r0
9000f848:	b968      	cbnz	r0, 9000f866 <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000f84a:	2500      	movs	r5, #0
9000f84c:	e010      	b.n	9000f870 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000f84e:	2b00      	cmp	r3, #0
9000f850:	d1fb      	bne.n	9000f84a <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000f852:	2d01      	cmp	r5, #1
9000f854:	d00f      	beq.n	9000f876 <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000f856:	4628      	mov	r0, r5
9000f858:	4639      	mov	r1, r7
9000f85a:	f000 fdd1 	bl	90010400 <xQueueCreateCountingSemaphore>
9000f85e:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000f860:	2d00      	cmp	r5, #0
9000f862:	d0f2      	beq.n	9000f84a <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000f864:	b104      	cbz	r4, 9000f868 <osSemaphoreNew+0x4c>
          name = attr->name;
9000f866:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000f868:	4621      	mov	r1, r4
9000f86a:	4628      	mov	r0, r5
9000f86c:	f001 fc02 	bl	90011074 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000f870:	4628      	mov	r0, r5
9000f872:	b003      	add	sp, #12
9000f874:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000f876:	4628      	mov	r0, r5
9000f878:	2203      	movs	r2, #3
9000f87a:	2100      	movs	r1, #0
9000f87c:	f000 fd1e 	bl	900102bc <xQueueGenericCreate>
9000f880:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000f882:	2d00      	cmp	r5, #0
9000f884:	d0e1      	beq.n	9000f84a <osSemaphoreNew+0x2e>
9000f886:	2f00      	cmp	r7, #0
9000f888:	d0ea      	beq.n	9000f860 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000f88a:	2300      	movs	r3, #0
9000f88c:	4628      	mov	r0, r5
9000f88e:	461a      	mov	r2, r3
9000f890:	4619      	mov	r1, r3
9000f892:	f000 fdfb 	bl	9001048c <xQueueGenericSend>
9000f896:	2801      	cmp	r0, #1
9000f898:	d0e4      	beq.n	9000f864 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000f89a:	4628      	mov	r0, r5
9000f89c:	f001 fba4 	bl	90010fe8 <vQueueDelete>
      if (hSemaphore != NULL) {
9000f8a0:	e7d3      	b.n	9000f84a <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000f8a2:	4613      	mov	r3, r2
9000f8a4:	2203      	movs	r2, #3
9000f8a6:	4631      	mov	r1, r6
9000f8a8:	9200      	str	r2, [sp, #0]
9000f8aa:	4632      	mov	r2, r6
9000f8ac:	f000 fc9a 	bl	900101e4 <xQueueGenericCreateStatic>
9000f8b0:	4605      	mov	r5, r0
9000f8b2:	e7e6      	b.n	9000f882 <osSemaphoreNew+0x66>

9000f8b4 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000f8b4:	b360      	cbz	r0, 9000f910 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000f8b6:	b510      	push	{r4, lr}
9000f8b8:	460c      	mov	r4, r1
9000f8ba:	b082      	sub	sp, #8
9000f8bc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000f8c0:	b1b3      	cbz	r3, 9000f8f0 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000f8c2:	bb11      	cbnz	r1, 9000f90a <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000f8c4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000f8c6:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000f8c8:	f001 fb30 	bl	90010f2c <xQueueReceiveFromISR>
9000f8cc:	2801      	cmp	r0, #1
9000f8ce:	d118      	bne.n	9000f902 <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000f8d0:	9b01      	ldr	r3, [sp, #4]
9000f8d2:	b913      	cbnz	r3, 9000f8da <osSemaphoreAcquire+0x26>
  stat = osOK;
9000f8d4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000f8d6:	b002      	add	sp, #8
9000f8d8:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000f8da:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f8de:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f8e2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f8e6:	f3bf 8f4f 	dsb	sy
9000f8ea:	f3bf 8f6f 	isb	sy
9000f8ee:	e7f1      	b.n	9000f8d4 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000f8f0:	f001 f990 	bl	90010c14 <xQueueSemaphoreTake>
9000f8f4:	2801      	cmp	r0, #1
9000f8f6:	d0ed      	beq.n	9000f8d4 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000f8f8:	b11c      	cbz	r4, 9000f902 <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000f8fa:	f06f 0001 	mvn.w	r0, #1
}
9000f8fe:	b002      	add	sp, #8
9000f900:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000f902:	f06f 0002 	mvn.w	r0, #2
}
9000f906:	b002      	add	sp, #8
9000f908:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000f90a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000f90e:	e7e2      	b.n	9000f8d6 <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000f910:	f06f 0003 	mvn.w	r0, #3
}
9000f914:	4770      	bx	lr
9000f916:	bf00      	nop

9000f918 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000f918:	b328      	cbz	r0, 9000f966 <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000f91a:	b500      	push	{lr}
9000f91c:	b083      	sub	sp, #12
9000f91e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000f922:	b19b      	cbz	r3, 9000f94c <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000f924:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000f926:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000f928:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000f92a:	f000 ff97 	bl	9001085c <xQueueGiveFromISR>
9000f92e:	2801      	cmp	r0, #1
9000f930:	d116      	bne.n	9000f960 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000f932:	9b01      	ldr	r3, [sp, #4]
9000f934:	b183      	cbz	r3, 9000f958 <osSemaphoreRelease+0x40>
9000f936:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f93a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f93e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f942:	f3bf 8f4f 	dsb	sy
9000f946:	f3bf 8f6f 	isb	sy
9000f94a:	e005      	b.n	9000f958 <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000f94c:	461a      	mov	r2, r3
9000f94e:	4619      	mov	r1, r3
9000f950:	f000 fd9c 	bl	9001048c <xQueueGenericSend>
9000f954:	2801      	cmp	r0, #1
9000f956:	d103      	bne.n	9000f960 <osSemaphoreRelease+0x48>
  stat = osOK;
9000f958:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000f95a:	b003      	add	sp, #12
9000f95c:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000f960:	f06f 0002 	mvn.w	r0, #2
9000f964:	e7f9      	b.n	9000f95a <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000f966:	f06f 0003 	mvn.w	r0, #3
}
9000f96a:	4770      	bx	lr

9000f96c <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000f96c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f96e:	b083      	sub	sp, #12
9000f970:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000f974:	b987      	cbnz	r7, 9000f998 <osMessageQueueNew+0x2c>
9000f976:	4605      	mov	r5, r0
9000f978:	b170      	cbz	r0, 9000f998 <osMessageQueueNew+0x2c>
9000f97a:	b169      	cbz	r1, 9000f998 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000f97c:	4614      	mov	r4, r2
9000f97e:	b17a      	cbz	r2, 9000f9a0 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000f980:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000f984:	b1c3      	cbz	r3, 9000f9b8 <osMessageQueueNew+0x4c>
9000f986:	2a4f      	cmp	r2, #79	@ 0x4f
9000f988:	d906      	bls.n	9000f998 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000f98a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000f98c:	b122      	cbz	r2, 9000f998 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000f98e:	fb01 f505 	mul.w	r5, r1, r5
9000f992:	6966      	ldr	r6, [r4, #20]
9000f994:	42ae      	cmp	r6, r5
9000f996:	d21e      	bcs.n	9000f9d6 <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000f998:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000f99a:	4628      	mov	r0, r5
9000f99c:	b003      	add	sp, #12
9000f99e:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000f9a0:	f000 fc8c 	bl	900102bc <xQueueGenericCreate>
    if (hQueue != NULL) {
9000f9a4:	4605      	mov	r5, r0
9000f9a6:	2800      	cmp	r0, #0
9000f9a8:	d0f6      	beq.n	9000f998 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000f9aa:	4628      	mov	r0, r5
9000f9ac:	4621      	mov	r1, r4
9000f9ae:	f001 fb61 	bl	90011074 <vQueueAddToRegistry>
}
9000f9b2:	4628      	mov	r0, r5
9000f9b4:	b003      	add	sp, #12
9000f9b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000f9b8:	2a00      	cmp	r2, #0
9000f9ba:	d1ed      	bne.n	9000f998 <osMessageQueueNew+0x2c>
9000f9bc:	6923      	ldr	r3, [r4, #16]
9000f9be:	2b00      	cmp	r3, #0
9000f9c0:	d1ea      	bne.n	9000f998 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000f9c2:	6962      	ldr	r2, [r4, #20]
9000f9c4:	2a00      	cmp	r2, #0
9000f9c6:	d1e7      	bne.n	9000f998 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000f9c8:	f000 fc78 	bl	900102bc <xQueueGenericCreate>
    if (hQueue != NULL) {
9000f9cc:	4605      	mov	r5, r0
9000f9ce:	2800      	cmp	r0, #0
9000f9d0:	d0e2      	beq.n	9000f998 <osMessageQueueNew+0x2c>
        name = attr->name;
9000f9d2:	6824      	ldr	r4, [r4, #0]
9000f9d4:	e7e9      	b.n	9000f9aa <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000f9d6:	9700      	str	r7, [sp, #0]
9000f9d8:	f000 fc04 	bl	900101e4 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000f9dc:	4605      	mov	r5, r0
9000f9de:	2800      	cmp	r0, #0
9000f9e0:	d1f7      	bne.n	9000f9d2 <osMessageQueueNew+0x66>
9000f9e2:	e7d9      	b.n	9000f998 <osMessageQueueNew+0x2c>

9000f9e4 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000f9e4:	b560      	push	{r5, r6, lr}
9000f9e6:	461e      	mov	r6, r3
9000f9e8:	b083      	sub	sp, #12
9000f9ea:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f9ee:	fab0 f580 	clz	r5, r0
9000f9f2:	fab1 f381 	clz	r3, r1
9000f9f6:	096d      	lsrs	r5, r5, #5
9000f9f8:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000f9fa:	b1da      	cbz	r2, 9000fa34 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000f9fc:	2e00      	cmp	r6, #0
9000f9fe:	bf18      	it	ne
9000fa00:	f043 0301 	orrne.w	r3, r3, #1
9000fa04:	bb33      	cbnz	r3, 9000fa54 <osMessageQueuePut+0x70>
9000fa06:	bb2d      	cbnz	r5, 9000fa54 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fa08:	462b      	mov	r3, r5
9000fa0a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fa0c:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000fa0e:	f000 febf 	bl	90010790 <xQueueGenericSendFromISR>
9000fa12:	2801      	cmp	r0, #1
9000fa14:	d11a      	bne.n	9000fa4c <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fa16:	9b01      	ldr	r3, [sp, #4]
9000fa18:	b14b      	cbz	r3, 9000fa2e <osMessageQueuePut+0x4a>
9000fa1a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fa1e:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fa22:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fa26:	f3bf 8f4f 	dsb	sy
9000fa2a:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000fa2e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000fa30:	b003      	add	sp, #12
9000fa32:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000fa34:	b975      	cbnz	r5, 9000fa54 <osMessageQueuePut+0x70>
9000fa36:	b96b      	cbnz	r3, 9000fa54 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000fa38:	4632      	mov	r2, r6
9000fa3a:	f000 fd27 	bl	9001048c <xQueueGenericSend>
9000fa3e:	2801      	cmp	r0, #1
9000fa40:	d0f5      	beq.n	9000fa2e <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000fa42:	b11e      	cbz	r6, 9000fa4c <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000fa44:	f06f 0001 	mvn.w	r0, #1
}
9000fa48:	b003      	add	sp, #12
9000fa4a:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000fa4c:	f06f 0002 	mvn.w	r0, #2
}
9000fa50:	b003      	add	sp, #12
9000fa52:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000fa54:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000fa58:	e7ea      	b.n	9000fa30 <osMessageQueuePut+0x4c>
9000fa5a:	bf00      	nop

9000fa5c <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000fa5c:	b570      	push	{r4, r5, r6, lr}
9000fa5e:	461e      	mov	r6, r3
9000fa60:	b082      	sub	sp, #8
9000fa62:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fa66:	fab0 f580 	clz	r5, r0
9000fa6a:	fab1 f481 	clz	r4, r1
9000fa6e:	096d      	lsrs	r5, r5, #5
9000fa70:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000fa72:	b1d3      	cbz	r3, 9000faaa <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000fa74:	2e00      	cmp	r6, #0
9000fa76:	bf18      	it	ne
9000fa78:	f044 0401 	orrne.w	r4, r4, #1
9000fa7c:	bb2c      	cbnz	r4, 9000faca <osMessageQueueGet+0x6e>
9000fa7e:	bb25      	cbnz	r5, 9000faca <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fa80:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000fa82:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000fa84:	f001 fa52 	bl	90010f2c <xQueueReceiveFromISR>
9000fa88:	2801      	cmp	r0, #1
9000fa8a:	d11a      	bne.n	9000fac2 <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000fa8c:	9b01      	ldr	r3, [sp, #4]
9000fa8e:	b14b      	cbz	r3, 9000faa4 <osMessageQueueGet+0x48>
9000fa90:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fa94:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000fa98:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000fa9c:	f3bf 8f4f 	dsb	sy
9000faa0:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000faa4:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000faa6:	b002      	add	sp, #8
9000faa8:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000faaa:	b975      	cbnz	r5, 9000faca <osMessageQueueGet+0x6e>
9000faac:	b96c      	cbnz	r4, 9000faca <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000faae:	4632      	mov	r2, r6
9000fab0:	f000 ff2a 	bl	90010908 <xQueueReceive>
9000fab4:	2801      	cmp	r0, #1
9000fab6:	d0f5      	beq.n	9000faa4 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000fab8:	b11e      	cbz	r6, 9000fac2 <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000faba:	f06f 0001 	mvn.w	r0, #1
}
9000fabe:	b002      	add	sp, #8
9000fac0:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000fac2:	f06f 0002 	mvn.w	r0, #2
}
9000fac6:	b002      	add	sp, #8
9000fac8:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000faca:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000face:	e7ea      	b.n	9000faa6 <osMessageQueueGet+0x4a>

9000fad0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fad0:	4b04      	ldr	r3, [pc, #16]	@ (9000fae4 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000fad2:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000fad4:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fad6:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000fad8:	4c03      	ldr	r4, [pc, #12]	@ (9000fae8 <vApplicationGetIdleTaskMemory+0x18>)
9000fada:	600c      	str	r4, [r1, #0]
}
9000fadc:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000fae0:	6013      	str	r3, [r2, #0]
}
9000fae2:	4770      	bx	lr
9000fae4:	2400b7f4 	.word	0x2400b7f4
9000fae8:	2400b5f4 	.word	0x2400b5f4

9000faec <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000faec:	4b05      	ldr	r3, [pc, #20]	@ (9000fb04 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000faee:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000faf0:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000faf2:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000faf6:	4c04      	ldr	r4, [pc, #16]	@ (9000fb08 <vApplicationGetTimerTaskMemory+0x1c>)
9000faf8:	600c      	str	r4, [r1, #0]
}
9000fafa:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000fafe:	6013      	str	r3, [r2, #0]
}
9000fb00:	4770      	bx	lr
9000fb02:	bf00      	nop
9000fb04:	2400b594 	.word	0x2400b594
9000fb08:	2400b194 	.word	0x2400b194

9000fb0c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000fb0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000fb10:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000fb12:	f001 ff83 	bl	90011a1c <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000fb16:	4a53      	ldr	r2, [pc, #332]	@ (9000fc64 <pvPortMalloc+0x158>)
9000fb18:	6815      	ldr	r5, [r2, #0]
9000fb1a:	2d00      	cmp	r5, #0
9000fb1c:	d035      	beq.n	9000fb8a <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000fb1e:	4b52      	ldr	r3, [pc, #328]	@ (9000fc68 <pvPortMalloc+0x15c>)
9000fb20:	681e      	ldr	r6, [r3, #0]
9000fb22:	4234      	tst	r4, r6
9000fb24:	d12b      	bne.n	9000fb7e <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000fb26:	b354      	cbz	r4, 9000fb7e <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000fb28:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000fb2c:	0764      	lsls	r4, r4, #29
9000fb2e:	d002      	beq.n	9000fb36 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000fb30:	f020 0007 	bic.w	r0, r0, #7
9000fb34:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000fb36:	b310      	cbz	r0, 9000fb7e <pvPortMalloc+0x72>
9000fb38:	f8df e140 	ldr.w	lr, [pc, #320]	@ 9000fc7c <pvPortMalloc+0x170>
9000fb3c:	f8de c000 	ldr.w	ip, [lr]
9000fb40:	4584      	cmp	ip, r0
9000fb42:	d31c      	bcc.n	9000fb7e <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000fb44:	4c49      	ldr	r4, [pc, #292]	@ (9000fc6c <pvPortMalloc+0x160>)
9000fb46:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000fb48:	e003      	b.n	9000fb52 <pvPortMalloc+0x46>
9000fb4a:	681a      	ldr	r2, [r3, #0]
9000fb4c:	b122      	cbz	r2, 9000fb58 <pvPortMalloc+0x4c>
9000fb4e:	461c      	mov	r4, r3
9000fb50:	4613      	mov	r3, r2
9000fb52:	6859      	ldr	r1, [r3, #4]
9000fb54:	4281      	cmp	r1, r0
9000fb56:	d3f8      	bcc.n	9000fb4a <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000fb58:	42ab      	cmp	r3, r5
9000fb5a:	d010      	beq.n	9000fb7e <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000fb5c:	681a      	ldr	r2, [r3, #0]
9000fb5e:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000fb60:	1a0a      	subs	r2, r1, r0
9000fb62:	2a10      	cmp	r2, #16
9000fb64:	d947      	bls.n	9000fbf6 <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000fb66:	181c      	adds	r4, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000fb68:	0761      	lsls	r1, r4, #29
9000fb6a:	d02d      	beq.n	9000fbc8 <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000fb6c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fb70:	f383 8811 	msr	BASEPRI, r3
9000fb74:	f3bf 8f6f 	isb	sy
9000fb78:	f3bf 8f4f 	dsb	sy
9000fb7c:	e7fe      	b.n	9000fb7c <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000fb7e:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000fb80:	f001 ff54 	bl	90011a2c <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000fb84:	4620      	mov	r0, r4
9000fb86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000fb8a:	4b39      	ldr	r3, [pc, #228]	@ (9000fc70 <pvPortMalloc+0x164>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000fb8c:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000fb90:	4e36      	ldr	r6, [pc, #216]	@ (9000fc6c <pvPortMalloc+0x160>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000fb92:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000fb94:	4d37      	ldr	r5, [pc, #220]	@ (9000fc74 <pvPortMalloc+0x168>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000fb96:	bf18      	it	ne
9000fb98:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000fb9a:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000fb9e:	bf18      	it	ne
9000fba0:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000fba4:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000fba6:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000fba8:	6033      	str	r3, [r6, #0]
9000fbaa:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000fbac:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000fbae:	1aeb      	subs	r3, r5, r3
}
9000fbb0:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000fbb2:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fbb6:	4a30      	ldr	r2, [pc, #192]	@ (9000fc78 <pvPortMalloc+0x16c>)
9000fbb8:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fbba:	4a30      	ldr	r2, [pc, #192]	@ (9000fc7c <pvPortMalloc+0x170>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000fbbc:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000fbc0:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000fbc2:	4b29      	ldr	r3, [pc, #164]	@ (9000fc68 <pvPortMalloc+0x15c>)
9000fbc4:	6018      	str	r0, [r3, #0]
}
9000fbc6:	e7ac      	b.n	9000fb22 <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000fbc8:	6062      	str	r2, [r4, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fbca:	4a28      	ldr	r2, [pc, #160]	@ (9000fc6c <pvPortMalloc+0x160>)
						pxBlock->xBlockSize = xWantedSize;
9000fbcc:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fbce:	4617      	mov	r7, r2
9000fbd0:	6812      	ldr	r2, [r2, #0]
9000fbd2:	4294      	cmp	r4, r2
9000fbd4:	d8fb      	bhi.n	9000fbce <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fbd6:	6879      	ldr	r1, [r7, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fbd8:	f8d4 8004 	ldr.w	r8, [r4, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fbdc:	eb07 0901 	add.w	r9, r7, r1
9000fbe0:	454c      	cmp	r4, r9
9000fbe2:	d028      	beq.n	9000fc36 <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fbe4:	eb04 0108 	add.w	r1, r4, r8
9000fbe8:	428a      	cmp	r2, r1
9000fbea:	d02e      	beq.n	9000fc4a <pvPortMalloc+0x13e>
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
		}
	}
	else
	{
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000fbec:	4601      	mov	r1, r0
9000fbee:	6022      	str	r2, [r4, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000fbf0:	42a7      	cmp	r7, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000fbf2:	bf18      	it	ne
9000fbf4:	603c      	strne	r4, [r7, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fbf6:	4820      	ldr	r0, [pc, #128]	@ (9000fc78 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fbf8:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->pxNextFreeBlock = NULL;
9000fbfc:	2500      	movs	r5, #0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000fbfe:	4331      	orrs	r1, r6
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fc00:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc02:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000fc06:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000fc08:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000fc0c:	6059      	str	r1, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000fc0e:	bf38      	it	cc
9000fc10:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000fc12:	481b      	ldr	r0, [pc, #108]	@ (9000fc80 <pvPortMalloc+0x174>)
					pxBlock->pxNextFreeBlock = NULL;
9000fc14:	601d      	str	r5, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000fc16:	6802      	ldr	r2, [r0, #0]
9000fc18:	3201      	adds	r2, #1
9000fc1a:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000fc1c:	f001 ff06 	bl	90011a2c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000fc20:	0763      	lsls	r3, r4, #29
9000fc22:	d0af      	beq.n	9000fb84 <pvPortMalloc+0x78>
9000fc24:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fc28:	f383 8811 	msr	BASEPRI, r3
9000fc2c:	f3bf 8f6f 	isb	sy
9000fc30:	f3bf 8f4f 	dsb	sy
9000fc34:	e7fe      	b.n	9000fc34 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fc36:	4488      	add	r8, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc38:	eb07 0108 	add.w	r1, r7, r8
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fc3c:	f8c7 8004 	str.w	r8, [r7, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc40:	428a      	cmp	r2, r1
9000fc42:	d001      	beq.n	9000fc48 <pvPortMalloc+0x13c>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc44:	6859      	ldr	r1, [r3, #4]
9000fc46:	e7d6      	b.n	9000fbf6 <pvPortMalloc+0xea>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fc48:	463c      	mov	r4, r7
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000fc4a:	42aa      	cmp	r2, r5
9000fc4c:	d006      	beq.n	9000fc5c <pvPortMalloc+0x150>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc4e:	6851      	ldr	r1, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fc50:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc52:	4441      	add	r1, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fc54:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fc56:	6061      	str	r1, [r4, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000fc58:	6859      	ldr	r1, [r3, #4]
9000fc5a:	e7c9      	b.n	9000fbf0 <pvPortMalloc+0xe4>
9000fc5c:	6859      	ldr	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000fc5e:	6022      	str	r2, [r4, #0]
9000fc60:	e7c6      	b.n	9000fbf0 <pvPortMalloc+0xe4>
9000fc62:	bf00      	nop
9000fc64:	2400b86c 	.word	0x2400b86c
9000fc68:	2400b858 	.word	0x2400b858
9000fc6c:	2400b870 	.word	0x2400b870
9000fc70:	2400b878 	.word	0x2400b878
9000fc74:	24023f10 	.word	0x24023f10
9000fc78:	2400b864 	.word	0x2400b864
9000fc7c:	2400b868 	.word	0x2400b868
9000fc80:	2400b860 	.word	0x2400b860

9000fc84 <vPortFree>:
	if( pv != NULL )
9000fc84:	b1d0      	cbz	r0, 9000fcbc <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000fc86:	4a2d      	ldr	r2, [pc, #180]	@ (9000fd3c <vPortFree+0xb8>)
9000fc88:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000fc8c:	6812      	ldr	r2, [r2, #0]
9000fc8e:	4213      	tst	r3, r2
9000fc90:	d00b      	beq.n	9000fcaa <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000fc92:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000fc96:	b191      	cbz	r1, 9000fcbe <vPortFree+0x3a>
9000fc98:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fc9c:	f383 8811 	msr	BASEPRI, r3
9000fca0:	f3bf 8f6f 	isb	sy
9000fca4:	f3bf 8f4f 	dsb	sy
9000fca8:	e7fe      	b.n	9000fca8 <vPortFree+0x24>
9000fcaa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fcae:	f383 8811 	msr	BASEPRI, r3
9000fcb2:	f3bf 8f6f 	isb	sy
9000fcb6:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000fcba:	e7fe      	b.n	9000fcba <vPortFree+0x36>
9000fcbc:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000fcbe:	ea23 0302 	bic.w	r3, r3, r2
{
9000fcc2:	b530      	push	{r4, r5, lr}
9000fcc4:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000fcc6:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000fcca:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000fcce:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000fcd0:	f001 fea4 	bl	90011a1c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000fcd4:	4a1a      	ldr	r2, [pc, #104]	@ (9000fd40 <vPortFree+0xbc>)
9000fcd6:	9801      	ldr	r0, [sp, #4]
9000fcd8:	6813      	ldr	r3, [r2, #0]
9000fcda:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000fcde:	440b      	add	r3, r1
9000fce0:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000fce2:	4b18      	ldr	r3, [pc, #96]	@ (9000fd44 <vPortFree+0xc0>)
9000fce4:	461a      	mov	r2, r3
9000fce6:	681b      	ldr	r3, [r3, #0]
9000fce8:	429c      	cmp	r4, r3
9000fcea:	d8fb      	bhi.n	9000fce4 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000fcec:	6855      	ldr	r5, [r2, #4]
9000fcee:	eb02 0e05 	add.w	lr, r2, r5
9000fcf2:	4574      	cmp	r4, lr
9000fcf4:	d011      	beq.n	9000fd1a <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fcf6:	eb04 0c01 	add.w	ip, r4, r1
9000fcfa:	4563      	cmp	r3, ip
9000fcfc:	d013      	beq.n	9000fd26 <vPortFree+0xa2>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000fcfe:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000fd02:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000fd04:	bf18      	it	ne
9000fd06:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000fd08:	4a0f      	ldr	r2, [pc, #60]	@ (9000fd48 <vPortFree+0xc4>)
9000fd0a:	6813      	ldr	r3, [r2, #0]
9000fd0c:	3301      	adds	r3, #1
9000fd0e:	6013      	str	r3, [r2, #0]
}
9000fd10:	b003      	add	sp, #12
9000fd12:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000fd16:	f001 be89 	b.w	90011a2c <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fd1a:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fd1c:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000fd1e:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000fd20:	4283      	cmp	r3, r0
9000fd22:	d1f1      	bne.n	9000fd08 <vPortFree+0x84>
9000fd24:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000fd26:	4809      	ldr	r0, [pc, #36]	@ (9000fd4c <vPortFree+0xc8>)
9000fd28:	6800      	ldr	r0, [r0, #0]
9000fd2a:	4283      	cmp	r3, r0
9000fd2c:	d003      	beq.n	9000fd36 <vPortFree+0xb2>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fd2e:	e9d3 0500 	ldrd	r0, r5, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000fd32:	4429      	add	r1, r5
9000fd34:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000fd36:	6020      	str	r0, [r4, #0]
9000fd38:	e7e3      	b.n	9000fd02 <vPortFree+0x7e>
9000fd3a:	bf00      	nop
9000fd3c:	2400b858 	.word	0x2400b858
9000fd40:	2400b868 	.word	0x2400b868
9000fd44:	2400b870 	.word	0x2400b870
9000fd48:	2400b85c 	.word	0x2400b85c
9000fd4c:	2400b86c 	.word	0x2400b86c

9000fd50 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000fd50:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000fd54:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000fd58:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000fd5a:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000fd5c:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000fd5e:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000fd60:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000fd64:	4770      	bx	lr
9000fd66:	bf00      	nop

9000fd68 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000fd68:	2300      	movs	r3, #0
9000fd6a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000fd6c:	4770      	bx	lr
9000fd6e:	bf00      	nop

9000fd70 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000fd70:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000fd72:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000fd74:	3301      	adds	r3, #1
{
9000fd76:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000fd78:	6894      	ldr	r4, [r2, #8]
9000fd7a:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000fd7e:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000fd80:	6091      	str	r1, [r2, #8]
}
9000fd82:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000fd86:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000fd88:	6003      	str	r3, [r0, #0]
}
9000fd8a:	4770      	bx	lr

9000fd8c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000fd8c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000fd8e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000fd90:	1c6b      	adds	r3, r5, #1
9000fd92:	d010      	beq.n	9000fdb6 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000fd94:	f100 0308 	add.w	r3, r0, #8
9000fd98:	461c      	mov	r4, r3
9000fd9a:	685b      	ldr	r3, [r3, #4]
9000fd9c:	681a      	ldr	r2, [r3, #0]
9000fd9e:	42aa      	cmp	r2, r5
9000fda0:	d9fa      	bls.n	9000fd98 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000fda2:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000fda4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000fda6:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000fda8:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000fdaa:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000fdac:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000fdae:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000fdb0:	6002      	str	r2, [r0, #0]
}
9000fdb2:	bc30      	pop	{r4, r5}
9000fdb4:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000fdb6:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000fdb8:	6863      	ldr	r3, [r4, #4]
9000fdba:	e7f2      	b.n	9000fda2 <vListInsert+0x16>

9000fdbc <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000fdbc:	6903      	ldr	r3, [r0, #16]
{
9000fdbe:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000fdc0:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000fdc2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000fdc6:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000fdc8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000fdcc:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000fdce:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000fdd0:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000fdd4:	bf08      	it	eq
9000fdd6:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000fdd8:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000fdda:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000fddc:	3a01      	subs	r2, #1
9000fdde:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000fde0:	6818      	ldr	r0, [r3, #0]
}
9000fde2:	4770      	bx	lr

9000fde4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000fde4:	4808      	ldr	r0, [pc, #32]	@ (9000fe08 <prvPortStartFirstTask+0x24>)
9000fde6:	6800      	ldr	r0, [r0, #0]
9000fde8:	6800      	ldr	r0, [r0, #0]
9000fdea:	f380 8808 	msr	MSP, r0
9000fdee:	f04f 0000 	mov.w	r0, #0
9000fdf2:	f380 8814 	msr	CONTROL, r0
9000fdf6:	b662      	cpsie	i
9000fdf8:	b661      	cpsie	f
9000fdfa:	f3bf 8f4f 	dsb	sy
9000fdfe:	f3bf 8f6f 	isb	sy
9000fe02:	df00      	svc	0
9000fe04:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000fe06:	0000      	.short	0x0000
9000fe08:	e000ed08 	.word	0xe000ed08

9000fe0c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000fe0c:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000fe1c <vPortEnableVFP+0x10>
9000fe10:	6801      	ldr	r1, [r0, #0]
9000fe12:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000fe16:	6001      	str	r1, [r0, #0]
9000fe18:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000fe1a:	0000      	.short	0x0000
9000fe1c:	e000ed88 	.word	0xe000ed88

9000fe20 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000fe20:	4b0e      	ldr	r3, [pc, #56]	@ (9000fe5c <prvTaskExitError+0x3c>)
{
9000fe22:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000fe24:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000fe26:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000fe28:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000fe2a:	3301      	adds	r3, #1
9000fe2c:	d008      	beq.n	9000fe40 <prvTaskExitError+0x20>
9000fe2e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe32:	f383 8811 	msr	BASEPRI, r3
9000fe36:	f3bf 8f6f 	isb	sy
9000fe3a:	f3bf 8f4f 	dsb	sy
9000fe3e:	e7fe      	b.n	9000fe3e <prvTaskExitError+0x1e>
9000fe40:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fe44:	f383 8811 	msr	BASEPRI, r3
9000fe48:	f3bf 8f6f 	isb	sy
9000fe4c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000fe50:	9b01      	ldr	r3, [sp, #4]
9000fe52:	2b00      	cmp	r3, #0
9000fe54:	d0fc      	beq.n	9000fe50 <prvTaskExitError+0x30>
}
9000fe56:	b002      	add	sp, #8
9000fe58:	4770      	bx	lr
9000fe5a:	bf00      	nop
9000fe5c:	2400013c 	.word	0x2400013c

9000fe60 <pxPortInitialiseStack>:
{
9000fe60:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000fe62:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000fe66:	4809      	ldr	r0, [pc, #36]	@ (9000fe8c <pxPortInitialiseStack+0x2c>)
{
9000fe68:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000fe6a:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000fe6e:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000fe72:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000fe76:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000fe7a:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000fe7e:	f06f 0102 	mvn.w	r1, #2
}
9000fe82:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000fe86:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000fe8a:	4770      	bx	lr
9000fe8c:	9000fe21 	.word	0x9000fe21

9000fe90 <SVC_Handler>:
	__asm volatile (
9000fe90:	4b07      	ldr	r3, [pc, #28]	@ (9000feb0 <pxCurrentTCBConst2>)
9000fe92:	6819      	ldr	r1, [r3, #0]
9000fe94:	6808      	ldr	r0, [r1, #0]
9000fe96:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fe9a:	f380 8809 	msr	PSP, r0
9000fe9e:	f3bf 8f6f 	isb	sy
9000fea2:	f04f 0000 	mov.w	r0, #0
9000fea6:	f380 8811 	msr	BASEPRI, r0
9000feaa:	4770      	bx	lr
9000feac:	f3af 8000 	nop.w

9000feb0 <pxCurrentTCBConst2>:
9000feb0:	24024458 	.word	0x24024458

9000feb4 <vPortEnterCritical>:
9000feb4:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000feb8:	f383 8811 	msr	BASEPRI, r3
9000febc:	f3bf 8f6f 	isb	sy
9000fec0:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000fec4:	4a0b      	ldr	r2, [pc, #44]	@ (9000fef4 <vPortEnterCritical+0x40>)
9000fec6:	6813      	ldr	r3, [r2, #0]
9000fec8:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000feca:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000fecc:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000fece:	d000      	beq.n	9000fed2 <vPortEnterCritical+0x1e>
}
9000fed0:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000fed2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000fed6:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000feda:	b2db      	uxtb	r3, r3
9000fedc:	2b00      	cmp	r3, #0
9000fede:	d0f7      	beq.n	9000fed0 <vPortEnterCritical+0x1c>
9000fee0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fee4:	f383 8811 	msr	BASEPRI, r3
9000fee8:	f3bf 8f6f 	isb	sy
9000feec:	f3bf 8f4f 	dsb	sy
9000fef0:	e7fe      	b.n	9000fef0 <vPortEnterCritical+0x3c>
9000fef2:	bf00      	nop
9000fef4:	2400013c 	.word	0x2400013c

9000fef8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000fef8:	4a08      	ldr	r2, [pc, #32]	@ (9000ff1c <vPortExitCritical+0x24>)
9000fefa:	6813      	ldr	r3, [r2, #0]
9000fefc:	b943      	cbnz	r3, 9000ff10 <vPortExitCritical+0x18>
9000fefe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff02:	f383 8811 	msr	BASEPRI, r3
9000ff06:	f3bf 8f6f 	isb	sy
9000ff0a:	f3bf 8f4f 	dsb	sy
9000ff0e:	e7fe      	b.n	9000ff0e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000ff10:	3b01      	subs	r3, #1
9000ff12:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000ff14:	b90b      	cbnz	r3, 9000ff1a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000ff16:	f383 8811 	msr	BASEPRI, r3
}
9000ff1a:	4770      	bx	lr
9000ff1c:	2400013c 	.word	0x2400013c

9000ff20 <PendSV_Handler>:
	__asm volatile
9000ff20:	f3ef 8009 	mrs	r0, PSP
9000ff24:	f3bf 8f6f 	isb	sy
9000ff28:	4b15      	ldr	r3, [pc, #84]	@ (9000ff80 <pxCurrentTCBConst>)
9000ff2a:	681a      	ldr	r2, [r3, #0]
9000ff2c:	f01e 0f10 	tst.w	lr, #16
9000ff30:	bf08      	it	eq
9000ff32:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000ff36:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ff3a:	6010      	str	r0, [r2, #0]
9000ff3c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000ff40:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000ff44:	f380 8811 	msr	BASEPRI, r0
9000ff48:	f3bf 8f4f 	dsb	sy
9000ff4c:	f3bf 8f6f 	isb	sy
9000ff50:	f001 fda8 	bl	90011aa4 <vTaskSwitchContext>
9000ff54:	f04f 0000 	mov.w	r0, #0
9000ff58:	f380 8811 	msr	BASEPRI, r0
9000ff5c:	bc09      	pop	{r0, r3}
9000ff5e:	6819      	ldr	r1, [r3, #0]
9000ff60:	6808      	ldr	r0, [r1, #0]
9000ff62:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ff66:	f01e 0f10 	tst.w	lr, #16
9000ff6a:	bf08      	it	eq
9000ff6c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000ff70:	f380 8809 	msr	PSP, r0
9000ff74:	f3bf 8f6f 	isb	sy
9000ff78:	4770      	bx	lr
9000ff7a:	bf00      	nop
9000ff7c:	f3af 8000 	nop.w

9000ff80 <pxCurrentTCBConst>:
9000ff80:	24024458 	.word	0x24024458

9000ff84 <xPortSysTickHandler>:
{
9000ff84:	b508      	push	{r3, lr}
	__asm volatile
9000ff86:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ff8a:	f383 8811 	msr	BASEPRI, r3
9000ff8e:	f3bf 8f6f 	isb	sy
9000ff92:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000ff96:	f001 fd5f 	bl	90011a58 <xTaskIncrementTick>
9000ff9a:	b128      	cbz	r0, 9000ffa8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000ff9c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ffa0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000ffa4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000ffa8:	2300      	movs	r3, #0
9000ffaa:	f383 8811 	msr	BASEPRI, r3
}
9000ffae:	bd08      	pop	{r3, pc}

9000ffb0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000ffb0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000ffb4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ffb6:	4806      	ldr	r0, [pc, #24]	@ (9000ffd0 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000ffb8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ffba:	4906      	ldr	r1, [pc, #24]	@ (9000ffd4 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000ffbc:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ffbe:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000ffc0:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000ffc2:	fba1 1303 	umull	r1, r3, r1, r3
9000ffc6:	099b      	lsrs	r3, r3, #6
9000ffc8:	3b01      	subs	r3, #1
9000ffca:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000ffcc:	6110      	str	r0, [r2, #16]
}
9000ffce:	4770      	bx	lr
9000ffd0:	24000130 	.word	0x24000130
9000ffd4:	10624dd3 	.word	0x10624dd3

9000ffd8 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000ffd8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000ffdc:	4a48      	ldr	r2, [pc, #288]	@ (90010100 <xPortStartScheduler+0x128>)
9000ffde:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000ffe2:	4291      	cmp	r1, r2
9000ffe4:	d041      	beq.n	9001006a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000ffe6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000ffea:	4b46      	ldr	r3, [pc, #280]	@ (90010104 <xPortStartScheduler+0x12c>)
9000ffec:	429a      	cmp	r2, r3
9000ffee:	d033      	beq.n	90010058 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000fff0:	4b45      	ldr	r3, [pc, #276]	@ (90010108 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000fff2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000fff6:	4845      	ldr	r0, [pc, #276]	@ (9001010c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000fff8:	4945      	ldr	r1, [pc, #276]	@ (90010110 <xPortStartScheduler+0x138>)
{
9000fffa:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000fffc:	781a      	ldrb	r2, [r3, #0]
{
9000fffe:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
90010000:	b2d2      	uxtb	r2, r2
90010002:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
90010004:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
90010006:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001000a:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9001000c:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9001000e:	b2db      	uxtb	r3, r3
90010010:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010014:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010018:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9001001c:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010020:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
90010022:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010024:	d50f      	bpl.n	90010046 <xPortStartScheduler+0x6e>
90010026:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90010028:	f89d 3007 	ldrb.w	r3, [sp, #7]
9001002c:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9001002e:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
90010030:	005b      	lsls	r3, r3, #1
90010032:	b2db      	uxtb	r3, r3
90010034:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
90010038:	f89d 3007 	ldrb.w	r3, [sp, #7]
9001003c:	061b      	lsls	r3, r3, #24
9001003e:	d4f3      	bmi.n	90010028 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
90010040:	2903      	cmp	r1, #3
90010042:	d01b      	beq.n	9001007c <xPortStartScheduler+0xa4>
90010044:	6001      	str	r1, [r0, #0]
	__asm volatile
90010046:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001004a:	f383 8811 	msr	BASEPRI, r3
9001004e:	f3bf 8f6f 	isb	sy
90010052:	f3bf 8f4f 	dsb	sy
90010056:	e7fe      	b.n	90010056 <xPortStartScheduler+0x7e>
90010058:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001005c:	f383 8811 	msr	BASEPRI, r3
90010060:	f3bf 8f6f 	isb	sy
90010064:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
90010068:	e7fe      	b.n	90010068 <xPortStartScheduler+0x90>
9001006a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001006e:	f383 8811 	msr	BASEPRI, r3
90010072:	f3bf 8f6f 	isb	sy
90010076:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9001007a:	e7fe      	b.n	9001007a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9001007c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9001007e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
90010082:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
90010086:	4a20      	ldr	r2, [pc, #128]	@ (90010108 <xPortStartScheduler+0x130>)
90010088:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9001008a:	4e22      	ldr	r6, [pc, #136]	@ (90010114 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9001008c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9001008e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
90010090:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
90010092:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
90010096:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9001009a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9001009e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
900100a2:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
900100a6:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
900100aa:	f7ff ff81 	bl	9000ffb0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
900100ae:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
900100b0:	f7ff feac 	bl	9000fe0c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
900100b4:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
900100b8:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
900100bc:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
900100c0:	f7ff fe90 	bl	9000fde4 <prvPortStartFirstTask>
	vTaskSwitchContext();
900100c4:	f001 fcee 	bl	90011aa4 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
900100c8:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
900100ca:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
900100cc:	3301      	adds	r3, #1
900100ce:	d008      	beq.n	900100e2 <xPortStartScheduler+0x10a>
900100d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900100d4:	f383 8811 	msr	BASEPRI, r3
900100d8:	f3bf 8f6f 	isb	sy
900100dc:	f3bf 8f4f 	dsb	sy
900100e0:	e7fe      	b.n	900100e0 <xPortStartScheduler+0x108>
900100e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
900100e6:	f383 8811 	msr	BASEPRI, r3
900100ea:	f3bf 8f6f 	isb	sy
900100ee:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
900100f2:	9b03      	ldr	r3, [sp, #12]
900100f4:	2b00      	cmp	r3, #0
900100f6:	d0fc      	beq.n	900100f2 <xPortStartScheduler+0x11a>
}
900100f8:	2000      	movs	r0, #0
900100fa:	b004      	add	sp, #16
900100fc:	bd70      	pop	{r4, r5, r6, pc}
900100fe:	bf00      	nop
90010100:	410fc271 	.word	0x410fc271
90010104:	410fc270 	.word	0x410fc270
90010108:	e000e400 	.word	0xe000e400
9001010c:	24023f18 	.word	0x24023f18
90010110:	24023f1c 	.word	0x24023f1c
90010114:	2400013c 	.word	0x2400013c

90010118 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
90010118:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9001011c:	2b0f      	cmp	r3, #15
9001011e:	d90e      	bls.n	9001013e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010120:	4911      	ldr	r1, [pc, #68]	@ (90010168 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010122:	4a12      	ldr	r2, [pc, #72]	@ (9001016c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
90010124:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
90010126:	7812      	ldrb	r2, [r2, #0]
90010128:	429a      	cmp	r2, r3
9001012a:	d908      	bls.n	9001013e <vPortValidateInterruptPriority+0x26>
9001012c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010130:	f383 8811 	msr	BASEPRI, r3
90010134:	f3bf 8f6f 	isb	sy
90010138:	f3bf 8f4f 	dsb	sy
9001013c:	e7fe      	b.n	9001013c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9001013e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010142:	4a0b      	ldr	r2, [pc, #44]	@ (90010170 <vPortValidateInterruptPriority+0x58>)
90010144:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
90010148:	6812      	ldr	r2, [r2, #0]
9001014a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9001014e:	4293      	cmp	r3, r2
90010150:	d908      	bls.n	90010164 <vPortValidateInterruptPriority+0x4c>
90010152:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010156:	f383 8811 	msr	BASEPRI, r3
9001015a:	f3bf 8f6f 	isb	sy
9001015e:	f3bf 8f4f 	dsb	sy
90010162:	e7fe      	b.n	90010162 <vPortValidateInterruptPriority+0x4a>
	}
90010164:	4770      	bx	lr
90010166:	bf00      	nop
90010168:	e000e3f0 	.word	0xe000e3f0
9001016c:	24023f1c 	.word	0x24023f1c
90010170:	24023f18 	.word	0x24023f18

90010174 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
90010174:	b570      	push	{r4, r5, r6, lr}
90010176:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
90010178:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9001017a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001017c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9001017e:	b92a      	cbnz	r2, 9001018c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010180:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010182:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010184:	b34e      	cbz	r6, 900101da <prvCopyDataToQueue+0x66>
BaseType_t xReturn = pdFALSE;
90010186:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
90010188:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9001018a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9001018c:	b97e      	cbnz	r6, 900101ae <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9001018e:	6840      	ldr	r0, [r0, #4]
90010190:	f01c fbd7 	bl	9002c942 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010194:	6863      	ldr	r3, [r4, #4]
90010196:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
90010198:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001019a:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9001019c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9001019e:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
900101a0:	bf24      	itt	cs
900101a2:	6823      	ldrcs	r3, [r4, #0]
900101a4:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101a6:	3501      	adds	r5, #1
BaseType_t xReturn = pdFALSE;
900101a8:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900101aa:	63a5      	str	r5, [r4, #56]	@ 0x38
}
900101ac:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
900101ae:	68c0      	ldr	r0, [r0, #12]
900101b0:	f01c fbc7 	bl	9002c942 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
900101b4:	6c22      	ldr	r2, [r4, #64]	@ 0x40
900101b6:	68e3      	ldr	r3, [r4, #12]
900101b8:	4251      	negs	r1, r2
900101ba:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900101bc:	6822      	ldr	r2, [r4, #0]
900101be:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
900101c0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
900101c2:	d202      	bcs.n	900101ca <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
900101c4:	68a3      	ldr	r3, [r4, #8]
900101c6:	440b      	add	r3, r1
900101c8:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
900101ca:	2e02      	cmp	r6, #2
900101cc:	d1eb      	bne.n	900101a6 <prvCopyDataToQueue+0x32>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
900101ce:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
900101d0:	f04f 0000 	mov.w	r0, #0
900101d4:	bf38      	it	cc
900101d6:	2501      	movcc	r5, #1
900101d8:	e7d6      	b.n	90010188 <prvCopyDataToQueue+0x14>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
900101da:	6880      	ldr	r0, [r0, #8]
900101dc:	f001 fe34 	bl	90011e48 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
900101e0:	60a6      	str	r6, [r4, #8]
900101e2:	e7d1      	b.n	90010188 <prvCopyDataToQueue+0x14>

900101e4 <xQueueGenericCreateStatic>:
	{
900101e4:	b530      	push	{r4, r5, lr}
900101e6:	b083      	sub	sp, #12
900101e8:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
900101ec:	b940      	cbnz	r0, 90010200 <xQueueGenericCreateStatic+0x1c>
900101ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
900101f2:	f383 8811 	msr	BASEPRI, r3
900101f6:	f3bf 8f6f 	isb	sy
900101fa:	f3bf 8f4f 	dsb	sy
900101fe:	e7fe      	b.n	900101fe <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
90010200:	461c      	mov	r4, r3
90010202:	b153      	cbz	r3, 9001021a <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
90010204:	b30a      	cbz	r2, 9001024a <xQueueGenericCreateStatic+0x66>
90010206:	b989      	cbnz	r1, 9001022c <xQueueGenericCreateStatic+0x48>
90010208:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001020c:	f383 8811 	msr	BASEPRI, r3
90010210:	f3bf 8f6f 	isb	sy
90010214:	f3bf 8f4f 	dsb	sy
90010218:	e7fe      	b.n	90010218 <xQueueGenericCreateStatic+0x34>
9001021a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001021e:	f383 8811 	msr	BASEPRI, r3
90010222:	f3bf 8f6f 	isb	sy
90010226:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9001022a:	e7fe      	b.n	9001022a <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9001022c:	b16a      	cbz	r2, 9001024a <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9001022e:	2350      	movs	r3, #80	@ 0x50
90010230:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
90010232:	9b01      	ldr	r3, [sp, #4]
90010234:	2b50      	cmp	r3, #80	@ 0x50
90010236:	d013      	beq.n	90010260 <xQueueGenericCreateStatic+0x7c>
90010238:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001023c:	f383 8811 	msr	BASEPRI, r3
90010240:	f3bf 8f6f 	isb	sy
90010244:	f3bf 8f4f 	dsb	sy
90010248:	e7fe      	b.n	90010248 <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9001024a:	2900      	cmp	r1, #0
9001024c:	d0ef      	beq.n	9001022e <xQueueGenericCreateStatic+0x4a>
9001024e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010252:	f383 8811 	msr	BASEPRI, r3
90010256:	f3bf 8f6f 	isb	sy
9001025a:	f3bf 8f4f 	dsb	sy
9001025e:	e7fe      	b.n	9001025e <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010260:	2900      	cmp	r1, #0
90010262:	bf08      	it	eq
90010264:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
90010266:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010268:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9001026a:	63e0      	str	r0, [r4, #60]	@ 0x3c
9001026c:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9001026e:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010270:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
90010274:	f7ff fe1e 	bl	9000feb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010278:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9001027a:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9001027e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010280:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
90010284:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010288:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001028a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001028c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001028e:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010290:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
90010292:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010294:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010296:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
90010298:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9001029c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900102a0:	f7ff fd56 	bl	9000fd50 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900102a4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900102a8:	f7ff fd52 	bl	9000fd50 <vListInitialise>
	taskEXIT_CRITICAL();
900102ac:	f7ff fe24 	bl	9000fef8 <vPortExitCritical>
	}
900102b0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
900102b2:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
900102b6:	b003      	add	sp, #12
900102b8:	bd30      	pop	{r4, r5, pc}
900102ba:	bf00      	nop

900102bc <xQueueGenericCreate>:
	{
900102bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
900102be:	b940      	cbnz	r0, 900102d2 <xQueueGenericCreate+0x16>
900102c0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900102c4:	f383 8811 	msr	BASEPRI, r3
900102c8:	f3bf 8f6f 	isb	sy
900102cc:	f3bf 8f4f 	dsb	sy
900102d0:	e7fe      	b.n	900102d0 <xQueueGenericCreate+0x14>
900102d2:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900102d4:	fb01 f000 	mul.w	r0, r1, r0
900102d8:	460e      	mov	r6, r1
900102da:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
900102dc:	3050      	adds	r0, #80	@ 0x50
900102de:	f7ff fc15 	bl	9000fb0c <pvPortMalloc>
		if( pxNewQueue != NULL )
900102e2:	4604      	mov	r4, r0
900102e4:	b340      	cbz	r0, 90010338 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
900102e6:	2300      	movs	r3, #0
900102e8:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
900102ec:	b336      	cbz	r6, 9001033c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102ee:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
900102f2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
900102f4:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
900102f8:	f7ff fddc 	bl	9000feb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900102fc:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900102fe:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010302:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010304:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
90010308:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001030c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001030e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010310:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010312:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
90010314:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
90010316:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010318:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001031a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9001031c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
90010320:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010324:	f7ff fd14 	bl	9000fd50 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010328:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9001032c:	f7ff fd10 	bl	9000fd50 <vListInitialise>
	taskEXIT_CRITICAL();
90010330:	f7ff fde2 	bl	9000fef8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010334:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
90010338:	4620      	mov	r0, r4
9001033a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9001033c:	4603      	mov	r3, r0
9001033e:	e7d8      	b.n	900102f2 <xQueueGenericCreate+0x36>

90010340 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
90010340:	b940      	cbnz	r0, 90010354 <xQueueCreateCountingSemaphoreStatic+0x14>
90010342:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010346:	f383 8811 	msr	BASEPRI, r3
9001034a:	f3bf 8f6f 	isb	sy
9001034e:	f3bf 8f4f 	dsb	sy
90010352:	e7fe      	b.n	90010352 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
90010354:	4288      	cmp	r0, r1
90010356:	d208      	bcs.n	9001036a <xQueueCreateCountingSemaphoreStatic+0x2a>
90010358:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001035c:	f383 8811 	msr	BASEPRI, r3
90010360:	f3bf 8f6f 	isb	sy
90010364:	f3bf 8f4f 	dsb	sy
90010368:	e7fe      	b.n	90010368 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9001036a:	b530      	push	{r4, r5, lr}
9001036c:	4614      	mov	r4, r2
9001036e:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
90010370:	2a00      	cmp	r2, #0
90010372:	d03b      	beq.n	900103ec <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
90010374:	2350      	movs	r3, #80	@ 0x50
90010376:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
90010378:	9b03      	ldr	r3, [sp, #12]
9001037a:	2b50      	cmp	r3, #80	@ 0x50
9001037c:	d008      	beq.n	90010390 <xQueueCreateCountingSemaphoreStatic+0x50>
9001037e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010382:	f383 8811 	msr	BASEPRI, r3
90010386:	f3bf 8f6f 	isb	sy
9001038a:	f3bf 8f4f 	dsb	sy
9001038e:	e7fe      	b.n	9001038e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
90010390:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010392:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
90010394:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
90010396:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
90010398:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9001039c:	6415      	str	r5, [r2, #64]	@ 0x40
9001039e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
900103a0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
900103a2:	f7ff fd87 	bl	9000feb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103a6:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
900103a8:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
900103aa:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103ac:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
900103b0:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103b4:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103b6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103b8:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103ba:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
900103bc:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900103be:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
900103c2:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
900103c4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
900103c8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
900103cc:	f7ff fcc0 	bl	9000fd50 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
900103d0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900103d4:	f7ff fcbc 	bl	9000fd50 <vListInitialise>
	taskEXIT_CRITICAL();
900103d8:	f7ff fd8e 	bl	9000fef8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
900103dc:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900103de:	9901      	ldr	r1, [sp, #4]
	}
900103e0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
900103e2:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
900103e6:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
900103e8:	b005      	add	sp, #20
900103ea:	bd30      	pop	{r4, r5, pc}
900103ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
900103f0:	f383 8811 	msr	BASEPRI, r3
900103f4:	f3bf 8f6f 	isb	sy
900103f8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
900103fc:	e7fe      	b.n	900103fc <xQueueCreateCountingSemaphoreStatic+0xbc>
900103fe:	bf00      	nop

90010400 <xQueueCreateCountingSemaphore>:
	{
90010400:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
90010402:	b940      	cbnz	r0, 90010416 <xQueueCreateCountingSemaphore+0x16>
90010404:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010408:	f383 8811 	msr	BASEPRI, r3
9001040c:	f3bf 8f6f 	isb	sy
90010410:	f3bf 8f4f 	dsb	sy
90010414:	e7fe      	b.n	90010414 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
90010416:	4288      	cmp	r0, r1
90010418:	4604      	mov	r4, r0
9001041a:	460e      	mov	r6, r1
9001041c:	d208      	bcs.n	90010430 <xQueueCreateCountingSemaphore+0x30>
9001041e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010422:	f383 8811 	msr	BASEPRI, r3
90010426:	f3bf 8f6f 	isb	sy
9001042a:	f3bf 8f4f 	dsb	sy
9001042e:	e7fe      	b.n	9001042e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
90010430:	2050      	movs	r0, #80	@ 0x50
90010432:	f7ff fb6b 	bl	9000fb0c <pvPortMalloc>
		if( pxNewQueue != NULL )
90010436:	4605      	mov	r5, r0
90010438:	b330      	cbz	r0, 90010488 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9001043a:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9001043c:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9001043e:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
90010440:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
90010444:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
90010446:	f7ff fd35 	bl	9000feb4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001044a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9001044c:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9001044e:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
90010452:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010454:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
90010458:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001045c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9001045e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010460:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010462:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
90010464:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
90010466:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
90010468:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9001046c:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
90010470:	f7ff fc6e 	bl	9000fd50 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
90010474:	f105 0024 	add.w	r0, r5, #36	@ 0x24
90010478:	f7ff fc6a 	bl	9000fd50 <vListInitialise>
	taskEXIT_CRITICAL();
9001047c:	f7ff fd3c 	bl	9000fef8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
90010480:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
90010482:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
90010484:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
90010488:	4628      	mov	r0, r5
9001048a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9001048c <xQueueGenericSend>:
{
9001048c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90010490:	b084      	sub	sp, #16
90010492:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
90010494:	2800      	cmp	r0, #0
90010496:	f000 8103 	beq.w	900106a0 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9001049a:	4688      	mov	r8, r1
9001049c:	4604      	mov	r4, r0
9001049e:	461f      	mov	r7, r3
900104a0:	2900      	cmp	r1, #0
900104a2:	f000 8097 	beq.w	900105d4 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
900104a6:	2f02      	cmp	r7, #2
900104a8:	d10b      	bne.n	900104c2 <xQueueGenericSend+0x36>
900104aa:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900104ac:	2b01      	cmp	r3, #1
900104ae:	d008      	beq.n	900104c2 <xQueueGenericSend+0x36>
900104b0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900104b4:	f383 8811 	msr	BASEPRI, r3
900104b8:	f3bf 8f6f 	isb	sy
900104bc:	f3bf 8f4f 	dsb	sy
900104c0:	e7fe      	b.n	900104c0 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900104c2:	f001 fc71 	bl	90011da8 <xTaskGetSchedulerState>
900104c6:	2800      	cmp	r0, #0
900104c8:	f000 80f3 	beq.w	900106b2 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900104cc:	f1a7 0902 	sub.w	r9, r7, #2
900104d0:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900104d2:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900104d6:	fab9 f989 	clz	r9, r9
900104da:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
900104de:	f7ff fce9 	bl	9000feb4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900104e2:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
900104e4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900104e6:	429a      	cmp	r2, r3
900104e8:	f0c0 80f0 	bcc.w	900106cc <xQueueGenericSend+0x240>
900104ec:	f1b9 0f00 	cmp.w	r9, #0
900104f0:	f040 80ec 	bne.w	900106cc <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
900104f4:	9b01      	ldr	r3, [sp, #4]
900104f6:	2b00      	cmp	r3, #0
900104f8:	f000 8101 	beq.w	900106fe <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
900104fc:	2d00      	cmp	r5, #0
900104fe:	f000 80cb 	beq.w	90010698 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
90010502:	f7ff fcf9 	bl	9000fef8 <vPortExitCritical>
		vTaskSuspendAll();
90010506:	f001 fa89 	bl	90011a1c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9001050a:	f7ff fcd3 	bl	9000feb4 <vPortEnterCritical>
9001050e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010512:	2bff      	cmp	r3, #255	@ 0xff
90010514:	d102      	bne.n	9001051c <xQueueGenericSend+0x90>
90010516:	2300      	movs	r3, #0
90010518:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9001051c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010520:	2bff      	cmp	r3, #255	@ 0xff
90010522:	d102      	bne.n	9001052a <xQueueGenericSend+0x9e>
90010524:	2300      	movs	r3, #0
90010526:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9001052a:	f7ff fce5 	bl	9000fef8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9001052e:	a901      	add	r1, sp, #4
90010530:	a802      	add	r0, sp, #8
90010532:	f001 fbf1 	bl	90011d18 <xTaskCheckForTimeOut>
90010536:	2800      	cmp	r0, #0
90010538:	f040 80e5 	bne.w	90010706 <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9001053c:	f7ff fcba 	bl	9000feb4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
90010540:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90010542:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010544:	429a      	cmp	r2, r3
90010546:	d052      	beq.n	900105ee <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
90010548:	f7ff fcd6 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001054c:	f7ff fcb2 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010550:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
90010554:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010556:	2d00      	cmp	r5, #0
90010558:	dc04      	bgt.n	90010564 <xQueueGenericSend+0xd8>
9001055a:	e011      	b.n	90010580 <xQueueGenericSend+0xf4>
			--cTxLock;
9001055c:	1e6a      	subs	r2, r5, #1
9001055e:	b2d3      	uxtb	r3, r2
90010560:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010562:	b16b      	cbz	r3, 90010580 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010564:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010566:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010568:	b153      	cbz	r3, 90010580 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001056a:	f001 fb83 	bl	90011c74 <xTaskRemoveFromEventList>
9001056e:	2800      	cmp	r0, #0
90010570:	d0f4      	beq.n	9001055c <xQueueGenericSend+0xd0>
						vTaskMissedYield();
90010572:	f001 fc13 	bl	90011d9c <vTaskMissedYield>
			--cTxLock;
90010576:	1e6a      	subs	r2, r5, #1
90010578:	b2d3      	uxtb	r3, r2
9001057a:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001057c:	2b00      	cmp	r3, #0
9001057e:	d1f1      	bne.n	90010564 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
90010580:	23ff      	movs	r3, #255	@ 0xff
90010582:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010586:	f7ff fcb7 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001058a:	f7ff fc93 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001058e:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
90010592:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010594:	2d00      	cmp	r5, #0
90010596:	dd14      	ble.n	900105c2 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010598:	f104 0a10 	add.w	sl, r4, #16
9001059c:	e003      	b.n	900105a6 <xQueueGenericSend+0x11a>
				--cRxLock;
9001059e:	1e6a      	subs	r2, r5, #1
900105a0:	b2d3      	uxtb	r3, r2
900105a2:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
900105a4:	b16b      	cbz	r3, 900105c2 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900105a6:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900105a8:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900105aa:	b153      	cbz	r3, 900105c2 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900105ac:	f001 fb62 	bl	90011c74 <xTaskRemoveFromEventList>
900105b0:	2800      	cmp	r0, #0
900105b2:	d0f4      	beq.n	9001059e <xQueueGenericSend+0x112>
					vTaskMissedYield();
900105b4:	f001 fbf2 	bl	90011d9c <vTaskMissedYield>
				--cRxLock;
900105b8:	1e6a      	subs	r2, r5, #1
900105ba:	b2d3      	uxtb	r3, r2
900105bc:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
900105be:	2b00      	cmp	r3, #0
900105c0:	d1f1      	bne.n	900105a6 <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
900105c2:	23ff      	movs	r3, #255	@ 0xff
900105c4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
900105c8:	f7ff fc96 	bl	9000fef8 <vPortExitCritical>
				( void ) xTaskResumeAll();
900105cc:	f001 fa2e 	bl	90011a2c <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900105d0:	2501      	movs	r5, #1
900105d2:	e784      	b.n	900104de <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900105d4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
900105d6:	2b00      	cmp	r3, #0
900105d8:	f43f af65 	beq.w	900104a6 <xQueueGenericSend+0x1a>
900105dc:	f04f 0350 	mov.w	r3, #80	@ 0x50
900105e0:	f383 8811 	msr	BASEPRI, r3
900105e4:	f3bf 8f6f 	isb	sy
900105e8:	f3bf 8f4f 	dsb	sy
900105ec:	e7fe      	b.n	900105ec <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
900105ee:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
900105f2:	f7ff fc81 	bl	9000fef8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
900105f6:	9901      	ldr	r1, [sp, #4]
900105f8:	4650      	mov	r0, sl
900105fa:	f001 faad 	bl	90011b58 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
900105fe:	f7ff fc59 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010602:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010606:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010608:	2d00      	cmp	r5, #0
9001060a:	dc04      	bgt.n	90010616 <xQueueGenericSend+0x18a>
9001060c:	e011      	b.n	90010632 <xQueueGenericSend+0x1a6>
			--cTxLock;
9001060e:	1e6b      	subs	r3, r5, #1
90010610:	b2da      	uxtb	r2, r3
90010612:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010614:	b16a      	cbz	r2, 90010632 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010616:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010618:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001061a:	b153      	cbz	r3, 90010632 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001061c:	f001 fb2a 	bl	90011c74 <xTaskRemoveFromEventList>
90010620:	2800      	cmp	r0, #0
90010622:	d0f4      	beq.n	9001060e <xQueueGenericSend+0x182>
						vTaskMissedYield();
90010624:	f001 fbba 	bl	90011d9c <vTaskMissedYield>
			--cTxLock;
90010628:	1e6b      	subs	r3, r5, #1
9001062a:	b2da      	uxtb	r2, r3
9001062c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001062e:	2a00      	cmp	r2, #0
90010630:	d1f1      	bne.n	90010616 <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
90010632:	23ff      	movs	r3, #255	@ 0xff
90010634:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010638:	f7ff fc5e 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001063c:	f7ff fc3a 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010640:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010644:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010646:	2d00      	cmp	r5, #0
90010648:	dc04      	bgt.n	90010654 <xQueueGenericSend+0x1c8>
9001064a:	e011      	b.n	90010670 <xQueueGenericSend+0x1e4>
				--cRxLock;
9001064c:	1e6b      	subs	r3, r5, #1
9001064e:	b2da      	uxtb	r2, r3
90010650:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010652:	b16a      	cbz	r2, 90010670 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010654:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010656:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010658:	b153      	cbz	r3, 90010670 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001065a:	f001 fb0b 	bl	90011c74 <xTaskRemoveFromEventList>
9001065e:	2800      	cmp	r0, #0
90010660:	d0f4      	beq.n	9001064c <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
90010662:	f001 fb9b 	bl	90011d9c <vTaskMissedYield>
				--cRxLock;
90010666:	1e6b      	subs	r3, r5, #1
90010668:	b2da      	uxtb	r2, r3
9001066a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001066c:	2a00      	cmp	r2, #0
9001066e:	d1f1      	bne.n	90010654 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
90010670:	23ff      	movs	r3, #255	@ 0xff
90010672:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010676:	f7ff fc3f 	bl	9000fef8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9001067a:	f001 f9d7 	bl	90011a2c <xTaskResumeAll>
9001067e:	2800      	cmp	r0, #0
90010680:	d1a6      	bne.n	900105d0 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
90010682:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010686:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001068a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9001068e:	f3bf 8f4f 	dsb	sy
90010692:	f3bf 8f6f 	isb	sy
90010696:	e79b      	b.n	900105d0 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
90010698:	a802      	add	r0, sp, #8
9001069a:	f001 fb31 	bl	90011d00 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9001069e:	e730      	b.n	90010502 <xQueueGenericSend+0x76>
900106a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900106a4:	f383 8811 	msr	BASEPRI, r3
900106a8:	f3bf 8f6f 	isb	sy
900106ac:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900106b0:	e7fe      	b.n	900106b0 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
900106b2:	9b01      	ldr	r3, [sp, #4]
900106b4:	2b00      	cmp	r3, #0
900106b6:	f43f af09 	beq.w	900104cc <xQueueGenericSend+0x40>
900106ba:	f04f 0350 	mov.w	r3, #80	@ 0x50
900106be:	f383 8811 	msr	BASEPRI, r3
900106c2:	f3bf 8f6f 	isb	sy
900106c6:	f3bf 8f4f 	dsb	sy
900106ca:	e7fe      	b.n	900106ca <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
900106cc:	463a      	mov	r2, r7
900106ce:	4641      	mov	r1, r8
900106d0:	4620      	mov	r0, r4
900106d2:	f7ff fd4f 	bl	90010174 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900106d6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900106d8:	2b00      	cmp	r3, #0
900106da:	d151      	bne.n	90010780 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
900106dc:	b148      	cbz	r0, 900106f2 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
900106de:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900106e2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900106e6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900106ea:	f3bf 8f4f 	dsb	sy
900106ee:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
900106f2:	f7ff fc01 	bl	9000fef8 <vPortExitCritical>
				return pdPASS;
900106f6:	2001      	movs	r0, #1
}
900106f8:	b004      	add	sp, #16
900106fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
900106fe:	f7ff fbfb 	bl	9000fef8 <vPortExitCritical>
					return errQUEUE_FULL;
90010702:	2000      	movs	r0, #0
90010704:	e7f8      	b.n	900106f8 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
90010706:	f7ff fbd5 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9001070a:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9001070e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010710:	2d00      	cmp	r5, #0
90010712:	dd10      	ble.n	90010736 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010714:	f104 0624 	add.w	r6, r4, #36	@ 0x24
90010718:	e003      	b.n	90010722 <xQueueGenericSend+0x296>
			--cTxLock;
9001071a:	1e6b      	subs	r3, r5, #1
9001071c:	b2da      	uxtb	r2, r3
9001071e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010720:	b14a      	cbz	r2, 90010736 <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010722:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010724:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010726:	b133      	cbz	r3, 90010736 <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010728:	f001 faa4 	bl	90011c74 <xTaskRemoveFromEventList>
9001072c:	2800      	cmp	r0, #0
9001072e:	d0f4      	beq.n	9001071a <xQueueGenericSend+0x28e>
						vTaskMissedYield();
90010730:	f001 fb34 	bl	90011d9c <vTaskMissedYield>
90010734:	e7f1      	b.n	9001071a <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
90010736:	23ff      	movs	r3, #255	@ 0xff
90010738:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9001073c:	f7ff fbdc 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010740:	f7ff fbb8 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010744:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010748:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001074a:	2d00      	cmp	r5, #0
9001074c:	dd10      	ble.n	90010770 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001074e:	f104 0610 	add.w	r6, r4, #16
90010752:	e003      	b.n	9001075c <xQueueGenericSend+0x2d0>
				--cRxLock;
90010754:	1e6b      	subs	r3, r5, #1
90010756:	b2da      	uxtb	r2, r3
90010758:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001075a:	b14a      	cbz	r2, 90010770 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9001075c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001075e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010760:	b133      	cbz	r3, 90010770 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010762:	f001 fa87 	bl	90011c74 <xTaskRemoveFromEventList>
90010766:	2800      	cmp	r0, #0
90010768:	d0f4      	beq.n	90010754 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9001076a:	f001 fb17 	bl	90011d9c <vTaskMissedYield>
9001076e:	e7f1      	b.n	90010754 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
90010770:	23ff      	movs	r3, #255	@ 0xff
90010772:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010776:	f7ff fbbf 	bl	9000fef8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9001077a:	f001 f957 	bl	90011a2c <xTaskResumeAll>
			return errQUEUE_FULL;
9001077e:	e7c0      	b.n	90010702 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010780:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010784:	f001 fa76 	bl	90011c74 <xTaskRemoveFromEventList>
90010788:	2800      	cmp	r0, #0
9001078a:	d0b2      	beq.n	900106f2 <xQueueGenericSend+0x266>
9001078c:	e7a7      	b.n	900106de <xQueueGenericSend+0x252>
9001078e:	bf00      	nop

90010790 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
90010790:	2800      	cmp	r0, #0
90010792:	d04b      	beq.n	9001082c <xQueueGenericSendFromISR+0x9c>
{
90010794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010798:	460e      	mov	r6, r1
9001079a:	4604      	mov	r4, r0
9001079c:	4617      	mov	r7, r2
9001079e:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900107a0:	b339      	cbz	r1, 900107f2 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
900107a2:	2d02      	cmp	r5, #2
900107a4:	d10b      	bne.n	900107be <xQueueGenericSendFromISR+0x2e>
900107a6:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900107a8:	2b01      	cmp	r3, #1
900107aa:	d008      	beq.n	900107be <xQueueGenericSendFromISR+0x2e>
900107ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
900107b0:	f383 8811 	msr	BASEPRI, r3
900107b4:	f3bf 8f6f 	isb	sy
900107b8:	f3bf 8f4f 	dsb	sy
900107bc:	e7fe      	b.n	900107bc <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
900107be:	f7ff fcab 	bl	90010118 <vPortValidateInterruptPriority>
	__asm volatile
900107c2:	f3ef 8811 	mrs	r8, BASEPRI
900107c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900107ca:	f383 8811 	msr	BASEPRI, r3
900107ce:	f3bf 8f6f 	isb	sy
900107d2:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
900107d6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
900107d8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
900107da:	429a      	cmp	r2, r3
900107dc:	d315      	bcc.n	9001080a <xQueueGenericSendFromISR+0x7a>
900107de:	f1a5 0002 	sub.w	r0, r5, #2
900107e2:	fab0 f080 	clz	r0, r0
900107e6:	0940      	lsrs	r0, r0, #5
900107e8:	b978      	cbnz	r0, 9001080a <xQueueGenericSendFromISR+0x7a>
	__asm volatile
900107ea:	f388 8811 	msr	BASEPRI, r8
}
900107ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
900107f2:	6c03      	ldr	r3, [r0, #64]	@ 0x40
900107f4:	2b00      	cmp	r3, #0
900107f6:	d0d4      	beq.n	900107a2 <xQueueGenericSendFromISR+0x12>
	__asm volatile
900107f8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900107fc:	f383 8811 	msr	BASEPRI, r3
90010800:	f3bf 8f6f 	isb	sy
90010804:	f3bf 8f4f 	dsb	sy
90010808:	e7fe      	b.n	90010808 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9001080a:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9001080c:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010810:	4631      	mov	r1, r6
90010812:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
90010814:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
90010816:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
90010818:	f7ff fcac 	bl	90010174 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9001081c:	1c6b      	adds	r3, r5, #1
9001081e:	d00e      	beq.n	9001083e <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
90010820:	1c6b      	adds	r3, r5, #1
90010822:	b25b      	sxtb	r3, r3
90010824:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
90010828:	2001      	movs	r0, #1
9001082a:	e7de      	b.n	900107ea <xQueueGenericSendFromISR+0x5a>
9001082c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010830:	f383 8811 	msr	BASEPRI, r3
90010834:	f3bf 8f6f 	isb	sy
90010838:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9001083c:	e7fe      	b.n	9001083c <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9001083e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90010840:	2b00      	cmp	r3, #0
90010842:	d0f1      	beq.n	90010828 <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010844:	f104 0024 	add.w	r0, r4, #36	@ 0x24
90010848:	f001 fa14 	bl	90011c74 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9001084c:	2800      	cmp	r0, #0
9001084e:	d0eb      	beq.n	90010828 <xQueueGenericSendFromISR+0x98>
90010850:	2f00      	cmp	r7, #0
90010852:	d0e9      	beq.n	90010828 <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010854:	2301      	movs	r3, #1
90010856:	603b      	str	r3, [r7, #0]
90010858:	e7e6      	b.n	90010828 <xQueueGenericSendFromISR+0x98>
9001085a:	bf00      	nop

9001085c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9001085c:	b360      	cbz	r0, 900108b8 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9001085e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
90010860:	b570      	push	{r4, r5, r6, lr}
90010862:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
90010864:	b143      	cbz	r3, 90010878 <xQueueGiveFromISR+0x1c>
90010866:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001086a:	f383 8811 	msr	BASEPRI, r3
9001086e:	f3bf 8f6f 	isb	sy
90010872:	f3bf 8f4f 	dsb	sy
90010876:	e7fe      	b.n	90010876 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
90010878:	6803      	ldr	r3, [r0, #0]
9001087a:	460d      	mov	r5, r1
9001087c:	b32b      	cbz	r3, 900108ca <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9001087e:	f7ff fc4b 	bl	90010118 <vPortValidateInterruptPriority>
	__asm volatile
90010882:	f3ef 8611 	mrs	r6, BASEPRI
90010886:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001088a:	f383 8811 	msr	BASEPRI, r3
9001088e:	f3bf 8f6f 	isb	sy
90010892:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010896:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
90010898:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9001089a:	429a      	cmp	r2, r3
9001089c:	d921      	bls.n	900108e2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9001089e:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900108a2:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
900108a4:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
900108a6:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
900108a8:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
900108aa:	d01e      	beq.n	900108ea <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
900108ac:	3301      	adds	r3, #1
900108ae:	b25b      	sxtb	r3, r3
900108b0:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
900108b4:	2001      	movs	r0, #1
900108b6:	e015      	b.n	900108e4 <xQueueGiveFromISR+0x88>
	__asm volatile
900108b8:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108bc:	f383 8811 	msr	BASEPRI, r3
900108c0:	f3bf 8f6f 	isb	sy
900108c4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
900108c8:	e7fe      	b.n	900108c8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
900108ca:	6883      	ldr	r3, [r0, #8]
900108cc:	2b00      	cmp	r3, #0
900108ce:	d0d6      	beq.n	9001087e <xQueueGiveFromISR+0x22>
900108d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900108d4:	f383 8811 	msr	BASEPRI, r3
900108d8:	f3bf 8f6f 	isb	sy
900108dc:	f3bf 8f4f 	dsb	sy
900108e0:	e7fe      	b.n	900108e0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
900108e2:	2000      	movs	r0, #0
	__asm volatile
900108e4:	f386 8811 	msr	BASEPRI, r6
}
900108e8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900108ea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900108ec:	2b00      	cmp	r3, #0
900108ee:	d0e1      	beq.n	900108b4 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900108f0:	f104 0024 	add.w	r0, r4, #36	@ 0x24
900108f4:	f001 f9be 	bl	90011c74 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
900108f8:	2d00      	cmp	r5, #0
900108fa:	d0db      	beq.n	900108b4 <xQueueGiveFromISR+0x58>
900108fc:	2800      	cmp	r0, #0
900108fe:	d0d9      	beq.n	900108b4 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
90010900:	2301      	movs	r3, #1
90010902:	602b      	str	r3, [r5, #0]
90010904:	e7d6      	b.n	900108b4 <xQueueGiveFromISR+0x58>
90010906:	bf00      	nop

90010908 <xQueueReceive>:
{
90010908:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001090c:	b085      	sub	sp, #20
9001090e:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
90010910:	2800      	cmp	r0, #0
90010912:	f000 8164 	beq.w	90010bde <xQueueReceive+0x2d6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010916:	460f      	mov	r7, r1
90010918:	4604      	mov	r4, r0
9001091a:	2900      	cmp	r1, #0
9001091c:	f000 8097 	beq.w	90010a4e <xQueueReceive+0x146>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010920:	f001 fa42 	bl	90011da8 <xTaskGetSchedulerState>
90010924:	2800      	cmp	r0, #0
90010926:	f000 809f 	beq.w	90010a68 <xQueueReceive+0x160>
		taskENTER_CRITICAL();
9001092a:	f7ff fac3 	bl	9000feb4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9001092e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010930:	2d00      	cmp	r5, #0
90010932:	d175      	bne.n	90010a20 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
90010934:	9b01      	ldr	r3, [sp, #4]
90010936:	2b00      	cmp	r3, #0
90010938:	f000 80f4 	beq.w	90010b24 <xQueueReceive+0x21c>
		prvLockQueue( pxQueue );
9001093c:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001093e:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
90010942:	a802      	add	r0, sp, #8
90010944:	f001 f9dc 	bl	90011d00 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
90010948:	f7ff fad6 	bl	9000fef8 <vPortExitCritical>
		vTaskSuspendAll();
9001094c:	f001 f866 	bl	90011a1c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010950:	f7ff fab0 	bl	9000feb4 <vPortEnterCritical>
90010954:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010958:	2bff      	cmp	r3, #255	@ 0xff
9001095a:	d101      	bne.n	90010960 <xQueueReceive+0x58>
9001095c:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
90010960:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010964:	2bff      	cmp	r3, #255	@ 0xff
90010966:	d101      	bne.n	9001096c <xQueueReceive+0x64>
90010968:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9001096c:	f7ff fac4 	bl	9000fef8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010970:	a901      	add	r1, sp, #4
90010972:	a802      	add	r0, sp, #8
90010974:	f001 f9d0 	bl	90011d18 <xTaskCheckForTimeOut>
90010978:	2800      	cmp	r0, #0
9001097a:	f040 8082 	bne.w	90010a82 <xQueueReceive+0x17a>
	taskENTER_CRITICAL();
9001097e:	f7ff fa99 	bl	9000feb4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010982:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010984:	2b00      	cmp	r3, #0
90010986:	f000 80d3 	beq.w	90010b30 <xQueueReceive+0x228>
	taskEXIT_CRITICAL();
9001098a:	f7ff fab5 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
9001098e:	f7ff fa91 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010992:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010996:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010998:	2d00      	cmp	r5, #0
9001099a:	dd14      	ble.n	900109c6 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9001099c:	f104 0924 	add.w	r9, r4, #36	@ 0x24
900109a0:	e003      	b.n	900109aa <xQueueReceive+0xa2>
			--cTxLock;
900109a2:	1e6b      	subs	r3, r5, #1
900109a4:	b2da      	uxtb	r2, r3
900109a6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900109a8:	b16a      	cbz	r2, 900109c6 <xQueueReceive+0xbe>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900109aa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109ac:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
900109ae:	b153      	cbz	r3, 900109c6 <xQueueReceive+0xbe>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
900109b0:	f001 f960 	bl	90011c74 <xTaskRemoveFromEventList>
900109b4:	2800      	cmp	r0, #0
900109b6:	d0f4      	beq.n	900109a2 <xQueueReceive+0x9a>
						vTaskMissedYield();
900109b8:	f001 f9f0 	bl	90011d9c <vTaskMissedYield>
			--cTxLock;
900109bc:	1e6b      	subs	r3, r5, #1
900109be:	b2da      	uxtb	r2, r3
900109c0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
900109c2:	2a00      	cmp	r2, #0
900109c4:	d1f1      	bne.n	900109aa <xQueueReceive+0xa2>
		pxQueue->cTxLock = queueUNLOCKED;
900109c6:	23ff      	movs	r3, #255	@ 0xff
900109c8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
900109cc:	f7ff fa94 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
900109d0:	f7ff fa70 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
900109d4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
900109d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900109da:	2d00      	cmp	r5, #0
900109dc:	dd14      	ble.n	90010a08 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900109de:	f104 0910 	add.w	r9, r4, #16
900109e2:	e003      	b.n	900109ec <xQueueReceive+0xe4>
				--cRxLock;
900109e4:	1e6b      	subs	r3, r5, #1
900109e6:	b2da      	uxtb	r2, r3
900109e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
900109ea:	b16a      	cbz	r2, 90010a08 <xQueueReceive+0x100>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900109ec:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900109ee:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
900109f0:	b153      	cbz	r3, 90010a08 <xQueueReceive+0x100>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
900109f2:	f001 f93f 	bl	90011c74 <xTaskRemoveFromEventList>
900109f6:	2800      	cmp	r0, #0
900109f8:	d0f4      	beq.n	900109e4 <xQueueReceive+0xdc>
					vTaskMissedYield();
900109fa:	f001 f9cf 	bl	90011d9c <vTaskMissedYield>
				--cRxLock;
900109fe:	1e6b      	subs	r3, r5, #1
90010a00:	b2da      	uxtb	r2, r3
90010a02:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010a04:	2a00      	cmp	r2, #0
90010a06:	d1f1      	bne.n	900109ec <xQueueReceive+0xe4>
		pxQueue->cRxLock = queueUNLOCKED;
90010a08:	23ff      	movs	r3, #255	@ 0xff
90010a0a:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010a0e:	f7ff fa73 	bl	9000fef8 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010a12:	f001 f80b 	bl	90011a2c <xTaskResumeAll>
		taskENTER_CRITICAL();
90010a16:	f7ff fa4d 	bl	9000feb4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010a1a:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010a1c:	2d00      	cmp	r5, #0
90010a1e:	d07d      	beq.n	90010b1c <xQueueReceive+0x214>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010a20:	6c22      	ldr	r2, [r4, #64]	@ 0x40
90010a22:	b152      	cbz	r2, 90010a3a <xQueueReceive+0x132>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010a24:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010a26:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010a28:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010a2a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010a2c:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010a2e:	d301      	bcc.n	90010a34 <xQueueReceive+0x12c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90010a30:	6821      	ldr	r1, [r4, #0]
90010a32:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90010a34:	4638      	mov	r0, r7
90010a36:	f01b ff84 	bl	9002c942 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010a3a:	3d01      	subs	r5, #1
90010a3c:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010a3e:	6923      	ldr	r3, [r4, #16]
90010a40:	2b00      	cmp	r3, #0
90010a42:	f040 80d5 	bne.w	90010bf0 <xQueueReceive+0x2e8>
				taskEXIT_CRITICAL();
90010a46:	f7ff fa57 	bl	9000fef8 <vPortExitCritical>
				return pdPASS;
90010a4a:	2001      	movs	r0, #1
90010a4c:	e06d      	b.n	90010b2a <xQueueReceive+0x222>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010a4e:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010a50:	2b00      	cmp	r3, #0
90010a52:	f43f af65 	beq.w	90010920 <xQueueReceive+0x18>
	__asm volatile
90010a56:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010a5a:	f383 8811 	msr	BASEPRI, r3
90010a5e:	f3bf 8f6f 	isb	sy
90010a62:	f3bf 8f4f 	dsb	sy
90010a66:	e7fe      	b.n	90010a66 <xQueueReceive+0x15e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010a68:	9b01      	ldr	r3, [sp, #4]
90010a6a:	2b00      	cmp	r3, #0
90010a6c:	f43f af5d 	beq.w	9001092a <xQueueReceive+0x22>
90010a70:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010a74:	f383 8811 	msr	BASEPRI, r3
90010a78:	f3bf 8f6f 	isb	sy
90010a7c:	f3bf 8f4f 	dsb	sy
90010a80:	e7fe      	b.n	90010a80 <xQueueReceive+0x178>
	taskENTER_CRITICAL();
90010a82:	f7ff fa17 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010a86:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010a8a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a8c:	2d00      	cmp	r5, #0
90010a8e:	dc04      	bgt.n	90010a9a <xQueueReceive+0x192>
90010a90:	e011      	b.n	90010ab6 <xQueueReceive+0x1ae>
			--cTxLock;
90010a92:	1e6b      	subs	r3, r5, #1
90010a94:	b2da      	uxtb	r2, r3
90010a96:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010a98:	b16a      	cbz	r2, 90010ab6 <xQueueReceive+0x1ae>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010a9a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010a9c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010a9e:	b153      	cbz	r3, 90010ab6 <xQueueReceive+0x1ae>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010aa0:	f001 f8e8 	bl	90011c74 <xTaskRemoveFromEventList>
90010aa4:	2800      	cmp	r0, #0
90010aa6:	d0f4      	beq.n	90010a92 <xQueueReceive+0x18a>
						vTaskMissedYield();
90010aa8:	f001 f978 	bl	90011d9c <vTaskMissedYield>
			--cTxLock;
90010aac:	1e6b      	subs	r3, r5, #1
90010aae:	b2da      	uxtb	r2, r3
90010ab0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010ab2:	2a00      	cmp	r2, #0
90010ab4:	d1f1      	bne.n	90010a9a <xQueueReceive+0x192>
		pxQueue->cTxLock = queueUNLOCKED;
90010ab6:	23ff      	movs	r3, #255	@ 0xff
90010ab8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010abc:	f7ff fa1c 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010ac0:	f7ff f9f8 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010ac4:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010ac8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010aca:	2d00      	cmp	r5, #0
90010acc:	dd14      	ble.n	90010af8 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ace:	f104 0910 	add.w	r9, r4, #16
90010ad2:	e003      	b.n	90010adc <xQueueReceive+0x1d4>
				--cRxLock;
90010ad4:	1e6b      	subs	r3, r5, #1
90010ad6:	b2da      	uxtb	r2, r3
90010ad8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ada:	b16a      	cbz	r2, 90010af8 <xQueueReceive+0x1f0>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010adc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ade:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ae0:	b153      	cbz	r3, 90010af8 <xQueueReceive+0x1f0>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ae2:	f001 f8c7 	bl	90011c74 <xTaskRemoveFromEventList>
90010ae6:	2800      	cmp	r0, #0
90010ae8:	d0f4      	beq.n	90010ad4 <xQueueReceive+0x1cc>
					vTaskMissedYield();
90010aea:	f001 f957 	bl	90011d9c <vTaskMissedYield>
				--cRxLock;
90010aee:	1e6b      	subs	r3, r5, #1
90010af0:	b2da      	uxtb	r2, r3
90010af2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010af4:	2a00      	cmp	r2, #0
90010af6:	d1f1      	bne.n	90010adc <xQueueReceive+0x1d4>
		pxQueue->cRxLock = queueUNLOCKED;
90010af8:	23ff      	movs	r3, #255	@ 0xff
90010afa:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010afe:	f7ff f9fb 	bl	9000fef8 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010b02:	f000 ff93 	bl	90011a2c <xTaskResumeAll>
	taskENTER_CRITICAL();
90010b06:	f7ff f9d5 	bl	9000feb4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010b0a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010b0c:	b153      	cbz	r3, 90010b24 <xQueueReceive+0x21c>
	taskEXIT_CRITICAL();
90010b0e:	f7ff f9f3 	bl	9000fef8 <vPortExitCritical>
		taskENTER_CRITICAL();
90010b12:	f7ff f9cf 	bl	9000feb4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010b16:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010b18:	2d00      	cmp	r5, #0
90010b1a:	d181      	bne.n	90010a20 <xQueueReceive+0x118>
				if( xTicksToWait == ( TickType_t ) 0 )
90010b1c:	9b01      	ldr	r3, [sp, #4]
90010b1e:	2b00      	cmp	r3, #0
90010b20:	f47f af12 	bne.w	90010948 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
90010b24:	f7ff f9e8 	bl	9000fef8 <vPortExitCritical>
					return errQUEUE_EMPTY;
90010b28:	2000      	movs	r0, #0
}
90010b2a:	b005      	add	sp, #20
90010b2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010b30:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
90010b34:	f7ff f9e0 	bl	9000fef8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010b38:	9901      	ldr	r1, [sp, #4]
90010b3a:	4648      	mov	r0, r9
90010b3c:	f001 f80c 	bl	90011b58 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010b40:	f7ff f9b8 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010b44:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010b48:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b4a:	2d00      	cmp	r5, #0
90010b4c:	dc04      	bgt.n	90010b58 <xQueueReceive+0x250>
90010b4e:	e011      	b.n	90010b74 <xQueueReceive+0x26c>
			--cTxLock;
90010b50:	1e6b      	subs	r3, r5, #1
90010b52:	b2da      	uxtb	r2, r3
90010b54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b56:	b16a      	cbz	r2, 90010b74 <xQueueReceive+0x26c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010b58:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010b5a:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010b5c:	b153      	cbz	r3, 90010b74 <xQueueReceive+0x26c>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010b5e:	f001 f889 	bl	90011c74 <xTaskRemoveFromEventList>
90010b62:	2800      	cmp	r0, #0
90010b64:	d0f4      	beq.n	90010b50 <xQueueReceive+0x248>
						vTaskMissedYield();
90010b66:	f001 f919 	bl	90011d9c <vTaskMissedYield>
			--cTxLock;
90010b6a:	1e6b      	subs	r3, r5, #1
90010b6c:	b2da      	uxtb	r2, r3
90010b6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010b70:	2a00      	cmp	r2, #0
90010b72:	d1f1      	bne.n	90010b58 <xQueueReceive+0x250>
		pxQueue->cTxLock = queueUNLOCKED;
90010b74:	23ff      	movs	r3, #255	@ 0xff
90010b76:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010b7a:	f7ff f9bd 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010b7e:	f7ff f999 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010b82:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010b86:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010b88:	2d00      	cmp	r5, #0
90010b8a:	dd14      	ble.n	90010bb6 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010b8c:	f104 0910 	add.w	r9, r4, #16
90010b90:	e003      	b.n	90010b9a <xQueueReceive+0x292>
				--cRxLock;
90010b92:	1e6b      	subs	r3, r5, #1
90010b94:	b2da      	uxtb	r2, r3
90010b96:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010b98:	b16a      	cbz	r2, 90010bb6 <xQueueReceive+0x2ae>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010b9a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010b9c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010b9e:	b153      	cbz	r3, 90010bb6 <xQueueReceive+0x2ae>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010ba0:	f001 f868 	bl	90011c74 <xTaskRemoveFromEventList>
90010ba4:	2800      	cmp	r0, #0
90010ba6:	d0f4      	beq.n	90010b92 <xQueueReceive+0x28a>
					vTaskMissedYield();
90010ba8:	f001 f8f8 	bl	90011d9c <vTaskMissedYield>
				--cRxLock;
90010bac:	1e6b      	subs	r3, r5, #1
90010bae:	b2da      	uxtb	r2, r3
90010bb0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010bb2:	2a00      	cmp	r2, #0
90010bb4:	d1f1      	bne.n	90010b9a <xQueueReceive+0x292>
		pxQueue->cRxLock = queueUNLOCKED;
90010bb6:	23ff      	movs	r3, #255	@ 0xff
90010bb8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010bbc:	f7ff f99c 	bl	9000fef8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010bc0:	f000 ff34 	bl	90011a2c <xTaskResumeAll>
90010bc4:	2800      	cmp	r0, #0
90010bc6:	d1a4      	bne.n	90010b12 <xQueueReceive+0x20a>
					portYIELD_WITHIN_API();
90010bc8:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010bcc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010bd0:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010bd4:	f3bf 8f4f 	dsb	sy
90010bd8:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
90010bdc:	e799      	b.n	90010b12 <xQueueReceive+0x20a>
90010bde:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010be2:	f383 8811 	msr	BASEPRI, r3
90010be6:	f3bf 8f6f 	isb	sy
90010bea:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90010bee:	e7fe      	b.n	90010bee <xQueueReceive+0x2e6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010bf0:	f104 0010 	add.w	r0, r4, #16
90010bf4:	f001 f83e 	bl	90011c74 <xTaskRemoveFromEventList>
90010bf8:	2800      	cmp	r0, #0
90010bfa:	f43f af24 	beq.w	90010a46 <xQueueReceive+0x13e>
						queueYIELD_IF_USING_PREEMPTION();
90010bfe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010c02:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010c06:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010c0a:	f3bf 8f4f 	dsb	sy
90010c0e:	f3bf 8f6f 	isb	sy
90010c12:	e718      	b.n	90010a46 <xQueueReceive+0x13e>

90010c14 <xQueueSemaphoreTake>:
{
90010c14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c18:	b084      	sub	sp, #16
90010c1a:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
90010c1c:	2800      	cmp	r0, #0
90010c1e:	d05e      	beq.n	90010cde <xQueueSemaphoreTake+0xca>
	configASSERT( pxQueue->uxItemSize == 0 );
90010c20:	6c07      	ldr	r7, [r0, #64]	@ 0x40
90010c22:	4604      	mov	r4, r0
90010c24:	b147      	cbz	r7, 90010c38 <xQueueSemaphoreTake+0x24>
90010c26:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010c2a:	f383 8811 	msr	BASEPRI, r3
90010c2e:	f3bf 8f6f 	isb	sy
90010c32:	f3bf 8f4f 	dsb	sy
90010c36:	e7fe      	b.n	90010c36 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010c38:	f001 f8b6 	bl	90011da8 <xTaskGetSchedulerState>
90010c3c:	4605      	mov	r5, r0
90010c3e:	2800      	cmp	r0, #0
90010c40:	d056      	beq.n	90010cf0 <xQueueSemaphoreTake+0xdc>
90010c42:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010c44:	f104 0624 	add.w	r6, r4, #36	@ 0x24
		taskENTER_CRITICAL();
90010c48:	f7ff f934 	bl	9000feb4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
90010c4c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
90010c4e:	2b00      	cmp	r3, #0
90010c50:	f040 814d 	bne.w	90010eee <xQueueSemaphoreTake+0x2da>
				if( xTicksToWait == ( TickType_t ) 0 )
90010c54:	9b01      	ldr	r3, [sp, #4]
90010c56:	2b00      	cmp	r3, #0
90010c58:	f000 813e 	beq.w	90010ed8 <xQueueSemaphoreTake+0x2c4>
				else if( xEntryTimeSet == pdFALSE )
90010c5c:	2d00      	cmp	r5, #0
90010c5e:	f000 80a3 	beq.w	90010da8 <xQueueSemaphoreTake+0x194>
		taskEXIT_CRITICAL();
90010c62:	f7ff f949 	bl	9000fef8 <vPortExitCritical>
		vTaskSuspendAll();
90010c66:	f000 fed9 	bl	90011a1c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
90010c6a:	f7ff f923 	bl	9000feb4 <vPortEnterCritical>
90010c6e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010c72:	2bff      	cmp	r3, #255	@ 0xff
90010c74:	d102      	bne.n	90010c7c <xQueueSemaphoreTake+0x68>
90010c76:	2300      	movs	r3, #0
90010c78:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
90010c7c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010c80:	2bff      	cmp	r3, #255	@ 0xff
90010c82:	d102      	bne.n	90010c8a <xQueueSemaphoreTake+0x76>
90010c84:	2300      	movs	r3, #0
90010c86:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
90010c8a:	f7ff f935 	bl	9000fef8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
90010c8e:	a901      	add	r1, sp, #4
90010c90:	a802      	add	r0, sp, #8
90010c92:	f001 f841 	bl	90011d18 <xTaskCheckForTimeOut>
90010c96:	2800      	cmp	r0, #0
90010c98:	d137      	bne.n	90010d0a <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
90010c9a:	f7ff f90b 	bl	9000feb4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010c9e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010ca0:	2b00      	cmp	r3, #0
90010ca2:	f000 80ae 	beq.w	90010e02 <xQueueSemaphoreTake+0x1ee>
	taskEXIT_CRITICAL();
90010ca6:	f7ff f927 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010caa:	f7ff f903 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010cae:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010cb2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010cb4:	2d00      	cmp	r5, #0
90010cb6:	dd7f      	ble.n	90010db8 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010cb8:	f104 0824 	add.w	r8, r4, #36	@ 0x24
90010cbc:	e004      	b.n	90010cc8 <xQueueSemaphoreTake+0xb4>
			--cTxLock;
90010cbe:	1e6b      	subs	r3, r5, #1
90010cc0:	b2da      	uxtb	r2, r3
90010cc2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010cc4:	2a00      	cmp	r2, #0
90010cc6:	d077      	beq.n	90010db8 <xQueueSemaphoreTake+0x1a4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010cc8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010cca:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010ccc:	2b00      	cmp	r3, #0
90010cce:	d073      	beq.n	90010db8 <xQueueSemaphoreTake+0x1a4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010cd0:	f000 ffd0 	bl	90011c74 <xTaskRemoveFromEventList>
90010cd4:	2800      	cmp	r0, #0
90010cd6:	d0f2      	beq.n	90010cbe <xQueueSemaphoreTake+0xaa>
						vTaskMissedYield();
90010cd8:	f001 f860 	bl	90011d9c <vTaskMissedYield>
90010cdc:	e7ef      	b.n	90010cbe <xQueueSemaphoreTake+0xaa>
90010cde:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010ce2:	f383 8811 	msr	BASEPRI, r3
90010ce6:	f3bf 8f6f 	isb	sy
90010cea:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
90010cee:	e7fe      	b.n	90010cee <xQueueSemaphoreTake+0xda>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
90010cf0:	9b01      	ldr	r3, [sp, #4]
90010cf2:	2b00      	cmp	r3, #0
90010cf4:	f000 80d7 	beq.w	90010ea6 <xQueueSemaphoreTake+0x292>
90010cf8:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010cfc:	f383 8811 	msr	BASEPRI, r3
90010d00:	f3bf 8f6f 	isb	sy
90010d04:	f3bf 8f4f 	dsb	sy
90010d08:	e7fe      	b.n	90010d08 <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
90010d0a:	f7ff f8d3 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010d0e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010d12:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d14:	2d00      	cmp	r5, #0
90010d16:	dc04      	bgt.n	90010d22 <xQueueSemaphoreTake+0x10e>
90010d18:	e011      	b.n	90010d3e <xQueueSemaphoreTake+0x12a>
			--cTxLock;
90010d1a:	1e6b      	subs	r3, r5, #1
90010d1c:	b2da      	uxtb	r2, r3
90010d1e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d20:	b16a      	cbz	r2, 90010d3e <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d22:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d24:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010d26:	b153      	cbz	r3, 90010d3e <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010d28:	f000 ffa4 	bl	90011c74 <xTaskRemoveFromEventList>
90010d2c:	2800      	cmp	r0, #0
90010d2e:	d0f4      	beq.n	90010d1a <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
90010d30:	f001 f834 	bl	90011d9c <vTaskMissedYield>
			--cTxLock;
90010d34:	1e6b      	subs	r3, r5, #1
90010d36:	b2da      	uxtb	r2, r3
90010d38:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010d3a:	2a00      	cmp	r2, #0
90010d3c:	d1f1      	bne.n	90010d22 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
90010d3e:	23ff      	movs	r3, #255	@ 0xff
90010d40:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010d44:	f7ff f8d8 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010d48:	f7ff f8b4 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010d4c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010d50:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010d52:	2d00      	cmp	r5, #0
90010d54:	dd14      	ble.n	90010d80 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010d56:	f104 0810 	add.w	r8, r4, #16
90010d5a:	e003      	b.n	90010d64 <xQueueSemaphoreTake+0x150>
				--cRxLock;
90010d5c:	1e6b      	subs	r3, r5, #1
90010d5e:	b2da      	uxtb	r2, r3
90010d60:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010d62:	b16a      	cbz	r2, 90010d80 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010d64:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010d66:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010d68:	b153      	cbz	r3, 90010d80 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010d6a:	f000 ff83 	bl	90011c74 <xTaskRemoveFromEventList>
90010d6e:	2800      	cmp	r0, #0
90010d70:	d0f4      	beq.n	90010d5c <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
90010d72:	f001 f813 	bl	90011d9c <vTaskMissedYield>
				--cRxLock;
90010d76:	1e6b      	subs	r3, r5, #1
90010d78:	b2da      	uxtb	r2, r3
90010d7a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010d7c:	2a00      	cmp	r2, #0
90010d7e:	d1f1      	bne.n	90010d64 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
90010d80:	23ff      	movs	r3, #255	@ 0xff
90010d82:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010d86:	f7ff f8b7 	bl	9000fef8 <vPortExitCritical>
			( void ) xTaskResumeAll();
90010d8a:	f000 fe4f 	bl	90011a2c <xTaskResumeAll>
	taskENTER_CRITICAL();
90010d8e:	f7ff f891 	bl	9000feb4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
90010d92:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90010d94:	b963      	cbnz	r3, 90010db0 <xQueueSemaphoreTake+0x19c>
	taskEXIT_CRITICAL();
90010d96:	f7ff f8af 	bl	9000fef8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
90010d9a:	2f00      	cmp	r7, #0
90010d9c:	f040 8085 	bne.w	90010eaa <xQueueSemaphoreTake+0x296>
					return errQUEUE_EMPTY;
90010da0:	2000      	movs	r0, #0
}
90010da2:	b004      	add	sp, #16
90010da4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
90010da8:	a802      	add	r0, sp, #8
90010daa:	f000 ffa9 	bl	90011d00 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
90010dae:	e758      	b.n	90010c62 <xQueueSemaphoreTake+0x4e>
	taskEXIT_CRITICAL();
90010db0:	f7ff f8a2 	bl	9000fef8 <vPortExitCritical>
	return xReturn;
90010db4:	2501      	movs	r5, #1
90010db6:	e747      	b.n	90010c48 <xQueueSemaphoreTake+0x34>
		pxQueue->cTxLock = queueUNLOCKED;
90010db8:	23ff      	movs	r3, #255	@ 0xff
90010dba:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010dbe:	f7ff f89b 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010dc2:	f7ff f877 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010dc6:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010dca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010dcc:	2d00      	cmp	r5, #0
90010dce:	dd10      	ble.n	90010df2 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010dd0:	f104 0810 	add.w	r8, r4, #16
90010dd4:	e003      	b.n	90010dde <xQueueSemaphoreTake+0x1ca>
				--cRxLock;
90010dd6:	1e6b      	subs	r3, r5, #1
90010dd8:	b2da      	uxtb	r2, r3
90010dda:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010ddc:	b14a      	cbz	r2, 90010df2 <xQueueSemaphoreTake+0x1de>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010dde:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010de0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010de2:	b133      	cbz	r3, 90010df2 <xQueueSemaphoreTake+0x1de>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010de4:	f000 ff46 	bl	90011c74 <xTaskRemoveFromEventList>
90010de8:	2800      	cmp	r0, #0
90010dea:	d0f4      	beq.n	90010dd6 <xQueueSemaphoreTake+0x1c2>
					vTaskMissedYield();
90010dec:	f000 ffd6 	bl	90011d9c <vTaskMissedYield>
90010df0:	e7f1      	b.n	90010dd6 <xQueueSemaphoreTake+0x1c2>
		pxQueue->cRxLock = queueUNLOCKED;
90010df2:	23ff      	movs	r3, #255	@ 0xff
90010df4:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010df8:	f7ff f87e 	bl	9000fef8 <vPortExitCritical>
				( void ) xTaskResumeAll();
90010dfc:	f000 fe16 	bl	90011a2c <xTaskResumeAll>
90010e00:	e7d8      	b.n	90010db4 <xQueueSemaphoreTake+0x1a0>
	taskEXIT_CRITICAL();
90010e02:	f7ff f879 	bl	9000fef8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010e06:	6823      	ldr	r3, [r4, #0]
90010e08:	2b00      	cmp	r3, #0
90010e0a:	d05c      	beq.n	90010ec6 <xQueueSemaphoreTake+0x2b2>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
90010e0c:	f104 0824 	add.w	r8, r4, #36	@ 0x24
90010e10:	9901      	ldr	r1, [sp, #4]
90010e12:	4640      	mov	r0, r8
90010e14:	f000 fea0 	bl	90011b58 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
90010e18:	f7ff f84c 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
90010e1c:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
90010e20:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e22:	2d00      	cmp	r5, #0
90010e24:	dc04      	bgt.n	90010e30 <xQueueSemaphoreTake+0x21c>
90010e26:	e00d      	b.n	90010e44 <xQueueSemaphoreTake+0x230>
			--cTxLock;
90010e28:	1e6b      	subs	r3, r5, #1
90010e2a:	b2da      	uxtb	r2, r3
90010e2c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90010e2e:	b14a      	cbz	r2, 90010e44 <xQueueSemaphoreTake+0x230>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e30:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e32:	4640      	mov	r0, r8
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90010e34:	b133      	cbz	r3, 90010e44 <xQueueSemaphoreTake+0x230>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90010e36:	f000 ff1d 	bl	90011c74 <xTaskRemoveFromEventList>
90010e3a:	2800      	cmp	r0, #0
90010e3c:	d0f4      	beq.n	90010e28 <xQueueSemaphoreTake+0x214>
						vTaskMissedYield();
90010e3e:	f000 ffad 	bl	90011d9c <vTaskMissedYield>
90010e42:	e7f1      	b.n	90010e28 <xQueueSemaphoreTake+0x214>
		pxQueue->cTxLock = queueUNLOCKED;
90010e44:	23ff      	movs	r3, #255	@ 0xff
90010e46:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
90010e4a:	f7ff f855 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
90010e4e:	f7ff f831 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
90010e52:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
90010e56:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e58:	2d00      	cmp	r5, #0
90010e5a:	dd10      	ble.n	90010e7e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e5c:	f104 0810 	add.w	r8, r4, #16
90010e60:	e003      	b.n	90010e6a <xQueueSemaphoreTake+0x256>
				--cRxLock;
90010e62:	1e6b      	subs	r3, r5, #1
90010e64:	b2da      	uxtb	r2, r3
90010e66:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90010e68:	b14a      	cbz	r2, 90010e7e <xQueueSemaphoreTake+0x26a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010e6a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e6c:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010e6e:	b133      	cbz	r3, 90010e7e <xQueueSemaphoreTake+0x26a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010e70:	f000 ff00 	bl	90011c74 <xTaskRemoveFromEventList>
90010e74:	2800      	cmp	r0, #0
90010e76:	d0f4      	beq.n	90010e62 <xQueueSemaphoreTake+0x24e>
					vTaskMissedYield();
90010e78:	f000 ff90 	bl	90011d9c <vTaskMissedYield>
90010e7c:	e7f1      	b.n	90010e62 <xQueueSemaphoreTake+0x24e>
		pxQueue->cRxLock = queueUNLOCKED;
90010e7e:	23ff      	movs	r3, #255	@ 0xff
90010e80:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
90010e84:	f7ff f838 	bl	9000fef8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
90010e88:	f000 fdd0 	bl	90011a2c <xTaskResumeAll>
90010e8c:	2800      	cmp	r0, #0
90010e8e:	d191      	bne.n	90010db4 <xQueueSemaphoreTake+0x1a0>
					portYIELD_WITHIN_API();
90010e90:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010e94:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010e98:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010e9c:	f3bf 8f4f 	dsb	sy
90010ea0:	f3bf 8f6f 	isb	sy
90010ea4:	e786      	b.n	90010db4 <xQueueSemaphoreTake+0x1a0>
90010ea6:	462f      	mov	r7, r5
90010ea8:	e6cc      	b.n	90010c44 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
90010eaa:	f7ff f803 	bl	9000feb4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
90010eae:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90010eb0:	b119      	cbz	r1, 90010eba <xQueueSemaphoreTake+0x2a6>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
90010eb2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90010eb4:	6819      	ldr	r1, [r3, #0]
90010eb6:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
90010eba:	68a0      	ldr	r0, [r4, #8]
90010ebc:	f001 f808 	bl	90011ed0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
90010ec0:	f7ff f81a 	bl	9000fef8 <vPortExitCritical>
90010ec4:	e76c      	b.n	90010da0 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
90010ec6:	f7fe fff5 	bl	9000feb4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
90010eca:	68a0      	ldr	r0, [r4, #8]
90010ecc:	f000 ff7c 	bl	90011dc8 <xTaskPriorityInherit>
90010ed0:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
90010ed2:	f7ff f811 	bl	9000fef8 <vPortExitCritical>
90010ed6:	e799      	b.n	90010e0c <xQueueSemaphoreTake+0x1f8>
						configASSERT( xInheritanceOccurred == pdFALSE );
90010ed8:	2f00      	cmp	r7, #0
90010eda:	d0f1      	beq.n	90010ec0 <xQueueSemaphoreTake+0x2ac>
90010edc:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010ee0:	f383 8811 	msr	BASEPRI, r3
90010ee4:	f3bf 8f6f 	isb	sy
90010ee8:	f3bf 8f4f 	dsb	sy
90010eec:	e7fe      	b.n	90010eec <xQueueSemaphoreTake+0x2d8>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90010eee:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010ef0:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
90010ef2:	63a3      	str	r3, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
90010ef4:	b12a      	cbz	r2, 90010f02 <xQueueSemaphoreTake+0x2ee>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010ef6:	6923      	ldr	r3, [r4, #16]
90010ef8:	b93b      	cbnz	r3, 90010f0a <xQueueSemaphoreTake+0x2f6>
				taskEXIT_CRITICAL();
90010efa:	f7fe fffd 	bl	9000fef8 <vPortExitCritical>
				return pdPASS;
90010efe:	2001      	movs	r0, #1
90010f00:	e74f      	b.n	90010da2 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
90010f02:	f001 f835 	bl	90011f70 <pvTaskIncrementMutexHeldCount>
90010f06:	60a0      	str	r0, [r4, #8]
90010f08:	e7f5      	b.n	90010ef6 <xQueueSemaphoreTake+0x2e2>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010f0a:	f104 0010 	add.w	r0, r4, #16
90010f0e:	f000 feb1 	bl	90011c74 <xTaskRemoveFromEventList>
90010f12:	2800      	cmp	r0, #0
90010f14:	d0f1      	beq.n	90010efa <xQueueSemaphoreTake+0x2e6>
						queueYIELD_IF_USING_PREEMPTION();
90010f16:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90010f1a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90010f1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90010f22:	f3bf 8f4f 	dsb	sy
90010f26:	f3bf 8f6f 	isb	sy
90010f2a:	e7e6      	b.n	90010efa <xQueueSemaphoreTake+0x2e6>

90010f2c <xQueueReceiveFromISR>:
{
90010f2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
90010f30:	b310      	cbz	r0, 90010f78 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010f32:	460f      	mov	r7, r1
90010f34:	4604      	mov	r4, r0
90010f36:	4616      	mov	r6, r2
90010f38:	b191      	cbz	r1, 90010f60 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
90010f3a:	f7ff f8ed 	bl	90010118 <vPortValidateInterruptPriority>
	__asm volatile
90010f3e:	f3ef 8911 	mrs	r9, BASEPRI
90010f42:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f46:	f383 8811 	msr	BASEPRI, r3
90010f4a:	f3bf 8f6f 	isb	sy
90010f4e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
90010f52:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
90010f54:	b9cd      	cbnz	r5, 90010f8a <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
90010f56:	4628      	mov	r0, r5
	__asm volatile
90010f58:	f389 8811 	msr	BASEPRI, r9
}
90010f5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
90010f60:	6c03      	ldr	r3, [r0, #64]	@ 0x40
90010f62:	2b00      	cmp	r3, #0
90010f64:	d0e9      	beq.n	90010f3a <xQueueReceiveFromISR+0xe>
	__asm volatile
90010f66:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f6a:	f383 8811 	msr	BASEPRI, r3
90010f6e:	f3bf 8f6f 	isb	sy
90010f72:	f3bf 8f4f 	dsb	sy
90010f76:	e7fe      	b.n	90010f76 <xQueueReceiveFromISR+0x4a>
90010f78:	f04f 0350 	mov.w	r3, #80	@ 0x50
90010f7c:	f383 8811 	msr	BASEPRI, r3
90010f80:	f3bf 8f6f 	isb	sy
90010f84:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90010f88:	e7fe      	b.n	90010f88 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
90010f8a:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010f8e:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
90010f90:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
90010f94:	b142      	cbz	r2, 90010fa8 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010f96:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010f98:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010f9a:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010f9c:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
90010f9e:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
90010fa0:	d21c      	bcs.n	90010fdc <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
90010fa2:	4638      	mov	r0, r7
90010fa4:	f01b fccd 	bl	9002c942 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010fa8:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
90010faa:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
90010fae:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
90010fb0:	d006      	beq.n	90010fc0 <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
90010fb2:	f108 0301 	add.w	r3, r8, #1
90010fb6:	b25b      	sxtb	r3, r3
90010fb8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
90010fbc:	2001      	movs	r0, #1
90010fbe:	e7cb      	b.n	90010f58 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90010fc0:	6923      	ldr	r3, [r4, #16]
90010fc2:	2b00      	cmp	r3, #0
90010fc4:	d0fa      	beq.n	90010fbc <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90010fc6:	f104 0010 	add.w	r0, r4, #16
90010fca:	f000 fe53 	bl	90011c74 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
90010fce:	2e00      	cmp	r6, #0
90010fd0:	d0f4      	beq.n	90010fbc <xQueueReceiveFromISR+0x90>
90010fd2:	2800      	cmp	r0, #0
90010fd4:	d0f2      	beq.n	90010fbc <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
90010fd6:	2301      	movs	r3, #1
90010fd8:	6033      	str	r3, [r6, #0]
90010fda:	e7ef      	b.n	90010fbc <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
90010fdc:	6821      	ldr	r1, [r4, #0]
90010fde:	60e1      	str	r1, [r4, #12]
90010fe0:	e7df      	b.n	90010fa2 <xQueueReceiveFromISR+0x76>
90010fe2:	bf00      	nop
90010fe4:	0000      	movs	r0, r0
	...

90010fe8 <vQueueDelete>:
	configASSERT( pxQueue );
90010fe8:	b1e0      	cbz	r0, 90011024 <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
90010fea:	4b21      	ldr	r3, [pc, #132]	@ (90011070 <vQueueDelete+0x88>)
90010fec:	685a      	ldr	r2, [r3, #4]
90010fee:	4290      	cmp	r0, r2
90010ff0:	d02b      	beq.n	9001104a <vQueueDelete+0x62>
90010ff2:	68da      	ldr	r2, [r3, #12]
90010ff4:	4290      	cmp	r0, r2
90010ff6:	d02a      	beq.n	9001104e <vQueueDelete+0x66>
90010ff8:	695a      	ldr	r2, [r3, #20]
90010ffa:	4290      	cmp	r0, r2
90010ffc:	d029      	beq.n	90011052 <vQueueDelete+0x6a>
90010ffe:	69da      	ldr	r2, [r3, #28]
90011000:	4290      	cmp	r0, r2
90011002:	d028      	beq.n	90011056 <vQueueDelete+0x6e>
90011004:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90011006:	4290      	cmp	r0, r2
90011008:	d027      	beq.n	9001105a <vQueueDelete+0x72>
9001100a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9001100c:	4290      	cmp	r0, r2
9001100e:	d014      	beq.n	9001103a <vQueueDelete+0x52>
90011010:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90011012:	4290      	cmp	r0, r2
90011014:	d023      	beq.n	9001105e <vQueueDelete+0x76>
90011016:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
90011018:	4290      	cmp	r0, r2
9001101a:	d022      	beq.n	90011062 <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9001101c:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
90011020:	b14b      	cbz	r3, 90011036 <vQueueDelete+0x4e>
}
90011022:	4770      	bx	lr
90011024:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011028:	f383 8811 	msr	BASEPRI, r3
9001102c:	f3bf 8f6f 	isb	sy
90011030:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
90011034:	e7fe      	b.n	90011034 <vQueueDelete+0x4c>
			vPortFree( pxQueue );
90011036:	f7fe be25 	b.w	9000fc84 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001103a:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9001103c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
90011040:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 90011068 <vQueueDelete+0x80>
90011044:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
90011048:	e7e8      	b.n	9001101c <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9001104a:	2200      	movs	r2, #0
9001104c:	e7f6      	b.n	9001103c <vQueueDelete+0x54>
9001104e:	2201      	movs	r2, #1
90011050:	e7f4      	b.n	9001103c <vQueueDelete+0x54>
90011052:	2202      	movs	r2, #2
90011054:	e7f2      	b.n	9001103c <vQueueDelete+0x54>
90011056:	2203      	movs	r2, #3
90011058:	e7f0      	b.n	9001103c <vQueueDelete+0x54>
9001105a:	2204      	movs	r2, #4
9001105c:	e7ee      	b.n	9001103c <vQueueDelete+0x54>
9001105e:	2206      	movs	r2, #6
90011060:	e7ec      	b.n	9001103c <vQueueDelete+0x54>
90011062:	2207      	movs	r2, #7
90011064:	e7ea      	b.n	9001103c <vQueueDelete+0x54>
90011066:	bf00      	nop
	...
90011070:	24023f20 	.word	0x24023f20

90011074 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
90011074:	4b12      	ldr	r3, [pc, #72]	@ (900110c0 <vQueueAddToRegistry+0x4c>)
90011076:	681a      	ldr	r2, [r3, #0]
90011078:	b17a      	cbz	r2, 9001109a <vQueueAddToRegistry+0x26>
9001107a:	689a      	ldr	r2, [r3, #8]
9001107c:	b162      	cbz	r2, 90011098 <vQueueAddToRegistry+0x24>
9001107e:	691a      	ldr	r2, [r3, #16]
90011080:	b192      	cbz	r2, 900110a8 <vQueueAddToRegistry+0x34>
90011082:	699a      	ldr	r2, [r3, #24]
90011084:	b192      	cbz	r2, 900110ac <vQueueAddToRegistry+0x38>
90011086:	6a1a      	ldr	r2, [r3, #32]
90011088:	b192      	cbz	r2, 900110b0 <vQueueAddToRegistry+0x3c>
9001108a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9001108c:	b192      	cbz	r2, 900110b4 <vQueueAddToRegistry+0x40>
9001108e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90011090:	b192      	cbz	r2, 900110b8 <vQueueAddToRegistry+0x44>
90011092:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90011094:	b192      	cbz	r2, 900110bc <vQueueAddToRegistry+0x48>
	}
90011096:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
90011098:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9001109a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9001109e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
900110a2:	f8cc 0004 	str.w	r0, [ip, #4]
	}
900110a6:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
900110a8:	2202      	movs	r2, #2
900110aa:	e7f6      	b.n	9001109a <vQueueAddToRegistry+0x26>
900110ac:	2203      	movs	r2, #3
900110ae:	e7f4      	b.n	9001109a <vQueueAddToRegistry+0x26>
900110b0:	2204      	movs	r2, #4
900110b2:	e7f2      	b.n	9001109a <vQueueAddToRegistry+0x26>
900110b4:	2205      	movs	r2, #5
900110b6:	e7f0      	b.n	9001109a <vQueueAddToRegistry+0x26>
900110b8:	2206      	movs	r2, #6
900110ba:	e7ee      	b.n	9001109a <vQueueAddToRegistry+0x26>
900110bc:	2207      	movs	r2, #7
900110be:	e7ec      	b.n	9001109a <vQueueAddToRegistry+0x26>
900110c0:	24023f20 	.word	0x24023f20

900110c4 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
900110c4:	b570      	push	{r4, r5, r6, lr}
900110c6:	4605      	mov	r5, r0
900110c8:	460e      	mov	r6, r1
900110ca:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
900110cc:	f7fe fef2 	bl	9000feb4 <vPortEnterCritical>
900110d0:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
900110d4:	2bff      	cmp	r3, #255	@ 0xff
900110d6:	d102      	bne.n	900110de <vQueueWaitForMessageRestricted+0x1a>
900110d8:	2300      	movs	r3, #0
900110da:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
900110de:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
900110e2:	2bff      	cmp	r3, #255	@ 0xff
900110e4:	d102      	bne.n	900110ec <vQueueWaitForMessageRestricted+0x28>
900110e6:	2300      	movs	r3, #0
900110e8:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
900110ec:	f7fe ff04 	bl	9000fef8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
900110f0:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900110f2:	2b00      	cmp	r3, #0
900110f4:	d043      	beq.n	9001117e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
900110f6:	f7fe fedd 	bl	9000feb4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
900110fa:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
900110fe:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011100:	2c00      	cmp	r4, #0
90011102:	dd14      	ble.n	9001112e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011104:	f105 0624 	add.w	r6, r5, #36	@ 0x24
90011108:	e003      	b.n	90011112 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9001110a:	1e63      	subs	r3, r4, #1
9001110c:	b2da      	uxtb	r2, r3
9001110e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
90011110:	b16a      	cbz	r2, 9001112e <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011112:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011114:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
90011116:	b153      	cbz	r3, 9001112e <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
90011118:	f000 fdac 	bl	90011c74 <xTaskRemoveFromEventList>
9001111c:	2800      	cmp	r0, #0
9001111e:	d0f4      	beq.n	9001110a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
90011120:	f000 fe3c 	bl	90011d9c <vTaskMissedYield>
			--cTxLock;
90011124:	1e63      	subs	r3, r4, #1
90011126:	b2da      	uxtb	r2, r3
90011128:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9001112a:	2a00      	cmp	r2, #0
9001112c:	d1f1      	bne.n	90011112 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9001112e:	23ff      	movs	r3, #255	@ 0xff
90011130:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
90011134:	f7fe fee0 	bl	9000fef8 <vPortExitCritical>
	taskENTER_CRITICAL();
90011138:	f7fe febc 	bl	9000feb4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9001113c:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
90011140:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011142:	2c00      	cmp	r4, #0
90011144:	dd14      	ble.n	90011170 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011146:	f105 0610 	add.w	r6, r5, #16
9001114a:	e003      	b.n	90011154 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9001114c:	1e63      	subs	r3, r4, #1
9001114e:	b2da      	uxtb	r2, r3
90011150:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
90011152:	b16a      	cbz	r2, 90011170 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011154:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
90011156:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
90011158:	b153      	cbz	r3, 90011170 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9001115a:	f000 fd8b 	bl	90011c74 <xTaskRemoveFromEventList>
9001115e:	2800      	cmp	r0, #0
90011160:	d0f4      	beq.n	9001114c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
90011162:	f000 fe1b 	bl	90011d9c <vTaskMissedYield>
				--cRxLock;
90011166:	1e63      	subs	r3, r4, #1
90011168:	b2da      	uxtb	r2, r3
9001116a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9001116c:	2a00      	cmp	r2, #0
9001116e:	d1f1      	bne.n	90011154 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
90011170:	23ff      	movs	r3, #255	@ 0xff
90011172:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
90011176:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9001117a:	f7fe bebd 	b.w	9000fef8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9001117e:	4622      	mov	r2, r4
90011180:	4631      	mov	r1, r6
90011182:	f105 0024 	add.w	r0, r5, #36	@ 0x24
90011186:	f000 fd2b 	bl	90011be0 <vTaskPlaceOnEventListRestricted>
9001118a:	e7b4      	b.n	900110f6 <vQueueWaitForMessageRestricted+0x32>

9001118c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9001118c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90011190:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
90011192:	f7fe fe8f 	bl	9000feb4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
90011196:	4a34      	ldr	r2, [pc, #208]	@ (90011268 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
90011198:	4e34      	ldr	r6, [pc, #208]	@ (9001126c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9001119a:	6813      	ldr	r3, [r2, #0]
9001119c:	3301      	adds	r3, #1
9001119e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
900111a0:	6833      	ldr	r3, [r6, #0]
900111a2:	2b00      	cmp	r3, #0
900111a4:	d031      	beq.n	9001120a <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
900111a6:	4c32      	ldr	r4, [pc, #200]	@ (90011270 <prvAddNewTaskToReadyList+0xe4>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900111a8:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
900111aa:	6823      	ldr	r3, [r4, #0]
900111ac:	b333      	cbz	r3, 900111fc <prvAddNewTaskToReadyList+0x70>
900111ae:	4f31      	ldr	r7, [pc, #196]	@ (90011274 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
900111b0:	4a31      	ldr	r2, [pc, #196]	@ (90011278 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
900111b2:	4932      	ldr	r1, [pc, #200]	@ (9001127c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
900111b4:	6813      	ldr	r3, [r2, #0]
900111b6:	3301      	adds	r3, #1
900111b8:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
900111ba:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
900111bc:	680b      	ldr	r3, [r1, #0]
900111be:	4283      	cmp	r3, r0
900111c0:	d200      	bcs.n	900111c4 <prvAddNewTaskToReadyList+0x38>
900111c2:	6008      	str	r0, [r1, #0]
900111c4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
900111c8:	1d29      	adds	r1, r5, #4
900111ca:	eb07 0080 	add.w	r0, r7, r0, lsl #2
900111ce:	f7fe fdcf 	bl	9000fd70 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
900111d2:	f7fe fe91 	bl	9000fef8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
900111d6:	6823      	ldr	r3, [r4, #0]
900111d8:	b173      	cbz	r3, 900111f8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
900111da:	6832      	ldr	r2, [r6, #0]
900111dc:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
900111de:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900111e0:	429a      	cmp	r2, r3
900111e2:	d209      	bcs.n	900111f8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
900111e4:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
900111e8:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
900111ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
900111f0:	f3bf 8f4f 	dsb	sy
900111f4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
900111f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
900111fc:	6833      	ldr	r3, [r6, #0]
900111fe:	4f1d      	ldr	r7, [pc, #116]	@ (90011274 <prvAddNewTaskToReadyList+0xe8>)
90011200:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011202:	4283      	cmp	r3, r0
90011204:	d8d4      	bhi.n	900111b0 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
90011206:	6035      	str	r5, [r6, #0]
90011208:	e7d2      	b.n	900111b0 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9001120a:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9001120c:	6813      	ldr	r3, [r2, #0]
9001120e:	2b01      	cmp	r3, #1
90011210:	d003      	beq.n	9001121a <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
90011212:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
90011214:	4f17      	ldr	r7, [pc, #92]	@ (90011274 <prvAddNewTaskToReadyList+0xe8>)
90011216:	4c16      	ldr	r4, [pc, #88]	@ (90011270 <prvAddNewTaskToReadyList+0xe4>)
90011218:	e7ca      	b.n	900111b0 <prvAddNewTaskToReadyList+0x24>
9001121a:	4f16      	ldr	r7, [pc, #88]	@ (90011274 <prvAddNewTaskToReadyList+0xe8>)
9001121c:	463c      	mov	r4, r7
9001121e:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90011222:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
90011224:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
90011226:	f7fe fd93 	bl	9000fd50 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9001122a:	45a0      	cmp	r8, r4
9001122c:	d1f9      	bne.n	90011222 <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9001122e:	f8df 9064 	ldr.w	r9, [pc, #100]	@ 90011294 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
90011232:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 90011298 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
90011236:	4648      	mov	r0, r9
90011238:	4c0d      	ldr	r4, [pc, #52]	@ (90011270 <prvAddNewTaskToReadyList+0xe4>)
9001123a:	f7fe fd89 	bl	9000fd50 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9001123e:	4640      	mov	r0, r8
90011240:	f7fe fd86 	bl	9000fd50 <vListInitialise>
	vListInitialise( &xPendingReadyList );
90011244:	480e      	ldr	r0, [pc, #56]	@ (90011280 <prvAddNewTaskToReadyList+0xf4>)
90011246:	f7fe fd83 	bl	9000fd50 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9001124a:	480e      	ldr	r0, [pc, #56]	@ (90011284 <prvAddNewTaskToReadyList+0xf8>)
9001124c:	f7fe fd80 	bl	9000fd50 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
90011250:	480d      	ldr	r0, [pc, #52]	@ (90011288 <prvAddNewTaskToReadyList+0xfc>)
90011252:	f7fe fd7d 	bl	9000fd50 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
90011256:	4b0d      	ldr	r3, [pc, #52]	@ (9001128c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
90011258:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9001125a:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9001125e:	4b0c      	ldr	r3, [pc, #48]	@ (90011290 <prvAddNewTaskToReadyList+0x104>)
90011260:	f8c3 8000 	str.w	r8, [r3]
}
90011264:	e7a4      	b.n	900111b0 <prvAddNewTaskToReadyList+0x24>
90011266:	bf00      	nop
90011268:	24023f84 	.word	0x24023f84
9001126c:	24024458 	.word	0x24024458
90011270:	24023f78 	.word	0x24023f78
90011274:	24023ff8 	.word	0x24023ff8
90011278:	24023f68 	.word	0x24023f68
9001127c:	24023f7c 	.word	0x24023f7c
90011280:	24023fb4 	.word	0x24023fb4
90011284:	24023fa0 	.word	0x24023fa0
90011288:	24023f88 	.word	0x24023f88
9001128c:	24023fcc 	.word	0x24023fcc
90011290:	24023fc8 	.word	0x24023fc8
90011294:	24023fe4 	.word	0x24023fe4
90011298:	24023fd0 	.word	0x24023fd0

9001129c <prvIdleTask>:
{
9001129c:	b580      	push	{r7, lr}
9001129e:	4c22      	ldr	r4, [pc, #136]	@ (90011328 <prvIdleTask+0x8c>)
900112a0:	4e22      	ldr	r6, [pc, #136]	@ (9001132c <prvIdleTask+0x90>)
900112a2:	4d23      	ldr	r5, [pc, #140]	@ (90011330 <prvIdleTask+0x94>)
900112a4:	4f23      	ldr	r7, [pc, #140]	@ (90011334 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
900112a6:	6823      	ldr	r3, [r4, #0]
900112a8:	b353      	cbz	r3, 90011300 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
900112aa:	f7fe fe03 	bl	9000feb4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900112ae:	68f3      	ldr	r3, [r6, #12]
900112b0:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900112b4:	f108 0004 	add.w	r0, r8, #4
900112b8:	f7fe fd80 	bl	9000fdbc <uxListRemove>
				--uxCurrentNumberOfTasks;
900112bc:	682b      	ldr	r3, [r5, #0]
900112be:	3b01      	subs	r3, #1
900112c0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
900112c2:	6823      	ldr	r3, [r4, #0]
900112c4:	3b01      	subs	r3, #1
900112c6:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
900112c8:	f7fe fe16 	bl	9000fef8 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
900112cc:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
900112d0:	b163      	cbz	r3, 900112ec <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
900112d2:	2b01      	cmp	r3, #1
900112d4:	d024      	beq.n	90011320 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
900112d6:	2b02      	cmp	r3, #2
900112d8:	d0e5      	beq.n	900112a6 <prvIdleTask+0xa>
900112da:	f04f 0350 	mov.w	r3, #80	@ 0x50
900112de:	f383 8811 	msr	BASEPRI, r3
900112e2:	f3bf 8f6f 	isb	sy
900112e6:	f3bf 8f4f 	dsb	sy
900112ea:	e7fe      	b.n	900112ea <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
900112ec:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
900112f0:	f7fe fcc8 	bl	9000fc84 <vPortFree>
				vPortFree( pxTCB );
900112f4:	4640      	mov	r0, r8
900112f6:	f7fe fcc5 	bl	9000fc84 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
900112fa:	6823      	ldr	r3, [r4, #0]
900112fc:	2b00      	cmp	r3, #0
900112fe:	d1d4      	bne.n	900112aa <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
90011300:	683b      	ldr	r3, [r7, #0]
90011302:	2b01      	cmp	r3, #1
90011304:	d909      	bls.n	9001131a <prvIdleTask+0x7e>
				taskYIELD();
90011306:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9001130a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9001130e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011312:	f3bf 8f4f 	dsb	sy
90011316:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9001131a:	f7f2 fd31 	bl	90003d80 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9001131e:	e7c2      	b.n	900112a6 <prvIdleTask+0xa>
				vPortFree( pxTCB );
90011320:	4640      	mov	r0, r8
90011322:	f7fe fcaf 	bl	9000fc84 <vPortFree>
90011326:	e7be      	b.n	900112a6 <prvIdleTask+0xa>
90011328:	24023f9c 	.word	0x24023f9c
9001132c:	24023fa0 	.word	0x24023fa0
90011330:	24023f84 	.word	0x24023f84
90011334:	24023ff8 	.word	0x24023ff8

90011338 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90011338:	4b49      	ldr	r3, [pc, #292]	@ (90011460 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9001133a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9001133e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
90011340:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
90011342:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
90011344:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
90011346:	2e00      	cmp	r6, #0
90011348:	d03e      	beq.n	900113c8 <xTaskIncrementTick.part.0+0x90>
9001134a:	4b46      	ldr	r3, [pc, #280]	@ (90011464 <xTaskIncrementTick.part.0+0x12c>)
9001134c:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9001134e:	681b      	ldr	r3, [r3, #0]
90011350:	429e      	cmp	r6, r3
90011352:	d346      	bcc.n	900113e2 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011354:	4f44      	ldr	r7, [pc, #272]	@ (90011468 <xTaskIncrementTick.part.0+0x130>)
90011356:	683b      	ldr	r3, [r7, #0]
90011358:	681d      	ldr	r5, [r3, #0]
9001135a:	2d00      	cmp	r5, #0
9001135c:	d077      	beq.n	9001144e <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9001135e:	2500      	movs	r5, #0
90011360:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 90011478 <xTaskIncrementTick.part.0+0x140>
90011364:	f8df a114 	ldr.w	sl, [pc, #276]	@ 9001147c <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
90011368:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 90011480 <xTaskIncrementTick.part.0+0x148>
9001136c:	e020      	b.n	900113b0 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9001136e:	f7fe fd25 	bl	9000fdbc <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90011372:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
90011374:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
90011378:	b10b      	cbz	r3, 9001137e <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9001137a:	f7fe fd1f 	bl	9000fdbc <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9001137e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90011380:	4659      	mov	r1, fp
90011382:	f8d8 2000 	ldr.w	r2, [r8]
90011386:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9001138a:	4293      	cmp	r3, r2
9001138c:	eb09 0080 	add.w	r0, r9, r0, lsl #2
90011390:	d901      	bls.n	90011396 <xTaskIncrementTick.part.0+0x5e>
90011392:	f8c8 3000 	str.w	r3, [r8]
90011396:	f7fe fceb 	bl	9000fd70 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9001139a:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001139e:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900113a0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
900113a2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900113a4:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
900113a6:	4291      	cmp	r1, r2
900113a8:	bf28      	it	cs
900113aa:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
900113ac:	2b00      	cmp	r3, #0
900113ae:	d052      	beq.n	90011456 <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900113b0:	683b      	ldr	r3, [r7, #0]
900113b2:	68db      	ldr	r3, [r3, #12]
900113b4:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
900113b6:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900113b8:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
900113bc:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900113be:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
900113c0:	d2d5      	bcs.n	9001136e <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
900113c2:	9a01      	ldr	r2, [sp, #4]
900113c4:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
900113c6:	e011      	b.n	900113ec <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
900113c8:	4b27      	ldr	r3, [pc, #156]	@ (90011468 <xTaskIncrementTick.part.0+0x130>)
900113ca:	681a      	ldr	r2, [r3, #0]
900113cc:	6812      	ldr	r2, [r2, #0]
900113ce:	b30a      	cbz	r2, 90011414 <xTaskIncrementTick.part.0+0xdc>
900113d0:	f04f 0350 	mov.w	r3, #80	@ 0x50
900113d4:	f383 8811 	msr	BASEPRI, r3
900113d8:	f3bf 8f6f 	isb	sy
900113dc:	f3bf 8f4f 	dsb	sy
900113e0:	e7fe      	b.n	900113e0 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
900113e2:	2500      	movs	r5, #0
900113e4:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 90011478 <xTaskIncrementTick.part.0+0x140>
900113e8:	f8df a090 	ldr.w	sl, [pc, #144]	@ 9001147c <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
900113ec:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
900113f0:	491e      	ldr	r1, [pc, #120]	@ (9001146c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
900113f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900113f4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900113f8:	009b      	lsls	r3, r3, #2
900113fa:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
900113fe:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
90011400:	2a02      	cmp	r2, #2
90011402:	bf28      	it	cs
90011404:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
90011406:	2b00      	cmp	r3, #0
}
90011408:	bf0c      	ite	eq
9001140a:	4628      	moveq	r0, r5
9001140c:	2001      	movne	r0, #1
9001140e:	b003      	add	sp, #12
90011410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
90011414:	4a16      	ldr	r2, [pc, #88]	@ (90011470 <xTaskIncrementTick.part.0+0x138>)
90011416:	6818      	ldr	r0, [r3, #0]
90011418:	6811      	ldr	r1, [r2, #0]
9001141a:	6019      	str	r1, [r3, #0]
9001141c:	4915      	ldr	r1, [pc, #84]	@ (90011474 <xTaskIncrementTick.part.0+0x13c>)
9001141e:	6010      	str	r0, [r2, #0]
90011420:	680a      	ldr	r2, [r1, #0]
90011422:	3201      	adds	r2, #1
90011424:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011426:	681a      	ldr	r2, [r3, #0]
90011428:	6812      	ldr	r2, [r2, #0]
9001142a:	b93a      	cbnz	r2, 9001143c <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9001142c:	4b0d      	ldr	r3, [pc, #52]	@ (90011464 <xTaskIncrementTick.part.0+0x12c>)
9001142e:	461a      	mov	r2, r3
90011430:	9301      	str	r3, [sp, #4]
90011432:	f04f 33ff 	mov.w	r3, #4294967295
90011436:	6013      	str	r3, [r2, #0]
90011438:	4613      	mov	r3, r2
9001143a:	e788      	b.n	9001134e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001143c:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9001143e:	4a09      	ldr	r2, [pc, #36]	@ (90011464 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011440:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011442:	9201      	str	r2, [sp, #4]
90011444:	68db      	ldr	r3, [r3, #12]
90011446:	685b      	ldr	r3, [r3, #4]
90011448:	6013      	str	r3, [r2, #0]
9001144a:	4613      	mov	r3, r2
	}
}
9001144c:	e77f      	b.n	9001134e <xTaskIncrementTick.part.0+0x16>
9001144e:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 90011478 <xTaskIncrementTick.part.0+0x140>
90011452:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9001147c <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011456:	f04f 33ff 	mov.w	r3, #4294967295
9001145a:	9a01      	ldr	r2, [sp, #4]
9001145c:	6013      	str	r3, [r2, #0]
					break;
9001145e:	e7c5      	b.n	900113ec <xTaskIncrementTick.part.0+0xb4>
90011460:	24023f80 	.word	0x24023f80
90011464:	24023f64 	.word	0x24023f64
90011468:	24023fcc 	.word	0x24023fcc
9001146c:	24023f70 	.word	0x24023f70
90011470:	24023fc8 	.word	0x24023fc8
90011474:	24023f6c 	.word	0x24023f6c
90011478:	24023ff8 	.word	0x24023ff8
9001147c:	24024458 	.word	0x24024458
90011480:	24023f7c 	.word	0x24023f7c

90011484 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
90011484:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
90011488:	4d43      	ldr	r5, [pc, #268]	@ (90011598 <xTaskResumeAll.part.0+0x114>)
	taskENTER_CRITICAL();
9001148a:	f7fe fd13 	bl	9000feb4 <vPortEnterCritical>
		--uxSchedulerSuspended;
9001148e:	682b      	ldr	r3, [r5, #0]
90011490:	3b01      	subs	r3, #1
90011492:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011494:	682b      	ldr	r3, [r5, #0]
90011496:	2b00      	cmp	r3, #0
90011498:	d168      	bne.n	9001156c <xTaskResumeAll.part.0+0xe8>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9001149a:	4b40      	ldr	r3, [pc, #256]	@ (9001159c <xTaskResumeAll.part.0+0x118>)
9001149c:	681b      	ldr	r3, [r3, #0]
9001149e:	2b00      	cmp	r3, #0
900114a0:	d064      	beq.n	9001156c <xTaskResumeAll.part.0+0xe8>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900114a2:	4e3f      	ldr	r6, [pc, #252]	@ (900115a0 <xTaskResumeAll.part.0+0x11c>)
900114a4:	6833      	ldr	r3, [r6, #0]
900114a6:	2b00      	cmp	r3, #0
900114a8:	d073      	beq.n	90011592 <xTaskResumeAll.part.0+0x10e>
900114aa:	4f3e      	ldr	r7, [pc, #248]	@ (900115a4 <xTaskResumeAll.part.0+0x120>)
900114ac:	f8df 9104 	ldr.w	r9, [pc, #260]	@ 900115b4 <xTaskResumeAll.part.0+0x130>
900114b0:	f8df 8104 	ldr.w	r8, [pc, #260]	@ 900115b8 <xTaskResumeAll.part.0+0x134>
900114b4:	f8df a104 	ldr.w	sl, [pc, #260]	@ 900115bc <xTaskResumeAll.part.0+0x138>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
900114b8:	68f3      	ldr	r3, [r6, #12]
900114ba:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900114be:	f10b 0404 	add.w	r4, fp, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
900114c2:	f10b 0018 	add.w	r0, fp, #24
900114c6:	f7fe fc79 	bl	9000fdbc <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
900114ca:	4620      	mov	r0, r4
900114cc:	f7fe fc76 	bl	9000fdbc <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
900114d0:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
900114d4:	4621      	mov	r1, r4
900114d6:	683c      	ldr	r4, [r7, #0]
900114d8:	eb02 0082 	add.w	r0, r2, r2, lsl #2
900114dc:	42a2      	cmp	r2, r4
900114de:	eb09 0080 	add.w	r0, r9, r0, lsl #2
900114e2:	d900      	bls.n	900114e6 <xTaskResumeAll.part.0+0x62>
900114e4:	603a      	str	r2, [r7, #0]
900114e6:	f7fe fc43 	bl	9000fd70 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
900114ea:	f8d8 1000 	ldr.w	r1, [r8]
900114ee:	f8db 202c 	ldr.w	r2, [fp, #44]	@ 0x2c
900114f2:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
900114f4:	429a      	cmp	r2, r3
900114f6:	d33f      	bcc.n	90011578 <xTaskResumeAll.part.0+0xf4>
						xYieldPending = pdTRUE;
900114f8:	2301      	movs	r3, #1
900114fa:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
900114fe:	6833      	ldr	r3, [r6, #0]
90011500:	2b00      	cmp	r3, #0
90011502:	d1d9      	bne.n	900114b8 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
90011504:	4b28      	ldr	r3, [pc, #160]	@ (900115a8 <xTaskResumeAll.part.0+0x124>)
90011506:	681a      	ldr	r2, [r3, #0]
90011508:	6812      	ldr	r2, [r2, #0]
9001150a:	2a00      	cmp	r2, #0
9001150c:	d03c      	beq.n	90011588 <xTaskResumeAll.part.0+0x104>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001150e:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011510:	4b26      	ldr	r3, [pc, #152]	@ (900115ac <xTaskResumeAll.part.0+0x128>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011512:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
90011514:	68d2      	ldr	r2, [r2, #12]
90011516:	6852      	ldr	r2, [r2, #4]
90011518:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9001151a:	4e25      	ldr	r6, [pc, #148]	@ (900115b0 <xTaskResumeAll.part.0+0x12c>)
9001151c:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9001151e:	b194      	cbz	r4, 90011546 <xTaskResumeAll.part.0+0xc2>
								xYieldPending = pdTRUE;
90011520:	2701      	movs	r7, #1
90011522:	e006      	b.n	90011532 <xTaskResumeAll.part.0+0xae>
90011524:	f7ff ff08 	bl	90011338 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
90011528:	b108      	cbz	r0, 9001152e <xTaskResumeAll.part.0+0xaa>
								xYieldPending = pdTRUE;
9001152a:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001152e:	3c01      	subs	r4, #1
90011530:	d008      	beq.n	90011544 <xTaskResumeAll.part.0+0xc0>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011532:	682b      	ldr	r3, [r5, #0]
90011534:	2b00      	cmp	r3, #0
90011536:	d0f5      	beq.n	90011524 <xTaskResumeAll.part.0+0xa0>
		++xPendedTicks;
90011538:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9001153a:	3c01      	subs	r4, #1
		++xPendedTicks;
9001153c:	f103 0301 	add.w	r3, r3, #1
90011540:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
90011542:	d1f6      	bne.n	90011532 <xTaskResumeAll.part.0+0xae>
						xPendedTicks = 0;
90011544:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
90011546:	f8da 3000 	ldr.w	r3, [sl]
9001154a:	b17b      	cbz	r3, 9001156c <xTaskResumeAll.part.0+0xe8>
					taskYIELD_IF_USING_PREEMPTION();
9001154c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011550:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90011554:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011558:	f3bf 8f4f 	dsb	sy
9001155c:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
90011560:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90011562:	f7fe fcc9 	bl	9000fef8 <vPortExitCritical>
}
90011566:	4620      	mov	r0, r4
90011568:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
9001156c:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9001156e:	f7fe fcc3 	bl	9000fef8 <vPortExitCritical>
}
90011572:	4620      	mov	r0, r4
90011574:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
90011578:	6833      	ldr	r3, [r6, #0]
9001157a:	2b00      	cmp	r3, #0
9001157c:	d19c      	bne.n	900114b8 <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9001157e:	4b0a      	ldr	r3, [pc, #40]	@ (900115a8 <xTaskResumeAll.part.0+0x124>)
90011580:	681a      	ldr	r2, [r3, #0]
90011582:	6812      	ldr	r2, [r2, #0]
90011584:	2a00      	cmp	r2, #0
90011586:	d1c2      	bne.n	9001150e <xTaskResumeAll.part.0+0x8a>
		xNextTaskUnblockTime = portMAX_DELAY;
90011588:	4b08      	ldr	r3, [pc, #32]	@ (900115ac <xTaskResumeAll.part.0+0x128>)
9001158a:	f04f 32ff 	mov.w	r2, #4294967295
9001158e:	601a      	str	r2, [r3, #0]
90011590:	e7c3      	b.n	9001151a <xTaskResumeAll.part.0+0x96>
90011592:	f8df a028 	ldr.w	sl, [pc, #40]	@ 900115bc <xTaskResumeAll.part.0+0x138>
90011596:	e7c0      	b.n	9001151a <xTaskResumeAll.part.0+0x96>
90011598:	24023f60 	.word	0x24023f60
9001159c:	24023f84 	.word	0x24023f84
900115a0:	24023fb4 	.word	0x24023fb4
900115a4:	24023f7c 	.word	0x24023f7c
900115a8:	24023fcc 	.word	0x24023fcc
900115ac:	24023f64 	.word	0x24023f64
900115b0:	24023f74 	.word	0x24023f74
900115b4:	24023ff8 	.word	0x24023ff8
900115b8:	24024458 	.word	0x24024458
900115bc:	24023f70 	.word	0x24023f70

900115c0 <xTaskCreateStatic>:
	{
900115c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900115c4:	b083      	sub	sp, #12
900115c6:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
900115c8:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
900115cc:	b1bb      	cbz	r3, 900115fe <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
900115ce:	b16c      	cbz	r4, 900115ec <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
900115d0:	2360      	movs	r3, #96	@ 0x60
900115d2:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
900115d4:	9b01      	ldr	r3, [sp, #4]
900115d6:	2b60      	cmp	r3, #96	@ 0x60
900115d8:	d01a      	beq.n	90011610 <xTaskCreateStatic+0x50>
900115da:	f04f 0350 	mov.w	r3, #80	@ 0x50
900115de:	f383 8811 	msr	BASEPRI, r3
900115e2:	f3bf 8f6f 	isb	sy
900115e6:	f3bf 8f4f 	dsb	sy
900115ea:	e7fe      	b.n	900115ea <xTaskCreateStatic+0x2a>
900115ec:	f04f 0350 	mov.w	r3, #80	@ 0x50
900115f0:	f383 8811 	msr	BASEPRI, r3
900115f4:	f3bf 8f6f 	isb	sy
900115f8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
900115fc:	e7fe      	b.n	900115fc <xTaskCreateStatic+0x3c>
900115fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011602:	f383 8811 	msr	BASEPRI, r3
90011606:	f3bf 8f6f 	isb	sy
9001160a:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9001160e:	e7fe      	b.n	9001160e <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011610:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011612:	0096      	lsls	r6, r2, #2
90011614:	4607      	mov	r7, r0
90011616:	460d      	mov	r5, r1
90011618:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9001161a:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9001161c:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001161e:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011620:	4632      	mov	r2, r6
90011622:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011624:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011628:	f01b f8aa 	bl	9002c780 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001162c:	1f32      	subs	r2, r6, #4
9001162e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90011630:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011632:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
90011636:	2d00      	cmp	r5, #0
90011638:	d068      	beq.n	9001170c <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001163a:	782b      	ldrb	r3, [r5, #0]
9001163c:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
90011640:	2b00      	cmp	r3, #0
90011642:	d036      	beq.n	900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011644:	786b      	ldrb	r3, [r5, #1]
90011646:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9001164a:	b393      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001164c:	78ab      	ldrb	r3, [r5, #2]
9001164e:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011652:	b373      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011654:	78eb      	ldrb	r3, [r5, #3]
90011656:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9001165a:	b353      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001165c:	792b      	ldrb	r3, [r5, #4]
9001165e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011662:	b333      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011664:	796b      	ldrb	r3, [r5, #5]
90011666:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9001166a:	b313      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001166c:	79ab      	ldrb	r3, [r5, #6]
9001166e:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011672:	b1f3      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011674:	79eb      	ldrb	r3, [r5, #7]
90011676:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9001167a:	b1d3      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001167c:	7a2b      	ldrb	r3, [r5, #8]
9001167e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
90011682:	b1b3      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011684:	7a6b      	ldrb	r3, [r5, #9]
90011686:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9001168a:	b193      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001168c:	7aab      	ldrb	r3, [r5, #10]
9001168e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
90011692:	b173      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011694:	7aeb      	ldrb	r3, [r5, #11]
90011696:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9001169a:	b153      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001169c:	7b2b      	ldrb	r3, [r5, #12]
9001169e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
900116a2:	b133      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116a4:	7b6b      	ldrb	r3, [r5, #13]
900116a6:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
900116aa:	b113      	cbz	r3, 900116b2 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900116ac:	7bab      	ldrb	r3, [r5, #14]
900116ae:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
900116b2:	2300      	movs	r3, #0
900116b4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900116b8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
900116ba:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900116be:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900116c0:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
900116c2:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900116c6:	bf28      	it	cs
900116c8:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
900116ca:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
900116cc:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900116ce:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900116d2:	f7fe fb49 	bl	9000fd68 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900116d6:	f104 0018 	add.w	r0, r4, #24
900116da:	f7fe fb45 	bl	9000fd68 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900116de:	4642      	mov	r2, r8
900116e0:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
900116e2:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900116e6:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900116e8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
900116ea:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
900116ec:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
900116ee:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
900116f2:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900116f6:	f7fe fbb3 	bl	9000fe60 <pxPortInitialiseStack>
900116fa:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
900116fc:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900116fe:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011700:	f7ff fd44 	bl	9001118c <prvAddNewTaskToReadyList>
	}
90011704:	4620      	mov	r0, r4
90011706:	b003      	add	sp, #12
90011708:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9001170c:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
90011710:	e7d2      	b.n	900116b8 <xTaskCreateStatic+0xf8>
90011712:	bf00      	nop

90011714 <xTaskCreate>:
	{
90011714:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011718:	0096      	lsls	r6, r2, #2
	{
9001171a:	4680      	mov	r8, r0
9001171c:	460d      	mov	r5, r1
9001171e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
90011720:	4630      	mov	r0, r6
90011722:	f7fe f9f3 	bl	9000fb0c <pvPortMalloc>
			if( pxStack != NULL )
90011726:	2800      	cmp	r0, #0
90011728:	d07f      	beq.n	9001182a <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9001172a:	4607      	mov	r7, r0
9001172c:	2060      	movs	r0, #96	@ 0x60
9001172e:	f7fe f9ed 	bl	9000fb0c <pvPortMalloc>
				if( pxNewTCB != NULL )
90011732:	4604      	mov	r4, r0
90011734:	2800      	cmp	r0, #0
90011736:	d075      	beq.n	90011824 <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011738:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9001173a:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001173c:	4632      	mov	r2, r6
9001173e:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
90011740:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011744:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011746:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011748:	f01b f81a 	bl	9002c780 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001174c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9001174e:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
90011750:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
90011754:	2d00      	cmp	r5, #0
90011756:	d06c      	beq.n	90011832 <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011758:	782b      	ldrb	r3, [r5, #0]
9001175a:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9001175e:	2b00      	cmp	r3, #0
90011760:	d036      	beq.n	900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011762:	786b      	ldrb	r3, [r5, #1]
90011764:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
90011768:	b393      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001176a:	78ab      	ldrb	r3, [r5, #2]
9001176c:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
90011770:	b373      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011772:	78eb      	ldrb	r3, [r5, #3]
90011774:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
90011778:	b353      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001177a:	792b      	ldrb	r3, [r5, #4]
9001177c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
90011780:	b333      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011782:	796b      	ldrb	r3, [r5, #5]
90011784:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
90011788:	b313      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001178a:	79ab      	ldrb	r3, [r5, #6]
9001178c:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
90011790:	b1f3      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011792:	79eb      	ldrb	r3, [r5, #7]
90011794:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
90011798:	b1d3      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001179a:	7a2b      	ldrb	r3, [r5, #8]
9001179c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
900117a0:	b1b3      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117a2:	7a6b      	ldrb	r3, [r5, #9]
900117a4:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
900117a8:	b193      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117aa:	7aab      	ldrb	r3, [r5, #10]
900117ac:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
900117b0:	b173      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117b2:	7aeb      	ldrb	r3, [r5, #11]
900117b4:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
900117b8:	b153      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117ba:	7b2b      	ldrb	r3, [r5, #12]
900117bc:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
900117c0:	b133      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117c2:	7b6b      	ldrb	r3, [r5, #13]
900117c4:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
900117c8:	b113      	cbz	r3, 900117d0 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
900117ca:	7bab      	ldrb	r3, [r5, #14]
900117cc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
900117d0:	2300      	movs	r3, #0
900117d2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900117d6:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
900117d8:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900117da:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900117dc:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
900117de:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
900117e0:	bf28      	it	cs
900117e2:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
900117e4:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
900117e6:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900117e8:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
900117ec:	f7fe fabc 	bl	9000fd68 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
900117f0:	f104 0018 	add.w	r0, r4, #24
900117f4:	f7fe fab8 	bl	9000fd68 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
900117f8:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
900117fa:	464a      	mov	r2, r9
900117fc:	4641      	mov	r1, r8
900117fe:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011800:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
90011802:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
90011804:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
90011806:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011808:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001180c:	f7fe fb28 	bl	9000fe60 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
90011810:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011812:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
90011814:	b103      	cbz	r3, 90011818 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
90011816:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
90011818:	4620      	mov	r0, r4
9001181a:	f7ff fcb7 	bl	9001118c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9001181e:	2001      	movs	r0, #1
	}
90011820:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
90011824:	4638      	mov	r0, r7
90011826:	f7fe fa2d 	bl	9000fc84 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9001182a:	f04f 30ff 	mov.w	r0, #4294967295
	}
9001182e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
90011832:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
90011836:	e7ce      	b.n	900117d6 <xTaskCreate+0xc2>

90011838 <vTaskDelay>:
	{
90011838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9001183a:	b950      	cbnz	r0, 90011852 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9001183c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
90011840:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
90011844:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
90011848:	f3bf 8f4f 	dsb	sy
9001184c:	f3bf 8f6f 	isb	sy
	}
90011850:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
90011852:	4d1e      	ldr	r5, [pc, #120]	@ (900118cc <vTaskDelay+0x94>)
90011854:	682b      	ldr	r3, [r5, #0]
90011856:	b143      	cbz	r3, 9001186a <vTaskDelay+0x32>
90011858:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001185c:	f383 8811 	msr	BASEPRI, r3
90011860:	f3bf 8f6f 	isb	sy
90011864:	f3bf 8f4f 	dsb	sy
90011868:	e7fe      	b.n	90011868 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9001186a:	682b      	ldr	r3, [r5, #0]
9001186c:	4604      	mov	r4, r0
9001186e:	3301      	adds	r3, #1
90011870:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
90011872:	4b17      	ldr	r3, [pc, #92]	@ (900118d0 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011874:	4e17      	ldr	r6, [pc, #92]	@ (900118d4 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
90011876:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011878:	6830      	ldr	r0, [r6, #0]
9001187a:	3004      	adds	r0, #4
9001187c:	f7fe fa9e 	bl	9000fdbc <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
90011880:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011882:	6833      	ldr	r3, [r6, #0]
90011884:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
90011886:	d315      	bcc.n	900118b4 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011888:	4b13      	ldr	r3, [pc, #76]	@ (900118d8 <vTaskDelay+0xa0>)
9001188a:	6818      	ldr	r0, [r3, #0]
9001188c:	6831      	ldr	r1, [r6, #0]
9001188e:	3104      	adds	r1, #4
90011890:	f7fe fa7c 	bl	9000fd8c <vListInsert>
	configASSERT( uxSchedulerSuspended );
90011894:	682b      	ldr	r3, [r5, #0]
90011896:	b943      	cbnz	r3, 900118aa <vTaskDelay+0x72>
90011898:	f04f 0350 	mov.w	r3, #80	@ 0x50
9001189c:	f383 8811 	msr	BASEPRI, r3
900118a0:	f3bf 8f6f 	isb	sy
900118a4:	f3bf 8f4f 	dsb	sy
900118a8:	e7fe      	b.n	900118a8 <vTaskDelay+0x70>
900118aa:	f7ff fdeb 	bl	90011484 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
900118ae:	2800      	cmp	r0, #0
900118b0:	d0c4      	beq.n	9001183c <vTaskDelay+0x4>
	}
900118b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
900118b4:	4b09      	ldr	r3, [pc, #36]	@ (900118dc <vTaskDelay+0xa4>)
900118b6:	6818      	ldr	r0, [r3, #0]
900118b8:	6831      	ldr	r1, [r6, #0]
900118ba:	3104      	adds	r1, #4
900118bc:	f7fe fa66 	bl	9000fd8c <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
900118c0:	4b07      	ldr	r3, [pc, #28]	@ (900118e0 <vTaskDelay+0xa8>)
900118c2:	681a      	ldr	r2, [r3, #0]
900118c4:	4294      	cmp	r4, r2
900118c6:	d2e5      	bcs.n	90011894 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
900118c8:	601c      	str	r4, [r3, #0]
900118ca:	e7e3      	b.n	90011894 <vTaskDelay+0x5c>
900118cc:	24023f60 	.word	0x24023f60
900118d0:	24023f80 	.word	0x24023f80
900118d4:	24024458 	.word	0x24024458
900118d8:	24023fc8 	.word	0x24023fc8
900118dc:	24023fcc 	.word	0x24023fcc
900118e0:	24023f64 	.word	0x24023f64

900118e4 <vTaskStartScheduler>:
{
900118e4:	b570      	push	{r4, r5, r6, lr}
900118e6:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
900118e8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900118ea:	4668      	mov	r0, sp
900118ec:	aa02      	add	r2, sp, #8
900118ee:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
900118f0:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
900118f4:	f7fe f8ec 	bl	9000fad0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
900118f8:	9d00      	ldr	r5, [sp, #0]
900118fa:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
900118fe:	b1b8      	cbz	r0, 90011930 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
90011900:	b16d      	cbz	r5, 9001191e <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
90011902:	2260      	movs	r2, #96	@ 0x60
90011904:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
90011906:	9a03      	ldr	r2, [sp, #12]
90011908:	2a60      	cmp	r2, #96	@ 0x60
9001190a:	d01a      	beq.n	90011942 <vTaskStartScheduler+0x5e>
9001190c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011910:	f383 8811 	msr	BASEPRI, r3
90011914:	f3bf 8f6f 	isb	sy
90011918:	f3bf 8f4f 	dsb	sy
9001191c:	e7fe      	b.n	9001191c <vTaskStartScheduler+0x38>
9001191e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011922:	f383 8811 	msr	BASEPRI, r3
90011926:	f3bf 8f6f 	isb	sy
9001192a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9001192e:	e7fe      	b.n	9001192e <vTaskStartScheduler+0x4a>
90011930:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011934:	f383 8811 	msr	BASEPRI, r3
90011938:	f3bf 8f6f 	isb	sy
9001193c:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
90011940:	e7fe      	b.n	90011940 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011942:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
90011944:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011946:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
90011948:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9001194a:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9001194c:	f885 305d 	strb.w	r3, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
90011950:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
90011952:	f01a ff15 	bl	9002c780 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
90011956:	1f33      	subs	r3, r6, #4
90011958:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9001195a:	492a      	ldr	r1, [pc, #168]	@ (90011a04 <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9001195c:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9001195e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
90011960:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
90011964:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
90011966:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9001196a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9001196e:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
90011970:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
90011974:	f7fe f9f8 	bl	9000fd68 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
90011978:	f105 0018 	add.w	r0, r5, #24
9001197c:	f7fe f9f4 	bl	9000fd68 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011980:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011982:	4622      	mov	r2, r4
90011984:	4920      	ldr	r1, [pc, #128]	@ (90011a08 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
90011986:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011988:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001198a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9001198c:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9001198e:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
90011990:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
90011992:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
90011996:	f7fe fa63 	bl	9000fe60 <pxPortInitialiseStack>
9001199a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9001199c:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9001199e:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
900119a0:	f7ff fbf4 	bl	9001118c <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
900119a4:	f000 fc86 	bl	900122b4 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
900119a8:	2801      	cmp	r0, #1
900119aa:	d00c      	beq.n	900119c6 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900119ac:	3001      	adds	r0, #1
900119ae:	d001      	beq.n	900119b4 <vTaskStartScheduler+0xd0>
}
900119b0:	b004      	add	sp, #16
900119b2:	bd70      	pop	{r4, r5, r6, pc}
900119b4:	f04f 0350 	mov.w	r3, #80	@ 0x50
900119b8:	f383 8811 	msr	BASEPRI, r3
900119bc:	f3bf 8f6f 	isb	sy
900119c0:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
900119c4:	e7fe      	b.n	900119c4 <vTaskStartScheduler+0xe0>
900119c6:	f04f 0350 	mov.w	r3, #80	@ 0x50
900119ca:	f383 8811 	msr	BASEPRI, r3
900119ce:	f3bf 8f6f 	isb	sy
900119d2:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
900119d6:	4b0d      	ldr	r3, [pc, #52]	@ (90011a0c <vTaskStartScheduler+0x128>)
900119d8:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
900119dc:	490c      	ldr	r1, [pc, #48]	@ (90011a10 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
900119de:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
900119e0:	4b0c      	ldr	r3, [pc, #48]	@ (90011a14 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
900119e2:	4a0d      	ldr	r2, [pc, #52]	@ (90011a18 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
900119e4:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
900119e6:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
900119e8:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
900119ea:	b143      	cbz	r3, 900119fe <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
900119ec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900119ee:	b10b      	cbz	r3, 900119f4 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
900119f0:	2000      	movs	r0, #0
900119f2:	4798      	blx	r3
}
900119f4:	b004      	add	sp, #16
900119f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
900119fa:	f7fe baed 	b.w	9000ffd8 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
900119fe:	6813      	ldr	r3, [r2, #0]
90011a00:	e7f4      	b.n	900119ec <vTaskStartScheduler+0x108>
90011a02:	bf00      	nop
90011a04:	454c4449 	.word	0x454c4449
90011a08:	9001129d 	.word	0x9001129d
90011a0c:	24023f64 	.word	0x24023f64
90011a10:	24023f78 	.word	0x24023f78
90011a14:	24023f80 	.word	0x24023f80
90011a18:	24024458 	.word	0x24024458

90011a1c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
90011a1c:	4a02      	ldr	r2, [pc, #8]	@ (90011a28 <vTaskSuspendAll+0xc>)
90011a1e:	6813      	ldr	r3, [r2, #0]
90011a20:	3301      	adds	r3, #1
90011a22:	6013      	str	r3, [r2, #0]
}
90011a24:	4770      	bx	lr
90011a26:	bf00      	nop
90011a28:	24023f60 	.word	0x24023f60

90011a2c <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
90011a2c:	4b06      	ldr	r3, [pc, #24]	@ (90011a48 <xTaskResumeAll+0x1c>)
90011a2e:	681b      	ldr	r3, [r3, #0]
90011a30:	b943      	cbnz	r3, 90011a44 <xTaskResumeAll+0x18>
90011a32:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011a36:	f383 8811 	msr	BASEPRI, r3
90011a3a:	f3bf 8f6f 	isb	sy
90011a3e:	f3bf 8f4f 	dsb	sy
90011a42:	e7fe      	b.n	90011a42 <xTaskResumeAll+0x16>
90011a44:	f7ff bd1e 	b.w	90011484 <xTaskResumeAll.part.0>
90011a48:	24023f60 	.word	0x24023f60

90011a4c <xTaskGetTickCount>:
		xTicks = xTickCount;
90011a4c:	4b01      	ldr	r3, [pc, #4]	@ (90011a54 <xTaskGetTickCount+0x8>)
90011a4e:	6818      	ldr	r0, [r3, #0]
}
90011a50:	4770      	bx	lr
90011a52:	bf00      	nop
90011a54:	24023f80 	.word	0x24023f80

90011a58 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011a58:	4b05      	ldr	r3, [pc, #20]	@ (90011a70 <xTaskIncrementTick+0x18>)
90011a5a:	681b      	ldr	r3, [r3, #0]
90011a5c:	b90b      	cbnz	r3, 90011a62 <xTaskIncrementTick+0xa>
90011a5e:	f7ff bc6b 	b.w	90011338 <xTaskIncrementTick.part.0>
		++xPendedTicks;
90011a62:	4a04      	ldr	r2, [pc, #16]	@ (90011a74 <xTaskIncrementTick+0x1c>)
}
90011a64:	2000      	movs	r0, #0
		++xPendedTicks;
90011a66:	6813      	ldr	r3, [r2, #0]
90011a68:	3301      	adds	r3, #1
90011a6a:	6013      	str	r3, [r2, #0]
}
90011a6c:	4770      	bx	lr
90011a6e:	bf00      	nop
90011a70:	24023f60 	.word	0x24023f60
90011a74:	24023f74 	.word	0x24023f74

90011a78 <vTaskSetApplicationTaskTag>:
	{
90011a78:	b538      	push	{r3, r4, r5, lr}
90011a7a:	460d      	mov	r5, r1
		if( xTask == NULL )
90011a7c:	b138      	cbz	r0, 90011a8e <vTaskSetApplicationTaskTag+0x16>
90011a7e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
90011a80:	f7fe fa18 	bl	9000feb4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011a84:	6565      	str	r5, [r4, #84]	@ 0x54
	}
90011a86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011a8a:	f7fe ba35 	b.w	9000fef8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
90011a8e:	4b04      	ldr	r3, [pc, #16]	@ (90011aa0 <vTaskSetApplicationTaskTag+0x28>)
90011a90:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
90011a92:	f7fe fa0f 	bl	9000feb4 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
90011a96:	6565      	str	r5, [r4, #84]	@ 0x54
	}
90011a98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
90011a9c:	f7fe ba2c 	b.w	9000fef8 <vPortExitCritical>
90011aa0:	24024458 	.word	0x24024458

90011aa4 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
90011aa4:	4b27      	ldr	r3, [pc, #156]	@ (90011b44 <vTaskSwitchContext+0xa0>)
90011aa6:	681b      	ldr	r3, [r3, #0]
90011aa8:	b11b      	cbz	r3, 90011ab2 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
90011aaa:	4b27      	ldr	r3, [pc, #156]	@ (90011b48 <vTaskSwitchContext+0xa4>)
90011aac:	2201      	movs	r2, #1
90011aae:	601a      	str	r2, [r3, #0]
90011ab0:	4770      	bx	lr
{
90011ab2:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
90011ab4:	4a24      	ldr	r2, [pc, #144]	@ (90011b48 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
90011ab6:	4c25      	ldr	r4, [pc, #148]	@ (90011b4c <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
90011ab8:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
90011aba:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011abc:	2b00      	cmp	r3, #0
90011abe:	d036      	beq.n	90011b2e <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
90011ac0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011ac2:	b10b      	cbz	r3, 90011ac8 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011ac4:	2001      	movs	r0, #1
90011ac6:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011ac8:	4d21      	ldr	r5, [pc, #132]	@ (90011b50 <vTaskSwitchContext+0xac>)
90011aca:	4922      	ldr	r1, [pc, #136]	@ (90011b54 <vTaskSwitchContext+0xb0>)
90011acc:	682b      	ldr	r3, [r5, #0]
90011ace:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90011ad2:	0098      	lsls	r0, r3, #2
90011ad4:	0092      	lsls	r2, r2, #2
90011ad6:	588a      	ldr	r2, [r1, r2]
90011ad8:	b942      	cbnz	r2, 90011aec <vTaskSwitchContext+0x48>
90011ada:	b1fb      	cbz	r3, 90011b1c <vTaskSwitchContext+0x78>
90011adc:	3b01      	subs	r3, #1
90011ade:	eb03 0283 	add.w	r2, r3, r3, lsl #2
90011ae2:	0098      	lsls	r0, r3, #2
90011ae4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90011ae8:	2a00      	cmp	r2, #0
90011aea:	d0f6      	beq.n	90011ada <vTaskSwitchContext+0x36>
90011aec:	4418      	add	r0, r3
90011aee:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
90011af2:	f8dc 1004 	ldr.w	r1, [ip, #4]
90011af6:	4662      	mov	r2, ip
90011af8:	6849      	ldr	r1, [r1, #4]
90011afa:	3208      	adds	r2, #8
90011afc:	4291      	cmp	r1, r2
90011afe:	f8cc 1004 	str.w	r1, [ip, #4]
90011b02:	d01b      	beq.n	90011b3c <vTaskSwitchContext+0x98>
90011b04:	68ca      	ldr	r2, [r1, #12]
90011b06:	6022      	str	r2, [r4, #0]
90011b08:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
90011b0a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
90011b0c:	b1a3      	cbz	r3, 90011b38 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
90011b0e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011b10:	b11b      	cbz	r3, 90011b1a <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
90011b12:	2000      	movs	r0, #0
}
90011b14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
90011b18:	4718      	bx	r3
}
90011b1a:	bd70      	pop	{r4, r5, r6, pc}
90011b1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011b20:	f383 8811 	msr	BASEPRI, r3
90011b24:	f3bf 8f6f 	isb	sy
90011b28:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011b2c:	e7fe      	b.n	90011b2c <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
90011b2e:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
90011b30:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90011b32:	2b00      	cmp	r3, #0
90011b34:	d1c6      	bne.n	90011ac4 <vTaskSwitchContext+0x20>
90011b36:	e7c7      	b.n	90011ac8 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
90011b38:	6823      	ldr	r3, [r4, #0]
90011b3a:	e7e8      	b.n	90011b0e <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011b3c:	6849      	ldr	r1, [r1, #4]
90011b3e:	f8cc 1004 	str.w	r1, [ip, #4]
90011b42:	e7df      	b.n	90011b04 <vTaskSwitchContext+0x60>
90011b44:	24023f60 	.word	0x24023f60
90011b48:	24023f70 	.word	0x24023f70
90011b4c:	24024458 	.word	0x24024458
90011b50:	24023f7c 	.word	0x24023f7c
90011b54:	24023ff8 	.word	0x24023ff8

90011b58 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
90011b58:	b1f0      	cbz	r0, 90011b98 <vTaskPlaceOnEventList+0x40>
{
90011b5a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90011b5c:	4d1a      	ldr	r5, [pc, #104]	@ (90011bc8 <vTaskPlaceOnEventList+0x70>)
90011b5e:	460c      	mov	r4, r1
90011b60:	6829      	ldr	r1, [r5, #0]
90011b62:	3118      	adds	r1, #24
90011b64:	f7fe f912 	bl	9000fd8c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
90011b68:	4b18      	ldr	r3, [pc, #96]	@ (90011bcc <vTaskPlaceOnEventList+0x74>)
90011b6a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011b6c:	6828      	ldr	r0, [r5, #0]
90011b6e:	3004      	adds	r0, #4
90011b70:	f7fe f924 	bl	9000fdbc <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
90011b74:	1c63      	adds	r3, r4, #1
90011b76:	d020      	beq.n	90011bba <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011b78:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011b7a:	682b      	ldr	r3, [r5, #0]
90011b7c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90011b7e:	d214      	bcs.n	90011baa <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011b80:	4b13      	ldr	r3, [pc, #76]	@ (90011bd0 <vTaskPlaceOnEventList+0x78>)
90011b82:	6818      	ldr	r0, [r3, #0]
90011b84:	6829      	ldr	r1, [r5, #0]
90011b86:	3104      	adds	r1, #4
90011b88:	f7fe f900 	bl	9000fd8c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011b8c:	4b11      	ldr	r3, [pc, #68]	@ (90011bd4 <vTaskPlaceOnEventList+0x7c>)
90011b8e:	681a      	ldr	r2, [r3, #0]
90011b90:	4294      	cmp	r4, r2
90011b92:	d200      	bcs.n	90011b96 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
90011b94:	601c      	str	r4, [r3, #0]
}
90011b96:	bd70      	pop	{r4, r5, r6, pc}
90011b98:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011b9c:	f383 8811 	msr	BASEPRI, r3
90011ba0:	f3bf 8f6f 	isb	sy
90011ba4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
90011ba8:	e7fe      	b.n	90011ba8 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011baa:	4b0b      	ldr	r3, [pc, #44]	@ (90011bd8 <vTaskPlaceOnEventList+0x80>)
90011bac:	6818      	ldr	r0, [r3, #0]
90011bae:	6829      	ldr	r1, [r5, #0]
}
90011bb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011bb4:	3104      	adds	r1, #4
90011bb6:	f7fe b8e9 	b.w	9000fd8c <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011bba:	6829      	ldr	r1, [r5, #0]
90011bbc:	4807      	ldr	r0, [pc, #28]	@ (90011bdc <vTaskPlaceOnEventList+0x84>)
90011bbe:	3104      	adds	r1, #4
}
90011bc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011bc4:	f7fe b8d4 	b.w	9000fd70 <vListInsertEnd>
90011bc8:	24024458 	.word	0x24024458
90011bcc:	24023f80 	.word	0x24023f80
90011bd0:	24023fcc 	.word	0x24023fcc
90011bd4:	24023f64 	.word	0x24023f64
90011bd8:	24023fc8 	.word	0x24023fc8
90011bdc:	24023f88 	.word	0x24023f88

90011be0 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
90011be0:	b358      	cbz	r0, 90011c3a <vTaskPlaceOnEventListRestricted+0x5a>
	{
90011be2:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
90011be4:	4e1d      	ldr	r6, [pc, #116]	@ (90011c5c <vTaskPlaceOnEventListRestricted+0x7c>)
90011be6:	460c      	mov	r4, r1
90011be8:	4615      	mov	r5, r2
90011bea:	6831      	ldr	r1, [r6, #0]
90011bec:	3118      	adds	r1, #24
90011bee:	f7fe f8bf 	bl	9000fd70 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
90011bf2:	b165      	cbz	r5, 90011c0e <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
90011bf4:	4b1a      	ldr	r3, [pc, #104]	@ (90011c60 <vTaskPlaceOnEventListRestricted+0x80>)
90011bf6:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011bf8:	6830      	ldr	r0, [r6, #0]
90011bfa:	3004      	adds	r0, #4
90011bfc:	f7fe f8de 	bl	9000fdbc <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c00:	6831      	ldr	r1, [r6, #0]
90011c02:	4818      	ldr	r0, [pc, #96]	@ (90011c64 <vTaskPlaceOnEventListRestricted+0x84>)
90011c04:	3104      	adds	r1, #4
	}
90011c06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c0a:	f7fe b8b1 	b.w	9000fd70 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
90011c0e:	4b14      	ldr	r3, [pc, #80]	@ (90011c60 <vTaskPlaceOnEventListRestricted+0x80>)
90011c10:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011c12:	6830      	ldr	r0, [r6, #0]
90011c14:	3004      	adds	r0, #4
90011c16:	f7fe f8d1 	bl	9000fdbc <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
90011c1a:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
90011c1c:	6833      	ldr	r3, [r6, #0]
90011c1e:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
90011c20:	d214      	bcs.n	90011c4c <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c22:	4b11      	ldr	r3, [pc, #68]	@ (90011c68 <vTaskPlaceOnEventListRestricted+0x88>)
90011c24:	6818      	ldr	r0, [r3, #0]
90011c26:	6831      	ldr	r1, [r6, #0]
90011c28:	3104      	adds	r1, #4
90011c2a:	f7fe f8af 	bl	9000fd8c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
90011c2e:	4b0f      	ldr	r3, [pc, #60]	@ (90011c6c <vTaskPlaceOnEventListRestricted+0x8c>)
90011c30:	681a      	ldr	r2, [r3, #0]
90011c32:	4294      	cmp	r4, r2
90011c34:	d200      	bcs.n	90011c38 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
90011c36:	601c      	str	r4, [r3, #0]
	}
90011c38:	bd70      	pop	{r4, r5, r6, pc}
90011c3a:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011c3e:	f383 8811 	msr	BASEPRI, r3
90011c42:	f3bf 8f6f 	isb	sy
90011c46:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
90011c4a:	e7fe      	b.n	90011c4a <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c4c:	4b08      	ldr	r3, [pc, #32]	@ (90011c70 <vTaskPlaceOnEventListRestricted+0x90>)
90011c4e:	6818      	ldr	r0, [r3, #0]
90011c50:	6831      	ldr	r1, [r6, #0]
	}
90011c52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
90011c56:	3104      	adds	r1, #4
90011c58:	f7fe b898 	b.w	9000fd8c <vListInsert>
90011c5c:	24024458 	.word	0x24024458
90011c60:	24023f80 	.word	0x24023f80
90011c64:	24023f88 	.word	0x24023f88
90011c68:	24023fcc 	.word	0x24023fcc
90011c6c:	24023f64 	.word	0x24023f64
90011c70:	24023fc8 	.word	0x24023fc8

90011c74 <xTaskRemoveFromEventList>:
{
90011c74:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011c76:	68c3      	ldr	r3, [r0, #12]
90011c78:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
90011c7a:	b34c      	cbz	r4, 90011cd0 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
90011c7c:	f104 0518 	add.w	r5, r4, #24
90011c80:	4628      	mov	r0, r5
90011c82:	f7fe f89b 	bl	9000fdbc <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011c86:	4b18      	ldr	r3, [pc, #96]	@ (90011ce8 <xTaskRemoveFromEventList+0x74>)
90011c88:	681b      	ldr	r3, [r3, #0]
90011c8a:	b173      	cbz	r3, 90011caa <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
90011c8c:	4629      	mov	r1, r5
90011c8e:	4817      	ldr	r0, [pc, #92]	@ (90011cec <xTaskRemoveFromEventList+0x78>)
90011c90:	f7fe f86e 	bl	9000fd70 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
90011c94:	4b16      	ldr	r3, [pc, #88]	@ (90011cf0 <xTaskRemoveFromEventList+0x7c>)
90011c96:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90011c98:	681b      	ldr	r3, [r3, #0]
90011c9a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011c9c:	429a      	cmp	r2, r3
90011c9e:	d920      	bls.n	90011ce2 <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
90011ca0:	2301      	movs	r3, #1
90011ca2:	4a14      	ldr	r2, [pc, #80]	@ (90011cf4 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
90011ca4:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
90011ca6:	6013      	str	r3, [r2, #0]
}
90011ca8:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
90011caa:	1d25      	adds	r5, r4, #4
90011cac:	4628      	mov	r0, r5
90011cae:	f7fe f885 	bl	9000fdbc <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
90011cb2:	4b11      	ldr	r3, [pc, #68]	@ (90011cf8 <xTaskRemoveFromEventList+0x84>)
90011cb4:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90011cb6:	681a      	ldr	r2, [r3, #0]
90011cb8:	4290      	cmp	r0, r2
90011cba:	d900      	bls.n	90011cbe <xTaskRemoveFromEventList+0x4a>
90011cbc:	6018      	str	r0, [r3, #0]
90011cbe:	4b0f      	ldr	r3, [pc, #60]	@ (90011cfc <xTaskRemoveFromEventList+0x88>)
90011cc0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011cc4:	4629      	mov	r1, r5
90011cc6:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90011cca:	f7fe f851 	bl	9000fd70 <vListInsertEnd>
90011cce:	e7e1      	b.n	90011c94 <xTaskRemoveFromEventList+0x20>
90011cd0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011cd4:	f383 8811 	msr	BASEPRI, r3
90011cd8:	f3bf 8f6f 	isb	sy
90011cdc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
90011ce0:	e7fe      	b.n	90011ce0 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
90011ce2:	2000      	movs	r0, #0
}
90011ce4:	bd38      	pop	{r3, r4, r5, pc}
90011ce6:	bf00      	nop
90011ce8:	24023f60 	.word	0x24023f60
90011cec:	24023fb4 	.word	0x24023fb4
90011cf0:	24024458 	.word	0x24024458
90011cf4:	24023f70 	.word	0x24023f70
90011cf8:	24023f7c 	.word	0x24023f7c
90011cfc:	24023ff8 	.word	0x24023ff8

90011d00 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011d00:	4a03      	ldr	r2, [pc, #12]	@ (90011d10 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
90011d02:	4b04      	ldr	r3, [pc, #16]	@ (90011d14 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011d04:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011d06:	681b      	ldr	r3, [r3, #0]
90011d08:	e9c0 2300 	strd	r2, r3, [r0]
}
90011d0c:	4770      	bx	lr
90011d0e:	bf00      	nop
90011d10:	24023f6c 	.word	0x24023f6c
90011d14:	24023f80 	.word	0x24023f80

90011d18 <xTaskCheckForTimeOut>:
{
90011d18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
90011d1a:	b308      	cbz	r0, 90011d60 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
90011d1c:	460d      	mov	r5, r1
90011d1e:	b1b1      	cbz	r1, 90011d4e <xTaskCheckForTimeOut+0x36>
90011d20:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
90011d22:	f7fe f8c7 	bl	9000feb4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
90011d26:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
90011d28:	4a1a      	ldr	r2, [pc, #104]	@ (90011d94 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
90011d2a:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
90011d2c:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
90011d2e:	d02c      	beq.n	90011d8a <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90011d30:	f8df c064 	ldr.w	ip, [pc, #100]	@ 90011d98 <xTaskCheckForTimeOut+0x80>
90011d34:	6826      	ldr	r6, [r4, #0]
90011d36:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90011d3a:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
90011d3c:	42be      	cmp	r6, r7
90011d3e:	d018      	beq.n	90011d72 <xTaskCheckForTimeOut+0x5a>
90011d40:	4288      	cmp	r0, r1
90011d42:	d816      	bhi.n	90011d72 <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
90011d44:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
90011d46:	f7fe f8d7 	bl	9000fef8 <vPortExitCritical>
}
90011d4a:	4620      	mov	r0, r4
90011d4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90011d4e:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011d52:	f383 8811 	msr	BASEPRI, r3
90011d56:	f3bf 8f6f 	isb	sy
90011d5a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
90011d5e:	e7fe      	b.n	90011d5e <xTaskCheckForTimeOut+0x46>
90011d60:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011d64:	f383 8811 	msr	BASEPRI, r3
90011d68:	f3bf 8f6f 	isb	sy
90011d6c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
90011d70:	e7fe      	b.n	90011d70 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
90011d72:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
90011d76:	4573      	cmp	r3, lr
90011d78:	d909      	bls.n	90011d8e <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
90011d7a:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
90011d7c:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011d80:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
90011d82:	4403      	add	r3, r0
90011d84:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
90011d86:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
90011d8a:	2400      	movs	r4, #0
90011d8c:	e7db      	b.n	90011d46 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
90011d8e:	2300      	movs	r3, #0
90011d90:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
90011d92:	e7d7      	b.n	90011d44 <xTaskCheckForTimeOut+0x2c>
90011d94:	24023f80 	.word	0x24023f80
90011d98:	24023f6c 	.word	0x24023f6c

90011d9c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
90011d9c:	4b01      	ldr	r3, [pc, #4]	@ (90011da4 <vTaskMissedYield+0x8>)
90011d9e:	2201      	movs	r2, #1
90011da0:	601a      	str	r2, [r3, #0]
}
90011da2:	4770      	bx	lr
90011da4:	24023f70 	.word	0x24023f70

90011da8 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
90011da8:	4b05      	ldr	r3, [pc, #20]	@ (90011dc0 <xTaskGetSchedulerState+0x18>)
90011daa:	681b      	ldr	r3, [r3, #0]
90011dac:	b133      	cbz	r3, 90011dbc <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
90011dae:	4b05      	ldr	r3, [pc, #20]	@ (90011dc4 <xTaskGetSchedulerState+0x1c>)
90011db0:	6818      	ldr	r0, [r3, #0]
90011db2:	fab0 f080 	clz	r0, r0
90011db6:	0940      	lsrs	r0, r0, #5
90011db8:	0040      	lsls	r0, r0, #1
90011dba:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
90011dbc:	2001      	movs	r0, #1
	}
90011dbe:	4770      	bx	lr
90011dc0:	24023f78 	.word	0x24023f78
90011dc4:	24023f60 	.word	0x24023f60

90011dc8 <xTaskPriorityInherit>:
	{
90011dc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
90011dca:	4604      	mov	r4, r0
90011dcc:	b1c8      	cbz	r0, 90011e02 <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
90011dce:	4d1b      	ldr	r5, [pc, #108]	@ (90011e3c <xTaskPriorityInherit+0x74>)
90011dd0:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90011dd2:	682a      	ldr	r2, [r5, #0]
90011dd4:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90011dd6:	4293      	cmp	r3, r2
90011dd8:	d214      	bcs.n	90011e04 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011dda:	6982      	ldr	r2, [r0, #24]
90011ddc:	2a00      	cmp	r2, #0
90011dde:	db04      	blt.n	90011dea <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011de0:	682a      	ldr	r2, [r5, #0]
90011de2:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90011de4:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
90011de8:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
90011dea:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90011dee:	4e14      	ldr	r6, [pc, #80]	@ (90011e40 <xTaskPriorityInherit+0x78>)
90011df0:	6962      	ldr	r2, [r4, #20]
90011df2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
90011df6:	429a      	cmp	r2, r3
90011df8:	d00c      	beq.n	90011e14 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011dfa:	682b      	ldr	r3, [r5, #0]
90011dfc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011dfe:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
90011e00:	2001      	movs	r0, #1
	}
90011e02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
90011e04:	682b      	ldr	r3, [r5, #0]
90011e06:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
90011e08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90011e0a:	4298      	cmp	r0, r3
90011e0c:	bf2c      	ite	cs
90011e0e:	2000      	movcs	r0, #0
90011e10:	2001      	movcc	r0, #1
	}
90011e12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011e14:	1d27      	adds	r7, r4, #4
90011e16:	4638      	mov	r0, r7
90011e18:	f7fd ffd0 	bl	9000fdbc <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011e1c:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011e1e:	4b09      	ldr	r3, [pc, #36]	@ (90011e44 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011e20:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011e22:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
90011e24:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
90011e26:	4290      	cmp	r0, r2
90011e28:	d900      	bls.n	90011e2c <xTaskPriorityInherit+0x64>
90011e2a:	6018      	str	r0, [r3, #0]
90011e2c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011e30:	4639      	mov	r1, r7
90011e32:	eb06 0080 	add.w	r0, r6, r0, lsl #2
90011e36:	f7fd ff9b 	bl	9000fd70 <vListInsertEnd>
90011e3a:	e7e1      	b.n	90011e00 <xTaskPriorityInherit+0x38>
90011e3c:	24024458 	.word	0x24024458
90011e40:	24023ff8 	.word	0x24023ff8
90011e44:	24023f7c 	.word	0x24023f7c

90011e48 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
90011e48:	b308      	cbz	r0, 90011e8e <xTaskPriorityDisinherit+0x46>
	{
90011e4a:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
90011e4c:	4b1d      	ldr	r3, [pc, #116]	@ (90011ec4 <xTaskPriorityDisinherit+0x7c>)
90011e4e:	681c      	ldr	r4, [r3, #0]
90011e50:	4284      	cmp	r4, r0
90011e52:	d008      	beq.n	90011e66 <xTaskPriorityDisinherit+0x1e>
90011e54:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011e58:	f383 8811 	msr	BASEPRI, r3
90011e5c:	f3bf 8f6f 	isb	sy
90011e60:	f3bf 8f4f 	dsb	sy
90011e64:	e7fe      	b.n	90011e64 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
90011e66:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90011e68:	b143      	cbz	r3, 90011e7c <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90011e6a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
90011e6c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
90011e6e:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
90011e70:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
90011e72:	4291      	cmp	r1, r2
90011e74:	d000      	beq.n	90011e78 <xTaskPriorityDisinherit+0x30>
90011e76:	b163      	cbz	r3, 90011e92 <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
90011e78:	2000      	movs	r0, #0
	}
90011e7a:	bd38      	pop	{r3, r4, r5, pc}
90011e7c:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011e80:	f383 8811 	msr	BASEPRI, r3
90011e84:	f3bf 8f6f 	isb	sy
90011e88:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90011e8c:	e7fe      	b.n	90011e8c <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
90011e8e:	2000      	movs	r0, #0
	}
90011e90:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011e92:	1d25      	adds	r5, r4, #4
90011e94:	4628      	mov	r0, r5
90011e96:	f7fd ff91 	bl	9000fdbc <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90011e9a:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
90011e9c:	4b0a      	ldr	r3, [pc, #40]	@ (90011ec8 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011e9e:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
90011ea2:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011ea4:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
90011ea6:	681a      	ldr	r2, [r3, #0]
90011ea8:	4290      	cmp	r0, r2
90011eaa:	d900      	bls.n	90011eae <xTaskPriorityDisinherit+0x66>
90011eac:	6018      	str	r0, [r3, #0]
90011eae:	4b07      	ldr	r3, [pc, #28]	@ (90011ecc <xTaskPriorityDisinherit+0x84>)
90011eb0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011eb4:	4629      	mov	r1, r5
90011eb6:	eb03 0080 	add.w	r0, r3, r0, lsl #2
90011eba:	f7fd ff59 	bl	9000fd70 <vListInsertEnd>
					xReturn = pdTRUE;
90011ebe:	2001      	movs	r0, #1
	}
90011ec0:	bd38      	pop	{r3, r4, r5, pc}
90011ec2:	bf00      	nop
90011ec4:	24024458 	.word	0x24024458
90011ec8:	24023f7c 	.word	0x24023f7c
90011ecc:	24023ff8 	.word	0x24023ff8

90011ed0 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
90011ed0:	2800      	cmp	r0, #0
90011ed2:	d03c      	beq.n	90011f4e <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
90011ed4:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
90011ed6:	b570      	push	{r4, r5, r6, lr}
90011ed8:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
90011eda:	b14b      	cbz	r3, 90011ef0 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
90011edc:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
90011ede:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90011ee0:	4281      	cmp	r1, r0
90011ee2:	bf38      	it	cc
90011ee4:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
90011ee6:	2b01      	cmp	r3, #1
90011ee8:	d101      	bne.n	90011eee <vTaskPriorityDisinheritAfterTimeout+0x1e>
90011eea:	428a      	cmp	r2, r1
90011eec:	d109      	bne.n	90011f02 <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
90011eee:	bd70      	pop	{r4, r5, r6, pc}
90011ef0:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011ef4:	f383 8811 	msr	BASEPRI, r3
90011ef8:	f3bf 8f6f 	isb	sy
90011efc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
90011f00:	e7fe      	b.n	90011f00 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
90011f02:	4b18      	ldr	r3, [pc, #96]	@ (90011f64 <vTaskPriorityDisinheritAfterTimeout+0x94>)
90011f04:	681b      	ldr	r3, [r3, #0]
90011f06:	42a3      	cmp	r3, r4
90011f08:	d022      	beq.n	90011f50 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011f0a:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
90011f0c:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
90011f0e:	2b00      	cmp	r3, #0
90011f10:	db02      	blt.n	90011f18 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
90011f12:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
90011f16:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
90011f18:	eb02 0282 	add.w	r2, r2, r2, lsl #2
90011f1c:	4d12      	ldr	r5, [pc, #72]	@ (90011f68 <vTaskPriorityDisinheritAfterTimeout+0x98>)
90011f1e:	6961      	ldr	r1, [r4, #20]
90011f20:	eb05 0382 	add.w	r3, r5, r2, lsl #2
90011f24:	4299      	cmp	r1, r3
90011f26:	d1e2      	bne.n	90011eee <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
90011f28:	1d26      	adds	r6, r4, #4
90011f2a:	4630      	mov	r0, r6
90011f2c:	f7fd ff46 	bl	9000fdbc <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
90011f30:	4b0e      	ldr	r3, [pc, #56]	@ (90011f6c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
90011f32:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90011f34:	681a      	ldr	r2, [r3, #0]
90011f36:	4290      	cmp	r0, r2
90011f38:	d900      	bls.n	90011f3c <vTaskPriorityDisinheritAfterTimeout+0x6c>
90011f3a:	6018      	str	r0, [r3, #0]
90011f3c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90011f40:	4631      	mov	r1, r6
90011f42:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
90011f46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
90011f4a:	f7fd bf11 	b.w	9000fd70 <vListInsertEnd>
90011f4e:	4770      	bx	lr
90011f50:	f04f 0350 	mov.w	r3, #80	@ 0x50
90011f54:	f383 8811 	msr	BASEPRI, r3
90011f58:	f3bf 8f6f 	isb	sy
90011f5c:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
90011f60:	e7fe      	b.n	90011f60 <vTaskPriorityDisinheritAfterTimeout+0x90>
90011f62:	bf00      	nop
90011f64:	24024458 	.word	0x24024458
90011f68:	24023ff8 	.word	0x24023ff8
90011f6c:	24023f7c 	.word	0x24023f7c

90011f70 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
90011f70:	4b04      	ldr	r3, [pc, #16]	@ (90011f84 <pvTaskIncrementMutexHeldCount+0x14>)
90011f72:	681a      	ldr	r2, [r3, #0]
90011f74:	b11a      	cbz	r2, 90011f7e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
90011f76:	6819      	ldr	r1, [r3, #0]
90011f78:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
90011f7a:	3201      	adds	r2, #1
90011f7c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
90011f7e:	6818      	ldr	r0, [r3, #0]
	}
90011f80:	4770      	bx	lr
90011f82:	bf00      	nop
90011f84:	24024458 	.word	0x24024458

90011f88 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
90011f88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011f8c:	4e21      	ldr	r6, [pc, #132]	@ (90012014 <prvSwitchTimerLists+0x8c>)
90011f8e:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90011f90:	e00d      	b.n	90011fae <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011f92:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
90011f94:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
90011f96:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90011f98:	1d25      	adds	r5, r4, #4
90011f9a:	4628      	mov	r0, r5
90011f9c:	f7fd ff0e 	bl	9000fdbc <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90011fa0:	6a23      	ldr	r3, [r4, #32]
90011fa2:	4620      	mov	r0, r4
90011fa4:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90011fa6:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
90011faa:	075b      	lsls	r3, r3, #29
90011fac:	d40a      	bmi.n	90011fc4 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
90011fae:	6833      	ldr	r3, [r6, #0]
90011fb0:	681a      	ldr	r2, [r3, #0]
90011fb2:	2a00      	cmp	r2, #0
90011fb4:	d1ed      	bne.n	90011f92 <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
90011fb6:	4a18      	ldr	r2, [pc, #96]	@ (90012018 <prvSwitchTimerLists+0x90>)
90011fb8:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
90011fba:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
90011fbc:	6031      	str	r1, [r6, #0]
}
90011fbe:	b004      	add	sp, #16
90011fc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90011fc4:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011fc6:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
90011fc8:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 9001201c <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
90011fcc:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
90011fce:	429f      	cmp	r7, r3
90011fd0:	d205      	bcs.n	90011fde <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011fd2:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
90011fd4:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
90011fd6:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90011fd8:	f7fd fed8 	bl	9000fd8c <vListInsert>
90011fdc:	e7e7      	b.n	90011fae <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
90011fde:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
90011fe2:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
90011fe4:	b16b      	cbz	r3, 90012002 <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90011fe6:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
90011fe8:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
90011fec:	f7ff fedc 	bl	90011da8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90011ff0:	462b      	mov	r3, r5
90011ff2:	462a      	mov	r2, r5
90011ff4:	4669      	mov	r1, sp
90011ff6:	f8d8 0000 	ldr.w	r0, [r8]
90011ffa:	f7fe fa47 	bl	9001048c <xQueueGenericSend>
				configASSERT( xResult );
90011ffe:	2800      	cmp	r0, #0
90012000:	d1d5      	bne.n	90011fae <prvSwitchTimerLists+0x26>
90012002:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012006:	f383 8811 	msr	BASEPRI, r3
9001200a:	f3bf 8f6f 	isb	sy
9001200e:	f3bf 8f4f 	dsb	sy
90012012:	e7fe      	b.n	90012012 <prvSwitchTimerLists+0x8a>
90012014:	2402455c 	.word	0x2402455c
90012018:	24024558 	.word	0x24024558
9001201c:	24024554 	.word	0x24024554

90012020 <prvTimerTask>:
{
90012020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012024:	4e9f      	ldr	r6, [pc, #636]	@ (900122a4 <prvTimerTask+0x284>)
90012026:	b089      	sub	sp, #36	@ 0x24
90012028:	4d9f      	ldr	r5, [pc, #636]	@ (900122a8 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9001202a:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9001202e:	4c9f      	ldr	r4, [pc, #636]	@ (900122ac <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
90012030:	6833      	ldr	r3, [r6, #0]
90012032:	681f      	ldr	r7, [r3, #0]
90012034:	2f00      	cmp	r7, #0
90012036:	f000 80b2 	beq.w	9001219e <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9001203a:	68db      	ldr	r3, [r3, #12]
9001203c:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9001203e:	f7ff fced 	bl	90011a1c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
90012042:	f7ff fd03 	bl	90011a4c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
90012046:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
90012048:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9001204a:	4298      	cmp	r0, r3
9001204c:	f0c0 80af 	bcc.w	900121ae <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90012050:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
90012052:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
90012054:	f200 80d0 	bhi.w	900121f8 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
90012058:	f7ff fce8 	bl	90011a2c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9001205c:	6833      	ldr	r3, [r6, #0]
9001205e:	68db      	ldr	r3, [r3, #12]
90012060:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
90012064:	f10b 0804 	add.w	r8, fp, #4
90012068:	4640      	mov	r0, r8
9001206a:	f7fd fea7 	bl	9000fdbc <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9001206e:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
90012072:	0758      	lsls	r0, r3, #29
90012074:	f100 80d0 	bmi.w	90012218 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90012078:	f023 0301 	bic.w	r3, r3, #1
9001207c:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
90012080:	f8db 3020 	ldr.w	r3, [fp, #32]
90012084:	4658      	mov	r0, fp
90012086:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
90012088:	2200      	movs	r2, #0
9001208a:	4669      	mov	r1, sp
9001208c:	6820      	ldr	r0, [r4, #0]
9001208e:	f7fe fc3b 	bl	90010908 <xQueueReceive>
90012092:	2800      	cmp	r0, #0
90012094:	d0cc      	beq.n	90012030 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
90012096:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
90012098:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9001209a:	2b00      	cmp	r3, #0
9001209c:	db77      	blt.n	9001218e <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9001209e:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
900120a0:	697b      	ldr	r3, [r7, #20]
900120a2:	b113      	cbz	r3, 900120aa <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
900120a4:	1d38      	adds	r0, r7, #4
900120a6:	f7fd fe89 	bl	9000fdbc <uxListRemove>
	xTimeNow = xTaskGetTickCount();
900120aa:	f7ff fccf 	bl	90011a4c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900120ae:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900120b0:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
900120b2:	4298      	cmp	r0, r3
900120b4:	f0c0 8082 	bcc.w	900121bc <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
900120b8:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
900120ba:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
900120be:	2b09      	cmp	r3, #9
900120c0:	d8e2      	bhi.n	90012088 <prvTimerTask+0x68>
900120c2:	e8df f003 	tbb	[pc, r3]
900120c6:	0505      	.short	0x0505
900120c8:	5b3e5405 	.word	0x5b3e5405
900120cc:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900120d0:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
900120d4:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900120d6:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
900120da:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
900120dc:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
900120e0:	69ba      	ldr	r2, [r7, #24]
900120e2:	1899      	adds	r1, r3, r2
900120e4:	bf2c      	ite	cs
900120e6:	2001      	movcs	r0, #1
900120e8:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
900120ea:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
900120ec:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
900120ee:	f200 8085 	bhi.w	900121fc <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
900120f2:	ebab 0303 	sub.w	r3, fp, r3
900120f6:	429a      	cmp	r2, r3
900120f8:	f200 80be 	bhi.w	90012278 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
900120fc:	6a3b      	ldr	r3, [r7, #32]
900120fe:	4638      	mov	r0, r7
90012100:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
90012102:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90012106:	0759      	lsls	r1, r3, #29
90012108:	d5be      	bpl.n	90012088 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9001210a:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9001210c:	9b01      	ldr	r3, [sp, #4]
9001210e:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
90012110:	b171      	cbz	r1, 90012130 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
90012112:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
90012114:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
90012118:	2700      	movs	r7, #0
9001211a:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001211c:	f7ff fe44 	bl	90011da8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90012120:	463b      	mov	r3, r7
90012122:	463a      	mov	r2, r7
90012124:	a904      	add	r1, sp, #16
90012126:	6820      	ldr	r0, [r4, #0]
90012128:	f7fe f9b0 	bl	9001048c <xQueueGenericSend>
							configASSERT( xResult );
9001212c:	2800      	cmp	r0, #0
9001212e:	d1ab      	bne.n	90012088 <prvTimerTask+0x68>
90012130:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012134:	f383 8811 	msr	BASEPRI, r3
90012138:	f3bf 8f6f 	isb	sy
9001213c:	f3bf 8f4f 	dsb	sy
90012140:	e7fe      	b.n	90012140 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012142:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
90012146:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
90012148:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9001214c:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9001214e:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
90012152:	2b00      	cmp	r3, #0
90012154:	f000 809c 	beq.w	90012290 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
90012158:	445b      	add	r3, fp
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9001215a:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001215c:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9001215e:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012160:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
90012162:	d855      	bhi.n	90012210 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90012164:	4b52      	ldr	r3, [pc, #328]	@ (900122b0 <prvTimerTask+0x290>)
90012166:	6818      	ldr	r0, [r3, #0]
90012168:	f7fd fe10 	bl	9000fd8c <vListInsert>
9001216c:	e78c      	b.n	90012088 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9001216e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90012172:	f023 0301 	bic.w	r3, r3, #1
90012176:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
9001217a:	e785      	b.n	90012088 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9001217c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
90012180:	079a      	lsls	r2, r3, #30
90012182:	d570      	bpl.n	90012266 <prvTimerTask+0x246>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
90012184:	f023 0301 	bic.w	r3, r3, #1
90012188:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
9001218c:	e77c      	b.n	90012088 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9001218e:	9b01      	ldr	r3, [sp, #4]
90012190:	9903      	ldr	r1, [sp, #12]
90012192:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
90012194:	9b00      	ldr	r3, [sp, #0]
90012196:	2b00      	cmp	r3, #0
90012198:	f6ff af76 	blt.w	90012088 <prvTimerTask+0x68>
9001219c:	e77f      	b.n	9001209e <prvTimerTask+0x7e>
	vTaskSuspendAll();
9001219e:	f7ff fc3d 	bl	90011a1c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
900121a2:	f7ff fc53 	bl	90011a4c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
900121a6:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
900121a8:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
900121aa:	4298      	cmp	r0, r3
900121ac:	d209      	bcs.n	900121c2 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
900121ae:	f7ff feeb 	bl	90011f88 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
900121b2:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
900121b6:	f7ff fc39 	bl	90011a2c <xTaskResumeAll>
900121ba:	e765      	b.n	90012088 <prvTimerTask+0x68>
		prvSwitchTimerLists();
900121bc:	f7ff fee4 	bl	90011f88 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
900121c0:	e77a      	b.n	900120b8 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900121c2:	4b3b      	ldr	r3, [pc, #236]	@ (900122b0 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
900121c4:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
900121c8:	681b      	ldr	r3, [r3, #0]
900121ca:	681a      	ldr	r2, [r3, #0]
900121cc:	fab2 f282 	clz	r2, r2
900121d0:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
900121d2:	eba7 010a 	sub.w	r1, r7, sl
900121d6:	6820      	ldr	r0, [r4, #0]
900121d8:	f7fe ff74 	bl	900110c4 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
900121dc:	f7ff fc26 	bl	90011a2c <xTaskResumeAll>
900121e0:	2800      	cmp	r0, #0
900121e2:	f47f af51 	bne.w	90012088 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
900121e6:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
900121ea:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
900121ee:	f3bf 8f4f 	dsb	sy
900121f2:	f3bf 8f6f 	isb	sy
900121f6:	e747      	b.n	90012088 <prvTimerTask+0x68>
900121f8:	2200      	movs	r2, #0
900121fa:	e7ea      	b.n	900121d2 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
900121fc:	455b      	cmp	r3, fp
900121fe:	d902      	bls.n	90012206 <prvTimerTask+0x1e6>
90012200:	2800      	cmp	r0, #0
90012202:	f43f af7b 	beq.w	900120fc <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012206:	1d39      	adds	r1, r7, #4
90012208:	6830      	ldr	r0, [r6, #0]
9001220a:	f7fd fdbf 	bl	9000fd8c <vListInsert>
	return xProcessTimerNow;
9001220e:	e73b      	b.n	90012088 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
90012210:	6830      	ldr	r0, [r6, #0]
90012212:	f7fd fdbb 	bl	9000fd8c <vListInsert>
90012216:	e737      	b.n	90012088 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90012218:	f8db 0018 	ldr.w	r0, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9001221c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
90012220:	183b      	adds	r3, r7, r0
	if( xNextExpiryTime <= xTimeNow )
90012222:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
90012224:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
90012228:	d321      	bcc.n	9001226e <prvTimerTask+0x24e>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9001222a:	ebaa 0a07 	sub.w	sl, sl, r7
9001222e:	4550      	cmp	r0, sl
90012230:	d828      	bhi.n	90012284 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
90012232:	6823      	ldr	r3, [r4, #0]
90012234:	b173      	cbz	r3, 90012254 <prvTimerTask+0x234>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
90012236:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
9001223a:	2700      	movs	r7, #0
9001223c:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9001223e:	f7ff fdb3 	bl	90011da8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
90012242:	463b      	mov	r3, r7
90012244:	463a      	mov	r2, r7
90012246:	a904      	add	r1, sp, #16
90012248:	6820      	ldr	r0, [r4, #0]
9001224a:	f7fe f91f 	bl	9001048c <xQueueGenericSend>
			configASSERT( xResult );
9001224e:	2800      	cmp	r0, #0
90012250:	f47f af16 	bne.w	90012080 <prvTimerTask+0x60>
90012254:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012258:	f383 8811 	msr	BASEPRI, r3
9001225c:	f3bf 8f6f 	isb	sy
90012260:	f3bf 8f4f 	dsb	sy
90012264:	e7fe      	b.n	90012264 <prvTimerTask+0x244>
							vPortFree( pxTimer );
90012266:	4638      	mov	r0, r7
90012268:	f7fd fd0c 	bl	9000fc84 <vPortFree>
9001226c:	e70c      	b.n	90012088 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9001226e:	4641      	mov	r1, r8
90012270:	6830      	ldr	r0, [r6, #0]
90012272:	f7fd fd8b 	bl	9000fd8c <vListInsert>
	return xProcessTimerNow;
90012276:	e703      	b.n	90012080 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90012278:	4b0d      	ldr	r3, [pc, #52]	@ (900122b0 <prvTimerTask+0x290>)
9001227a:	1d39      	adds	r1, r7, #4
9001227c:	6818      	ldr	r0, [r3, #0]
9001227e:	f7fd fd85 	bl	9000fd8c <vListInsert>
	return xProcessTimerNow;
90012282:	e701      	b.n	90012088 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
90012284:	4b0a      	ldr	r3, [pc, #40]	@ (900122b0 <prvTimerTask+0x290>)
90012286:	4641      	mov	r1, r8
90012288:	6818      	ldr	r0, [r3, #0]
9001228a:	f7fd fd7f 	bl	9000fd8c <vListInsert>
	return xProcessTimerNow;
9001228e:	e6f7      	b.n	90012080 <prvTimerTask+0x60>
90012290:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012294:	f383 8811 	msr	BASEPRI, r3
90012298:	f3bf 8f6f 	isb	sy
9001229c:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
900122a0:	e7fe      	b.n	900122a0 <prvTimerTask+0x280>
900122a2:	bf00      	nop
900122a4:	2402455c 	.word	0x2402455c
900122a8:	2402454c 	.word	0x2402454c
900122ac:	24024554 	.word	0x24024554
900122b0:	24024558 	.word	0x24024558

900122b4 <xTimerCreateTimerTask>:
{
900122b4:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
900122b6:	4c23      	ldr	r4, [pc, #140]	@ (90012344 <xTimerCreateTimerTask+0x90>)
{
900122b8:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
900122ba:	f7fd fdfb 	bl	9000feb4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
900122be:	6825      	ldr	r5, [r4, #0]
900122c0:	b335      	cbz	r5, 90012310 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
900122c2:	f7fd fe19 	bl	9000fef8 <vPortExitCritical>
	if( xTimerQueue != NULL )
900122c6:	6823      	ldr	r3, [r4, #0]
900122c8:	b1cb      	cbz	r3, 900122fe <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
900122ca:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
900122cc:	aa07      	add	r2, sp, #28
900122ce:	a906      	add	r1, sp, #24
900122d0:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
900122d2:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
900122d4:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
900122d8:	f7fd fc08 	bl	9000faec <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
900122dc:	4623      	mov	r3, r4
900122de:	9a07      	ldr	r2, [sp, #28]
900122e0:	9500      	str	r5, [sp, #0]
900122e2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
900122e6:	e9cd 1001 	strd	r1, r0, [sp, #4]
900122ea:	4917      	ldr	r1, [pc, #92]	@ (90012348 <xTimerCreateTimerTask+0x94>)
900122ec:	4817      	ldr	r0, [pc, #92]	@ (9001234c <xTimerCreateTimerTask+0x98>)
900122ee:	f7ff f967 	bl	900115c0 <xTaskCreateStatic>
900122f2:	4b17      	ldr	r3, [pc, #92]	@ (90012350 <xTimerCreateTimerTask+0x9c>)
900122f4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
900122f6:	b110      	cbz	r0, 900122fe <xTimerCreateTimerTask+0x4a>
}
900122f8:	2001      	movs	r0, #1
900122fa:	b009      	add	sp, #36	@ 0x24
900122fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
900122fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
90012302:	f383 8811 	msr	BASEPRI, r3
90012306:	f3bf 8f6f 	isb	sy
9001230a:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9001230e:	e7fe      	b.n	9001230e <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
90012310:	4f10      	ldr	r7, [pc, #64]	@ (90012354 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
90012312:	4e11      	ldr	r6, [pc, #68]	@ (90012358 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
90012314:	4638      	mov	r0, r7
90012316:	f7fd fd1b 	bl	9000fd50 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9001231a:	4630      	mov	r0, r6
9001231c:	f7fd fd18 	bl	9000fd50 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
90012320:	4a0e      	ldr	r2, [pc, #56]	@ (9001235c <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012322:	9500      	str	r5, [sp, #0]
90012324:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
90012326:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012328:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9001232a:	4a0d      	ldr	r2, [pc, #52]	@ (90012360 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9001232c:	4b0d      	ldr	r3, [pc, #52]	@ (90012364 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9001232e:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
90012330:	4a0d      	ldr	r2, [pc, #52]	@ (90012368 <xTimerCreateTimerTask+0xb4>)
90012332:	f7fd ff57 	bl	900101e4 <xQueueGenericCreateStatic>
90012336:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
90012338:	2800      	cmp	r0, #0
9001233a:	d0c2      	beq.n	900122c2 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9001233c:	490b      	ldr	r1, [pc, #44]	@ (9001236c <xTimerCreateTimerTask+0xb8>)
9001233e:	f7fe fe99 	bl	90011074 <vQueueAddToRegistry>
90012342:	e7be      	b.n	900122c2 <xTimerCreateTimerTask+0xe>
90012344:	24024554 	.word	0x24024554
90012348:	9002ff50 	.word	0x9002ff50
9001234c:	90012021 	.word	0x90012021
90012350:	24024550 	.word	0x24024550
90012354:	24024574 	.word	0x24024574
90012358:	24024560 	.word	0x24024560
9001235c:	2402455c 	.word	0x2402455c
90012360:	24024558 	.word	0x24024558
90012364:	2402445c 	.word	0x2402445c
90012368:	240244ac 	.word	0x240244ac
9001236c:	9002ff48 	.word	0x9002ff48

90012370 <USBD_Init>:
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
  USBD_StatusTypeDef ret;

  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
90012370:	b178      	cbz	r0, 90012392 <USBD_Init+0x22>
    pdev->NumClasses = 0;
    pdev->classId = 0;
  }
#else
  /* Unlink previous class*/
  pdev->pClass[0] = NULL;
90012372:	2300      	movs	r3, #0
90012374:	f8c0 32b8 	str.w	r3, [r0, #696]	@ 0x2b8
  pdev->pUserData[0] = NULL;
90012378:	f8c0 32c4 	str.w	r3, [r0, #708]	@ 0x2c4
#endif /* USE_USBD_COMPOSITE */

  pdev->pConfDesc = NULL;
9001237c:	f8c0 32d0 	str.w	r3, [r0, #720]	@ 0x2d0

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
90012380:	b109      	cbz	r1, 90012386 <USBD_Init+0x16>
  {
    pdev->pDesc = pdesc;
90012382:	f8c0 12b4 	str.w	r1, [r0, #692]	@ 0x2b4
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
90012386:	2301      	movs	r3, #1
  pdev->id = id;
90012388:	7002      	strb	r2, [r0, #0]
  pdev->dev_state = USBD_STATE_DEFAULT;
9001238a:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c

  /* Initialize low level driver */
  ret = USBD_LL_Init(pdev);
9001238e:	f7f1 bc2f 	b.w	90003bf0 <USBD_LL_Init>

  return ret;
}
90012392:	2003      	movs	r0, #3
90012394:	4770      	bx	lr
90012396:	bf00      	nop

90012398 <USBD_DeInit>:
  *         De-Initialize the device library
  * @param  pdev: device instance
  * @retval status: USBD Status
  */
USBD_StatusTypeDef USBD_DeInit(USBD_HandleTypeDef *pdev)
{
90012398:	b510      	push	{r4, lr}
9001239a:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret;

  /* Disconnect the USB Device */
  (void)USBD_LL_Stop(pdev);
9001239c:	f7f1 fc74 	bl	90003c88 <USBD_LL_Stop>

  /* Set Default State */
  pdev->dev_state = USBD_STATE_DEFAULT;
900123a0:	2201      	movs	r2, #1
      }
    }
  }
#else
  /* Free Class Resources */
  if (pdev->pClass[0] != NULL)
900123a2:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
  pdev->dev_state = USBD_STATE_DEFAULT;
900123a6:	f884 229c 	strb.w	r2, [r4, #668]	@ 0x29c
  if (pdev->pClass[0] != NULL)
900123aa:	b11b      	cbz	r3, 900123b4 <USBD_DeInit+0x1c>
  {
    pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config);
900123ac:	685b      	ldr	r3, [r3, #4]
900123ae:	4620      	mov	r0, r4
900123b0:	7921      	ldrb	r1, [r4, #4]
900123b2:	4798      	blx	r3
  }

  pdev->pUserData[0] = NULL;
900123b4:	2300      	movs	r3, #0
  /* Free Device descriptors resources */
  pdev->pDesc = NULL;
  pdev->pConfDesc = NULL;

  /* DeInitialize low level driver */
  ret = USBD_LL_DeInit(pdev);
900123b6:	4620      	mov	r0, r4
  pdev->pUserData[0] = NULL;
900123b8:	f8c4 32c4 	str.w	r3, [r4, #708]	@ 0x2c4
  pdev->pDesc = NULL;
900123bc:	f8c4 32b4 	str.w	r3, [r4, #692]	@ 0x2b4
  pdev->pConfDesc = NULL;
900123c0:	f8c4 32d0 	str.w	r3, [r4, #720]	@ 0x2d0

  return ret;
}
900123c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  ret = USBD_LL_DeInit(pdev);
900123c8:	f7f1 bc46 	b.w	90003c58 <USBD_LL_DeInit>

900123cc <USBD_RegisterClass>:
  * @param  pdev: Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
900123cc:	b510      	push	{r4, lr}
  uint16_t len = 0U;
900123ce:	2300      	movs	r3, #0
{
900123d0:	b082      	sub	sp, #8
  uint16_t len = 0U;
900123d2:	f8ad 3006 	strh.w	r3, [sp, #6]

  if (pclass == NULL)
900123d6:	b189      	cbz	r1, 900123fc <USBD_RegisterClass+0x30>
  if (pdev->pClass[pdev->classId]->GetHSConfigDescriptor != NULL)
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetHSConfigDescriptor(&len);
  }
#else /* Default USE_USB_FS */
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
900123d8:	6acb      	ldr	r3, [r1, #44]	@ 0x2c
900123da:	4604      	mov	r4, r0
  pdev->pClass[0] = pclass;
900123dc:	f8c0 12b8 	str.w	r1, [r0, #696]	@ 0x2b8
  if (pdev->pClass[pdev->classId]->GetFSConfigDescriptor != NULL)
900123e0:	b123      	cbz	r3, 900123ec <USBD_RegisterClass+0x20>
  {
    pdev->pConfDesc = (void *)pdev->pClass[pdev->classId]->GetFSConfigDescriptor(&len);
900123e2:	f10d 0006 	add.w	r0, sp, #6
900123e6:	4798      	blx	r3
900123e8:	f8c4 02d0 	str.w	r0, [r4, #720]	@ 0x2d0
  }
#endif /* USE_USB_FS */

  /* Increment the NumClasses */
  pdev->NumClasses++;
900123ec:	f8d4 32d8 	ldr.w	r3, [r4, #728]	@ 0x2d8

  return USBD_OK;
900123f0:	2000      	movs	r0, #0
  pdev->NumClasses++;
900123f2:	3301      	adds	r3, #1
900123f4:	f8c4 32d8 	str.w	r3, [r4, #728]	@ 0x2d8
}
900123f8:	b002      	add	sp, #8
900123fa:	bd10      	pop	{r4, pc}
    return USBD_FAIL;
900123fc:	2003      	movs	r0, #3
}
900123fe:	b002      	add	sp, #8
90012400:	bd10      	pop	{r4, pc}
90012402:	bf00      	nop

90012404 <USBD_Start>:
#ifdef USE_USBD_COMPOSITE
  pdev->classId = 0U;
#endif /* USE_USBD_COMPOSITE */

  /* Start the low level driver  */
  return USBD_LL_Start(pdev);
90012404:	f7f1 bc34 	b.w	90003c70 <USBD_LL_Start>

90012408 <USBD_Stop>:
  *         Stop the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef USBD_Stop(USBD_HandleTypeDef *pdev)
{
90012408:	b510      	push	{r4, lr}
9001240a:	4604      	mov	r4, r0
  /* Disconnect USB Device */
  (void)USBD_LL_Stop(pdev);
9001240c:	f7f1 fc3c 	bl	90003c88 <USBD_LL_Stop>
  }

  /* Reset the class ID */
  pdev->classId = 0U;
#else
  if (pdev->pClass[0] != NULL)
90012410:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
90012414:	b11b      	cbz	r3, 9001241e <USBD_Stop+0x16>
  {
    (void)pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config);
90012416:	685b      	ldr	r3, [r3, #4]
90012418:	4620      	mov	r0, r4
9001241a:	7921      	ldrb	r1, [r4, #4]
9001241c:	4798      	blx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return USBD_OK;
}
9001241e:	2000      	movs	r0, #0
90012420:	bd10      	pop	{r4, pc}
90012422:	bf00      	nop

90012424 <USBD_SetClassConfig>:
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
90012424:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
90012428:	b10b      	cbz	r3, 9001242e <USBD_SetClassConfig+0xa>
  {
    /* Set configuration and Start the Class */
    ret = (USBD_StatusTypeDef)pdev->pClass[0]->Init(pdev, cfgidx);
9001242a:	681b      	ldr	r3, [r3, #0]
9001242c:	4718      	bx	r3
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
9001242e:	4618      	mov	r0, r3
90012430:	4770      	bx	lr
90012432:	bf00      	nop

90012434 <USBD_ClrClassConfig>:
  * @param  pdev: device instance
  * @param  cfgidx: configuration index
  * @retval status
  */
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef *pdev, uint8_t cfgidx)
{
90012434:	b508      	push	{r3, lr}
      }
    }
  }
#else
  /* Clear configuration  and De-initialize the Class process */
  if (pdev->pClass[0]->DeInit(pdev, cfgidx) != 0U)
90012436:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9001243a:	685b      	ldr	r3, [r3, #4]
9001243c:	4798      	blx	r3
  {
    ret = USBD_FAIL;
9001243e:	2800      	cmp	r0, #0
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
90012440:	bf18      	it	ne
90012442:	2003      	movne	r0, #3
90012444:	bd08      	pop	{r3, pc}
90012446:	bf00      	nop

90012448 <USBD_LL_SetupStage>:
  * @param  pdev: device instance
  * @param  psetup: setup packet buffer pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
90012448:	b538      	push	{r3, r4, r5, lr}
  USBD_StatusTypeDef ret;

  USBD_ParseSetupRequest(&pdev->request, psetup);
9001244a:	f200 25aa 	addw	r5, r0, #682	@ 0x2aa
{
9001244e:	4604      	mov	r4, r0
  USBD_ParseSetupRequest(&pdev->request, psetup);
90012450:	4628      	mov	r0, r5
90012452:	f000 fc25 	bl	90012ca0 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;

  pdev->ep0_data_len = pdev->request.wLength;
90012456:	f8b4 32b0 	ldrh.w	r3, [r4, #688]	@ 0x2b0

  switch (pdev->request.bmRequest & 0x1FU)
9001245a:	f894 12aa 	ldrb.w	r1, [r4, #682]	@ 0x2aa
  pdev->ep0_state = USBD_EP0_SETUP;
9001245e:	2201      	movs	r2, #1
  pdev->ep0_data_len = pdev->request.wLength;
90012460:	f8c4 3298 	str.w	r3, [r4, #664]	@ 0x298
90012464:	f001 031f 	and.w	r3, r1, #31
  pdev->ep0_state = USBD_EP0_SETUP;
90012468:	f8c4 2294 	str.w	r2, [r4, #660]	@ 0x294
  switch (pdev->request.bmRequest & 0x1FU)
9001246c:	4293      	cmp	r3, r2
9001246e:	d009      	beq.n	90012484 <USBD_LL_SetupStage+0x3c>
90012470:	2b02      	cmp	r3, #2
90012472:	d013      	beq.n	9001249c <USBD_LL_SetupStage+0x54>
90012474:	b163      	cbz	r3, 90012490 <USBD_LL_SetupStage+0x48>
    case USB_REQ_RECIPIENT_ENDPOINT:
      ret = USBD_StdEPReq(pdev, &pdev->request);
      break;

    default:
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
90012476:	4620      	mov	r0, r4
90012478:	f001 0180 	and.w	r1, r1, #128	@ 0x80
      break;
  }

  return ret;
}
9001247c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
90012480:	f7f1 bc28 	b.w	90003cd4 <USBD_LL_StallEP>
      ret = USBD_StdItfReq(pdev, &pdev->request);
90012484:	4629      	mov	r1, r5
90012486:	4620      	mov	r0, r4
}
90012488:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdItfReq(pdev, &pdev->request);
9001248c:	f000 bb1c 	b.w	90012ac8 <USBD_StdItfReq>
      ret = USBD_StdDevReq(pdev, &pdev->request);
90012490:	4629      	mov	r1, r5
90012492:	4620      	mov	r0, r4
}
90012494:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdDevReq(pdev, &pdev->request);
90012498:	f000 b958 	b.w	9001274c <USBD_StdDevReq>
      ret = USBD_StdEPReq(pdev, &pdev->request);
9001249c:	4629      	mov	r1, r5
9001249e:	4620      	mov	r0, r4
}
900124a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      ret = USBD_StdEPReq(pdev, &pdev->request);
900124a4:	f000 bb4c 	b.w	90012b40 <USBD_StdEPReq>

900124a8 <USBD_LL_DataOutStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
900124a8:	b570      	push	{r4, r5, r6, lr}
900124aa:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret = USBD_OK;
  uint8_t idx;

  if (epnum == 0U)
900124ac:	b931      	cbnz	r1, 900124bc <USBD_LL_DataOutStage+0x14>
900124ae:	460b      	mov	r3, r1
  {
    pep = &pdev->ep_out[0];

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
900124b0:	f8d0 1294 	ldr.w	r1, [r0, #660]	@ 0x294
900124b4:	2903      	cmp	r1, #3
900124b6:	d010      	beq.n	900124da <USBD_LL_DataOutStage+0x32>
      }
    }
  }

  return USBD_OK;
}
900124b8:	2000      	movs	r0, #0
900124ba:	bd70      	pop	{r4, r5, r6, pc}
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
900124bc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
900124c0:	2b03      	cmp	r3, #3
900124c2:	d1f9      	bne.n	900124b8 <USBD_LL_DataOutStage+0x10>
        if (pdev->pClass[idx]->DataOut != NULL)
900124c4:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
900124c8:	699b      	ldr	r3, [r3, #24]
900124ca:	2b00      	cmp	r3, #0
900124cc:	d0f4      	beq.n	900124b8 <USBD_LL_DataOutStage+0x10>
          pdev->classId = idx;
900124ce:	2200      	movs	r2, #0
}
900124d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
900124d4:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataOut(pdev, epnum);
900124d8:	4718      	bx	r3
      if (pep->rem_length > pep->maxpacket)
900124da:	e9d0 1557 	ldrd	r1, r5, [r0, #348]	@ 0x15c
900124de:	42a9      	cmp	r1, r5
900124e0:	d808      	bhi.n	900124f4 <USBD_LL_DataOutStage+0x4c>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
900124e2:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
900124e6:	2a03      	cmp	r2, #3
900124e8:	d00f      	beq.n	9001250a <USBD_LL_DataOutStage+0x62>
        (void)USBD_CtlSendStatus(pdev);
900124ea:	4620      	mov	r0, r4
900124ec:	f000 fe28 	bl	90013140 <USBD_CtlSendStatus>
}
900124f0:	2000      	movs	r0, #0
900124f2:	bd70      	pop	{r4, r5, r6, pc}
        pep->rem_length -= pep->maxpacket;
900124f4:	1b4b      	subs	r3, r1, r5
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
900124f6:	4611      	mov	r1, r2
900124f8:	462a      	mov	r2, r5
900124fa:	429d      	cmp	r5, r3
        pep->rem_length -= pep->maxpacket;
900124fc:	f8c0 315c 	str.w	r3, [r0, #348]	@ 0x15c
        (void)USBD_CtlContinueRx(pdev, pdata, MIN(pep->rem_length, pep->maxpacket));
90012500:	bf28      	it	cs
90012502:	461a      	movcs	r2, r3
90012504:	f000 fe12 	bl	9001312c <USBD_CtlContinueRx>
90012508:	e7d6      	b.n	900124b8 <USBD_LL_DataOutStage+0x10>
            if (pdev->pClass[idx]->EP0_RxReady != NULL)
9001250a:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
9001250e:	6912      	ldr	r2, [r2, #16]
90012510:	2a00      	cmp	r2, #0
90012512:	d0ea      	beq.n	900124ea <USBD_LL_DataOutStage+0x42>
              pdev->classId = idx;
90012514:	f8c0 32d4 	str.w	r3, [r0, #724]	@ 0x2d4
              pdev->pClass[idx]->EP0_RxReady(pdev);
90012518:	4790      	blx	r2
9001251a:	e7e6      	b.n	900124ea <USBD_LL_DataOutStage+0x42>

9001251c <USBD_LL_DataInStage>:
  * @param  pdata: data pointer
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
9001251c:	b570      	push	{r4, r5, r6, lr}
9001251e:	4604      	mov	r4, r0
  USBD_EndpointTypeDef *pep;
  USBD_StatusTypeDef ret;
  uint8_t idx;

  if (epnum == 0U)
90012520:	b959      	cbnz	r1, 9001253a <USBD_LL_DataInStage+0x1e>
  {
    pep = &pdev->ep_in[0];

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
90012522:	f8d0 3294 	ldr.w	r3, [r0, #660]	@ 0x294
90012526:	2b02      	cmp	r3, #2
90012528:	d016      	beq.n	90012558 <USBD_LL_DataInStage+0x3c>
          (void)USBD_CtlReceiveStatus(pdev);
        }
      }
    }

    if (pdev->dev_test_mode != 0U)
9001252a:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
9001252e:	b113      	cbz	r3, 90012536 <USBD_LL_DataInStage+0x1a>
    {
      (void)USBD_RunTestMode(pdev);
      pdev->dev_test_mode = 0U;
90012530:	2300      	movs	r3, #0
90012532:	f884 32a0 	strb.w	r3, [r4, #672]	@ 0x2a0
      }
    }
  }

  return USBD_OK;
}
90012536:	2000      	movs	r0, #0
90012538:	bd70      	pop	{r4, r5, r6, pc}
      if (pdev->dev_state == USBD_STATE_CONFIGURED)
9001253a:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001253e:	2b03      	cmp	r3, #3
90012540:	d1f9      	bne.n	90012536 <USBD_LL_DataInStage+0x1a>
        if (pdev->pClass[idx]->DataIn != NULL)
90012542:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
90012546:	695b      	ldr	r3, [r3, #20]
90012548:	2b00      	cmp	r3, #0
9001254a:	d0f4      	beq.n	90012536 <USBD_LL_DataInStage+0x1a>
          pdev->classId = idx;
9001254c:	2200      	movs	r2, #0
}
9001254e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          pdev->classId = idx;
90012552:	f8c0 22d4 	str.w	r2, [r0, #724]	@ 0x2d4
          ret = (USBD_StatusTypeDef)pdev->pClass[idx]->DataIn(pdev, epnum);
90012556:	4718      	bx	r3
      if (pep->rem_length > pep->maxpacket)
90012558:	e9d0 3607 	ldrd	r3, r6, [r0, #28]
9001255c:	460d      	mov	r5, r1
9001255e:	42b3      	cmp	r3, r6
90012560:	d810      	bhi.n	90012584 <USBD_LL_DataInStage+0x68>
        if ((pep->maxpacket == pep->rem_length) &&
90012562:	d01c      	beq.n	9001259e <USBD_LL_DataInStage+0x82>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012564:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
90012568:	2b03      	cmp	r3, #3
9001256a:	d02b      	beq.n	900125c4 <USBD_LL_DataInStage+0xa8>
          (void)USBD_LL_StallEP(pdev, 0x80U);
9001256c:	2180      	movs	r1, #128	@ 0x80
9001256e:	4620      	mov	r0, r4
90012570:	f7f1 fbb0 	bl	90003cd4 <USBD_LL_StallEP>
          (void)USBD_CtlReceiveStatus(pdev);
90012574:	4620      	mov	r0, r4
90012576:	f000 fdef 	bl	90013158 <USBD_CtlReceiveStatus>
    if (pdev->dev_test_mode != 0U)
9001257a:	f894 32a0 	ldrb.w	r3, [r4, #672]	@ 0x2a0
9001257e:	2b00      	cmp	r3, #0
90012580:	d0d9      	beq.n	90012536 <USBD_LL_DataInStage+0x1a>
90012582:	e7d5      	b.n	90012530 <USBD_LL_DataInStage+0x14>
        pep->rem_length -= pep->maxpacket;
90012584:	1b9b      	subs	r3, r3, r6
        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
90012586:	4611      	mov	r1, r2
        pep->rem_length -= pep->maxpacket;
90012588:	61c3      	str	r3, [r0, #28]
        (void)USBD_CtlContinueSendData(pdev, pdata, pep->rem_length);
9001258a:	461a      	mov	r2, r3
9001258c:	f000 fdc4 	bl	90013118 <USBD_CtlContinueSendData>
        (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
90012590:	462b      	mov	r3, r5
90012592:	462a      	mov	r2, r5
90012594:	4629      	mov	r1, r5
90012596:	4620      	mov	r0, r4
90012598:	f7f1 fbe0 	bl	90003d5c <USBD_LL_PrepareReceive>
9001259c:	e7c5      	b.n	9001252a <USBD_LL_DataInStage+0xe>
            (pep->total_length >= pep->maxpacket) &&
9001259e:	6982      	ldr	r2, [r0, #24]
        if ((pep->maxpacket == pep->rem_length) &&
900125a0:	4293      	cmp	r3, r2
900125a2:	d8df      	bhi.n	90012564 <USBD_LL_DataInStage+0x48>
            (pep->total_length >= pep->maxpacket) &&
900125a4:	f8d0 3298 	ldr.w	r3, [r0, #664]	@ 0x298
900125a8:	429a      	cmp	r2, r3
900125aa:	d2db      	bcs.n	90012564 <USBD_LL_DataInStage+0x48>
          (void)USBD_CtlContinueSendData(pdev, NULL, 0U);
900125ac:	460a      	mov	r2, r1
900125ae:	f000 fdb3 	bl	90013118 <USBD_CtlContinueSendData>
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
900125b2:	462b      	mov	r3, r5
900125b4:	462a      	mov	r2, r5
900125b6:	4629      	mov	r1, r5
900125b8:	4620      	mov	r0, r4
          pdev->ep0_data_len = 0U;
900125ba:	f8c4 5298 	str.w	r5, [r4, #664]	@ 0x298
          (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
900125be:	f7f1 fbcd 	bl	90003d5c <USBD_LL_PrepareReceive>
900125c2:	e7b2      	b.n	9001252a <USBD_LL_DataInStage+0xe>
            if (pdev->pClass[0]->EP0_TxSent != NULL)
900125c4:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
900125c8:	68db      	ldr	r3, [r3, #12]
900125ca:	2b00      	cmp	r3, #0
900125cc:	d0ce      	beq.n	9001256c <USBD_LL_DataInStage+0x50>
              pdev->classId = 0U;
900125ce:	2200      	movs	r2, #0
              pdev->pClass[0]->EP0_TxSent(pdev);
900125d0:	4620      	mov	r0, r4
              pdev->classId = 0U;
900125d2:	f8c4 22d4 	str.w	r2, [r4, #724]	@ 0x2d4
              pdev->pClass[0]->EP0_TxSent(pdev);
900125d6:	4798      	blx	r3
900125d8:	e7c8      	b.n	9001256c <USBD_LL_DataInStage+0x50>
900125da:	bf00      	nop

900125dc <USBD_LL_Reset>:
  *         Handle Reset event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
900125dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  USBD_StatusTypeDef ret = USBD_OK;

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
  pdev->ep0_state = USBD_EP0_IDLE;
900125de:	2100      	movs	r1, #0
  pdev->dev_state = USBD_STATE_DEFAULT;
900125e0:	2201      	movs	r2, #1
      }
    }
  }
#else

  if (pdev->pClass[0] != NULL)
900125e2:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
{
900125e6:	4604      	mov	r4, r0
  pdev->dev_state = USBD_STATE_DEFAULT;
900125e8:	f880 229c 	strb.w	r2, [r0, #668]	@ 0x29c
  pdev->dev_config = 0U;
900125ec:	6041      	str	r1, [r0, #4]
  pdev->ep0_state = USBD_EP0_IDLE;
900125ee:	f8c0 1294 	str.w	r1, [r0, #660]	@ 0x294
  pdev->dev_remote_wakeup = 0U;
900125f2:	f8c0 12a4 	str.w	r1, [r0, #676]	@ 0x2a4
  pdev->dev_test_mode = 0U;
900125f6:	f880 12a0 	strb.w	r1, [r0, #672]	@ 0x2a0
  if (pdev->pClass[0] != NULL)
900125fa:	b11b      	cbz	r3, 90012604 <USBD_LL_Reset+0x28>
  {
    if (pdev->pClass[0]->DeInit != NULL)
900125fc:	685b      	ldr	r3, [r3, #4]
900125fe:	b10b      	cbz	r3, 90012604 <USBD_LL_Reset+0x28>
    {
      if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != USBD_OK)
90012600:	4798      	blx	r3
90012602:	b9b0      	cbnz	r0, 90012632 <USBD_LL_Reset+0x56>
  USBD_StatusTypeDef ret = USBD_OK;
90012604:	2700      	movs	r7, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  /* Open EP0 OUT */
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
90012606:	2340      	movs	r3, #64	@ 0x40
90012608:	2200      	movs	r2, #0
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
9001260a:	2601      	movs	r6, #1
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
9001260c:	4620      	mov	r0, r4

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
9001260e:	461d      	mov	r5, r3
  (void)USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
90012610:	4611      	mov	r1, r2
90012612:	f7f1 fb45 	bl	90003ca0 <USBD_LL_OpenEP>

  /* Open EP0 IN */
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
90012616:	2200      	movs	r2, #0
90012618:	462b      	mov	r3, r5
9001261a:	2180      	movs	r1, #128	@ 0x80
9001261c:	4620      	mov	r0, r4
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
9001261e:	f8a4 6164 	strh.w	r6, [r4, #356]	@ 0x164
  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
90012622:	f8c4 5160 	str.w	r5, [r4, #352]	@ 0x160
  (void)USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
90012626:	f7f1 fb3b 	bl	90003ca0 <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;

  return ret;
}
9001262a:	4638      	mov	r0, r7
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
9001262c:	84a6      	strh	r6, [r4, #36]	@ 0x24
  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
9001262e:	6225      	str	r5, [r4, #32]
}
90012630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        ret = USBD_FAIL;
90012632:	2703      	movs	r7, #3
90012634:	e7e7      	b.n	90012606 <USBD_LL_Reset+0x2a>
90012636:	bf00      	nop

90012638 <USBD_LL_SetSpeed>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
90012638:	4603      	mov	r3, r0
  pdev->dev_speed = speed;

  return USBD_OK;
}
9001263a:	2000      	movs	r0, #0
  pdev->dev_speed = speed;
9001263c:	7419      	strb	r1, [r3, #16]
}
9001263e:	4770      	bx	lr

90012640 <USBD_LL_Suspend>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
90012640:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
{
90012644:	4603      	mov	r3, r0
  if (pdev->dev_state != USBD_STATE_SUSPENDED)
90012646:	2a04      	cmp	r2, #4
90012648:	d004      	beq.n	90012654 <USBD_LL_Suspend+0x14>
  {
    pdev->dev_old_state = pdev->dev_state;
9001264a:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
9001264e:	b2d2      	uxtb	r2, r2
90012650:	f880 229d 	strb.w	r2, [r0, #669]	@ 0x29d
  }

  pdev->dev_state = USBD_STATE_SUSPENDED;
90012654:	2204      	movs	r2, #4

  return USBD_OK;
}
90012656:	2000      	movs	r0, #0
  pdev->dev_state = USBD_STATE_SUSPENDED;
90012658:	f883 229c 	strb.w	r2, [r3, #668]	@ 0x29c
}
9001265c:	4770      	bx	lr
9001265e:	bf00      	nop

90012660 <USBD_LL_Resume>:
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
90012660:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012664:	2b04      	cmp	r3, #4
90012666:	d104      	bne.n	90012672 <USBD_LL_Resume+0x12>
  {
    pdev->dev_state = pdev->dev_old_state;
90012668:	f890 329d 	ldrb.w	r3, [r0, #669]	@ 0x29d
9001266c:	b2db      	uxtb	r3, r3
9001266e:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
  }

  return USBD_OK;
}
90012672:	2000      	movs	r0, #0
90012674:	4770      	bx	lr
90012676:	bf00      	nop

90012678 <USBD_LL_SOF>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
  /* The SOF event can be distributed for all classes that support it */
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012678:	f890 229c 	ldrb.w	r2, [r0, #668]	@ 0x29c
9001267c:	2a03      	cmp	r2, #3
9001267e:	d001      	beq.n	90012684 <USBD_LL_SOF+0xc>
    }
#endif /* USE_USBD_COMPOSITE */
  }

  return USBD_OK;
}
90012680:	2000      	movs	r0, #0
90012682:	4770      	bx	lr
{
90012684:	b508      	push	{r3, lr}
    if (pdev->pClass[0] != NULL)
90012686:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
9001268a:	b113      	cbz	r3, 90012692 <USBD_LL_SOF+0x1a>
      if (pdev->pClass[0]->SOF != NULL)
9001268c:	69db      	ldr	r3, [r3, #28]
9001268e:	b103      	cbz	r3, 90012692 <USBD_LL_SOF+0x1a>
        (void)pdev->pClass[0]->SOF(pdev);
90012690:	4798      	blx	r3
}
90012692:	2000      	movs	r0, #0
90012694:	bd08      	pop	{r3, pc}
90012696:	bf00      	nop

90012698 <USBD_LL_IsoINIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoINIncomplete(USBD_HandleTypeDef *pdev,
                                           uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
90012698:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
9001269c:	32ae      	adds	r2, #174	@ 0xae
9001269e:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
900126a2:	b162      	cbz	r2, 900126be <USBD_LL_IsoINIncomplete+0x26>
{
900126a4:	b508      	push	{r3, lr}
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
900126a6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
900126aa:	2b03      	cmp	r3, #3
900126ac:	d001      	beq.n	900126b2 <USBD_LL_IsoINIncomplete+0x1a>
    {
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
900126ae:	2000      	movs	r0, #0
}
900126b0:	bd08      	pop	{r3, pc}
    if (pdev->pClass[pdev->classId]->IsoINIncomplete != NULL)
900126b2:	6a13      	ldr	r3, [r2, #32]
900126b4:	2b00      	cmp	r3, #0
900126b6:	d0fa      	beq.n	900126ae <USBD_LL_IsoINIncomplete+0x16>
      (void)pdev->pClass[pdev->classId]->IsoINIncomplete(pdev, epnum);
900126b8:	4798      	blx	r3
  return USBD_OK;
900126ba:	2000      	movs	r0, #0
}
900126bc:	bd08      	pop	{r3, pc}
    return USBD_FAIL;
900126be:	2003      	movs	r0, #3
}
900126c0:	4770      	bx	lr
900126c2:	bf00      	nop

900126c4 <USBD_LL_IsoOUTIncomplete>:
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_IsoOUTIncomplete(USBD_HandleTypeDef *pdev,
                                            uint8_t epnum)
{
  if (pdev->pClass[pdev->classId] == NULL)
900126c4:	f8d0 22d4 	ldr.w	r2, [r0, #724]	@ 0x2d4
900126c8:	32ae      	adds	r2, #174	@ 0xae
900126ca:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
900126ce:	b162      	cbz	r2, 900126ea <USBD_LL_IsoOUTIncomplete+0x26>
{
900126d0:	b508      	push	{r3, lr}
  {
    return USBD_FAIL;
  }

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
900126d2:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
900126d6:	2b03      	cmp	r3, #3
900126d8:	d001      	beq.n	900126de <USBD_LL_IsoOUTIncomplete+0x1a>
    {
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
    }
  }

  return USBD_OK;
900126da:	2000      	movs	r0, #0
}
900126dc:	bd08      	pop	{r3, pc}
    if (pdev->pClass[pdev->classId]->IsoOUTIncomplete != NULL)
900126de:	6a53      	ldr	r3, [r2, #36]	@ 0x24
900126e0:	2b00      	cmp	r3, #0
900126e2:	d0fa      	beq.n	900126da <USBD_LL_IsoOUTIncomplete+0x16>
      (void)pdev->pClass[pdev->classId]->IsoOUTIncomplete(pdev, epnum);
900126e4:	4798      	blx	r3
  return USBD_OK;
900126e6:	2000      	movs	r0, #0
}
900126e8:	bd08      	pop	{r3, pc}
    return USBD_FAIL;
900126ea:	2003      	movs	r0, #3
}
900126ec:	4770      	bx	lr
900126ee:	bf00      	nop

900126f0 <USBD_LL_DevConnected>:
  * @brief  USBD_LL_DevConnected
  *         Handle device connection event
  * @param  pdev: device instance
  * @retval status
  */
USBD_StatusTypeDef USBD_LL_DevConnected(USBD_HandleTypeDef *pdev)
900126f0:	2000      	movs	r0, #0
900126f2:	4770      	bx	lr

900126f4 <USBD_LL_DevDisconnected>:
USBD_StatusTypeDef USBD_LL_DevDisconnected(USBD_HandleTypeDef *pdev)
{
  USBD_StatusTypeDef   ret = USBD_OK;

  /* Free Class Resources */
  pdev->dev_state = USBD_STATE_DEFAULT;
900126f4:	2101      	movs	r1, #1
        }
      }
    }
  }
#else
  if (pdev->pClass[0] != NULL)
900126f6:	f8d0 22b8 	ldr.w	r2, [r0, #696]	@ 0x2b8
  pdev->dev_state = USBD_STATE_DEFAULT;
900126fa:	f880 129c 	strb.w	r1, [r0, #668]	@ 0x29c
  if (pdev->pClass[0] != NULL)
900126fe:	b142      	cbz	r2, 90012712 <USBD_LL_DevDisconnected+0x1e>
  {
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
90012700:	6852      	ldr	r2, [r2, #4]
90012702:	7901      	ldrb	r1, [r0, #4]
{
90012704:	b508      	push	{r3, lr}
    if (pdev->pClass[0]->DeInit(pdev, (uint8_t)pdev->dev_config) != 0U)
90012706:	4790      	blx	r2
90012708:	b908      	cbnz	r0, 9001270e <USBD_LL_DevDisconnected+0x1a>
  USBD_StatusTypeDef   ret = USBD_OK;
9001270a:	2000      	movs	r0, #0
    }
  }
#endif /* USE_USBD_COMPOSITE */

  return ret;
}
9001270c:	bd08      	pop	{r3, pc}
      ret = USBD_FAIL;
9001270e:	2003      	movs	r0, #3
}
90012710:	bd08      	pop	{r3, pc}
  USBD_StatusTypeDef   ret = USBD_OK;
90012712:	2000      	movs	r0, #0
}
90012714:	4770      	bx	lr
90012716:	bf00      	nop

90012718 <USBD_CoreFindIF>:
  UNUSED(pdev);
  UNUSED(index);

  return 0x00U;
#endif /* USE_USBD_COMPOSITE */
}
90012718:	2000      	movs	r0, #0
9001271a:	4770      	bx	lr

9001271c <USBD_CoreFindEP>:
  *         return the class index relative to the selected endpoint
  * @param  pdev: device instance
  * @param  index : selected endpoint number
  * @retval index of the class using the selected endpoint number. 0xFF if no class found.
  */
uint8_t USBD_CoreFindEP(USBD_HandleTypeDef *pdev, uint8_t index)
9001271c:	2000      	movs	r0, #0
9001271e:	4770      	bx	lr

90012720 <USBD_GetEpDesc>:
  USBD_DescHeaderTypeDef *pdesc = (USBD_DescHeaderTypeDef *)(void *)pConfDesc;
  USBD_ConfigDescTypeDef *desc = (USBD_ConfigDescTypeDef *)(void *)pConfDesc;
  USBD_EpDescTypeDef *pEpDesc = NULL;
  uint16_t ptr;

  if (desc->wTotalLength > desc->bLength)
90012720:	7802      	ldrb	r2, [r0, #0]
90012722:	f8b0 c002 	ldrh.w	ip, [r0, #2]
90012726:	4613      	mov	r3, r2
90012728:	4594      	cmp	ip, r2
9001272a:	d803      	bhi.n	90012734 <USBD_GetEpDesc+0x14>
9001272c:	e00c      	b.n	90012748 <USBD_GetEpDesc+0x28>
  {
    ptr = desc->bLength;

    while (ptr < desc->wTotalLength)
9001272e:	459c      	cmp	ip, r3
90012730:	d90a      	bls.n	90012748 <USBD_GetEpDesc+0x28>
  */
USBD_DescHeaderTypeDef *USBD_GetNextDesc(uint8_t *pbuf, uint16_t *ptr)
{
  USBD_DescHeaderTypeDef *pnext = (USBD_DescHeaderTypeDef *)(void *)pbuf;

  *ptr += pnext->bLength;
90012732:	7802      	ldrb	r2, [r0, #0]
  pnext = (USBD_DescHeaderTypeDef *)(void *)(pbuf + pnext->bLength);
90012734:	4410      	add	r0, r2
  *ptr += pnext->bLength;
90012736:	4413      	add	r3, r2
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
90012738:	7842      	ldrb	r2, [r0, #1]
  *ptr += pnext->bLength;
9001273a:	b29b      	uxth	r3, r3
      if (pdesc->bDescriptorType == USB_DESC_TYPE_ENDPOINT)
9001273c:	2a05      	cmp	r2, #5
9001273e:	d1f6      	bne.n	9001272e <USBD_GetEpDesc+0xe>
        if (pEpDesc->bEndpointAddress == EpAddr)
90012740:	7882      	ldrb	r2, [r0, #2]
90012742:	428a      	cmp	r2, r1
90012744:	d1f3      	bne.n	9001272e <USBD_GetEpDesc+0xe>
}
90012746:	4770      	bx	lr
  USBD_EpDescTypeDef *pEpDesc = NULL;
90012748:	2000      	movs	r0, #0
}
9001274a:	4770      	bx	lr

9001274c <USBD_StdDevReq>:
  * @param  pdev: device instance
  * @param  req: usb request
  * @retval status
  */
USBD_StatusTypeDef USBD_StdDevReq(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
9001274c:	b570      	push	{r4, r5, r6, lr}
9001274e:	780b      	ldrb	r3, [r1, #0]
90012750:	b082      	sub	sp, #8
90012752:	460d      	mov	r5, r1
90012754:	4604      	mov	r4, r0
  USBD_StatusTypeDef ret = USBD_OK;

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012756:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001275a:	2b20      	cmp	r3, #32
9001275c:	d00e      	beq.n	9001277c <USBD_StdDevReq+0x30>
9001275e:	2b40      	cmp	r3, #64	@ 0x40
90012760:	d00c      	beq.n	9001277c <USBD_StdDevReq+0x30>
90012762:	b1bb      	cbz	r3, 90012794 <USBD_StdDevReq+0x48>
  */
void USBD_CtlError(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
  UNUSED(req);

  (void)USBD_LL_StallEP(pdev, 0x80U);
90012764:	2180      	movs	r1, #128	@ 0x80
90012766:	4620      	mov	r0, r4
90012768:	f7f1 fab4 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
9001276c:	2100      	movs	r1, #0
9001276e:	4620      	mov	r0, r4
90012770:	f7f1 fab0 	bl	90003cd4 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
90012774:	2500      	movs	r5, #0
}
90012776:	4628      	mov	r0, r5
90012778:	b002      	add	sp, #8
9001277a:	bd70      	pop	{r4, r5, r6, pc}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
9001277c:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
90012780:	4629      	mov	r1, r5
90012782:	4620      	mov	r0, r4
90012784:	33ae      	adds	r3, #174	@ 0xae
90012786:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
9001278a:	689b      	ldr	r3, [r3, #8]
}
9001278c:	b002      	add	sp, #8
9001278e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      ret = (USBD_StatusTypeDef)pdev->pClass[pdev->classId]->Setup(pdev, req);
90012792:	4718      	bx	r3
      switch (req->bRequest)
90012794:	784b      	ldrb	r3, [r1, #1]
90012796:	2b09      	cmp	r3, #9
90012798:	d8e4      	bhi.n	90012764 <USBD_StdDevReq+0x18>
9001279a:	a201      	add	r2, pc, #4	@ (adr r2, 900127a0 <USBD_StdDevReq+0x54>)
9001279c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
900127a0:	90012801 	.word	0x90012801
900127a4:	90012829 	.word	0x90012829
900127a8:	90012765 	.word	0x90012765
900127ac:	90012847 	.word	0x90012847
900127b0:	90012765 	.word	0x90012765
900127b4:	9001285f 	.word	0x9001285f
900127b8:	9001289f 	.word	0x9001289f
900127bc:	90012765 	.word	0x90012765
900127c0:	900128f5 	.word	0x900128f5
900127c4:	900127c9 	.word	0x900127c9
  cfgidx = (uint8_t)(req->wValue);
900127c8:	7889      	ldrb	r1, [r1, #2]
900127ca:	4db5      	ldr	r5, [pc, #724]	@ (90012aa0 <USBD_StdDevReq+0x354>)
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
900127cc:	2901      	cmp	r1, #1
  cfgidx = (uint8_t)(req->wValue);
900127ce:	7029      	strb	r1, [r5, #0]
  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
900127d0:	f200 815e 	bhi.w	90012a90 <USBD_StdDevReq+0x344>
  switch (pdev->dev_state)
900127d4:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
900127d8:	2b02      	cmp	r3, #2
900127da:	b2de      	uxtb	r6, r3
900127dc:	f000 8145 	beq.w	90012a6a <USBD_StdDevReq+0x31e>
900127e0:	2e03      	cmp	r6, #3
900127e2:	f000 8122 	beq.w	90012a2a <USBD_StdDevReq+0x2de>
  (void)USBD_LL_StallEP(pdev, 0x80U);
900127e6:	2180      	movs	r1, #128	@ 0x80
900127e8:	f7f1 fa74 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
900127ec:	2100      	movs	r1, #0
900127ee:	4620      	mov	r0, r4
900127f0:	f7f1 fa70 	bl	90003cd4 <USBD_LL_StallEP>
      (void)USBD_ClrClassConfig(pdev, cfgidx);
900127f4:	7829      	ldrb	r1, [r5, #0]
900127f6:	4620      	mov	r0, r4
900127f8:	f7ff fe1c 	bl	90012434 <USBD_ClrClassConfig>
    return USBD_FAIL;
900127fc:	2503      	movs	r5, #3
900127fe:	e7ba      	b.n	90012776 <USBD_StdDevReq+0x2a>
  switch (pdev->dev_state)
90012800:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012804:	3b01      	subs	r3, #1
90012806:	2b02      	cmp	r3, #2
90012808:	d8ac      	bhi.n	90012764 <USBD_StdDevReq+0x18>
      if (req->wLength != 0x2U)
9001280a:	88ca      	ldrh	r2, [r1, #6]
9001280c:	2a02      	cmp	r2, #2
9001280e:	d1a9      	bne.n	90012764 <USBD_StdDevReq+0x18>
      if (pdev->dev_remote_wakeup != 0U)
90012810:	f8d0 32a4 	ldr.w	r3, [r0, #676]	@ 0x2a4
90012814:	4601      	mov	r1, r0
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
90012816:	2b00      	cmp	r3, #0
90012818:	bf0c      	ite	eq
9001281a:	2301      	moveq	r3, #1
9001281c:	2303      	movne	r3, #3
9001281e:	f841 3f0c 	str.w	r3, [r1, #12]!
      (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config_status, 2U);
90012822:	f000 fc6b 	bl	900130fc <USBD_CtlSendData>
      break;
90012826:	e7a5      	b.n	90012774 <USBD_StdDevReq+0x28>
  switch (pdev->dev_state)
90012828:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001282c:	3b01      	subs	r3, #1
9001282e:	2b02      	cmp	r3, #2
90012830:	d898      	bhi.n	90012764 <USBD_StdDevReq+0x18>
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
90012832:	884b      	ldrh	r3, [r1, #2]
90012834:	2b01      	cmp	r3, #1
90012836:	d19d      	bne.n	90012774 <USBD_StdDevReq+0x28>
        pdev->dev_remote_wakeup = 0U;
90012838:	2300      	movs	r3, #0
        (void)USBD_CtlSendStatus(pdev);
9001283a:	4620      	mov	r0, r4
        pdev->dev_remote_wakeup = 0U;
9001283c:	f8c4 32a4 	str.w	r3, [r4, #676]	@ 0x2a4
        (void)USBD_CtlSendStatus(pdev);
90012840:	f000 fc7e 	bl	90013140 <USBD_CtlSendStatus>
90012844:	e796      	b.n	90012774 <USBD_StdDevReq+0x28>
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
90012846:	884b      	ldrh	r3, [r1, #2]
90012848:	2b01      	cmp	r3, #1
9001284a:	d0f6      	beq.n	9001283a <USBD_StdDevReq+0xee>
  else if (req->wValue == USB_FEATURE_TEST_MODE)
9001284c:	2b02      	cmp	r3, #2
9001284e:	d189      	bne.n	90012764 <USBD_StdDevReq+0x18>
    pdev->dev_test_mode = (uint8_t)(req->wIndex >> 8);
90012850:	888b      	ldrh	r3, [r1, #4]
90012852:	0a1b      	lsrs	r3, r3, #8
90012854:	f880 32a0 	strb.w	r3, [r0, #672]	@ 0x2a0
    (void)USBD_CtlSendStatus(pdev);
90012858:	f000 fc72 	bl	90013140 <USBD_CtlSendStatus>
9001285c:	e78a      	b.n	90012774 <USBD_StdDevReq+0x28>
  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
9001285e:	888b      	ldrh	r3, [r1, #4]
90012860:	2b00      	cmp	r3, #0
90012862:	f47f af7f 	bne.w	90012764 <USBD_StdDevReq+0x18>
90012866:	88cb      	ldrh	r3, [r1, #6]
90012868:	2b00      	cmp	r3, #0
9001286a:	f47f af7b 	bne.w	90012764 <USBD_StdDevReq+0x18>
9001286e:	884d      	ldrh	r5, [r1, #2]
90012870:	2d7f      	cmp	r5, #127	@ 0x7f
90012872:	f63f af77 	bhi.w	90012764 <USBD_StdDevReq+0x18>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012876:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
9001287a:	2b03      	cmp	r3, #3
9001287c:	f43f af72 	beq.w	90012764 <USBD_StdDevReq+0x18>
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
90012880:	b2e9      	uxtb	r1, r5
      pdev->dev_address = dev_addr;
90012882:	f880 129e 	strb.w	r1, [r0, #670]	@ 0x29e
      (void)USBD_LL_SetUSBAddress(pdev, dev_addr);
90012886:	f7f1 fa51 	bl	90003d2c <USBD_LL_SetUSBAddress>
      (void)USBD_CtlSendStatus(pdev);
9001288a:	4620      	mov	r0, r4
9001288c:	f000 fc58 	bl	90013140 <USBD_CtlSendStatus>
      if (dev_addr != 0U)
90012890:	2d00      	cmp	r5, #0
90012892:	f000 8115 	beq.w	90012ac0 <USBD_StdDevReq+0x374>
        pdev->dev_state = USBD_STATE_ADDRESSED;
90012896:	2302      	movs	r3, #2
90012898:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
9001289c:	e76a      	b.n	90012774 <USBD_StdDevReq+0x28>
  switch (req->wValue >> 8)
9001289e:	884a      	ldrh	r2, [r1, #2]
  uint16_t len = 0U;
900128a0:	2100      	movs	r1, #0
  switch (req->wValue >> 8)
900128a2:	0a13      	lsrs	r3, r2, #8
  uint16_t len = 0U;
900128a4:	f8ad 1006 	strh.w	r1, [sp, #6]
  switch (req->wValue >> 8)
900128a8:	3b01      	subs	r3, #1
900128aa:	2b0e      	cmp	r3, #14
900128ac:	f63f af5a 	bhi.w	90012764 <USBD_StdDevReq+0x18>
900128b0:	a101      	add	r1, pc, #4	@ (adr r1, 900128b8 <USBD_StdDevReq+0x16c>)
900128b2:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
900128b6:	bf00      	nop
900128b8:	9001299f 	.word	0x9001299f
900128bc:	90012985 	.word	0x90012985
900128c0:	900129af 	.word	0x900129af
900128c4:	90012765 	.word	0x90012765
900128c8:	90012765 	.word	0x90012765
900128cc:	90012955 	.word	0x90012955
900128d0:	9001296b 	.word	0x9001296b
900128d4:	90012765 	.word	0x90012765
900128d8:	90012765 	.word	0x90012765
900128dc:	90012765 	.word	0x90012765
900128e0:	90012765 	.word	0x90012765
900128e4:	90012765 	.word	0x90012765
900128e8:	90012765 	.word	0x90012765
900128ec:	90012765 	.word	0x90012765
900128f0:	9001291d 	.word	0x9001291d
  if (req->wLength != 1U)
900128f4:	88ca      	ldrh	r2, [r1, #6]
900128f6:	2a01      	cmp	r2, #1
900128f8:	f47f af34 	bne.w	90012764 <USBD_StdDevReq+0x18>
    switch (pdev->dev_state)
900128fc:	f890 129c 	ldrb.w	r1, [r0, #668]	@ 0x29c
90012900:	2902      	cmp	r1, #2
90012902:	b2cb      	uxtb	r3, r1
90012904:	f200 808a 	bhi.w	90012a1c <USBD_StdDevReq+0x2d0>
90012908:	2b00      	cmp	r3, #0
9001290a:	f43f af2b 	beq.w	90012764 <USBD_StdDevReq+0x18>
        pdev->dev_default_config = 0U;
9001290e:	4601      	mov	r1, r0
90012910:	2300      	movs	r3, #0
90012912:	f841 3f08 	str.w	r3, [r1, #8]!
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_default_config, 1U);
90012916:	f000 fbf1 	bl	900130fc <USBD_CtlSendData>
        break;
9001291a:	e72b      	b.n	90012774 <USBD_StdDevReq+0x28>
      if (pdev->pDesc->GetBOSDescriptor != NULL)
9001291c:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
90012920:	69db      	ldr	r3, [r3, #28]
90012922:	2b00      	cmp	r3, #0
90012924:	f43f af1e 	beq.w	90012764 <USBD_StdDevReq+0x18>
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
90012928:	f10d 0106 	add.w	r1, sp, #6
9001292c:	7c20      	ldrb	r0, [r4, #16]
9001292e:	4798      	blx	r3
  if (req->wLength != 0U)
90012930:	88eb      	ldrh	r3, [r5, #6]
90012932:	2b00      	cmp	r3, #0
90012934:	d06e      	beq.n	90012a14 <USBD_StdDevReq+0x2c8>
    if (len != 0U)
90012936:	f8bd 2006 	ldrh.w	r2, [sp, #6]
9001293a:	2a00      	cmp	r2, #0
9001293c:	f43f af12 	beq.w	90012764 <USBD_StdDevReq+0x18>
      len = MIN(len, req->wLength);
90012940:	429a      	cmp	r2, r3
      (void)USBD_CtlSendData(pdev, pbuf, len);
90012942:	4601      	mov	r1, r0
90012944:	4620      	mov	r0, r4
      len = MIN(len, req->wLength);
90012946:	bf28      	it	cs
90012948:	461a      	movcs	r2, r3
9001294a:	f8ad 2006 	strh.w	r2, [sp, #6]
      (void)USBD_CtlSendData(pdev, pbuf, len);
9001294e:	f000 fbd5 	bl	900130fc <USBD_CtlSendData>
90012952:	e70f      	b.n	90012774 <USBD_StdDevReq+0x28>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
90012954:	7c03      	ldrb	r3, [r0, #16]
90012956:	2b00      	cmp	r3, #0
90012958:	f47f af04 	bne.w	90012764 <USBD_StdDevReq+0x18>
          pbuf = (uint8_t *)pdev->pClass[0]->GetDeviceQualifierDescriptor(&len);
9001295c:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
90012960:	f10d 0006 	add.w	r0, sp, #6
90012964:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90012966:	4798      	blx	r3
  if (err != 0U)
90012968:	e7e2      	b.n	90012930 <USBD_StdDevReq+0x1e4>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
9001296a:	7c03      	ldrb	r3, [r0, #16]
9001296c:	2b00      	cmp	r3, #0
9001296e:	f47f aef9 	bne.w	90012764 <USBD_StdDevReq+0x18>
          pbuf = (uint8_t *)pdev->pClass[0]->GetOtherSpeedConfigDescriptor(&len);
90012972:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
90012976:	f10d 0006 	add.w	r0, sp, #6
9001297a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001297c:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
9001297e:	2307      	movs	r3, #7
90012980:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
90012982:	e7d5      	b.n	90012930 <USBD_StdDevReq+0x1e4>
      if (pdev->dev_speed == USBD_SPEED_HIGH)
90012984:	7c02      	ldrb	r2, [r0, #16]
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
90012986:	f8d0 32b8 	ldr.w	r3, [r0, #696]	@ 0x2b8
      if (pdev->dev_speed == USBD_SPEED_HIGH)
9001298a:	2a00      	cmp	r2, #0
9001298c:	f040 808a 	bne.w	90012aa4 <USBD_StdDevReq+0x358>
          pbuf = (uint8_t *)pdev->pClass[0]->GetHSConfigDescriptor(&len);
90012990:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90012992:	f10d 0006 	add.w	r0, sp, #6
90012996:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
90012998:	2302      	movs	r3, #2
9001299a:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
9001299c:	e7c8      	b.n	90012930 <USBD_StdDevReq+0x1e4>
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
9001299e:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
900129a2:	f10d 0106 	add.w	r1, sp, #6
900129a6:	7c00      	ldrb	r0, [r0, #16]
900129a8:	681b      	ldr	r3, [r3, #0]
900129aa:	4798      	blx	r3
  if (err != 0U)
900129ac:	e7c0      	b.n	90012930 <USBD_StdDevReq+0x1e4>
      switch ((uint8_t)(req->wValue))
900129ae:	b2d2      	uxtb	r2, r2
900129b0:	2a05      	cmp	r2, #5
900129b2:	f63f aed7 	bhi.w	90012764 <USBD_StdDevReq+0x18>
900129b6:	e8df f002 	tbb	[pc, r2]
900129ba:	1b21      	.short	0x1b21
900129bc:	03090f15 	.word	0x03090f15
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
900129c0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
900129c4:	699b      	ldr	r3, [r3, #24]
900129c6:	2b00      	cmp	r3, #0
900129c8:	d1ae      	bne.n	90012928 <USBD_StdDevReq+0x1dc>
900129ca:	e6cb      	b.n	90012764 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
900129cc:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
900129d0:	695b      	ldr	r3, [r3, #20]
900129d2:	2b00      	cmp	r3, #0
900129d4:	d1a8      	bne.n	90012928 <USBD_StdDevReq+0x1dc>
900129d6:	e6c5      	b.n	90012764 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
900129d8:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
900129dc:	691b      	ldr	r3, [r3, #16]
900129de:	2b00      	cmp	r3, #0
900129e0:	d1a2      	bne.n	90012928 <USBD_StdDevReq+0x1dc>
900129e2:	e6bf      	b.n	90012764 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
900129e4:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
900129e8:	68db      	ldr	r3, [r3, #12]
900129ea:	2b00      	cmp	r3, #0
900129ec:	d19c      	bne.n	90012928 <USBD_StdDevReq+0x1dc>
900129ee:	e6b9      	b.n	90012764 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
900129f0:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
900129f4:	689b      	ldr	r3, [r3, #8]
900129f6:	2b00      	cmp	r3, #0
900129f8:	d196      	bne.n	90012928 <USBD_StdDevReq+0x1dc>
900129fa:	e6b3      	b.n	90012764 <USBD_StdDevReq+0x18>
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
900129fc:	f8d0 32b4 	ldr.w	r3, [r0, #692]	@ 0x2b4
90012a00:	685b      	ldr	r3, [r3, #4]
90012a02:	2b00      	cmp	r3, #0
90012a04:	d190      	bne.n	90012928 <USBD_StdDevReq+0x1dc>
90012a06:	e6ad      	b.n	90012764 <USBD_StdDevReq+0x18>
        pdev->dev_state = USBD_STATE_ADDRESSED;
90012a08:	2302      	movs	r3, #2
        pdev->dev_config = cfgidx;
90012a0a:	6041      	str	r1, [r0, #4]
        pdev->dev_state = USBD_STATE_ADDRESSED;
90012a0c:	f880 329c 	strb.w	r3, [r0, #668]	@ 0x29c
        (void)USBD_ClrClassConfig(pdev, cfgidx);
90012a10:	f7ff fd10 	bl	90012434 <USBD_ClrClassConfig>
        (void)USBD_CtlSendStatus(pdev);
90012a14:	4620      	mov	r0, r4
90012a16:	f000 fb93 	bl	90013140 <USBD_CtlSendStatus>
90012a1a:	e6ab      	b.n	90012774 <USBD_StdDevReq+0x28>
    switch (pdev->dev_state)
90012a1c:	2b03      	cmp	r3, #3
90012a1e:	f47f aea1 	bne.w	90012764 <USBD_StdDevReq+0x18>
        (void)USBD_CtlSendData(pdev, (uint8_t *)&pdev->dev_config, 1U);
90012a22:	1d01      	adds	r1, r0, #4
90012a24:	f000 fb6a 	bl	900130fc <USBD_CtlSendData>
        break;
90012a28:	e6a4      	b.n	90012774 <USBD_StdDevReq+0x28>
      if (cfgidx == 0U)
90012a2a:	2900      	cmp	r1, #0
90012a2c:	d0ec      	beq.n	90012a08 <USBD_StdDevReq+0x2bc>
      else if (cfgidx != pdev->dev_config)
90012a2e:	6841      	ldr	r1, [r0, #4]
90012a30:	2901      	cmp	r1, #1
90012a32:	d0ef      	beq.n	90012a14 <USBD_StdDevReq+0x2c8>
        (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
90012a34:	b2c9      	uxtb	r1, r1
90012a36:	f7ff fcfd 	bl	90012434 <USBD_ClrClassConfig>
        pdev->dev_config = cfgidx;
90012a3a:	7829      	ldrb	r1, [r5, #0]
        ret = USBD_SetClassConfig(pdev, cfgidx);
90012a3c:	4620      	mov	r0, r4
        pdev->dev_config = cfgidx;
90012a3e:	6061      	str	r1, [r4, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
90012a40:	f7ff fcf0 	bl	90012424 <USBD_SetClassConfig>
        if (ret != USBD_OK)
90012a44:	4605      	mov	r5, r0
90012a46:	2800      	cmp	r0, #0
90012a48:	d0e4      	beq.n	90012a14 <USBD_StdDevReq+0x2c8>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012a4a:	2180      	movs	r1, #128	@ 0x80
90012a4c:	4620      	mov	r0, r4
90012a4e:	f7f1 f941 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012a52:	2100      	movs	r1, #0
90012a54:	4620      	mov	r0, r4
90012a56:	f7f1 f93d 	bl	90003cd4 <USBD_LL_StallEP>
          (void)USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
90012a5a:	7921      	ldrb	r1, [r4, #4]
90012a5c:	4620      	mov	r0, r4
90012a5e:	f7ff fce9 	bl	90012434 <USBD_ClrClassConfig>
          pdev->dev_state = USBD_STATE_ADDRESSED;
90012a62:	2302      	movs	r3, #2
90012a64:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
90012a68:	e685      	b.n	90012776 <USBD_StdDevReq+0x2a>
      if (cfgidx != 0U)
90012a6a:	2900      	cmp	r1, #0
90012a6c:	d0d2      	beq.n	90012a14 <USBD_StdDevReq+0x2c8>
        pdev->dev_config = cfgidx;
90012a6e:	2101      	movs	r1, #1
90012a70:	6041      	str	r1, [r0, #4]
        ret = USBD_SetClassConfig(pdev, cfgidx);
90012a72:	f7ff fcd7 	bl	90012424 <USBD_SetClassConfig>
        if (ret != USBD_OK)
90012a76:	4605      	mov	r5, r0
90012a78:	b1d8      	cbz	r0, 90012ab2 <USBD_StdDevReq+0x366>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012a7a:	2180      	movs	r1, #128	@ 0x80
90012a7c:	4620      	mov	r0, r4
90012a7e:	f7f1 f929 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012a82:	2100      	movs	r1, #0
90012a84:	4620      	mov	r0, r4
90012a86:	f7f1 f925 	bl	90003cd4 <USBD_LL_StallEP>
          pdev->dev_state = USBD_STATE_ADDRESSED;
90012a8a:	f884 629c 	strb.w	r6, [r4, #668]	@ 0x29c
90012a8e:	e672      	b.n	90012776 <USBD_StdDevReq+0x2a>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012a90:	2180      	movs	r1, #128	@ 0x80
90012a92:	f7f1 f91f 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012a96:	2100      	movs	r1, #0
90012a98:	4620      	mov	r0, r4
90012a9a:	f7f1 f91b 	bl	90003cd4 <USBD_LL_StallEP>
    return USBD_FAIL;
90012a9e:	e6ad      	b.n	900127fc <USBD_StdDevReq+0xb0>
90012aa0:	24024588 	.word	0x24024588
          pbuf = (uint8_t *)pdev->pClass[0]->GetFSConfigDescriptor(&len);
90012aa4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90012aa6:	f10d 0006 	add.w	r0, sp, #6
90012aaa:	4798      	blx	r3
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
90012aac:	2302      	movs	r3, #2
90012aae:	7043      	strb	r3, [r0, #1]
  if (err != 0U)
90012ab0:	e73e      	b.n	90012930 <USBD_StdDevReq+0x1e4>
          (void)USBD_CtlSendStatus(pdev);
90012ab2:	4620      	mov	r0, r4
90012ab4:	f000 fb44 	bl	90013140 <USBD_CtlSendStatus>
          pdev->dev_state = USBD_STATE_CONFIGURED;
90012ab8:	2303      	movs	r3, #3
90012aba:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
90012abe:	e659      	b.n	90012774 <USBD_StdDevReq+0x28>
        pdev->dev_state = USBD_STATE_DEFAULT;
90012ac0:	2301      	movs	r3, #1
90012ac2:	f884 329c 	strb.w	r3, [r4, #668]	@ 0x29c
90012ac6:	e655      	b.n	90012774 <USBD_StdDevReq+0x28>

90012ac8 <USBD_StdItfReq>:
{
90012ac8:	b538      	push	{r3, r4, r5, lr}
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012aca:	780b      	ldrb	r3, [r1, #0]
{
90012acc:	460d      	mov	r5, r1
90012ace:	4604      	mov	r4, r0
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012ad0:	065a      	lsls	r2, r3, #25
90012ad2:	d50c      	bpl.n	90012aee <USBD_StdItfReq+0x26>
90012ad4:	f003 0260 	and.w	r2, r3, #96	@ 0x60
90012ad8:	2a40      	cmp	r2, #64	@ 0x40
90012ada:	d008      	beq.n	90012aee <USBD_StdItfReq+0x26>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012adc:	2180      	movs	r1, #128	@ 0x80
90012ade:	f7f1 f8f9 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012ae2:	2100      	movs	r1, #0
90012ae4:	4620      	mov	r0, r4
90012ae6:	f7f1 f8f5 	bl	90003cd4 <USBD_LL_StallEP>
  USBD_StatusTypeDef ret = USBD_OK;
90012aea:	2000      	movs	r0, #0
}
90012aec:	bd38      	pop	{r3, r4, r5, pc}
      switch (pdev->dev_state)
90012aee:	f894 329c 	ldrb.w	r3, [r4, #668]	@ 0x29c
90012af2:	3b01      	subs	r3, #1
90012af4:	2b02      	cmp	r3, #2
90012af6:	d802      	bhi.n	90012afe <USBD_StdItfReq+0x36>
          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
90012af8:	7929      	ldrb	r1, [r5, #4]
90012afa:	2901      	cmp	r1, #1
90012afc:	d908      	bls.n	90012b10 <USBD_StdItfReq+0x48>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012afe:	2180      	movs	r1, #128	@ 0x80
90012b00:	4620      	mov	r0, r4
90012b02:	f7f1 f8e7 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012b06:	2100      	movs	r1, #0
90012b08:	4620      	mov	r0, r4
90012b0a:	f7f1 f8e3 	bl	90003cd4 <USBD_LL_StallEP>
}
90012b0e:	e7ec      	b.n	90012aea <USBD_StdItfReq+0x22>
            idx = USBD_CoreFindIF(pdev, LOBYTE(req->wIndex));
90012b10:	4620      	mov	r0, r4
90012b12:	f7ff fe01 	bl	90012718 <USBD_CoreFindIF>
            if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
90012b16:	b988      	cbnz	r0, 90012b3c <USBD_StdItfReq+0x74>
              if (pdev->pClass[idx]->Setup != NULL)
90012b18:	f8d4 32b8 	ldr.w	r3, [r4, #696]	@ 0x2b8
90012b1c:	689b      	ldr	r3, [r3, #8]
90012b1e:	b16b      	cbz	r3, 90012b3c <USBD_StdItfReq+0x74>
                pdev->classId = idx;
90012b20:	f8c4 02d4 	str.w	r0, [r4, #724]	@ 0x2d4
                ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
90012b24:	4629      	mov	r1, r5
90012b26:	4620      	mov	r0, r4
90012b28:	4798      	blx	r3
            if ((req->wLength == 0U) && (ret == USBD_OK))
90012b2a:	88ea      	ldrh	r2, [r5, #6]
90012b2c:	2a00      	cmp	r2, #0
90012b2e:	d1dd      	bne.n	90012aec <USBD_StdItfReq+0x24>
90012b30:	2800      	cmp	r0, #0
90012b32:	d1db      	bne.n	90012aec <USBD_StdItfReq+0x24>
              (void)USBD_CtlSendStatus(pdev);
90012b34:	4620      	mov	r0, r4
90012b36:	f000 fb03 	bl	90013140 <USBD_CtlSendStatus>
90012b3a:	e7d6      	b.n	90012aea <USBD_StdItfReq+0x22>
                ret = USBD_FAIL;
90012b3c:	2003      	movs	r0, #3
}
90012b3e:	bd38      	pop	{r3, r4, r5, pc}

90012b40 <USBD_StdEPReq>:
{
90012b40:	b530      	push	{r4, r5, lr}
90012b42:	460c      	mov	r4, r1
  ep_addr = LOBYTE(req->wIndex);
90012b44:	888a      	ldrh	r2, [r1, #4]
{
90012b46:	b083      	sub	sp, #12
90012b48:	4605      	mov	r5, r0
  ep_addr = LOBYTE(req->wIndex);
90012b4a:	7823      	ldrb	r3, [r4, #0]
90012b4c:	b2d1      	uxtb	r1, r2
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012b4e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90012b52:	2b20      	cmp	r3, #32
90012b54:	d01f      	beq.n	90012b96 <USBD_StdEPReq+0x56>
90012b56:	2b40      	cmp	r3, #64	@ 0x40
90012b58:	d01d      	beq.n	90012b96 <USBD_StdEPReq+0x56>
90012b5a:	b373      	cbz	r3, 90012bba <USBD_StdEPReq+0x7a>
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012b5c:	2180      	movs	r1, #128	@ 0x80
90012b5e:	4628      	mov	r0, r5
90012b60:	f7f1 f8b8 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012b64:	2100      	movs	r1, #0
90012b66:	4628      	mov	r0, r5
90012b68:	f7f1 f8b4 	bl	90003cd4 <USBD_LL_StallEP>
}
90012b6c:	2000      	movs	r0, #0
90012b6e:	b003      	add	sp, #12
90012b70:	bd30      	pop	{r4, r5, pc}
          switch (pdev->dev_state)
90012b72:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012b76:	2b02      	cmp	r3, #2
90012b78:	b2da      	uxtb	r2, r3
90012b7a:	d05b      	beq.n	90012c34 <USBD_StdEPReq+0xf4>
90012b7c:	2a03      	cmp	r2, #3
90012b7e:	d1ed      	bne.n	90012b5c <USBD_StdEPReq+0x1c>
              if (req->wValue == USB_FEATURE_EP_HALT)
90012b80:	8863      	ldrh	r3, [r4, #2]
90012b82:	2b00      	cmp	r3, #0
90012b84:	d1f2      	bne.n	90012b6c <USBD_StdEPReq+0x2c>
                if ((ep_addr & 0x7FU) != 0x00U)
90012b86:	064b      	lsls	r3, r1, #25
90012b88:	f040 8081 	bne.w	90012c8e <USBD_StdEPReq+0x14e>
                (void)USBD_CtlSendStatus(pdev);
90012b8c:	4628      	mov	r0, r5
90012b8e:	9101      	str	r1, [sp, #4]
90012b90:	f000 fad6 	bl	90013140 <USBD_CtlSendStatus>
                idx = USBD_CoreFindEP(pdev, ep_addr);
90012b94:	9901      	ldr	r1, [sp, #4]
90012b96:	4628      	mov	r0, r5
90012b98:	f7ff fdc0 	bl	9001271c <USBD_CoreFindEP>
                if (((uint8_t)idx != 0xFFU) && (idx < USBD_MAX_SUPPORTED_CLASS))
90012b9c:	2800      	cmp	r0, #0
90012b9e:	d1e5      	bne.n	90012b6c <USBD_StdEPReq+0x2c>
                  if (pdev->pClass[idx]->Setup != NULL)
90012ba0:	f8d5 32b8 	ldr.w	r3, [r5, #696]	@ 0x2b8
                  pdev->classId = idx;
90012ba4:	f8c5 02d4 	str.w	r0, [r5, #724]	@ 0x2d4
                  if (pdev->pClass[idx]->Setup != NULL)
90012ba8:	689b      	ldr	r3, [r3, #8]
90012baa:	2b00      	cmp	r3, #0
90012bac:	d0de      	beq.n	90012b6c <USBD_StdEPReq+0x2c>
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
90012bae:	4621      	mov	r1, r4
90012bb0:	4628      	mov	r0, r5
}
90012bb2:	b003      	add	sp, #12
90012bb4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
                    ret = (USBD_StatusTypeDef)(pdev->pClass[idx]->Setup(pdev, req));
90012bb8:	4718      	bx	r3
      switch (req->bRequest)
90012bba:	7863      	ldrb	r3, [r4, #1]
90012bbc:	2b01      	cmp	r3, #1
90012bbe:	d0d8      	beq.n	90012b72 <USBD_StdEPReq+0x32>
90012bc0:	2b03      	cmp	r3, #3
90012bc2:	d025      	beq.n	90012c10 <USBD_StdEPReq+0xd0>
90012bc4:	2b00      	cmp	r3, #0
90012bc6:	d1c9      	bne.n	90012b5c <USBD_StdEPReq+0x1c>
          switch (pdev->dev_state)
90012bc8:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012bcc:	2b02      	cmp	r3, #2
90012bce:	b2d8      	uxtb	r0, r3
90012bd0:	d039      	beq.n	90012c46 <USBD_StdEPReq+0x106>
90012bd2:	2803      	cmp	r0, #3
90012bd4:	d1c2      	bne.n	90012b5c <USBD_StdEPReq+0x1c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
90012bd6:	f001 030f 	and.w	r3, r1, #15
              if ((ep_addr & 0x80U) == 0x80U)
90012bda:	0612      	lsls	r2, r2, #24
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
90012bdc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
90012be0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
              if ((ep_addr & 0x80U) == 0x80U)
90012be4:	d440      	bmi.n	90012c68 <USBD_StdEPReq+0x128>
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
90012be6:	f8b3 3164 	ldrh.w	r3, [r3, #356]	@ 0x164
90012bea:	2b00      	cmp	r3, #0
90012bec:	d0b6      	beq.n	90012b5c <USBD_StdEPReq+0x1c>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90012bee:	f001 037f 	and.w	r3, r1, #127	@ 0x7f
90012bf2:	2414      	movs	r4, #20
90012bf4:	fb04 5403 	mla	r4, r4, r3, r5
90012bf8:	f504 74aa 	add.w	r4, r4, #340	@ 0x154
              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
90012bfc:	2b00      	cmp	r3, #0
90012bfe:	d13f      	bne.n	90012c80 <USBD_StdEPReq+0x140>
{
90012c00:	2300      	movs	r3, #0
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
90012c02:	2202      	movs	r2, #2
90012c04:	4621      	mov	r1, r4
90012c06:	4628      	mov	r0, r5
                pep->status = 0x0000U;
90012c08:	6023      	str	r3, [r4, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
90012c0a:	f000 fa77 	bl	900130fc <USBD_CtlSendData>
              break;
90012c0e:	e7ad      	b.n	90012b6c <USBD_StdEPReq+0x2c>
          switch (pdev->dev_state)
90012c10:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012c14:	2b02      	cmp	r3, #2
90012c16:	b2da      	uxtb	r2, r3
90012c18:	d00c      	beq.n	90012c34 <USBD_StdEPReq+0xf4>
90012c1a:	2a03      	cmp	r2, #3
90012c1c:	d19e      	bne.n	90012b5c <USBD_StdEPReq+0x1c>
              if (req->wValue == USB_FEATURE_EP_HALT)
90012c1e:	8863      	ldrh	r3, [r4, #2]
90012c20:	b923      	cbnz	r3, 90012c2c <USBD_StdEPReq+0xec>
                if ((ep_addr != 0x00U) && (ep_addr != 0x80U) && (req->wLength == 0x00U))
90012c22:	0648      	lsls	r0, r1, #25
90012c24:	d002      	beq.n	90012c2c <USBD_StdEPReq+0xec>
90012c26:	88e3      	ldrh	r3, [r4, #6]
90012c28:	2b00      	cmp	r3, #0
90012c2a:	d035      	beq.n	90012c98 <USBD_StdEPReq+0x158>
              (void)USBD_CtlSendStatus(pdev);
90012c2c:	4628      	mov	r0, r5
90012c2e:	f000 fa87 	bl	90013140 <USBD_CtlSendStatus>
              break;
90012c32:	e79b      	b.n	90012b6c <USBD_StdEPReq+0x2c>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
90012c34:	064a      	lsls	r2, r1, #25
90012c36:	d091      	beq.n	90012b5c <USBD_StdEPReq+0x1c>
                (void)USBD_LL_StallEP(pdev, ep_addr);
90012c38:	f7f1 f84c 	bl	90003cd4 <USBD_LL_StallEP>
                (void)USBD_LL_StallEP(pdev, 0x80U);
90012c3c:	2180      	movs	r1, #128	@ 0x80
90012c3e:	4628      	mov	r0, r5
90012c40:	f7f1 f848 	bl	90003cd4 <USBD_LL_StallEP>
90012c44:	e792      	b.n	90012b6c <USBD_StdEPReq+0x2c>
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
90012c46:	0648      	lsls	r0, r1, #25
90012c48:	d188      	bne.n	90012b5c <USBD_StdEPReq+0x1c>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90012c4a:	0611      	lsls	r1, r2, #24
              pep->status = 0x0000U;
90012c4c:	f04f 0300 	mov.w	r3, #0
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
90012c50:	f04f 0202 	mov.w	r2, #2
90012c54:	4628      	mov	r0, r5
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90012c56:	bf4c      	ite	mi
90012c58:	f105 0114 	addmi.w	r1, r5, #20
90012c5c:	f505 71aa 	addpl.w	r1, r5, #340	@ 0x154
              pep->status = 0x0000U;
90012c60:	600b      	str	r3, [r1, #0]
              (void)USBD_CtlSendData(pdev, (uint8_t *)&pep->status, 2U);
90012c62:	f000 fa4b 	bl	900130fc <USBD_CtlSendData>
              break;
90012c66:	e781      	b.n	90012b6c <USBD_StdEPReq+0x2c>
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
90012c68:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
90012c6a:	2b00      	cmp	r3, #0
90012c6c:	f43f af76 	beq.w	90012b5c <USBD_StdEPReq+0x1c>
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
90012c70:	f001 037f 	and.w	r3, r1, #127	@ 0x7f
90012c74:	1c5c      	adds	r4, r3, #1
90012c76:	eb04 0484 	add.w	r4, r4, r4, lsl #2
90012c7a:	eb05 0484 	add.w	r4, r5, r4, lsl #2
90012c7e:	e7bd      	b.n	90012bfc <USBD_StdEPReq+0xbc>
              else if (USBD_LL_IsStallEP(pdev, ep_addr) != 0U)
90012c80:	4628      	mov	r0, r5
90012c82:	f7f1 f83f 	bl	90003d04 <USBD_LL_IsStallEP>
90012c86:	2800      	cmp	r0, #0
90012c88:	d0ba      	beq.n	90012c00 <USBD_StdEPReq+0xc0>
90012c8a:	2301      	movs	r3, #1
90012c8c:	e7b9      	b.n	90012c02 <USBD_StdEPReq+0xc2>
                  (void)USBD_LL_ClearStallEP(pdev, ep_addr);
90012c8e:	9101      	str	r1, [sp, #4]
90012c90:	f7f1 f82c 	bl	90003cec <USBD_LL_ClearStallEP>
90012c94:	9901      	ldr	r1, [sp, #4]
90012c96:	e779      	b.n	90012b8c <USBD_StdEPReq+0x4c>
                  (void)USBD_LL_StallEP(pdev, ep_addr);
90012c98:	4628      	mov	r0, r5
90012c9a:	f7f1 f81b 	bl	90003cd4 <USBD_LL_StallEP>
90012c9e:	e7c5      	b.n	90012c2c <USBD_StdEPReq+0xec>

90012ca0 <USBD_ParseSetupRequest>:
  req->bmRequest = *(uint8_t *)(pbuff);
90012ca0:	780b      	ldrb	r3, [r1, #0]
90012ca2:	7003      	strb	r3, [r0, #0]
  req->bRequest = *(uint8_t *)(pbuff);
90012ca4:	784b      	ldrb	r3, [r1, #1]
90012ca6:	7043      	strb	r3, [r0, #1]
  req->wValue = SWAPBYTE(pbuff);
90012ca8:	884b      	ldrh	r3, [r1, #2]
90012caa:	8043      	strh	r3, [r0, #2]
  req->wIndex = SWAPBYTE(pbuff);
90012cac:	888b      	ldrh	r3, [r1, #4]
90012cae:	8083      	strh	r3, [r0, #4]
  req->wLength = SWAPBYTE(pbuff);
90012cb0:	88cb      	ldrh	r3, [r1, #6]
90012cb2:	80c3      	strh	r3, [r0, #6]
}
90012cb4:	4770      	bx	lr
90012cb6:	bf00      	nop

90012cb8 <USBD_CtlError>:
{
90012cb8:	b510      	push	{r4, lr}
90012cba:	4604      	mov	r4, r0
  (void)USBD_LL_StallEP(pdev, 0x80U);
90012cbc:	2180      	movs	r1, #128	@ 0x80
90012cbe:	f7f1 f809 	bl	90003cd4 <USBD_LL_StallEP>
  (void)USBD_LL_StallEP(pdev, 0U);
90012cc2:	2100      	movs	r1, #0
90012cc4:	4620      	mov	r0, r4
}
90012cc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  (void)USBD_LL_StallEP(pdev, 0U);
90012cca:	f7f1 b803 	b.w	90003cd4 <USBD_LL_StallEP>
90012cce:	bf00      	nop

90012cd0 <USBD_GetString>:
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
  uint8_t idx = 0U;
  uint8_t *pdesc;

  if (desc == NULL)
90012cd0:	b330      	cbz	r0, 90012d20 <USBD_GetString+0x50>
{
90012cd2:	b570      	push	{r4, r5, r6, lr}
static uint8_t USBD_GetLen(uint8_t *buf)
{
  uint8_t  len = 0U;
  uint8_t *pbuff = buf;

  while (*pbuff != (uint8_t)'\0')
90012cd4:	7803      	ldrb	r3, [r0, #0]
90012cd6:	460e      	mov	r6, r1
90012cd8:	4605      	mov	r5, r0
90012cda:	4614      	mov	r4, r2
90012cdc:	b30b      	cbz	r3, 90012d22 <USBD_GetString+0x52>
90012cde:	4603      	mov	r3, r0
90012ce0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
90012ce4:	2900      	cmp	r1, #0
90012ce6:	d1fb      	bne.n	90012ce0 <USBD_GetString+0x10>
90012ce8:	1c68      	adds	r0, r5, #1
90012cea:	f7ed faf9 	bl	900002e0 <strlen>
  *len = MIN(USBD_MAX_STR_DESC_SIZ, ((uint16_t)USBD_GetLen(pdesc) * 2U) + 2U);
90012cee:	1c43      	adds	r3, r0, #1
90012cf0:	b2db      	uxtb	r3, r3
90012cf2:	3301      	adds	r3, #1
90012cf4:	005b      	lsls	r3, r3, #1
90012cf6:	b2da      	uxtb	r2, r3
90012cf8:	8023      	strh	r3, [r4, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
90012cfa:	2303      	movs	r3, #3
  unicode[idx] = *(uint8_t *)len;
90012cfc:	7032      	strb	r2, [r6, #0]
  unicode[idx] = USB_DESC_TYPE_STRING;
90012cfe:	7073      	strb	r3, [r6, #1]
  while (*pdesc != (uint8_t)'\0')
90012d00:	782c      	ldrb	r4, [r5, #0]
90012d02:	b164      	cbz	r4, 90012d1e <USBD_GetString+0x4e>
90012d04:	4628      	mov	r0, r5
  idx++;
90012d06:	2302      	movs	r3, #2
    unicode[idx] = 0U;
90012d08:	2100      	movs	r1, #0
    idx++;
90012d0a:	1c5a      	adds	r2, r3, #1
    unicode[idx] = *pdesc;
90012d0c:	54f4      	strb	r4, [r6, r3]
    idx++;
90012d0e:	3302      	adds	r3, #2
    unicode[idx] = 0U;
90012d10:	b2d2      	uxtb	r2, r2
    idx++;
90012d12:	b2db      	uxtb	r3, r3
    unicode[idx] = 0U;
90012d14:	54b1      	strb	r1, [r6, r2]
  while (*pdesc != (uint8_t)'\0')
90012d16:	f810 4f01 	ldrb.w	r4, [r0, #1]!
90012d1a:	2c00      	cmp	r4, #0
90012d1c:	d1f5      	bne.n	90012d0a <USBD_GetString+0x3a>
}
90012d1e:	bd70      	pop	{r4, r5, r6, pc}
90012d20:	4770      	bx	lr
  while (*pbuff != (uint8_t)'\0')
90012d22:	2202      	movs	r2, #2
90012d24:	4613      	mov	r3, r2
90012d26:	e7e7      	b.n	90012cf8 <USBD_GetString+0x28>

90012d28 <USBD_HID_DataIn>:
  * @param  pdev: device instance
  * @param  epnum: endpoint index
  * @retval status
  */
static uint8_t USBD_HID_DataIn(USBD_HandleTypeDef *pdev, uint8_t epnum)
{
90012d28:	4603      	mov	r3, r0
  UNUSED(epnum);
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
90012d2a:	2100      	movs	r1, #0
90012d2c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	@ 0x2d4

  return (uint8_t)USBD_OK;
}
90012d30:	4608      	mov	r0, r1
  ((USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId])->state = USBD_HID_IDLE;
90012d32:	32b0      	adds	r2, #176	@ 0xb0
90012d34:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
90012d38:	7319      	strb	r1, [r3, #12]
}
90012d3a:	4770      	bx	lr

90012d3c <USBD_HID_GetDeviceQualifierDesc>:
  *         return Device Qualifier descriptor
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t *USBD_HID_GetDeviceQualifierDesc(uint16_t *length)
{
90012d3c:	4603      	mov	r3, r0
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
90012d3e:	220a      	movs	r2, #10

  return USBD_HID_DeviceQualifierDesc;
}
90012d40:	4801      	ldr	r0, [pc, #4]	@ (90012d48 <USBD_HID_GetDeviceQualifierDesc+0xc>)
  *length = (uint16_t)sizeof(USBD_HID_DeviceQualifierDesc);
90012d42:	801a      	strh	r2, [r3, #0]
}
90012d44:	4770      	bx	lr
90012d46:	bf00      	nop
90012d48:	240001cc 	.word	0x240001cc

90012d4c <USBD_HID_GetFSCfgDescKeyboard>:
{
90012d4c:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescKeyboard, HID_EPIN_ADDR);
90012d4e:	2181      	movs	r1, #129	@ 0x81
{
90012d50:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescKeyboard, HID_EPIN_ADDR);
90012d52:	4805      	ldr	r0, [pc, #20]	@ (90012d68 <USBD_HID_GetFSCfgDescKeyboard+0x1c>)
90012d54:	f7ff fce4 	bl	90012720 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
90012d58:	b108      	cbz	r0, 90012d5e <USBD_HID_GetFSCfgDescKeyboard+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
90012d5a:	230a      	movs	r3, #10
90012d5c:	7183      	strb	r3, [r0, #6]
    *length = (uint16_t)sizeof(USBD_HID_CfgDescKeyboard);
90012d5e:	2322      	movs	r3, #34	@ 0x22
}
90012d60:	4801      	ldr	r0, [pc, #4]	@ (90012d68 <USBD_HID_GetFSCfgDescKeyboard+0x1c>)
    *length = (uint16_t)sizeof(USBD_HID_CfgDescKeyboard);
90012d62:	8023      	strh	r3, [r4, #0]
}
90012d64:	bd10      	pop	{r4, pc}
90012d66:	bf00      	nop
90012d68:	240001f0 	.word	0x240001f0

90012d6c <USBD_HID_GetHSCfgDescKeyboard>:
{
90012d6c:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescKeyboard, HID_EPIN_ADDR);
90012d6e:	2181      	movs	r1, #129	@ 0x81
{
90012d70:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescKeyboard, HID_EPIN_ADDR);
90012d72:	4805      	ldr	r0, [pc, #20]	@ (90012d88 <USBD_HID_GetHSCfgDescKeyboard+0x1c>)
90012d74:	f7ff fcd4 	bl	90012720 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
90012d78:	b108      	cbz	r0, 90012d7e <USBD_HID_GetHSCfgDescKeyboard+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
90012d7a:	2307      	movs	r3, #7
90012d7c:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDescKeyboard);
90012d7e:	2322      	movs	r3, #34	@ 0x22
}
90012d80:	4801      	ldr	r0, [pc, #4]	@ (90012d88 <USBD_HID_GetHSCfgDescKeyboard+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDescKeyboard);
90012d82:	8023      	strh	r3, [r4, #0]
}
90012d84:	bd10      	pop	{r4, pc}
90012d86:	bf00      	nop
90012d88:	240001f0 	.word	0x240001f0

90012d8c <USBD_HID_GetFSCfgDescMouse>:
{
90012d8c:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescMouse, HID_EPIN_ADDR);
90012d8e:	2181      	movs	r1, #129	@ 0x81
{
90012d90:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescMouse, HID_EPIN_ADDR);
90012d92:	4805      	ldr	r0, [pc, #20]	@ (90012da8 <USBD_HID_GetFSCfgDescMouse+0x1c>)
90012d94:	f7ff fcc4 	bl	90012720 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
90012d98:	b108      	cbz	r0, 90012d9e <USBD_HID_GetFSCfgDescMouse+0x12>
    pEpDesc->bInterval = HID_FS_BINTERVAL;
90012d9a:	230a      	movs	r3, #10
90012d9c:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDescMouse);
90012d9e:	2322      	movs	r3, #34	@ 0x22
}
90012da0:	4801      	ldr	r0, [pc, #4]	@ (90012da8 <USBD_HID_GetFSCfgDescMouse+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDescMouse);
90012da2:	8023      	strh	r3, [r4, #0]
}
90012da4:	bd10      	pop	{r4, pc}
90012da6:	bf00      	nop
90012da8:	24000214 	.word	0x24000214

90012dac <USBD_HID_GetHSCfgDescMouse>:
{
90012dac:	b510      	push	{r4, lr}
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescMouse, HID_EPIN_ADDR);
90012dae:	2181      	movs	r1, #129	@ 0x81
{
90012db0:	4604      	mov	r4, r0
  USBD_EpDescTypeDef *pEpDesc = USBD_GetEpDesc(USBD_HID_CfgDescMouse, HID_EPIN_ADDR);
90012db2:	4805      	ldr	r0, [pc, #20]	@ (90012dc8 <USBD_HID_GetHSCfgDescMouse+0x1c>)
90012db4:	f7ff fcb4 	bl	90012720 <USBD_GetEpDesc>
  if (pEpDesc != NULL)
90012db8:	b108      	cbz	r0, 90012dbe <USBD_HID_GetHSCfgDescMouse+0x12>
    pEpDesc->bInterval = HID_HS_BINTERVAL;
90012dba:	2307      	movs	r3, #7
90012dbc:	7183      	strb	r3, [r0, #6]
  *length = (uint16_t)sizeof(USBD_HID_CfgDescMouse);
90012dbe:	2322      	movs	r3, #34	@ 0x22
}
90012dc0:	4801      	ldr	r0, [pc, #4]	@ (90012dc8 <USBD_HID_GetHSCfgDescMouse+0x1c>)
  *length = (uint16_t)sizeof(USBD_HID_CfgDescMouse);
90012dc2:	8023      	strh	r3, [r4, #0]
}
90012dc4:	bd10      	pop	{r4, pc}
90012dc6:	bf00      	nop
90012dc8:	24000214 	.word	0x24000214

90012dcc <USBD_HID_SetupKeyboard>:
{
90012dcc:	b510      	push	{r4, lr}
  uint16_t status_info = 0U;
90012dce:	2300      	movs	r3, #0
{
90012dd0:	b082      	sub	sp, #8
  uint16_t status_info = 0U;
90012dd2:	f8ad 3006 	strh.w	r3, [sp, #6]
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
90012dd6:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
90012dda:	33b0      	adds	r3, #176	@ 0xb0
90012ddc:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
  if (hhid == NULL)
90012de0:	b13c      	cbz	r4, 90012df2 <USBD_HID_SetupKeyboard+0x26>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012de2:	780b      	ldrb	r3, [r1, #0]
90012de4:	f013 0360 	ands.w	r3, r3, #96	@ 0x60
90012de8:	d022      	beq.n	90012e30 <USBD_HID_SetupKeyboard+0x64>
90012dea:	2b20      	cmp	r3, #32
90012dec:	d004      	beq.n	90012df8 <USBD_HID_SetupKeyboard+0x2c>
            USBD_CtlError(pdev, req);
90012dee:	f7ff ff63 	bl	90012cb8 <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
90012df2:	2003      	movs	r0, #3
}
90012df4:	b002      	add	sp, #8
90012df6:	bd10      	pop	{r4, pc}
      switch (req->bRequest)
90012df8:	784b      	ldrb	r3, [r1, #1]
90012dfa:	3b02      	subs	r3, #2
90012dfc:	2b09      	cmp	r3, #9
90012dfe:	d8f6      	bhi.n	90012dee <USBD_HID_SetupKeyboard+0x22>
90012e00:	a201      	add	r2, pc, #4	@ (adr r2, 90012e08 <USBD_HID_SetupKeyboard+0x3c>)
90012e02:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012e06:	bf00      	nop
90012e08:	90012e87 	.word	0x90012e87
90012e0c:	90012e7d 	.word	0x90012e7d
90012e10:	90012def 	.word	0x90012def
90012e14:	90012def 	.word	0x90012def
90012e18:	90012def 	.word	0x90012def
90012e1c:	90012def 	.word	0x90012def
90012e20:	90012def 	.word	0x90012def
90012e24:	90012def 	.word	0x90012def
90012e28:	90012e75 	.word	0x90012e75
90012e2c:	90012e6d 	.word	0x90012e6d
      switch (req->bRequest)
90012e30:	784b      	ldrb	r3, [r1, #1]
90012e32:	2b0b      	cmp	r3, #11
90012e34:	d8db      	bhi.n	90012dee <USBD_HID_SetupKeyboard+0x22>
90012e36:	a201      	add	r2, pc, #4	@ (adr r2, 90012e3c <USBD_HID_SetupKeyboard+0x70>)
90012e38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012e3c:	90012ebb 	.word	0x90012ebb
90012e40:	90012e71 	.word	0x90012e71
90012e44:	90012def 	.word	0x90012def
90012e48:	90012def 	.word	0x90012def
90012e4c:	90012def 	.word	0x90012def
90012e50:	90012def 	.word	0x90012def
90012e54:	90012e9f 	.word	0x90012e9f
90012e58:	90012def 	.word	0x90012def
90012e5c:	90012def 	.word	0x90012def
90012e60:	90012def 	.word	0x90012def
90012e64:	90012ecf 	.word	0x90012ecf
90012e68:	90012e91 	.word	0x90012e91
          hhid->Protocol = (uint8_t)(req->wValue);
90012e6c:	788b      	ldrb	r3, [r1, #2]
90012e6e:	6023      	str	r3, [r4, #0]
  USBD_StatusTypeDef ret = USBD_OK;
90012e70:	2000      	movs	r0, #0
90012e72:	e7bf      	b.n	90012df4 <USBD_HID_SetupKeyboard+0x28>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
90012e74:	884b      	ldrh	r3, [r1, #2]
90012e76:	0a1b      	lsrs	r3, r3, #8
90012e78:	6063      	str	r3, [r4, #4]
          break;
90012e7a:	e7f9      	b.n	90012e70 <USBD_HID_SetupKeyboard+0xa4>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
90012e7c:	2201      	movs	r2, #1
90012e7e:	4621      	mov	r1, r4
90012e80:	f000 f93c 	bl	900130fc <USBD_CtlSendData>
          break;
90012e84:	e7f4      	b.n	90012e70 <USBD_HID_SetupKeyboard+0xa4>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
90012e86:	2201      	movs	r2, #1
90012e88:	1d21      	adds	r1, r4, #4
90012e8a:	f000 f937 	bl	900130fc <USBD_CtlSendData>
          break;
90012e8e:	e7ef      	b.n	90012e70 <USBD_HID_SetupKeyboard+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012e90:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012e94:	2b03      	cmp	r3, #3
90012e96:	d1aa      	bne.n	90012dee <USBD_HID_SetupKeyboard+0x22>
            hhid->AltSetting = (uint8_t)(req->wValue);
90012e98:	788b      	ldrb	r3, [r1, #2]
90012e9a:	60a3      	str	r3, [r4, #8]
90012e9c:	e7e8      	b.n	90012e70 <USBD_HID_SetupKeyboard+0xa4>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
90012e9e:	884b      	ldrh	r3, [r1, #2]
90012ea0:	0a1b      	lsrs	r3, r3, #8
90012ea2:	2b22      	cmp	r3, #34	@ 0x22
90012ea4:	d01d      	beq.n	90012ee2 <USBD_HID_SetupKeyboard+0x116>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
90012ea6:	2b21      	cmp	r3, #33	@ 0x21
90012ea8:	d1a1      	bne.n	90012dee <USBD_HID_SetupKeyboard+0x22>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
90012eaa:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_DescKeyboard;
90012eac:	4910      	ldr	r1, [pc, #64]	@ (90012ef0 <USBD_HID_SetupKeyboard+0x124>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
90012eae:	2a09      	cmp	r2, #9
90012eb0:	bf28      	it	cs
90012eb2:	2209      	movcs	r2, #9
          (void)USBD_CtlSendData(pdev, pbuf, len);
90012eb4:	f000 f922 	bl	900130fc <USBD_CtlSendData>
          break;
90012eb8:	e7da      	b.n	90012e70 <USBD_HID_SetupKeyboard+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012eba:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012ebe:	2b03      	cmp	r3, #3
90012ec0:	d195      	bne.n	90012dee <USBD_HID_SetupKeyboard+0x22>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
90012ec2:	2202      	movs	r2, #2
90012ec4:	f10d 0106 	add.w	r1, sp, #6
90012ec8:	f000 f918 	bl	900130fc <USBD_CtlSendData>
90012ecc:	e7d0      	b.n	90012e70 <USBD_HID_SetupKeyboard+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012ece:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012ed2:	2b03      	cmp	r3, #3
90012ed4:	d18b      	bne.n	90012dee <USBD_HID_SetupKeyboard+0x22>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
90012ed6:	2201      	movs	r2, #1
90012ed8:	f104 0108 	add.w	r1, r4, #8
90012edc:	f000 f90e 	bl	900130fc <USBD_CtlSendData>
90012ee0:	e7c6      	b.n	90012e70 <USBD_HID_SetupKeyboard+0xa4>
            len = MIN(HID_KEYBOARD_REPORT_DESC_SIZE, req->wLength);
90012ee2:	88ca      	ldrh	r2, [r1, #6]
        	pbuf = HID_KEYBOARD_ReportDesc;
90012ee4:	4903      	ldr	r1, [pc, #12]	@ (90012ef4 <USBD_HID_SetupKeyboard+0x128>)
            len = MIN(HID_KEYBOARD_REPORT_DESC_SIZE, req->wLength);
90012ee6:	2a3f      	cmp	r2, #63	@ 0x3f
90012ee8:	bf28      	it	cs
90012eea:	223f      	movcs	r2, #63	@ 0x3f
        	pbuf = HID_KEYBOARD_ReportDesc;
90012eec:	e7e2      	b.n	90012eb4 <USBD_HID_SetupKeyboard+0xe8>
90012eee:	bf00      	nop
90012ef0:	240001d8 	.word	0x240001d8
90012ef4:	24000140 	.word	0x24000140

90012ef8 <USBD_HID_SetupMouse>:
{
90012ef8:	b510      	push	{r4, lr}
  uint16_t status_info = 0U;
90012efa:	2300      	movs	r3, #0
{
90012efc:	b082      	sub	sp, #8
  uint16_t status_info = 0U;
90012efe:	f8ad 3006 	strh.w	r3, [sp, #6]
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
90012f02:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
90012f06:	33b0      	adds	r3, #176	@ 0xb0
90012f08:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
  if (hhid == NULL)
90012f0c:	b13c      	cbz	r4, 90012f1e <USBD_HID_SetupMouse+0x26>
  switch (req->bmRequest & USB_REQ_TYPE_MASK)
90012f0e:	780b      	ldrb	r3, [r1, #0]
90012f10:	f013 0360 	ands.w	r3, r3, #96	@ 0x60
90012f14:	d022      	beq.n	90012f5c <USBD_HID_SetupMouse+0x64>
90012f16:	2b20      	cmp	r3, #32
90012f18:	d004      	beq.n	90012f24 <USBD_HID_SetupMouse+0x2c>
            USBD_CtlError(pdev, req);
90012f1a:	f7ff fecd 	bl	90012cb8 <USBD_CtlError>
    return (uint8_t)USBD_FAIL;
90012f1e:	2003      	movs	r0, #3
}
90012f20:	b002      	add	sp, #8
90012f22:	bd10      	pop	{r4, pc}
      switch (req->bRequest)
90012f24:	784b      	ldrb	r3, [r1, #1]
90012f26:	3b02      	subs	r3, #2
90012f28:	2b09      	cmp	r3, #9
90012f2a:	d8f6      	bhi.n	90012f1a <USBD_HID_SetupMouse+0x22>
90012f2c:	a201      	add	r2, pc, #4	@ (adr r2, 90012f34 <USBD_HID_SetupMouse+0x3c>)
90012f2e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012f32:	bf00      	nop
90012f34:	90012fb3 	.word	0x90012fb3
90012f38:	90012fa9 	.word	0x90012fa9
90012f3c:	90012f1b 	.word	0x90012f1b
90012f40:	90012f1b 	.word	0x90012f1b
90012f44:	90012f1b 	.word	0x90012f1b
90012f48:	90012f1b 	.word	0x90012f1b
90012f4c:	90012f1b 	.word	0x90012f1b
90012f50:	90012f1b 	.word	0x90012f1b
90012f54:	90012fa1 	.word	0x90012fa1
90012f58:	90012f99 	.word	0x90012f99
      switch (req->bRequest)
90012f5c:	784b      	ldrb	r3, [r1, #1]
90012f5e:	2b0b      	cmp	r3, #11
90012f60:	d8db      	bhi.n	90012f1a <USBD_HID_SetupMouse+0x22>
90012f62:	a201      	add	r2, pc, #4	@ (adr r2, 90012f68 <USBD_HID_SetupMouse+0x70>)
90012f64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012f68:	90012fe7 	.word	0x90012fe7
90012f6c:	90012f9d 	.word	0x90012f9d
90012f70:	90012f1b 	.word	0x90012f1b
90012f74:	90012f1b 	.word	0x90012f1b
90012f78:	90012f1b 	.word	0x90012f1b
90012f7c:	90012f1b 	.word	0x90012f1b
90012f80:	90012fcb 	.word	0x90012fcb
90012f84:	90012f1b 	.word	0x90012f1b
90012f88:	90012f1b 	.word	0x90012f1b
90012f8c:	90012f1b 	.word	0x90012f1b
90012f90:	90012ffb 	.word	0x90012ffb
90012f94:	90012fbd 	.word	0x90012fbd
          hhid->Protocol = (uint8_t)(req->wValue);
90012f98:	788b      	ldrb	r3, [r1, #2]
90012f9a:	6023      	str	r3, [r4, #0]
  USBD_StatusTypeDef ret = USBD_OK;
90012f9c:	2000      	movs	r0, #0
90012f9e:	e7bf      	b.n	90012f20 <USBD_HID_SetupMouse+0x28>
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
90012fa0:	884b      	ldrh	r3, [r1, #2]
90012fa2:	0a1b      	lsrs	r3, r3, #8
90012fa4:	6063      	str	r3, [r4, #4]
          break;
90012fa6:	e7f9      	b.n	90012f9c <USBD_HID_SetupMouse+0xa4>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->Protocol, 1U);
90012fa8:	2201      	movs	r2, #1
90012faa:	4621      	mov	r1, r4
90012fac:	f000 f8a6 	bl	900130fc <USBD_CtlSendData>
          break;
90012fb0:	e7f4      	b.n	90012f9c <USBD_HID_SetupMouse+0xa4>
          (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->IdleState, 1U);
90012fb2:	2201      	movs	r2, #1
90012fb4:	1d21      	adds	r1, r4, #4
90012fb6:	f000 f8a1 	bl	900130fc <USBD_CtlSendData>
          break;
90012fba:	e7ef      	b.n	90012f9c <USBD_HID_SetupMouse+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012fbc:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012fc0:	2b03      	cmp	r3, #3
90012fc2:	d1aa      	bne.n	90012f1a <USBD_HID_SetupMouse+0x22>
            hhid->AltSetting = (uint8_t)(req->wValue);
90012fc4:	788b      	ldrb	r3, [r1, #2]
90012fc6:	60a3      	str	r3, [r4, #8]
90012fc8:	e7e8      	b.n	90012f9c <USBD_HID_SetupMouse+0xa4>
          if ((req->wValue >> 8) == HID_REPORT_DESC)
90012fca:	884b      	ldrh	r3, [r1, #2]
90012fcc:	0a1b      	lsrs	r3, r3, #8
90012fce:	2b22      	cmp	r3, #34	@ 0x22
90012fd0:	d01d      	beq.n	9001300e <USBD_HID_SetupMouse+0x116>
          else if ((req->wValue >> 8) == HID_DESCRIPTOR_TYPE)
90012fd2:	2b21      	cmp	r3, #33	@ 0x21
90012fd4:	d1a1      	bne.n	90012f1a <USBD_HID_SetupMouse+0x22>
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
90012fd6:	88ca      	ldrh	r2, [r1, #6]
            pbuf = USBD_HID_DescMouse;
90012fd8:	4910      	ldr	r1, [pc, #64]	@ (9001301c <USBD_HID_SetupMouse+0x124>)
            len = MIN(USB_HID_DESC_SIZ, req->wLength);
90012fda:	2a09      	cmp	r2, #9
90012fdc:	bf28      	it	cs
90012fde:	2209      	movcs	r2, #9
          (void)USBD_CtlSendData(pdev, pbuf, len);
90012fe0:	f000 f88c 	bl	900130fc <USBD_CtlSendData>
          break;
90012fe4:	e7da      	b.n	90012f9c <USBD_HID_SetupMouse+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012fe6:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012fea:	2b03      	cmp	r3, #3
90012fec:	d195      	bne.n	90012f1a <USBD_HID_SetupMouse+0x22>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&status_info, 2U);
90012fee:	2202      	movs	r2, #2
90012ff0:	f10d 0106 	add.w	r1, sp, #6
90012ff4:	f000 f882 	bl	900130fc <USBD_CtlSendData>
90012ff8:	e7d0      	b.n	90012f9c <USBD_HID_SetupMouse+0xa4>
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
90012ffa:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
90012ffe:	2b03      	cmp	r3, #3
90013000:	d18b      	bne.n	90012f1a <USBD_HID_SetupMouse+0x22>
            (void)USBD_CtlSendData(pdev, (uint8_t *)&hhid->AltSetting, 1U);
90013002:	2201      	movs	r2, #1
90013004:	f104 0108 	add.w	r1, r4, #8
90013008:	f000 f878 	bl	900130fc <USBD_CtlSendData>
9001300c:	e7c6      	b.n	90012f9c <USBD_HID_SetupMouse+0xa4>
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
9001300e:	88ca      	ldrh	r2, [r1, #6]
            pbuf = HID_MOUSE_ReportDesc;
90013010:	4903      	ldr	r1, [pc, #12]	@ (90013020 <USBD_HID_SetupMouse+0x128>)
            len = MIN(HID_MOUSE_REPORT_DESC_SIZE, req->wLength);
90013012:	2a4a      	cmp	r2, #74	@ 0x4a
90013014:	bf28      	it	cs
90013016:	224a      	movcs	r2, #74	@ 0x4a
            pbuf = HID_MOUSE_ReportDesc;
90013018:	e7e2      	b.n	90012fe0 <USBD_HID_SetupMouse+0xe8>
9001301a:	bf00      	nop
9001301c:	240001e4 	.word	0x240001e4
90013020:	24000180 	.word	0x24000180

90013024 <USBD_HID_DeInit>:
{
90013024:	b538      	push	{r3, r4, r5, lr}
90013026:	4604      	mov	r4, r0
  (void)USBD_LL_CloseEP(pdev, HIDInEpAdd);
90013028:	2181      	movs	r1, #129	@ 0x81
9001302a:	f7f0 fe47 	bl	90003cbc <USBD_LL_CloseEP>
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
9001302e:	2500      	movs	r5, #0
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
90013030:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 0U;
90013034:	63a5      	str	r5, [r4, #56]	@ 0x38
  if (pdev->pClassDataCmsit[pdev->classId] != NULL)
90013036:	33b0      	adds	r3, #176	@ 0xb0
90013038:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
9001303c:	b130      	cbz	r0, 9001304c <USBD_HID_DeInit+0x28>
    (void)USBD_free(pdev->pClassDataCmsit[pdev->classId]);
9001303e:	f7f0 fe9d 	bl	90003d7c <USBD_static_free>
    pdev->pClassDataCmsit[pdev->classId] = NULL;
90013042:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
90013046:	33b0      	adds	r3, #176	@ 0xb0
90013048:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
9001304c:	2000      	movs	r0, #0
9001304e:	bd38      	pop	{r3, r4, r5, pc}

90013050 <USBD_HID_Init>:
{
90013050:	b538      	push	{r3, r4, r5, lr}
90013052:	4604      	mov	r4, r0
  hhid = (USBD_HID_HandleTypeDef *)USBD_malloc(sizeof(USBD_HID_HandleTypeDef));
90013054:	2010      	movs	r0, #16
90013056:	f7f0 fe8d 	bl	90003d74 <USBD_static_malloc>
  if (hhid == NULL)
9001305a:	4605      	mov	r5, r0
9001305c:	b1c0      	cbz	r0, 90013090 <USBD_HID_Init+0x40>
  pdev->pClassDataCmsit[pdev->classId] = (void *)hhid;
9001305e:	f8d4 12d4 	ldr.w	r1, [r4, #724]	@ 0x2d4
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
90013062:	2304      	movs	r3, #4
90013064:	2203      	movs	r2, #3
  pdev->pClassDataCmsit[pdev->classId] = (void *)hhid;
90013066:	31b0      	adds	r1, #176	@ 0xb0
90013068:	f844 0021 	str.w	r0, [r4, r1, lsl #2]
  if (pdev->dev_speed == USBD_SPEED_HIGH)
9001306c:	7c21      	ldrb	r1, [r4, #16]
  pdev->pClassData = pdev->pClassDataCmsit[pdev->classId];
9001306e:	f8c4 02bc 	str.w	r0, [r4, #700]	@ 0x2bc
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
90013072:	4620      	mov	r0, r4
    pdev->ep_in[HIDInEpAdd & 0xFU].bInterval = HID_HS_BINTERVAL;
90013074:	2900      	cmp	r1, #0
90013076:	bf14      	ite	ne
90013078:	210a      	movne	r1, #10
9001307a:	2107      	moveq	r1, #7
9001307c:	8761      	strh	r1, [r4, #58]	@ 0x3a
  (void)USBD_LL_OpenEP(pdev, HIDInEpAdd, USBD_EP_TYPE_INTR, HID_EPIN_SIZE);
9001307e:	2181      	movs	r1, #129	@ 0x81
90013080:	f7f0 fe0e 	bl	90003ca0 <USBD_LL_OpenEP>
  hhid->state = USBD_HID_IDLE;
90013084:	2300      	movs	r3, #0
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
90013086:	2201      	movs	r2, #1
  return (uint8_t)USBD_OK;
90013088:	4618      	mov	r0, r3
  pdev->ep_in[HIDInEpAdd & 0xFU].is_used = 1U;
9001308a:	8722      	strh	r2, [r4, #56]	@ 0x38
  hhid->state = USBD_HID_IDLE;
9001308c:	732b      	strb	r3, [r5, #12]
}
9001308e:	bd38      	pop	{r3, r4, r5, pc}
    pdev->pClassDataCmsit[pdev->classId] = NULL;
90013090:	f8d4 32d4 	ldr.w	r3, [r4, #724]	@ 0x2d4
    return (uint8_t)USBD_EMEM;
90013094:	2002      	movs	r0, #2
    pdev->pClassDataCmsit[pdev->classId] = NULL;
90013096:	33b0      	adds	r3, #176	@ 0xb0
90013098:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
}
9001309c:	bd38      	pop	{r3, r4, r5, pc}
9001309e:	bf00      	nop

900130a0 <USBD_HID_GetOtherSpeedCfgDesc>:
static uint8_t *USBD_HID_GetOtherSpeedCfgDesc(uint16_t *length)
900130a0:	b510      	push	{r4, lr}
900130a2:	2181      	movs	r1, #129	@ 0x81
900130a4:	4604      	mov	r4, r0
900130a6:	4805      	ldr	r0, [pc, #20]	@ (900130bc <USBD_HID_GetOtherSpeedCfgDesc+0x1c>)
900130a8:	f7ff fb3a 	bl	90012720 <USBD_GetEpDesc>
900130ac:	b108      	cbz	r0, 900130b2 <USBD_HID_GetOtherSpeedCfgDesc+0x12>
900130ae:	230a      	movs	r3, #10
900130b0:	7183      	strb	r3, [r0, #6]
900130b2:	2322      	movs	r3, #34	@ 0x22
900130b4:	4801      	ldr	r0, [pc, #4]	@ (900130bc <USBD_HID_GetOtherSpeedCfgDesc+0x1c>)
900130b6:	8023      	strh	r3, [r4, #0]
900130b8:	bd10      	pop	{r4, pc}
900130ba:	bf00      	nop
900130bc:	240001f0 	.word	0x240001f0

900130c0 <USBD_HID_SendReport>:
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
900130c0:	f8d0 32d4 	ldr.w	r3, [r0, #724]	@ 0x2d4
{
900130c4:	b510      	push	{r4, lr}
  USBD_HID_HandleTypeDef *hhid = (USBD_HID_HandleTypeDef *)pdev->pClassDataCmsit[pdev->classId];
900130c6:	f103 0eb0 	add.w	lr, r3, #176	@ 0xb0
900130ca:	f850 402e 	ldr.w	r4, [r0, lr, lsl #2]
  if (hhid == NULL)
900130ce:	b194      	cbz	r4, 900130f6 <USBD_HID_SendReport+0x36>
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
900130d0:	f890 329c 	ldrb.w	r3, [r0, #668]	@ 0x29c
900130d4:	2b03      	cmp	r3, #3
900130d6:	d001      	beq.n	900130dc <USBD_HID_SendReport+0x1c>
  return (uint8_t)USBD_OK;
900130d8:	2000      	movs	r0, #0
}
900130da:	bd10      	pop	{r4, pc}
    if (hhid->state == USBD_HID_IDLE)
900130dc:	7b23      	ldrb	r3, [r4, #12]
900130de:	2b00      	cmp	r3, #0
900130e0:	d1fa      	bne.n	900130d8 <USBD_HID_SendReport+0x18>
      hhid->state = USBD_HID_BUSY;
900130e2:	f04f 0c01 	mov.w	ip, #1
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
900130e6:	4613      	mov	r3, r2
900130e8:	460a      	mov	r2, r1
900130ea:	2181      	movs	r1, #129	@ 0x81
      hhid->state = USBD_HID_BUSY;
900130ec:	f884 c00c 	strb.w	ip, [r4, #12]
      (void)USBD_LL_Transmit(pdev, HIDInEpAdd, report, len);
900130f0:	f7f0 fe28 	bl	90003d44 <USBD_LL_Transmit>
900130f4:	e7f0      	b.n	900130d8 <USBD_HID_SendReport+0x18>
    return (uint8_t)USBD_FAIL;
900130f6:	2003      	movs	r0, #3
}
900130f8:	bd10      	pop	{r4, pc}
900130fa:	bf00      	nop

900130fc <USBD_CtlSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint32_t len)
{
900130fc:	b510      	push	{r4, lr}
900130fe:	4613      	mov	r3, r2
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
90013100:	2402      	movs	r4, #2
{
90013102:	460a      	mov	r2, r1
#else
  pdev->ep_in[0].rem_length = len;
#endif /* USBD_AVOID_PACKET_SPLIT_MPS */

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
90013104:	2100      	movs	r1, #0
  pdev->ep0_state = USBD_EP0_DATA_IN;
90013106:	f8c0 4294 	str.w	r4, [r0, #660]	@ 0x294
  pdev->ep_in[0].total_length = len;
9001310a:	e9c0 3306 	strd	r3, r3, [r0, #24]
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
9001310e:	f7f0 fe19 	bl	90003d44 <USBD_LL_Transmit>

  return USBD_OK;
}
90013112:	2000      	movs	r0, #0
90013114:	bd10      	pop	{r4, pc}
90013116:	bf00      	nop

90013118 <USBD_CtlContinueSendData>:
  * @param  len: length of data to be sent
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint32_t len)
{
90013118:	468c      	mov	ip, r1
  /* Start the next transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
9001311a:	2100      	movs	r1, #0
{
9001311c:	b508      	push	{r3, lr}
9001311e:	4613      	mov	r3, r2
  (void)USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
90013120:	4662      	mov	r2, ip
90013122:	f7f0 fe0f 	bl	90003d44 <USBD_LL_Transmit>

  return USBD_OK;
}
90013126:	2000      	movs	r0, #0
90013128:	bd08      	pop	{r3, pc}
9001312a:	bf00      	nop

9001312c <USBD_CtlContinueRx>:
  * @param  len: length of data to be received
  * @retval status
  */
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint32_t len)
{
9001312c:	468c      	mov	ip, r1
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
9001312e:	2100      	movs	r1, #0
{
90013130:	b508      	push	{r3, lr}
90013132:	4613      	mov	r3, r2
  (void)USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
90013134:	4662      	mov	r2, ip
90013136:	f7f0 fe11 	bl	90003d5c <USBD_LL_PrepareReceive>

  return USBD_OK;
}
9001313a:	2000      	movs	r0, #0
9001313c:	bd08      	pop	{r3, pc}
9001313e:	bf00      	nop

90013140 <USBD_CtlSendStatus>:
{
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;

  /* Start the transfer */
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
90013140:	2300      	movs	r3, #0
{
90013142:	b510      	push	{r4, lr}
  pdev->ep0_state = USBD_EP0_STATUS_IN;
90013144:	2404      	movs	r4, #4
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
90013146:	461a      	mov	r2, r3
90013148:	4619      	mov	r1, r3
  pdev->ep0_state = USBD_EP0_STATUS_IN;
9001314a:	f8c0 4294 	str.w	r4, [r0, #660]	@ 0x294
  (void)USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
9001314e:	f7f0 fdf9 	bl	90003d44 <USBD_LL_Transmit>

  return USBD_OK;
}
90013152:	2000      	movs	r0, #0
90013154:	bd10      	pop	{r4, pc}
90013156:	bf00      	nop

90013158 <USBD_CtlReceiveStatus>:
{
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;

  /* Start the transfer */
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
90013158:	2300      	movs	r3, #0
{
9001315a:	b510      	push	{r4, lr}
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
9001315c:	2405      	movs	r4, #5
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
9001315e:	461a      	mov	r2, r3
90013160:	4619      	mov	r1, r3
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
90013162:	f8c0 4294 	str.w	r4, [r0, #660]	@ 0x294
  (void)USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
90013166:	f7f0 fdf9 	bl	90003d5c <USBD_LL_PrepareReceive>

  return USBD_OK;
}
9001316a:	2000      	movs	r0, #0
9001316c:	bd10      	pop	{r4, pc}
9001316e:	bf00      	nop

90013170 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
90013170:	8880      	ldrh	r0, [r0, #4]
90013172:	4770      	bx	lr

90013174 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
90013174:	b570      	push	{r4, r5, r6, lr}
90013176:	6803      	ldr	r3, [r0, #0]
90013178:	460c      	mov	r4, r1
9001317a:	2100      	movs	r1, #0
9001317c:	4605      	mov	r5, r0
9001317e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90013180:	4798      	blx	r3
90013182:	4606      	mov	r6, r0
90013184:	682b      	ldr	r3, [r5, #0]
90013186:	4628      	mov	r0, r5
90013188:	1ba4      	subs	r4, r4, r6
9001318a:	6a1b      	ldr	r3, [r3, #32]
9001318c:	b2a4      	uxth	r4, r4
9001318e:	4798      	blx	r3
90013190:	fbb4 f0f0 	udiv	r0, r4, r0
90013194:	bd70      	pop	{r4, r5, r6, pc}

90013196 <_ZN8touchgfx17AbstractPartition5clearEv>:
90013196:	2300      	movs	r3, #0
90013198:	8083      	strh	r3, [r0, #4]
9001319a:	4770      	bx	lr

9001319c <_ZN8touchgfx17AbstractPartition8allocateEt>:
9001319c:	b510      	push	{r4, lr}
9001319e:	6803      	ldr	r3, [r0, #0]
900131a0:	4604      	mov	r4, r0
900131a2:	8881      	ldrh	r1, [r0, #4]
900131a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900131a6:	4798      	blx	r3
900131a8:	88a3      	ldrh	r3, [r4, #4]
900131aa:	3301      	adds	r3, #1
900131ac:	80a3      	strh	r3, [r4, #4]
900131ae:	bd10      	pop	{r4, pc}

900131b0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
900131b0:	6803      	ldr	r3, [r0, #0]
900131b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900131b4:	4718      	bx	r3

900131b6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
900131b6:	4770      	bx	lr

900131b8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
900131b8:	4a02      	ldr	r2, [pc, #8]	@ (900131c4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
900131ba:	6002      	str	r2, [r0, #0]
900131bc:	2200      	movs	r2, #0
900131be:	8082      	strh	r2, [r0, #4]
900131c0:	4770      	bx	lr
900131c2:	bf00      	nop
900131c4:	9002ff60 	.word	0x9002ff60

900131c8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
900131c8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900131ca:	2000      	movs	r0, #0
900131cc:	b12b      	cbz	r3, 900131da <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
900131ce:	b920      	cbnz	r0, 900131da <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
900131d0:	1a5a      	subs	r2, r3, r1
900131d2:	699b      	ldr	r3, [r3, #24]
900131d4:	4250      	negs	r0, r2
900131d6:	4150      	adcs	r0, r2
900131d8:	e7f8      	b.n	900131cc <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
900131da:	4770      	bx	lr

900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
900131dc:	2300      	movs	r3, #0
900131de:	6148      	str	r0, [r1, #20]
900131e0:	618b      	str	r3, [r1, #24]
900131e2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900131e4:	b913      	cbnz	r3, 900131ec <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
900131e6:	6281      	str	r1, [r0, #40]	@ 0x28
900131e8:	4770      	bx	lr
900131ea:	4613      	mov	r3, r2
900131ec:	699a      	ldr	r2, [r3, #24]
900131ee:	2a00      	cmp	r2, #0
900131f0:	d1fb      	bne.n	900131ea <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
900131f2:	6199      	str	r1, [r3, #24]
900131f4:	4770      	bx	lr

900131f6 <_ZN8touchgfx9Container9removeAllEv>:
900131f6:	2200      	movs	r2, #0
900131f8:	6a83      	ldr	r3, [r0, #40]	@ 0x28
900131fa:	b123      	cbz	r3, 90013206 <_ZN8touchgfx9Container9removeAllEv+0x10>
900131fc:	6999      	ldr	r1, [r3, #24]
900131fe:	6281      	str	r1, [r0, #40]	@ 0x28
90013200:	e9c3 2205 	strd	r2, r2, [r3, #20]
90013204:	e7f8      	b.n	900131f8 <_ZN8touchgfx9Container9removeAllEv+0x2>
90013206:	4770      	bx	lr

90013208 <_ZN8touchgfx9Container6unlinkEv>:
90013208:	2300      	movs	r3, #0
9001320a:	6283      	str	r3, [r0, #40]	@ 0x28
9001320c:	4770      	bx	lr

9001320e <_ZNK8touchgfx9Container12getSolidRectEv>:
9001320e:	2200      	movs	r2, #0
90013210:	8002      	strh	r2, [r0, #0]
90013212:	8042      	strh	r2, [r0, #2]
90013214:	8082      	strh	r2, [r0, #4]
90013216:	80c2      	strh	r2, [r0, #6]
90013218:	4770      	bx	lr

9001321a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9001321a:	b570      	push	{r4, r5, r6, lr}
9001321c:	460d      	mov	r5, r1
9001321e:	4616      	mov	r6, r2
90013220:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90013222:	b13c      	cbz	r4, 90013234 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
90013224:	6823      	ldr	r3, [r4, #0]
90013226:	4620      	mov	r0, r4
90013228:	4632      	mov	r2, r6
9001322a:	4629      	mov	r1, r5
9001322c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9001322e:	4798      	blx	r3
90013230:	69a4      	ldr	r4, [r4, #24]
90013232:	e7f6      	b.n	90013222 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
90013234:	bd70      	pop	{r4, r5, r6, pc}

90013236 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
90013236:	b538      	push	{r3, r4, r5, lr}
90013238:	460d      	mov	r5, r1
9001323a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001323c:	b134      	cbz	r4, 9001324c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9001323e:	682b      	ldr	r3, [r5, #0]
90013240:	4621      	mov	r1, r4
90013242:	4628      	mov	r0, r5
90013244:	689b      	ldr	r3, [r3, #8]
90013246:	4798      	blx	r3
90013248:	69a4      	ldr	r4, [r4, #24]
9001324a:	e7f7      	b.n	9001323c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9001324c:	bd38      	pop	{r3, r4, r5, pc}

9001324e <_ZN8touchgfx9ContainerD1Ev>:
9001324e:	4770      	bx	lr

90013250 <_ZN8touchgfx9ContainerD0Ev>:
90013250:	b510      	push	{r4, lr}
90013252:	4604      	mov	r4, r0
90013254:	212c      	movs	r1, #44	@ 0x2c
90013256:	f018 fc80 	bl	9002bb5a <_ZdlPvj>
9001325a:	4620      	mov	r0, r4
9001325c:	bd10      	pop	{r4, pc}

9001325e <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9001325e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90013260:	b19b      	cbz	r3, 9001328a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
90013262:	428b      	cmp	r3, r1
90013264:	d109      	bne.n	9001327a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
90013266:	699a      	ldr	r2, [r3, #24]
90013268:	2100      	movs	r1, #0
9001326a:	6159      	str	r1, [r3, #20]
9001326c:	6282      	str	r2, [r0, #40]	@ 0x28
9001326e:	b902      	cbnz	r2, 90013272 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
90013270:	4770      	bx	lr
90013272:	6199      	str	r1, [r3, #24]
90013274:	4770      	bx	lr
90013276:	4613      	mov	r3, r2
90013278:	b13a      	cbz	r2, 9001328a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9001327a:	699a      	ldr	r2, [r3, #24]
9001327c:	428a      	cmp	r2, r1
9001327e:	d1fa      	bne.n	90013276 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
90013280:	698a      	ldr	r2, [r1, #24]
90013282:	619a      	str	r2, [r3, #24]
90013284:	2300      	movs	r3, #0
90013286:	e9c1 3305 	strd	r3, r3, [r1, #20]
9001328a:	4770      	bx	lr

9001328c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9001328c:	b410      	push	{r4}
9001328e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
90013290:	4604      	mov	r4, r0
90013292:	b92b      	cbnz	r3, 900132a0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
90013294:	6803      	ldr	r3, [r0, #0]
90013296:	4611      	mov	r1, r2
90013298:	f85d 4b04 	ldr.w	r4, [sp], #4
9001329c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001329e:	4718      	bx	r3
900132a0:	b941      	cbnz	r1, 900132b4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
900132a2:	6193      	str	r3, [r2, #24]
900132a4:	6282      	str	r2, [r0, #40]	@ 0x28
900132a6:	6154      	str	r4, [r2, #20]
900132a8:	f85d 4b04 	ldr.w	r4, [sp], #4
900132ac:	4770      	bx	lr
900132ae:	4603      	mov	r3, r0
900132b0:	2800      	cmp	r0, #0
900132b2:	d0f9      	beq.n	900132a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
900132b4:	4299      	cmp	r1, r3
900132b6:	6998      	ldr	r0, [r3, #24]
900132b8:	d1f9      	bne.n	900132ae <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
900132ba:	6190      	str	r0, [r2, #24]
900132bc:	618a      	str	r2, [r1, #24]
900132be:	e7f2      	b.n	900132a6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

900132c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
900132c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900132c4:	461f      	mov	r7, r3
900132c6:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
900132ca:	460d      	mov	r5, r1
900132cc:	4616      	mov	r6, r2
900132ce:	b103      	cbz	r3, 900132d2 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
900132d0:	6038      	str	r0, [r7, #0]
900132d2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900132d4:	b314      	cbz	r4, 9001331c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
900132d6:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900132da:	b1eb      	cbz	r3, 90013318 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
900132dc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900132e0:	428d      	cmp	r5, r1
900132e2:	db19      	blt.n	90013318 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
900132e4:	b289      	uxth	r1, r1
900132e6:	8923      	ldrh	r3, [r4, #8]
900132e8:	440b      	add	r3, r1
900132ea:	b21b      	sxth	r3, r3
900132ec:	429d      	cmp	r5, r3
900132ee:	da13      	bge.n	90013318 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
900132f0:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900132f4:	4296      	cmp	r6, r2
900132f6:	db0f      	blt.n	90013318 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
900132f8:	b292      	uxth	r2, r2
900132fa:	8963      	ldrh	r3, [r4, #10]
900132fc:	4413      	add	r3, r2
900132fe:	b21b      	sxth	r3, r3
90013300:	429e      	cmp	r6, r3
90013302:	da09      	bge.n	90013318 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
90013304:	6823      	ldr	r3, [r4, #0]
90013306:	1ab2      	subs	r2, r6, r2
90013308:	1a69      	subs	r1, r5, r1
9001330a:	4620      	mov	r0, r4
9001330c:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
90013310:	b212      	sxth	r2, r2
90013312:	463b      	mov	r3, r7
90013314:	b209      	sxth	r1, r1
90013316:	47c0      	blx	r8
90013318:	69a4      	ldr	r4, [r4, #24]
9001331a:	e7db      	b.n	900132d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9001331c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013320 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
90013320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013324:	4c6d      	ldr	r4, [pc, #436]	@ (900134dc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
90013326:	b0a1      	sub	sp, #132	@ 0x84
90013328:	4606      	mov	r6, r0
9001332a:	6824      	ldr	r4, [r4, #0]
9001332c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
9001332e:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
90013332:	2400      	movs	r4, #0
90013334:	9303      	str	r3, [sp, #12]
90013336:	802c      	strh	r4, [r5, #0]
90013338:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
9001333a:	802c      	strh	r4, [r5, #0]
9001333c:	601c      	str	r4, [r3, #0]
9001333e:	e9cd 1201 	strd	r1, r2, [sp, #4]
90013342:	f7ff ffbd 	bl	900132c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90013346:	f1b9 0f03 	cmp.w	r9, #3
9001334a:	f340 80c1 	ble.w	900134d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9001334e:	4631      	mov	r1, r6
90013350:	a80c      	add	r0, sp, #48	@ 0x30
90013352:	f007 facf 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013356:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001335a:	9306      	str	r3, [sp, #24]
9001335c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90013360:	9307      	str	r3, [sp, #28]
90013362:	9b03      	ldr	r3, [sp, #12]
90013364:	f8d3 a000 	ldr.w	sl, [r3]
90013368:	f1ba 0f00 	cmp.w	sl, #0
9001336c:	f000 80b3 	beq.w	900134d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90013370:	4651      	mov	r1, sl
90013372:	a810      	add	r0, sp, #64	@ 0x40
90013374:	f007 fabe 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013378:	2002      	movs	r0, #2
9001337a:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
9001337e:	9b01      	ldr	r3, [sp, #4]
90013380:	9a06      	ldr	r2, [sp, #24]
90013382:	fb91 f1f0 	sdiv	r1, r1, r0
90013386:	189d      	adds	r5, r3, r2
90013388:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
9001338c:	9a07      	ldr	r2, [sp, #28]
9001338e:	4419      	add	r1, r3
90013390:	9b02      	ldr	r3, [sp, #8]
90013392:	4413      	add	r3, r2
90013394:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
90013398:	1a6d      	subs	r5, r5, r1
9001339a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
9001339e:	fb92 f2f0 	sdiv	r2, r2, r0
900133a2:	440a      	add	r2, r1
900133a4:	1a9b      	subs	r3, r3, r2
900133a6:	435b      	muls	r3, r3
900133a8:	fb05 3505 	mla	r5, r5, r5, r3
900133ac:	4f4c      	ldr	r7, [pc, #304]	@ (900134e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
900133ae:	ac10      	add	r4, sp, #64	@ 0x40
900133b0:	f1b9 0f0c 	cmp.w	r9, #12
900133b4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900133b6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900133b8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900133ba:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900133bc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
900133be:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900133c0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
900133c4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
900133c8:	f04f 0303 	mov.w	r3, #3
900133cc:	bfd8      	it	le
900133ce:	f109 32ff 	addle.w	r2, r9, #4294967295
900133d2:	f04f 0400 	mov.w	r4, #0
900133d6:	f8cd 9000 	str.w	r9, [sp]
900133da:	bfcc      	ite	gt
900133dc:	4698      	movgt	r8, r3
900133de:	fb92 f8f3 	sdivle	r8, r2, r3
900133e2:	1c63      	adds	r3, r4, #1
900133e4:	aa10      	add	r2, sp, #64	@ 0x40
900133e6:	f004 0401 	and.w	r4, r4, #1
900133ea:	f04f 0b00 	mov.w	fp, #0
900133ee:	9308      	str	r3, [sp, #32]
900133f0:	9b00      	ldr	r3, [sp, #0]
900133f2:	eb02 1444 	add.w	r4, r2, r4, lsl #5
900133f6:	fb93 f3f8 	sdiv	r3, r3, r8
900133fa:	3404      	adds	r4, #4
900133fc:	b29b      	uxth	r3, r3
900133fe:	9304      	str	r3, [sp, #16]
90013400:	9a04      	ldr	r2, [sp, #16]
90013402:	f854 3c04 	ldr.w	r3, [r4, #-4]
90013406:	fb13 f302 	smulbb	r3, r3, r2
9001340a:	9a01      	ldr	r2, [sp, #4]
9001340c:	b29b      	uxth	r3, r3
9001340e:	1899      	adds	r1, r3, r2
90013410:	9305      	str	r3, [sp, #20]
90013412:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90013416:	b209      	sxth	r1, r1
90013418:	4299      	cmp	r1, r3
9001341a:	db4d      	blt.n	900134b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001341c:	8932      	ldrh	r2, [r6, #8]
9001341e:	4413      	add	r3, r2
90013420:	b21b      	sxth	r3, r3
90013422:	4299      	cmp	r1, r3
90013424:	da48      	bge.n	900134b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013426:	9b04      	ldr	r3, [sp, #16]
90013428:	6827      	ldr	r7, [r4, #0]
9001342a:	fb17 f703 	smulbb	r7, r7, r3
9001342e:	9b02      	ldr	r3, [sp, #8]
90013430:	b2bf      	uxth	r7, r7
90013432:	18fa      	adds	r2, r7, r3
90013434:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90013438:	b212      	sxth	r2, r2
9001343a:	429a      	cmp	r2, r3
9001343c:	db3c      	blt.n	900134b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001343e:	8970      	ldrh	r0, [r6, #10]
90013440:	4403      	add	r3, r0
90013442:	b21b      	sxth	r3, r3
90013444:	429a      	cmp	r2, r3
90013446:	da37      	bge.n	900134b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013448:	2300      	movs	r3, #0
9001344a:	4630      	mov	r0, r6
9001344c:	930b      	str	r3, [sp, #44]	@ 0x2c
9001344e:	ab0b      	add	r3, sp, #44	@ 0x2c
90013450:	f7ff ff36 	bl	900132c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90013454:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90013456:	b37a      	cbz	r2, 900134b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90013458:	4552      	cmp	r2, sl
9001345a:	d02d      	beq.n	900134b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001345c:	4611      	mov	r1, r2
9001345e:	a80e      	add	r0, sp, #56	@ 0x38
90013460:	9209      	str	r2, [sp, #36]	@ 0x24
90013462:	f007 fa47 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90013466:	f04f 0e02 	mov.w	lr, #2
9001346a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
9001346e:	9a06      	ldr	r2, [sp, #24]
90013470:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90013474:	9b01      	ldr	r3, [sp, #4]
90013476:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
9001347a:	4413      	add	r3, r2
9001347c:	9a07      	ldr	r2, [sp, #28]
9001347e:	fb91 f1fe 	sdiv	r1, r1, lr
90013482:	fb9c fcfe 	sdiv	ip, ip, lr
90013486:	4401      	add	r1, r0
90013488:	1a58      	subs	r0, r3, r1
9001348a:	9b02      	ldr	r3, [sp, #8]
9001348c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90013490:	4413      	add	r3, r2
90013492:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90013494:	448c      	add	ip, r1
90013496:	eba3 030c 	sub.w	r3, r3, ip
9001349a:	435b      	muls	r3, r3
9001349c:	fb00 3300 	mla	r3, r0, r0, r3
900134a0:	42ab      	cmp	r3, r5
900134a2:	d208      	bcs.n	900134b6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
900134a4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
900134a6:	461d      	mov	r5, r3
900134a8:	9803      	ldr	r0, [sp, #12]
900134aa:	6001      	str	r1, [r0, #0]
900134ac:	992a      	ldr	r1, [sp, #168]	@ 0xa8
900134ae:	9805      	ldr	r0, [sp, #20]
900134b0:	8008      	strh	r0, [r1, #0]
900134b2:	992b      	ldr	r1, [sp, #172]	@ 0xac
900134b4:	800f      	strh	r7, [r1, #0]
900134b6:	4692      	mov	sl, r2
900134b8:	f10b 0b01 	add.w	fp, fp, #1
900134bc:	3408      	adds	r4, #8
900134be:	f1bb 0f04 	cmp.w	fp, #4
900134c2:	d19d      	bne.n	90013400 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
900134c4:	9b00      	ldr	r3, [sp, #0]
900134c6:	9c08      	ldr	r4, [sp, #32]
900134c8:	444b      	add	r3, r9
900134ca:	4544      	cmp	r4, r8
900134cc:	9300      	str	r3, [sp, #0]
900134ce:	d188      	bne.n	900133e2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
900134d0:	b021      	add	sp, #132	@ 0x84
900134d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900134d6:	f04f 35ff 	mov.w	r5, #4294967295
900134da:	e767      	b.n	900133ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
900134dc:	24024598 	.word	0x24024598
900134e0:	9002d2c8 	.word	0x9002d2c8

900134e4 <_ZN8touchgfx4RectaNERKS0_>:
900134e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900134e8:	f9b1 7000 	ldrsh.w	r7, [r1]
900134ec:	888c      	ldrh	r4, [r1, #4]
900134ee:	f9b0 9000 	ldrsh.w	r9, [r0]
900134f2:	443c      	add	r4, r7
900134f4:	b2a4      	uxth	r4, r4
900134f6:	fa0f f884 	sxth.w	r8, r4
900134fa:	45c1      	cmp	r9, r8
900134fc:	da2f      	bge.n	9001355e <_ZN8touchgfx4RectaNERKS0_+0x7a>
900134fe:	8882      	ldrh	r2, [r0, #4]
90013500:	444a      	add	r2, r9
90013502:	b292      	uxth	r2, r2
90013504:	fa0f fe82 	sxth.w	lr, r2
90013508:	4577      	cmp	r7, lr
9001350a:	da28      	bge.n	9001355e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001350c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90013510:	88cb      	ldrh	r3, [r1, #6]
90013512:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013516:	442b      	add	r3, r5
90013518:	b21b      	sxth	r3, r3
9001351a:	429e      	cmp	r6, r3
9001351c:	da1f      	bge.n	9001355e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001351e:	88c3      	ldrh	r3, [r0, #6]
90013520:	4433      	add	r3, r6
90013522:	b29b      	uxth	r3, r3
90013524:	fa0f fc83 	sxth.w	ip, r3
90013528:	4565      	cmp	r5, ip
9001352a:	da18      	bge.n	9001355e <_ZN8touchgfx4RectaNERKS0_+0x7a>
9001352c:	454f      	cmp	r7, r9
9001352e:	bfb8      	it	lt
90013530:	464f      	movlt	r7, r9
90013532:	42b5      	cmp	r5, r6
90013534:	bfb8      	it	lt
90013536:	4635      	movlt	r5, r6
90013538:	45f0      	cmp	r8, lr
9001353a:	bfd8      	it	le
9001353c:	4622      	movle	r2, r4
9001353e:	1bd2      	subs	r2, r2, r7
90013540:	8082      	strh	r2, [r0, #4]
90013542:	884a      	ldrh	r2, [r1, #2]
90013544:	88c9      	ldrh	r1, [r1, #6]
90013546:	8007      	strh	r7, [r0, #0]
90013548:	440a      	add	r2, r1
9001354a:	8045      	strh	r5, [r0, #2]
9001354c:	b292      	uxth	r2, r2
9001354e:	b211      	sxth	r1, r2
90013550:	458c      	cmp	ip, r1
90013552:	bfa8      	it	ge
90013554:	4613      	movge	r3, r2
90013556:	1b5b      	subs	r3, r3, r5
90013558:	80c3      	strh	r3, [r0, #6]
9001355a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001355e:	2300      	movs	r3, #0
90013560:	8003      	strh	r3, [r0, #0]
90013562:	8043      	strh	r3, [r0, #2]
90013564:	8083      	strh	r3, [r0, #4]
90013566:	80c3      	strh	r3, [r0, #6]
90013568:	e7f7      	b.n	9001355a <_ZN8touchgfx4RectaNERKS0_+0x76>

9001356a <_ZNK8touchgfx4Rect7isEmptyEv>:
9001356a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001356e:	2b00      	cmp	r3, #0
90013570:	dd06      	ble.n	90013580 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90013572:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
90013576:	2800      	cmp	r0, #0
90013578:	bfcc      	ite	gt
9001357a:	2000      	movgt	r0, #0
9001357c:	2001      	movle	r0, #1
9001357e:	4770      	bx	lr
90013580:	2001      	movs	r0, #1
90013582:	4770      	bx	lr

90013584 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90013584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013588:	2300      	movs	r3, #0
9001358a:	4604      	mov	r4, r0
9001358c:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001358e:	8003      	strh	r3, [r0, #0]
90013590:	8043      	strh	r3, [r0, #2]
90013592:	8083      	strh	r3, [r0, #4]
90013594:	80c3      	strh	r3, [r0, #6]
90013596:	2d00      	cmp	r5, #0
90013598:	d040      	beq.n	9001361c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001359a:	1d28      	adds	r0, r5, #4
9001359c:	f7ff ffe5 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
900135a0:	b988      	cbnz	r0, 900135c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900135a2:	4620      	mov	r0, r4
900135a4:	f7ff ffe1 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
900135a8:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900135ac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900135b0:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
900135b4:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
900135b8:	b138      	cbz	r0, 900135ca <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
900135ba:	8022      	strh	r2, [r4, #0]
900135bc:	8063      	strh	r3, [r4, #2]
900135be:	f8a4 e004 	strh.w	lr, [r4, #4]
900135c2:	f8a4 c006 	strh.w	ip, [r4, #6]
900135c6:	69ad      	ldr	r5, [r5, #24]
900135c8:	e7e5      	b.n	90013596 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
900135ca:	f9b4 0000 	ldrsh.w	r0, [r4]
900135ce:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900135d2:	4290      	cmp	r0, r2
900135d4:	4607      	mov	r7, r0
900135d6:	f8b4 8004 	ldrh.w	r8, [r4, #4]
900135da:	460e      	mov	r6, r1
900135dc:	bfa8      	it	ge
900135de:	4617      	movge	r7, r2
900135e0:	4299      	cmp	r1, r3
900135e2:	4472      	add	r2, lr
900135e4:	f8b4 e006 	ldrh.w	lr, [r4, #6]
900135e8:	bfa8      	it	ge
900135ea:	461e      	movge	r6, r3
900135ec:	4440      	add	r0, r8
900135ee:	4471      	add	r1, lr
900135f0:	4463      	add	r3, ip
900135f2:	b200      	sxth	r0, r0
900135f4:	8027      	strh	r7, [r4, #0]
900135f6:	b212      	sxth	r2, r2
900135f8:	8066      	strh	r6, [r4, #2]
900135fa:	b209      	sxth	r1, r1
900135fc:	b21b      	sxth	r3, r3
900135fe:	4290      	cmp	r0, r2
90013600:	bfac      	ite	ge
90013602:	ebc7 0200 	rsbge	r2, r7, r0
90013606:	ebc7 0202 	rsblt	r2, r7, r2
9001360a:	4299      	cmp	r1, r3
9001360c:	bfac      	ite	ge
9001360e:	ebc6 0301 	rsbge	r3, r6, r1
90013612:	ebc6 0303 	rsblt	r3, r6, r3
90013616:	80a2      	strh	r2, [r4, #4]
90013618:	80e3      	strh	r3, [r4, #6]
9001361a:	e7d4      	b.n	900135c6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
9001361c:	4620      	mov	r0, r4
9001361e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013622 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90013622:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90013626:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001362a:	b383      	cbz	r3, 9001368e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
9001362c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9001362e:	b374      	cbz	r4, 9001368e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90013630:	f9b1 5000 	ldrsh.w	r5, [r1]
90013634:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
90013638:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
9001363c:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90013640:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
90013644:	b303      	cbz	r3, 90013688 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90013646:	4668      	mov	r0, sp
90013648:	1d21      	adds	r1, r4, #4
9001364a:	f8ad 5000 	strh.w	r5, [sp]
9001364e:	f8ad 6002 	strh.w	r6, [sp, #2]
90013652:	f8ad 7004 	strh.w	r7, [sp, #4]
90013656:	f8ad 8006 	strh.w	r8, [sp, #6]
9001365a:	f7ff ff43 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
9001365e:	4668      	mov	r0, sp
90013660:	f7ff ff83 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
90013664:	b980      	cbnz	r0, 90013688 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
90013666:	f8bd 3000 	ldrh.w	r3, [sp]
9001366a:	4669      	mov	r1, sp
9001366c:	88a2      	ldrh	r2, [r4, #4]
9001366e:	4620      	mov	r0, r4
90013670:	1a9b      	subs	r3, r3, r2
90013672:	88e2      	ldrh	r2, [r4, #6]
90013674:	f8ad 3000 	strh.w	r3, [sp]
90013678:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001367c:	1a9b      	subs	r3, r3, r2
9001367e:	f8ad 3002 	strh.w	r3, [sp, #2]
90013682:	6823      	ldr	r3, [r4, #0]
90013684:	689b      	ldr	r3, [r3, #8]
90013686:	4798      	blx	r3
90013688:	69a4      	ldr	r4, [r4, #24]
9001368a:	2c00      	cmp	r4, #0
9001368c:	d1d8      	bne.n	90013640 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
9001368e:	b002      	add	sp, #8
90013690:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013694 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90013694:	b573      	push	{r0, r1, r4, r5, r6, lr}
90013696:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001369a:	460d      	mov	r5, r1
9001369c:	4616      	mov	r6, r2
9001369e:	b323      	cbz	r3, 900136ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
900136a0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900136a2:	b314      	cbz	r4, 900136ea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
900136a4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900136a8:	b1eb      	cbz	r3, 900136e6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900136aa:	6828      	ldr	r0, [r5, #0]
900136ac:	466b      	mov	r3, sp
900136ae:	6869      	ldr	r1, [r5, #4]
900136b0:	c303      	stmia	r3!, {r0, r1}
900136b2:	4668      	mov	r0, sp
900136b4:	1d21      	adds	r1, r4, #4
900136b6:	f7ff ff15 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
900136ba:	4668      	mov	r0, sp
900136bc:	f7ff ff55 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
900136c0:	b988      	cbnz	r0, 900136e6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900136c2:	f8bd 3000 	ldrh.w	r3, [sp]
900136c6:	4669      	mov	r1, sp
900136c8:	88a2      	ldrh	r2, [r4, #4]
900136ca:	4620      	mov	r0, r4
900136cc:	1a9b      	subs	r3, r3, r2
900136ce:	88e2      	ldrh	r2, [r4, #6]
900136d0:	f8ad 3000 	strh.w	r3, [sp]
900136d4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900136d8:	1a9b      	subs	r3, r3, r2
900136da:	4632      	mov	r2, r6
900136dc:	f8ad 3002 	strh.w	r3, [sp, #2]
900136e0:	6823      	ldr	r3, [r4, #0]
900136e2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
900136e4:	4798      	blx	r3
900136e6:	69a4      	ldr	r4, [r4, #24]
900136e8:	e7db      	b.n	900136a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
900136ea:	b002      	add	sp, #8
900136ec:	bd70      	pop	{r4, r5, r6, pc}

900136ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
900136ee:	6803      	ldr	r3, [r0, #0]
900136f0:	b513      	push	{r0, r1, r4, lr}
900136f2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
900136f6:	2300      	movs	r3, #0
900136f8:	e9cd 3300 	strd	r3, r3, [sp]
900136fc:	466b      	mov	r3, sp
900136fe:	47a0      	blx	r4
90013700:	b002      	add	sp, #8
90013702:	bd10      	pop	{r4, pc}

90013704 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90013704:	2301      	movs	r3, #1
90013706:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
9001370a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9001370e:	4770      	bx	lr

90013710 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90013710:	2301      	movs	r3, #1
90013712:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
90013716:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
9001371a:	4770      	bx	lr

9001371c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
9001371c:	6843      	ldr	r3, [r0, #4]
9001371e:	2201      	movs	r2, #1
90013720:	725a      	strb	r2, [r3, #9]
90013722:	6840      	ldr	r0, [r0, #4]
90013724:	6803      	ldr	r3, [r0, #0]
90013726:	691b      	ldr	r3, [r3, #16]
90013728:	4718      	bx	r3

9001372a <_ZN8touchgfx3HAL8flushDMAEv>:
9001372a:	6840      	ldr	r0, [r0, #4]
9001372c:	6803      	ldr	r3, [r0, #0]
9001372e:	689b      	ldr	r3, [r3, #8]
90013730:	4718      	bx	r3

90013732 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90013732:	b530      	push	{r4, r5, lr}
90013734:	b08b      	sub	sp, #44	@ 0x2c
90013736:	6804      	ldr	r4, [r0, #0]
90013738:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
9001373c:	9509      	str	r5, [sp, #36]	@ 0x24
9001373e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
90013742:	9508      	str	r5, [sp, #32]
90013744:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
90013748:	9507      	str	r5, [sp, #28]
9001374a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
9001374e:	9506      	str	r5, [sp, #24]
90013750:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90013754:	9505      	str	r5, [sp, #20]
90013756:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
9001375a:	9504      	str	r5, [sp, #16]
9001375c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90013760:	9503      	str	r5, [sp, #12]
90013762:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
90013766:	9502      	str	r5, [sp, #8]
90013768:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001376c:	e9cd 3500 	strd	r3, r5, [sp]
90013770:	4613      	mov	r3, r2
90013772:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
90013774:	2200      	movs	r2, #0
90013776:	47a0      	blx	r4
90013778:	b00b      	add	sp, #44	@ 0x2c
9001377a:	bd30      	pop	{r4, r5, pc}

9001377c <_ZN8touchgfx3HAL10beginFrameEv>:
9001377c:	4b04      	ldr	r3, [pc, #16]	@ (90013790 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
9001377e:	781b      	ldrb	r3, [r3, #0]
90013780:	b123      	cbz	r3, 9001378c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90013782:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
90013786:	f080 0001 	eor.w	r0, r0, #1
9001378a:	4770      	bx	lr
9001378c:	2001      	movs	r0, #1
9001378e:	4770      	bx	lr
90013790:	24024594 	.word	0x24024594

90013794 <_ZN8touchgfx3HAL8endFrameEv>:
90013794:	b510      	push	{r4, lr}
90013796:	4604      	mov	r4, r0
90013798:	6840      	ldr	r0, [r0, #4]
9001379a:	6803      	ldr	r3, [r0, #0]
9001379c:	689b      	ldr	r3, [r3, #8]
9001379e:	4798      	blx	r3
900137a0:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
900137a4:	b113      	cbz	r3, 900137ac <_ZN8touchgfx3HAL8endFrameEv+0x18>
900137a6:	2301      	movs	r3, #1
900137a8:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
900137ac:	bd10      	pop	{r4, pc}

900137ae <_ZN8touchgfx3HAL10initializeEv>:
900137ae:	b510      	push	{r4, lr}
900137b0:	4604      	mov	r4, r0
900137b2:	f7ee fd99 	bl	900022e8 <_ZN8touchgfx10OSWrappers10initializeEv>
900137b6:	f7ed fa17 	bl	90000be8 <_ZN8touchgfx4GPIO4initEv>
900137ba:	6860      	ldr	r0, [r4, #4]
900137bc:	6803      	ldr	r3, [r0, #0]
900137be:	68db      	ldr	r3, [r3, #12]
900137c0:	4798      	blx	r3
900137c2:	68e0      	ldr	r0, [r4, #12]
900137c4:	6803      	ldr	r3, [r0, #0]
900137c6:	689b      	ldr	r3, [r3, #8]
900137c8:	4798      	blx	r3
900137ca:	6823      	ldr	r3, [r4, #0]
900137cc:	4620      	mov	r0, r4
900137ce:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
900137d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900137d4:	4718      	bx	r3
	...

900137d8 <_ZN8touchgfx3HAL4tickEv>:
900137d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900137da:	6803      	ldr	r3, [r0, #0]
900137dc:	4604      	mov	r4, r0
900137de:	4d5b      	ldr	r5, [pc, #364]	@ (9001394c <_ZN8touchgfx3HAL4tickEv+0x174>)
900137e0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
900137e4:	4798      	blx	r3
900137e6:	2800      	cmp	r0, #0
900137e8:	f000 8095 	beq.w	90013916 <_ZN8touchgfx3HAL4tickEv+0x13e>
900137ec:	2001      	movs	r0, #1
900137ee:	2600      	movs	r6, #0
900137f0:	f7ed fa34 	bl	90000c5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900137f4:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
900137f8:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
900137fc:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
90013800:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
90013804:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
90013808:	b133      	cbz	r3, 90013818 <_ZN8touchgfx3HAL4tickEv+0x40>
9001380a:	6823      	ldr	r3, [r4, #0]
9001380c:	4620      	mov	r0, r4
9001380e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
90013812:	4798      	blx	r3
90013814:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90013818:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
9001381c:	2601      	movs	r6, #1
9001381e:	6862      	ldr	r2, [r4, #4]
90013820:	f083 0301 	eor.w	r3, r3, #1
90013824:	702e      	strb	r6, [r5, #0]
90013826:	7253      	strb	r3, [r2, #9]
90013828:	f005 ff50 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
9001382c:	6803      	ldr	r3, [r0, #0]
9001382e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90013830:	4798      	blx	r3
90013832:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90013836:	b90b      	cbnz	r3, 9001383c <_ZN8touchgfx3HAL4tickEv+0x64>
90013838:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
9001383c:	f005 ff46 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
90013840:	6803      	ldr	r3, [r0, #0]
90013842:	695b      	ldr	r3, [r3, #20]
90013844:	4798      	blx	r3
90013846:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90013848:	6803      	ldr	r3, [r0, #0]
9001384a:	691b      	ldr	r3, [r3, #16]
9001384c:	4798      	blx	r3
9001384e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
90013852:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
90013856:	3b01      	subs	r3, #1
90013858:	b2db      	uxtb	r3, r3
9001385a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
9001385e:	b10a      	cbz	r2, 90013864 <_ZN8touchgfx3HAL4tickEv+0x8c>
90013860:	2b00      	cmp	r3, #0
90013862:	d1eb      	bne.n	9001383c <_ZN8touchgfx3HAL4tickEv+0x64>
90013864:	4a3a      	ldr	r2, [pc, #232]	@ (90013950 <_ZN8touchgfx3HAL4tickEv+0x178>)
90013866:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
9001386a:	7813      	ldrb	r3, [r2, #0]
9001386c:	3301      	adds	r3, #1
9001386e:	b25b      	sxtb	r3, r3
90013870:	4299      	cmp	r1, r3
90013872:	7013      	strb	r3, [r2, #0]
90013874:	dc10      	bgt.n	90013898 <_ZN8touchgfx3HAL4tickEv+0xc0>
90013876:	2300      	movs	r3, #0
90013878:	68e0      	ldr	r0, [r4, #12]
9001387a:	a902      	add	r1, sp, #8
9001387c:	7013      	strb	r3, [r2, #0]
9001387e:	aa03      	add	r2, sp, #12
90013880:	6803      	ldr	r3, [r0, #0]
90013882:	68db      	ldr	r3, [r3, #12]
90013884:	4798      	blx	r3
90013886:	6823      	ldr	r3, [r4, #0]
90013888:	2800      	cmp	r0, #0
9001388a:	d050      	beq.n	9001392e <_ZN8touchgfx3HAL4tickEv+0x156>
9001388c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90013890:	4620      	mov	r0, r4
90013892:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90013896:	4798      	blx	r3
90013898:	2300      	movs	r3, #0
9001389a:	6960      	ldr	r0, [r4, #20]
9001389c:	f88d 3007 	strb.w	r3, [sp, #7]
900138a0:	b158      	cbz	r0, 900138ba <_ZN8touchgfx3HAL4tickEv+0xe2>
900138a2:	6803      	ldr	r3, [r0, #0]
900138a4:	f10d 0107 	add.w	r1, sp, #7
900138a8:	68db      	ldr	r3, [r3, #12]
900138aa:	4798      	blx	r3
900138ac:	b128      	cbz	r0, 900138ba <_ZN8touchgfx3HAL4tickEv+0xe2>
900138ae:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
900138b0:	f89d 1007 	ldrb.w	r1, [sp, #7]
900138b4:	6803      	ldr	r3, [r0, #0]
900138b6:	68db      	ldr	r3, [r3, #12]
900138b8:	4798      	blx	r3
900138ba:	f104 001c 	add.w	r0, r4, #28
900138be:	f017 f9c9 	bl	9002ac54 <_ZN8touchgfx8Gestures4tickEv>
900138c2:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
900138c6:	b30b      	cbz	r3, 9001390c <_ZN8touchgfx3HAL4tickEv+0x134>
900138c8:	6920      	ldr	r0, [r4, #16]
900138ca:	6803      	ldr	r3, [r0, #0]
900138cc:	691b      	ldr	r3, [r3, #16]
900138ce:	4798      	blx	r3
900138d0:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900138d2:	4606      	mov	r6, r0
900138d4:	b903      	cbnz	r3, 900138d8 <_ZN8touchgfx3HAL4tickEv+0x100>
900138d6:	6760      	str	r0, [r4, #116]	@ 0x74
900138d8:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900138da:	4a1e      	ldr	r2, [pc, #120]	@ (90013954 <_ZN8touchgfx3HAL4tickEv+0x17c>)
900138dc:	1af3      	subs	r3, r6, r3
900138de:	4293      	cmp	r3, r2
900138e0:	d914      	bls.n	9001390c <_ZN8touchgfx3HAL4tickEv+0x134>
900138e2:	6920      	ldr	r0, [r4, #16]
900138e4:	6803      	ldr	r3, [r0, #0]
900138e6:	699b      	ldr	r3, [r3, #24]
900138e8:	4798      	blx	r3
900138ea:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900138ec:	2264      	movs	r2, #100	@ 0x64
900138ee:	1af3      	subs	r3, r6, r3
900138f0:	fbb3 f3f2 	udiv	r3, r3, r2
900138f4:	fbb0 f0f3 	udiv	r0, r0, r3
900138f8:	2800      	cmp	r0, #0
900138fa:	dc1d      	bgt.n	90013938 <_ZN8touchgfx3HAL4tickEv+0x160>
900138fc:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
90013900:	6920      	ldr	r0, [r4, #16]
90013902:	2100      	movs	r1, #0
90013904:	6803      	ldr	r3, [r0, #0]
90013906:	69db      	ldr	r3, [r3, #28]
90013908:	4798      	blx	r3
9001390a:	6766      	str	r6, [r4, #116]	@ 0x74
9001390c:	f005 fede 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
90013910:	6803      	ldr	r3, [r0, #0]
90013912:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013914:	4798      	blx	r3
90013916:	6823      	ldr	r3, [r4, #0]
90013918:	4620      	mov	r0, r4
9001391a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
9001391e:	4798      	blx	r3
90013920:	2001      	movs	r0, #1
90013922:	f7ed f9cf 	bl	90000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90013926:	2300      	movs	r3, #0
90013928:	702b      	strb	r3, [r5, #0]
9001392a:	b004      	add	sp, #16
9001392c:	bd70      	pop	{r4, r5, r6, pc}
9001392e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90013932:	4620      	mov	r0, r4
90013934:	4798      	blx	r3
90013936:	e7af      	b.n	90013898 <_ZN8touchgfx3HAL4tickEv+0xc0>
90013938:	2863      	cmp	r0, #99	@ 0x63
9001393a:	bfcb      	itete	gt
9001393c:	2300      	movgt	r3, #0
9001393e:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90013942:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
90013946:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
9001394a:	e7d9      	b.n	90013900 <_ZN8touchgfx3HAL4tickEv+0x128>
9001394c:	2402459c 	.word	0x2402459c
90013950:	2402459d 	.word	0x2402459d
90013954:	05f5e100 	.word	0x05f5e100

90013958 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90013958:	b510      	push	{r4, lr}
9001395a:	4604      	mov	r4, r0
9001395c:	f7ee fcf6 	bl	9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90013960:	2200      	movs	r2, #0
90013962:	6863      	ldr	r3, [r4, #4]
90013964:	729a      	strb	r2, [r3, #10]
90013966:	bd10      	pop	{r4, pc}

90013968 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90013968:	65c1      	str	r1, [r0, #92]	@ 0x5c
9001396a:	301c      	adds	r0, #28
9001396c:	f017 b970 	b.w	9002ac50 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90013970 <_ZN8touchgfx3HAL5touchEll>:
90013970:	b530      	push	{r4, r5, lr}
90013972:	b087      	sub	sp, #28
90013974:	4604      	mov	r4, r0
90013976:	a804      	add	r0, sp, #16
90013978:	e9cd 1204 	strd	r1, r2, [sp, #16]
9001397c:	f005 fcae 	bl	900192dc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90013980:	9b04      	ldr	r3, [sp, #16]
90013982:	a906      	add	r1, sp, #24
90013984:	a803      	add	r0, sp, #12
90013986:	f8ad 300c 	strh.w	r3, [sp, #12]
9001398a:	9b05      	ldr	r3, [sp, #20]
9001398c:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90013990:	f005 fcf6 	bl	90019380 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90013994:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
90013998:	f104 001c 	add.w	r0, r4, #28
9001399c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
900139a0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
900139a4:	b189      	cbz	r1, 900139ca <_ZN8touchgfx3HAL5touchEll+0x5a>
900139a6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
900139aa:	9300      	str	r3, [sp, #0]
900139ac:	4613      	mov	r3, r2
900139ae:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
900139b2:	462a      	mov	r2, r5
900139b4:	f017 f95c 	bl	9002ac70 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900139b8:	b128      	cbz	r0, 900139c6 <_ZN8touchgfx3HAL5touchEll+0x56>
900139ba:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900139be:	6623      	str	r3, [r4, #96]	@ 0x60
900139c0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900139c4:	6663      	str	r3, [r4, #100]	@ 0x64
900139c6:	b007      	add	sp, #28
900139c8:	bd30      	pop	{r4, r5, pc}
900139ca:	f017 f991 	bl	9002acf0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900139ce:	2301      	movs	r3, #1
900139d0:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
900139d4:	e7f1      	b.n	900139ba <_ZN8touchgfx3HAL5touchEll+0x4a>

900139d6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900139d6:	b510      	push	{r4, lr}
900139d8:	2b00      	cmp	r3, #0
900139da:	d046      	beq.n	90013a6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900139dc:	ea81 0002 	eor.w	r0, r1, r2
900139e0:	07c4      	lsls	r4, r0, #31
900139e2:	d508      	bpl.n	900139f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900139e4:	440b      	add	r3, r1
900139e6:	3a01      	subs	r2, #1
900139e8:	428b      	cmp	r3, r1
900139ea:	d93e      	bls.n	90013a6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900139ec:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900139f0:	f801 0b01 	strb.w	r0, [r1], #1
900139f4:	e7f8      	b.n	900139e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900139f6:	07d0      	lsls	r0, r2, #31
900139f8:	bf42      	ittt	mi
900139fa:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900139fe:	f103 33ff 	addmi.w	r3, r3, #4294967295
90013a02:	f801 0b01 	strbmi.w	r0, [r1], #1
90013a06:	2b01      	cmp	r3, #1
90013a08:	d911      	bls.n	90013a2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90013a0a:	ea81 0402 	eor.w	r4, r1, r2
90013a0e:	4610      	mov	r0, r2
90013a10:	07a4      	lsls	r4, r4, #30
90013a12:	d022      	beq.n	90013a5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90013a14:	f023 0401 	bic.w	r4, r3, #1
90013a18:	440c      	add	r4, r1
90013a1a:	428c      	cmp	r4, r1
90013a1c:	4602      	mov	r2, r0
90013a1e:	d904      	bls.n	90013a2a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90013a20:	8812      	ldrh	r2, [r2, #0]
90013a22:	3002      	adds	r0, #2
90013a24:	f821 2b02 	strh.w	r2, [r1], #2
90013a28:	e7f7      	b.n	90013a1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
90013a2a:	f003 0301 	and.w	r3, r3, #1
90013a2e:	f023 0003 	bic.w	r0, r3, #3
90013a32:	4408      	add	r0, r1
90013a34:	4288      	cmp	r0, r1
90013a36:	4614      	mov	r4, r2
90013a38:	d904      	bls.n	90013a44 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
90013a3a:	6824      	ldr	r4, [r4, #0]
90013a3c:	3204      	adds	r2, #4
90013a3e:	f841 4b04 	str.w	r4, [r1], #4
90013a42:	e7f7      	b.n	90013a34 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90013a44:	f003 0303 	and.w	r3, r3, #3
90013a48:	3a01      	subs	r2, #1
90013a4a:	440b      	add	r3, r1
90013a4c:	428b      	cmp	r3, r1
90013a4e:	d90c      	bls.n	90013a6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90013a50:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90013a54:	f801 0b01 	strb.w	r0, [r1], #1
90013a58:	e7f8      	b.n	90013a4c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
90013a5a:	0790      	lsls	r0, r2, #30
90013a5c:	d0e7      	beq.n	90013a2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90013a5e:	f832 0b02 	ldrh.w	r0, [r2], #2
90013a62:	3b02      	subs	r3, #2
90013a64:	f821 0b02 	strh.w	r0, [r1], #2
90013a68:	e7e1      	b.n	90013a2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90013a6a:	2001      	movs	r0, #1
90013a6c:	bd10      	pop	{r4, pc}

90013a6e <_ZN8touchgfx3HAL7noTouchEv>:
90013a6e:	b510      	push	{r4, lr}
90013a70:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90013a74:	4604      	mov	r4, r0
90013a76:	b153      	cbz	r3, 90013a8e <_ZN8touchgfx3HAL7noTouchEv+0x20>
90013a78:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
90013a7c:	2101      	movs	r1, #1
90013a7e:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90013a82:	301c      	adds	r0, #28
90013a84:	f017 f934 	bl	9002acf0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90013a88:	2300      	movs	r3, #0
90013a8a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
90013a8e:	bd10      	pop	{r4, pc}

90013a90 <_ZN8touchgfx8Drawable5setXYEss>:
90013a90:	b570      	push	{r4, r5, r6, lr}
90013a92:	6803      	ldr	r3, [r0, #0]
90013a94:	4604      	mov	r4, r0
90013a96:	4615      	mov	r5, r2
90013a98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90013a9a:	4798      	blx	r3
90013a9c:	6823      	ldr	r3, [r4, #0]
90013a9e:	4629      	mov	r1, r5
90013aa0:	4620      	mov	r0, r4
90013aa2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90013aa4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013aa8:	4718      	bx	r3
	...

90013aac <_ZN8touchgfx3HAL3lcdEv>:
90013aac:	4b04      	ldr	r3, [pc, #16]	@ (90013ac0 <_ZN8touchgfx3HAL3lcdEv+0x14>)
90013aae:	681b      	ldr	r3, [r3, #0]
90013ab0:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90013ab4:	b10a      	cbz	r2, 90013aba <_ZN8touchgfx3HAL3lcdEv+0xe>
90013ab6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90013ab8:	b900      	cbnz	r0, 90013abc <_ZN8touchgfx3HAL3lcdEv+0x10>
90013aba:	6898      	ldr	r0, [r3, #8]
90013abc:	4770      	bx	lr
90013abe:	bf00      	nop
90013ac0:	24024598 	.word	0x24024598

90013ac4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90013ac4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013ac8:	b085      	sub	sp, #20
90013aca:	4604      	mov	r4, r0
90013acc:	2000      	movs	r0, #0
90013ace:	4699      	mov	r9, r3
90013ad0:	ad04      	add	r5, sp, #16
90013ad2:	460f      	mov	r7, r1
90013ad4:	4690      	mov	r8, r2
90013ad6:	f845 0d04 	str.w	r0, [r5, #-4]!
90013ada:	69a0      	ldr	r0, [r4, #24]
90013adc:	6806      	ldr	r6, [r0, #0]
90013ade:	9501      	str	r5, [sp, #4]
90013ae0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
90013ae4:	9500      	str	r5, [sp, #0]
90013ae6:	6835      	ldr	r5, [r6, #0]
90013ae8:	47a8      	blx	r5
90013aea:	4d10      	ldr	r5, [pc, #64]	@ (90013b2c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90013aec:	4606      	mov	r6, r0
90013aee:	f8a5 9000 	strh.w	r9, [r5]
90013af2:	f7ff ffdb 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
90013af6:	6803      	ldr	r3, [r0, #0]
90013af8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013afa:	4798      	blx	r3
90013afc:	b128      	cbz	r0, 90013b0a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90013afe:	2801      	cmp	r0, #1
90013b00:	d00b      	beq.n	90013b1a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90013b02:	4630      	mov	r0, r6
90013b04:	b005      	add	sp, #20
90013b06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013b0a:	882b      	ldrh	r3, [r5, #0]
90013b0c:	fb08 7203 	mla	r2, r8, r3, r7
90013b10:	9b03      	ldr	r3, [sp, #12]
90013b12:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90013b16:	63e3      	str	r3, [r4, #60]	@ 0x3c
90013b18:	e7f3      	b.n	90013b02 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90013b1a:	882a      	ldrh	r2, [r5, #0]
90013b1c:	9b03      	ldr	r3, [sp, #12]
90013b1e:	fb08 7202 	mla	r2, r8, r2, r7
90013b22:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90013b26:	1a9a      	subs	r2, r3, r2
90013b28:	63e2      	str	r2, [r4, #60]	@ 0x3c
90013b2a:	e7ea      	b.n	90013b02 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90013b2c:	24024590 	.word	0x24024590

90013b30 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90013b30:	b5f0      	push	{r4, r5, r6, r7, lr}
90013b32:	b08b      	sub	sp, #44	@ 0x2c
90013b34:	4617      	mov	r7, r2
90013b36:	4604      	mov	r4, r0
90013b38:	460e      	mov	r6, r1
90013b3a:	461d      	mov	r5, r3
90013b3c:	f7ff ffb6 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
90013b40:	6803      	ldr	r3, [r0, #0]
90013b42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013b44:	4798      	blx	r3
90013b46:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90013b4a:	9007      	str	r0, [sp, #28]
90013b4c:	4631      	mov	r1, r6
90013b4e:	6822      	ldr	r2, [r4, #0]
90013b50:	e9cd 0308 	strd	r0, r3, [sp, #32]
90013b54:	4b0c      	ldr	r3, [pc, #48]	@ (90013b88 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90013b56:	4620      	mov	r0, r4
90013b58:	881b      	ldrh	r3, [r3, #0]
90013b5a:	9306      	str	r3, [sp, #24]
90013b5c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90013b60:	9305      	str	r3, [sp, #20]
90013b62:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90013b66:	9304      	str	r3, [sp, #16]
90013b68:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013b6c:	9303      	str	r3, [sp, #12]
90013b6e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90013b72:	9302      	str	r3, [sp, #8]
90013b74:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90013b78:	e9cd 5300 	strd	r5, r3, [sp]
90013b7c:	463b      	mov	r3, r7
90013b7e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
90013b80:	2200      	movs	r2, #0
90013b82:	47a8      	blx	r5
90013b84:	b00b      	add	sp, #44	@ 0x2c
90013b86:	bdf0      	pop	{r4, r5, r6, r7, pc}
90013b88:	24024590 	.word	0x24024590

90013b8c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90013b8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013b90:	4698      	mov	r8, r3
90013b92:	6803      	ldr	r3, [r0, #0]
90013b94:	b08b      	sub	sp, #44	@ 0x2c
90013b96:	4617      	mov	r7, r2
90013b98:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
90013b9a:	460e      	mov	r6, r1
90013b9c:	4b13      	ldr	r3, [pc, #76]	@ (90013bec <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90013b9e:	4604      	mov	r4, r0
90013ba0:	f8b3 9000 	ldrh.w	r9, [r3]
90013ba4:	f7ff ff82 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
90013ba8:	6803      	ldr	r3, [r0, #0]
90013baa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013bac:	4798      	blx	r3
90013bae:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90013bb2:	2200      	movs	r2, #0
90013bb4:	4631      	mov	r1, r6
90013bb6:	e9cd 0308 	strd	r0, r3, [sp, #32]
90013bba:	2302      	movs	r3, #2
90013bbc:	4620      	mov	r0, r4
90013bbe:	e9cd 9306 	strd	r9, r3, [sp, #24]
90013bc2:	2301      	movs	r3, #1
90013bc4:	9305      	str	r3, [sp, #20]
90013bc6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
90013bca:	9304      	str	r3, [sp, #16]
90013bcc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90013bd0:	9303      	str	r3, [sp, #12]
90013bd2:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90013bd6:	9302      	str	r3, [sp, #8]
90013bd8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013bdc:	e9cd 8300 	strd	r8, r3, [sp]
90013be0:	463b      	mov	r3, r7
90013be2:	47a8      	blx	r5
90013be4:	b00b      	add	sp, #44	@ 0x2c
90013be6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013bea:	bf00      	nop
90013bec:	24024590 	.word	0x24024590

90013bf0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90013bf0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013bf4:	4698      	mov	r8, r3
90013bf6:	6803      	ldr	r3, [r0, #0]
90013bf8:	b087      	sub	sp, #28
90013bfa:	460e      	mov	r6, r1
90013bfc:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
90013bfe:	4617      	mov	r7, r2
90013c00:	4b0f      	ldr	r3, [pc, #60]	@ (90013c40 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90013c02:	4604      	mov	r4, r0
90013c04:	f8b3 9000 	ldrh.w	r9, [r3]
90013c08:	f7ff ff50 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
90013c0c:	6803      	ldr	r3, [r0, #0]
90013c0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013c10:	4798      	blx	r3
90013c12:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90013c16:	463a      	mov	r2, r7
90013c18:	4631      	mov	r1, r6
90013c1a:	f8cd 900c 	str.w	r9, [sp, #12]
90013c1e:	e9cd 0304 	strd	r0, r3, [sp, #16]
90013c22:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90013c26:	4620      	mov	r0, r4
90013c28:	9302      	str	r3, [sp, #8]
90013c2a:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
90013c2e:	9301      	str	r3, [sp, #4]
90013c30:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90013c34:	9300      	str	r3, [sp, #0]
90013c36:	4643      	mov	r3, r8
90013c38:	47a8      	blx	r5
90013c3a:	b007      	add	sp, #28
90013c3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013c40:	24024590 	.word	0x24024590

90013c44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90013c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013c48:	4604      	mov	r4, r0
90013c4a:	b08f      	sub	sp, #60	@ 0x3c
90013c4c:	4610      	mov	r0, r2
90013c4e:	460d      	mov	r5, r1
90013c50:	4691      	mov	r9, r2
90013c52:	461e      	mov	r6, r3
90013c54:	f008 fd30 	bl	9001c6b8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90013c58:	2800      	cmp	r0, #0
90013c5a:	f000 809d 	beq.w	90013d98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90013c5e:	6823      	ldr	r3, [r4, #0]
90013c60:	4620      	mov	r0, r4
90013c62:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90013dfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90013c66:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
90013c6a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90013c6c:	4798      	blx	r3
90013c6e:	6823      	ldr	r3, [r4, #0]
90013c70:	4620      	mov	r0, r4
90013c72:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90013e00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
90013c76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013c78:	4798      	blx	r3
90013c7a:	f8bb 3000 	ldrh.w	r3, [fp]
90013c7e:	4f5c      	ldr	r7, [pc, #368]	@ (90013df0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90013c80:	9301      	str	r3, [sp, #4]
90013c82:	f8ba 3000 	ldrh.w	r3, [sl]
90013c86:	f828 9d1c 	strh.w	r9, [r8, #-28]!
90013c8a:	4640      	mov	r0, r8
90013c8c:	9302      	str	r3, [sp, #8]
90013c8e:	883b      	ldrh	r3, [r7, #0]
90013c90:	9303      	str	r3, [sp, #12]
90013c92:	4b58      	ldr	r3, [pc, #352]	@ (90013df4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90013c94:	881a      	ldrh	r2, [r3, #0]
90013c96:	9305      	str	r3, [sp, #20]
90013c98:	9204      	str	r2, [sp, #16]
90013c9a:	f008 fda1 	bl	9001c7e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013c9e:	8038      	strh	r0, [r7, #0]
90013ca0:	4640      	mov	r0, r8
90013ca2:	f008 fdd1 	bl	9001c848 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013ca6:	9b05      	ldr	r3, [sp, #20]
90013ca8:	b280      	uxth	r0, r0
90013caa:	8018      	strh	r0, [r3, #0]
90013cac:	4b52      	ldr	r3, [pc, #328]	@ (90013df8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90013cae:	781b      	ldrb	r3, [r3, #0]
90013cb0:	2b00      	cmp	r3, #0
90013cb2:	d174      	bne.n	90013d9e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90013cb4:	883b      	ldrh	r3, [r7, #0]
90013cb6:	f8aa 0000 	strh.w	r0, [sl]
90013cba:	f8ab 3000 	strh.w	r3, [fp]
90013cbe:	4648      	mov	r0, r9
90013cc0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
90013cc4:	f008 fcf8 	bl	9001c6b8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90013cc8:	2200      	movs	r2, #0
90013cca:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
90013cce:	4611      	mov	r1, r2
90013cd0:	4628      	mov	r0, r5
90013cd2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90013cd6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90013cda:	f7ff fed9 	bl	90013a90 <_ZN8touchgfx8Drawable5setXYEss>
90013cde:	2301      	movs	r3, #1
90013ce0:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90013ce4:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90013ce8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90013cec:	2b00      	cmp	r3, #0
90013cee:	dd5c      	ble.n	90013daa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90013cf0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90013cf4:	2b00      	cmp	r3, #0
90013cf6:	dd58      	ble.n	90013daa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90013cf8:	462a      	mov	r2, r5
90013cfa:	ab0a      	add	r3, sp, #40	@ 0x28
90013cfc:	f852 0f04 	ldr.w	r0, [r2, #4]!
90013d00:	6851      	ldr	r1, [r2, #4]
90013d02:	c303      	stmia	r3!, {r0, r1}
90013d04:	4631      	mov	r1, r6
90013d06:	a80a      	add	r0, sp, #40	@ 0x28
90013d08:	f7ff fbec 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
90013d0c:	4b38      	ldr	r3, [pc, #224]	@ (90013df0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90013d0e:	2100      	movs	r1, #0
90013d10:	f9b3 2000 	ldrsh.w	r2, [r3]
90013d14:	4b37      	ldr	r3, [pc, #220]	@ (90013df4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90013d16:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90013d1a:	aa0a      	add	r2, sp, #40	@ 0x28
90013d1c:	f9b3 3000 	ldrsh.w	r3, [r3]
90013d20:	910c      	str	r1, [sp, #48]	@ 0x30
90013d22:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90013d26:	ab08      	add	r3, sp, #32
90013d28:	e892 0003 	ldmia.w	r2, {r0, r1}
90013d2c:	e883 0003 	stmia.w	r3, {r0, r1}
90013d30:	4618      	mov	r0, r3
90013d32:	a90c      	add	r1, sp, #48	@ 0x30
90013d34:	f7ff fbd6 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
90013d38:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90013d3a:	2b00      	cmp	r3, #0
90013d3c:	d13c      	bne.n	90013db8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90013d3e:	2000      	movs	r0, #0
90013d40:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90013d44:	2600      	movs	r6, #0
90013d46:	696b      	ldr	r3, [r5, #20]
90013d48:	a908      	add	r1, sp, #32
90013d4a:	682a      	ldr	r2, [r5, #0]
90013d4c:	4628      	mov	r0, r5
90013d4e:	9305      	str	r3, [sp, #20]
90013d50:	616e      	str	r6, [r5, #20]
90013d52:	6892      	ldr	r2, [r2, #8]
90013d54:	4790      	blx	r2
90013d56:	9b05      	ldr	r3, [sp, #20]
90013d58:	4652      	mov	r2, sl
90013d5a:	4649      	mov	r1, r9
90013d5c:	616b      	str	r3, [r5, #20]
90013d5e:	4628      	mov	r0, r5
90013d60:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90013d64:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90013d68:	f7ff fe92 	bl	90013a90 <_ZN8touchgfx8Drawable5setXYEss>
90013d6c:	9a01      	ldr	r2, [sp, #4]
90013d6e:	4b23      	ldr	r3, [pc, #140]	@ (90013dfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90013d70:	4620      	mov	r0, r4
90013d72:	801a      	strh	r2, [r3, #0]
90013d74:	9a02      	ldr	r2, [sp, #8]
90013d76:	4b22      	ldr	r3, [pc, #136]	@ (90013e00 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90013d78:	801a      	strh	r2, [r3, #0]
90013d7a:	9a03      	ldr	r2, [sp, #12]
90013d7c:	4b1c      	ldr	r3, [pc, #112]	@ (90013df0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90013d7e:	801a      	strh	r2, [r3, #0]
90013d80:	4b1c      	ldr	r3, [pc, #112]	@ (90013df4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90013d82:	9a04      	ldr	r2, [sp, #16]
90013d84:	801a      	strh	r2, [r3, #0]
90013d86:	6823      	ldr	r3, [r4, #0]
90013d88:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90013d8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90013d8e:	4798      	blx	r3
90013d90:	6823      	ldr	r3, [r4, #0]
90013d92:	4620      	mov	r0, r4
90013d94:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013d96:	4798      	blx	r3
90013d98:	b00f      	add	sp, #60	@ 0x3c
90013d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013d9e:	883b      	ldrh	r3, [r7, #0]
90013da0:	f8ab 0000 	strh.w	r0, [fp]
90013da4:	f8aa 3000 	strh.w	r3, [sl]
90013da8:	e789      	b.n	90013cbe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90013daa:	462a      	mov	r2, r5
90013dac:	ab0a      	add	r3, sp, #40	@ 0x28
90013dae:	f852 0f04 	ldr.w	r0, [r2, #4]!
90013db2:	6851      	ldr	r1, [r2, #4]
90013db4:	c303      	stmia	r3!, {r0, r1}
90013db6:	e7a9      	b.n	90013d0c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90013db8:	a807      	add	r0, sp, #28
90013dba:	f008 fe87 	bl	9001cacc <_ZNK8touchgfx6Bitmap9getFormatEv>
90013dbe:	4606      	mov	r6, r0
90013dc0:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90013dc2:	6803      	ldr	r3, [r0, #0]
90013dc4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013dc6:	4798      	blx	r3
90013dc8:	4286      	cmp	r6, r0
90013dca:	d1b8      	bne.n	90013d3e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90013dcc:	f7ff fe6e 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
90013dd0:	6803      	ldr	r3, [r0, #0]
90013dd2:	4606      	mov	r6, r0
90013dd4:	a807      	add	r0, sp, #28
90013dd6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90013dd8:	9305      	str	r3, [sp, #20]
90013dda:	f008 fe77 	bl	9001cacc <_ZNK8touchgfx6Bitmap9getFormatEv>
90013dde:	9b05      	ldr	r3, [sp, #20]
90013de0:	4601      	mov	r1, r0
90013de2:	4630      	mov	r0, r6
90013de4:	4798      	blx	r3
90013de6:	f080 0001 	eor.w	r0, r0, #1
90013dea:	b2c0      	uxtb	r0, r0
90013dec:	e7a8      	b.n	90013d40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90013dee:	bf00      	nop
90013df0:	2402458a 	.word	0x2402458a
90013df4:	2402458c 	.word	0x2402458c
90013df8:	2402458e 	.word	0x2402458e
90013dfc:	24024590 	.word	0x24024590
90013e00:	24024592 	.word	0x24024592

90013e04 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90013e04:	4b07      	ldr	r3, [pc, #28]	@ (90013e24 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90013e06:	b510      	push	{r4, lr}
90013e08:	781b      	ldrb	r3, [r3, #0]
90013e0a:	4604      	mov	r4, r0
90013e0c:	b13b      	cbz	r3, 90013e1e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90013e0e:	6803      	ldr	r3, [r0, #0]
90013e10:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90013e12:	4798      	blx	r3
90013e14:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90013e16:	4283      	cmp	r3, r0
90013e18:	d101      	bne.n	90013e1e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90013e1a:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90013e1c:	bd10      	pop	{r4, pc}
90013e1e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90013e20:	e7fc      	b.n	90013e1c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90013e22:	bf00      	nop
90013e24:	24024594 	.word	0x24024594

90013e28 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90013e28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013e2c:	461d      	mov	r5, r3
90013e2e:	b08a      	sub	sp, #40	@ 0x28
90013e30:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90013e34:	4690      	mov	r8, r2
90013e36:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90013e3a:	2400      	movs	r4, #0
90013e3c:	4607      	mov	r7, r0
90013e3e:	fb06 8505 	mla	r5, r6, r5, r8
90013e42:	9404      	str	r4, [sp, #16]
90013e44:	f88d 4020 	strb.w	r4, [sp, #32]
90013e48:	e9cd 3101 	strd	r3, r1, [sp, #4]
90013e4c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90013e50:	f8ad 3018 	strh.w	r3, [sp, #24]
90013e54:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90013e58:	f8ad 301a 	strh.w	r3, [sp, #26]
90013e5c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013e60:	f8ad 301c 	strh.w	r3, [sp, #28]
90013e64:	f7ff ffce 	bl	90013e04 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013e68:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90013e6c:	6878      	ldr	r0, [r7, #4]
90013e6e:	f8ad 601e 	strh.w	r6, [sp, #30]
90013e72:	a901      	add	r1, sp, #4
90013e74:	9505      	str	r5, [sp, #20]
90013e76:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90013e7a:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90013e7e:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90013e82:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90013e86:	6803      	ldr	r3, [r0, #0]
90013e88:	685b      	ldr	r3, [r3, #4]
90013e8a:	4798      	blx	r3
90013e8c:	b00a      	add	sp, #40	@ 0x28
90013e8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90013e92 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90013e92:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013e96:	b08b      	sub	sp, #44	@ 0x2c
90013e98:	2400      	movs	r4, #0
90013e9a:	4691      	mov	r9, r2
90013e9c:	461d      	mov	r5, r3
90013e9e:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90013ea2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90013ea6:	4688      	mov	r8, r1
90013ea8:	4607      	mov	r7, r0
90013eaa:	9404      	str	r4, [sp, #16]
90013eac:	fb06 9505 	mla	r5, r6, r5, r9
90013eb0:	e9cd 3401 	strd	r3, r4, [sp, #4]
90013eb4:	f7ff ffa6 	bl	90013e04 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013eb8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013ebc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90013ec0:	6878      	ldr	r0, [r7, #4]
90013ec2:	f8ad 3018 	strh.w	r3, [sp, #24]
90013ec6:	a901      	add	r1, sp, #4
90013ec8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90013ecc:	9505      	str	r5, [sp, #20]
90013ece:	f8ad 301a 	strh.w	r3, [sp, #26]
90013ed2:	f8ad 401c 	strh.w	r4, [sp, #28]
90013ed6:	f8ad 601e 	strh.w	r6, [sp, #30]
90013eda:	f8cd 8010 	str.w	r8, [sp, #16]
90013ede:	f8ad 4020 	strh.w	r4, [sp, #32]
90013ee2:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90013ee6:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90013eea:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90013eee:	6803      	ldr	r3, [r0, #0]
90013ef0:	685b      	ldr	r3, [r3, #4]
90013ef2:	4798      	blx	r3
90013ef4:	b00b      	add	sp, #44	@ 0x2c
90013ef6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90013efc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90013efc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013f00:	b08a      	sub	sp, #40	@ 0x28
90013f02:	4698      	mov	r8, r3
90013f04:	2300      	movs	r3, #0
90013f06:	4606      	mov	r6, r0
90013f08:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90013f0c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90013f10:	2d0b      	cmp	r5, #11
90013f12:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
90013f16:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90013f1a:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90013f1e:	9304      	str	r3, [sp, #16]
90013f20:	d137      	bne.n	90013f92 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90013f22:	2380      	movs	r3, #128	@ 0x80
90013f24:	f88d 0020 	strb.w	r0, [sp, #32]
90013f28:	4630      	mov	r0, r6
90013f2a:	9203      	str	r2, [sp, #12]
90013f2c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90013f30:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90013f34:	f8ad 3018 	strh.w	r3, [sp, #24]
90013f38:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90013f3c:	f8ad 301a 	strh.w	r3, [sp, #26]
90013f40:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90013f44:	f8ad 301c 	strh.w	r3, [sp, #28]
90013f48:	f7ff ff5c 	bl	90013e04 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013f4c:	2c0b      	cmp	r4, #11
90013f4e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90013f52:	f8ad 701e 	strh.w	r7, [sp, #30]
90013f56:	bf94      	ite	ls
90013f58:	4b19      	ldrls	r3, [pc, #100]	@ (90013fc0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90013f5a:	2100      	movhi	r1, #0
90013f5c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90013f60:	bf98      	it	ls
90013f62:	5d19      	ldrbls	r1, [r3, r4]
90013f64:	fb02 8307 	mla	r3, r2, r7, r8
90013f68:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90013f6c:	10c9      	asrs	r1, r1, #3
90013f6e:	fb01 0003 	mla	r0, r1, r3, r0
90013f72:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90013f76:	a901      	add	r1, sp, #4
90013f78:	9005      	str	r0, [sp, #20]
90013f7a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90013f7e:	2300      	movs	r3, #0
90013f80:	6870      	ldr	r0, [r6, #4]
90013f82:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90013f86:	6803      	ldr	r3, [r0, #0]
90013f88:	685b      	ldr	r3, [r3, #4]
90013f8a:	4798      	blx	r3
90013f8c:	b00a      	add	sp, #40	@ 0x28
90013f8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013f92:	2d02      	cmp	r5, #2
90013f94:	d109      	bne.n	90013faa <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90013f96:	28ff      	cmp	r0, #255	@ 0xff
90013f98:	d105      	bne.n	90013fa6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90013f9a:	f1bc 0f00 	cmp.w	ip, #0
90013f9e:	bf14      	ite	ne
90013fa0:	2340      	movne	r3, #64	@ 0x40
90013fa2:	2320      	moveq	r3, #32
90013fa4:	e7be      	b.n	90013f24 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013fa6:	2340      	movs	r3, #64	@ 0x40
90013fa8:	e7bc      	b.n	90013f24 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013faa:	28ff      	cmp	r0, #255	@ 0xff
90013fac:	d105      	bne.n	90013fba <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90013fae:	f1bc 0f00 	cmp.w	ip, #0
90013fb2:	bf14      	ite	ne
90013fb4:	2304      	movne	r3, #4
90013fb6:	2301      	moveq	r3, #1
90013fb8:	e7b4      	b.n	90013f24 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013fba:	2304      	movs	r3, #4
90013fbc:	e7b2      	b.n	90013f24 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90013fbe:	bf00      	nop
90013fc0:	9003001c 	.word	0x9003001c

90013fc4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90013fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013fc8:	b08b      	sub	sp, #44	@ 0x2c
90013fca:	461d      	mov	r5, r3
90013fcc:	2400      	movs	r4, #0
90013fce:	4688      	mov	r8, r1
90013fd0:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90013fd4:	4693      	mov	fp, r2
90013fd6:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90013fda:	4607      	mov	r7, r0
90013fdc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90013fe0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90013fe4:	9404      	str	r4, [sp, #16]
90013fe6:	bf14      	ite	ne
90013fe8:	2308      	movne	r3, #8
90013fea:	2302      	moveq	r3, #2
90013fec:	fb05 b50a 	mla	r5, r5, sl, fp
90013ff0:	e9cd 3401 	strd	r3, r4, [sp, #4]
90013ff4:	f7ff ff06 	bl	90013e04 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90013ff8:	2e0b      	cmp	r6, #11
90013ffa:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90013ffe:	a901      	add	r1, sp, #4
90014000:	bf98      	it	ls
90014002:	4b13      	ldrls	r3, [pc, #76]	@ (90014050 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90014004:	f8ad a01e 	strh.w	sl, [sp, #30]
90014008:	bf98      	it	ls
9001400a:	5d9c      	ldrbls	r4, [r3, r6]
9001400c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90014010:	10e4      	asrs	r4, r4, #3
90014012:	f8cd 8010 	str.w	r8, [sp, #16]
90014016:	f8ad 3018 	strh.w	r3, [sp, #24]
9001401a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001401e:	fb04 0405 	mla	r4, r4, r5, r0
90014022:	6878      	ldr	r0, [r7, #4]
90014024:	f8ad 301a 	strh.w	r3, [sp, #26]
90014028:	2300      	movs	r3, #0
9001402a:	9405      	str	r4, [sp, #20]
9001402c:	f8ad 301c 	strh.w	r3, [sp, #28]
90014030:	f88d 9020 	strb.w	r9, [sp, #32]
90014034:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90014038:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
9001403c:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90014040:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90014044:	6803      	ldr	r3, [r0, #0]
90014046:	685b      	ldr	r3, [r3, #4]
90014048:	4798      	blx	r3
9001404a:	b00b      	add	sp, #44	@ 0x2c
9001404c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014050:	9003001c 	.word	0x9003001c

90014054 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90014054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014058:	461e      	mov	r6, r3
9001405a:	4b0a      	ldr	r3, [pc, #40]	@ (90014084 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
9001405c:	460f      	mov	r7, r1
9001405e:	4690      	mov	r8, r2
90014060:	881d      	ldrh	r5, [r3, #0]
90014062:	f7ff fd23 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
90014066:	6803      	ldr	r3, [r0, #0]
90014068:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001406a:	4798      	blx	r3
9001406c:	280b      	cmp	r0, #11
9001406e:	bf96      	itet	ls
90014070:	4b05      	ldrls	r3, [pc, #20]	@ (90014088 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90014072:	2400      	movhi	r4, #0
90014074:	5c1c      	ldrbls	r4, [r3, r0]
90014076:	fb08 7005 	mla	r0, r8, r5, r7
9001407a:	10e4      	asrs	r4, r4, #3
9001407c:	fb04 6000 	mla	r0, r4, r0, r6
90014080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014084:	24024590 	.word	0x24024590
90014088:	9003001c 	.word	0x9003001c

9001408c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
9001408c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001408e:	b08b      	sub	sp, #44	@ 0x2c
90014090:	461f      	mov	r7, r3
90014092:	4604      	mov	r4, r0
90014094:	4616      	mov	r6, r2
90014096:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001409a:	2500      	movs	r5, #0
9001409c:	e9cd 3101 	strd	r3, r1, [sp, #4]
900140a0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900140a4:	9504      	str	r5, [sp, #16]
900140a6:	f8ad 3018 	strh.w	r3, [sp, #24]
900140aa:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900140ae:	f8ad 301a 	strh.w	r3, [sp, #26]
900140b2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900140b6:	f8ad 301c 	strh.w	r3, [sp, #28]
900140ba:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900140be:	f88d 3020 	strb.w	r3, [sp, #32]
900140c2:	f7ff fe9f 	bl	90013e04 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900140c6:	463a      	mov	r2, r7
900140c8:	4631      	mov	r1, r6
900140ca:	4603      	mov	r3, r0
900140cc:	4620      	mov	r0, r4
900140ce:	f7ff ffc1 	bl	90014054 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900140d2:	4b0e      	ldr	r3, [pc, #56]	@ (9001410c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
900140d4:	9005      	str	r0, [sp, #20]
900140d6:	881b      	ldrh	r3, [r3, #0]
900140d8:	f8ad 301e 	strh.w	r3, [sp, #30]
900140dc:	f7ff fce6 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
900140e0:	6803      	ldr	r3, [r0, #0]
900140e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900140e4:	4798      	blx	r3
900140e6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900140e8:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
900140ec:	a901      	add	r1, sp, #4
900140ee:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
900140f2:	9304      	str	r3, [sp, #16]
900140f4:	6860      	ldr	r0, [r4, #4]
900140f6:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900140fa:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
900140fe:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90014102:	6803      	ldr	r3, [r0, #0]
90014104:	685b      	ldr	r3, [r3, #4]
90014106:	4798      	blx	r3
90014108:	b00b      	add	sp, #44	@ 0x2c
9001410a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001410c:	24024590 	.word	0x24024590

90014110 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90014110:	b5f0      	push	{r4, r5, r6, r7, lr}
90014112:	b08d      	sub	sp, #52	@ 0x34
90014114:	2501      	movs	r5, #1
90014116:	4604      	mov	r4, r0
90014118:	466b      	mov	r3, sp
9001411a:	9503      	str	r5, [sp, #12]
9001411c:	e883 0006 	stmia.w	r3, {r1, r2}
90014120:	2300      	movs	r3, #0
90014122:	f8bd 6000 	ldrh.w	r6, [sp]
90014126:	f8bd 7002 	ldrh.w	r7, [sp, #2]
9001412a:	9306      	str	r3, [sp, #24]
9001412c:	6803      	ldr	r3, [r0, #0]
9001412e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90014130:	4798      	blx	r3
90014132:	463a      	mov	r2, r7
90014134:	4631      	mov	r1, r6
90014136:	4603      	mov	r3, r0
90014138:	4620      	mov	r0, r4
9001413a:	f7ff ff8b 	bl	90014054 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
9001413e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90014140:	9004      	str	r0, [sp, #16]
90014142:	9307      	str	r3, [sp, #28]
90014144:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90014148:	f8ad 3020 	strh.w	r3, [sp, #32]
9001414c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90014150:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90014154:	4b0e      	ldr	r3, [pc, #56]	@ (90014190 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90014156:	881b      	ldrh	r3, [r3, #0]
90014158:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
9001415c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90014160:	f7ff fca4 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
90014164:	6803      	ldr	r3, [r0, #0]
90014166:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014168:	4798      	blx	r3
9001416a:	23ff      	movs	r3, #255	@ 0xff
9001416c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90014170:	a903      	add	r1, sp, #12
90014172:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90014176:	6860      	ldr	r0, [r4, #4]
90014178:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
9001417c:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90014180:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90014184:	6803      	ldr	r3, [r0, #0]
90014186:	685b      	ldr	r3, [r3, #4]
90014188:	4798      	blx	r3
9001418a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
9001418c:	b00d      	add	sp, #52	@ 0x34
9001418e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90014190:	24024590 	.word	0x24024590

90014194 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90014194:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014198:	b08c      	sub	sp, #48	@ 0x30
9001419a:	461e      	mov	r6, r3
9001419c:	2300      	movs	r3, #0
9001419e:	4604      	mov	r4, r0
900141a0:	466d      	mov	r5, sp
900141a2:	9306      	str	r3, [sp, #24]
900141a4:	6803      	ldr	r3, [r0, #0]
900141a6:	e885 0006 	stmia.w	r5, {r1, r2}
900141aa:	2501      	movs	r5, #1
900141ac:	f8bd 7000 	ldrh.w	r7, [sp]
900141b0:	f8bd 8002 	ldrh.w	r8, [sp, #2]
900141b4:	9503      	str	r5, [sp, #12]
900141b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900141b8:	4798      	blx	r3
900141ba:	4642      	mov	r2, r8
900141bc:	4639      	mov	r1, r7
900141be:	4603      	mov	r3, r0
900141c0:	4620      	mov	r0, r4
900141c2:	f7ff ff47 	bl	90014054 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
900141c6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900141ca:	9004      	str	r0, [sp, #16]
900141cc:	f8ad 3020 	strh.w	r3, [sp, #32]
900141d0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
900141d4:	9607      	str	r6, [sp, #28]
900141d6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
900141da:	4b10      	ldr	r3, [pc, #64]	@ (9001421c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
900141dc:	881b      	ldrh	r3, [r3, #0]
900141de:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
900141e2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900141e4:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
900141e8:	f7ff fc60 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
900141ec:	6803      	ldr	r3, [r0, #0]
900141ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900141f0:	4798      	blx	r3
900141f2:	23ff      	movs	r3, #255	@ 0xff
900141f4:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
900141f8:	a903      	add	r1, sp, #12
900141fa:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900141fe:	6860      	ldr	r0, [r4, #4]
90014200:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90014204:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90014208:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
9001420c:	6803      	ldr	r3, [r0, #0]
9001420e:	685b      	ldr	r3, [r3, #4]
90014210:	4798      	blx	r3
90014212:	4630      	mov	r0, r6
90014214:	b00c      	add	sp, #48	@ 0x30
90014216:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001421a:	bf00      	nop
9001421c:	24024590 	.word	0x24024590

90014220 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90014220:	b5f0      	push	{r4, r5, r6, r7, lr}
90014222:	b085      	sub	sp, #20
90014224:	4605      	mov	r5, r0
90014226:	ac02      	add	r4, sp, #8
90014228:	e884 0006 	stmia.w	r4, {r1, r2}
9001422c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90014230:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90014234:	f7ff fde6 	bl	90013e04 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90014238:	4631      	mov	r1, r6
9001423a:	4603      	mov	r3, r0
9001423c:	463a      	mov	r2, r7
9001423e:	4628      	mov	r0, r5
90014240:	f7ff ff08 	bl	90014054 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90014244:	4a05      	ldr	r2, [pc, #20]	@ (9001425c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90014246:	682b      	ldr	r3, [r5, #0]
90014248:	8812      	ldrh	r2, [r2, #0]
9001424a:	9200      	str	r2, [sp, #0]
9001424c:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
9001424e:	4603      	mov	r3, r0
90014250:	4628      	mov	r0, r5
90014252:	e894 0006 	ldmia.w	r4, {r1, r2}
90014256:	47b0      	blx	r6
90014258:	b005      	add	sp, #20
9001425a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001425c:	24024590 	.word	0x24024590

90014260 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90014260:	b570      	push	{r4, r5, r6, lr}
90014262:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90014266:	4604      	mov	r4, r0
90014268:	b19b      	cbz	r3, 90014292 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
9001426a:	2002      	movs	r0, #2
9001426c:	f7ec fd5e 	bl	90000d2c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90014270:	2300      	movs	r3, #0
90014272:	4620      	mov	r0, r4
90014274:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90014278:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
9001427c:	6823      	ldr	r3, [r4, #0]
9001427e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
90014282:	f7ff fdbf 	bl	90013e04 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90014286:	4601      	mov	r1, r0
90014288:	4620      	mov	r0, r4
9001428a:	462b      	mov	r3, r5
9001428c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014290:	4718      	bx	r3
90014292:	bd70      	pop	{r4, r5, r6, pc}

90014294 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90014294:	b570      	push	{r4, r5, r6, lr}
90014296:	4605      	mov	r5, r0
90014298:	460c      	mov	r4, r1
9001429a:	2003      	movs	r0, #3
9001429c:	b149      	cbz	r1, 900142b2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
9001429e:	f7ec fcdd 	bl	90000c5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900142a2:	6928      	ldr	r0, [r5, #16]
900142a4:	b168      	cbz	r0, 900142c2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900142a6:	6803      	ldr	r3, [r0, #0]
900142a8:	2101      	movs	r1, #1
900142aa:	695b      	ldr	r3, [r3, #20]
900142ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900142b0:	4718      	bx	r3
900142b2:	f7ec fd07 	bl	90000cc4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900142b6:	6928      	ldr	r0, [r5, #16]
900142b8:	b118      	cbz	r0, 900142c2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
900142ba:	6803      	ldr	r3, [r0, #0]
900142bc:	4621      	mov	r1, r4
900142be:	695b      	ldr	r3, [r3, #20]
900142c0:	e7f4      	b.n	900142ac <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
900142c2:	bd70      	pop	{r4, r5, r6, pc}

900142c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
900142c4:	b538      	push	{r3, r4, r5, lr}
900142c6:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
900142ca:	4604      	mov	r4, r0
900142cc:	460d      	mov	r5, r1
900142ce:	428b      	cmp	r3, r1
900142d0:	d006      	beq.n	900142e0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
900142d2:	6803      	ldr	r3, [r0, #0]
900142d4:	b929      	cbnz	r1, 900142e2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
900142d6:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
900142da:	4798      	blx	r3
900142dc:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
900142e0:	bd38      	pop	{r3, r4, r5, pc}
900142e2:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
900142e6:	e7f8      	b.n	900142da <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

900142e8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
900142e8:	4b0d      	ldr	r3, [pc, #52]	@ (90014320 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
900142ea:	b510      	push	{r4, lr}
900142ec:	781b      	ldrb	r3, [r3, #0]
900142ee:	4604      	mov	r4, r0
900142f0:	b95b      	cbnz	r3, 9001430a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
900142f2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
900142f6:	2b02      	cmp	r3, #2
900142f8:	d007      	beq.n	9001430a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
900142fa:	6840      	ldr	r0, [r0, #4]
900142fc:	f000 f91a 	bl	90014534 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90014300:	b118      	cbz	r0, 9001430a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90014302:	6862      	ldr	r2, [r4, #4]
90014304:	7a53      	ldrb	r3, [r2, #9]
90014306:	2b00      	cmp	r3, #0
90014308:	d0fc      	beq.n	90014304 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
9001430a:	f7ee f817 	bl	9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001430e:	4620      	mov	r0, r4
90014310:	2100      	movs	r1, #0
90014312:	f7ff ffd7 	bl	900142c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90014316:	4620      	mov	r0, r4
90014318:	f7ff fd74 	bl	90013e04 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001431c:	bd10      	pop	{r4, pc}
9001431e:	bf00      	nop
90014320:	24024594 	.word	0x24024594

90014324 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90014324:	b570      	push	{r4, r5, r6, lr}
90014326:	4604      	mov	r4, r0
90014328:	6803      	ldr	r3, [r0, #0]
9001432a:	b919      	cbnz	r1, 90014334 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
9001432c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001432e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014332:	4718      	bx	r3
90014334:	2200      	movs	r2, #0
90014336:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
9001433a:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
9001433e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90014340:	4798      	blx	r3
90014342:	6863      	ldr	r3, [r4, #4]
90014344:	2101      	movs	r1, #1
90014346:	4605      	mov	r5, r0
90014348:	4620      	mov	r0, r4
9001434a:	7299      	strb	r1, [r3, #10]
9001434c:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
90014350:	f7ff ffb8 	bl	900142c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90014354:	4628      	mov	r0, r5
90014356:	bd70      	pop	{r4, r5, r6, pc}

90014358 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90014358:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
9001435c:	1a13      	subs	r3, r2, r0
9001435e:	4258      	negs	r0, r3
90014360:	4158      	adcs	r0, r3
90014362:	4770      	bx	lr

90014364 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90014364:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90014368:	1a9b      	subs	r3, r3, r2
9001436a:	2b00      	cmp	r3, #0
9001436c:	bfdc      	itt	le
9001436e:	6882      	ldrle	r2, [r0, #8]
90014370:	189b      	addle	r3, r3, r2
90014372:	2b01      	cmp	r3, #1
90014374:	bfcc      	ite	gt
90014376:	2000      	movgt	r0, #0
90014378:	2001      	movle	r0, #1
9001437a:	4770      	bx	lr

9001437c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
9001437c:	6902      	ldr	r2, [r0, #16]
9001437e:	6843      	ldr	r3, [r0, #4]
90014380:	2024      	movs	r0, #36	@ 0x24
90014382:	fb00 3002 	mla	r0, r0, r2, r3
90014386:	4770      	bx	lr

90014388 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90014388:	6803      	ldr	r3, [r0, #0]
9001438a:	691b      	ldr	r3, [r3, #16]
9001438c:	4718      	bx	r3

9001438e <_ZN8touchgfx13DMA_Interface7executeEv>:
9001438e:	2301      	movs	r3, #1
90014390:	b570      	push	{r4, r5, r6, lr}
90014392:	7203      	strb	r3, [r0, #8]
90014394:	4604      	mov	r4, r0
90014396:	6840      	ldr	r0, [r0, #4]
90014398:	6803      	ldr	r3, [r0, #0]
9001439a:	699b      	ldr	r3, [r3, #24]
9001439c:	4798      	blx	r3
9001439e:	6803      	ldr	r3, [r0, #0]
900143a0:	4605      	mov	r5, r0
900143a2:	2b40      	cmp	r3, #64	@ 0x40
900143a4:	d00c      	beq.n	900143c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900143a6:	d810      	bhi.n	900143ca <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
900143a8:	2b04      	cmp	r3, #4
900143aa:	d01d      	beq.n	900143e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
900143ac:	d804      	bhi.n	900143b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
900143ae:	2b01      	cmp	r3, #1
900143b0:	d006      	beq.n	900143c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900143b2:	2b02      	cmp	r3, #2
900143b4:	d02c      	beq.n	90014410 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
900143b6:	bd70      	pop	{r4, r5, r6, pc}
900143b8:	2b08      	cmp	r3, #8
900143ba:	d01d      	beq.n	900143f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900143bc:	2b20      	cmp	r3, #32
900143be:	d1fa      	bne.n	900143b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
900143c0:	6823      	ldr	r3, [r4, #0]
900143c2:	4620      	mov	r0, r4
900143c4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900143c6:	4798      	blx	r3
900143c8:	e013      	b.n	900143f2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
900143ca:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
900143ce:	d0f7      	beq.n	900143c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900143d0:	d804      	bhi.n	900143dc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
900143d2:	2b80      	cmp	r3, #128	@ 0x80
900143d4:	d0f4      	beq.n	900143c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900143d6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
900143da:	e7f0      	b.n	900143be <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
900143dc:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
900143e0:	d0ee      	beq.n	900143c0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900143e2:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
900143e6:	e7e5      	b.n	900143b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
900143e8:	6823      	ldr	r3, [r4, #0]
900143ea:	7f01      	ldrb	r1, [r0, #28]
900143ec:	4620      	mov	r0, r4
900143ee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900143f0:	4798      	blx	r3
900143f2:	6823      	ldr	r3, [r4, #0]
900143f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900143f6:	e006      	b.n	90014406 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
900143f8:	6823      	ldr	r3, [r4, #0]
900143fa:	7f01      	ldrb	r1, [r0, #28]
900143fc:	4620      	mov	r0, r4
900143fe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90014400:	4798      	blx	r3
90014402:	6823      	ldr	r3, [r4, #0]
90014404:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90014406:	4629      	mov	r1, r5
90014408:	4620      	mov	r0, r4
9001440a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001440e:	4718      	bx	r3
90014410:	6823      	ldr	r3, [r4, #0]
90014412:	4620      	mov	r0, r4
90014414:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014416:	4798      	blx	r3
90014418:	e7f3      	b.n	90014402 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

9001441a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
9001441a:	4770      	bx	lr

9001441c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
9001441c:	4770      	bx	lr

9001441e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
9001441e:	4770      	bx	lr

90014420 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90014420:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90014424:	b510      	push	{r4, lr}
90014426:	1ad2      	subs	r2, r2, r3
90014428:	2a00      	cmp	r2, #0
9001442a:	bfdc      	itt	le
9001442c:	6884      	ldrle	r4, [r0, #8]
9001442e:	1912      	addle	r2, r2, r4
90014430:	2a01      	cmp	r2, #1
90014432:	dd16      	ble.n	90014462 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90014434:	6842      	ldr	r2, [r0, #4]
90014436:	2424      	movs	r4, #36	@ 0x24
90014438:	fb04 2303 	mla	r3, r4, r3, r2
9001443c:	f101 0220 	add.w	r2, r1, #32
90014440:	f851 4b04 	ldr.w	r4, [r1], #4
90014444:	4291      	cmp	r1, r2
90014446:	f843 4b04 	str.w	r4, [r3], #4
9001444a:	d1f9      	bne.n	90014440 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
9001444c:	780a      	ldrb	r2, [r1, #0]
9001444e:	701a      	strb	r2, [r3, #0]
90014450:	68c3      	ldr	r3, [r0, #12]
90014452:	6882      	ldr	r2, [r0, #8]
90014454:	f3bf 8f5b 	dmb	ish
90014458:	3301      	adds	r3, #1
9001445a:	429a      	cmp	r2, r3
9001445c:	bfd8      	it	le
9001445e:	1a9b      	suble	r3, r3, r2
90014460:	60c3      	str	r3, [r0, #12]
90014462:	bd10      	pop	{r4, pc}

90014464 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90014464:	6903      	ldr	r3, [r0, #16]
90014466:	6882      	ldr	r2, [r0, #8]
90014468:	f3bf 8f5b 	dmb	ish
9001446c:	3301      	adds	r3, #1
9001446e:	429a      	cmp	r2, r3
90014470:	bfd8      	it	le
90014472:	1a9b      	suble	r3, r3, r2
90014474:	6103      	str	r3, [r0, #16]
90014476:	4770      	bx	lr

90014478 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90014478:	b570      	push	{r4, r5, r6, lr}
9001447a:	4604      	mov	r4, r0
9001447c:	460e      	mov	r6, r1
9001447e:	6860      	ldr	r0, [r4, #4]
90014480:	6803      	ldr	r3, [r0, #0]
90014482:	685b      	ldr	r3, [r3, #4]
90014484:	4798      	blx	r3
90014486:	2800      	cmp	r0, #0
90014488:	d1f9      	bne.n	9001447e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
9001448a:	4d0d      	ldr	r5, [pc, #52]	@ (900144c0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
9001448c:	6828      	ldr	r0, [r5, #0]
9001448e:	6803      	ldr	r3, [r0, #0]
90014490:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90014492:	4798      	blx	r3
90014494:	f7ed ff60 	bl	90002358 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90014498:	6828      	ldr	r0, [r5, #0]
9001449a:	2101      	movs	r1, #1
9001449c:	f7ff ff12 	bl	900142c4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900144a0:	6860      	ldr	r0, [r4, #4]
900144a2:	4631      	mov	r1, r6
900144a4:	6803      	ldr	r3, [r0, #0]
900144a6:	689b      	ldr	r3, [r3, #8]
900144a8:	4798      	blx	r3
900144aa:	6823      	ldr	r3, [r4, #0]
900144ac:	4620      	mov	r0, r4
900144ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900144b0:	4798      	blx	r3
900144b2:	6828      	ldr	r0, [r5, #0]
900144b4:	6803      	ldr	r3, [r0, #0]
900144b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900144ba:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
900144bc:	4718      	bx	r3
900144be:	bf00      	nop
900144c0:	24024598 	.word	0x24024598

900144c4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900144c4:	b508      	push	{r3, lr}
900144c6:	f7ed ff39 	bl	9000233c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900144ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900144ce:	f7ed bf3d 	b.w	9000234c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900144d2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900144d2:	b510      	push	{r4, lr}
900144d4:	4604      	mov	r4, r0
900144d6:	2114      	movs	r1, #20
900144d8:	f017 fb3f 	bl	9002bb5a <_ZdlPvj>
900144dc:	4620      	mov	r0, r4
900144de:	bd10      	pop	{r4, pc}

900144e0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
900144e0:	b570      	push	{r4, r5, r6, lr}
900144e2:	4604      	mov	r4, r0
900144e4:	6840      	ldr	r0, [r0, #4]
900144e6:	6803      	ldr	r3, [r0, #0]
900144e8:	681b      	ldr	r3, [r3, #0]
900144ea:	4798      	blx	r3
900144ec:	4605      	mov	r5, r0
900144ee:	b930      	cbnz	r0, 900144fe <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900144f0:	7a23      	ldrb	r3, [r4, #8]
900144f2:	b123      	cbz	r3, 900144fe <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900144f4:	6860      	ldr	r0, [r4, #4]
900144f6:	6803      	ldr	r3, [r0, #0]
900144f8:	695b      	ldr	r3, [r3, #20]
900144fa:	4798      	blx	r3
900144fc:	7225      	strb	r5, [r4, #8]
900144fe:	6860      	ldr	r0, [r4, #4]
90014500:	6803      	ldr	r3, [r0, #0]
90014502:	681b      	ldr	r3, [r3, #0]
90014504:	4798      	blx	r3
90014506:	b928      	cbnz	r0, 90014514 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90014508:	6823      	ldr	r3, [r4, #0]
9001450a:	4620      	mov	r0, r4
9001450c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001450e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014512:	4718      	bx	r3
90014514:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014518:	f7ed bf26 	b.w	90002368 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

9001451c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
9001451c:	b510      	push	{r4, lr}
9001451e:	6082      	str	r2, [r0, #8]
90014520:	2200      	movs	r2, #0
90014522:	4c03      	ldr	r4, [pc, #12]	@ (90014530 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90014524:	e9c0 2203 	strd	r2, r2, [r0, #12]
90014528:	e9c0 4100 	strd	r4, r1, [r0]
9001452c:	bd10      	pop	{r4, pc}
9001452e:	bf00      	nop
90014530:	90030030 	.word	0x90030030

90014534 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90014534:	6840      	ldr	r0, [r0, #4]
90014536:	6803      	ldr	r3, [r0, #0]
90014538:	681b      	ldr	r3, [r3, #0]
9001453a:	4718      	bx	r3
9001453c:	0000      	movs	r0, r0
	...

90014540 <_ZN8touchgfxL10applyNoiseEiihhh>:
90014540:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
90014544:	fb80 0101 	smull	r0, r1, r0, r1
90014548:	4f21      	ldr	r7, [pc, #132]	@ (900145d0 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
9001454a:	461c      	mov	r4, r3
9001454c:	4616      	mov	r6, r2
9001454e:	fba0 bc07 	umull	fp, ip, r0, r7
90014552:	f89d 5018 	ldrb.w	r5, [sp, #24]
90014556:	fb07 cc01 	mla	ip, r7, r1, ip
9001455a:	fbab 010b 	umull	r0, r1, fp, fp
9001455e:	fb0b f70c 	mul.w	r7, fp, ip
90014562:	fb00 f30c 	mul.w	r3, r0, ip
90014566:	eb01 0147 	add.w	r1, r1, r7, lsl #1
9001456a:	fb0b 3301 	mla	r3, fp, r1, r3
9001456e:	fba0 010b 	umull	r0, r1, r0, fp
90014572:	4419      	add	r1, r3
90014574:	a314      	add	r3, pc, #80	@ (adr r3, 900145c8 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
90014576:	e9d3 2300 	ldrd	r2, r3, [r3]
9001457a:	f7ec f8c5 	bl	90000708 <__aeabi_ldivmod>
9001457e:	2ef7      	cmp	r6, #247	@ 0xf7
90014580:	b290      	uxth	r0, r2
90014582:	bf9e      	ittt	ls
90014584:	f002 0207 	andls.w	r2, r2, #7
90014588:	18b6      	addls	r6, r6, r2
9001458a:	b2f6      	uxtbls	r6, r6
9001458c:	2cfb      	cmp	r4, #251	@ 0xfb
9001458e:	bf9e      	ittt	ls
90014590:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
90014594:	18e4      	addls	r4, r4, r3
90014596:	b2e4      	uxtbls	r4, r4
90014598:	2df7      	cmp	r5, #247	@ 0xf7
9001459a:	bf98      	it	ls
9001459c:	f3c0 1042 	ubfxls	r0, r0, #5, #3
900145a0:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900145a4:	bf98      	it	ls
900145a6:	182d      	addls	r5, r5, r0
900145a8:	480a      	ldr	r0, [pc, #40]	@ (900145d4 <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
900145aa:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900145ae:	ea00 2006 	and.w	r0, r0, r6, lsl #8
900145b2:	bf98      	it	ls
900145b4:	b2ed      	uxtbls	r5, r5
900145b6:	4304      	orrs	r4, r0
900145b8:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
900145bc:	b280      	uxth	r0, r0
900145be:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
900145c2:	bf00      	nop
900145c4:	f3af 8000 	nop.w
900145c8:	797a8d77 	.word	0x797a8d77
900145cc:	00000000 	.word	0x00000000
900145d0:	00ec4ba7 	.word	0x00ec4ba7
900145d4:	fffff800 	.word	0xfffff800

900145d8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
900145d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900145dc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
900145e0:	4605      	mov	r5, r0
900145e2:	ed2d 8b02 	vpush	{d8}
900145e6:	b087      	sub	sp, #28
900145e8:	7c41      	ldrb	r1, [r0, #17]
900145ea:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
900145ee:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
900145f2:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
900145f6:	2900      	cmp	r1, #0
900145f8:	f000 809a 	beq.w	90014730 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
900145fc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90014600:	ed90 7a08 	vldr	s14, [r0, #32]
90014604:	454a      	cmp	r2, r9
90014606:	68c0      	ldr	r0, [r0, #12]
90014608:	db25      	blt.n	90014656 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
9001460a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001460e:	f640 72fc 	movw	r2, #4092	@ 0xffc
90014612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014616:	bfc8      	it	gt
90014618:	2200      	movgt	r2, #0
9001461a:	5882      	ldr	r2, [r0, r2]
9001461c:	2100      	movs	r1, #0
9001461e:	ea4f 2812 	mov.w	r8, r2, lsr #8
90014622:	7c2d      	ldrb	r5, [r5, #16]
90014624:	0950      	lsrs	r0, r2, #5
90014626:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
9001462a:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
9001462e:	eb04 0746 	add.w	r7, r4, r6, lsl #1
90014632:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90014636:	2d00      	cmp	r5, #0
90014638:	d044      	beq.n	900146c4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
9001463a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001463e:	d141      	bne.n	900146c4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90014640:	bb61      	cbnz	r1, 9001469c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
90014642:	ea4e 0000 	orr.w	r0, lr, r0
90014646:	ea4c 0500 	orr.w	r5, ip, r0
9001464a:	42bc      	cmp	r4, r7
9001464c:	f080 8214 	bcs.w	90014a78 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90014650:	f824 5b02 	strh.w	r5, [r4], #2
90014654:	e7f9      	b.n	9001464a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
90014656:	f9b5 7008 	ldrsh.w	r7, [r5, #8]
9001465a:	454f      	cmp	r7, r9
9001465c:	dc08      	bgt.n	90014670 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
9001465e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90014662:	f640 72fc 	movw	r2, #4092	@ 0xffc
90014666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001466a:	bfd8      	it	le
9001466c:	2200      	movle	r2, #0
9001466e:	e7d4      	b.n	9001461a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90014670:	eba9 0202 	sub.w	r2, r9, r2
90014674:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90014678:	ee07 2a90 	vmov	s15, r2
9001467c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014680:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90014684:	ee67 7a87 	vmul.f32	s15, s15, s14
90014688:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001468c:	ee17 2a90 	vmov	r2, s15
90014690:	bfd8      	it	le
90014692:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
90014696:	0092      	lsls	r2, r2, #2
90014698:	5882      	ldr	r2, [r0, r2]
9001469a:	e7c0      	b.n	9001461e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
9001469c:	b2d5      	uxtb	r5, r2
9001469e:	f3c2 4a07 	ubfx	sl, r2, #16, #8
900146a2:	fa5f f888 	uxtb.w	r8, r8
900146a6:	461e      	mov	r6, r3
900146a8:	42bc      	cmp	r4, r7
900146aa:	f080 81e5 	bcs.w	90014a78 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900146ae:	4630      	mov	r0, r6
900146b0:	9500      	str	r5, [sp, #0]
900146b2:	4643      	mov	r3, r8
900146b4:	4652      	mov	r2, sl
900146b6:	4649      	mov	r1, r9
900146b8:	3601      	adds	r6, #1
900146ba:	f7ff ff41 	bl	90014540 <_ZN8touchgfxL10applyNoiseEiihhh>
900146be:	f824 0b02 	strh.w	r0, [r4], #2
900146c2:	e7f1      	b.n	900146a8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
900146c4:	0e12      	lsrs	r2, r2, #24
900146c6:	26ff      	movs	r6, #255	@ 0xff
900146c8:	fb02 f20a 	mul.w	r2, r2, sl
900146cc:	1c53      	adds	r3, r2, #1
900146ce:	eb03 2222 	add.w	r2, r3, r2, asr #8
900146d2:	1212      	asrs	r2, r2, #8
900146d4:	fb02 f50c 	mul.w	r5, r2, ip
900146d8:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 90014a8c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
900146dc:	fb02 f10e 	mul.w	r1, r2, lr
900146e0:	4350      	muls	r0, r2
900146e2:	43d2      	mvns	r2, r2
900146e4:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
900146e8:	42bc      	cmp	r4, r7
900146ea:	f080 81c5 	bcs.w	90014a78 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900146ee:	f8b4 e000 	ldrh.w	lr, [r4]
900146f2:	ea0e 030c 	and.w	r3, lr, ip
900146f6:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
900146fa:	f00e 0e1f 	and.w	lr, lr, #31
900146fe:	fb02 1303 	mla	r3, r2, r3, r1
90014702:	fb02 0808 	mla	r8, r2, r8, r0
90014706:	fb02 5e0e 	mla	lr, r2, lr, r5
9001470a:	fb93 f3f6 	sdiv	r3, r3, r6
9001470e:	fb98 f8f6 	sdiv	r8, r8, r6
90014712:	fb9e fef6 	sdiv	lr, lr, r6
90014716:	ea03 030c 	and.w	r3, r3, ip
9001471a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001471e:	f00e 0e1f 	and.w	lr, lr, #31
90014722:	ea43 0308 	orr.w	r3, r3, r8
90014726:	ea43 030e 	orr.w	r3, r3, lr
9001472a:	f824 3b02 	strh.w	r3, [r4], #2
9001472e:	e7db      	b.n	900146e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90014730:	7c82      	ldrb	r2, [r0, #18]
90014732:	2a00      	cmp	r2, #0
90014734:	d04f      	beq.n	900147d6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
90014736:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9001473a:	ee07 2a90 	vmov	s15, r2
9001473e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90014742:	ee07 3a10 	vmov	s14, r3
90014746:	461f      	mov	r7, r3
90014748:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9001474c:	eef4 6ae7 	vcmpe.f32	s13, s15
90014750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014754:	f200 8095 	bhi.w	90014882 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90014758:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001475c:	f640 71fc 	movw	r1, #4092	@ 0xffc
90014760:	68ea      	ldr	r2, [r5, #12]
90014762:	f895 c010 	ldrb.w	ip, [r5, #16]
90014766:	ee37 7a87 	vadd.f32	s14, s15, s14
9001476a:	ee37 7a66 	vsub.f32	s14, s14, s13
9001476e:	ee06 6a90 	vmov	s13, r6
90014772:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90014776:	eeb4 7ae6 	vcmpe.f32	s14, s13
9001477a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001477e:	bf4a      	itet	mi
90014780:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
90014784:	9602      	strpl	r6, [sp, #8]
90014786:	ed8d 7a02 	vstrmi	s14, [sp, #8]
9001478a:	ed95 7a08 	vldr	s14, [r5, #32]
9001478e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90014792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014796:	bfc8      	it	gt
90014798:	2100      	movgt	r1, #0
9001479a:	5852      	ldr	r2, [r2, r1]
9001479c:	9902      	ldr	r1, [sp, #8]
9001479e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
900147a2:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900147a6:	0950      	lsrs	r0, r2, #5
900147a8:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
900147ac:	9103      	str	r1, [sp, #12]
900147ae:	f3c2 01c4 	ubfx	r1, r2, #3, #5
900147b2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900147b6:	f1bc 0f00 	cmp.w	ip, #0
900147ba:	d024      	beq.n	90014806 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900147bc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900147c0:	d121      	bne.n	90014806 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900147c2:	ea4b 0b00 	orr.w	fp, fp, r0
900147c6:	ea41 010b 	orr.w	r1, r1, fp
900147ca:	9a03      	ldr	r2, [sp, #12]
900147cc:	4294      	cmp	r4, r2
900147ce:	d255      	bcs.n	9001487c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900147d0:	f824 1b02 	strh.w	r1, [r4], #2
900147d4:	e7f9      	b.n	900147ca <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
900147d6:	ee07 9a10 	vmov	s14, r9
900147da:	edd0 7a06 	vldr	s15, [r0, #24]
900147de:	edd0 6a05 	vldr	s13, [r0, #20]
900147e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900147e6:	ee37 7a67 	vsub.f32	s14, s14, s15
900147ea:	eec7 7a26 	vdiv.f32	s15, s14, s13
900147ee:	ed90 7a08 	vldr	s14, [r0, #32]
900147f2:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900147f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900147fa:	bf44      	itt	mi
900147fc:	ed90 7a07 	vldrmi	s14, [r0, #28]
90014800:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
90014804:	e79d      	b.n	90014742 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
90014806:	0e12      	lsrs	r2, r2, #24
90014808:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 90014a8c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001480c:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90014810:	fb02 f20a 	mul.w	r2, r2, sl
90014814:	f102 0c01 	add.w	ip, r2, #1
90014818:	eb0c 2222 	add.w	r2, ip, r2, asr #8
9001481c:	1212      	asrs	r2, r2, #8
9001481e:	4350      	muls	r0, r2
90014820:	4351      	muls	r1, r2
90014822:	fb02 fb0b 	mul.w	fp, r2, fp
90014826:	43d2      	mvns	r2, r2
90014828:	9004      	str	r0, [sp, #16]
9001482a:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001482e:	9105      	str	r1, [sp, #20]
90014830:	9903      	ldr	r1, [sp, #12]
90014832:	428c      	cmp	r4, r1
90014834:	d222      	bcs.n	9001487c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
90014836:	8820      	ldrh	r0, [r4, #0]
90014838:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
9001483c:	ea00 0c08 	and.w	ip, r0, r8
90014840:	460f      	mov	r7, r1
90014842:	9904      	ldr	r1, [sp, #16]
90014844:	fb02 bc0c 	mla	ip, r2, ip, fp
90014848:	fb02 1107 	mla	r1, r2, r7, r1
9001484c:	fb9c fcfe 	sdiv	ip, ip, lr
90014850:	fb91 f1fe 	sdiv	r1, r1, lr
90014854:	ea0c 0c08 	and.w	ip, ip, r8
90014858:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001485c:	ea4c 0101 	orr.w	r1, ip, r1
90014860:	f000 0c1f 	and.w	ip, r0, #31
90014864:	9805      	ldr	r0, [sp, #20]
90014866:	fb02 0c0c 	mla	ip, r2, ip, r0
9001486a:	fb9c fcfe 	sdiv	ip, ip, lr
9001486e:	f00c 0c1f 	and.w	ip, ip, #31
90014872:	ea41 010c 	orr.w	r1, r1, ip
90014876:	f824 1b02 	strh.w	r1, [r4], #2
9001487a:	e7d9      	b.n	90014830 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
9001487c:	9a02      	ldr	r2, [sp, #8]
9001487e:	441a      	add	r2, r3
90014880:	4617      	mov	r7, r2
90014882:	441e      	add	r6, r3
90014884:	b236      	sxth	r6, r6
90014886:	42be      	cmp	r6, r7
90014888:	f340 80f6 	ble.w	90014a78 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001488c:	ed95 7a07 	vldr	s14, [r5, #28]
90014890:	ee06 7a90 	vmov	s13, r7
90014894:	ee37 7a87 	vadd.f32	s14, s15, s14
90014898:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001489c:	eeb4 7ae6 	vcmpe.f32	s14, s13
900148a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900148a4:	f340 80b2 	ble.w	90014a0c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
900148a8:	ee06 6a10 	vmov	s12, r6
900148ac:	ee76 7ae7 	vsub.f32	s15, s13, s15
900148b0:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 90014a84 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
900148b4:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900148b8:	7c2b      	ldrb	r3, [r5, #16]
900148ba:	eeb4 7ac6 	vcmpe.f32	s14, s12
900148be:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 90014a88 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
900148c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900148c6:	bfd6      	itet	le
900148c8:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
900148cc:	46b0      	movgt	r8, r6
900148ce:	ee17 8a10 	vmovle	r8, s14
900148d2:	ed95 7a08 	vldr	s14, [r5, #32]
900148d6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900148da:	eba8 0707 	sub.w	r7, r8, r7
900148de:	eb04 0747 	add.w	r7, r4, r7, lsl #1
900148e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900148e6:	fe38 8a06 	vselgt.f32	s16, s16, s12
900148ea:	eea7 8a27 	vfma.f32	s16, s14, s15
900148ee:	b1db      	cbz	r3, 90014928 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900148f0:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900148f4:	d118      	bne.n	90014928 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
900148f6:	42bc      	cmp	r4, r7
900148f8:	d262      	bcs.n	900149c0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
900148fa:	eefd 7ac8 	vcvt.s32.f32	s15, s16
900148fe:	68eb      	ldr	r3, [r5, #12]
90014900:	4649      	mov	r1, r9
90014902:	ee17 0a90 	vmov	r0, s15
90014906:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
9001490a:	b2d3      	uxtb	r3, r2
9001490c:	9300      	str	r3, [sp, #0]
9001490e:	f3c2 2307 	ubfx	r3, r2, #8, #8
90014912:	f3c2 4207 	ubfx	r2, r2, #16, #8
90014916:	f7ff fe13 	bl	90014540 <_ZN8touchgfxL10applyNoiseEiihhh>
9001491a:	f824 0b02 	strh.w	r0, [r4], #2
9001491e:	edd5 7a08 	vldr	s15, [r5, #32]
90014922:	ee38 8a27 	vadd.f32	s16, s16, s15
90014926:	e7e6      	b.n	900148f6 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90014928:	f8df b160 	ldr.w	fp, [pc, #352]	@ 90014a8c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001492c:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90014930:	42bc      	cmp	r4, r7
90014932:	d245      	bcs.n	900149c0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90014934:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90014938:	68eb      	ldr	r3, [r5, #12]
9001493a:	f8b4 e000 	ldrh.w	lr, [r4]
9001493e:	ee17 2a90 	vmov	r2, s15
90014942:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90014946:	0e13      	lsrs	r3, r2, #24
90014948:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
9001494c:	fb03 f30a 	mul.w	r3, r3, sl
90014950:	b289      	uxth	r1, r1
90014952:	1c58      	adds	r0, r3, #1
90014954:	eb00 2023 	add.w	r0, r0, r3, asr #8
90014958:	ea0e 030b 	and.w	r3, lr, fp
9001495c:	1200      	asrs	r0, r0, #8
9001495e:	ea6f 0c00 	mvn.w	ip, r0
90014962:	fa5f fc8c 	uxtb.w	ip, ip
90014966:	fb0c f303 	mul.w	r3, ip, r3
9001496a:	fb00 3101 	mla	r1, r0, r1, r3
9001496e:	fb91 f1f9 	sdiv	r1, r1, r9
90014972:	ea01 030b 	and.w	r3, r1, fp
90014976:	9302      	str	r3, [sp, #8]
90014978:	0953      	lsrs	r3, r2, #5
9001497a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001497e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90014982:	4619      	mov	r1, r3
90014984:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
90014988:	f00e 0e1f 	and.w	lr, lr, #31
9001498c:	fb0c f303 	mul.w	r3, ip, r3
90014990:	fb0c fc0e 	mul.w	ip, ip, lr
90014994:	fb00 3301 	mla	r3, r0, r1, r3
90014998:	9902      	ldr	r1, [sp, #8]
9001499a:	fb00 c002 	mla	r0, r0, r2, ip
9001499e:	fb93 f3f9 	sdiv	r3, r3, r9
900149a2:	fb90 f0f9 	sdiv	r0, r0, r9
900149a6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900149aa:	f000 001f 	and.w	r0, r0, #31
900149ae:	4319      	orrs	r1, r3
900149b0:	4301      	orrs	r1, r0
900149b2:	f824 1b02 	strh.w	r1, [r4], #2
900149b6:	edd5 7a08 	vldr	s15, [r5, #32]
900149ba:	ee38 8a27 	vadd.f32	s16, s16, s15
900149be:	e7b7      	b.n	90014930 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
900149c0:	4546      	cmp	r6, r8
900149c2:	dd59      	ble.n	90014a78 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900149c4:	edd5 7a08 	vldr	s15, [r5, #32]
900149c8:	f640 73fc 	movw	r3, #4092	@ 0xffc
900149cc:	68ea      	ldr	r2, [r5, #12]
900149ce:	eba6 0608 	sub.w	r6, r6, r8
900149d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900149d6:	7c29      	ldrb	r1, [r5, #16]
900149d8:	eb04 0646 	add.w	r6, r4, r6, lsl #1
900149dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900149e0:	bfd8      	it	le
900149e2:	2300      	movle	r3, #0
900149e4:	58d2      	ldr	r2, [r2, r3]
900149e6:	0a10      	lsrs	r0, r2, #8
900149e8:	f3c2 07c4 	ubfx	r7, r2, #3, #5
900149ec:	0953      	lsrs	r3, r2, #5
900149ee:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900149f2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900149f6:	b159      	cbz	r1, 90014a10 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900149f8:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900149fc:	d108      	bne.n	90014a10 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
900149fe:	4318      	orrs	r0, r3
90014a00:	4338      	orrs	r0, r7
90014a02:	42b4      	cmp	r4, r6
90014a04:	d238      	bcs.n	90014a78 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90014a06:	f824 0b02 	strh.w	r0, [r4], #2
90014a0a:	e7fa      	b.n	90014a02 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90014a0c:	46b8      	mov	r8, r7
90014a0e:	e7d9      	b.n	900149c4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90014a10:	0e12      	lsrs	r2, r2, #24
90014a12:	f8df c078 	ldr.w	ip, [pc, #120]	@ 90014a8c <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90014a16:	fb02 f10a 	mul.w	r1, r2, sl
90014a1a:	1c4a      	adds	r2, r1, #1
90014a1c:	eb02 2221 	add.w	r2, r2, r1, asr #8
90014a20:	1212      	asrs	r2, r2, #8
90014a22:	fb02 f507 	mul.w	r5, r2, r7
90014a26:	27ff      	movs	r7, #255	@ 0xff
90014a28:	4350      	muls	r0, r2
90014a2a:	4353      	muls	r3, r2
90014a2c:	43d2      	mvns	r2, r2
90014a2e:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90014a32:	42b4      	cmp	r4, r6
90014a34:	d220      	bcs.n	90014a78 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90014a36:	f8b4 e000 	ldrh.w	lr, [r4]
90014a3a:	ea0e 010c 	and.w	r1, lr, ip
90014a3e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90014a42:	f00e 0e1f 	and.w	lr, lr, #31
90014a46:	fb02 0101 	mla	r1, r2, r1, r0
90014a4a:	fb02 3808 	mla	r8, r2, r8, r3
90014a4e:	fb02 5e0e 	mla	lr, r2, lr, r5
90014a52:	fb91 f1f7 	sdiv	r1, r1, r7
90014a56:	fb98 f8f7 	sdiv	r8, r8, r7
90014a5a:	fb9e fef7 	sdiv	lr, lr, r7
90014a5e:	ea01 010c 	and.w	r1, r1, ip
90014a62:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90014a66:	f00e 0e1f 	and.w	lr, lr, #31
90014a6a:	ea41 0108 	orr.w	r1, r1, r8
90014a6e:	ea41 010e 	orr.w	r1, r1, lr
90014a72:	f824 1b02 	strh.w	r1, [r4], #2
90014a76:	e7dc      	b.n	90014a32 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
90014a78:	b007      	add	sp, #28
90014a7a:	ecbd 8b02 	vpop	{d8}
90014a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014a82:	bf00      	nop
90014a84:	00000000 	.word	0x00000000
90014a88:	447ffffe 	.word	0x447ffffe
90014a8c:	fffff800 	.word	0xfffff800

90014a90 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
90014a90:	4770      	bx	lr

90014a92 <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
90014a92:	4770      	bx	lr

90014a94 <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
90014a94:	b510      	push	{r4, lr}
90014a96:	4604      	mov	r4, r0
90014a98:	2124      	movs	r1, #36	@ 0x24
90014a9a:	f017 f85e 	bl	9002bb5a <_ZdlPvj>
90014a9e:	4620      	mov	r0, r4
90014aa0:	bd10      	pop	{r4, pc}
	...

90014aa4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90014aa4:	094a      	lsrs	r2, r1, #5
90014aa6:	4b06      	ldr	r3, [pc, #24]	@ (90014ac0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90014aa8:	60c1      	str	r1, [r0, #12]
90014aaa:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90014aae:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90014ab2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90014ab6:	4313      	orrs	r3, r2
90014ab8:	4319      	orrs	r1, r3
90014aba:	8201      	strh	r1, [r0, #16]
90014abc:	4770      	bx	lr
90014abe:	bf00      	nop
90014ac0:	fffff800 	.word	0xfffff800

90014ac4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90014ac4:	f1a0 0008 	sub.w	r0, r0, #8
90014ac8:	e7ec      	b.n	90014aa4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90014aca:	bf00      	nop

90014acc <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90014acc:	b508      	push	{r3, lr}
90014ace:	4b05      	ldr	r3, [pc, #20]	@ (90014ae4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90014ad0:	6818      	ldr	r0, [r3, #0]
90014ad2:	6803      	ldr	r3, [r0, #0]
90014ad4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
90014ad8:	4798      	blx	r3
90014ada:	1e43      	subs	r3, r0, #1
90014adc:	4258      	negs	r0, r3
90014ade:	4158      	adcs	r0, r3
90014ae0:	bd08      	pop	{r3, pc}
90014ae2:	bf00      	nop
90014ae4:	24024598 	.word	0x24024598

90014ae8 <_ZN8touchgfx13PainterRGB565D1Ev>:
90014ae8:	4770      	bx	lr

90014aea <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90014aea:	3808      	subs	r0, #8
90014aec:	4770      	bx	lr

90014aee <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90014aee:	b430      	push	{r4, r5}
90014af0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90014af4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90014af8:	8a02      	ldrh	r2, [r0, #16]
90014afa:	f89d 3010 	ldrb.w	r3, [sp, #16]
90014afe:	4629      	mov	r1, r5
90014b00:	9202      	str	r2, [sp, #8]
90014b02:	68c2      	ldr	r2, [r0, #12]
90014b04:	4620      	mov	r0, r4
90014b06:	bc30      	pop	{r4, r5}
90014b08:	f7ed bf24 	b.w	90002954 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90014b0c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90014b0c:	f7ed befe 	b.w	9000290c <_ZN8touchgfx5paint8tearDownEv>

90014b10 <_ZN8touchgfx13PainterRGB565D0Ev>:
90014b10:	b510      	push	{r4, lr}
90014b12:	4604      	mov	r4, r0
90014b14:	2114      	movs	r1, #20
90014b16:	f017 f820 	bl	9002bb5a <_ZdlPvj>
90014b1a:	4620      	mov	r0, r4
90014b1c:	bd10      	pop	{r4, pc}

90014b1e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90014b1e:	f1a0 0008 	sub.w	r0, r0, #8
90014b22:	e7f5      	b.n	90014b10 <_ZN8touchgfx13PainterRGB565D0Ev>

90014b24 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
90014b24:	2300      	movs	r3, #0
90014b26:	84c3      	strh	r3, [r0, #38]	@ 0x26
90014b28:	8503      	strh	r3, [r0, #40]	@ 0x28
90014b2a:	8543      	strh	r3, [r0, #42]	@ 0x2a
90014b2c:	8583      	strh	r3, [r0, #44]	@ 0x2c
90014b2e:	6980      	ldr	r0, [r0, #24]
90014b30:	b110      	cbz	r0, 90014b38 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
90014b32:	6803      	ldr	r3, [r0, #0]
90014b34:	691b      	ldr	r3, [r3, #16]
90014b36:	4718      	bx	r3
90014b38:	4770      	bx	lr

90014b3a <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90014b3a:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90014b3e:	4770      	bx	lr

90014b40 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90014b40:	b538      	push	{r3, r4, r5, lr}
90014b42:	0e0b      	lsrs	r3, r1, #24
90014b44:	4604      	mov	r4, r0
90014b46:	460d      	mov	r5, r1
90014b48:	7783      	strb	r3, [r0, #30]
90014b4a:	6803      	ldr	r3, [r0, #0]
90014b4c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90014b4e:	4798      	blx	r3
90014b50:	6803      	ldr	r3, [r0, #0]
90014b52:	4629      	mov	r1, r5
90014b54:	689b      	ldr	r3, [r3, #8]
90014b56:	4798      	blx	r3
90014b58:	6823      	ldr	r3, [r4, #0]
90014b5a:	4620      	mov	r0, r4
90014b5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90014b5e:	4798      	blx	r3
90014b60:	61a0      	str	r0, [r4, #24]
90014b62:	bd38      	pop	{r3, r4, r5, pc}

90014b64 <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
90014b64:	7741      	strb	r1, [r0, #29]
90014b66:	4770      	bx	lr

90014b68 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90014b68:	b530      	push	{r4, r5, lr}
90014b6a:	460d      	mov	r5, r1
90014b6c:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90014b70:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90014b72:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90014b74:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90014b76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90014b78:	682b      	ldr	r3, [r5, #0]
90014b7a:	6023      	str	r3, [r4, #0]
90014b7c:	bd30      	pop	{r4, r5, pc}

90014b7e <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
90014b7e:	b538      	push	{r3, r4, r5, lr}
90014b80:	4604      	mov	r4, r0
90014b82:	1d03      	adds	r3, r0, #4
90014b84:	6808      	ldr	r0, [r1, #0]
90014b86:	2500      	movs	r5, #0
90014b88:	6849      	ldr	r1, [r1, #4]
90014b8a:	c303      	stmia	r3!, {r0, r1}
90014b8c:	6813      	ldr	r3, [r2, #0]
90014b8e:	f104 0034 	add.w	r0, r4, #52	@ 0x34
90014b92:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
90014b96:	6853      	ldr	r3, [r2, #4]
90014b98:	61a5      	str	r5, [r4, #24]
90014b9a:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
90014b9e:	f006 f915 	bl	9001adcc <_ZN8touchgfx9Matrix3x35resetEv>
90014ba2:	23ff      	movs	r3, #255	@ 0xff
90014ba4:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
90014ba8:	7763      	strb	r3, [r4, #29]
90014baa:	77a3      	strb	r3, [r4, #30]
90014bac:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
90014bb0:	6323      	str	r3, [r4, #48]	@ 0x30
90014bb2:	2301      	movs	r3, #1
90014bb4:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90014bb8:	bd38      	pop	{r3, r4, r5, pc}
	...

90014bbc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
90014bbc:	ee70 7a41 	vsub.f32	s15, s0, s2
90014bc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90014bc4:	eef5 7a40 	vcmp.f32	s15, #0.0
90014bc8:	4605      	mov	r5, r0
90014bca:	ed2d 8b0a 	vpush	{d8-d12}
90014bce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014bd2:	b086      	sub	sp, #24
90014bd4:	eeb0 ba40 	vmov.f32	s22, s0
90014bd8:	6802      	ldr	r2, [r0, #0]
90014bda:	eef0 ba60 	vmov.f32	s23, s1
90014bde:	f89d 6058 	ldrb.w	r6, [sp, #88]	@ 0x58
90014be2:	eef0 aa41 	vmov.f32	s21, s2
90014be6:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
90014be8:	eeb0 aa61 	vmov.f32	s20, s3
90014bec:	eeb0 ca42 	vmov.f32	s24, s4
90014bf0:	eef0 ca62 	vmov.f32	s25, s5
90014bf4:	d112      	bne.n	90014c1c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90014bf6:	ee70 7ae1 	vsub.f32	s15, s1, s3
90014bfa:	eef5 7a40 	vcmp.f32	s15, #0.0
90014bfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014c02:	d10b      	bne.n	90014c1c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
90014c04:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90014c08:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90014c0a:	3901      	subs	r1, #1
90014c0c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90014c10:	b006      	add	sp, #24
90014c12:	ecbd 8b0a 	vpop	{d8-d12}
90014c16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90014c1a:	4710      	bx	r2
90014c1c:	23ff      	movs	r3, #255	@ 0xff
90014c1e:	4628      	mov	r0, r5
90014c20:	f105 0834 	add.w	r8, r5, #52	@ 0x34
90014c24:	77ab      	strb	r3, [r5, #30]
90014c26:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90014c28:	4798      	blx	r3
90014c2a:	eeb0 0a4b 	vmov.f32	s0, s22
90014c2e:	eef0 0a6b 	vmov.f32	s1, s23
90014c32:	4604      	mov	r4, r0
90014c34:	4640      	mov	r0, r8
90014c36:	f006 f978 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014c3a:	eef0 8a40 	vmov.f32	s17, s0
90014c3e:	ed8d 0a00 	vstr	s0, [sp]
90014c42:	eeb0 0a6a 	vmov.f32	s0, s21
90014c46:	eef0 9a60 	vmov.f32	s19, s1
90014c4a:	edcd 0a01 	vstr	s1, [sp, #4]
90014c4e:	4640      	mov	r0, r8
90014c50:	eef0 0a4a 	vmov.f32	s1, s20
90014c54:	f006 f969 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014c58:	eef4 8a40 	vcmp.f32	s17, s0
90014c5c:	eeb0 8a40 	vmov.f32	s16, s0
90014c60:	ed8d 0a02 	vstr	s0, [sp, #8]
90014c64:	eeb0 9a60 	vmov.f32	s18, s1
90014c68:	edcd 0a03 	vstr	s1, [sp, #12]
90014c6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014c70:	eef4 9a60 	vcmp.f32	s19, s1
90014c74:	bf0c      	ite	eq
90014c76:	2301      	moveq	r3, #1
90014c78:	2300      	movne	r3, #0
90014c7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014c7e:	eef4 8a40 	vcmp.f32	s17, s0
90014c82:	7463      	strb	r3, [r4, #17]
90014c84:	bf0c      	ite	eq
90014c86:	2301      	moveq	r3, #1
90014c88:	2300      	movne	r3, #0
90014c8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014c8e:	74a3      	strb	r3, [r4, #18]
90014c90:	d024      	beq.n	90014cdc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90014c92:	eef4 9a60 	vcmp.f32	s19, s1
90014c96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014c9a:	d01f      	beq.n	90014cdc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90014c9c:	ee3a aa6b 	vsub.f32	s20, s20, s23
90014ca0:	4640      	mov	r0, r8
90014ca2:	ee7a aacb 	vsub.f32	s21, s21, s22
90014ca6:	eeb0 0a4b 	vmov.f32	s0, s22
90014caa:	eeca 7a2c 	vdiv.f32	s15, s20, s25
90014cae:	ee8a 7a8c 	vdiv.f32	s14, s21, s24
90014cb2:	eef0 0a6b 	vmov.f32	s1, s23
90014cb6:	eea7 0acc 	vfms.f32	s0, s15, s24
90014cba:	eeec 0a87 	vfma.f32	s1, s25, s14
90014cbe:	f006 f934 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014cc2:	ed8d 0a04 	vstr	s0, [sp, #16]
90014cc6:	ee30 0a68 	vsub.f32	s0, s0, s17
90014cca:	eeb5 0a40 	vcmp.f32	s0, #0.0
90014cce:	edcd 0a05 	vstr	s1, [sp, #20]
90014cd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014cd6:	d121      	bne.n	90014d1c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x160>
90014cd8:	2301      	movs	r3, #1
90014cda:	74a3      	strb	r3, [r4, #18]
90014cdc:	7c63      	ldrb	r3, [r4, #17]
90014cde:	2b00      	cmp	r3, #0
90014ce0:	d051      	beq.n	90014d86 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ca>
90014ce2:	ee39 7a69 	vsub.f32	s14, s18, s19
90014ce6:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 90014ddc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90014cea:	eef4 9ac9 	vcmpe.f32	s19, s18
90014cee:	eec6 7a87 	vdiv.f32	s15, s13, s14
90014cf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014cf6:	edc4 7a08 	vstr	s15, [r4, #32]
90014cfa:	eefd 7ac9 	vcvt.s32.f32	s15, s18
90014cfe:	ee17 3a90 	vmov	r3, s15
90014d02:	eefd 7ae9 	vcvt.s32.f32	s15, s19
90014d06:	b21a      	sxth	r2, r3
90014d08:	ee17 3a90 	vmov	r3, s15
90014d0c:	bf48      	it	mi
90014d0e:	8122      	strhmi	r2, [r4, #8]
90014d10:	b21b      	sxth	r3, r3
90014d12:	bf56      	itet	pl
90014d14:	80e2      	strhpl	r2, [r4, #6]
90014d16:	80e3      	strhmi	r3, [r4, #6]
90014d18:	8123      	strhpl	r3, [r4, #8]
90014d1a:	e02c      	b.n	90014d76 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90014d1c:	ee70 0ae9 	vsub.f32	s1, s1, s19
90014d20:	eec0 7a80 	vdiv.f32	s15, s1, s0
90014d24:	eef5 7a40 	vcmp.f32	s15, #0.0
90014d28:	edc4 7a05 	vstr	s15, [r4, #20]
90014d2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014d30:	d102      	bne.n	90014d38 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x17c>
90014d32:	2301      	movs	r3, #1
90014d34:	7463      	strb	r3, [r4, #17]
90014d36:	e7d1      	b.n	90014cdc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x120>
90014d38:	eeb0 7a69 	vmov.f32	s14, s19
90014d3c:	ee39 9a69 	vsub.f32	s18, s18, s19
90014d40:	ee38 8a68 	vsub.f32	s16, s16, s17
90014d44:	eea8 7ae7 	vfms.f32	s14, s17, s15
90014d48:	ed84 7a06 	vstr	s14, [r4, #24]
90014d4c:	ee89 7a27 	vdiv.f32	s14, s18, s15
90014d50:	ee38 8a47 	vsub.f32	s16, s16, s14
90014d54:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 90014de0 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x224>
90014d58:	eec7 7a08 	vdiv.f32	s15, s14, s16
90014d5c:	ed84 8a07 	vstr	s16, [r4, #28]
90014d60:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90014d64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014d68:	edc4 7a08 	vstr	s15, [r4, #32]
90014d6c:	d503      	bpl.n	90014d76 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90014d6e:	eeb1 8a48 	vneg.f32	s16, s16
90014d72:	ed84 8a07 	vstr	s16, [r4, #28]
90014d76:	60e7      	str	r7, [r4, #12]
90014d78:	7426      	strb	r6, [r4, #16]
90014d7a:	61ac      	str	r4, [r5, #24]
90014d7c:	b006      	add	sp, #24
90014d7e:	ecbd 8b0a 	vpop	{d8-d12}
90014d82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014d86:	7ca3      	ldrb	r3, [r4, #18]
90014d88:	2b00      	cmp	r3, #0
90014d8a:	d0f4      	beq.n	90014d76 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90014d8c:	ee38 7a68 	vsub.f32	s14, s16, s17
90014d90:	eddf 6a12 	vldr	s13, [pc, #72]	@ 90014ddc <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x220>
90014d94:	eef4 8ac8 	vcmpe.f32	s17, s16
90014d98:	eec6 7a87 	vdiv.f32	s15, s13, s14
90014d9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014da0:	edc4 7a08 	vstr	s15, [r4, #32]
90014da4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90014da8:	ee17 3a90 	vmov	r3, s15
90014dac:	eefd 7ae8 	vcvt.s32.f32	s15, s17
90014db0:	b21a      	sxth	r2, r3
90014db2:	ee17 3a90 	vmov	r3, s15
90014db6:	bf48      	it	mi
90014db8:	8122      	strhmi	r2, [r4, #8]
90014dba:	b21b      	sxth	r3, r3
90014dbc:	bf56      	itet	pl
90014dbe:	80e2      	strhpl	r2, [r4, #6]
90014dc0:	80e3      	strhmi	r3, [r4, #6]
90014dc2:	8123      	strhpl	r3, [r4, #8]
90014dc4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
90014dc8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
90014dcc:	1a9b      	subs	r3, r3, r2
90014dce:	ee07 3a90 	vmov	s15, r3
90014dd2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90014dd6:	edc4 7a07 	vstr	s15, [r4, #28]
90014dda:	e7cc      	b.n	90014d76 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ba>
90014ddc:	447ffffe 	.word	0x447ffffe
90014de0:	44800000 	.word	0x44800000

90014de4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90014de4:	b510      	push	{r4, lr}
90014de6:	ed2d 8b02 	vpush	{d8}
90014dea:	eef0 8a62 	vmov.f32	s17, s5
90014dee:	2100      	movs	r1, #0
90014df0:	4604      	mov	r4, r0
90014df2:	eeb0 8a42 	vmov.f32	s16, s4
90014df6:	f016 fabb 	bl	9002b370 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90014dfa:	eef0 7a68 	vmov.f32	s15, s17
90014dfe:	6823      	ldr	r3, [r4, #0]
90014e00:	4620      	mov	r0, r4
90014e02:	689b      	ldr	r3, [r3, #8]
90014e04:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e08:	ee17 2a90 	vmov	r2, s15
90014e0c:	eef0 7a48 	vmov.f32	s15, s16
90014e10:	ecbd 8b02 	vpop	{d8}
90014e14:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014e1c:	ee17 1a90 	vmov	r1, s15
90014e20:	4718      	bx	r3

90014e22 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90014e22:	b510      	push	{r4, lr}
90014e24:	ed2d 8b02 	vpush	{d8}
90014e28:	eef0 8a63 	vmov.f32	s17, s7
90014e2c:	2100      	movs	r1, #0
90014e2e:	4604      	mov	r4, r0
90014e30:	eeb0 8a43 	vmov.f32	s16, s6
90014e34:	f016 fb5e 	bl	9002b4f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90014e38:	eef0 7a68 	vmov.f32	s15, s17
90014e3c:	6823      	ldr	r3, [r4, #0]
90014e3e:	4620      	mov	r0, r4
90014e40:	689b      	ldr	r3, [r3, #8]
90014e42:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e46:	ee17 2a90 	vmov	r2, s15
90014e4a:	eef0 7a48 	vmov.f32	s15, s16
90014e4e:	ecbd 8b02 	vpop	{d8}
90014e52:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014e5a:	ee17 1a90 	vmov	r1, s15
90014e5e:	4718      	bx	r3

90014e60 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90014e60:	b513      	push	{r0, r1, r4, lr}
90014e62:	4604      	mov	r4, r0
90014e64:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90014e66:	f006 f860 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014e6a:	eef0 7a60 	vmov.f32	s15, s1
90014e6e:	4620      	mov	r0, r4
90014e70:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e74:	ee17 2a90 	vmov	r2, s15
90014e78:	eef0 7a40 	vmov.f32	s15, s0
90014e7c:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014e80:	ee17 1a90 	vmov	r1, s15
90014e84:	b002      	add	sp, #8
90014e86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014e8a:	f016 b9cb 	b.w	9002b224 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
90014e8e:	b513      	push	{r0, r1, r4, lr}
90014e90:	4604      	mov	r4, r0
90014e92:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90014e94:	f006 f849 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90014e98:	eef0 7a60 	vmov.f32	s15, s1
90014e9c:	4620      	mov	r0, r4
90014e9e:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014ea2:	ee17 2a90 	vmov	r2, s15
90014ea6:	eef0 7a40 	vmov.f32	s15, s0
90014eaa:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90014eae:	ee17 1a90 	vmov	r1, s15
90014eb2:	b002      	add	sp, #8
90014eb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014eb8:	f016 ba01 	b.w	9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

90014ebc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
90014ebc:	b5f0      	push	{r4, r5, r6, r7, lr}
90014ebe:	2400      	movs	r4, #0
90014ec0:	9f07      	ldr	r7, [sp, #28]
90014ec2:	f04f 0e01 	mov.w	lr, #1
90014ec6:	4626      	mov	r6, r4
90014ec8:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
90014ecc:	4463      	add	r3, ip
90014ece:	4563      	cmp	r3, ip
90014ed0:	d02d      	beq.n	90014f2e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90014ed2:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90014ed6:	2d06      	cmp	r5, #6
90014ed8:	d8f9      	bhi.n	90014ece <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90014eda:	fa0e f505 	lsl.w	r5, lr, r5
90014ede:	f015 0f66 	tst.w	r5, #102	@ 0x66
90014ee2:	d10d      	bne.n	90014f00 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90014ee4:	f015 0f10 	tst.w	r5, #16
90014ee8:	d117      	bne.n	90014f1a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90014eea:	072d      	lsls	r5, r5, #28
90014eec:	d5ef      	bpl.n	90014ece <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90014eee:	3801      	subs	r0, #1
90014ef0:	b91e      	cbnz	r6, 90014efa <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90014ef2:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90014ef6:	682d      	ldr	r5, [r5, #0]
90014ef8:	600d      	str	r5, [r1, #0]
90014efa:	b96c      	cbnz	r4, 90014f18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014efc:	2601      	movs	r6, #1
90014efe:	e7e6      	b.n	90014ece <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90014f00:	b926      	cbnz	r6, 90014f0c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90014f02:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90014f06:	f853 3c08 	ldr.w	r3, [r3, #-8]
90014f0a:	600b      	str	r3, [r1, #0]
90014f0c:	b924      	cbnz	r4, 90014f18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014f0e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90014f12:	f850 3c04 	ldr.w	r3, [r0, #-4]
90014f16:	6013      	str	r3, [r2, #0]
90014f18:	bdf0      	pop	{r4, r5, r6, r7, pc}
90014f1a:	3801      	subs	r0, #1
90014f1c:	b91c      	cbnz	r4, 90014f26 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90014f1e:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90014f22:	6824      	ldr	r4, [r4, #0]
90014f24:	6014      	str	r4, [r2, #0]
90014f26:	2e00      	cmp	r6, #0
90014f28:	d1f6      	bne.n	90014f18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014f2a:	2401      	movs	r4, #1
90014f2c:	e7cf      	b.n	90014ece <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90014f2e:	b90e      	cbnz	r6, 90014f34 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90014f30:	2300      	movs	r3, #0
90014f32:	600b      	str	r3, [r1, #0]
90014f34:	2c00      	cmp	r4, #0
90014f36:	d1ef      	bne.n	90014f18 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90014f38:	2300      	movs	r3, #0
90014f3a:	e7ec      	b.n	90014f16 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90014f3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90014f3c:	b538      	push	{r3, r4, r5, lr}
90014f3e:	ed2d 8b0a 	vpush	{d8-d12}
90014f42:	eef0 ba40 	vmov.f32	s23, s0
90014f46:	4604      	mov	r4, r0
90014f48:	eeb0 ca60 	vmov.f32	s24, s1
90014f4c:	460d      	mov	r5, r1
90014f4e:	eef0 aa41 	vmov.f32	s21, s2
90014f52:	eeb0 ba61 	vmov.f32	s22, s3
90014f56:	eeb0 9a42 	vmov.f32	s18, s4
90014f5a:	eef0 9a62 	vmov.f32	s19, s5
90014f5e:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90014f62:	ee7b 8a29 	vadd.f32	s17, s22, s19
90014f66:	ee3a 8a89 	vadd.f32	s16, s21, s18
90014f6a:	ee68 8a8a 	vmul.f32	s17, s17, s20
90014f6e:	ee28 8a0a 	vmul.f32	s16, s16, s20
90014f72:	ee3c 0a68 	vsub.f32	s0, s24, s17
90014f76:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90014f7a:	ee20 0a00 	vmul.f32	s0, s0, s0
90014f7e:	eea7 0aa7 	vfma.f32	s0, s15, s15
90014f82:	f016 fe15 	bl	9002bbb0 <sqrtf>
90014f86:	eeb5 0a40 	vcmp.f32	s0, #0.0
90014f8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014f8e:	d12e      	bne.n	90014fee <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90014f90:	ee79 7a6a 	vsub.f32	s15, s18, s21
90014f94:	ee39 7acb 	vsub.f32	s14, s19, s22
90014f98:	eeb0 8a6a 	vmov.f32	s16, s21
90014f9c:	eef0 8a4b 	vmov.f32	s17, s22
90014fa0:	eea7 8a8a 	vfma.f32	s16, s15, s20
90014fa4:	eee7 8a0a 	vfma.f32	s17, s14, s20
90014fa8:	eea7 8a0a 	vfma.f32	s16, s14, s20
90014fac:	eee7 8aca 	vfms.f32	s17, s15, s20
90014fb0:	2d02      	cmp	r5, #2
90014fb2:	dc2f      	bgt.n	90015014 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90014fb4:	3501      	adds	r5, #1
90014fb6:	eef0 1a4b 	vmov.f32	s3, s22
90014fba:	eeb0 1a6a 	vmov.f32	s2, s21
90014fbe:	4620      	mov	r0, r4
90014fc0:	4629      	mov	r1, r5
90014fc2:	eef0 2a68 	vmov.f32	s5, s17
90014fc6:	eeb0 2a48 	vmov.f32	s4, s16
90014fca:	eef0 0a4c 	vmov.f32	s1, s24
90014fce:	eeb0 0a6b 	vmov.f32	s0, s23
90014fd2:	f7ff ffb3 	bl	90014f3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90014fd6:	eef0 0a68 	vmov.f32	s1, s17
90014fda:	eeb0 0a48 	vmov.f32	s0, s16
90014fde:	4620      	mov	r0, r4
90014fe0:	f7ff ff55 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90014fe4:	eeb0 ba68 	vmov.f32	s22, s17
90014fe8:	eef0 aa48 	vmov.f32	s21, s16
90014fec:	e7b9      	b.n	90014f62 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90014fee:	ee38 8a6b 	vsub.f32	s16, s16, s23
90014ff2:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90014ff6:	ee78 8acc 	vsub.f32	s17, s17, s24
90014ffa:	ee28 7a27 	vmul.f32	s14, s16, s15
90014ffe:	ee68 7aa7 	vmul.f32	s15, s17, s15
90015002:	ee87 8a00 	vdiv.f32	s16, s14, s0
90015006:	eec7 8a80 	vdiv.f32	s17, s15, s0
9001500a:	ee3b 8a88 	vadd.f32	s16, s23, s16
9001500e:	ee7c 8a28 	vadd.f32	s17, s24, s17
90015012:	e7cd      	b.n	90014fb0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90015014:	eef0 0a68 	vmov.f32	s1, s17
90015018:	4620      	mov	r0, r4
9001501a:	eeb0 0a48 	vmov.f32	s0, s16
9001501e:	f7ff ff36 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015022:	ecbd 8b0a 	vpop	{d8-d12}
90015026:	bd38      	pop	{r3, r4, r5, pc}

90015028 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90015028:	b510      	push	{r4, lr}
9001502a:	ed2d 8b0a 	vpush	{d8-d12}
9001502e:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90015032:	4604      	mov	r4, r0
90015034:	eeb0 ca40 	vmov.f32	s24, s0
90015038:	2b02      	cmp	r3, #2
9001503a:	eeb0 9a60 	vmov.f32	s18, s1
9001503e:	eef0 9a41 	vmov.f32	s19, s2
90015042:	eef0 8a61 	vmov.f32	s17, s3
90015046:	eeb0 ba42 	vmov.f32	s22, s4
9001504a:	eef0 ba62 	vmov.f32	s23, s5
9001504e:	eeb0 aa43 	vmov.f32	s20, s6
90015052:	eef0 aa63 	vmov.f32	s21, s7
90015056:	eeb0 8a44 	vmov.f32	s16, s8
9001505a:	eef0 ca64 	vmov.f32	s25, s9
9001505e:	d12c      	bne.n	900150ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90015060:	eef0 0a62 	vmov.f32	s1, s5
90015064:	eeb0 0a42 	vmov.f32	s0, s4
90015068:	f7ff ff11 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001506c:	ee79 9acb 	vsub.f32	s19, s19, s22
90015070:	ee7a caec 	vsub.f32	s25, s21, s25
90015074:	ee78 8aeb 	vsub.f32	s17, s17, s23
90015078:	ee3a 8a48 	vsub.f32	s16, s20, s16
9001507c:	ee69 9aac 	vmul.f32	s19, s19, s25
90015080:	ee28 8a88 	vmul.f32	s16, s17, s16
90015084:	eef4 9ac8 	vcmpe.f32	s19, s16
90015088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001508c:	db0f      	blt.n	900150ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
9001508e:	2101      	movs	r1, #1
90015090:	eef0 2a6a 	vmov.f32	s5, s21
90015094:	eeb0 2a4a 	vmov.f32	s4, s20
90015098:	4620      	mov	r0, r4
9001509a:	eef0 1a6b 	vmov.f32	s3, s23
9001509e:	eeb0 1a4b 	vmov.f32	s2, s22
900150a2:	eef0 0a49 	vmov.f32	s1, s18
900150a6:	eeb0 0a4c 	vmov.f32	s0, s24
900150aa:	f7ff ff47 	bl	90014f3c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
900150ae:	eef0 0a6a 	vmov.f32	s1, s21
900150b2:	4620      	mov	r0, r4
900150b4:	eeb0 0a4a 	vmov.f32	s0, s20
900150b8:	e035      	b.n	90015126 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
900150ba:	2b01      	cmp	r3, #1
900150bc:	d138      	bne.n	90015130 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900150be:	ee31 4ae2 	vsub.f32	s8, s3, s5
900150c2:	ee33 6a48 	vsub.f32	s12, s6, s16
900150c6:	ee71 7a42 	vsub.f32	s15, s2, s4
900150ca:	ee73 6ae4 	vsub.f32	s13, s7, s9
900150ce:	ee26 7a44 	vnmul.f32	s14, s12, s8
900150d2:	eea7 7aa6 	vfma.f32	s14, s15, s13
900150d6:	eeb5 7a40 	vcmp.f32	s14, #0.0
900150da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900150de:	d027      	beq.n	90015130 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
900150e0:	ee28 8a63 	vnmul.f32	s16, s16, s7
900150e4:	ee61 8ac2 	vnmul.f32	s17, s3, s4
900150e8:	eea4 8a83 	vfma.f32	s16, s9, s6
900150ec:	eee1 8a22 	vfma.f32	s17, s2, s5
900150f0:	ee68 7a67 	vnmul.f32	s15, s16, s15
900150f4:	ee28 8a44 	vnmul.f32	s16, s16, s8
900150f8:	eee6 7a28 	vfma.f32	s15, s12, s17
900150fc:	eea6 8aa8 	vfma.f32	s16, s13, s17
90015100:	ee87 0a87 	vdiv.f32	s0, s15, s14
90015104:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90015108:	eec8 0a07 	vdiv.f32	s1, s16, s14
9001510c:	ee3c ca40 	vsub.f32	s24, s24, s0
90015110:	ee39 9a60 	vsub.f32	s18, s18, s1
90015114:	ee29 9a09 	vmul.f32	s18, s18, s18
90015118:	eeac 9a0c 	vfma.f32	s18, s24, s24
9001511c:	eef4 7ac9 	vcmpe.f32	s15, s18
90015120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015124:	db04      	blt.n	90015130 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90015126:	f7ff feb2 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001512a:	ecbd 8b0a 	vpop	{d8-d12}
9001512e:	bd10      	pop	{r4, pc}
90015130:	eef0 0a6b 	vmov.f32	s1, s23
90015134:	4620      	mov	r0, r4
90015136:	eeb0 0a4b 	vmov.f32	s0, s22
9001513a:	f7ff fea8 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001513e:	e7b6      	b.n	900150ae <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90015140 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90015140:	b510      	push	{r4, lr}
90015142:	ed2d 8b0c 	vpush	{d8-d13}
90015146:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
9001514a:	4604      	mov	r4, r0
9001514c:	eeb0 9a40 	vmov.f32	s18, s0
90015150:	eef0 9a60 	vmov.f32	s19, s1
90015154:	eef0 aa41 	vmov.f32	s21, s2
90015158:	eeb0 ba61 	vmov.f32	s22, s3
9001515c:	b933      	cbnz	r3, 9001516c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
9001515e:	f7ff fe96 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015162:	eef0 0a4b 	vmov.f32	s1, s22
90015166:	eeb0 0a6a 	vmov.f32	s0, s21
9001516a:	e015      	b.n	90015198 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
9001516c:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90015170:	2b02      	cmp	r3, #2
90015172:	ee71 8a40 	vsub.f32	s17, s2, s0
90015176:	ee31 8ae0 	vsub.f32	s16, s3, s1
9001517a:	ee68 8aa7 	vmul.f32	s17, s17, s15
9001517e:	ee28 8a27 	vmul.f32	s16, s16, s15
90015182:	d10f      	bne.n	900151a4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90015184:	ee70 0ae8 	vsub.f32	s1, s1, s17
90015188:	ee30 0a08 	vadd.f32	s0, s0, s16
9001518c:	f7ff fe7f 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015190:	ee7b 0a68 	vsub.f32	s1, s22, s17
90015194:	ee3a 0a88 	vadd.f32	s0, s21, s16
90015198:	4620      	mov	r0, r4
9001519a:	f7ff fe78 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001519e:	ecbd 8b0c 	vpop	{d8-d13}
900151a2:	bd10      	pop	{r4, pc}
900151a4:	f7ff fe73 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900151a8:	eef0 0a69 	vmov.f32	s1, s19
900151ac:	eeb0 0a49 	vmov.f32	s0, s18
900151b0:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 900152e0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
900151b4:	eeb1 aa68 	vneg.f32	s20, s17
900151b8:	eddf ba4a 	vldr	s23, [pc, #296]	@ 900152e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
900151bc:	eee8 0a27 	vfma.f32	s1, s16, s15
900151c0:	4620      	mov	r0, r4
900151c2:	eea8 0aa7 	vfma.f32	s0, s17, s15
900151c6:	ed9f ca48 	vldr	s24, [pc, #288]	@ 900152e8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
900151ca:	eddf ca48 	vldr	s25, [pc, #288]	@ 900152ec <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
900151ce:	ed9f da48 	vldr	s26, [pc, #288]	@ 900152f0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
900151d2:	eeea 0a2b 	vfma.f32	s1, s20, s23
900151d6:	eea8 0a2b 	vfma.f32	s0, s16, s23
900151da:	f7ff fe58 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900151de:	eef0 0a69 	vmov.f32	s1, s19
900151e2:	eeb0 0a49 	vmov.f32	s0, s18
900151e6:	eddf 7a43 	vldr	s15, [pc, #268]	@ 900152f4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
900151ea:	4620      	mov	r0, r4
900151ec:	eee8 0a27 	vfma.f32	s1, s16, s15
900151f0:	eea8 0aa7 	vfma.f32	s0, s17, s15
900151f4:	eeea 0a0c 	vfma.f32	s1, s20, s24
900151f8:	eea8 0a0c 	vfma.f32	s0, s16, s24
900151fc:	f7ff fe47 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015200:	eef0 0a69 	vmov.f32	s1, s19
90015204:	eeb0 0a49 	vmov.f32	s0, s18
90015208:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 900152f8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
9001520c:	4620      	mov	r0, r4
9001520e:	eee8 0a27 	vfma.f32	s1, s16, s15
90015212:	eea8 0aa7 	vfma.f32	s0, s17, s15
90015216:	eeea 0a2c 	vfma.f32	s1, s20, s25
9001521a:	eea8 0a2c 	vfma.f32	s0, s16, s25
9001521e:	f7ff fe36 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015222:	eef0 0a69 	vmov.f32	s1, s19
90015226:	eeb0 0a49 	vmov.f32	s0, s18
9001522a:	eddf 7a34 	vldr	s15, [pc, #208]	@ 900152fc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
9001522e:	4620      	mov	r0, r4
90015230:	eee8 0a27 	vfma.f32	s1, s16, s15
90015234:	eea8 0aa7 	vfma.f32	s0, s17, s15
90015238:	eeea 0a0d 	vfma.f32	s1, s20, s26
9001523c:	eea8 0a0d 	vfma.f32	s0, s16, s26
90015240:	f7ff fe25 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90015244:	ee79 0a88 	vadd.f32	s1, s19, s16
90015248:	ee39 0a28 	vadd.f32	s0, s18, s17
9001524c:	4620      	mov	r0, r4
9001524e:	ee70 0ae8 	vsub.f32	s1, s1, s17
90015252:	ee30 0a08 	vadd.f32	s0, s0, s16
90015256:	f7ff fe1a 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001525a:	eef0 0a69 	vmov.f32	s1, s19
9001525e:	eeb0 0a49 	vmov.f32	s0, s18
90015262:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90015300 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
90015266:	4620      	mov	r0, r4
90015268:	eee8 0a27 	vfma.f32	s1, s16, s15
9001526c:	eea8 0aa7 	vfma.f32	s0, s17, s15
90015270:	eeea 0a0d 	vfma.f32	s1, s20, s26
90015274:	eea8 0a0d 	vfma.f32	s0, s16, s26
90015278:	f7ff fe09 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001527c:	eef0 0a69 	vmov.f32	s1, s19
90015280:	eeb0 0a49 	vmov.f32	s0, s18
90015284:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90015304 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
90015288:	4620      	mov	r0, r4
9001528a:	eee8 0a27 	vfma.f32	s1, s16, s15
9001528e:	eea8 0aa7 	vfma.f32	s0, s17, s15
90015292:	eeea 0a2c 	vfma.f32	s1, s20, s25
90015296:	eea8 0a2c 	vfma.f32	s0, s16, s25
9001529a:	f7ff fdf8 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001529e:	eef0 0a69 	vmov.f32	s1, s19
900152a2:	eeb0 0a49 	vmov.f32	s0, s18
900152a6:	eddf 7a18 	vldr	s15, [pc, #96]	@ 90015308 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
900152aa:	4620      	mov	r0, r4
900152ac:	eee8 0a27 	vfma.f32	s1, s16, s15
900152b0:	eea8 0aa7 	vfma.f32	s0, s17, s15
900152b4:	eeea 0a0c 	vfma.f32	s1, s20, s24
900152b8:	eea8 0a0c 	vfma.f32	s0, s16, s24
900152bc:	f7ff fde7 	bl	90014e8e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900152c0:	eef0 0a69 	vmov.f32	s1, s19
900152c4:	eeb0 0a49 	vmov.f32	s0, s18
900152c8:	eddf 7a10 	vldr	s15, [pc, #64]	@ 9001530c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
900152cc:	4620      	mov	r0, r4
900152ce:	eee8 0a27 	vfma.f32	s1, s16, s15
900152d2:	eea8 0aa7 	vfma.f32	s0, s17, s15
900152d6:	eeea 0a2b 	vfma.f32	s1, s20, s23
900152da:	eea8 0a2b 	vfma.f32	s0, s16, s23
900152de:	e73e      	b.n	9001515e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
900152e0:	3d23d70a 	.word	0x3d23d70a
900152e4:	3e8f5c29 	.word	0x3e8f5c29
900152e8:	3f19999a 	.word	0x3f19999a
900152ec:	3f4ccccd 	.word	0x3f4ccccd
900152f0:	3f75c28f 	.word	0x3f75c28f
900152f4:	3e4ccccd 	.word	0x3e4ccccd
900152f8:	3ecccccd 	.word	0x3ecccccd
900152fc:	3f3851ec 	.word	0x3f3851ec
90015300:	3fa3d70a 	.word	0x3fa3d70a
90015304:	3fcccccd 	.word	0x3fcccccd
90015308:	3fe66666 	.word	0x3fe66666
9001530c:	3ffae148 	.word	0x3ffae148

90015310 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90015310:	b570      	push	{r4, r5, r6, lr}
90015312:	ed2d 8b06 	vpush	{d8-d10}
90015316:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001531a:	eef0 aa40 	vmov.f32	s21, s0
9001531e:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90015322:	4604      	mov	r4, r0
90015324:	ee30 8ac8 	vsub.f32	s16, s1, s16
90015328:	ee30 9a49 	vsub.f32	s18, s0, s18
9001532c:	eeb0 aa60 	vmov.f32	s20, s1
90015330:	ee28 0a08 	vmul.f32	s0, s16, s16
90015334:	eea9 0a09 	vfma.f32	s0, s18, s18
90015338:	f016 fc3a 	bl	9002bbb0 <sqrtf>
9001533c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90015340:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015344:	dd36      	ble.n	900153b4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
90015346:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
9001534a:	2600      	movs	r6, #0
9001534c:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90015350:	eec0 6a27 	vdiv.f32	s13, s0, s15
90015354:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
90015358:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
9001535c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90015360:	eec8 8a26 	vdiv.f32	s17, s16, s13
90015364:	ee89 8a26 	vdiv.f32	s16, s18, s13
90015368:	ee70 9a28 	vadd.f32	s19, s0, s17
9001536c:	ee78 8aaa 	vadd.f32	s17, s17, s21
90015370:	ee30 9ac8 	vsub.f32	s18, s1, s16
90015374:	ee3a 8a48 	vsub.f32	s16, s20, s16
90015378:	b1fd      	cbz	r5, 900153ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
9001537a:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
9001537e:	eef0 0a49 	vmov.f32	s1, s18
90015382:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
90015386:	eeb0 0a69 	vmov.f32	s0, s19
9001538a:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
9001538e:	4620      	mov	r0, r4
90015390:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
90015394:	f7ff fd64 	bl	90014e60 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90015398:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
9001539c:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
900153a0:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
900153a4:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
900153a8:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
900153ac:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
900153b0:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
900153b4:	ecbd 8b06 	vpop	{d8-d10}
900153b8:	bd70      	pop	{r4, r5, r6, pc}
900153ba:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
900153be:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900153c2:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900153c6:	b16b      	cbz	r3, 900153e4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
900153c8:	eef0 1a49 	vmov.f32	s3, s18
900153cc:	4620      	mov	r0, r4
900153ce:	eeb0 1a69 	vmov.f32	s2, s19
900153d2:	eef0 0a62 	vmov.f32	s1, s5
900153d6:	eeb0 0a42 	vmov.f32	s0, s4
900153da:	f7ff feb1 	bl	90015140 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900153de:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
900153e2:	e7db      	b.n	9001539c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
900153e4:	eef0 4a48 	vmov.f32	s9, s16
900153e8:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900153ec:	eeb0 4a68 	vmov.f32	s8, s17
900153f0:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900153f4:	eef0 3a49 	vmov.f32	s7, s18
900153f8:	4620      	mov	r0, r4
900153fa:	eeb0 3a69 	vmov.f32	s6, s19
900153fe:	f7ff fe13 	bl	90015028 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90015402:	e7cb      	b.n	9001539c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90015404 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90015404:	ee07 2a90 	vmov	s15, r2
90015408:	ee07 1a10 	vmov	s14, r1
9001540c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90015410:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90015424 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90015414:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
90015418:	ee60 0aa7 	vmul.f32	s1, s1, s15
9001541c:	ee20 0a27 	vmul.f32	s0, s0, s15
90015420:	f7ff bf76 	b.w	90015310 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90015424:	3d000000 	.word	0x3d000000

90015428 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
90015428:	b538      	push	{r3, r4, r5, lr}
9001542a:	ed2d 8b02 	vpush	{d8}
9001542e:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90015432:	4604      	mov	r4, r0
90015434:	b31d      	cbz	r5, 9001547e <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
90015436:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
9001543a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001543e:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90015442:	ee78 8a67 	vsub.f32	s17, s16, s15
90015446:	ee38 8a27 	vadd.f32	s16, s16, s15
9001544a:	eef0 0a68 	vmov.f32	s1, s17
9001544e:	f7ff fd07 	bl	90014e60 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90015452:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
90015456:	eef0 1a48 	vmov.f32	s3, s16
9001545a:	4620      	mov	r0, r4
9001545c:	eeb0 0a41 	vmov.f32	s0, s2
90015460:	eef0 0a68 	vmov.f32	s1, s17
90015464:	f7ff fe6c 	bl	90015140 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90015468:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
9001546c:	eef0 1a68 	vmov.f32	s3, s17
90015470:	4620      	mov	r0, r4
90015472:	eef0 0a48 	vmov.f32	s1, s16
90015476:	eeb0 0a41 	vmov.f32	s0, s2
9001547a:	f7ff fe61 	bl	90015140 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001547e:	4628      	mov	r0, r5
90015480:	ecbd 8b02 	vpop	{d8}
90015484:	bd38      	pop	{r3, r4, r5, pc}

90015486 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
90015486:	b510      	push	{r4, lr}
90015488:	ed2d 8b02 	vpush	{d8}
9001548c:	4604      	mov	r4, r0
9001548e:	eeb0 8a40 	vmov.f32	s16, s0
90015492:	eef0 8a60 	vmov.f32	s17, s1
90015496:	f7ff ffc7 	bl	90015428 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001549a:	b9d0      	cbnz	r0, 900154d2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
9001549c:	4620      	mov	r0, r4
9001549e:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
900154a2:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
900154a6:	eef0 0a68 	vmov.f32	s1, s17
900154aa:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
900154ae:	eeb0 0a48 	vmov.f32	s0, s16
900154b2:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
900154b6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900154ba:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900154be:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900154c2:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900154c6:	f7ff fdaf 	bl	90015028 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900154ca:	2001      	movs	r0, #1
900154cc:	ecbd 8b02 	vpop	{d8}
900154d0:	bd10      	pop	{r4, pc}
900154d2:	2000      	movs	r0, #0
900154d4:	e7fa      	b.n	900154cc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

900154d6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
900154d6:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
900154da:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
900154de:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
900154e2:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
900154e6:	f7ff be2b 	b.w	90015140 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

900154ec <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
900154ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900154f0:	b089      	sub	sp, #36	@ 0x24
900154f2:	461c      	mov	r4, r3
900154f4:	4682      	mov	sl, r0
900154f6:	4615      	mov	r5, r2
900154f8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900154fc:	f10d 0820 	add.w	r8, sp, #32
90015500:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90015502:	9304      	str	r3, [sp, #16]
90015504:	2300      	movs	r3, #0
90015506:	9105      	str	r1, [sp, #20]
90015508:	9306      	str	r3, [sp, #24]
9001550a:	f848 3d04 	str.w	r3, [r8, #-4]!
9001550e:	9b04      	ldr	r3, [sp, #16]
90015510:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90015514:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
90015518:	9b05      	ldr	r3, [sp, #20]
9001551a:	429d      	cmp	r5, r3
9001551c:	d96d      	bls.n	900155fa <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
9001551e:	3d01      	subs	r5, #1
90015520:	f819 3005 	ldrb.w	r3, [r9, r5]
90015524:	2b06      	cmp	r3, #6
90015526:	d8f7      	bhi.n	90015518 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90015528:	a201      	add	r2, pc, #4	@ (adr r2, 90015530 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
9001552a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9001552e:	bf00      	nop
90015530:	9001554f 	.word	0x9001554f
90015534:	90015519 	.word	0x90015519
90015538:	9001554d 	.word	0x9001554d
9001553c:	90015571 	.word	0x90015571
90015540:	90015571 	.word	0x90015571
90015544:	90015575 	.word	0x90015575
90015548:	900155b5 	.word	0x900155b5
9001554c:	3c02      	subs	r4, #2
9001554e:	4650      	mov	r0, sl
90015550:	9400      	str	r4, [sp, #0]
90015552:	462b      	mov	r3, r5
90015554:	4642      	mov	r2, r8
90015556:	a906      	add	r1, sp, #24
90015558:	e9cd 9701 	strd	r9, r7, [sp, #4]
9001555c:	f7ff fcae 	bl	90014ebc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90015560:	eddd 0a07 	vldr	s1, [sp, #28]
90015564:	ed9d 0a06 	vldr	s0, [sp, #24]
90015568:	4630      	mov	r0, r6
9001556a:	f7ff fed1 	bl	90015310 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001556e:	e7d3      	b.n	90015518 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
90015570:	3c01      	subs	r4, #1
90015572:	e7ec      	b.n	9001554e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
90015574:	f1a4 0b04 	sub.w	fp, r4, #4
90015578:	3c02      	subs	r4, #2
9001557a:	4650      	mov	r0, sl
9001557c:	462b      	mov	r3, r5
9001557e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
90015582:	f8cd b000 	str.w	fp, [sp]
90015586:	4642      	mov	r2, r8
90015588:	a906      	add	r1, sp, #24
9001558a:	e9cd 9701 	strd	r9, r7, [sp, #4]
9001558e:	f7ff fc95 	bl	90014ebc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90015592:	eddd 2a07 	vldr	s5, [sp, #28]
90015596:	ed9d 2a06 	vldr	s4, [sp, #24]
9001559a:	4630      	mov	r0, r6
9001559c:	ed54 1a01 	vldr	s3, [r4, #-4]
900155a0:	ed14 1a02 	vldr	s2, [r4, #-8]
900155a4:	edd4 0a01 	vldr	s1, [r4, #4]
900155a8:	ed94 0a00 	vldr	s0, [r4]
900155ac:	f7ff fc1a 	bl	90014de4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900155b0:	465c      	mov	r4, fp
900155b2:	e7b1      	b.n	90015518 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900155b4:	f1a4 0b06 	sub.w	fp, r4, #6
900155b8:	3c02      	subs	r4, #2
900155ba:	4650      	mov	r0, sl
900155bc:	462b      	mov	r3, r5
900155be:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900155c2:	f8cd b000 	str.w	fp, [sp]
900155c6:	4642      	mov	r2, r8
900155c8:	a906      	add	r1, sp, #24
900155ca:	e9cd 9701 	strd	r9, r7, [sp, #4]
900155ce:	f7ff fc75 	bl	90014ebc <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900155d2:	eddd 3a07 	vldr	s7, [sp, #28]
900155d6:	ed9d 3a06 	vldr	s6, [sp, #24]
900155da:	4630      	mov	r0, r6
900155dc:	ed54 2a03 	vldr	s5, [r4, #-12]
900155e0:	ed14 2a04 	vldr	s4, [r4, #-16]
900155e4:	ed54 1a01 	vldr	s3, [r4, #-4]
900155e8:	ed14 1a02 	vldr	s2, [r4, #-8]
900155ec:	edd4 0a01 	vldr	s1, [r4, #4]
900155f0:	ed94 0a00 	vldr	s0, [r4]
900155f4:	f7ff fc15 	bl	90014e22 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900155f8:	e7da      	b.n	900155b0 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
900155fa:	9b04      	ldr	r3, [sp, #16]
900155fc:	b113      	cbz	r3, 90015604 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
900155fe:	4630      	mov	r0, r6
90015600:	f7ff ff69 	bl	900154d6 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90015604:	b009      	add	sp, #36	@ 0x24
90015606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001560a:	bf00      	nop

9001560c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
9001560c:	eef0 7a60 	vmov.f32	s15, s1
90015610:	6803      	ldr	r3, [r0, #0]
90015612:	689b      	ldr	r3, [r3, #8]
90015614:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90015618:	ee17 2a90 	vmov	r2, s15
9001561c:	eef0 7a40 	vmov.f32	s15, s0
90015620:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90015624:	ee17 1a90 	vmov	r1, s15
90015628:	4718      	bx	r3
	...

9001562c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
9001562c:	4b04      	ldr	r3, [pc, #16]	@ (90015640 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
9001562e:	b510      	push	{r4, lr}
90015630:	4604      	mov	r4, r0
90015632:	f840 3b14 	str.w	r3, [r0], #20
90015636:	f001 fcea 	bl	9001700e <_ZN8touchgfx7OutlineD1Ev>
9001563a:	4620      	mov	r0, r4
9001563c:	bd10      	pop	{r4, pc}
9001563e:	bf00      	nop
90015640:	90030954 	.word	0x90030954

90015644 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90015644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015648:	ed2d 8b04 	vpush	{d8-d9}
9001564c:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90015650:	b0b5      	sub	sp, #212	@ 0xd4
90015652:	4605      	mov	r5, r0
90015654:	468b      	mov	fp, r1
90015656:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001565a:	9206      	str	r2, [sp, #24]
9001565c:	461e      	mov	r6, r3
9001565e:	2400      	movs	r4, #0
90015660:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90015664:	f240 814f 	bls.w	90015906 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
90015668:	23ff      	movs	r3, #255	@ 0xff
9001566a:	1d02      	adds	r2, r0, #4
9001566c:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 9001590c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
90015670:	f04f 0800 	mov.w	r8, #0
90015674:	9300      	str	r3, [sp, #0]
90015676:	af08      	add	r7, sp, #32
90015678:	6981      	ldr	r1, [r0, #24]
9001567a:	a808      	add	r0, sp, #32
9001567c:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
9001567e:	eef0 9a49 	vmov.f32	s19, s18
90015682:	f015 fc83 	bl	9002af8c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90015686:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
9001568a:	4ba1      	ldr	r3, [pc, #644]	@ (90015910 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
9001568c:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
90015690:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90015694:	2201      	movs	r2, #1
90015696:	9308      	str	r3, [sp, #32]
90015698:	f105 0334 	add.w	r3, r5, #52	@ 0x34
9001569c:	edd5 6a08 	vldr	s13, [r5, #32]
900156a0:	eeb0 8a49 	vmov.f32	s16, s18
900156a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900156a8:	9325      	str	r3, [sp, #148]	@ 0x94
900156aa:	f04f 0300 	mov.w	r3, #0
900156ae:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
900156b2:	7f6a      	ldrb	r2, [r5, #29]
900156b4:	eef0 8a49 	vmov.f32	s17, s18
900156b8:	bf48      	it	mi
900156ba:	eef1 7a67 	vnegmi.f32	s15, s15
900156be:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
900156c2:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
900156c6:	46c1      	mov	r9, r8
900156c8:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
900156cc:	f04f 0a01 	mov.w	sl, #1
900156d0:	ee67 7a87 	vmul.f32	s15, s15, s14
900156d4:	7fab      	ldrb	r3, [r5, #30]
900156d6:	942a      	str	r4, [sp, #168]	@ 0xa8
900156d8:	435a      	muls	r2, r3
900156da:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
900156de:	ee26 7aa7 	vmul.f32	s14, s13, s15
900156e2:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
900156e6:	1c53      	adds	r3, r2, #1
900156e8:	942b      	str	r4, [sp, #172]	@ 0xac
900156ea:	942c      	str	r4, [sp, #176]	@ 0xb0
900156ec:	ee27 7a26 	vmul.f32	s14, s14, s13
900156f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900156f4:	942d      	str	r4, [sp, #180]	@ 0xb4
900156f6:	942e      	str	r4, [sp, #184]	@ 0xb8
900156f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900156fc:	ee67 7a27 	vmul.f32	s15, s14, s15
90015700:	942f      	str	r4, [sp, #188]	@ 0xbc
90015702:	9430      	str	r4, [sp, #192]	@ 0xc0
90015704:	9431      	str	r4, [sp, #196]	@ 0xc4
90015706:	9432      	str	r4, [sp, #200]	@ 0xc8
90015708:	9433      	str	r4, [sp, #204]	@ 0xcc
9001570a:	4644      	mov	r4, r8
9001570c:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90015710:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90015714:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
90015718:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
9001571c:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90015720:	9b06      	ldr	r3, [sp, #24]
90015722:	454b      	cmp	r3, r9
90015724:	f000 80cc 	beq.w	900158c0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
90015728:	f109 0301 	add.w	r3, r9, #1
9001572c:	9305      	str	r3, [sp, #20]
9001572e:	f81b 3009 	ldrb.w	r3, [fp, r9]
90015732:	2b06      	cmp	r3, #6
90015734:	d839      	bhi.n	900157aa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90015736:	e8df f003 	tbb	[pc, r3]
9001573a:	3b04      	.short	0x3b04
9001573c:	817c6f60 	.word	0x817c6f60
90015740:	a0          	.byte	0xa0
90015741:	00          	.byte	0x00
90015742:	45c1      	cmp	r9, r8
90015744:	d92b      	bls.n	9001579e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90015746:	eef0 0a49 	vmov.f32	s1, s18
9001574a:	4638      	mov	r0, r7
9001574c:	eeb0 0a69 	vmov.f32	s0, s19
90015750:	f7ff fdde 	bl	90015310 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90015754:	4638      	mov	r0, r7
90015756:	f7ff fe67 	bl	90015428 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001575a:	4681      	mov	r9, r0
9001575c:	b9f8      	cbnz	r0, 9001579e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001575e:	eef0 0a49 	vmov.f32	s1, s18
90015762:	4638      	mov	r0, r7
90015764:	eeb0 0a69 	vmov.f32	s0, s19
90015768:	f7ff fe8d 	bl	90015486 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
9001576c:	4628      	mov	r0, r5
9001576e:	4623      	mov	r3, r4
90015770:	9a05      	ldr	r2, [sp, #20]
90015772:	4641      	mov	r1, r8
90015774:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
90015778:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
9001577c:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
90015780:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90015784:	e9cd 9702 	strd	r9, r7, [sp, #8]
90015788:	e9cd b600 	strd	fp, r6, [sp]
9001578c:	f7ff feae 	bl	900154ec <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90015790:	eef0 0a49 	vmov.f32	s1, s18
90015794:	eeb0 0a69 	vmov.f32	s0, s19
90015798:	4638      	mov	r0, r7
9001579a:	f7ff fe74 	bl	90015486 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
9001579e:	eeb0 8a49 	vmov.f32	s16, s18
900157a2:	f8dd 8014 	ldr.w	r8, [sp, #20]
900157a6:	eef0 8a69 	vmov.f32	s17, s19
900157aa:	f8dd 9014 	ldr.w	r9, [sp, #20]
900157ae:	e7b7      	b.n	90015720 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
900157b0:	45c1      	cmp	r9, r8
900157b2:	d90d      	bls.n	900157d0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900157b4:	4638      	mov	r0, r7
900157b6:	f7ff fe37 	bl	90015428 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900157ba:	b948      	cbnz	r0, 900157d0 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900157bc:	4623      	mov	r3, r4
900157be:	464a      	mov	r2, r9
900157c0:	4641      	mov	r1, r8
900157c2:	4628      	mov	r0, r5
900157c4:	e9cd a702 	strd	sl, r7, [sp, #8]
900157c8:	e9cd b600 	strd	fp, r6, [sp]
900157cc:	f7ff fe8e 	bl	900154ec <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900157d0:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900157d4:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900157d8:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900157dc:	3402      	adds	r4, #2
900157de:	edd3 8a00 	vldr	s17, [r3]
900157e2:	46c8      	mov	r8, r9
900157e4:	ed93 8a01 	vldr	s16, [r3, #4]
900157e8:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
900157ec:	eef0 9a68 	vmov.f32	s19, s17
900157f0:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
900157f4:	eeb0 9a48 	vmov.f32	s18, s16
900157f8:	e7d7      	b.n	900157aa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900157fa:	eb06 0384 	add.w	r3, r6, r4, lsl #2
900157fe:	4638      	mov	r0, r7
90015800:	3402      	adds	r4, #2
90015802:	edd3 8a00 	vldr	s17, [r3]
90015806:	ed93 8a01 	vldr	s16, [r3, #4]
9001580a:	eeb0 0a68 	vmov.f32	s0, s17
9001580e:	eef0 0a48 	vmov.f32	s1, s16
90015812:	f7ff fd7d 	bl	90015310 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90015816:	e7c8      	b.n	900157aa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90015818:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001581c:	edd3 8a00 	vldr	s17, [r3]
90015820:	eef0 0a48 	vmov.f32	s1, s16
90015824:	4638      	mov	r0, r7
90015826:	eeb0 0a68 	vmov.f32	s0, s17
9001582a:	3401      	adds	r4, #1
9001582c:	f7ff fd70 	bl	90015310 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90015830:	e7bb      	b.n	900157aa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90015832:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90015836:	ed93 8a00 	vldr	s16, [r3]
9001583a:	e7f1      	b.n	90015820 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
9001583c:	00a3      	lsls	r3, r4, #2
9001583e:	eef0 0a48 	vmov.f32	s1, s16
90015842:	eeb0 0a68 	vmov.f32	s0, s17
90015846:	4638      	mov	r0, r7
90015848:	f103 0208 	add.w	r2, r3, #8
9001584c:	f103 090c 	add.w	r9, r3, #12
90015850:	4433      	add	r3, r6
90015852:	3404      	adds	r4, #4
90015854:	4432      	add	r2, r6
90015856:	44b1      	add	r9, r6
90015858:	edd3 1a01 	vldr	s3, [r3, #4]
9001585c:	ed92 2a00 	vldr	s4, [r2]
90015860:	edd9 2a00 	vldr	s5, [r9]
90015864:	ed93 1a00 	vldr	s2, [r3]
90015868:	9207      	str	r2, [sp, #28]
9001586a:	f7ff fabb 	bl	90014de4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
9001586e:	9a07      	ldr	r2, [sp, #28]
90015870:	ed99 8a00 	vldr	s16, [r9]
90015874:	edd2 8a00 	vldr	s17, [r2]
90015878:	e797      	b.n	900157aa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001587a:	00a3      	lsls	r3, r4, #2
9001587c:	eef0 0a48 	vmov.f32	s1, s16
90015880:	eeb0 0a68 	vmov.f32	s0, s17
90015884:	4638      	mov	r0, r7
90015886:	f103 0210 	add.w	r2, r3, #16
9001588a:	f103 0914 	add.w	r9, r3, #20
9001588e:	4433      	add	r3, r6
90015890:	3406      	adds	r4, #6
90015892:	4432      	add	r2, r6
90015894:	44b1      	add	r9, r6
90015896:	edd3 2a03 	vldr	s5, [r3, #12]
9001589a:	ed92 3a00 	vldr	s6, [r2]
9001589e:	edd9 3a00 	vldr	s7, [r9]
900158a2:	ed93 2a02 	vldr	s4, [r3, #8]
900158a6:	edd3 1a01 	vldr	s3, [r3, #4]
900158aa:	ed93 1a00 	vldr	s2, [r3]
900158ae:	9207      	str	r2, [sp, #28]
900158b0:	f7ff fab7 	bl	90014e22 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900158b4:	9a07      	ldr	r2, [sp, #28]
900158b6:	ed99 8a00 	vldr	s16, [r9]
900158ba:	edd2 8a00 	vldr	s17, [r2]
900158be:	e774      	b.n	900157aa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900158c0:	9b06      	ldr	r3, [sp, #24]
900158c2:	af08      	add	r7, sp, #32
900158c4:	4543      	cmp	r3, r8
900158c6:	d90f      	bls.n	900158e8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900158c8:	4638      	mov	r0, r7
900158ca:	f7ff fdad 	bl	90015428 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900158ce:	b958      	cbnz	r0, 900158e8 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900158d0:	2301      	movs	r3, #1
900158d2:	9703      	str	r7, [sp, #12]
900158d4:	f8cd b000 	str.w	fp, [sp]
900158d8:	4641      	mov	r1, r8
900158da:	9a06      	ldr	r2, [sp, #24]
900158dc:	4628      	mov	r0, r5
900158de:	e9cd 6301 	strd	r6, r3, [sp, #4]
900158e2:	4623      	mov	r3, r4
900158e4:	f7ff fe02 	bl	900154ec <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900158e8:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
900158ec:	4638      	mov	r0, r7
900158ee:	f015 fbe1 	bl	9002b0b4 <_ZN8touchgfx6Canvas6renderEh>
900158f2:	4604      	mov	r4, r0
900158f4:	4638      	mov	r0, r7
900158f6:	f7ff fe99 	bl	9001562c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
900158fa:	4620      	mov	r0, r4
900158fc:	b035      	add	sp, #212	@ 0xd4
900158fe:	ecbd 8b04 	vpop	{d8-d9}
90015902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015906:	2401      	movs	r4, #1
90015908:	e7f7      	b.n	900158fa <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
9001590a:	bf00      	nop
9001590c:	00000000 	.word	0x00000000
90015910:	900300ac 	.word	0x900300ac

90015914 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90015914:	b510      	push	{r4, lr}
90015916:	4604      	mov	r4, r0
90015918:	f7ff fe88 	bl	9001562c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
9001591c:	21b0      	movs	r1, #176	@ 0xb0
9001591e:	4620      	mov	r0, r4
90015920:	f016 f91b 	bl	9002bb5a <_ZdlPvj>
90015924:	4620      	mov	r0, r4
90015926:	bd10      	pop	{r4, pc}

90015928 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
90015928:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001592c:	4698      	mov	r8, r3
9001592e:	23ff      	movs	r3, #255	@ 0xff
90015930:	4607      	mov	r7, r0
90015932:	4689      	mov	r9, r1
90015934:	4692      	mov	sl, r2
90015936:	1d02      	adds	r2, r0, #4
90015938:	f107 0534 	add.w	r5, r7, #52	@ 0x34
9001593c:	2400      	movs	r4, #0
9001593e:	44ca      	add	sl, r9
90015940:	ed2d 8b06 	vpush	{d8-d10}
90015944:	b0aa      	sub	sp, #168	@ 0xa8
90015946:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90015b4c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
9001594a:	9300      	str	r3, [sp, #0]
9001594c:	eef0 8a48 	vmov.f32	s17, s16
90015950:	6981      	ldr	r1, [r0, #24]
90015952:	a80d      	add	r0, sp, #52	@ 0x34
90015954:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
90015956:	f015 fb19 	bl	9002af8c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001595a:	7f3b      	ldrb	r3, [r7, #28]
9001595c:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90015b4c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90015960:	4628      	mov	r0, r5
90015962:	1e5a      	subs	r2, r3, #1
90015964:	eeb0 0a60 	vmov.f32	s0, s1
90015968:	4253      	negs	r3, r2
9001596a:	4153      	adcs	r3, r2
9001596c:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
90015970:	f005 fadb 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015974:	eeb0 9a40 	vmov.f32	s18, s0
90015978:	eef0 9a60 	vmov.f32	s19, s1
9001597c:	45ca      	cmp	sl, r9
9001597e:	f000 80cd 	beq.w	90015b1c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
90015982:	f819 3b01 	ldrb.w	r3, [r9], #1
90015986:	2b06      	cmp	r3, #6
90015988:	d8f8      	bhi.n	9001597c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001598a:	e8df f003 	tbb	[pc, r3]
9001598e:	0804      	.short	0x0804
90015990:	58533f2a 	.word	0x58533f2a
90015994:	8a          	.byte	0x8a
90015995:	00          	.byte	0x00
90015996:	a80d      	add	r0, sp, #52	@ 0x34
90015998:	f015 fb6a 	bl	9002b070 <_ZN8touchgfx6Canvas5closeEv>
9001599c:	e7ee      	b.n	9001597c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
9001599e:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900159a2:	4628      	mov	r0, r5
900159a4:	ed93 8a01 	vldr	s16, [r3, #4]
900159a8:	edd3 8a00 	vldr	s17, [r3]
900159ac:	eef0 0a48 	vmov.f32	s1, s16
900159b0:	eeb0 0a68 	vmov.f32	s0, s17
900159b4:	f005 fab9 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900159b8:	a80d      	add	r0, sp, #52	@ 0x34
900159ba:	eef0 7a60 	vmov.f32	s15, s1
900159be:	eeb0 9a40 	vmov.f32	s18, s0
900159c2:	eef0 9a60 	vmov.f32	s19, s1
900159c6:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900159ca:	ee17 2a90 	vmov	r2, s15
900159ce:	eef0 7a40 	vmov.f32	s15, s0
900159d2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900159d6:	ee17 1a90 	vmov	r1, s15
900159da:	f015 fc23 	bl	9002b224 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900159de:	3402      	adds	r4, #2
900159e0:	e7cc      	b.n	9001597c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900159e2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900159e6:	4628      	mov	r0, r5
900159e8:	edd3 8a00 	vldr	s17, [r3]
900159ec:	ed93 8a01 	vldr	s16, [r3, #4]
900159f0:	eeb0 0a68 	vmov.f32	s0, s17
900159f4:	eef0 0a48 	vmov.f32	s1, s16
900159f8:	f005 fa97 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900159fc:	a80d      	add	r0, sp, #52	@ 0x34
900159fe:	eeb0 9a40 	vmov.f32	s18, s0
90015a02:	eef0 9a60 	vmov.f32	s19, s1
90015a06:	f7ff fe01 	bl	9001560c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90015a0a:	e7e8      	b.n	900159de <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90015a0c:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90015a10:	edd3 8a00 	vldr	s17, [r3]
90015a14:	eef0 0a48 	vmov.f32	s1, s16
90015a18:	4628      	mov	r0, r5
90015a1a:	eeb0 0a68 	vmov.f32	s0, s17
90015a1e:	3401      	adds	r4, #1
90015a20:	f005 fa83 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015a24:	a80d      	add	r0, sp, #52	@ 0x34
90015a26:	eef0 9a60 	vmov.f32	s19, s1
90015a2a:	eeb0 9a40 	vmov.f32	s18, s0
90015a2e:	f7ff fded 	bl	9001560c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90015a32:	e7a3      	b.n	9001597c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90015a34:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90015a38:	ed93 8a00 	vldr	s16, [r3]
90015a3c:	e7ea      	b.n	90015a14 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90015a3e:	1ca3      	adds	r3, r4, #2
90015a40:	4628      	mov	r0, r5
90015a42:	3404      	adds	r4, #4
90015a44:	eb08 0383 	add.w	r3, r8, r3, lsl #2
90015a48:	ed53 0a01 	vldr	s1, [r3, #-4]
90015a4c:	ed13 0a02 	vldr	s0, [r3, #-8]
90015a50:	edd3 8a00 	vldr	s17, [r3]
90015a54:	ed93 8a01 	vldr	s16, [r3, #4]
90015a58:	f005 fa67 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015a5c:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90015a60:	eeb0 0a68 	vmov.f32	s0, s17
90015a64:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90015a68:	eef0 0a48 	vmov.f32	s1, s16
90015a6c:	4628      	mov	r0, r5
90015a6e:	f005 fa5c 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015a72:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
90015a76:	eef0 2a60 	vmov.f32	s5, s1
90015a7a:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
90015a7e:	eeb0 2a40 	vmov.f32	s4, s0
90015a82:	a80d      	add	r0, sp, #52	@ 0x34
90015a84:	eeb0 aa40 	vmov.f32	s20, s0
90015a88:	eef0 aa60 	vmov.f32	s21, s1
90015a8c:	eeb0 0a49 	vmov.f32	s0, s18
90015a90:	eef0 0a69 	vmov.f32	s1, s19
90015a94:	f7ff f9a6 	bl	90014de4 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
90015a98:	eef0 9a6a 	vmov.f32	s19, s21
90015a9c:	eeb0 9a4a 	vmov.f32	s18, s20
90015aa0:	e76c      	b.n	9001597c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90015aa2:	1d26      	adds	r6, r4, #4
90015aa4:	4628      	mov	r0, r5
90015aa6:	3406      	adds	r4, #6
90015aa8:	eb08 0686 	add.w	r6, r8, r6, lsl #2
90015aac:	ed56 0a03 	vldr	s1, [r6, #-12]
90015ab0:	ed16 0a04 	vldr	s0, [r6, #-16]
90015ab4:	edd6 8a00 	vldr	s17, [r6]
90015ab8:	ed96 8a01 	vldr	s16, [r6, #4]
90015abc:	f005 fa35 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015ac0:	ed8d 0a07 	vstr	s0, [sp, #28]
90015ac4:	4628      	mov	r0, r5
90015ac6:	ed16 0a02 	vldr	s0, [r6, #-8]
90015aca:	edcd 0a08 	vstr	s1, [sp, #32]
90015ace:	ed56 0a01 	vldr	s1, [r6, #-4]
90015ad2:	f005 fa2a 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015ad6:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90015ada:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90015ade:	eeb0 0a68 	vmov.f32	s0, s17
90015ae2:	eef0 0a48 	vmov.f32	s1, s16
90015ae6:	4628      	mov	r0, r5
90015ae8:	f005 fa1f 	bl	9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90015aec:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90015af0:	eeb0 3a40 	vmov.f32	s6, s0
90015af4:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
90015af8:	eef0 3a60 	vmov.f32	s7, s1
90015afc:	eddd 1a08 	vldr	s3, [sp, #32]
90015b00:	eeb0 aa40 	vmov.f32	s20, s0
90015b04:	ed9d 1a07 	vldr	s2, [sp, #28]
90015b08:	eef0 aa60 	vmov.f32	s21, s1
90015b0c:	a80d      	add	r0, sp, #52	@ 0x34
90015b0e:	eef0 0a69 	vmov.f32	s1, s19
90015b12:	eeb0 0a49 	vmov.f32	s0, s18
90015b16:	f7ff f984 	bl	90014e22 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
90015b1a:	e7bd      	b.n	90015a98 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90015b1c:	7f7b      	ldrb	r3, [r7, #29]
90015b1e:	a80d      	add	r0, sp, #52	@ 0x34
90015b20:	7fb9      	ldrb	r1, [r7, #30]
90015b22:	4359      	muls	r1, r3
90015b24:	1c4b      	adds	r3, r1, #1
90015b26:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90015b2a:	f3c1 2107 	ubfx	r1, r1, #8, #8
90015b2e:	f015 fac1 	bl	9002b0b4 <_ZN8touchgfx6Canvas6renderEh>
90015b32:	4b07      	ldr	r3, [pc, #28]	@ (90015b50 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90015b34:	4604      	mov	r4, r0
90015b36:	a812      	add	r0, sp, #72	@ 0x48
90015b38:	930d      	str	r3, [sp, #52]	@ 0x34
90015b3a:	f001 fa68 	bl	9001700e <_ZN8touchgfx7OutlineD1Ev>
90015b3e:	4620      	mov	r0, r4
90015b40:	b02a      	add	sp, #168	@ 0xa8
90015b42:	ecbd 8b06 	vpop	{d8-d10}
90015b46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90015b4a:	bf00      	nop
90015b4c:	00000000 	.word	0x00000000
90015b50:	90030954 	.word	0x90030954

90015b54 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90015b54:	b410      	push	{r4}
90015b56:	7f04      	ldrb	r4, [r0, #28]
90015b58:	b11c      	cbz	r4, 90015b62 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
90015b5a:	f85d 4b04 	ldr.w	r4, [sp], #4
90015b5e:	f7ff bee3 	b.w	90015928 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90015b62:	f85d 4b04 	ldr.w	r4, [sp], #4
90015b66:	f7ff bd6d 	b.w	90015644 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>

90015b6a <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
90015b6a:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90015b6e:	4691      	mov	r9, r2
90015b70:	4602      	mov	r2, r0
90015b72:	4606      	mov	r6, r0
90015b74:	4688      	mov	r8, r1
90015b76:	f852 0f26 	ldr.w	r0, [r2, #38]!
90015b7a:	469a      	mov	sl, r3
90015b7c:	ab02      	add	r3, sp, #8
90015b7e:	af02      	add	r7, sp, #8
90015b80:	6851      	ldr	r1, [r2, #4]
90015b82:	c303      	stmia	r3!, {r0, r1}
90015b84:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90015b88:	2b00      	cmp	r3, #0
90015b8a:	dd2f      	ble.n	90015bec <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90015b8c:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
90015b90:	2c00      	cmp	r4, #0
90015b92:	dd2b      	ble.n	90015bec <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90015b94:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90015b98:	441c      	add	r4, r3
90015b9a:	b2a4      	uxth	r4, r4
90015b9c:	b225      	sxth	r5, r4
90015b9e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90015ba2:	42ab      	cmp	r3, r5
90015ba4:	da22      	bge.n	90015bec <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x82>
90015ba6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015ba8:	464a      	mov	r2, r9
90015baa:	9701      	str	r7, [sp, #4]
90015bac:	4641      	mov	r1, r8
90015bae:	9300      	str	r3, [sp, #0]
90015bb0:	4630      	mov	r0, r6
90015bb2:	4653      	mov	r3, sl
90015bb4:	f7ff ffce 	bl	90015b54 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90015bb8:	b940      	cbnz	r0, 90015bcc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
90015bba:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90015bbe:	2b01      	cmp	r3, #1
90015bc0:	d004      	beq.n	90015bcc <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x62>
90015bc2:	3301      	adds	r3, #1
90015bc4:	105b      	asrs	r3, r3, #1
90015bc6:	f8ad 300e 	strh.w	r3, [sp, #14]
90015bca:	e7ec      	b.n	90015ba6 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3c>
90015bcc:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90015bd0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90015bd4:	4413      	add	r3, r2
90015bd6:	b29b      	uxth	r3, r3
90015bd8:	441a      	add	r2, r3
90015bda:	f8ad 300a 	strh.w	r3, [sp, #10]
90015bde:	b212      	sxth	r2, r2
90015be0:	4295      	cmp	r5, r2
90015be2:	dadc      	bge.n	90015b9e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
90015be4:	1ae3      	subs	r3, r4, r3
90015be6:	f8ad 300e 	strh.w	r3, [sp, #14]
90015bea:	e7d8      	b.n	90015b9e <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x34>
90015bec:	b004      	add	sp, #16
90015bee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90015bf2 <_ZN8touchgfx6CircleD1Ev>:
90015bf2:	4770      	bx	lr

90015bf4 <_ZN8touchgfx6CircleD0Ev>:
90015bf4:	b510      	push	{r4, lr}
90015bf6:	4604      	mov	r4, r0
90015bf8:	2148      	movs	r1, #72	@ 0x48
90015bfa:	f015 ffae 	bl	9002bb5a <_ZdlPvj>
90015bfe:	4620      	mov	r0, r4
90015c00:	bd10      	pop	{r4, pc}

90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90015c02:	b507      	push	{r0, r1, r2, lr}
90015c04:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
90015c08:	ab01      	add	r3, sp, #4
90015c0a:	6809      	ldr	r1, [r1, #0]
90015c0c:	6800      	ldr	r0, [r0, #0]
90015c0e:	f005 faa5 	bl	9001b15c <_ZN8touchgfx6muldivElllRl>
90015c12:	b003      	add	sp, #12
90015c14:	f85d fb04 	ldr.w	pc, [sp], #4

90015c18 <_ZN8touchgfx7CWRUtil4sineEi>:
90015c18:	f44f 73b4 	mov.w	r3, #360	@ 0x168
90015c1c:	fb90 f2f3 	sdiv	r2, r0, r3
90015c20:	fb02 0013 	mls	r0, r2, r3, r0
90015c24:	2800      	cmp	r0, #0
90015c26:	bfb8      	it	lt
90015c28:	18c0      	addlt	r0, r0, r3
90015c2a:	4b0a      	ldr	r3, [pc, #40]	@ (90015c54 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
90015c2c:	285a      	cmp	r0, #90	@ 0x5a
90015c2e:	dc02      	bgt.n	90015c36 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90015c30:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90015c34:	4770      	bx	lr
90015c36:	28b4      	cmp	r0, #180	@ 0xb4
90015c38:	dc02      	bgt.n	90015c40 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
90015c3a:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
90015c3e:	e7f7      	b.n	90015c30 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90015c40:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
90015c44:	bfd4      	ite	le
90015c46:	38b4      	suble	r0, #180	@ 0xb4
90015c48:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
90015c4c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90015c50:	4240      	negs	r0, r0
90015c52:	4770      	bx	lr
90015c54:	90030104 	.word	0x90030104

90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90015c58:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
90015c5c:	fb90 f2f3 	sdiv	r2, r0, r3
90015c60:	b573      	push	{r0, r1, r4, r5, r6, lr}
90015c62:	fb02 0013 	mls	r0, r2, r3, r0
90015c66:	2800      	cmp	r0, #0
90015c68:	bfb8      	it	lt
90015c6a:	18c0      	addlt	r0, r0, r3
90015c6c:	1144      	asrs	r4, r0, #5
90015c6e:	f000 061f 	and.w	r6, r0, #31
90015c72:	4620      	mov	r0, r4
90015c74:	f7ff ffd0 	bl	90015c18 <_ZN8touchgfx7CWRUtil4sineEi>
90015c78:	4605      	mov	r5, r0
90015c7a:	b90e      	cbnz	r6, 90015c80 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
90015c7c:	b002      	add	sp, #8
90015c7e:	bd70      	pop	{r4, r5, r6, pc}
90015c80:	1c60      	adds	r0, r4, #1
90015c82:	f7ff ffc9 	bl	90015c18 <_ZN8touchgfx7CWRUtil4sineEi>
90015c86:	ab01      	add	r3, sp, #4
90015c88:	2220      	movs	r2, #32
90015c8a:	4631      	mov	r1, r6
90015c8c:	1b40      	subs	r0, r0, r5
90015c8e:	f005 fa65 	bl	9001b15c <_ZN8touchgfx6muldivElllRl>
90015c92:	4428      	add	r0, r5
90015c94:	e7f2      	b.n	90015c7c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
90015c96:	b508      	push	{r3, lr}
90015c98:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
90015c9c:	f7ff ffdc 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015ca0:	bd08      	pop	{r3, pc}
	...

90015ca4 <_ZN8touchgfx6CircleC1Ev>:
90015ca4:	b510      	push	{r4, lr}
90015ca6:	4604      	mov	r4, r0
90015ca8:	f000 fd04 	bl	900166b4 <_ZN8touchgfx12CanvasWidgetC1Ev>
90015cac:	4b08      	ldr	r3, [pc, #32]	@ (90015cd0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
90015cae:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
90015cb2:	4620      	mov	r0, r4
90015cb4:	6023      	str	r3, [r4, #0]
90015cb6:	2300      	movs	r3, #0
90015cb8:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
90015cbc:	f24b 4205 	movw	r2, #46085	@ 0xb405
90015cc0:	60a3      	str	r3, [r4, #8]
90015cc2:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
90015cc6:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
90015cca:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
90015cce:	bd10      	pop	{r4, pc}
90015cd0:	900301c4 	.word	0x900301c4

90015cd4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
90015cd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015cd8:	428a      	cmp	r2, r1
90015cda:	4680      	mov	r8, r0
90015cdc:	4610      	mov	r0, r2
90015cde:	4699      	mov	r9, r3
90015ce0:	bfaa      	itet	ge
90015ce2:	460a      	movge	r2, r1
90015ce4:	460b      	movlt	r3, r1
90015ce6:	4603      	movge	r3, r0
90015ce8:	b085      	sub	sp, #20
90015cea:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
90015cee:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
90015cf2:	1a99      	subs	r1, r3, r2
90015cf4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90015cf6:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
90015cfa:	bfa4      	itt	ge
90015cfc:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
90015d00:	2200      	movge	r2, #0
90015d02:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
90015d06:	9300      	str	r3, [sp, #0]
90015d08:	f102 0b01 	add.w	fp, r2, #1
90015d0c:	2c00      	cmp	r4, #0
90015d0e:	f040 80ae 	bne.w	90015e6e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
90015d12:	4610      	mov	r0, r2
90015d14:	9201      	str	r2, [sp, #4]
90015d16:	f7ff ff9f 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015d1a:	a903      	add	r1, sp, #12
90015d1c:	9003      	str	r0, [sp, #12]
90015d1e:	4650      	mov	r0, sl
90015d20:	f7ff ff6f 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015d24:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
90015d28:	9a01      	ldr	r2, [sp, #4]
90015d2a:	4408      	add	r0, r1
90015d2c:	f8d9 1000 	ldr.w	r1, [r9]
90015d30:	4281      	cmp	r1, r0
90015d32:	bfc8      	it	gt
90015d34:	f8c9 0000 	strgt.w	r0, [r9]
90015d38:	6839      	ldr	r1, [r7, #0]
90015d3a:	4288      	cmp	r0, r1
90015d3c:	bfc8      	it	gt
90015d3e:	6038      	strgt	r0, [r7, #0]
90015d40:	4610      	mov	r0, r2
90015d42:	f7ff ffa8 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015d46:	a903      	add	r1, sp, #12
90015d48:	9003      	str	r0, [sp, #12]
90015d4a:	4650      	mov	r0, sl
90015d4c:	f7ff ff59 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015d50:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015d54:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
90015d58:	1a10      	subs	r0, r2, r0
90015d5a:	6832      	ldr	r2, [r6, #0]
90015d5c:	4282      	cmp	r2, r0
90015d5e:	bfc8      	it	gt
90015d60:	6030      	strgt	r0, [r6, #0]
90015d62:	682a      	ldr	r2, [r5, #0]
90015d64:	4290      	cmp	r0, r2
90015d66:	fb9b f2f1 	sdiv	r2, fp, r1
90015d6a:	fb01 b212 	mls	r2, r1, r2, fp
90015d6e:	bfc8      	it	gt
90015d70:	6028      	strgt	r0, [r5, #0]
90015d72:	1a8a      	subs	r2, r1, r2
90015d74:	fb92 f0f1 	sdiv	r0, r2, r1
90015d78:	fb01 2210 	mls	r2, r1, r0, r2
90015d7c:	4493      	add	fp, r2
90015d7e:	9b00      	ldr	r3, [sp, #0]
90015d80:	455b      	cmp	r3, fp
90015d82:	db2a      	blt.n	90015dda <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
90015d84:	4658      	mov	r0, fp
90015d86:	f7ff ff67 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015d8a:	a903      	add	r1, sp, #12
90015d8c:	9003      	str	r0, [sp, #12]
90015d8e:	4650      	mov	r0, sl
90015d90:	f7ff ff37 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015d94:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015d98:	4410      	add	r0, r2
90015d9a:	f8d9 2000 	ldr.w	r2, [r9]
90015d9e:	4282      	cmp	r2, r0
90015da0:	bfc8      	it	gt
90015da2:	f8c9 0000 	strgt.w	r0, [r9]
90015da6:	683a      	ldr	r2, [r7, #0]
90015da8:	4290      	cmp	r0, r2
90015daa:	bfc8      	it	gt
90015dac:	6038      	strgt	r0, [r7, #0]
90015dae:	4658      	mov	r0, fp
90015db0:	f7ff ff71 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015db4:	a903      	add	r1, sp, #12
90015db6:	9003      	str	r0, [sp, #12]
90015db8:	4650      	mov	r0, sl
90015dba:	f7ff ff22 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015dbe:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015dc2:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
90015dc6:	1a10      	subs	r0, r2, r0
90015dc8:	6832      	ldr	r2, [r6, #0]
90015dca:	4282      	cmp	r2, r0
90015dcc:	bfc8      	it	gt
90015dce:	6030      	strgt	r0, [r6, #0]
90015dd0:	682a      	ldr	r2, [r5, #0]
90015dd2:	4290      	cmp	r0, r2
90015dd4:	bfc8      	it	gt
90015dd6:	6028      	strgt	r0, [r5, #0]
90015dd8:	e7d1      	b.n	90015d7e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
90015dda:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90015dde:	9b00      	ldr	r3, [sp, #0]
90015de0:	455b      	cmp	r3, fp
90015de2:	dd27      	ble.n	90015e34 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
90015de4:	4618      	mov	r0, r3
90015de6:	f7ff ff37 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015dea:	a903      	add	r1, sp, #12
90015dec:	9003      	str	r0, [sp, #12]
90015dee:	4650      	mov	r0, sl
90015df0:	f7ff ff07 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015df4:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015df8:	4410      	add	r0, r2
90015dfa:	f8d9 2000 	ldr.w	r2, [r9]
90015dfe:	4282      	cmp	r2, r0
90015e00:	bfc8      	it	gt
90015e02:	f8c9 0000 	strgt.w	r0, [r9]
90015e06:	683a      	ldr	r2, [r7, #0]
90015e08:	4290      	cmp	r0, r2
90015e0a:	bfc8      	it	gt
90015e0c:	6038      	strgt	r0, [r7, #0]
90015e0e:	9800      	ldr	r0, [sp, #0]
90015e10:	f7ff ff41 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015e14:	a903      	add	r1, sp, #12
90015e16:	9003      	str	r0, [sp, #12]
90015e18:	4650      	mov	r0, sl
90015e1a:	f7ff fef2 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015e1e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015e22:	1a10      	subs	r0, r2, r0
90015e24:	6832      	ldr	r2, [r6, #0]
90015e26:	4282      	cmp	r2, r0
90015e28:	bfc8      	it	gt
90015e2a:	6030      	strgt	r0, [r6, #0]
90015e2c:	682a      	ldr	r2, [r5, #0]
90015e2e:	4290      	cmp	r0, r2
90015e30:	bfc8      	it	gt
90015e32:	6028      	strgt	r0, [r5, #0]
90015e34:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015e38:	f8d9 1000 	ldr.w	r1, [r9]
90015e3c:	4291      	cmp	r1, r2
90015e3e:	bfc8      	it	gt
90015e40:	f8c9 2000 	strgt.w	r2, [r9]
90015e44:	683a      	ldr	r2, [r7, #0]
90015e46:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
90015e4a:	429a      	cmp	r2, r3
90015e4c:	bfb8      	it	lt
90015e4e:	603b      	strlt	r3, [r7, #0]
90015e50:	6832      	ldr	r2, [r6, #0]
90015e52:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90015e56:	429a      	cmp	r2, r3
90015e58:	bfc8      	it	gt
90015e5a:	6033      	strgt	r3, [r6, #0]
90015e5c:	682a      	ldr	r2, [r5, #0]
90015e5e:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90015e62:	429a      	cmp	r2, r3
90015e64:	da00      	bge.n	90015e68 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90015e66:	602b      	str	r3, [r5, #0]
90015e68:	b005      	add	sp, #20
90015e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015e6e:	2002      	movs	r0, #2
90015e70:	3401      	adds	r4, #1
90015e72:	9201      	str	r2, [sp, #4]
90015e74:	fb94 f4f0 	sdiv	r4, r4, r0
90015e78:	4610      	mov	r0, r2
90015e7a:	f7ff feed 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015e7e:	a903      	add	r1, sp, #12
90015e80:	9003      	str	r0, [sp, #12]
90015e82:	4650      	mov	r0, sl
90015e84:	f7ff febd 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015e88:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
90015e8c:	9a01      	ldr	r2, [sp, #4]
90015e8e:	4408      	add	r0, r1
90015e90:	f8d9 1000 	ldr.w	r1, [r9]
90015e94:	1b03      	subs	r3, r0, r4
90015e96:	4420      	add	r0, r4
90015e98:	4299      	cmp	r1, r3
90015e9a:	bfc8      	it	gt
90015e9c:	f8c9 3000 	strgt.w	r3, [r9]
90015ea0:	6839      	ldr	r1, [r7, #0]
90015ea2:	428b      	cmp	r3, r1
90015ea4:	bfc8      	it	gt
90015ea6:	603b      	strgt	r3, [r7, #0]
90015ea8:	f8d9 1000 	ldr.w	r1, [r9]
90015eac:	4281      	cmp	r1, r0
90015eae:	bfc8      	it	gt
90015eb0:	f8c9 0000 	strgt.w	r0, [r9]
90015eb4:	6839      	ldr	r1, [r7, #0]
90015eb6:	4288      	cmp	r0, r1
90015eb8:	bfc8      	it	gt
90015eba:	6038      	strgt	r0, [r7, #0]
90015ebc:	4610      	mov	r0, r2
90015ebe:	f7ff feea 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015ec2:	a903      	add	r1, sp, #12
90015ec4:	9003      	str	r0, [sp, #12]
90015ec6:	4650      	mov	r0, sl
90015ec8:	f7ff fe9b 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015ecc:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015ed0:	1a10      	subs	r0, r2, r0
90015ed2:	6832      	ldr	r2, [r6, #0]
90015ed4:	1b01      	subs	r1, r0, r4
90015ed6:	4420      	add	r0, r4
90015ed8:	428a      	cmp	r2, r1
90015eda:	bfc8      	it	gt
90015edc:	6031      	strgt	r1, [r6, #0]
90015ede:	682a      	ldr	r2, [r5, #0]
90015ee0:	4291      	cmp	r1, r2
90015ee2:	bfc8      	it	gt
90015ee4:	6029      	strgt	r1, [r5, #0]
90015ee6:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
90015eea:	6832      	ldr	r2, [r6, #0]
90015eec:	4282      	cmp	r2, r0
90015eee:	bfc8      	it	gt
90015ef0:	6030      	strgt	r0, [r6, #0]
90015ef2:	682a      	ldr	r2, [r5, #0]
90015ef4:	4290      	cmp	r0, r2
90015ef6:	fb9b f2f1 	sdiv	r2, fp, r1
90015efa:	fb01 b212 	mls	r2, r1, r2, fp
90015efe:	bfc8      	it	gt
90015f00:	6028      	strgt	r0, [r5, #0]
90015f02:	1a8a      	subs	r2, r1, r2
90015f04:	fb92 f0f1 	sdiv	r0, r2, r1
90015f08:	fb01 2210 	mls	r2, r1, r0, r2
90015f0c:	4493      	add	fp, r2
90015f0e:	9b00      	ldr	r3, [sp, #0]
90015f10:	455b      	cmp	r3, fp
90015f12:	db40      	blt.n	90015f96 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
90015f14:	4658      	mov	r0, fp
90015f16:	f7ff fe9f 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015f1a:	a903      	add	r1, sp, #12
90015f1c:	9003      	str	r0, [sp, #12]
90015f1e:	4650      	mov	r0, sl
90015f20:	f7ff fe6f 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015f24:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015f28:	4410      	add	r0, r2
90015f2a:	f8d9 2000 	ldr.w	r2, [r9]
90015f2e:	1b01      	subs	r1, r0, r4
90015f30:	4420      	add	r0, r4
90015f32:	428a      	cmp	r2, r1
90015f34:	bfc8      	it	gt
90015f36:	f8c9 1000 	strgt.w	r1, [r9]
90015f3a:	683a      	ldr	r2, [r7, #0]
90015f3c:	4291      	cmp	r1, r2
90015f3e:	bfc8      	it	gt
90015f40:	6039      	strgt	r1, [r7, #0]
90015f42:	f8d9 2000 	ldr.w	r2, [r9]
90015f46:	4282      	cmp	r2, r0
90015f48:	bfc8      	it	gt
90015f4a:	f8c9 0000 	strgt.w	r0, [r9]
90015f4e:	683a      	ldr	r2, [r7, #0]
90015f50:	4290      	cmp	r0, r2
90015f52:	bfc8      	it	gt
90015f54:	6038      	strgt	r0, [r7, #0]
90015f56:	4658      	mov	r0, fp
90015f58:	f7ff fe9d 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015f5c:	a903      	add	r1, sp, #12
90015f5e:	9003      	str	r0, [sp, #12]
90015f60:	4650      	mov	r0, sl
90015f62:	f7ff fe4e 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015f66:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
90015f6a:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
90015f6e:	1a10      	subs	r0, r2, r0
90015f70:	6832      	ldr	r2, [r6, #0]
90015f72:	1b01      	subs	r1, r0, r4
90015f74:	4420      	add	r0, r4
90015f76:	428a      	cmp	r2, r1
90015f78:	bfc8      	it	gt
90015f7a:	6031      	strgt	r1, [r6, #0]
90015f7c:	682a      	ldr	r2, [r5, #0]
90015f7e:	4291      	cmp	r1, r2
90015f80:	bfc8      	it	gt
90015f82:	6029      	strgt	r1, [r5, #0]
90015f84:	6832      	ldr	r2, [r6, #0]
90015f86:	4282      	cmp	r2, r0
90015f88:	bfc8      	it	gt
90015f8a:	6030      	strgt	r0, [r6, #0]
90015f8c:	682a      	ldr	r2, [r5, #0]
90015f8e:	4290      	cmp	r0, r2
90015f90:	bfc8      	it	gt
90015f92:	6028      	strgt	r0, [r5, #0]
90015f94:	e7bb      	b.n	90015f0e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
90015f96:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
90015f9a:	9b00      	ldr	r3, [sp, #0]
90015f9c:	455b      	cmp	r3, fp
90015f9e:	f77f af63 	ble.w	90015e68 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
90015fa2:	4618      	mov	r0, r3
90015fa4:	f7ff fe58 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90015fa8:	a903      	add	r1, sp, #12
90015faa:	9003      	str	r0, [sp, #12]
90015fac:	4650      	mov	r0, sl
90015fae:	f7ff fe28 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015fb2:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
90015fb6:	4410      	add	r0, r2
90015fb8:	f8d9 2000 	ldr.w	r2, [r9]
90015fbc:	1b01      	subs	r1, r0, r4
90015fbe:	4420      	add	r0, r4
90015fc0:	428a      	cmp	r2, r1
90015fc2:	bfc8      	it	gt
90015fc4:	f8c9 1000 	strgt.w	r1, [r9]
90015fc8:	683a      	ldr	r2, [r7, #0]
90015fca:	4291      	cmp	r1, r2
90015fcc:	bfc8      	it	gt
90015fce:	6039      	strgt	r1, [r7, #0]
90015fd0:	f8d9 2000 	ldr.w	r2, [r9]
90015fd4:	4282      	cmp	r2, r0
90015fd6:	bfc8      	it	gt
90015fd8:	f8c9 0000 	strgt.w	r0, [r9]
90015fdc:	683b      	ldr	r3, [r7, #0]
90015fde:	4298      	cmp	r0, r3
90015fe0:	bfc8      	it	gt
90015fe2:	6038      	strgt	r0, [r7, #0]
90015fe4:	9800      	ldr	r0, [sp, #0]
90015fe6:	f7ff fe56 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90015fea:	a903      	add	r1, sp, #12
90015fec:	9003      	str	r0, [sp, #12]
90015fee:	4650      	mov	r0, sl
90015ff0:	f7ff fe07 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90015ff4:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
90015ff8:	6832      	ldr	r2, [r6, #0]
90015ffa:	1a18      	subs	r0, r3, r0
90015ffc:	1b03      	subs	r3, r0, r4
90015ffe:	4404      	add	r4, r0
90016000:	429a      	cmp	r2, r3
90016002:	bfc8      	it	gt
90016004:	6033      	strgt	r3, [r6, #0]
90016006:	682a      	ldr	r2, [r5, #0]
90016008:	4293      	cmp	r3, r2
9001600a:	bfc8      	it	gt
9001600c:	602b      	strgt	r3, [r5, #0]
9001600e:	6833      	ldr	r3, [r6, #0]
90016010:	42a3      	cmp	r3, r4
90016012:	bfc8      	it	gt
90016014:	6034      	strgt	r4, [r6, #0]
90016016:	682b      	ldr	r3, [r5, #0]
90016018:	429c      	cmp	r4, r3
9001601a:	bfc8      	it	gt
9001601c:	602c      	strgt	r4, [r5, #0]
9001601e:	e723      	b.n	90015e68 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

90016020 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
90016020:	b530      	push	{r4, r5, lr}
90016022:	4604      	mov	r4, r0
90016024:	4608      	mov	r0, r1
90016026:	4611      	mov	r1, r2
90016028:	461a      	mov	r2, r3
9001602a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001602e:	b089      	sub	sp, #36	@ 0x24
90016030:	2500      	movs	r5, #0
90016032:	015b      	lsls	r3, r3, #5
90016034:	9505      	str	r5, [sp, #20]
90016036:	9304      	str	r3, [sp, #16]
90016038:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001603c:	015b      	lsls	r3, r3, #5
9001603e:	e9cd 3506 	strd	r3, r5, [sp, #24]
90016042:	ab07      	add	r3, sp, #28
90016044:	2520      	movs	r5, #32
90016046:	9302      	str	r3, [sp, #8]
90016048:	ab06      	add	r3, sp, #24
9001604a:	9301      	str	r3, [sp, #4]
9001604c:	ab05      	add	r3, sp, #20
9001604e:	9300      	str	r3, [sp, #0]
90016050:	ab04      	add	r3, sp, #16
90016052:	f7ff fe3f 	bl	90015cd4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
90016056:	9a04      	ldr	r2, [sp, #16]
90016058:	9805      	ldr	r0, [sp, #20]
9001605a:	9b06      	ldr	r3, [sp, #24]
9001605c:	9907      	ldr	r1, [sp, #28]
9001605e:	fb92 f2f5 	sdiv	r2, r2, r5
90016062:	fb90 f0f5 	sdiv	r0, r0, r5
90016066:	fb93 f3f5 	sdiv	r3, r3, r5
9001606a:	fb91 f1f5 	sdiv	r1, r1, r5
9001606e:	b292      	uxth	r2, r2
90016070:	3002      	adds	r0, #2
90016072:	b29b      	uxth	r3, r3
90016074:	3102      	adds	r1, #2
90016076:	1a80      	subs	r0, r0, r2
90016078:	3a01      	subs	r2, #1
9001607a:	1ac9      	subs	r1, r1, r3
9001607c:	3b01      	subs	r3, #1
9001607e:	80a0      	strh	r0, [r4, #4]
90016080:	4620      	mov	r0, r4
90016082:	8022      	strh	r2, [r4, #0]
90016084:	8063      	strh	r3, [r4, #2]
90016086:	80e1      	strh	r1, [r4, #6]
90016088:	b009      	add	sp, #36	@ 0x24
9001608a:	bd30      	pop	{r4, r5, pc}

9001608c <_ZNK8touchgfx6Circle14getMinimalRectEv>:
9001608c:	b510      	push	{r4, lr}
9001608e:	4604      	mov	r4, r0
90016090:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
90016094:	f7ff ffc4 	bl	90016020 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
90016098:	4620      	mov	r0, r4
9001609a:	bd10      	pop	{r4, pc}

9001609c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
9001609c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900160a0:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
900160a4:	468a      	mov	sl, r1
900160a6:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
900160aa:	42b5      	cmp	r5, r6
900160ac:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
900160b0:	6c01      	ldr	r1, [r0, #64]	@ 0x40
900160b2:	b0af      	sub	sp, #188	@ 0xbc
900160b4:	bfa4      	itt	ge
900160b6:	462b      	movge	r3, r5
900160b8:	4635      	movge	r5, r6
900160ba:	4604      	mov	r4, r0
900160bc:	6b42      	ldr	r2, [r0, #52]	@ 0x34
900160be:	bfa8      	it	ge
900160c0:	461e      	movge	r6, r3
900160c2:	1b73      	subs	r3, r6, r5
900160c4:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
900160c8:	f04f 0320 	mov.w	r3, #32
900160cc:	bfa4      	itt	ge
900160ce:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
900160d2:	2500      	movge	r5, #0
900160d4:	fb99 f9f3 	sdiv	r9, r9, r3
900160d8:	fb9b fbf3 	sdiv	fp, fp, r3
900160dc:	2900      	cmp	r1, #0
900160de:	f000 80fb 	beq.w	900162d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x23c>
900160e2:	f9ba 0000 	ldrsh.w	r0, [sl]
900160e6:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
900160ea:	eba9 0700 	sub.w	r7, r9, r0
900160ee:	ebab 0803 	sub.w	r8, fp, r3
900160f2:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
900160f6:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
900160fa:	f8ba 7004 	ldrh.w	r7, [sl, #4]
900160fe:	4407      	add	r7, r0
90016100:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
90016104:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
90016108:	f8ba 8006 	ldrh.w	r8, [sl, #6]
9001610c:	b23f      	sxth	r7, r7
9001610e:	4498      	add	r8, r3
90016110:	2302      	movs	r3, #2
90016112:	eba9 0707 	sub.w	r7, r9, r7
90016116:	fa0f f888 	sxth.w	r8, r8
9001611a:	9303      	str	r3, [sp, #12]
9001611c:	2f00      	cmp	r7, #0
9001611e:	ebab 0808 	sub.w	r8, fp, r8
90016122:	bfb8      	it	lt
90016124:	427f      	neglt	r7, r7
90016126:	f1b8 0f00 	cmp.w	r8, #0
9001612a:	bfb8      	it	lt
9001612c:	f1c8 0800 	rsblt	r8, r8, #0
90016130:	45bc      	cmp	ip, r7
90016132:	bfcc      	ite	gt
90016134:	f10c 0701 	addgt.w	r7, ip, #1
90016138:	3701      	addle	r7, #1
9001613a:	4540      	cmp	r0, r8
9001613c:	bfc8      	it	gt
9001613e:	f100 0801 	addgt.w	r8, r0, #1
90016142:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
90016146:	bfd8      	it	le
90016148:	f108 0801 	addle.w	r8, r8, #1
9001614c:	3001      	adds	r0, #1
9001614e:	fb08 f808 	mul.w	r8, r8, r8
90016152:	1040      	asrs	r0, r0, #1
90016154:	fb07 8707 	mla	r7, r7, r7, r8
90016158:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
9001615c:	fb91 f1f3 	sdiv	r1, r1, r3
90016160:	1a52      	subs	r2, r2, r1
90016162:	920f      	str	r2, [sp, #60]	@ 0x3c
90016164:	f7ff fd58 	bl	90015c18 <_ZN8touchgfx7CWRUtil4sineEi>
90016168:	a92e      	add	r1, sp, #184	@ 0xb8
9001616a:	f841 0d74 	str.w	r0, [r1, #-116]!
9001616e:	a80f      	add	r0, sp, #60	@ 0x3c
90016170:	f7ff fd47 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016174:	f04f 0c20 	mov.w	ip, #32
90016178:	9b03      	ldr	r3, [sp, #12]
9001617a:	fb90 f0fc 	sdiv	r0, r0, ip
9001617e:	4340      	muls	r0, r0
90016180:	4287      	cmp	r7, r0
90016182:	da04      	bge.n	9001618e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf2>
90016184:	2401      	movs	r4, #1
90016186:	4620      	mov	r0, r4
90016188:	b02f      	add	sp, #188	@ 0xbc
9001618a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001618e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
90016190:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90016192:	fb91 f2f3 	sdiv	r2, r1, r3
90016196:	4402      	add	r2, r0
90016198:	fb92 f2fc 	sdiv	r2, r2, ip
9001619c:	f9ba 1000 	ldrsh.w	r1, [sl]
900161a0:	3201      	adds	r2, #1
900161a2:	f8ba 3004 	ldrh.w	r3, [sl, #4]
900161a6:	4352      	muls	r2, r2
900161a8:	440b      	add	r3, r1
900161aa:	b21b      	sxth	r3, r3
900161ac:	454b      	cmp	r3, r9
900161ae:	bfa8      	it	ge
900161b0:	464b      	movge	r3, r9
900161b2:	428b      	cmp	r3, r1
900161b4:	bfac      	ite	ge
900161b6:	eba9 0903 	subge.w	r9, r9, r3
900161ba:	eba9 0901 	sublt.w	r9, r9, r1
900161be:	f8ba 3006 	ldrh.w	r3, [sl, #6]
900161c2:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
900161c6:	440b      	add	r3, r1
900161c8:	b21b      	sxth	r3, r3
900161ca:	455b      	cmp	r3, fp
900161cc:	bfa8      	it	ge
900161ce:	465b      	movge	r3, fp
900161d0:	428b      	cmp	r3, r1
900161d2:	bfac      	ite	ge
900161d4:	ebab 0b03 	subge.w	fp, fp, r3
900161d8:	ebab 0b01 	sublt.w	fp, fp, r1
900161dc:	fb0b fb0b 	mul.w	fp, fp, fp
900161e0:	fb09 b909 	mla	r9, r9, r9, fp
900161e4:	4591      	cmp	r9, r2
900161e6:	dccd      	bgt.n	90016184 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
900161e8:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
900161ec:	4621      	mov	r1, r4
900161ee:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
900161f0:	4648      	mov	r0, r9
900161f2:	f004 fb7f 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900161f6:	6823      	ldr	r3, [r4, #0]
900161f8:	4620      	mov	r0, r4
900161fa:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
900161fc:	4798      	blx	r3
900161fe:	4653      	mov	r3, sl
90016200:	9000      	str	r0, [sp, #0]
90016202:	464a      	mov	r2, r9
90016204:	4639      	mov	r1, r7
90016206:	a811      	add	r0, sp, #68	@ 0x44
90016208:	f014 fec0 	bl	9002af8c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001620c:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9001620e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
90016210:	920b      	str	r2, [sp, #44]	@ 0x2c
90016212:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
90016216:	930c      	str	r3, [sp, #48]	@ 0x30
90016218:	dd07      	ble.n	9001622a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18e>
9001621a:	2102      	movs	r1, #2
9001621c:	fb93 f3f1 	sdiv	r3, r3, r1
90016220:	4413      	add	r3, r2
90016222:	930c      	str	r3, [sp, #48]	@ 0x30
90016224:	fb93 f3f1 	sdiv	r3, r3, r1
90016228:	930b      	str	r3, [sp, #44]	@ 0x2c
9001622a:	f04f 0a02 	mov.w	sl, #2
9001622e:	4628      	mov	r0, r5
90016230:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
90016234:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
90016238:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9001623c:	017f      	lsls	r7, r7, #5
9001623e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90016242:	930d      	str	r3, [sp, #52]	@ 0x34
90016244:	f7ff fd08 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016248:	4649      	mov	r1, r9
9001624a:	900f      	str	r0, [sp, #60]	@ 0x3c
9001624c:	a80d      	add	r0, sp, #52	@ 0x34
9001624e:	f7ff fcd8 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016252:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016254:	fb90 f0fa 	sdiv	r0, r0, sl
90016258:	eb00 0b03 	add.w	fp, r0, r3
9001625c:	4628      	mov	r0, r5
9001625e:	f7ff fd1a 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016262:	f848 0d80 	str.w	r0, [r8, #-128]!
90016266:	a80d      	add	r0, sp, #52	@ 0x34
90016268:	4641      	mov	r1, r8
9001626a:	f7ff fcca 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001626e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016270:	4659      	mov	r1, fp
90016272:	fb90 f0fa 	sdiv	r0, r0, sl
90016276:	1a12      	subs	r2, r2, r0
90016278:	a811      	add	r0, sp, #68	@ 0x44
9001627a:	f014 ffd3 	bl	9002b224 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
9001627e:	f105 0a20 	add.w	sl, r5, #32
90016282:	bb67      	cbnz	r7, 900162de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
90016284:	46ab      	mov	fp, r5
90016286:	45b2      	cmp	sl, r6
90016288:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001628a:	dc33      	bgt.n	900162f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x258>
9001628c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001628e:	4650      	mov	r0, sl
90016290:	eb02 0241 	add.w	r2, r2, r1, lsl #1
90016294:	920d      	str	r2, [sp, #52]	@ 0x34
90016296:	f7ff fcdf 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001629a:	4641      	mov	r1, r8
9001629c:	900e      	str	r0, [sp, #56]	@ 0x38
9001629e:	a80d      	add	r0, sp, #52	@ 0x34
900162a0:	f7ff fcaf 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900162a4:	2302      	movs	r3, #2
900162a6:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900162a8:	fb90 f0f3 	sdiv	r0, r0, r3
900162ac:	eb00 0b02 	add.w	fp, r0, r2
900162b0:	4650      	mov	r0, sl
900162b2:	f7ff fcf0 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900162b6:	4649      	mov	r1, r9
900162b8:	900f      	str	r0, [sp, #60]	@ 0x3c
900162ba:	a80d      	add	r0, sp, #52	@ 0x34
900162bc:	f7ff fca1 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900162c0:	2302      	movs	r3, #2
900162c2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900162c4:	4659      	mov	r1, fp
900162c6:	46d3      	mov	fp, sl
900162c8:	44ba      	add	sl, r7
900162ca:	fb90 f0f3 	sdiv	r0, r0, r3
900162ce:	1a12      	subs	r2, r2, r0
900162d0:	a811      	add	r0, sp, #68	@ 0x44
900162d2:	f014 fff4 	bl	9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900162d6:	e7d6      	b.n	90016286 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ea>
900162d8:	fb92 f2f3 	sdiv	r2, r2, r3
900162dc:	e75e      	b.n	9001619c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x100>
900162de:	fb9a f2f7 	sdiv	r2, sl, r7
900162e2:	fb07 a212 	mls	r2, r7, r2, sl
900162e6:	1aba      	subs	r2, r7, r2
900162e8:	fb92 f1f7 	sdiv	r1, r2, r7
900162ec:	fb07 2211 	mls	r2, r7, r1, r2
900162f0:	4492      	add	sl, r2
900162f2:	e7c7      	b.n	90016284 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e8>
900162f4:	455e      	cmp	r6, fp
900162f6:	dd23      	ble.n	90016340 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
900162f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900162fa:	f04f 0a02 	mov.w	sl, #2
900162fe:	4630      	mov	r0, r6
90016300:	eb02 0243 	add.w	r2, r2, r3, lsl #1
90016304:	920d      	str	r2, [sp, #52]	@ 0x34
90016306:	f7ff fca7 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001630a:	4641      	mov	r1, r8
9001630c:	900e      	str	r0, [sp, #56]	@ 0x38
9001630e:	a80d      	add	r0, sp, #52	@ 0x34
90016310:	f7ff fc77 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016314:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016316:	fb90 f0fa 	sdiv	r0, r0, sl
9001631a:	4403      	add	r3, r0
9001631c:	4630      	mov	r0, r6
9001631e:	9303      	str	r3, [sp, #12]
90016320:	f7ff fcb9 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016324:	4649      	mov	r1, r9
90016326:	900f      	str	r0, [sp, #60]	@ 0x3c
90016328:	a80d      	add	r0, sp, #52	@ 0x34
9001632a:	f7ff fc6a 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001632e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016330:	9b03      	ldr	r3, [sp, #12]
90016332:	fb90 f0fa 	sdiv	r0, r0, sl
90016336:	4619      	mov	r1, r3
90016338:	1a12      	subs	r2, r2, r0
9001633a:	a811      	add	r0, sp, #68	@ 0x44
9001633c:	f014 ffbf 	bl	9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016340:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90016342:	b99b      	cbnz	r3, 9001636c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d0>
90016344:	1b75      	subs	r5, r6, r5
90016346:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
9001634a:	da04      	bge.n	90016356 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
9001634c:	a811      	add	r0, sp, #68	@ 0x44
9001634e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
90016352:	f014 ffb4 	bl	9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016356:	21ff      	movs	r1, #255	@ 0xff
90016358:	a811      	add	r0, sp, #68	@ 0x44
9001635a:	f014 feab 	bl	9002b0b4 <_ZN8touchgfx6Canvas6renderEh>
9001635e:	4604      	mov	r4, r0
90016360:	4b89      	ldr	r3, [pc, #548]	@ (90016588 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ec>)
90016362:	a816      	add	r0, sp, #88	@ 0x58
90016364:	9311      	str	r3, [sp, #68]	@ 0x44
90016366:	f000 fe52 	bl	9001700e <_ZN8touchgfx7OutlineD1Ev>
9001636a:	e70c      	b.n	90016186 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xea>
9001636c:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
90016370:	429a      	cmp	r2, r3
90016372:	f0c0 8107 	bcc.w	90016584 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e8>
90016376:	1b73      	subs	r3, r6, r5
90016378:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
9001637c:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90016380:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
90016384:	9303      	str	r3, [sp, #12]
90016386:	da43      	bge.n	90016410 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
90016388:	4630      	mov	r0, r6
9001638a:	f7ff fc65 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001638e:	4649      	mov	r1, r9
90016390:	900f      	str	r0, [sp, #60]	@ 0x3c
90016392:	a80b      	add	r0, sp, #44	@ 0x2c
90016394:	f7ff fc35 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016398:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9001639a:	18c3      	adds	r3, r0, r3
9001639c:	4630      	mov	r0, r6
9001639e:	9305      	str	r3, [sp, #20]
900163a0:	f7ff fc79 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900163a4:	4649      	mov	r1, r9
900163a6:	900f      	str	r0, [sp, #60]	@ 0x3c
900163a8:	a80b      	add	r0, sp, #44	@ 0x2c
900163aa:	f7ff fc2a 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900163ae:	6b23      	ldr	r3, [r4, #48]	@ 0x30
900163b0:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
900163b4:	1a1b      	subs	r3, r3, r0
900163b6:	9206      	str	r2, [sp, #24]
900163b8:	9304      	str	r3, [sp, #16]
900163ba:	eb06 030a 	add.w	r3, r6, sl
900163be:	9a06      	ldr	r2, [sp, #24]
900163c0:	4293      	cmp	r3, r2
900163c2:	da25      	bge.n	90016410 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
900163c4:	4618      	mov	r0, r3
900163c6:	9308      	str	r3, [sp, #32]
900163c8:	f7ff fc46 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900163cc:	4649      	mov	r1, r9
900163ce:	900f      	str	r0, [sp, #60]	@ 0x3c
900163d0:	a80c      	add	r0, sp, #48	@ 0x30
900163d2:	f7ff fc16 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900163d6:	2202      	movs	r2, #2
900163d8:	9b05      	ldr	r3, [sp, #20]
900163da:	9209      	str	r2, [sp, #36]	@ 0x24
900163dc:	fb90 f0f2 	sdiv	r0, r0, r2
900163e0:	18c3      	adds	r3, r0, r3
900163e2:	9307      	str	r3, [sp, #28]
900163e4:	9b08      	ldr	r3, [sp, #32]
900163e6:	4618      	mov	r0, r3
900163e8:	f7ff fc55 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900163ec:	a92e      	add	r1, sp, #184	@ 0xb8
900163ee:	f841 0d80 	str.w	r0, [r1, #-128]!
900163f2:	a80c      	add	r0, sp, #48	@ 0x30
900163f4:	f7ff fc05 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900163f8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900163fa:	9b04      	ldr	r3, [sp, #16]
900163fc:	9907      	ldr	r1, [sp, #28]
900163fe:	fb90 f2f2 	sdiv	r2, r0, r2
90016402:	a811      	add	r0, sp, #68	@ 0x44
90016404:	1a9a      	subs	r2, r3, r2
90016406:	f014 ff5a 	bl	9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001640a:	9b08      	ldr	r3, [sp, #32]
9001640c:	4453      	add	r3, sl
9001640e:	e7d6      	b.n	900163be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x322>
90016410:	455e      	cmp	r6, fp
90016412:	dd25      	ble.n	90016460 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c4>
90016414:	4630      	mov	r0, r6
90016416:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9001641a:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
9001641e:	930d      	str	r3, [sp, #52]	@ 0x34
90016420:	f7ff fc1a 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016424:	4641      	mov	r1, r8
90016426:	900e      	str	r0, [sp, #56]	@ 0x38
90016428:	a80d      	add	r0, sp, #52	@ 0x34
9001642a:	f7ff fbea 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001642e:	2202      	movs	r2, #2
90016430:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016432:	9204      	str	r2, [sp, #16]
90016434:	fb90 f0f2 	sdiv	r0, r0, r2
90016438:	eb00 0903 	add.w	r9, r0, r3
9001643c:	4630      	mov	r0, r6
9001643e:	f7ff fc2a 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016442:	a92e      	add	r1, sp, #184	@ 0xb8
90016444:	f841 0d7c 	str.w	r0, [r1, #-124]!
90016448:	a80d      	add	r0, sp, #52	@ 0x34
9001644a:	f7ff fbda 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001644e:	9a04      	ldr	r2, [sp, #16]
90016450:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016452:	4649      	mov	r1, r9
90016454:	fb90 f2f2 	sdiv	r2, r0, r2
90016458:	a811      	add	r0, sp, #68	@ 0x44
9001645a:	1a9a      	subs	r2, r3, r2
9001645c:	f014 ff2f 	bl	9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016460:	46d9      	mov	r9, fp
90016462:	2602      	movs	r6, #2
90016464:	45a9      	cmp	r9, r5
90016466:	db25      	blt.n	900164b4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x418>
90016468:	4648      	mov	r0, r9
9001646a:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
9001646e:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
90016472:	930d      	str	r3, [sp, #52]	@ 0x34
90016474:	f7ff fbf0 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016478:	4641      	mov	r1, r8
9001647a:	900e      	str	r0, [sp, #56]	@ 0x38
9001647c:	a80d      	add	r0, sp, #52	@ 0x34
9001647e:	f7ff fbc0 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016482:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016484:	fb90 f0f6 	sdiv	r0, r0, r6
90016488:	eb00 0b03 	add.w	fp, r0, r3
9001648c:	4648      	mov	r0, r9
9001648e:	f7ff fc02 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016492:	a90f      	add	r1, sp, #60	@ 0x3c
90016494:	900f      	str	r0, [sp, #60]	@ 0x3c
90016496:	a80d      	add	r0, sp, #52	@ 0x34
90016498:	f7ff fbb3 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001649c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
9001649e:	4659      	mov	r1, fp
900164a0:	46cb      	mov	fp, r9
900164a2:	eba9 0907 	sub.w	r9, r9, r7
900164a6:	fb90 f0f6 	sdiv	r0, r0, r6
900164aa:	1a12      	subs	r2, r2, r0
900164ac:	a811      	add	r0, sp, #68	@ 0x44
900164ae:	f014 ff06 	bl	9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900164b2:	e7d7      	b.n	90016464 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c8>
900164b4:	455d      	cmp	r5, fp
900164b6:	da22      	bge.n	900164fe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x462>
900164b8:	2602      	movs	r6, #2
900164ba:	4628      	mov	r0, r5
900164bc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
900164c0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
900164c4:	930d      	str	r3, [sp, #52]	@ 0x34
900164c6:	f7ff fbc7 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900164ca:	4641      	mov	r1, r8
900164cc:	900e      	str	r0, [sp, #56]	@ 0x38
900164ce:	a80d      	add	r0, sp, #52	@ 0x34
900164d0:	f7ff fb97 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900164d4:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
900164d6:	fb90 f0f6 	sdiv	r0, r0, r6
900164da:	4407      	add	r7, r0
900164dc:	4628      	mov	r0, r5
900164de:	f7ff fbda 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
900164e2:	a92e      	add	r1, sp, #184	@ 0xb8
900164e4:	f841 0d7c 	str.w	r0, [r1, #-124]!
900164e8:	a80d      	add	r0, sp, #52	@ 0x34
900164ea:	f7ff fb8a 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900164ee:	6b22      	ldr	r2, [r4, #48]	@ 0x30
900164f0:	4639      	mov	r1, r7
900164f2:	fb90 f0f6 	sdiv	r0, r0, r6
900164f6:	1a12      	subs	r2, r2, r0
900164f8:	a811      	add	r0, sp, #68	@ 0x44
900164fa:	f014 fee0 	bl	9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900164fe:	9b03      	ldr	r3, [sp, #12]
90016500:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
90016504:	f6bf af27 	bge.w	90016356 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90016508:	ae2e      	add	r6, sp, #184	@ 0xb8
9001650a:	4628      	mov	r0, r5
9001650c:	f7ff fba4 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90016510:	f04f 0b02 	mov.w	fp, #2
90016514:	f846 0d7c 	str.w	r0, [r6, #-124]!
90016518:	a80b      	add	r0, sp, #44	@ 0x2c
9001651a:	4631      	mov	r1, r6
9001651c:	f7ff fb71 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016520:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90016522:	eb00 0903 	add.w	r9, r0, r3
90016526:	4628      	mov	r0, r5
90016528:	f7ff fbb5 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
9001652c:	4631      	mov	r1, r6
9001652e:	900f      	str	r0, [sp, #60]	@ 0x3c
90016530:	a80b      	add	r0, sp, #44	@ 0x2c
90016532:	f7ff fb66 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016536:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016538:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
9001653c:	eba3 0800 	sub.w	r8, r3, r0
90016540:	4454      	add	r4, sl
90016542:	42a5      	cmp	r5, r4
90016544:	f77f af07 	ble.w	90016356 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
90016548:	4620      	mov	r0, r4
9001654a:	f7ff fb85 	bl	90015c58 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001654e:	4631      	mov	r1, r6
90016550:	900f      	str	r0, [sp, #60]	@ 0x3c
90016552:	a80c      	add	r0, sp, #48	@ 0x30
90016554:	f7ff fb55 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016558:	fb90 f0fb 	sdiv	r0, r0, fp
9001655c:	eb00 0709 	add.w	r7, r0, r9
90016560:	4620      	mov	r0, r4
90016562:	f7ff fb98 	bl	90015c96 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
90016566:	a90e      	add	r1, sp, #56	@ 0x38
90016568:	900e      	str	r0, [sp, #56]	@ 0x38
9001656a:	a80c      	add	r0, sp, #48	@ 0x30
9001656c:	f7ff fb49 	bl	90015c02 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90016570:	4639      	mov	r1, r7
90016572:	4454      	add	r4, sl
90016574:	fb90 f2fb 	sdiv	r2, r0, fp
90016578:	a811      	add	r0, sp, #68	@ 0x44
9001657a:	eba8 0202 	sub.w	r2, r8, r2
9001657e:	f014 fe9e 	bl	9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
90016582:	e7de      	b.n	90016542 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4a6>
90016584:	2400      	movs	r4, #0
90016586:	e6eb      	b.n	90016360 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c4>
90016588:	90030954 	.word	0x90030954

9001658c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
9001658c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001658e:	6803      	ldr	r3, [r0, #0]
90016590:	460d      	mov	r5, r1
90016592:	4604      	mov	r4, r0
90016594:	4601      	mov	r1, r0
90016596:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90016598:	a802      	add	r0, sp, #8
9001659a:	4798      	blx	r3
9001659c:	6828      	ldr	r0, [r5, #0]
9001659e:	6869      	ldr	r1, [r5, #4]
900165a0:	466b      	mov	r3, sp
900165a2:	c303      	stmia	r3!, {r0, r1}
900165a4:	4668      	mov	r0, sp
900165a6:	4619      	mov	r1, r3
900165a8:	f7fc ff9c 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
900165ac:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900165ae:	b188      	cbz	r0, 900165d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900165b0:	6803      	ldr	r3, [r0, #0]
900165b2:	1d21      	adds	r1, r4, #4
900165b4:	68db      	ldr	r3, [r3, #12]
900165b6:	4798      	blx	r3
900165b8:	b160      	cbz	r0, 900165d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900165ba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900165be:	2b00      	cmp	r3, #0
900165c0:	dd08      	ble.n	900165d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900165c2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
900165c6:	2d00      	cmp	r5, #0
900165c8:	dd04      	ble.n	900165d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900165ca:	4a2b      	ldr	r2, [pc, #172]	@ (90016678 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
900165cc:	7812      	ldrb	r2, [r2, #0]
900165ce:	b11a      	cbz	r2, 900165d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
900165d0:	2a01      	cmp	r2, #1
900165d2:	d029      	beq.n	90016628 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
900165d4:	b004      	add	sp, #16
900165d6:	bd70      	pop	{r4, r5, r6, pc}
900165d8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900165dc:	441d      	add	r5, r3
900165de:	b2ad      	uxth	r5, r5
900165e0:	b22e      	sxth	r6, r5
900165e2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900165e6:	42b3      	cmp	r3, r6
900165e8:	daf4      	bge.n	900165d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900165ea:	6823      	ldr	r3, [r4, #0]
900165ec:	4669      	mov	r1, sp
900165ee:	4620      	mov	r0, r4
900165f0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900165f2:	4798      	blx	r3
900165f4:	b940      	cbnz	r0, 90016608 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
900165f6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
900165fa:	2b01      	cmp	r3, #1
900165fc:	d004      	beq.n	90016608 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
900165fe:	3301      	adds	r3, #1
90016600:	105b      	asrs	r3, r3, #1
90016602:	f8ad 3006 	strh.w	r3, [sp, #6]
90016606:	e7f0      	b.n	900165ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90016608:	f8bd 2006 	ldrh.w	r2, [sp, #6]
9001660c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016610:	4413      	add	r3, r2
90016612:	b29b      	uxth	r3, r3
90016614:	441a      	add	r2, r3
90016616:	f8ad 3002 	strh.w	r3, [sp, #2]
9001661a:	b212      	sxth	r2, r2
9001661c:	4296      	cmp	r6, r2
9001661e:	dae0      	bge.n	900165e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90016620:	1aeb      	subs	r3, r5, r3
90016622:	f8ad 3006 	strh.w	r3, [sp, #6]
90016626:	e7dc      	b.n	900165e2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90016628:	f8bd 5000 	ldrh.w	r5, [sp]
9001662c:	441d      	add	r5, r3
9001662e:	b2ad      	uxth	r5, r5
90016630:	b22e      	sxth	r6, r5
90016632:	f9bd 3000 	ldrsh.w	r3, [sp]
90016636:	42b3      	cmp	r3, r6
90016638:	dacc      	bge.n	900165d4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001663a:	6823      	ldr	r3, [r4, #0]
9001663c:	4669      	mov	r1, sp
9001663e:	4620      	mov	r0, r4
90016640:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90016642:	4798      	blx	r3
90016644:	b940      	cbnz	r0, 90016658 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90016646:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001664a:	2b01      	cmp	r3, #1
9001664c:	d004      	beq.n	90016658 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001664e:	3301      	adds	r3, #1
90016650:	105b      	asrs	r3, r3, #1
90016652:	f8ad 3004 	strh.w	r3, [sp, #4]
90016656:	e7f0      	b.n	9001663a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90016658:	f8bd 2004 	ldrh.w	r2, [sp, #4]
9001665c:	f8bd 3000 	ldrh.w	r3, [sp]
90016660:	4413      	add	r3, r2
90016662:	b29b      	uxth	r3, r3
90016664:	441a      	add	r2, r3
90016666:	f8ad 3000 	strh.w	r3, [sp]
9001666a:	b212      	sxth	r2, r2
9001666c:	4296      	cmp	r6, r2
9001666e:	dae0      	bge.n	90016632 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90016670:	1aeb      	subs	r3, r5, r3
90016672:	f8ad 3004 	strh.w	r3, [sp, #4]
90016676:	e7dc      	b.n	90016632 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90016678:	2402458e 	.word	0x2402458e

9001667c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
9001667c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9001667e:	6803      	ldr	r3, [r0, #0]
90016680:	4604      	mov	r4, r0
90016682:	4601      	mov	r1, r0
90016684:	4668      	mov	r0, sp
90016686:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90016688:	4798      	blx	r3
9001668a:	2100      	movs	r1, #0
9001668c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90016690:	4668      	mov	r0, sp
90016692:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90016696:	9102      	str	r1, [sp, #8]
90016698:	a902      	add	r1, sp, #8
9001669a:	f8ad 200c 	strh.w	r2, [sp, #12]
9001669e:	f8ad 300e 	strh.w	r3, [sp, #14]
900166a2:	f7fc ff1f 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
900166a6:	6823      	ldr	r3, [r4, #0]
900166a8:	4669      	mov	r1, sp
900166aa:	4620      	mov	r0, r4
900166ac:	691b      	ldr	r3, [r3, #16]
900166ae:	4798      	blx	r3
900166b0:	b004      	add	sp, #16
900166b2:	bd10      	pop	{r4, pc}

900166b4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
900166b4:	2101      	movs	r1, #1
900166b6:	2200      	movs	r2, #0
900166b8:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
900166bc:	490a      	ldr	r1, [pc, #40]	@ (900166e8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
900166be:	8082      	strh	r2, [r0, #4]
900166c0:	6001      	str	r1, [r0, #0]
900166c2:	21ff      	movs	r1, #255	@ 0xff
900166c4:	80c2      	strh	r2, [r0, #6]
900166c6:	8102      	strh	r2, [r0, #8]
900166c8:	8142      	strh	r2, [r0, #10]
900166ca:	8182      	strh	r2, [r0, #12]
900166cc:	81c2      	strh	r2, [r0, #14]
900166ce:	8202      	strh	r2, [r0, #16]
900166d0:	8242      	strh	r2, [r0, #18]
900166d2:	61c2      	str	r2, [r0, #28]
900166d4:	8402      	strh	r2, [r0, #32]
900166d6:	8442      	strh	r2, [r0, #34]	@ 0x22
900166d8:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
900166dc:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
900166e0:	6282      	str	r2, [r0, #40]	@ 0x28
900166e2:	e9c0 2205 	strd	r2, r2, [r0, #20]
900166e6:	4770      	bx	lr
900166e8:	9003023c 	.word	0x9003023c

900166ec <_ZNK8touchgfx3Box12getSolidRectEv>:
900166ec:	2300      	movs	r3, #0
900166ee:	8083      	strh	r3, [r0, #4]
900166f0:	80c3      	strh	r3, [r0, #6]
900166f2:	8003      	strh	r3, [r0, #0]
900166f4:	8043      	strh	r3, [r0, #2]
900166f6:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
900166fa:	2bff      	cmp	r3, #255	@ 0xff
900166fc:	bf01      	itttt	eq
900166fe:	890b      	ldrheq	r3, [r1, #8]
90016700:	8083      	strheq	r3, [r0, #4]
90016702:	894b      	ldrheq	r3, [r1, #10]
90016704:	80c3      	strheq	r3, [r0, #6]
90016706:	4770      	bx	lr

90016708 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90016708:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001670a:	4604      	mov	r4, r0
9001670c:	466b      	mov	r3, sp
9001670e:	6808      	ldr	r0, [r1, #0]
90016710:	6849      	ldr	r1, [r1, #4]
90016712:	c303      	stmia	r3!, {r0, r1}
90016714:	6823      	ldr	r3, [r4, #0]
90016716:	4669      	mov	r1, sp
90016718:	4620      	mov	r0, r4
9001671a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001671c:	4798      	blx	r3
9001671e:	4b08      	ldr	r3, [pc, #32]	@ (90016740 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90016720:	681b      	ldr	r3, [r3, #0]
90016722:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90016726:	b10a      	cbz	r2, 9001672c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90016728:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001672a:	b900      	cbnz	r0, 9001672e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
9001672c:	6898      	ldr	r0, [r3, #8]
9001672e:	6803      	ldr	r3, [r0, #0]
90016730:	4669      	mov	r1, sp
90016732:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90016734:	6a1d      	ldr	r5, [r3, #32]
90016736:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
9001673a:	47a8      	blx	r5
9001673c:	b003      	add	sp, #12
9001673e:	bd30      	pop	{r4, r5, pc}
90016740:	24024598 	.word	0x24024598

90016744 <_ZN8touchgfx3BoxD1Ev>:
90016744:	4770      	bx	lr

90016746 <_ZN8touchgfx3BoxD0Ev>:
90016746:	b510      	push	{r4, lr}
90016748:	4604      	mov	r4, r0
9001674a:	212c      	movs	r1, #44	@ 0x2c
9001674c:	f015 fa05 	bl	9002bb5a <_ZdlPvj>
90016750:	4620      	mov	r0, r4
90016752:	bd10      	pop	{r4, pc}

90016754 <_ZNK8touchgfx3Box17invalidateContentEv>:
90016754:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
90016758:	b12a      	cbz	r2, 90016766 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001675a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9001675e:	b112      	cbz	r2, 90016766 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90016760:	6803      	ldr	r3, [r0, #0]
90016762:	695b      	ldr	r3, [r3, #20]
90016764:	4718      	bx	r3
90016766:	4770      	bx	lr

90016768 <_ZN8touchgfx5ImageD1Ev>:
90016768:	4770      	bx	lr

9001676a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
9001676a:	b570      	push	{r4, r5, r6, lr}
9001676c:	880b      	ldrh	r3, [r1, #0]
9001676e:	460d      	mov	r5, r1
90016770:	4604      	mov	r4, r0
90016772:	84c3      	strh	r3, [r0, #38]	@ 0x26
90016774:	4608      	mov	r0, r1
90016776:	f006 f833 	bl	9001c7e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001677a:	4606      	mov	r6, r0
9001677c:	4628      	mov	r0, r5
9001677e:	f006 f863 	bl	9001c848 <_ZNK8touchgfx6Bitmap9getHeightEv>
90016782:	6823      	ldr	r3, [r4, #0]
90016784:	4605      	mov	r5, r0
90016786:	4631      	mov	r1, r6
90016788:	4620      	mov	r0, r4
9001678a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001678c:	4798      	blx	r3
9001678e:	6823      	ldr	r3, [r4, #0]
90016790:	4629      	mov	r1, r5
90016792:	4620      	mov	r0, r4
90016794:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90016796:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001679a:	4718      	bx	r3

9001679c <_ZN8touchgfx5ImageD0Ev>:
9001679c:	b510      	push	{r4, lr}
9001679e:	4604      	mov	r4, r0
900167a0:	212c      	movs	r1, #44	@ 0x2c
900167a2:	f015 f9da 	bl	9002bb5a <_ZdlPvj>
900167a6:	4620      	mov	r0, r4
900167a8:	bd10      	pop	{r4, pc}

900167aa <_ZNK8touchgfx5Image12getSolidRectEv>:
900167aa:	b510      	push	{r4, lr}
900167ac:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
900167b0:	4604      	mov	r4, r0
900167b2:	2bff      	cmp	r3, #255	@ 0xff
900167b4:	d006      	beq.n	900167c4 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
900167b6:	2300      	movs	r3, #0
900167b8:	8003      	strh	r3, [r0, #0]
900167ba:	8043      	strh	r3, [r0, #2]
900167bc:	8083      	strh	r3, [r0, #4]
900167be:	80c3      	strh	r3, [r0, #6]
900167c0:	4620      	mov	r0, r4
900167c2:	bd10      	pop	{r4, pc}
900167c4:	3126      	adds	r1, #38	@ 0x26
900167c6:	f006 f873 	bl	9001c8b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900167ca:	e7f9      	b.n	900167c0 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

900167cc <_ZNK8touchgfx5Image17invalidateContentEv>:
900167cc:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
900167d0:	b12a      	cbz	r2, 900167de <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
900167d2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
900167d6:	b112      	cbz	r2, 900167de <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
900167d8:	6803      	ldr	r3, [r0, #0]
900167da:	695b      	ldr	r3, [r3, #20]
900167dc:	4718      	bx	r3
900167de:	4770      	bx	lr

900167e0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
900167e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900167e4:	4604      	mov	r4, r0
900167e6:	b088      	sub	sp, #32
900167e8:	2500      	movs	r5, #0
900167ea:	460f      	mov	r7, r1
900167ec:	f854 3b26 	ldr.w	r3, [r4], #38
900167f0:	a904      	add	r1, sp, #16
900167f2:	4606      	mov	r6, r0
900167f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900167f6:	e9cd 5504 	strd	r5, r5, [sp, #16]
900167fa:	4798      	blx	r3
900167fc:	4620      	mov	r0, r4
900167fe:	f005 ffef 	bl	9001c7e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
90016802:	4680      	mov	r8, r0
90016804:	4620      	mov	r0, r4
90016806:	f006 f81f 	bl	9001c848 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001680a:	9506      	str	r5, [sp, #24]
9001680c:	ad06      	add	r5, sp, #24
9001680e:	f8ad 001e 	strh.w	r0, [sp, #30]
90016812:	4639      	mov	r1, r7
90016814:	f8ad 801c 	strh.w	r8, [sp, #28]
90016818:	4628      	mov	r0, r5
9001681a:	f7fc fe63 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
9001681e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90016822:	2b00      	cmp	r3, #0
90016824:	dd19      	ble.n	9001685a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90016826:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
9001682a:	2b00      	cmp	r3, #0
9001682c:	dd15      	ble.n	9001685a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001682e:	4b0c      	ldr	r3, [pc, #48]	@ (90016860 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90016830:	681b      	ldr	r3, [r3, #0]
90016832:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90016836:	b10a      	cbz	r2, 9001683c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90016838:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001683a:	b900      	cbnz	r0, 9001683e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
9001683c:	6898      	ldr	r0, [r3, #8]
9001683e:	2701      	movs	r7, #1
90016840:	6801      	ldr	r1, [r0, #0]
90016842:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90016846:	9702      	str	r7, [sp, #8]
90016848:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
9001684c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90016850:	e9cd 5600 	strd	r5, r6, [sp]
90016854:	688d      	ldr	r5, [r1, #8]
90016856:	4621      	mov	r1, r4
90016858:	47a8      	blx	r5
9001685a:	b008      	add	sp, #32
9001685c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016860:	24024598 	.word	0x24024598

90016864 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90016864:	2000      	movs	r0, #0
90016866:	4770      	bx	lr

90016868 <_ZN8touchgfx8TextArea8setWidthEs>:
90016868:	b530      	push	{r4, r5, lr}
9001686a:	b085      	sub	sp, #20
9001686c:	6803      	ldr	r3, [r0, #0]
9001686e:	4604      	mov	r4, r0
90016870:	8101      	strh	r1, [r0, #8]
90016872:	466d      	mov	r5, sp
90016874:	4601      	mov	r1, r0
90016876:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9001687a:	343c      	adds	r4, #60	@ 0x3c
9001687c:	4628      	mov	r0, r5
9001687e:	4798      	blx	r3
90016880:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90016884:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90016888:	b005      	add	sp, #20
9001688a:	bd30      	pop	{r4, r5, pc}

9001688c <_ZN8touchgfx8TextArea9setHeightEs>:
9001688c:	b530      	push	{r4, r5, lr}
9001688e:	b085      	sub	sp, #20
90016890:	6803      	ldr	r3, [r0, #0]
90016892:	4604      	mov	r4, r0
90016894:	8141      	strh	r1, [r0, #10]
90016896:	466d      	mov	r5, sp
90016898:	4601      	mov	r1, r0
9001689a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9001689e:	343c      	adds	r4, #60	@ 0x3c
900168a0:	4628      	mov	r0, r5
900168a2:	4798      	blx	r3
900168a4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900168a8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900168ac:	b005      	add	sp, #20
900168ae:	bd30      	pop	{r4, r5, pc}

900168b0 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
900168b0:	2200      	movs	r2, #0
900168b2:	8002      	strh	r2, [r0, #0]
900168b4:	8042      	strh	r2, [r0, #2]
900168b6:	8082      	strh	r2, [r0, #4]
900168b8:	80c2      	strh	r2, [r0, #6]
900168ba:	4770      	bx	lr

900168bc <_ZN8touchgfx8TextArea8setAlphaEh>:
900168bc:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
900168c0:	4770      	bx	lr
	...

900168c4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
900168c4:	b570      	push	{r4, r5, r6, lr}
900168c6:	6803      	ldr	r3, [r0, #0]
900168c8:	4604      	mov	r4, r0
900168ca:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900168cc:	460d      	mov	r5, r1
900168ce:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
900168d0:	4b08      	ldr	r3, [pc, #32]	@ (900168f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
900168d2:	681b      	ldr	r3, [r3, #0]
900168d4:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900168d8:	4b07      	ldr	r3, [pc, #28]	@ (900168f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
900168da:	681b      	ldr	r3, [r3, #0]
900168dc:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900168e0:	6803      	ldr	r3, [r0, #0]
900168e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900168e4:	4798      	blx	r3
900168e6:	1a29      	subs	r1, r5, r0
900168e8:	4633      	mov	r3, r6
900168ea:	4620      	mov	r0, r4
900168ec:	b209      	sxth	r1, r1
900168ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900168f2:	4718      	bx	r3
900168f4:	240245f0 	.word	0x240245f0
900168f8:	240245f8 	.word	0x240245f8

900168fc <_ZN8touchgfx8TextArea13setXBaselineYEss>:
900168fc:	b570      	push	{r4, r5, r6, lr}
900168fe:	6803      	ldr	r3, [r0, #0]
90016900:	4604      	mov	r4, r0
90016902:	4615      	mov	r5, r2
90016904:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90016906:	4798      	blx	r3
90016908:	6823      	ldr	r3, [r4, #0]
9001690a:	4629      	mov	r1, r5
9001690c:	4620      	mov	r0, r4
9001690e:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
90016910:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016914:	4718      	bx	r3

90016916 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
90016916:	2000      	movs	r0, #0
90016918:	4770      	bx	lr

9001691a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
9001691a:	b508      	push	{r3, lr}
9001691c:	f7ec fa86 	bl	90002e2c <_ZNK8touchgfx8Drawable17invalidateContentEv>
90016920:	bd08      	pop	{r3, pc}

90016922 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
90016922:	6c80      	ldr	r0, [r0, #72]	@ 0x48
90016924:	4770      	bx	lr

90016926 <_ZN8touchgfx8KeyboardD1Ev>:
90016926:	4770      	bx	lr

90016928 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
90016928:	4770      	bx	lr

9001692a <_ZN8touchgfx10ClickEventD1Ev>:
9001692a:	4770      	bx	lr

9001692c <_ZN8touchgfx8Keyboard14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
9001692c:	b538      	push	{r3, r4, r5, lr}
9001692e:	4604      	mov	r4, r0
90016930:	4615      	mov	r5, r2
90016932:	f7fc feaf 	bl	90013694 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90016936:	f64f 73ff 	movw	r3, #65535	@ 0xffff
9001693a:	81a3      	strh	r3, [r4, #12]
9001693c:	f04f 33ff 	mov.w	r3, #4294967295
90016940:	6223      	str	r3, [r4, #32]
90016942:	682b      	ldr	r3, [r5, #0]
90016944:	61e3      	str	r3, [r4, #28]
90016946:	602c      	str	r4, [r5, #0]
90016948:	bd38      	pop	{r3, r4, r5, pc}

9001694a <_ZN8touchgfx10ClickEventD0Ev>:
9001694a:	b510      	push	{r4, lr}
9001694c:	4604      	mov	r4, r0
9001694e:	210c      	movs	r1, #12
90016950:	f015 f903 	bl	9002bb5a <_ZdlPvj>
90016954:	4620      	mov	r0, r4
90016956:	bd10      	pop	{r4, pc}

90016958 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90016958:	b510      	push	{r4, lr}
9001695a:	4604      	mov	r4, r0
9001695c:	214c      	movs	r1, #76	@ 0x4c
9001695e:	f015 f8fc 	bl	9002bb5a <_ZdlPvj>
90016962:	4620      	mov	r0, r4
90016964:	bd10      	pop	{r4, pc}

90016966 <_ZN8touchgfx8KeyboardD0Ev>:
90016966:	b510      	push	{r4, lr}
90016968:	4604      	mov	r4, r0
9001696a:	21e8      	movs	r1, #232	@ 0xe8
9001696c:	f015 f8f5 	bl	9002bb5a <_ZdlPvj>
90016970:	4620      	mov	r0, r4
90016972:	bd10      	pop	{r4, pc}

90016974 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
90016974:	2200      	movs	r2, #0
90016976:	f04f 31ff 	mov.w	r1, #4294967295
9001697a:	6082      	str	r2, [r0, #8]
9001697c:	e9c0 2100 	strd	r2, r1, [r0]
90016980:	4770      	bx	lr

90016982 <_ZNK8touchgfx4Rect9intersectEss>:
90016982:	b510      	push	{r4, lr}
90016984:	f9b0 3000 	ldrsh.w	r3, [r0]
90016988:	428b      	cmp	r3, r1
9001698a:	dc10      	bgt.n	900169ae <_ZNK8touchgfx4Rect9intersectEss+0x2c>
9001698c:	8884      	ldrh	r4, [r0, #4]
9001698e:	4423      	add	r3, r4
90016990:	b21b      	sxth	r3, r3
90016992:	4299      	cmp	r1, r3
90016994:	da0b      	bge.n	900169ae <_ZNK8touchgfx4Rect9intersectEss+0x2c>
90016996:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001699a:	4293      	cmp	r3, r2
9001699c:	dc07      	bgt.n	900169ae <_ZNK8touchgfx4Rect9intersectEss+0x2c>
9001699e:	88c0      	ldrh	r0, [r0, #6]
900169a0:	4418      	add	r0, r3
900169a2:	b200      	sxth	r0, r0
900169a4:	4282      	cmp	r2, r0
900169a6:	bfac      	ite	ge
900169a8:	2000      	movge	r0, #0
900169aa:	2001      	movlt	r0, #1
900169ac:	bd10      	pop	{r4, pc}
900169ae:	2000      	movs	r0, #0
900169b0:	e7fc      	b.n	900169ac <_ZNK8touchgfx4Rect9intersectEss+0x2a>
	...

900169b4 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE>:
900169b4:	b530      	push	{r4, r5, lr}
900169b6:	f890 30dd 	ldrb.w	r3, [r0, #221]	@ 0xdd
900169ba:	b085      	sub	sp, #20
900169bc:	4604      	mov	r4, r0
900169be:	460d      	mov	r5, r1
900169c0:	b1f3      	cbz	r3, 90016a00 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE+0x4c>
900169c2:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
900169c6:	30bc      	adds	r0, #188	@ 0xbc
900169c8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
900169cc:	f7ff ffd9 	bl	90016982 <_ZNK8touchgfx4Rect9intersectEss>
900169d0:	b9b0      	cbnz	r0, 90016a00 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE+0x4c>
900169d2:	f894 30e4 	ldrb.w	r3, [r4, #228]	@ 0xe4
900169d6:	b99b      	cbnz	r3, 90016a00 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE+0x4c>
900169d8:	480a      	ldr	r0, [pc, #40]	@ (90016a04 <_ZN8touchgfx8Keyboard15handleDragEventERKNS_9DragEventE+0x50>)
900169da:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900169de:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
900169e2:	9001      	str	r0, [sp, #4]
900169e4:	2002      	movs	r0, #2
900169e6:	f8ad 300e 	strh.w	r3, [sp, #14]
900169ea:	6823      	ldr	r3, [r4, #0]
900169ec:	f88d 0008 	strb.w	r0, [sp, #8]
900169f0:	4620      	mov	r0, r4
900169f2:	f8ad 100a 	strh.w	r1, [sp, #10]
900169f6:	a901      	add	r1, sp, #4
900169f8:	f8ad 200c 	strh.w	r2, [sp, #12]
900169fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900169fe:	4798      	blx	r3
90016a00:	b005      	add	sp, #20
90016a02:	bd30      	pop	{r4, r5, pc}
90016a04:	90030388 	.word	0x90030388

90016a08 <_ZNK8touchgfx4Rect9intersectERKS0_>:
90016a08:	b510      	push	{r4, lr}
90016a0a:	f9b1 4000 	ldrsh.w	r4, [r1]
90016a0e:	888a      	ldrh	r2, [r1, #4]
90016a10:	f9b0 3000 	ldrsh.w	r3, [r0]
90016a14:	4422      	add	r2, r4
90016a16:	b212      	sxth	r2, r2
90016a18:	4293      	cmp	r3, r2
90016a1a:	da15      	bge.n	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016a1c:	8882      	ldrh	r2, [r0, #4]
90016a1e:	4413      	add	r3, r2
90016a20:	b21b      	sxth	r3, r3
90016a22:	429c      	cmp	r4, r3
90016a24:	da10      	bge.n	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016a26:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016a2a:	88c9      	ldrh	r1, [r1, #6]
90016a2c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016a30:	4419      	add	r1, r3
90016a32:	b209      	sxth	r1, r1
90016a34:	428a      	cmp	r2, r1
90016a36:	da07      	bge.n	90016a48 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90016a38:	88c0      	ldrh	r0, [r0, #6]
90016a3a:	4410      	add	r0, r2
90016a3c:	b200      	sxth	r0, r0
90016a3e:	4283      	cmp	r3, r0
90016a40:	bfac      	ite	ge
90016a42:	2000      	movge	r0, #0
90016a44:	2001      	movlt	r0, #1
90016a46:	bd10      	pop	{r4, pc}
90016a48:	2000      	movs	r0, #0
90016a4a:	e7fc      	b.n	90016a46 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90016a4c <_ZN8touchgfx8DrawableC1Ev>:
90016a4c:	4a0a      	ldr	r2, [pc, #40]	@ (90016a78 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
90016a4e:	6002      	str	r2, [r0, #0]
90016a50:	2200      	movs	r2, #0
90016a52:	8082      	strh	r2, [r0, #4]
90016a54:	80c2      	strh	r2, [r0, #6]
90016a56:	8102      	strh	r2, [r0, #8]
90016a58:	8142      	strh	r2, [r0, #10]
90016a5a:	8182      	strh	r2, [r0, #12]
90016a5c:	81c2      	strh	r2, [r0, #14]
90016a5e:	8202      	strh	r2, [r0, #16]
90016a60:	8242      	strh	r2, [r0, #18]
90016a62:	61c2      	str	r2, [r0, #28]
90016a64:	8402      	strh	r2, [r0, #32]
90016a66:	8442      	strh	r2, [r0, #34]	@ 0x22
90016a68:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90016a6c:	e9c0 2205 	strd	r2, r2, [r0, #20]
90016a70:	2201      	movs	r2, #1
90016a72:	f880 2025 	strb.w	r2, [r0, #37]	@ 0x25
90016a76:	4770      	bx	lr
90016a78:	90030520 	.word	0x90030520

90016a7c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90016a7c:	b570      	push	{r4, r5, r6, lr}
90016a7e:	6803      	ldr	r3, [r0, #0]
90016a80:	4604      	mov	r4, r0
90016a82:	4615      	mov	r5, r2
90016a84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016a86:	4798      	blx	r3
90016a88:	6823      	ldr	r3, [r4, #0]
90016a8a:	4629      	mov	r1, r5
90016a8c:	4620      	mov	r0, r4
90016a8e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90016a90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016a94:	4718      	bx	r3
	...

90016a98 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
90016a98:	b538      	push	{r3, r4, r5, lr}
90016a9a:	4604      	mov	r4, r0
90016a9c:	460d      	mov	r5, r1
90016a9e:	2226      	movs	r2, #38	@ 0x26
90016aa0:	2100      	movs	r1, #0
90016aa2:	f015 fe6d 	bl	9002c780 <memset>
90016aa6:	4620      	mov	r0, r4
90016aa8:	f7ff ffd0 	bl	90016a4c <_ZN8touchgfx8DrawableC1Ev>
90016aac:	4b06      	ldr	r3, [pc, #24]	@ (90016ac8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
90016aae:	4620      	mov	r0, r4
90016ab0:	4629      	mov	r1, r5
90016ab2:	6023      	str	r3, [r4, #0]
90016ab4:	882b      	ldrh	r3, [r5, #0]
90016ab6:	84e3      	strh	r3, [r4, #38]	@ 0x26
90016ab8:	23ff      	movs	r3, #255	@ 0xff
90016aba:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90016abe:	f7ff fe54 	bl	9001676a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90016ac2:	4620      	mov	r0, r4
90016ac4:	bd38      	pop	{r3, r4, r5, pc}
90016ac6:	bf00      	nop
90016ac8:	9003031c 	.word	0x9003031c

90016acc <_ZN8touchgfx8KeyboardC1Ev>:
90016acc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
90016ad0:	4604      	mov	r4, r0
90016ad2:	2500      	movs	r5, #0
90016ad4:	f7ff ffba 	bl	90016a4c <_ZN8touchgfx8DrawableC1Ev>
90016ad8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90016adc:	4b2f      	ldr	r3, [pc, #188]	@ (90016b9c <_ZN8touchgfx8KeyboardC1Ev+0xd0>)
90016ade:	f104 0938 	add.w	r9, r4, #56	@ 0x38
90016ae2:	af02      	add	r7, sp, #8
90016ae4:	f104 0864 	add.w	r8, r4, #100	@ 0x64
90016ae8:	6023      	str	r3, [r4, #0]
90016aea:	4648      	mov	r0, r9
90016aec:	f827 6d04 	strh.w	r6, [r7, #-4]!
90016af0:	4639      	mov	r1, r7
90016af2:	f104 0ab8 	add.w	sl, r4, #184	@ 0xb8
90016af6:	e9c4 550a 	strd	r5, r5, [r4, #40]	@ 0x28
90016afa:	e9c4 550c 	strd	r5, r5, [r4, #48]	@ 0x30
90016afe:	f7ff ffcb 	bl	90016a98 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
90016b02:	2226      	movs	r2, #38	@ 0x26
90016b04:	4629      	mov	r1, r5
90016b06:	4640      	mov	r0, r8
90016b08:	f015 fe3a 	bl	9002c780 <memset>
90016b0c:	4640      	mov	r0, r8
90016b0e:	f7ff ff9d 	bl	90016a4c <_ZN8touchgfx8DrawableC1Ev>
90016b12:	4b23      	ldr	r3, [pc, #140]	@ (90016ba0 <_ZN8touchgfx8KeyboardC1Ev+0xd4>)
90016b14:	4639      	mov	r1, r7
90016b16:	f8a4 6090 	strh.w	r6, [r4, #144]	@ 0x90
90016b1a:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
90016b1e:	f44f 037f 	mov.w	r3, #16711680	@ 0xff0000
90016b22:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
90016b26:	4650      	mov	r0, sl
90016b28:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
90016b2c:	4b1d      	ldr	r3, [pc, #116]	@ (90016ba4 <_ZN8touchgfx8KeyboardC1Ev+0xd8>)
90016b2e:	f884 509c 	strb.w	r5, [r4, #156]	@ 0x9c
90016b32:	6663      	str	r3, [r4, #100]	@ 0x64
90016b34:	f884 509d 	strb.w	r5, [r4, #157]	@ 0x9d
90016b38:	f8a4 50a0 	strh.w	r5, [r4, #160]	@ 0xa0
90016b3c:	f8a4 50a2 	strh.w	r5, [r4, #162]	@ 0xa2
90016b40:	f8a4 60a4 	strh.w	r6, [r4, #164]	@ 0xa4
90016b44:	f8a4 60a6 	strh.w	r6, [r4, #166]	@ 0xa6
90016b48:	f8c4 50a8 	str.w	r5, [r4, #168]	@ 0xa8
90016b4c:	f8c4 50b4 	str.w	r5, [r4, #180]	@ 0xb4
90016b50:	f8ad 6004 	strh.w	r6, [sp, #4]
90016b54:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
90016b58:	f7ff ff9e 	bl	90016a98 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
90016b5c:	2301      	movs	r3, #1
90016b5e:	462a      	mov	r2, r5
90016b60:	4629      	mov	r1, r5
90016b62:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
90016b66:	4648      	mov	r0, r9
90016b68:	f884 50e4 	strb.w	r5, [r4, #228]	@ 0xe4
90016b6c:	f7fc ff90 	bl	90013a90 <_ZN8touchgfx8Drawable5setXYEss>
90016b70:	4649      	mov	r1, r9
90016b72:	4620      	mov	r0, r4
90016b74:	f7fc fb32 	bl	900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90016b78:	4651      	mov	r1, sl
90016b7a:	4620      	mov	r0, r4
90016b7c:	f884 50dd 	strb.w	r5, [r4, #221]	@ 0xdd
90016b80:	f7fc fb2c 	bl	900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90016b84:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
90016b88:	4620      	mov	r0, r4
90016b8a:	4641      	mov	r1, r8
90016b8c:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
90016b90:	f7fc fb24 	bl	900131dc <_ZN8touchgfx9Container3addERNS_8DrawableE>
90016b94:	4620      	mov	r0, r4
90016b96:	b002      	add	sp, #8
90016b98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90016b9c:	9003042c 	.word	0x9003042c
90016ba0:	9002ee94 	.word	0x9002ee94
90016ba4:	9003039c 	.word	0x9003039c

90016ba8 <_ZN8touchgfx8Keyboard9setBufferEPtt>:
90016ba8:	b510      	push	{r4, lr}
90016baa:	4604      	mov	r4, r0
90016bac:	6301      	str	r1, [r0, #48]	@ 0x30
90016bae:	8682      	strh	r2, [r0, #52]	@ 0x34
90016bb0:	f8c0 10ac 	str.w	r1, [r0, #172]	@ 0xac
90016bb4:	4608      	mov	r0, r1
90016bb6:	f005 fd4f 	bl	9001c658 <_ZN8touchgfx7Unicode6strlenEPKt>
90016bba:	86e0      	strh	r0, [r4, #54]	@ 0x36
90016bbc:	bd10      	pop	{r4, pc}

90016bbe <_ZN8touchgfx8Keyboard9setLayoutEPKNS0_6LayoutE>:
90016bbe:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90016bc2:	4605      	mov	r5, r0
90016bc4:	460c      	mov	r4, r1
90016bc6:	f8c5 10b0 	str.w	r1, [r5, #176]	@ 0xb0
90016bca:	b309      	cbz	r1, 90016c10 <_ZN8touchgfx8Keyboard9setLayoutEPKNS0_6LayoutE+0x52>
90016bcc:	460f      	mov	r7, r1
90016bce:	a902      	add	r1, sp, #8
90016bd0:	f105 0664 	add.w	r6, r5, #100	@ 0x64
90016bd4:	3038      	adds	r0, #56	@ 0x38
90016bd6:	f837 3b1c 	ldrh.w	r3, [r7], #28
90016bda:	f821 3d04 	strh.w	r3, [r1, #-4]!
90016bde:	f7ff fdc4 	bl	9001676a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90016be2:	4639      	mov	r1, r7
90016be4:	4630      	mov	r0, r6
90016be6:	f014 ff2b 	bl	9002ba40 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90016bea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90016bec:	4630      	mov	r0, r6
90016bee:	f8c5 3094 	str.w	r3, [r5, #148]	@ 0x94
90016bf2:	f9b4 7016 	ldrsh.w	r7, [r4, #22]
90016bf6:	f9b4 8018 	ldrsh.w	r8, [r4, #24]
90016bfa:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
90016bfe:	f9b4 1012 	ldrsh.w	r1, [r4, #18]
90016c02:	f7fc ff45 	bl	90013a90 <_ZN8touchgfx8Drawable5setXYEss>
90016c06:	4642      	mov	r2, r8
90016c08:	4639      	mov	r1, r7
90016c0a:	4630      	mov	r0, r6
90016c0c:	f7ff ff36 	bl	90016a7c <_ZN8touchgfx8Drawable14setWidthHeightEss>
90016c10:	682b      	ldr	r3, [r5, #0]
90016c12:	4628      	mov	r0, r5
90016c14:	695b      	ldr	r3, [r3, #20]
90016c16:	4798      	blx	r3
90016c18:	b002      	add	sp, #8
90016c1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90016c1e <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss>:
90016c1e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016c22:	4690      	mov	r8, r2
90016c24:	f8d1 70b0 	ldr.w	r7, [r1, #176]	@ 0xb0
90016c28:	2200      	movs	r2, #0
90016c2a:	4606      	mov	r6, r0
90016c2c:	4699      	mov	r9, r3
90016c2e:	8042      	strh	r2, [r0, #2]
90016c30:	8082      	strh	r2, [r0, #4]
90016c32:	80c2      	strh	r2, [r0, #6]
90016c34:	8102      	strh	r2, [r0, #8]
90016c36:	7002      	strb	r2, [r0, #0]
90016c38:	b1c7      	cbz	r7, 90016c6c <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss+0x4e>
90016c3a:	f897 a008 	ldrb.w	sl, [r7, #8]
90016c3e:	4615      	mov	r5, r2
90016c40:	f04f 0b0c 	mov.w	fp, #12
90016c44:	b2eb      	uxtb	r3, r5
90016c46:	459a      	cmp	sl, r3
90016c48:	d910      	bls.n	90016c6c <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss+0x4e>
90016c4a:	687c      	ldr	r4, [r7, #4]
90016c4c:	464a      	mov	r2, r9
90016c4e:	4641      	mov	r1, r8
90016c50:	fb0b 4405 	mla	r4, fp, r5, r4
90016c54:	3501      	adds	r5, #1
90016c56:	1ca0      	adds	r0, r4, #2
90016c58:	f7ff fe93 	bl	90016982 <_ZNK8touchgfx4Rect9intersectEss>
90016c5c:	2800      	cmp	r0, #0
90016c5e:	d0f1      	beq.n	90016c44 <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss+0x26>
90016c60:	6823      	ldr	r3, [r4, #0]
90016c62:	6033      	str	r3, [r6, #0]
90016c64:	6863      	ldr	r3, [r4, #4]
90016c66:	6073      	str	r3, [r6, #4]
90016c68:	68a3      	ldr	r3, [r4, #8]
90016c6a:	60b3      	str	r3, [r6, #8]
90016c6c:	4630      	mov	r0, r6
90016c6e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

90016c72 <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss>:
90016c72:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90016c76:	2500      	movs	r5, #0
90016c78:	f8d1 70b0 	ldr.w	r7, [r1, #176]	@ 0xb0
90016c7c:	4606      	mov	r6, r0
90016c7e:	4690      	mov	r8, r2
90016c80:	4699      	mov	r9, r3
90016c82:	6085      	str	r5, [r0, #8]
90016c84:	e9c0 5500 	strd	r5, r5, [r0]
90016c88:	b307      	cbz	r7, 90016ccc <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss+0x5a>
90016c8a:	f897 a010 	ldrb.w	sl, [r7, #16]
90016c8e:	b2eb      	uxtb	r3, r5
90016c90:	459a      	cmp	sl, r3
90016c92:	d91b      	bls.n	90016ccc <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss+0x5a>
90016c94:	68fc      	ldr	r4, [r7, #12]
90016c96:	464a      	mov	r2, r9
90016c98:	4641      	mov	r1, r8
90016c9a:	eb04 1405 	add.w	r4, r4, r5, lsl #4
90016c9e:	3501      	adds	r5, #1
90016ca0:	4620      	mov	r0, r4
90016ca2:	f7ff fe6e 	bl	90016982 <_ZNK8touchgfx4Rect9intersectEss>
90016ca6:	2800      	cmp	r0, #0
90016ca8:	d0f1      	beq.n	90016c8e <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss+0x1c>
90016caa:	4623      	mov	r3, r4
90016cac:	4632      	mov	r2, r6
90016cae:	f104 0508 	add.w	r5, r4, #8
90016cb2:	6818      	ldr	r0, [r3, #0]
90016cb4:	3308      	adds	r3, #8
90016cb6:	f853 1c04 	ldr.w	r1, [r3, #-4]
90016cba:	4614      	mov	r4, r2
90016cbc:	42ab      	cmp	r3, r5
90016cbe:	c403      	stmia	r4!, {r0, r1}
90016cc0:	4622      	mov	r2, r4
90016cc2:	d1f6      	bne.n	90016cb2 <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss+0x40>
90016cc4:	6818      	ldr	r0, [r3, #0]
90016cc6:	6020      	str	r0, [r4, #0]
90016cc8:	889b      	ldrh	r3, [r3, #4]
90016cca:	80a3      	strh	r3, [r4, #4]
90016ccc:	4630      	mov	r0, r6
90016cce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90016cd2 <_ZNK8touchgfx8Keyboard13getCharForKeyEh>:
90016cd2:	b570      	push	{r4, r5, r6, lr}
90016cd4:	f8d0 00b4 	ldr.w	r0, [r0, #180]	@ 0xb4
90016cd8:	b160      	cbz	r0, 90016cf4 <_ZNK8touchgfx8Keyboard13getCharForKeyEh+0x22>
90016cda:	7906      	ldrb	r6, [r0, #4]
90016cdc:	2300      	movs	r3, #0
90016cde:	b2da      	uxtb	r2, r3
90016ce0:	4296      	cmp	r6, r2
90016ce2:	d908      	bls.n	90016cf6 <_ZNK8touchgfx8Keyboard13getCharForKeyEh+0x24>
90016ce4:	009a      	lsls	r2, r3, #2
90016ce6:	6804      	ldr	r4, [r0, #0]
90016ce8:	3301      	adds	r3, #1
90016cea:	18a5      	adds	r5, r4, r2
90016cec:	5ca2      	ldrb	r2, [r4, r2]
90016cee:	428a      	cmp	r2, r1
90016cf0:	d1f5      	bne.n	90016cde <_ZNK8touchgfx8Keyboard13getCharForKeyEh+0xc>
90016cf2:	8868      	ldrh	r0, [r5, #2]
90016cf4:	bd70      	pop	{r4, r5, r6, pc}
90016cf6:	2000      	movs	r0, #0
90016cf8:	e7fc      	b.n	90016cf4 <_ZNK8touchgfx8Keyboard13getCharForKeyEh+0x22>
	...

90016cfc <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE>:
90016cfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016d00:	f8d0 30b0 	ldr.w	r3, [r0, #176]	@ 0xb0
90016d04:	b08d      	sub	sp, #52	@ 0x34
90016d06:	4605      	mov	r5, r0
90016d08:	460e      	mov	r6, r1
90016d0a:	2b00      	cmp	r3, #0
90016d0c:	f000 80c4 	beq.w	90016e98 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x19c>
90016d10:	8d18      	ldrh	r0, [r3, #40]	@ 0x28
90016d12:	f005 fcb5 	bl	9001c680 <_ZN8touchgfx11FontManager7getFontEt>
90016d16:	2800      	cmp	r0, #0
90016d18:	f000 80be 	beq.w	90016e98 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x19c>
90016d1c:	f44f 027f 	mov.w	r2, #16711680	@ 0xff0000
90016d20:	2400      	movs	r4, #0
90016d22:	9007      	str	r0, [sp, #28]
90016d24:	920a      	str	r2, [sp, #40]	@ 0x28
90016d26:	2201      	movs	r2, #1
90016d28:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90016d2c:	f88d 2020 	strb.w	r2, [sp, #32]
90016d30:	f8d5 20b0 	ldr.w	r2, [r5, #176]	@ 0xb0
90016d34:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90016d38:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
90016d3a:	f88d 402c 	strb.w	r4, [sp, #44]	@ 0x2c
90016d3e:	9209      	str	r2, [sp, #36]	@ 0x24
90016d40:	9402      	str	r4, [sp, #8]
90016d42:	6803      	ldr	r3, [r0, #0]
90016d44:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90016d46:	4798      	blx	r3
90016d48:	4607      	mov	r7, r0
90016d4a:	f8d5 30b0 	ldr.w	r3, [r5, #176]	@ 0xb0
90016d4e:	fa5f f884 	uxtb.w	r8, r4
90016d52:	7a1a      	ldrb	r2, [r3, #8]
90016d54:	4542      	cmp	r2, r8
90016d56:	f240 809f 	bls.w	90016e98 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x19c>
90016d5a:	220c      	movs	r2, #12
90016d5c:	f8d3 9004 	ldr.w	r9, [r3, #4]
90016d60:	4631      	mov	r1, r6
90016d62:	fb02 f808 	mul.w	r8, r2, r8
90016d66:	eb09 0a08 	add.w	sl, r9, r8
90016d6a:	f10a 0a02 	add.w	sl, sl, #2
90016d6e:	4650      	mov	r0, sl
90016d70:	f7ff fe4a 	bl	90016a08 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016d74:	2800      	cmp	r0, #0
90016d76:	f000 808a 	beq.w	90016e8e <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x192>
90016d7a:	f819 1008 	ldrb.w	r1, [r9, r8]
90016d7e:	4628      	mov	r0, r5
90016d80:	f7ff ffa7 	bl	90016cd2 <_ZNK8touchgfx8Keyboard13getCharForKeyEh>
90016d84:	4681      	mov	r9, r0
90016d86:	2800      	cmp	r0, #0
90016d88:	f000 8081 	beq.w	90016e8e <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x192>
90016d8c:	f8da 0000 	ldr.w	r0, [sl]
90016d90:	ab03      	add	r3, sp, #12
90016d92:	f8da 1004 	ldr.w	r1, [sl, #4]
90016d96:	c303      	stmia	r3!, {r0, r1}
90016d98:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
90016d9c:	2102      	movs	r1, #2
90016d9e:	f8bd 800e 	ldrh.w	r8, [sp, #14]
90016da2:	1bd3      	subs	r3, r2, r7
90016da4:	fb93 f3f1 	sdiv	r3, r3, r1
90016da8:	b29b      	uxth	r3, r3
90016daa:	4498      	add	r8, r3
90016dac:	1ad3      	subs	r3, r2, r3
90016dae:	fa1f f888 	uxth.w	r8, r8
90016db2:	f8ad 3012 	strh.w	r3, [sp, #18]
90016db6:	ab05      	add	r3, sp, #20
90016db8:	f8da 1004 	ldr.w	r1, [sl, #4]
90016dbc:	f8ad 800e 	strh.w	r8, [sp, #14]
90016dc0:	f8da 0000 	ldr.w	r0, [sl]
90016dc4:	c303      	stmia	r3!, {r0, r1}
90016dc6:	4631      	mov	r1, r6
90016dc8:	a805      	add	r0, sp, #20
90016dca:	f7ff fe1d 	bl	90016a08 <_ZNK8touchgfx4Rect9intersectERKS0_>
90016dce:	2800      	cmp	r0, #0
90016dd0:	d05f      	beq.n	90016e92 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x196>
90016dd2:	f9bd 0014 	ldrsh.w	r0, [sp, #20]
90016dd6:	f9b6 2000 	ldrsh.w	r2, [r6]
90016dda:	f8bd a018 	ldrh.w	sl, [sp, #24]
90016dde:	4686      	mov	lr, r0
90016de0:	4290      	cmp	r0, r2
90016de2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90016de6:	4450      	add	r0, sl
90016de8:	f8b6 a004 	ldrh.w	sl, [r6, #4]
90016dec:	bfb8      	it	lt
90016dee:	4696      	movlt	lr, r2
90016df0:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90016df4:	4452      	add	r2, sl
90016df6:	b280      	uxth	r0, r0
90016df8:	4299      	cmp	r1, r3
90016dfa:	468c      	mov	ip, r1
90016dfc:	b292      	uxth	r2, r2
90016dfe:	f8ad e014 	strh.w	lr, [sp, #20]
90016e02:	fa0f fb80 	sxth.w	fp, r0
90016e06:	bfb8      	it	lt
90016e08:	469c      	movlt	ip, r3
90016e0a:	fa0f fa82 	sxth.w	sl, r2
90016e0e:	f8ad c016 	strh.w	ip, [sp, #22]
90016e12:	45d3      	cmp	fp, sl
90016e14:	bfb8      	it	lt
90016e16:	4602      	movlt	r2, r0
90016e18:	eba2 020e 	sub.w	r2, r2, lr
90016e1c:	f8ad 2018 	strh.w	r2, [sp, #24]
90016e20:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90016e24:	4411      	add	r1, r2
90016e26:	88f2      	ldrh	r2, [r6, #6]
90016e28:	4413      	add	r3, r2
90016e2a:	b289      	uxth	r1, r1
90016e2c:	b29b      	uxth	r3, r3
90016e2e:	b208      	sxth	r0, r1
90016e30:	b21a      	sxth	r2, r3
90016e32:	4290      	cmp	r0, r2
90016e34:	bfb8      	it	lt
90016e36:	460b      	movlt	r3, r1
90016e38:	eba3 030c 	sub.w	r3, r3, ip
90016e3c:	f8ad 301a 	strh.w	r3, [sp, #26]
90016e40:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90016e44:	4628      	mov	r0, r5
90016e46:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90016e4a:	f8ad 9008 	strh.w	r9, [sp, #8]
90016e4e:	1a9b      	subs	r3, r3, r2
90016e50:	f8ad 3014 	strh.w	r3, [sp, #20]
90016e54:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90016e58:	eba3 0808 	sub.w	r8, r3, r8
90016e5c:	682b      	ldr	r3, [r5, #0]
90016e5e:	f8ad 8016 	strh.w	r8, [sp, #22]
90016e62:	f10d 080c 	add.w	r8, sp, #12
90016e66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90016e68:	4641      	mov	r1, r8
90016e6a:	4798      	blx	r3
90016e6c:	4b0c      	ldr	r3, [pc, #48]	@ (90016ea0 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x1a4>)
90016e6e:	681b      	ldr	r3, [r3, #0]
90016e70:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90016e74:	b10a      	cbz	r2, 90016e7a <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x17e>
90016e76:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90016e78:	b900      	cbnz	r0, 90016e7c <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x180>
90016e7a:	6898      	ldr	r0, [r3, #8]
90016e7c:	ab02      	add	r3, sp, #8
90016e7e:	9301      	str	r3, [sp, #4]
90016e80:	ab07      	add	r3, sp, #28
90016e82:	9300      	str	r3, [sp, #0]
90016e84:	ab05      	add	r3, sp, #20
90016e86:	e898 0006 	ldmia.w	r8, {r1, r2}
90016e8a:	f7ee fc17 	bl	900056bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90016e8e:	3401      	adds	r4, #1
90016e90:	e75b      	b.n	90016d4a <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x4e>
90016e92:	e9cd 0005 	strd	r0, r0, [sp, #20]
90016e96:	e7d3      	b.n	90016e40 <_ZNK8touchgfx8Keyboard4drawERKNS_4RectE+0x144>
90016e98:	b00d      	add	sp, #52	@ 0x34
90016e9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016e9e:	bf00      	nop
90016ea0:	24024598 	.word	0x24024598

90016ea4 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE>:
90016ea4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016ea8:	790d      	ldrb	r5, [r1, #4]
90016eaa:	b08b      	sub	sp, #44	@ 0x2c
90016eac:	4604      	mov	r4, r0
90016eae:	2d01      	cmp	r5, #1
90016eb0:	d108      	bne.n	90016ec4 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x20>
90016eb2:	f890 30e4 	ldrb.w	r3, [r0, #228]	@ 0xe4
90016eb6:	b12b      	cbz	r3, 90016ec4 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x20>
90016eb8:	2300      	movs	r3, #0
90016eba:	f884 30e4 	strb.w	r3, [r4, #228]	@ 0xe4
90016ebe:	b00b      	add	sp, #44	@ 0x2c
90016ec0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016ec4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90016ec8:	2700      	movs	r7, #0
90016eca:	f9b1 9008 	ldrsh.w	r9, [r1, #8]
90016ece:	a806      	add	r0, sp, #24
90016ed0:	4642      	mov	r2, r8
90016ed2:	4621      	mov	r1, r4
90016ed4:	464b      	mov	r3, r9
90016ed6:	e9cd 7701 	strd	r7, r7, [sp, #4]
90016eda:	f7ff feca 	bl	90016c72 <_ZNK8touchgfx8Keyboard29getCallbackAreaForCoordinatesEss>
90016ede:	9e08      	ldr	r6, [sp, #32]
90016ee0:	2e00      	cmp	r6, #0
90016ee2:	d049      	beq.n	90016f78 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0xd4>
90016ee4:	2d00      	cmp	r5, #0
90016ee6:	d133      	bne.n	90016f50 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0xac>
90016ee8:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
90016eec:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
90016ef0:	f9bd 201a 	ldrsh.w	r2, [sp, #26]
90016ef4:	4630      	mov	r0, r6
90016ef6:	f7fc fdcb 	bl	90013a90 <_ZN8touchgfx8Drawable5setXYEss>
90016efa:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
90016efe:	a90a      	add	r1, sp, #40	@ 0x28
90016f00:	f821 3d1c 	strh.w	r3, [r1, #-28]!
90016f04:	4630      	mov	r0, r6
90016f06:	f7ff fc30 	bl	9001676a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90016f0a:	2301      	movs	r3, #1
90016f0c:	4622      	mov	r2, r4
90016f0e:	f884 30dd 	strb.w	r3, [r4, #221]	@ 0xdd
90016f12:	ab01      	add	r3, sp, #4
90016f14:	f852 0fbc 	ldr.w	r0, [r2, #188]!
90016f18:	6851      	ldr	r1, [r2, #4]
90016f1a:	c303      	stmia	r3!, {r0, r1}
90016f1c:	6823      	ldr	r3, [r4, #0]
90016f1e:	a901      	add	r1, sp, #4
90016f20:	4620      	mov	r0, r4
90016f22:	691b      	ldr	r3, [r3, #16]
90016f24:	4798      	blx	r3
90016f26:	1e6b      	subs	r3, r5, #1
90016f28:	2b01      	cmp	r3, #1
90016f2a:	d8c8      	bhi.n	90016ebe <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x1a>
90016f2c:	4622      	mov	r2, r4
90016f2e:	ab01      	add	r3, sp, #4
90016f30:	f852 0fbc 	ldr.w	r0, [r2, #188]!
90016f34:	6851      	ldr	r1, [r2, #4]
90016f36:	c303      	stmia	r3!, {r0, r1}
90016f38:	2300      	movs	r3, #0
90016f3a:	a901      	add	r1, sp, #4
90016f3c:	4620      	mov	r0, r4
90016f3e:	f884 30dd 	strb.w	r3, [r4, #221]	@ 0xdd
90016f42:	6823      	ldr	r3, [r4, #0]
90016f44:	691b      	ldr	r3, [r3, #16]
90016f46:	4798      	blx	r3
90016f48:	2d02      	cmp	r5, #2
90016f4a:	d1b8      	bne.n	90016ebe <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x1a>
90016f4c:	2301      	movs	r3, #1
90016f4e:	e7b4      	b.n	90016eba <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x16>
90016f50:	2d01      	cmp	r5, #1
90016f52:	d1e8      	bne.n	90016f26 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016f54:	6833      	ldr	r3, [r6, #0]
90016f56:	4630      	mov	r0, r6
90016f58:	68db      	ldr	r3, [r3, #12]
90016f5a:	4798      	blx	r3
90016f5c:	2800      	cmp	r0, #0
90016f5e:	d0e5      	beq.n	90016f2c <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x88>
90016f60:	6833      	ldr	r3, [r6, #0]
90016f62:	4630      	mov	r0, r6
90016f64:	689b      	ldr	r3, [r3, #8]
90016f66:	4798      	blx	r3
90016f68:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90016f6a:	2800      	cmp	r0, #0
90016f6c:	d0de      	beq.n	90016f2c <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x88>
90016f6e:	6803      	ldr	r3, [r0, #0]
90016f70:	4639      	mov	r1, r7
90016f72:	689b      	ldr	r3, [r3, #8]
90016f74:	4798      	blx	r3
90016f76:	e7d6      	b.n	90016f26 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016f78:	4621      	mov	r1, r4
90016f7a:	464b      	mov	r3, r9
90016f7c:	4642      	mov	r2, r8
90016f7e:	a803      	add	r0, sp, #12
90016f80:	f7ff fe4d 	bl	90016c1e <_ZNK8touchgfx8Keyboard20getKeyForCoordinatesEss>
90016f84:	f89d 100c 	ldrb.w	r1, [sp, #12]
90016f88:	b985      	cbnz	r5, 90016fac <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x108>
90016f8a:	2900      	cmp	r1, #0
90016f8c:	d0cb      	beq.n	90016f26 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016f8e:	f104 06b8 	add.w	r6, r4, #184	@ 0xb8
90016f92:	f9bd 100e 	ldrsh.w	r1, [sp, #14]
90016f96:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90016f9a:	4630      	mov	r0, r6
90016f9c:	f7fc fd78 	bl	90013a90 <_ZN8touchgfx8Drawable5setXYEss>
90016fa0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
90016fa4:	a90a      	add	r1, sp, #40	@ 0x28
90016fa6:	f821 3d28 	strh.w	r3, [r1, #-40]!
90016faa:	e7ab      	b.n	90016f04 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x60>
90016fac:	2d01      	cmp	r5, #1
90016fae:	d1ba      	bne.n	90016f26 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016fb0:	2900      	cmp	r1, #0
90016fb2:	d0b8      	beq.n	90016f26 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016fb4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016fb6:	2b00      	cmp	r3, #0
90016fb8:	d0b5      	beq.n	90016f26 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016fba:	4620      	mov	r0, r4
90016fbc:	f7ff fe89 	bl	90016cd2 <_ZNK8touchgfx8Keyboard13getCharForKeyEh>
90016fc0:	4607      	mov	r7, r0
90016fc2:	2800      	cmp	r0, #0
90016fc4:	d0af      	beq.n	90016f26 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016fc6:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90016fc8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90016fca:	3b01      	subs	r3, #1
90016fcc:	429a      	cmp	r2, r3
90016fce:	daaa      	bge.n	90016f26 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>
90016fd0:	f104 0864 	add.w	r8, r4, #100	@ 0x64
90016fd4:	4640      	mov	r0, r8
90016fd6:	f7eb ff29 	bl	90002e2c <_ZNK8touchgfx8Drawable17invalidateContentEv>
90016fda:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90016fdc:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90016fde:	4640      	mov	r0, r8
90016fe0:	1c59      	adds	r1, r3, #1
90016fe2:	86e1      	strh	r1, [r4, #54]	@ 0x36
90016fe4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90016fe8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90016fea:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90016fec:	f823 6012 	strh.w	r6, [r3, r2, lsl #1]
90016ff0:	f7eb ff1c 	bl	90002e2c <_ZNK8touchgfx8Drawable17invalidateContentEv>
90016ff4:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90016ff6:	2800      	cmp	r0, #0
90016ff8:	d1b9      	bne.n	90016f6e <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0xca>
90016ffa:	e794      	b.n	90016f26 <_ZN8touchgfx8Keyboard16handleClickEventERKNS_10ClickEventE+0x82>

90016ffc <_ZN8touchgfx8Keyboard17setBufferPositionEt>:
90016ffc:	86c1      	strh	r1, [r0, #54]	@ 0x36
90016ffe:	3064      	adds	r0, #100	@ 0x64
90017000:	f003 bbdd 	b.w	9001a7be <_ZNK8touchgfx8Drawable10invalidateEv>

90017004 <_ZN8touchgfx8Keyboard17setKeymappingListEPKNS0_14KeyMappingListE>:
90017004:	6803      	ldr	r3, [r0, #0]
90017006:	f8c0 10b4 	str.w	r1, [r0, #180]	@ 0xb4
9001700a:	695b      	ldr	r3, [r3, #20]
9001700c:	4718      	bx	r3

9001700e <_ZN8touchgfx7OutlineD1Ev>:
9001700e:	4770      	bx	lr

90017010 <_ZN8touchgfx7OutlineD0Ev>:
90017010:	b510      	push	{r4, lr}
90017012:	4604      	mov	r4, r0
90017014:	2130      	movs	r1, #48	@ 0x30
90017016:	f014 fda0 	bl	9002bb5a <_ZdlPvj>
9001701a:	4620      	mov	r0, r4
9001701c:	bd10      	pop	{r4, pc}

9001701e <_ZN8touchgfx7Outline5resetEv>:
9001701e:	b510      	push	{r4, lr}
90017020:	4604      	mov	r4, r0
90017022:	f000 fe85 	bl	90017d30 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90017026:	60e0      	str	r0, [r4, #12]
90017028:	f000 fe88 	bl	90017d3c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
9001702c:	68e3      	ldr	r3, [r4, #12]
9001702e:	08c0      	lsrs	r0, r0, #3
90017030:	2200      	movs	r2, #0
90017032:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90017036:	6123      	str	r3, [r4, #16]
90017038:	3801      	subs	r0, #1
9001703a:	60a2      	str	r2, [r4, #8]
9001703c:	6060      	str	r0, [r4, #4]
9001703e:	8019      	strh	r1, [r3, #0]
90017040:	8059      	strh	r1, [r3, #2]
90017042:	809a      	strh	r2, [r3, #4]
90017044:	80da      	strh	r2, [r3, #6]
90017046:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90017048:	f023 0301 	bic.w	r3, r3, #1
9001704c:	f043 0302 	orr.w	r3, r3, #2
90017050:	6263      	str	r3, [r4, #36]	@ 0x24
90017052:	bd10      	pop	{r4, pc}

90017054 <_ZN8touchgfx7OutlineC1Ev>:
90017054:	4b0a      	ldr	r3, [pc, #40]	@ (90017080 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90017056:	b510      	push	{r4, lr}
90017058:	6003      	str	r3, [r0, #0]
9001705a:	2300      	movs	r3, #0
9001705c:	4604      	mov	r4, r0
9001705e:	6243      	str	r3, [r0, #36]	@ 0x24
90017060:	e9c0 3301 	strd	r3, r3, [r0, #4]
90017064:	e9c0 3303 	strd	r3, r3, [r0, #12]
90017068:	e9c0 3305 	strd	r3, r3, [r0, #20]
9001706c:	e9c0 3307 	strd	r3, r3, [r0, #28]
90017070:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90017074:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90017078:	f7ff ffd1 	bl	9001701e <_ZN8touchgfx7Outline5resetEv>
9001707c:	4620      	mov	r0, r4
9001707e:	bd10      	pop	{r4, pc}
90017080:	900304bc 	.word	0x900304bc

90017084 <_ZN8touchgfx7Outline10renderLineEiiii>:
90017084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017088:	b093      	sub	sp, #76	@ 0x4c
9001708a:	1156      	asrs	r6, r2, #5
9001708c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
9001708e:	9305      	str	r3, [sp, #20]
90017090:	1153      	asrs	r3, r2, #5
90017092:	f004 051f 	and.w	r5, r4, #31
90017096:	9303      	str	r3, [sp, #12]
90017098:	1163      	asrs	r3, r4, #5
9001709a:	9504      	str	r5, [sp, #16]
9001709c:	1165      	asrs	r5, r4, #5
9001709e:	9306      	str	r3, [sp, #24]
900170a0:	f002 031f 	and.w	r3, r2, #31
900170a4:	42ae      	cmp	r6, r5
900170a6:	f040 80f4 	bne.w	90017292 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
900170aa:	9c04      	ldr	r4, [sp, #16]
900170ac:	9a05      	ldr	r2, [sp, #20]
900170ae:	42a3      	cmp	r3, r4
900170b0:	ea4f 1e62 	mov.w	lr, r2, asr #5
900170b4:	6902      	ldr	r2, [r0, #16]
900170b6:	d125      	bne.n	90017104 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
900170b8:	f9b2 3000 	ldrsh.w	r3, [r2]
900170bc:	459e      	cmp	lr, r3
900170be:	d103      	bne.n	900170c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
900170c0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900170c4:	429e      	cmp	r6, r3
900170c6:	d035      	beq.n	90017134 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900170c8:	88d1      	ldrh	r1, [r2, #6]
900170ca:	8893      	ldrh	r3, [r2, #4]
900170cc:	430b      	orrs	r3, r1
900170ce:	d010      	beq.n	900170f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900170d0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900170d4:	2b00      	cmp	r3, #0
900170d6:	db0c      	blt.n	900170f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900170d8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
900170da:	428b      	cmp	r3, r1
900170dc:	da09      	bge.n	900170f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900170de:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900170e2:	428b      	cmp	r3, r1
900170e4:	f103 0301 	add.w	r3, r3, #1
900170e8:	bf38      	it	cc
900170ea:	3208      	addcc	r2, #8
900170ec:	6083      	str	r3, [r0, #8]
900170ee:	bf38      	it	cc
900170f0:	6102      	strcc	r2, [r0, #16]
900170f2:	6903      	ldr	r3, [r0, #16]
900170f4:	9a03      	ldr	r2, [sp, #12]
900170f6:	f8a3 e000 	strh.w	lr, [r3]
900170fa:	805a      	strh	r2, [r3, #2]
900170fc:	2200      	movs	r2, #0
900170fe:	809a      	strh	r2, [r3, #4]
90017100:	80da      	strh	r2, [r3, #6]
90017102:	e017      	b.n	90017134 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90017104:	9c05      	ldr	r4, [sp, #20]
90017106:	114e      	asrs	r6, r1, #5
90017108:	f001 0c1f 	and.w	ip, r1, #31
9001710c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90017110:	f004 041f 	and.w	r4, r4, #31
90017114:	4576      	cmp	r6, lr
90017116:	f8b2 a006 	ldrh.w	sl, [r2, #6]
9001711a:	9402      	str	r4, [sp, #8]
9001711c:	9c04      	ldr	r4, [sp, #16]
9001711e:	eba4 0403 	sub.w	r4, r4, r3
90017122:	d10a      	bne.n	9001713a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90017124:	9b02      	ldr	r3, [sp, #8]
90017126:	44a0      	add	r8, r4
90017128:	449c      	add	ip, r3
9001712a:	f8a2 8004 	strh.w	r8, [r2, #4]
9001712e:	fb04 a40c 	mla	r4, r4, ip, sl
90017132:	80d4      	strh	r4, [r2, #6]
90017134:	b013      	add	sp, #76	@ 0x4c
90017136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001713a:	9d05      	ldr	r5, [sp, #20]
9001713c:	1a69      	subs	r1, r5, r1
9001713e:	bf51      	iteee	pl
90017140:	f1cc 0520 	rsbpl	r5, ip, #32
90017144:	fb04 f40c 	mulmi.w	r4, r4, ip
90017148:	4249      	negmi	r1, r1
9001714a:	2500      	movmi	r5, #0
9001714c:	bf5d      	ittte	pl
9001714e:	436c      	mulpl	r4, r5
90017150:	2520      	movpl	r5, #32
90017152:	f04f 0901 	movpl.w	r9, #1
90017156:	f04f 39ff 	movmi.w	r9, #4294967295
9001715a:	9501      	str	r5, [sp, #4]
9001715c:	9f01      	ldr	r7, [sp, #4]
9001715e:	444e      	add	r6, r9
90017160:	fb94 f5f1 	sdiv	r5, r4, r1
90017164:	fb01 4415 	mls	r4, r1, r5, r4
90017168:	44bc      	add	ip, r7
9001716a:	2c00      	cmp	r4, #0
9001716c:	bfbc      	itt	lt
9001716e:	f105 35ff 	addlt.w	r5, r5, #4294967295
90017172:	1864      	addlt	r4, r4, r1
90017174:	44a8      	add	r8, r5
90017176:	fb05 ac0c 	mla	ip, r5, ip, sl
9001717a:	f8a2 8004 	strh.w	r8, [r2, #4]
9001717e:	f8a2 c006 	strh.w	ip, [r2, #6]
90017182:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017186:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001718a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
9001718e:	ea58 0202 	orrs.w	r2, r8, r2
90017192:	d011      	beq.n	900171b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90017194:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90017198:	f1b8 0f00 	cmp.w	r8, #0
9001719c:	db0c      	blt.n	900171b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
9001719e:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
900171a0:	4590      	cmp	r8, r2
900171a2:	da09      	bge.n	900171b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900171a4:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
900171a8:	4590      	cmp	r8, r2
900171aa:	bf3c      	itt	cc
900171ac:	f10c 0208 	addcc.w	r2, ip, #8
900171b0:	6102      	strcc	r2, [r0, #16]
900171b2:	f108 0201 	add.w	r2, r8, #1
900171b6:	6082      	str	r2, [r0, #8]
900171b8:	f8d0 c010 	ldr.w	ip, [r0, #16]
900171bc:	2700      	movs	r7, #0
900171be:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900171c2:	45b6      	cmp	lr, r6
900171c4:	f8ac 6000 	strh.w	r6, [ip]
900171c8:	442b      	add	r3, r5
900171ca:	f8ac 2002 	strh.w	r2, [ip, #2]
900171ce:	f8ac 7004 	strh.w	r7, [ip, #4]
900171d2:	f8ac 7006 	strh.w	r7, [ip, #6]
900171d6:	d04b      	beq.n	90017270 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
900171d8:	9f04      	ldr	r7, [sp, #16]
900171da:	1a64      	subs	r4, r4, r1
900171dc:	f04f 0a00 	mov.w	sl, #0
900171e0:	1aff      	subs	r7, r7, r3
900171e2:	443d      	add	r5, r7
900171e4:	016d      	lsls	r5, r5, #5
900171e6:	fb95 f8f1 	sdiv	r8, r5, r1
900171ea:	fb01 5518 	mls	r5, r1, r8, r5
900171ee:	2d00      	cmp	r5, #0
900171f0:	bfbc      	itt	lt
900171f2:	f108 38ff 	addlt.w	r8, r8, #4294967295
900171f6:	186d      	addlt	r5, r5, r1
900171f8:	f108 0701 	add.w	r7, r8, #1
900171fc:	9703      	str	r7, [sp, #12]
900171fe:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017202:	1964      	adds	r4, r4, r5
90017204:	444e      	add	r6, r9
90017206:	bf54      	ite	pl
90017208:	9f03      	ldrpl	r7, [sp, #12]
9001720a:	4647      	movmi	r7, r8
9001720c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90017210:	bf58      	it	pl
90017212:	1a64      	subpl	r4, r4, r1
90017214:	443b      	add	r3, r7
90017216:	44bb      	add	fp, r7
90017218:	f8ac b004 	strh.w	fp, [ip, #4]
9001721c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90017220:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90017224:	f8ac b006 	strh.w	fp, [ip, #6]
90017228:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001722c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90017230:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90017234:	ea5b 0707 	orrs.w	r7, fp, r7
90017238:	d011      	beq.n	9001725e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001723a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001723e:	f1bb 0f00 	cmp.w	fp, #0
90017242:	db0c      	blt.n	9001725e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90017244:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90017246:	45bb      	cmp	fp, r7
90017248:	da09      	bge.n	9001725e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001724a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001724e:	45bb      	cmp	fp, r7
90017250:	bf3c      	itt	cc
90017252:	f10c 0708 	addcc.w	r7, ip, #8
90017256:	6107      	strcc	r7, [r0, #16]
90017258:	f10b 0701 	add.w	r7, fp, #1
9001725c:	6087      	str	r7, [r0, #8]
9001725e:	6907      	ldr	r7, [r0, #16]
90017260:	45b6      	cmp	lr, r6
90017262:	803e      	strh	r6, [r7, #0]
90017264:	807a      	strh	r2, [r7, #2]
90017266:	f8a7 a004 	strh.w	sl, [r7, #4]
9001726a:	f8a7 a006 	strh.w	sl, [r7, #6]
9001726e:	d1c6      	bne.n	900171fe <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90017270:	9a04      	ldr	r2, [sp, #16]
90017272:	1ad3      	subs	r3, r2, r3
90017274:	6902      	ldr	r2, [r0, #16]
90017276:	8891      	ldrh	r1, [r2, #4]
90017278:	88d6      	ldrh	r6, [r2, #6]
9001727a:	4419      	add	r1, r3
9001727c:	8091      	strh	r1, [r2, #4]
9001727e:	9902      	ldr	r1, [sp, #8]
90017280:	f101 0c20 	add.w	ip, r1, #32
90017284:	9901      	ldr	r1, [sp, #4]
90017286:	ebac 0c01 	sub.w	ip, ip, r1
9001728a:	fb03 630c 	mla	r3, r3, ip, r6
9001728e:	80d3      	strh	r3, [r2, #6]
90017290:	e750      	b.n	90017134 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90017292:	9d05      	ldr	r5, [sp, #20]
90017294:	1aa2      	subs	r2, r4, r2
90017296:	eba5 0501 	sub.w	r5, r5, r1
9001729a:	9202      	str	r2, [sp, #8]
9001729c:	9508      	str	r5, [sp, #32]
9001729e:	f140 8128 	bpl.w	900174f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
900172a2:	9a03      	ldr	r2, [sp, #12]
900172a4:	2a00      	cmp	r2, #0
900172a6:	f6ff af45 	blt.w	90017134 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900172aa:	9a02      	ldr	r2, [sp, #8]
900172ac:	f04f 34ff 	mov.w	r4, #4294967295
900172b0:	4252      	negs	r2, r2
900172b2:	940b      	str	r4, [sp, #44]	@ 0x2c
900172b4:	2400      	movs	r4, #0
900172b6:	9202      	str	r2, [sp, #8]
900172b8:	9a06      	ldr	r2, [sp, #24]
900172ba:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
900172be:	9206      	str	r2, [sp, #24]
900172c0:	462a      	mov	r2, r5
900172c2:	435a      	muls	r2, r3
900172c4:	9401      	str	r4, [sp, #4]
900172c6:	9c02      	ldr	r4, [sp, #8]
900172c8:	9d02      	ldr	r5, [sp, #8]
900172ca:	fb92 f4f4 	sdiv	r4, r2, r4
900172ce:	fb05 2214 	mls	r2, r5, r4, r2
900172d2:	2a00      	cmp	r2, #0
900172d4:	9207      	str	r2, [sp, #28]
900172d6:	bfbc      	itt	lt
900172d8:	1952      	addlt	r2, r2, r5
900172da:	f104 34ff 	addlt.w	r4, r4, #4294967295
900172de:	6905      	ldr	r5, [r0, #16]
900172e0:	bfb8      	it	lt
900172e2:	9207      	strlt	r2, [sp, #28]
900172e4:	eb04 0901 	add.w	r9, r4, r1
900172e8:	9a01      	ldr	r2, [sp, #4]
900172ea:	ea4f 1669 	mov.w	r6, r9, asr #5
900172ee:	429a      	cmp	r2, r3
900172f0:	f040 8111 	bne.w	90017516 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
900172f4:	f9b5 3000 	ldrsh.w	r3, [r5]
900172f8:	429e      	cmp	r6, r3
900172fa:	d104      	bne.n	90017306 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
900172fc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90017300:	9a03      	ldr	r2, [sp, #12]
90017302:	429a      	cmp	r2, r3
90017304:	d01b      	beq.n	9001733e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90017306:	88ea      	ldrh	r2, [r5, #6]
90017308:	88ab      	ldrh	r3, [r5, #4]
9001730a:	4313      	orrs	r3, r2
9001730c:	d010      	beq.n	90017330 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001730e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90017312:	2a00      	cmp	r2, #0
90017314:	db0c      	blt.n	90017330 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90017316:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90017318:	429a      	cmp	r2, r3
9001731a:	da09      	bge.n	90017330 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001731c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90017320:	429a      	cmp	r2, r3
90017322:	f102 0201 	add.w	r2, r2, #1
90017326:	bf38      	it	cc
90017328:	3508      	addcc	r5, #8
9001732a:	6082      	str	r2, [r0, #8]
9001732c:	bf38      	it	cc
9001732e:	6105      	strcc	r5, [r0, #16]
90017330:	6903      	ldr	r3, [r0, #16]
90017332:	9a03      	ldr	r2, [sp, #12]
90017334:	801e      	strh	r6, [r3, #0]
90017336:	805a      	strh	r2, [r3, #2]
90017338:	2200      	movs	r2, #0
9001733a:	809a      	strh	r2, [r3, #4]
9001733c:	80da      	strh	r2, [r3, #6]
9001733e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90017340:	9a03      	ldr	r2, [sp, #12]
90017342:	6901      	ldr	r1, [r0, #16]
90017344:	441a      	add	r2, r3
90017346:	f9b1 3000 	ldrsh.w	r3, [r1]
9001734a:	42b3      	cmp	r3, r6
9001734c:	d103      	bne.n	90017356 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
9001734e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90017352:	429a      	cmp	r2, r3
90017354:	d01a      	beq.n	9001738c <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90017356:	88cc      	ldrh	r4, [r1, #6]
90017358:	888b      	ldrh	r3, [r1, #4]
9001735a:	4323      	orrs	r3, r4
9001735c:	d010      	beq.n	90017380 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001735e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90017362:	2c00      	cmp	r4, #0
90017364:	db0c      	blt.n	90017380 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90017366:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90017368:	429c      	cmp	r4, r3
9001736a:	da09      	bge.n	90017380 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
9001736c:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90017370:	429c      	cmp	r4, r3
90017372:	f104 0401 	add.w	r4, r4, #1
90017376:	bf38      	it	cc
90017378:	3108      	addcc	r1, #8
9001737a:	6084      	str	r4, [r0, #8]
9001737c:	bf38      	it	cc
9001737e:	6101      	strcc	r1, [r0, #16]
90017380:	6903      	ldr	r3, [r0, #16]
90017382:	2100      	movs	r1, #0
90017384:	801e      	strh	r6, [r3, #0]
90017386:	805a      	strh	r2, [r3, #2]
90017388:	8099      	strh	r1, [r3, #4]
9001738a:	80d9      	strh	r1, [r3, #6]
9001738c:	9b06      	ldr	r3, [sp, #24]
9001738e:	4293      	cmp	r3, r2
90017390:	f000 8082 	beq.w	90017498 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90017394:	9b08      	ldr	r3, [sp, #32]
90017396:	9902      	ldr	r1, [sp, #8]
90017398:	015b      	lsls	r3, r3, #5
9001739a:	9c02      	ldr	r4, [sp, #8]
9001739c:	fb93 f1f1 	sdiv	r1, r3, r1
900173a0:	fb04 3311 	mls	r3, r4, r1, r3
900173a4:	9103      	str	r1, [sp, #12]
900173a6:	2b00      	cmp	r3, #0
900173a8:	9308      	str	r3, [sp, #32]
900173aa:	da04      	bge.n	900173b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
900173ac:	1e4b      	subs	r3, r1, #1
900173ae:	9303      	str	r3, [sp, #12]
900173b0:	9b08      	ldr	r3, [sp, #32]
900173b2:	4423      	add	r3, r4
900173b4:	9308      	str	r3, [sp, #32]
900173b6:	9b07      	ldr	r3, [sp, #28]
900173b8:	464f      	mov	r7, r9
900173ba:	9902      	ldr	r1, [sp, #8]
900173bc:	2600      	movs	r6, #0
900173be:	1a5b      	subs	r3, r3, r1
900173c0:	9307      	str	r3, [sp, #28]
900173c2:	9b01      	ldr	r3, [sp, #4]
900173c4:	f1c3 0320 	rsb	r3, r3, #32
900173c8:	930e      	str	r3, [sp, #56]	@ 0x38
900173ca:	990e      	ldr	r1, [sp, #56]	@ 0x38
900173cc:	9b01      	ldr	r3, [sp, #4]
900173ce:	1a5b      	subs	r3, r3, r1
900173d0:	930a      	str	r3, [sp, #40]	@ 0x28
900173d2:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
900173d6:	185b      	adds	r3, r3, r1
900173d8:	bf58      	it	pl
900173da:	9902      	ldrpl	r1, [sp, #8]
900173dc:	9307      	str	r3, [sp, #28]
900173de:	bf57      	itett	pl
900173e0:	1a5b      	subpl	r3, r3, r1
900173e2:	9903      	ldrmi	r1, [sp, #12]
900173e4:	9307      	strpl	r3, [sp, #28]
900173e6:	9b03      	ldrpl	r3, [sp, #12]
900173e8:	bf58      	it	pl
900173ea:	1c59      	addpl	r1, r3, #1
900173ec:	2a00      	cmp	r2, #0
900173ee:	4489      	add	r9, r1
900173f0:	ea4f 1a69 	mov.w	sl, r9, asr #5
900173f4:	db2e      	blt.n	90017454 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900173f6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
900173f8:	4293      	cmp	r3, r2
900173fa:	dd2b      	ble.n	90017454 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900173fc:	9c01      	ldr	r4, [sp, #4]
900173fe:	6905      	ldr	r5, [r0, #16]
90017400:	46a0      	mov	r8, r4
90017402:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90017404:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90017408:	45a0      	cmp	r8, r4
9001740a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
9001740e:	f040 814c 	bne.w	900176aa <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90017412:	f9b5 1000 	ldrsh.w	r1, [r5]
90017416:	4551      	cmp	r1, sl
90017418:	d103      	bne.n	90017422 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
9001741a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001741e:	4291      	cmp	r1, r2
90017420:	d018      	beq.n	90017454 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90017422:	ea5c 010e 	orrs.w	r1, ip, lr
90017426:	d00f      	beq.n	90017448 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90017428:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
9001742c:	2900      	cmp	r1, #0
9001742e:	db0b      	blt.n	90017448 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90017430:	428b      	cmp	r3, r1
90017432:	dd09      	ble.n	90017448 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90017434:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90017438:	4299      	cmp	r1, r3
9001743a:	f101 0101 	add.w	r1, r1, #1
9001743e:	bf38      	it	cc
90017440:	3508      	addcc	r5, #8
90017442:	6081      	str	r1, [r0, #8]
90017444:	bf38      	it	cc
90017446:	6105      	strcc	r5, [r0, #16]
90017448:	6903      	ldr	r3, [r0, #16]
9001744a:	f8a3 a000 	strh.w	sl, [r3]
9001744e:	805a      	strh	r2, [r3, #2]
90017450:	809e      	strh	r6, [r3, #4]
90017452:	80de      	strh	r6, [r3, #6]
90017454:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90017456:	6901      	ldr	r1, [r0, #16]
90017458:	441a      	add	r2, r3
9001745a:	88cc      	ldrh	r4, [r1, #6]
9001745c:	888b      	ldrh	r3, [r1, #4]
9001745e:	4323      	orrs	r3, r4
90017460:	d010      	beq.n	90017484 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90017462:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90017466:	2c00      	cmp	r4, #0
90017468:	db0c      	blt.n	90017484 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
9001746a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001746c:	429c      	cmp	r4, r3
9001746e:	da09      	bge.n	90017484 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90017470:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90017474:	429c      	cmp	r4, r3
90017476:	f104 0401 	add.w	r4, r4, #1
9001747a:	bf38      	it	cc
9001747c:	3108      	addcc	r1, #8
9001747e:	6084      	str	r4, [r0, #8]
90017480:	bf38      	it	cc
90017482:	6101      	strcc	r1, [r0, #16]
90017484:	6903      	ldr	r3, [r0, #16]
90017486:	464f      	mov	r7, r9
90017488:	f8a3 a000 	strh.w	sl, [r3]
9001748c:	805a      	strh	r2, [r3, #2]
9001748e:	809e      	strh	r6, [r3, #4]
90017490:	80de      	strh	r6, [r3, #6]
90017492:	9b06      	ldr	r3, [sp, #24]
90017494:	4293      	cmp	r3, r2
90017496:	d19c      	bne.n	900173d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90017498:	9b01      	ldr	r3, [sp, #4]
9001749a:	6907      	ldr	r7, [r0, #16]
9001749c:	f1c3 0620 	rsb	r6, r3, #32
900174a0:	9b05      	ldr	r3, [sp, #20]
900174a2:	ea4f 1e63 	mov.w	lr, r3, asr #5
900174a6:	9b04      	ldr	r3, [sp, #16]
900174a8:	429e      	cmp	r6, r3
900174aa:	f040 81c7 	bne.w	9001783c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
900174ae:	f9b7 3000 	ldrsh.w	r3, [r7]
900174b2:	459e      	cmp	lr, r3
900174b4:	d104      	bne.n	900174c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
900174b6:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900174ba:	429a      	cmp	r2, r3
900174bc:	f43f ae3a 	beq.w	90017134 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900174c0:	88f9      	ldrh	r1, [r7, #6]
900174c2:	88bb      	ldrh	r3, [r7, #4]
900174c4:	430b      	orrs	r3, r1
900174c6:	d010      	beq.n	900174ea <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900174c8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
900174cc:	2b00      	cmp	r3, #0
900174ce:	db0c      	blt.n	900174ea <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900174d0:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
900174d2:	428b      	cmp	r3, r1
900174d4:	da09      	bge.n	900174ea <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
900174d6:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900174da:	428b      	cmp	r3, r1
900174dc:	f103 0301 	add.w	r3, r3, #1
900174e0:	bf38      	it	cc
900174e2:	3708      	addcc	r7, #8
900174e4:	6083      	str	r3, [r0, #8]
900174e6:	bf38      	it	cc
900174e8:	6107      	strcc	r7, [r0, #16]
900174ea:	6903      	ldr	r3, [r0, #16]
900174ec:	f8a3 e000 	strh.w	lr, [r3]
900174f0:	e603      	b.n	900170fa <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
900174f2:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
900174f4:	9c03      	ldr	r4, [sp, #12]
900174f6:	42a2      	cmp	r2, r4
900174f8:	f6ff ae1c 	blt.w	90017134 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900174fc:	9c06      	ldr	r4, [sp, #24]
900174fe:	42a2      	cmp	r2, r4
90017500:	9c08      	ldr	r4, [sp, #32]
90017502:	bfbc      	itt	lt
90017504:	3201      	addlt	r2, #1
90017506:	9206      	strlt	r2, [sp, #24]
90017508:	f1c3 0220 	rsb	r2, r3, #32
9001750c:	4362      	muls	r2, r4
9001750e:	2401      	movs	r4, #1
90017510:	940b      	str	r4, [sp, #44]	@ 0x2c
90017512:	2420      	movs	r4, #32
90017514:	e6d6      	b.n	900172c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90017516:	ea4f 1861 	mov.w	r8, r1, asr #5
9001751a:	f009 021f 	and.w	r2, r9, #31
9001751e:	f001 011f 	and.w	r1, r1, #31
90017522:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90017526:	920c      	str	r2, [sp, #48]	@ 0x30
90017528:	45b0      	cmp	r8, r6
9001752a:	9a01      	ldr	r2, [sp, #4]
9001752c:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90017530:	eba2 0203 	sub.w	r2, r2, r3
90017534:	d108      	bne.n	90017548 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90017536:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90017538:	4496      	add	lr, r2
9001753a:	4419      	add	r1, r3
9001753c:	f8a5 e004 	strh.w	lr, [r5, #4]
90017540:	fb02 a101 	mla	r1, r2, r1, sl
90017544:	80e9      	strh	r1, [r5, #6]
90017546:	e6fa      	b.n	9001733e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90017548:	2c00      	cmp	r4, #0
9001754a:	f2c0 80a7 	blt.w	9001769c <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
9001754e:	2701      	movs	r7, #1
90017550:	f1c1 0c20 	rsb	ip, r1, #32
90017554:	970a      	str	r7, [sp, #40]	@ 0x28
90017556:	2720      	movs	r7, #32
90017558:	fb02 f20c 	mul.w	r2, r2, ip
9001755c:	9709      	str	r7, [sp, #36]	@ 0x24
9001755e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90017560:	fb92 fcf4 	sdiv	ip, r2, r4
90017564:	fb04 221c 	mls	r2, r4, ip, r2
90017568:	4439      	add	r1, r7
9001756a:	2a00      	cmp	r2, #0
9001756c:	bfbc      	itt	lt
9001756e:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90017572:	1912      	addlt	r2, r2, r4
90017574:	fb0c a101 	mla	r1, ip, r1, sl
90017578:	44e6      	add	lr, ip
9001757a:	80e9      	strh	r1, [r5, #6]
9001757c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9001757e:	f8a5 e004 	strh.w	lr, [r5, #4]
90017582:	eb08 0501 	add.w	r5, r8, r1
90017586:	6901      	ldr	r1, [r0, #16]
90017588:	f8b1 8006 	ldrh.w	r8, [r1, #6]
9001758c:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90017590:	ea58 070e 	orrs.w	r7, r8, lr
90017594:	d010      	beq.n	900175b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90017596:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
9001759a:	f1be 0f00 	cmp.w	lr, #0
9001759e:	db0b      	blt.n	900175b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900175a0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900175a2:	45be      	cmp	lr, r7
900175a4:	da08      	bge.n	900175b8 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
900175a6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900175aa:	45be      	cmp	lr, r7
900175ac:	bf3c      	itt	cc
900175ae:	3108      	addcc	r1, #8
900175b0:	6101      	strcc	r1, [r0, #16]
900175b2:	f10e 0101 	add.w	r1, lr, #1
900175b6:	6081      	str	r1, [r0, #8]
900175b8:	6901      	ldr	r1, [r0, #16]
900175ba:	f04f 0e00 	mov.w	lr, #0
900175be:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
900175c2:	42ae      	cmp	r6, r5
900175c4:	800d      	strh	r5, [r1, #0]
900175c6:	4463      	add	r3, ip
900175c8:	f8a1 8002 	strh.w	r8, [r1, #2]
900175cc:	f8a1 e004 	strh.w	lr, [r1, #4]
900175d0:	f8a1 e006 	strh.w	lr, [r1, #6]
900175d4:	d053      	beq.n	9001767e <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
900175d6:	9901      	ldr	r1, [sp, #4]
900175d8:	1b12      	subs	r2, r2, r4
900175da:	1ac9      	subs	r1, r1, r3
900175dc:	4461      	add	r1, ip
900175de:	0149      	lsls	r1, r1, #5
900175e0:	fb91 fef4 	sdiv	lr, r1, r4
900175e4:	fb04 111e 	mls	r1, r4, lr, r1
900175e8:	2900      	cmp	r1, #0
900175ea:	bfbc      	itt	lt
900175ec:	f10e 3eff 	addlt.w	lr, lr, #4294967295
900175f0:	1909      	addlt	r1, r1, r4
900175f2:	f10e 0701 	add.w	r7, lr, #1
900175f6:	970d      	str	r7, [sp, #52]	@ 0x34
900175f8:	f8d0 a010 	ldr.w	sl, [r0, #16]
900175fc:	1852      	adds	r2, r2, r1
900175fe:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90017600:	bf54      	ite	pl
90017602:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
90017606:	46f4      	movmi	ip, lr
90017608:	f8ba b004 	ldrh.w	fp, [sl, #4]
9001760c:	bf58      	it	pl
9001760e:	1b12      	subpl	r2, r2, r4
90017610:	4463      	add	r3, ip
90017612:	443d      	add	r5, r7
90017614:	44e3      	add	fp, ip
90017616:	f8aa b004 	strh.w	fp, [sl, #4]
9001761a:	f8ba b006 	ldrh.w	fp, [sl, #6]
9001761e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90017622:	f8aa b006 	strh.w	fp, [sl, #6]
90017626:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001762a:	f8bc b006 	ldrh.w	fp, [ip, #6]
9001762e:	f8bc a004 	ldrh.w	sl, [ip, #4]
90017632:	ea5b 070a 	orrs.w	r7, fp, sl
90017636:	d014      	beq.n	90017662 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90017638:	f9bc a002 	ldrsh.w	sl, [ip, #2]
9001763c:	f1ba 0f00 	cmp.w	sl, #0
90017640:	db0f      	blt.n	90017662 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90017642:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90017644:	45ba      	cmp	sl, r7
90017646:	da0c      	bge.n	90017662 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90017648:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
9001764c:	45ba      	cmp	sl, r7
9001764e:	f10a 0a01 	add.w	sl, sl, #1
90017652:	bf38      	it	cc
90017654:	f10c 0c08 	addcc.w	ip, ip, #8
90017658:	f8c0 a008 	str.w	sl, [r0, #8]
9001765c:	bf38      	it	cc
9001765e:	f8c0 c010 	strcc.w	ip, [r0, #16]
90017662:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017666:	f04f 0700 	mov.w	r7, #0
9001766a:	42ae      	cmp	r6, r5
9001766c:	f8ac 5000 	strh.w	r5, [ip]
90017670:	f8ac 8002 	strh.w	r8, [ip, #2]
90017674:	f8ac 7004 	strh.w	r7, [ip, #4]
90017678:	f8ac 7006 	strh.w	r7, [ip, #6]
9001767c:	d1bc      	bne.n	900175f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
9001767e:	6904      	ldr	r4, [r0, #16]
90017680:	9a01      	ldr	r2, [sp, #4]
90017682:	990c      	ldr	r1, [sp, #48]	@ 0x30
90017684:	1ad3      	subs	r3, r2, r3
90017686:	88a2      	ldrh	r2, [r4, #4]
90017688:	3120      	adds	r1, #32
9001768a:	441a      	add	r2, r3
9001768c:	80a2      	strh	r2, [r4, #4]
9001768e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90017690:	1a89      	subs	r1, r1, r2
90017692:	88e2      	ldrh	r2, [r4, #6]
90017694:	fb03 2301 	mla	r3, r3, r1, r2
90017698:	80e3      	strh	r3, [r4, #6]
9001769a:	e650      	b.n	9001733e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
9001769c:	f04f 37ff 	mov.w	r7, #4294967295
900176a0:	434a      	muls	r2, r1
900176a2:	4264      	negs	r4, r4
900176a4:	970a      	str	r7, [sp, #40]	@ 0x28
900176a6:	2700      	movs	r7, #0
900176a8:	e758      	b.n	9001755c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
900176aa:	ea4f 1867 	mov.w	r8, r7, asr #5
900176ae:	f009 031f 	and.w	r3, r9, #31
900176b2:	f007 071f 	and.w	r7, r7, #31
900176b6:	fa1f fc8c 	uxth.w	ip, ip
900176ba:	45d0      	cmp	r8, sl
900176bc:	930f      	str	r3, [sp, #60]	@ 0x3c
900176be:	fa1f fe8e 	uxth.w	lr, lr
900176c2:	d10a      	bne.n	900176da <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
900176c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900176c6:	449c      	add	ip, r3
900176c8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900176ca:	441f      	add	r7, r3
900176cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900176ce:	f8a5 c004 	strh.w	ip, [r5, #4]
900176d2:	fb03 e707 	mla	r7, r3, r7, lr
900176d6:	80ef      	strh	r7, [r5, #6]
900176d8:	e6bc      	b.n	90017454 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900176da:	2900      	cmp	r1, #0
900176dc:	f2c0 80a6 	blt.w	9001782c <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
900176e0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900176e2:	f1c7 0320 	rsb	r3, r7, #32
900176e6:	4363      	muls	r3, r4
900176e8:	2401      	movs	r4, #1
900176ea:	940d      	str	r4, [sp, #52]	@ 0x34
900176ec:	2420      	movs	r4, #32
900176ee:	940c      	str	r4, [sp, #48]	@ 0x30
900176f0:	fb93 f4f1 	sdiv	r4, r3, r1
900176f4:	fb01 3b14 	mls	fp, r1, r4, r3
900176f8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900176fa:	f1bb 0f00 	cmp.w	fp, #0
900176fe:	441f      	add	r7, r3
90017700:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90017702:	bfbc      	itt	lt
90017704:	f104 34ff 	addlt.w	r4, r4, #4294967295
90017708:	448b      	addlt	fp, r1
9001770a:	fb04 e707 	mla	r7, r4, r7, lr
9001770e:	44a4      	add	ip, r4
90017710:	80ef      	strh	r7, [r5, #6]
90017712:	f8a5 c004 	strh.w	ip, [r5, #4]
90017716:	eb08 0503 	add.w	r5, r8, r3
9001771a:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001771e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90017722:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90017726:	ea5e 0307 	orrs.w	r3, lr, r7
9001772a:	d011      	beq.n	90017750 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001772c:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90017730:	f1be 0f00 	cmp.w	lr, #0
90017734:	db0c      	blt.n	90017750 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90017736:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90017738:	45be      	cmp	lr, r7
9001773a:	da09      	bge.n	90017750 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
9001773c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90017740:	45be      	cmp	lr, r7
90017742:	bf3c      	itt	cc
90017744:	f10c 0708 	addcc.w	r7, ip, #8
90017748:	6107      	strcc	r7, [r0, #16]
9001774a:	f10e 0701 	add.w	r7, lr, #1
9001774e:	6087      	str	r7, [r0, #8]
90017750:	6907      	ldr	r7, [r0, #16]
90017752:	b213      	sxth	r3, r2
90017754:	4555      	cmp	r5, sl
90017756:	9310      	str	r3, [sp, #64]	@ 0x40
90017758:	807b      	strh	r3, [r7, #2]
9001775a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001775c:	803d      	strh	r5, [r7, #0]
9001775e:	80be      	strh	r6, [r7, #4]
90017760:	eb04 0c03 	add.w	ip, r4, r3
90017764:	80fe      	strh	r6, [r7, #6]
90017766:	d050      	beq.n	9001780a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90017768:	9b01      	ldr	r3, [sp, #4]
9001776a:	eba3 070c 	sub.w	r7, r3, ip
9001776e:	ebab 0301 	sub.w	r3, fp, r1
90017772:	443c      	add	r4, r7
90017774:	9309      	str	r3, [sp, #36]	@ 0x24
90017776:	0164      	lsls	r4, r4, #5
90017778:	fb94 f8f1 	sdiv	r8, r4, r1
9001777c:	fb01 4418 	mls	r4, r1, r8, r4
90017780:	2c00      	cmp	r4, #0
90017782:	bfbc      	itt	lt
90017784:	f108 38ff 	addlt.w	r8, r8, #4294967295
90017788:	1864      	addlt	r4, r4, r1
9001778a:	f108 0701 	add.w	r7, r8, #1
9001778e:	9711      	str	r7, [sp, #68]	@ 0x44
90017790:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90017792:	f8d0 e010 	ldr.w	lr, [r0, #16]
90017796:	191b      	adds	r3, r3, r4
90017798:	f8be b004 	ldrh.w	fp, [lr, #4]
9001779c:	bf54      	ite	pl
9001779e:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
900177a0:	4647      	movmi	r7, r8
900177a2:	9309      	str	r3, [sp, #36]	@ 0x24
900177a4:	bf58      	it	pl
900177a6:	1a5b      	subpl	r3, r3, r1
900177a8:	44bb      	add	fp, r7
900177aa:	44bc      	add	ip, r7
900177ac:	bf58      	it	pl
900177ae:	9309      	strpl	r3, [sp, #36]	@ 0x24
900177b0:	f8ae b004 	strh.w	fp, [lr, #4]
900177b4:	f8be b006 	ldrh.w	fp, [lr, #6]
900177b8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900177bc:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
900177be:	f8ae b006 	strh.w	fp, [lr, #6]
900177c2:	443d      	add	r5, r7
900177c4:	f8d0 e010 	ldr.w	lr, [r0, #16]
900177c8:	f8be b006 	ldrh.w	fp, [lr, #6]
900177cc:	f8be 7004 	ldrh.w	r7, [lr, #4]
900177d0:	ea5b 0307 	orrs.w	r3, fp, r7
900177d4:	d011      	beq.n	900177fa <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900177d6:	f9be b002 	ldrsh.w	fp, [lr, #2]
900177da:	f1bb 0f00 	cmp.w	fp, #0
900177de:	db0c      	blt.n	900177fa <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900177e0:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900177e2:	45bb      	cmp	fp, r7
900177e4:	da09      	bge.n	900177fa <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
900177e6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900177ea:	45bb      	cmp	fp, r7
900177ec:	bf3c      	itt	cc
900177ee:	f10e 0708 	addcc.w	r7, lr, #8
900177f2:	6107      	strcc	r7, [r0, #16]
900177f4:	f10b 0701 	add.w	r7, fp, #1
900177f8:	6087      	str	r7, [r0, #8]
900177fa:	6907      	ldr	r7, [r0, #16]
900177fc:	4555      	cmp	r5, sl
900177fe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90017800:	803d      	strh	r5, [r7, #0]
90017802:	807b      	strh	r3, [r7, #2]
90017804:	80be      	strh	r6, [r7, #4]
90017806:	80fe      	strh	r6, [r7, #6]
90017808:	d1c2      	bne.n	90017790 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
9001780a:	9b01      	ldr	r3, [sp, #4]
9001780c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001780e:	eba3 0c0c 	sub.w	ip, r3, ip
90017812:	6903      	ldr	r3, [r0, #16]
90017814:	3720      	adds	r7, #32
90017816:	8899      	ldrh	r1, [r3, #4]
90017818:	4461      	add	r1, ip
9001781a:	8099      	strh	r1, [r3, #4]
9001781c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001781e:	1a7f      	subs	r7, r7, r1
90017820:	88d9      	ldrh	r1, [r3, #6]
90017822:	fb0c 1c07 	mla	ip, ip, r7, r1
90017826:	f8a3 c006 	strh.w	ip, [r3, #6]
9001782a:	e613      	b.n	90017454 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001782c:	f04f 34ff 	mov.w	r4, #4294967295
90017830:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90017832:	4249      	negs	r1, r1
90017834:	940d      	str	r4, [sp, #52]	@ 0x34
90017836:	2400      	movs	r4, #0
90017838:	437b      	muls	r3, r7
9001783a:	e758      	b.n	900176ee <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
9001783c:	9905      	ldr	r1, [sp, #20]
9001783e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90017842:	f009 0c1f 	and.w	ip, r9, #31
90017846:	f8b7 8004 	ldrh.w	r8, [r7, #4]
9001784a:	f001 011f 	and.w	r1, r1, #31
9001784e:	45f3      	cmp	fp, lr
90017850:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90017854:	9102      	str	r1, [sp, #8]
90017856:	9904      	ldr	r1, [sp, #16]
90017858:	eba1 0406 	sub.w	r4, r1, r6
9001785c:	d108      	bne.n	90017870 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
9001785e:	9b02      	ldr	r3, [sp, #8]
90017860:	44a0      	add	r8, r4
90017862:	449c      	add	ip, r3
90017864:	f8a7 8004 	strh.w	r8, [r7, #4]
90017868:	fb04 a40c 	mla	r4, r4, ip, sl
9001786c:	80fc      	strh	r4, [r7, #6]
9001786e:	e461      	b.n	90017134 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90017870:	9905      	ldr	r1, [sp, #20]
90017872:	ebb1 0109 	subs.w	r1, r1, r9
90017876:	bf51      	iteee	pl
90017878:	f1cc 0520 	rsbpl	r5, ip, #32
9001787c:	fb04 f40c 	mulmi.w	r4, r4, ip
90017880:	4249      	negmi	r1, r1
90017882:	2500      	movmi	r5, #0
90017884:	bf5d      	ittte	pl
90017886:	436c      	mulpl	r4, r5
90017888:	2520      	movpl	r5, #32
9001788a:	f04f 0901 	movpl.w	r9, #1
9001788e:	f04f 39ff 	movmi.w	r9, #4294967295
90017892:	9501      	str	r5, [sp, #4]
90017894:	9b01      	ldr	r3, [sp, #4]
90017896:	fb94 f5f1 	sdiv	r5, r4, r1
9001789a:	fb01 4415 	mls	r4, r1, r5, r4
9001789e:	449c      	add	ip, r3
900178a0:	eb0b 0309 	add.w	r3, fp, r9
900178a4:	2c00      	cmp	r4, #0
900178a6:	bfbc      	itt	lt
900178a8:	f105 35ff 	addlt.w	r5, r5, #4294967295
900178ac:	1864      	addlt	r4, r4, r1
900178ae:	44a8      	add	r8, r5
900178b0:	fb05 ac0c 	mla	ip, r5, ip, sl
900178b4:	f8a7 8004 	strh.w	r8, [r7, #4]
900178b8:	f8a7 c006 	strh.w	ip, [r7, #6]
900178bc:	f8d0 c010 	ldr.w	ip, [r0, #16]
900178c0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
900178c4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900178c8:	ea58 0707 	orrs.w	r7, r8, r7
900178cc:	d011      	beq.n	900178f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900178ce:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900178d2:	f1b8 0f00 	cmp.w	r8, #0
900178d6:	db0c      	blt.n	900178f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900178d8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900178da:	45b8      	cmp	r8, r7
900178dc:	da09      	bge.n	900178f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900178de:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
900178e2:	45b8      	cmp	r8, r7
900178e4:	bf3c      	itt	cc
900178e6:	f10c 0708 	addcc.w	r7, ip, #8
900178ea:	6107      	strcc	r7, [r0, #16]
900178ec:	f108 0701 	add.w	r7, r8, #1
900178f0:	6087      	str	r7, [r0, #8]
900178f2:	6907      	ldr	r7, [r0, #16]
900178f4:	f04f 0c00 	mov.w	ip, #0
900178f8:	b212      	sxth	r2, r2
900178fa:	459e      	cmp	lr, r3
900178fc:	803b      	strh	r3, [r7, #0]
900178fe:	442e      	add	r6, r5
90017900:	807a      	strh	r2, [r7, #2]
90017902:	f8a7 c004 	strh.w	ip, [r7, #4]
90017906:	f8a7 c006 	strh.w	ip, [r7, #6]
9001790a:	d04b      	beq.n	900179a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
9001790c:	9f04      	ldr	r7, [sp, #16]
9001790e:	1a64      	subs	r4, r4, r1
90017910:	f04f 0a00 	mov.w	sl, #0
90017914:	1bbf      	subs	r7, r7, r6
90017916:	443d      	add	r5, r7
90017918:	016d      	lsls	r5, r5, #5
9001791a:	fb95 f8f1 	sdiv	r8, r5, r1
9001791e:	fb01 5518 	mls	r5, r1, r8, r5
90017922:	4565      	cmp	r5, ip
90017924:	bfbc      	itt	lt
90017926:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001792a:	186d      	addlt	r5, r5, r1
9001792c:	f108 0701 	add.w	r7, r8, #1
90017930:	9703      	str	r7, [sp, #12]
90017932:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017936:	1964      	adds	r4, r4, r5
90017938:	444b      	add	r3, r9
9001793a:	bf54      	ite	pl
9001793c:	9f03      	ldrpl	r7, [sp, #12]
9001793e:	4647      	movmi	r7, r8
90017940:	f8bc b004 	ldrh.w	fp, [ip, #4]
90017944:	bf58      	it	pl
90017946:	1a64      	subpl	r4, r4, r1
90017948:	443e      	add	r6, r7
9001794a:	44bb      	add	fp, r7
9001794c:	f8ac b004 	strh.w	fp, [ip, #4]
90017950:	f8bc b006 	ldrh.w	fp, [ip, #6]
90017954:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90017958:	f8ac b006 	strh.w	fp, [ip, #6]
9001795c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90017960:	f8bc b006 	ldrh.w	fp, [ip, #6]
90017964:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90017968:	ea5b 0707 	orrs.w	r7, fp, r7
9001796c:	d011      	beq.n	90017992 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001796e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90017972:	f1bb 0f00 	cmp.w	fp, #0
90017976:	db0c      	blt.n	90017992 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90017978:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001797a:	45bb      	cmp	fp, r7
9001797c:	da09      	bge.n	90017992 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001797e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90017982:	45bb      	cmp	fp, r7
90017984:	bf3c      	itt	cc
90017986:	f10c 0708 	addcc.w	r7, ip, #8
9001798a:	6107      	strcc	r7, [r0, #16]
9001798c:	f10b 0701 	add.w	r7, fp, #1
90017990:	6087      	str	r7, [r0, #8]
90017992:	6907      	ldr	r7, [r0, #16]
90017994:	459e      	cmp	lr, r3
90017996:	803b      	strh	r3, [r7, #0]
90017998:	807a      	strh	r2, [r7, #2]
9001799a:	f8a7 a004 	strh.w	sl, [r7, #4]
9001799e:	f8a7 a006 	strh.w	sl, [r7, #6]
900179a2:	d1c6      	bne.n	90017932 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
900179a4:	9b04      	ldr	r3, [sp, #16]
900179a6:	1b9e      	subs	r6, r3, r6
900179a8:	6903      	ldr	r3, [r0, #16]
900179aa:	889a      	ldrh	r2, [r3, #4]
900179ac:	4432      	add	r2, r6
900179ae:	809a      	strh	r2, [r3, #4]
900179b0:	9a02      	ldr	r2, [sp, #8]
900179b2:	f102 0c20 	add.w	ip, r2, #32
900179b6:	9a01      	ldr	r2, [sp, #4]
900179b8:	ebac 0c02 	sub.w	ip, ip, r2
900179bc:	88da      	ldrh	r2, [r3, #6]
900179be:	fb06 260c 	mla	r6, r6, ip, r2
900179c2:	80de      	strh	r6, [r3, #6]
900179c4:	f7ff bbb6 	b.w	90017134 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

900179c8 <_ZN8touchgfx7Outline6lineToEii>:
900179c8:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900179ca:	079b      	lsls	r3, r3, #30
900179cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900179ce:	460e      	mov	r6, r1
900179d0:	4615      	mov	r5, r2
900179d2:	d511      	bpl.n	900179f8 <_ZN8touchgfx7Outline6lineToEii+0x30>
900179d4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
900179d8:	ea86 0701 	eor.w	r7, r6, r1
900179dc:	ea85 0302 	eor.w	r3, r5, r2
900179e0:	433b      	orrs	r3, r7
900179e2:	d009      	beq.n	900179f8 <_ZN8touchgfx7Outline6lineToEii+0x30>
900179e4:	4633      	mov	r3, r6
900179e6:	9500      	str	r5, [sp, #0]
900179e8:	f7ff fb4c 	bl	90017084 <_ZN8touchgfx7Outline10renderLineEiiii>
900179ec:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900179ee:	f043 0301 	orr.w	r3, r3, #1
900179f2:	e9c0 6505 	strd	r6, r5, [r0, #20]
900179f6:	6243      	str	r3, [r0, #36]	@ 0x24
900179f8:	b003      	add	sp, #12
900179fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

900179fc <_ZN8touchgfx7Outline6moveToEii>:
900179fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900179fe:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017a00:	4615      	mov	r5, r2
90017a02:	4604      	mov	r4, r0
90017a04:	460e      	mov	r6, r1
90017a06:	079a      	lsls	r2, r3, #30
90017a08:	d401      	bmi.n	90017a0e <_ZN8touchgfx7Outline6moveToEii+0x12>
90017a0a:	f7ff fb08 	bl	9001701e <_ZN8touchgfx7Outline5resetEv>
90017a0e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90017a10:	07db      	lsls	r3, r3, #31
90017a12:	d504      	bpl.n	90017a1e <_ZN8touchgfx7Outline6moveToEii+0x22>
90017a14:	4620      	mov	r0, r4
90017a16:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
90017a1a:	f7ff ffd5 	bl	900179c8 <_ZN8touchgfx7Outline6lineToEii>
90017a1e:	6923      	ldr	r3, [r4, #16]
90017a20:	1170      	asrs	r0, r6, #5
90017a22:	1169      	asrs	r1, r5, #5
90017a24:	f9b3 2000 	ldrsh.w	r2, [r3]
90017a28:	4290      	cmp	r0, r2
90017a2a:	d103      	bne.n	90017a34 <_ZN8touchgfx7Outline6moveToEii+0x38>
90017a2c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017a30:	4291      	cmp	r1, r2
90017a32:	d01a      	beq.n	90017a6a <_ZN8touchgfx7Outline6moveToEii+0x6e>
90017a34:	88df      	ldrh	r7, [r3, #6]
90017a36:	889a      	ldrh	r2, [r3, #4]
90017a38:	433a      	orrs	r2, r7
90017a3a:	d010      	beq.n	90017a5e <_ZN8touchgfx7Outline6moveToEii+0x62>
90017a3c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017a40:	2a00      	cmp	r2, #0
90017a42:	db0c      	blt.n	90017a5e <_ZN8touchgfx7Outline6moveToEii+0x62>
90017a44:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
90017a46:	42ba      	cmp	r2, r7
90017a48:	da09      	bge.n	90017a5e <_ZN8touchgfx7Outline6moveToEii+0x62>
90017a4a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90017a4e:	42ba      	cmp	r2, r7
90017a50:	f102 0201 	add.w	r2, r2, #1
90017a54:	bf38      	it	cc
90017a56:	3308      	addcc	r3, #8
90017a58:	60a2      	str	r2, [r4, #8]
90017a5a:	bf38      	it	cc
90017a5c:	6123      	strcc	r3, [r4, #16]
90017a5e:	6923      	ldr	r3, [r4, #16]
90017a60:	2200      	movs	r2, #0
90017a62:	8018      	strh	r0, [r3, #0]
90017a64:	8059      	strh	r1, [r3, #2]
90017a66:	809a      	strh	r2, [r3, #4]
90017a68:	80da      	strh	r2, [r3, #6]
90017a6a:	6166      	str	r6, [r4, #20]
90017a6c:	6225      	str	r5, [r4, #32]
90017a6e:	e9c4 5606 	strd	r5, r6, [r4, #24]
90017a72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90017a74 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90017a74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017a78:	b0d0      	sub	sp, #320	@ 0x140
90017a7a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90017a7e:	466c      	mov	r4, sp
90017a80:	4627      	mov	r7, r4
90017a82:	1a0d      	subs	r5, r1, r0
90017a84:	f100 0308 	add.w	r3, r0, #8
90017a88:	2d48      	cmp	r5, #72	@ 0x48
90017a8a:	f340 80d5 	ble.w	90017c38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90017a8e:	112d      	asrs	r5, r5, #4
90017a90:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90017a94:	f9b0 9000 	ldrsh.w	r9, [r0]
90017a98:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90017a9c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90017aa0:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90017aa4:	6816      	ldr	r6, [r2, #0]
90017aa6:	6006      	str	r6, [r0, #0]
90017aa8:	6856      	ldr	r6, [r2, #4]
90017aaa:	6046      	str	r6, [r0, #4]
90017aac:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90017ab0:	f8a2 8002 	strh.w	r8, [r2, #2]
90017ab4:	f8a2 e004 	strh.w	lr, [r2, #4]
90017ab8:	f8a2 c006 	strh.w	ip, [r2, #6]
90017abc:	f1a1 0208 	sub.w	r2, r1, #8
90017ac0:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90017ac4:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90017ac8:	4565      	cmp	r5, ip
90017aca:	db06      	blt.n	90017ada <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90017acc:	d119      	bne.n	90017b02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90017ace:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90017ad2:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90017ad6:	42ae      	cmp	r6, r5
90017ad8:	dd13      	ble.n	90017b02 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90017ada:	460e      	mov	r6, r1
90017adc:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90017ae0:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90017ae4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90017ae8:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
90017aec:	601d      	str	r5, [r3, #0]
90017aee:	6875      	ldr	r5, [r6, #4]
90017af0:	605d      	str	r5, [r3, #4]
90017af2:	f821 9c08 	strh.w	r9, [r1, #-8]
90017af6:	f821 cc06 	strh.w	ip, [r1, #-6]
90017afa:	f821 8c04 	strh.w	r8, [r1, #-4]
90017afe:	f821 ec02 	strh.w	lr, [r1, #-2]
90017b02:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90017b06:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
90017b0a:	42ae      	cmp	r6, r5
90017b0c:	db06      	blt.n	90017b1c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
90017b0e:	d116      	bne.n	90017b3e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90017b10:	f9b0 c000 	ldrsh.w	ip, [r0]
90017b14:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90017b18:	45ac      	cmp	ip, r5
90017b1a:	da10      	bge.n	90017b3e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90017b1c:	681d      	ldr	r5, [r3, #0]
90017b1e:	f9b0 8000 	ldrsh.w	r8, [r0]
90017b22:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90017b26:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90017b2a:	6005      	str	r5, [r0, #0]
90017b2c:	685d      	ldr	r5, [r3, #4]
90017b2e:	f8a0 8008 	strh.w	r8, [r0, #8]
90017b32:	6045      	str	r5, [r0, #4]
90017b34:	8146      	strh	r6, [r0, #10]
90017b36:	f8a0 e00c 	strh.w	lr, [r0, #12]
90017b3a:	f8a0 c00e 	strh.w	ip, [r0, #14]
90017b3e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90017b42:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90017b46:	4565      	cmp	r5, ip
90017b48:	db06      	blt.n	90017b58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
90017b4a:	d119      	bne.n	90017b80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017b4c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90017b50:	f9b0 5000 	ldrsh.w	r5, [r0]
90017b54:	42ae      	cmp	r6, r5
90017b56:	da13      	bge.n	90017b80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017b58:	460e      	mov	r6, r1
90017b5a:	f9b0 9000 	ldrsh.w	r9, [r0]
90017b5e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90017b62:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90017b66:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
90017b6a:	6005      	str	r5, [r0, #0]
90017b6c:	6875      	ldr	r5, [r6, #4]
90017b6e:	6045      	str	r5, [r0, #4]
90017b70:	f821 9c08 	strh.w	r9, [r1, #-8]
90017b74:	f821 cc06 	strh.w	ip, [r1, #-6]
90017b78:	f821 8c04 	strh.w	r8, [r1, #-4]
90017b7c:	f821 ec02 	strh.w	lr, [r1, #-2]
90017b80:	3308      	adds	r3, #8
90017b82:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90017b86:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90017b8a:	45e6      	cmp	lr, ip
90017b8c:	dbf8      	blt.n	90017b80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017b8e:	d105      	bne.n	90017b9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90017b90:	f9b3 6000 	ldrsh.w	r6, [r3]
90017b94:	f9b0 5000 	ldrsh.w	r5, [r0]
90017b98:	42ae      	cmp	r6, r5
90017b9a:	dbf1      	blt.n	90017b80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017b9c:	4615      	mov	r5, r2
90017b9e:	3a08      	subs	r2, #8
90017ba0:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90017ba4:	45b4      	cmp	ip, r6
90017ba6:	dbf9      	blt.n	90017b9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90017ba8:	d105      	bne.n	90017bb6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
90017baa:	f9b0 8000 	ldrsh.w	r8, [r0]
90017bae:	f9b2 6000 	ldrsh.w	r6, [r2]
90017bb2:	45b0      	cmp	r8, r6
90017bb4:	dbf2      	blt.n	90017b9c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90017bb6:	4293      	cmp	r3, r2
90017bb8:	f1a5 0608 	sub.w	r6, r5, #8
90017bbc:	d816      	bhi.n	90017bec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90017bbe:	f8d6 c000 	ldr.w	ip, [r6]
90017bc2:	f9b3 a000 	ldrsh.w	sl, [r3]
90017bc6:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
90017bca:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90017bce:	f8c3 c000 	str.w	ip, [r3]
90017bd2:	f8d6 c004 	ldr.w	ip, [r6, #4]
90017bd6:	f8c3 c004 	str.w	ip, [r3, #4]
90017bda:	f825 ac08 	strh.w	sl, [r5, #-8]
90017bde:	f825 ec06 	strh.w	lr, [r5, #-6]
90017be2:	f825 9c04 	strh.w	r9, [r5, #-4]
90017be6:	f825 8c02 	strh.w	r8, [r5, #-2]
90017bea:	e7c9      	b.n	90017b80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90017bec:	f8d6 e000 	ldr.w	lr, [r6]
90017bf0:	f9b0 a000 	ldrsh.w	sl, [r0]
90017bf4:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90017bf8:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
90017bfc:	f8c0 e000 	str.w	lr, [r0]
90017c00:	f8d6 e004 	ldr.w	lr, [r6, #4]
90017c04:	1a16      	subs	r6, r2, r0
90017c06:	f8c0 e004 	str.w	lr, [r0, #4]
90017c0a:	f825 ac08 	strh.w	sl, [r5, #-8]
90017c0e:	f825 cc06 	strh.w	ip, [r5, #-6]
90017c12:	f825 9c04 	strh.w	r9, [r5, #-4]
90017c16:	f825 8c02 	strh.w	r8, [r5, #-2]
90017c1a:	1acd      	subs	r5, r1, r3
90017c1c:	10ed      	asrs	r5, r5, #3
90017c1e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90017c22:	bfb5      	itete	lt
90017c24:	e9c4 0200 	strdlt	r0, r2, [r4]
90017c28:	e9c4 3100 	strdge	r3, r1, [r4]
90017c2c:	460a      	movlt	r2, r1
90017c2e:	4603      	movge	r3, r0
90017c30:	3408      	adds	r4, #8
90017c32:	4618      	mov	r0, r3
90017c34:	4611      	mov	r1, r2
90017c36:	e724      	b.n	90017a82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90017c38:	4299      	cmp	r1, r3
90017c3a:	d927      	bls.n	90017c8c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
90017c3c:	f1a3 0210 	sub.w	r2, r3, #16
90017c40:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90017c44:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90017c48:	45ac      	cmp	ip, r5
90017c4a:	db06      	blt.n	90017c5a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90017c4c:	d11c      	bne.n	90017c88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90017c4e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90017c52:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90017c56:	42ae      	cmp	r6, r5
90017c58:	da16      	bge.n	90017c88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90017c5a:	4615      	mov	r5, r2
90017c5c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90017c60:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90017c64:	3a08      	subs	r2, #8
90017c66:	f855 6f08 	ldr.w	r6, [r5, #8]!
90017c6a:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90017c6e:	6196      	str	r6, [r2, #24]
90017c70:	42a8      	cmp	r0, r5
90017c72:	686e      	ldr	r6, [r5, #4]
90017c74:	f8a2 9010 	strh.w	r9, [r2, #16]
90017c78:	61d6      	str	r6, [r2, #28]
90017c7a:	f8a2 c012 	strh.w	ip, [r2, #18]
90017c7e:	f8a2 8014 	strh.w	r8, [r2, #20]
90017c82:	f8a2 e016 	strh.w	lr, [r2, #22]
90017c86:	d1db      	bne.n	90017c40 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90017c88:	3308      	adds	r3, #8
90017c8a:	e7d5      	b.n	90017c38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90017c8c:	42bc      	cmp	r4, r7
90017c8e:	d903      	bls.n	90017c98 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90017c90:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90017c94:	3c08      	subs	r4, #8
90017c96:	e6f4      	b.n	90017a82 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90017c98:	b050      	add	sp, #320	@ 0x140
90017c9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90017c9e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90017c9e:	b510      	push	{r4, lr}
90017ca0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017ca2:	4604      	mov	r4, r0
90017ca4:	07da      	lsls	r2, r3, #31
90017ca6:	d507      	bpl.n	90017cb8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90017ca8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90017cac:	f7ff fe8c 	bl	900179c8 <_ZN8touchgfx7Outline6lineToEii>
90017cb0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90017cb2:	f023 0301 	bic.w	r3, r3, #1
90017cb6:	6243      	str	r3, [r0, #36]	@ 0x24
90017cb8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90017cba:	079b      	lsls	r3, r3, #30
90017cbc:	d521      	bpl.n	90017d02 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90017cbe:	6923      	ldr	r3, [r4, #16]
90017cc0:	88d9      	ldrh	r1, [r3, #6]
90017cc2:	889a      	ldrh	r2, [r3, #4]
90017cc4:	430a      	orrs	r2, r1
90017cc6:	d010      	beq.n	90017cea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90017cc8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017ccc:	2a00      	cmp	r2, #0
90017cce:	db0c      	blt.n	90017cea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90017cd0:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90017cd2:	428a      	cmp	r2, r1
90017cd4:	da09      	bge.n	90017cea <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90017cd6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
90017cda:	4291      	cmp	r1, r2
90017cdc:	f102 0201 	add.w	r2, r2, #1
90017ce0:	bf88      	it	hi
90017ce2:	3308      	addhi	r3, #8
90017ce4:	60a2      	str	r2, [r4, #8]
90017ce6:	bf88      	it	hi
90017ce8:	6123      	strhi	r3, [r4, #16]
90017cea:	68a1      	ldr	r1, [r4, #8]
90017cec:	b129      	cbz	r1, 90017cfa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90017cee:	6863      	ldr	r3, [r4, #4]
90017cf0:	4299      	cmp	r1, r3
90017cf2:	d802      	bhi.n	90017cfa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90017cf4:	68e0      	ldr	r0, [r4, #12]
90017cf6:	f7ff febd 	bl	90017a74 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
90017cfa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90017cfc:	f023 0302 	bic.w	r3, r3, #2
90017d00:	6263      	str	r3, [r4, #36]	@ 0x24
90017d02:	68e0      	ldr	r0, [r4, #12]
90017d04:	bd10      	pop	{r4, pc}
	...

90017d08 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90017d08:	4b02      	ldr	r3, [pc, #8]	@ (90017d14 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
90017d0a:	6018      	str	r0, [r3, #0]
90017d0c:	4b02      	ldr	r3, [pc, #8]	@ (90017d18 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
90017d0e:	6019      	str	r1, [r3, #0]
90017d10:	4770      	bx	lr
90017d12:	bf00      	nop
90017d14:	240245a0 	.word	0x240245a0
90017d18:	240245a4 	.word	0x240245a4

90017d1c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
90017d1c:	2300      	movs	r3, #0
90017d1e:	4a02      	ldr	r2, [pc, #8]	@ (90017d28 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90017d20:	6013      	str	r3, [r2, #0]
90017d22:	4a02      	ldr	r2, [pc, #8]	@ (90017d2c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90017d24:	6013      	str	r3, [r2, #0]
90017d26:	4770      	bx	lr
90017d28:	240245a0 	.word	0x240245a0
90017d2c:	240245a4 	.word	0x240245a4

90017d30 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90017d30:	4b01      	ldr	r3, [pc, #4]	@ (90017d38 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90017d32:	6818      	ldr	r0, [r3, #0]
90017d34:	4770      	bx	lr
90017d36:	bf00      	nop
90017d38:	240245a0 	.word	0x240245a0

90017d3c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
90017d3c:	4b01      	ldr	r3, [pc, #4]	@ (90017d44 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
90017d3e:	6818      	ldr	r0, [r3, #0]
90017d40:	4770      	bx	lr
90017d42:	bf00      	nop
90017d44:	240245a4 	.word	0x240245a4

90017d48 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90017d48:	b510      	push	{r4, lr}
90017d4a:	6803      	ldr	r3, [r0, #0]
90017d4c:	460c      	mov	r4, r1
90017d4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90017d50:	4798      	blx	r3
90017d52:	1b03      	subs	r3, r0, r4
90017d54:	4258      	negs	r0, r3
90017d56:	4158      	adcs	r0, r3
90017d58:	bd10      	pop	{r4, pc}
	...

90017d5c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
90017d5c:	4b01      	ldr	r3, [pc, #4]	@ (90017d64 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
90017d5e:	6019      	str	r1, [r3, #0]
90017d60:	4770      	bx	lr
90017d62:	bf00      	nop
90017d64:	240245a8 	.word	0x240245a8

90017d68 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90017d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017d6c:	4696      	mov	lr, r2
90017d6e:	b097      	sub	sp, #92	@ 0x5c
90017d70:	4605      	mov	r5, r0
90017d72:	4614      	mov	r4, r2
90017d74:	460e      	mov	r6, r1
90017d76:	461f      	mov	r7, r3
90017d78:	f10d 0c1c 	add.w	ip, sp, #28
90017d7c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
90017d80:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
90017d84:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90017d88:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017d8c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017d90:	f8de 3000 	ldr.w	r3, [lr]
90017d94:	f104 0e14 	add.w	lr, r4, #20
90017d98:	f8cc 3000 	str.w	r3, [ip]
90017d9c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90017da0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017da4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017da8:	f8de 3000 	ldr.w	r3, [lr]
90017dac:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90017db0:	f8cc 3000 	str.w	r3, [ip]
90017db4:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90017db8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017dbc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017dc0:	f8de 3000 	ldr.w	r3, [lr]
90017dc4:	4631      	mov	r1, r6
90017dc6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90017dc8:	4628      	mov	r0, r5
90017dca:	f8cc 3000 	str.w	r3, [ip]
90017dce:	682b      	ldr	r3, [r5, #0]
90017dd0:	9201      	str	r2, [sp, #4]
90017dd2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90017dd4:	f8cd 8008 	str.w	r8, [sp, #8]
90017dd8:	9200      	str	r2, [sp, #0]
90017dda:	aa07      	add	r2, sp, #28
90017ddc:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90017de0:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90017de4:	463b      	mov	r3, r7
90017de6:	47d8      	blx	fp
90017de8:	46a6      	mov	lr, r4
90017dea:	f10d 0c1c 	add.w	ip, sp, #28
90017dee:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017df2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017df6:	f8de 3000 	ldr.w	r3, [lr]
90017dfa:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
90017dfe:	343c      	adds	r4, #60	@ 0x3c
90017e00:	f8cc 3000 	str.w	r3, [ip]
90017e04:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90017e08:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90017e0c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017e10:	f8de 3000 	ldr.w	r3, [lr]
90017e14:	f8cc 3000 	str.w	r3, [ip]
90017e18:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90017e1c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90017e1e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90017e22:	6823      	ldr	r3, [r4, #0]
90017e24:	4631      	mov	r1, r6
90017e26:	4628      	mov	r0, r5
90017e28:	f8cc 3000 	str.w	r3, [ip]
90017e2c:	682b      	ldr	r3, [r5, #0]
90017e2e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90017e32:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90017e34:	f8cd 8008 	str.w	r8, [sp, #8]
90017e38:	9201      	str	r2, [sp, #4]
90017e3a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90017e3c:	9200      	str	r2, [sp, #0]
90017e3e:	aa07      	add	r2, sp, #28
90017e40:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90017e42:	463b      	mov	r3, r7
90017e44:	47a0      	blx	r4
90017e46:	b017      	add	sp, #92	@ 0x5c
90017e48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90017e4c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
90017e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017e50:	b08d      	sub	sp, #52	@ 0x34
90017e52:	4688      	mov	r8, r1
90017e54:	f8d3 c000 	ldr.w	ip, [r3]
90017e58:	9916      	ldr	r1, [sp, #88]	@ 0x58
90017e5a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
90017e5e:	680f      	ldr	r7, [r1, #0]
90017e60:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
90017e64:	eba7 070c 	sub.w	r7, r7, ip
90017e68:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
90017e6c:	edd3 6a07 	vldr	s13, [r3, #28]
90017e70:	42bc      	cmp	r4, r7
90017e72:	9918      	ldr	r1, [sp, #96]	@ 0x60
90017e74:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90017e78:	bfa8      	it	ge
90017e7a:	463c      	movge	r4, r7
90017e7c:	f9b1 9000 	ldrsh.w	r9, [r1]
90017e80:	f9ba 1000 	ldrsh.w	r1, [sl]
90017e84:	ee07 4a90 	vmov	s15, r4
90017e88:	eb09 0e0c 	add.w	lr, r9, ip
90017e8c:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
90017e90:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90017e94:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90017e98:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90017e9c:	4571      	cmp	r1, lr
90017e9e:	ee25 4a04 	vmul.f32	s8, s10, s8
90017ea2:	ee65 4a24 	vmul.f32	s9, s10, s9
90017ea6:	ee25 5a27 	vmul.f32	s10, s10, s15
90017eaa:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
90017eae:	ee71 0aa4 	vadd.f32	s1, s3, s9
90017eb2:	ee32 1a05 	vadd.f32	s2, s4, s10
90017eb6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90017eba:	ee36 0a84 	vadd.f32	s0, s13, s8
90017ebe:	ee61 1a87 	vmul.f32	s3, s3, s14
90017ec2:	ee22 2a07 	vmul.f32	s4, s4, s14
90017ec6:	f340 808c 	ble.w	90017fe2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90017eca:	eba1 060e 	sub.w	r6, r1, lr
90017ece:	fb96 f5f4 	sdiv	r5, r6, r4
90017ed2:	ee07 5a10 	vmov	s14, r5
90017ed6:	2d00      	cmp	r5, #0
90017ed8:	fb04 6615 	mls	r6, r4, r5, r6
90017edc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017ee0:	eea7 0a04 	vfma.f32	s0, s14, s8
90017ee4:	eee7 0a24 	vfma.f32	s1, s14, s9
90017ee8:	eea7 1a05 	vfma.f32	s2, s14, s10
90017eec:	dd12      	ble.n	90017f14 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
90017eee:	ee70 6a44 	vsub.f32	s13, s0, s8
90017ef2:	ee70 1ae4 	vsub.f32	s3, s1, s9
90017ef6:	ee31 2a45 	vsub.f32	s4, s2, s10
90017efa:	eef5 6a40 	vcmp.f32	s13, #0.0
90017efe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017f02:	bf14      	ite	ne
90017f04:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90017f08:	eeb0 7a67 	vmoveq.f32	s14, s15
90017f0c:	ee61 1a87 	vmul.f32	s3, s3, s14
90017f10:	ee22 2a07 	vmul.f32	s4, s4, s14
90017f14:	fb05 f204 	mul.w	r2, r5, r4
90017f18:	1abf      	subs	r7, r7, r2
90017f1a:	4494      	add	ip, r2
90017f1c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90017f20:	4411      	add	r1, r2
90017f22:	eb09 020c 	add.w	r2, r9, ip
90017f26:	b209      	sxth	r1, r1
90017f28:	443a      	add	r2, r7
90017f2a:	428a      	cmp	r2, r1
90017f2c:	bfc4      	itt	gt
90017f2e:	eba1 0209 	subgt.w	r2, r1, r9
90017f32:	eba2 070c 	subgt.w	r7, r2, ip
90017f36:	2f00      	cmp	r7, #0
90017f38:	dd50      	ble.n	90017fdc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
90017f3a:	fb97 f1f4 	sdiv	r1, r7, r4
90017f3e:	fb04 7211 	mls	r2, r4, r1, r7
90017f42:	b90a      	cbnz	r2, 90017f48 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90017f44:	3901      	subs	r1, #1
90017f46:	4622      	mov	r2, r4
90017f48:	eec7 3a80 	vdiv.f32	s7, s15, s0
90017f4c:	6840      	ldr	r0, [r0, #4]
90017f4e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
90017f52:	44b6      	add	lr, r6
90017f54:	f8d0 a000 	ldr.w	sl, [r0]
90017f58:	2900      	cmp	r1, #0
90017f5a:	bfcc      	ite	gt
90017f5c:	46a1      	movgt	r9, r4
90017f5e:	4691      	movle	r9, r2
90017f60:	900b      	str	r0, [sp, #44]	@ 0x2c
90017f62:	9817      	ldr	r0, [sp, #92]	@ 0x5c
90017f64:	fb04 e505 	mla	r5, r4, r5, lr
90017f68:	eef0 6a42 	vmov.f32	s13, s4
90017f6c:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
90017f70:	9008      	str	r0, [sp, #32]
90017f72:	eeb0 7a61 	vmov.f32	s14, s3
90017f76:	9818      	ldr	r0, [sp, #96]	@ 0x60
90017f78:	695b      	ldr	r3, [r3, #20]
90017f7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90017f7e:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90017f82:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90017f86:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90017f88:	445b      	add	r3, fp
90017f8a:	9307      	str	r3, [sp, #28]
90017f8c:	ee16 3a90 	vmov	r3, s13
90017f90:	e9cd 8505 	strd	r8, r5, [sp, #20]
90017f94:	ee60 2aa3 	vmul.f32	s5, s1, s7
90017f98:	ee21 3a23 	vmul.f32	s6, s2, s7
90017f9c:	ee72 7ae1 	vsub.f32	s15, s5, s3
90017fa0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90017fa4:	ee17 7a90 	vmov	r7, s15
90017fa8:	ee73 7a42 	vsub.f32	s15, s6, s4
90017fac:	fb97 f7f4 	sdiv	r7, r7, r4
90017fb0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90017fb4:	ee17 ca90 	vmov	ip, s15
90017fb8:	fb9c fcf4 	sdiv	ip, ip, r4
90017fbc:	fb0c 3306 	mla	r3, ip, r6, r3
90017fc0:	9302      	str	r3, [sp, #8]
90017fc2:	ee17 3a10 	vmov	r3, s14
90017fc6:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90017fca:	fb07 3706 	mla	r7, r7, r6, r3
90017fce:	eba9 0306 	sub.w	r3, r9, r6
90017fd2:	e9cd 4700 	strd	r4, r7, [sp]
90017fd6:	f8da 4008 	ldr.w	r4, [sl, #8]
90017fda:	47a0      	blx	r4
90017fdc:	b00d      	add	sp, #52	@ 0x34
90017fde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017fe2:	2500      	movs	r5, #0
90017fe4:	462e      	mov	r6, r5
90017fe6:	e799      	b.n	90017f1c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90017fe8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90017fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017fec:	b0db      	sub	sp, #364	@ 0x16c
90017fee:	461d      	mov	r5, r3
90017ff0:	4614      	mov	r4, r2
90017ff2:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90017ff6:	910f      	str	r1, [sp, #60]	@ 0x3c
90017ff8:	4629      	mov	r1, r5
90017ffa:	930a      	str	r3, [sp, #40]	@ 0x28
90017ffc:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90018000:	9009      	str	r0, [sp, #36]	@ 0x24
90018002:	930b      	str	r3, [sp, #44]	@ 0x2c
90018004:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90018008:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
9001800c:	9310      	str	r3, [sp, #64]	@ 0x40
9001800e:	6803      	ldr	r3, [r0, #0]
90018010:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90018012:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90018016:	47b8      	blx	r7
90018018:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001801a:	6058      	str	r0, [r3, #4]
9001801c:	2800      	cmp	r0, #0
9001801e:	f000 83a1 	beq.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018022:	682b      	ldr	r3, [r5, #0]
90018024:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90018028:	ed94 7a02 	vldr	s14, [r4, #8]
9001802c:	9314      	str	r3, [sp, #80]	@ 0x50
9001802e:	686b      	ldr	r3, [r5, #4]
90018030:	eeb4 7ae7 	vcmpe.f32	s14, s15
90018034:	9315      	str	r3, [sp, #84]	@ 0x54
90018036:	4bc1      	ldr	r3, [pc, #772]	@ (9001833c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90018038:	7819      	ldrb	r1, [r3, #0]
9001803a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
9001803e:	2900      	cmp	r1, #0
90018040:	bf16      	itet	ne
90018042:	4619      	movne	r1, r3
90018044:	4611      	moveq	r1, r2
90018046:	4613      	movne	r3, r2
90018048:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001804c:	9116      	str	r1, [sp, #88]	@ 0x58
9001804e:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90018052:	f240 8387 	bls.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018056:	ed94 7a07 	vldr	s14, [r4, #28]
9001805a:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001805e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018062:	f240 837f 	bls.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018066:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
9001806a:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001806e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90018072:	f240 8377 	bls.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018076:	6822      	ldr	r2, [r4, #0]
90018078:	4bb1      	ldr	r3, [pc, #708]	@ (90018340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
9001807a:	429a      	cmp	r2, r3
9001807c:	f2c0 8372 	blt.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018080:	49b0      	ldr	r1, [pc, #704]	@ (90018344 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90018082:	6963      	ldr	r3, [r4, #20]
90018084:	428a      	cmp	r2, r1
90018086:	f300 836d 	bgt.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001808a:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
9001808e:	48ae      	ldr	r0, [pc, #696]	@ (90018348 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90018090:	33ff      	adds	r3, #255	@ 0xff
90018092:	4283      	cmp	r3, r0
90018094:	f200 8366 	bhi.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90018098:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9001809a:	4dac      	ldr	r5, [pc, #688]	@ (9001834c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
9001809c:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
900180a0:	33ff      	adds	r3, #255	@ 0xff
900180a2:	42ab      	cmp	r3, r5
900180a4:	f200 835e 	bhi.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180a8:	6862      	ldr	r2, [r4, #4]
900180aa:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
900180ae:	33ff      	adds	r3, #255	@ 0xff
900180b0:	4283      	cmp	r3, r0
900180b2:	f200 8357 	bhi.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180b6:	69a1      	ldr	r1, [r4, #24]
900180b8:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
900180bc:	33ff      	adds	r3, #255	@ 0xff
900180be:	4283      	cmp	r3, r0
900180c0:	f200 8350 	bhi.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180c4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900180c6:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
900180ca:	30ff      	adds	r0, #255	@ 0xff
900180cc:	42a8      	cmp	r0, r5
900180ce:	f200 8349 	bhi.w	90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900180d2:	428a      	cmp	r2, r1
900180d4:	f280 8110 	bge.w	900182f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
900180d8:	429a      	cmp	r2, r3
900180da:	f300 8119 	bgt.w	90018310 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
900180de:	4299      	cmp	r1, r3
900180e0:	f280 811d 	bge.w	9001831e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
900180e4:	2502      	movs	r5, #2
900180e6:	2701      	movs	r7, #1
900180e8:	46a9      	mov	r9, r5
900180ea:	46b8      	mov	r8, r7
900180ec:	f04f 0a00 	mov.w	sl, #0
900180f0:	4621      	mov	r1, r4
900180f2:	a849      	add	r0, sp, #292	@ 0x124
900180f4:	f004 f894 	bl	9001c220 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
900180f8:	4622      	mov	r2, r4
900180fa:	4653      	mov	r3, sl
900180fc:	a949      	add	r1, sp, #292	@ 0x124
900180fe:	f8cd 9000 	str.w	r9, [sp]
90018102:	a819      	add	r0, sp, #100	@ 0x64
90018104:	f004 f9bc 	bl	9001c480 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90018108:	4622      	mov	r2, r4
9001810a:	4653      	mov	r3, sl
9001810c:	a949      	add	r1, sp, #292	@ 0x124
9001810e:	f8cd 8000 	str.w	r8, [sp]
90018112:	a829      	add	r0, sp, #164	@ 0xa4
90018114:	f004 f9b4 	bl	9001c480 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90018118:	4643      	mov	r3, r8
9001811a:	4622      	mov	r2, r4
9001811c:	a949      	add	r1, sp, #292	@ 0x124
9001811e:	f8cd 9000 	str.w	r9, [sp]
90018122:	a839      	add	r0, sp, #228	@ 0xe4
90018124:	f004 f9ac 	bl	9001c480 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90018128:	42af      	cmp	r7, r5
9001812a:	af12      	add	r7, sp, #72	@ 0x48
9001812c:	bfb7      	itett	lt
9001812e:	2300      	movlt	r3, #0
90018130:	2301      	movge	r3, #1
90018132:	ad29      	addlt	r5, sp, #164	@ 0xa4
90018134:	ac19      	addlt	r4, sp, #100	@ 0x64
90018136:	bfb1      	iteee	lt
90018138:	930e      	strlt	r3, [sp, #56]	@ 0x38
9001813a:	ad19      	addge	r5, sp, #100	@ 0x64
9001813c:	930e      	strge	r3, [sp, #56]	@ 0x38
9001813e:	ac29      	addge	r4, sp, #164	@ 0xa4
90018140:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90018142:	e893 0003 	ldmia.w	r3, {r0, r1}
90018146:	e887 0003 	stmia.w	r7, {r0, r1}
9001814a:	b928      	cbnz	r0, 90018158 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
9001814c:	4b80      	ldr	r3, [pc, #512]	@ (90018350 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
9001814e:	6818      	ldr	r0, [r3, #0]
90018150:	6803      	ldr	r3, [r0, #0]
90018152:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90018154:	4798      	blx	r3
90018156:	6038      	str	r0, [r7, #0]
90018158:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001815a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001815e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90018162:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90018164:	930c      	str	r3, [sp, #48]	@ 0x30
90018166:	990c      	ldr	r1, [sp, #48]	@ 0x30
90018168:	6963      	ldr	r3, [r4, #20]
9001816a:	440b      	add	r3, r1
9001816c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90018170:	4408      	add	r0, r1
90018172:	b200      	sxth	r0, r0
90018174:	4283      	cmp	r3, r0
90018176:	900d      	str	r0, [sp, #52]	@ 0x34
90018178:	f280 80dd 	bge.w	90018336 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
9001817c:	428b      	cmp	r3, r1
9001817e:	da08      	bge.n	90018192 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90018180:	2a00      	cmp	r2, #0
90018182:	dd06      	ble.n	90018192 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90018184:	1acb      	subs	r3, r1, r3
90018186:	429a      	cmp	r2, r3
90018188:	f2c0 80e4 	blt.w	90018354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
9001818c:	2b00      	cmp	r3, #0
9001818e:	f300 80e2 	bgt.w	90018356 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90018192:	6967      	ldr	r7, [r4, #20]
90018194:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90018198:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001819a:	443b      	add	r3, r7
9001819c:	461f      	mov	r7, r3
9001819e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900181a0:	1bdf      	subs	r7, r3, r7
900181a2:	4297      	cmp	r7, r2
900181a4:	bfa8      	it	ge
900181a6:	4617      	movge	r7, r2
900181a8:	2f00      	cmp	r7, #0
900181aa:	f340 8166 	ble.w	9001847a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
900181ae:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900181b0:	6829      	ldr	r1, [r5, #0]
900181b2:	f9b3 2000 	ldrsh.w	r2, [r3]
900181b6:	f9bb 3000 	ldrsh.w	r3, [fp]
900181ba:	4411      	add	r1, r2
900181bc:	6820      	ldr	r0, [r4, #0]
900181be:	4299      	cmp	r1, r3
900181c0:	dd1a      	ble.n	900181f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900181c2:	f8bb 1004 	ldrh.w	r1, [fp, #4]
900181c6:	4402      	add	r2, r0
900181c8:	440b      	add	r3, r1
900181ca:	b21b      	sxth	r3, r3
900181cc:	429a      	cmp	r2, r3
900181ce:	dc13      	bgt.n	900181f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900181d0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900181d2:	a912      	add	r1, sp, #72	@ 0x48
900181d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900181d6:	9809      	ldr	r0, [sp, #36]	@ 0x24
900181d8:	681b      	ldr	r3, [r3, #0]
900181da:	9206      	str	r2, [sp, #24]
900181dc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900181de:	9500      	str	r5, [sp, #0]
900181e0:	9205      	str	r2, [sp, #20]
900181e2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900181e4:	e9cd b203 	strd	fp, r2, [sp, #12]
900181e8:	9a64      	ldr	r2, [sp, #400]	@ 0x190
900181ea:	e9cd 8201 	strd	r8, r2, [sp, #4]
900181ee:	aa49      	add	r2, sp, #292	@ 0x124
900181f0:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
900181f4:	4623      	mov	r3, r4
900181f6:	47c8      	blx	r9
900181f8:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
900181fc:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90018200:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90018204:	ee37 7a27 	vadd.f32	s14, s14, s15
90018208:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
9001820c:	68a1      	ldr	r1, [r4, #8]
9001820e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90018212:	ed94 6a08 	vldr	s12, [r4, #32]
90018216:	edd4 6a07 	vldr	s13, [r4, #28]
9001821a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
9001821e:	ee76 6a86 	vadd.f32	s13, s13, s12
90018222:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90018226:	e9d4 2300 	ldrd	r2, r3, [r4]
9001822a:	edc4 6a07 	vstr	s13, [r4, #28]
9001822e:	441a      	add	r2, r3
90018230:	6963      	ldr	r3, [r4, #20]
90018232:	3301      	adds	r3, #1
90018234:	6022      	str	r2, [r4, #0]
90018236:	6163      	str	r3, [r4, #20]
90018238:	69a3      	ldr	r3, [r4, #24]
9001823a:	3b01      	subs	r3, #1
9001823c:	61a3      	str	r3, [r4, #24]
9001823e:	6923      	ldr	r3, [r4, #16]
90018240:	440b      	add	r3, r1
90018242:	68e1      	ldr	r1, [r4, #12]
90018244:	428b      	cmp	r3, r1
90018246:	6123      	str	r3, [r4, #16]
90018248:	db15      	blt.n	90018276 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
9001824a:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
9001824e:	3201      	adds	r2, #1
90018250:	1a5b      	subs	r3, r3, r1
90018252:	ee76 6a26 	vadd.f32	s13, s12, s13
90018256:	6022      	str	r2, [r4, #0]
90018258:	6123      	str	r3, [r4, #16]
9001825a:	edc4 6a07 	vstr	s13, [r4, #28]
9001825e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90018262:	ee36 7a87 	vadd.f32	s14, s13, s14
90018266:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
9001826a:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
9001826e:	ee77 7a27 	vadd.f32	s15, s14, s15
90018272:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90018276:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
9001827a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
9001827e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90018282:	ee37 7a27 	vadd.f32	s14, s14, s15
90018286:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
9001828a:	68a9      	ldr	r1, [r5, #8]
9001828c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90018290:	ed95 6a08 	vldr	s12, [r5, #32]
90018294:	edd5 6a07 	vldr	s13, [r5, #28]
90018298:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
9001829c:	ee76 6a86 	vadd.f32	s13, s13, s12
900182a0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900182a4:	e9d5 2300 	ldrd	r2, r3, [r5]
900182a8:	edc5 6a07 	vstr	s13, [r5, #28]
900182ac:	441a      	add	r2, r3
900182ae:	696b      	ldr	r3, [r5, #20]
900182b0:	3301      	adds	r3, #1
900182b2:	602a      	str	r2, [r5, #0]
900182b4:	616b      	str	r3, [r5, #20]
900182b6:	69ab      	ldr	r3, [r5, #24]
900182b8:	3b01      	subs	r3, #1
900182ba:	61ab      	str	r3, [r5, #24]
900182bc:	692b      	ldr	r3, [r5, #16]
900182be:	440b      	add	r3, r1
900182c0:	68e9      	ldr	r1, [r5, #12]
900182c2:	428b      	cmp	r3, r1
900182c4:	612b      	str	r3, [r5, #16]
900182c6:	db15      	blt.n	900182f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
900182c8:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
900182cc:	3201      	adds	r2, #1
900182ce:	1a5b      	subs	r3, r3, r1
900182d0:	ee76 6a26 	vadd.f32	s13, s12, s13
900182d4:	602a      	str	r2, [r5, #0]
900182d6:	612b      	str	r3, [r5, #16]
900182d8:	edc5 6a07 	vstr	s13, [r5, #28]
900182dc:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
900182e0:	ee36 7a87 	vadd.f32	s14, s13, s14
900182e4:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900182e8:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
900182ec:	ee77 7a27 	vadd.f32	s15, s14, s15
900182f0:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900182f4:	3f01      	subs	r7, #1
900182f6:	e757      	b.n	900181a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
900182f8:	4299      	cmp	r1, r3
900182fa:	dc13      	bgt.n	90018324 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
900182fc:	429a      	cmp	r2, r3
900182fe:	da14      	bge.n	9001832a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90018300:	2502      	movs	r5, #2
90018302:	2703      	movs	r7, #3
90018304:	f04f 0800 	mov.w	r8, #0
90018308:	46a9      	mov	r9, r5
9001830a:	f04f 0a01 	mov.w	sl, #1
9001830e:	e6ef      	b.n	900180f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90018310:	2501      	movs	r5, #1
90018312:	2700      	movs	r7, #0
90018314:	46a9      	mov	r9, r5
90018316:	46b8      	mov	r8, r7
90018318:	f04f 0a02 	mov.w	sl, #2
9001831c:	e6e8      	b.n	900180f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9001831e:	2501      	movs	r5, #1
90018320:	2702      	movs	r7, #2
90018322:	e6e1      	b.n	900180e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90018324:	2500      	movs	r5, #0
90018326:	2701      	movs	r7, #1
90018328:	e7f4      	b.n	90018314 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
9001832a:	2702      	movs	r7, #2
9001832c:	2503      	movs	r5, #3
9001832e:	f04f 0900 	mov.w	r9, #0
90018332:	46b8      	mov	r8, r7
90018334:	e7e9      	b.n	9001830a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90018336:	4613      	mov	r3, r2
90018338:	e728      	b.n	9001818c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
9001833a:	bf00      	nop
9001833c:	2402458e 	.word	0x2402458e
90018340:	fffd8f01 	.word	0xfffd8f01
90018344:	00027100 	.word	0x00027100
90018348:	0004e1ff 	.word	0x0004e1ff
9001834c:	0004e1fe 	.word	0x0004e1fe
90018350:	24024598 	.word	0x24024598
90018354:	4613      	mov	r3, r2
90018356:	992b      	ldr	r1, [sp, #172]	@ 0xac
90018358:	469e      	mov	lr, r3
9001835a:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
9001835c:	469c      	mov	ip, r3
9001835e:	9111      	str	r1, [sp, #68]	@ 0x44
90018360:	f04f 0900 	mov.w	r9, #0
90018364:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90018368:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
9001836c:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90018370:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90018374:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90018378:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
9001837c:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90018380:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90018384:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90018388:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
9001838c:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90018390:	f1bc 0f00 	cmp.w	ip, #0
90018394:	d147      	bne.n	90018426 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90018396:	eb03 0c07 	add.w	ip, r3, r7
9001839a:	1ad7      	subs	r7, r2, r3
9001839c:	f1b9 0f00 	cmp.w	r9, #0
900183a0:	d009      	beq.n	900183b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
900183a2:	9029      	str	r0, [sp, #164]	@ 0xa4
900183a4:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
900183a8:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
900183ac:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
900183b0:	912d      	str	r1, [sp, #180]	@ 0xb4
900183b2:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
900183b6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
900183b8:	f04f 0800 	mov.w	r8, #0
900183bc:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
900183c0:	9111      	str	r1, [sp, #68]	@ 0x44
900183c2:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900183c6:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900183ca:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900183ce:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900183d2:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900183d6:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900183da:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900183de:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900183e2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
900183e6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
900183ea:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
900183ee:	f1be 0f00 	cmp.w	lr, #0
900183f2:	d031      	beq.n	90018458 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
900183f4:	9e11      	ldr	r6, [sp, #68]	@ 0x44
900183f6:	4450      	add	r0, sl
900183f8:	ee76 6aa4 	vadd.f32	s13, s13, s9
900183fc:	4431      	add	r1, r6
900183fe:	ee37 7a04 	vadd.f32	s14, s14, s8
90018402:	ee77 7aa3 	vadd.f32	s15, s15, s7
90018406:	4549      	cmp	r1, r9
90018408:	db08      	blt.n	9001841c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
9001840a:	ee77 7a85 	vadd.f32	s15, s15, s10
9001840e:	3001      	adds	r0, #1
90018410:	ee76 6aa5 	vadd.f32	s13, s13, s11
90018414:	eba1 0109 	sub.w	r1, r1, r9
90018418:	ee37 7a06 	vadd.f32	s14, s14, s12
9001841c:	f10e 3eff 	add.w	lr, lr, #4294967295
90018420:	f04f 0801 	mov.w	r8, #1
90018424:	e7e3      	b.n	900183ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90018426:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90018428:	4450      	add	r0, sl
9001842a:	ee37 7a24 	vadd.f32	s14, s14, s9
9001842e:	4431      	add	r1, r6
90018430:	ee77 7a84 	vadd.f32	s15, s15, s8
90018434:	ee76 6aa3 	vadd.f32	s13, s13, s7
90018438:	4541      	cmp	r1, r8
9001843a:	db08      	blt.n	9001844e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
9001843c:	ee76 6a85 	vadd.f32	s13, s13, s10
90018440:	3001      	adds	r0, #1
90018442:	ee37 7a25 	vadd.f32	s14, s14, s11
90018446:	eba1 0108 	sub.w	r1, r1, r8
9001844a:	ee77 7a86 	vadd.f32	s15, s15, s12
9001844e:	f10c 3cff 	add.w	ip, ip, #4294967295
90018452:	f04f 0901 	mov.w	r9, #1
90018456:	e79b      	b.n	90018390 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90018458:	449c      	add	ip, r3
9001845a:	1aff      	subs	r7, r7, r3
9001845c:	f1b8 0f00 	cmp.w	r8, #0
90018460:	d009      	beq.n	90018476 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90018462:	9019      	str	r0, [sp, #100]	@ 0x64
90018464:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90018468:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
9001846c:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90018470:	911d      	str	r1, [sp, #116]	@ 0x74
90018472:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90018476:	1ad2      	subs	r2, r2, r3
90018478:	e68b      	b.n	90018192 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
9001847a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001847c:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
9001847e:	2b00      	cmp	r3, #0
90018480:	f000 80d1 	beq.w	90018626 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90018484:	ad19      	add	r5, sp, #100	@ 0x64
90018486:	ac39      	add	r4, sp, #228	@ 0xe4
90018488:	9b64      	ldr	r3, [sp, #400]	@ 0x190
9001848a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001848e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90018492:	930c      	str	r3, [sp, #48]	@ 0x30
90018494:	990c      	ldr	r1, [sp, #48]	@ 0x30
90018496:	6963      	ldr	r3, [r4, #20]
90018498:	440b      	add	r3, r1
9001849a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
9001849e:	4408      	add	r0, r1
900184a0:	b200      	sxth	r0, r0
900184a2:	4283      	cmp	r3, r0
900184a4:	900d      	str	r0, [sp, #52]	@ 0x34
900184a6:	f280 80c1 	bge.w	9001862c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
900184aa:	428b      	cmp	r3, r1
900184ac:	da08      	bge.n	900184c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900184ae:	2a00      	cmp	r2, #0
900184b0:	dd06      	ble.n	900184c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900184b2:	1acb      	subs	r3, r1, r3
900184b4:	429a      	cmp	r2, r3
900184b6:	f2c0 80bb 	blt.w	90018630 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
900184ba:	2b00      	cmp	r3, #0
900184bc:	f300 80b9 	bgt.w	90018632 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
900184c0:	6967      	ldr	r7, [r4, #20]
900184c2:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
900184c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900184c8:	443b      	add	r3, r7
900184ca:	461f      	mov	r7, r3
900184cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900184ce:	1bdf      	subs	r7, r3, r7
900184d0:	4297      	cmp	r7, r2
900184d2:	bfa8      	it	ge
900184d4:	4617      	movge	r7, r2
900184d6:	2f00      	cmp	r7, #0
900184d8:	f340 813c 	ble.w	90018754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
900184dc:	9b64      	ldr	r3, [sp, #400]	@ 0x190
900184de:	6829      	ldr	r1, [r5, #0]
900184e0:	f9b3 2000 	ldrsh.w	r2, [r3]
900184e4:	f9bb 3000 	ldrsh.w	r3, [fp]
900184e8:	4411      	add	r1, r2
900184ea:	6820      	ldr	r0, [r4, #0]
900184ec:	4299      	cmp	r1, r3
900184ee:	dd1a      	ble.n	90018526 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
900184f0:	f8bb 1004 	ldrh.w	r1, [fp, #4]
900184f4:	4402      	add	r2, r0
900184f6:	440b      	add	r3, r1
900184f8:	b21b      	sxth	r3, r3
900184fa:	429a      	cmp	r2, r3
900184fc:	dc13      	bgt.n	90018526 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
900184fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90018500:	a912      	add	r1, sp, #72	@ 0x48
90018502:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018504:	9809      	ldr	r0, [sp, #36]	@ 0x24
90018506:	681b      	ldr	r3, [r3, #0]
90018508:	9206      	str	r2, [sp, #24]
9001850a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001850c:	9500      	str	r5, [sp, #0]
9001850e:	9205      	str	r2, [sp, #20]
90018510:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90018512:	e9cd b203 	strd	fp, r2, [sp, #12]
90018516:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90018518:	e9cd 8201 	strd	r8, r2, [sp, #4]
9001851c:	aa49      	add	r2, sp, #292	@ 0x124
9001851e:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90018522:	4623      	mov	r3, r4
90018524:	47c8      	blx	r9
90018526:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
9001852a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
9001852e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90018532:	ee37 7a27 	vadd.f32	s14, s14, s15
90018536:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
9001853a:	68a1      	ldr	r1, [r4, #8]
9001853c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90018540:	ed94 6a08 	vldr	s12, [r4, #32]
90018544:	edd4 6a07 	vldr	s13, [r4, #28]
90018548:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
9001854c:	ee76 6a86 	vadd.f32	s13, s13, s12
90018550:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90018554:	e9d4 2300 	ldrd	r2, r3, [r4]
90018558:	edc4 6a07 	vstr	s13, [r4, #28]
9001855c:	441a      	add	r2, r3
9001855e:	6963      	ldr	r3, [r4, #20]
90018560:	3301      	adds	r3, #1
90018562:	6022      	str	r2, [r4, #0]
90018564:	6163      	str	r3, [r4, #20]
90018566:	69a3      	ldr	r3, [r4, #24]
90018568:	3b01      	subs	r3, #1
9001856a:	61a3      	str	r3, [r4, #24]
9001856c:	6923      	ldr	r3, [r4, #16]
9001856e:	440b      	add	r3, r1
90018570:	68e1      	ldr	r1, [r4, #12]
90018572:	428b      	cmp	r3, r1
90018574:	6123      	str	r3, [r4, #16]
90018576:	db15      	blt.n	900185a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90018578:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
9001857c:	3201      	adds	r2, #1
9001857e:	1a5b      	subs	r3, r3, r1
90018580:	ee76 6a26 	vadd.f32	s13, s12, s13
90018584:	6022      	str	r2, [r4, #0]
90018586:	6123      	str	r3, [r4, #16]
90018588:	edc4 6a07 	vstr	s13, [r4, #28]
9001858c:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90018590:	ee36 7a87 	vadd.f32	s14, s13, s14
90018594:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90018598:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
9001859c:	ee77 7a27 	vadd.f32	s15, s14, s15
900185a0:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
900185a4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
900185a8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
900185ac:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
900185b0:	ee37 7a27 	vadd.f32	s14, s14, s15
900185b4:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
900185b8:	68a9      	ldr	r1, [r5, #8]
900185ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
900185be:	ed95 6a08 	vldr	s12, [r5, #32]
900185c2:	edd5 6a07 	vldr	s13, [r5, #28]
900185c6:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900185ca:	ee76 6a86 	vadd.f32	s13, s13, s12
900185ce:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900185d2:	e9d5 2300 	ldrd	r2, r3, [r5]
900185d6:	edc5 6a07 	vstr	s13, [r5, #28]
900185da:	441a      	add	r2, r3
900185dc:	696b      	ldr	r3, [r5, #20]
900185de:	3301      	adds	r3, #1
900185e0:	602a      	str	r2, [r5, #0]
900185e2:	616b      	str	r3, [r5, #20]
900185e4:	69ab      	ldr	r3, [r5, #24]
900185e6:	3b01      	subs	r3, #1
900185e8:	61ab      	str	r3, [r5, #24]
900185ea:	692b      	ldr	r3, [r5, #16]
900185ec:	440b      	add	r3, r1
900185ee:	68e9      	ldr	r1, [r5, #12]
900185f0:	428b      	cmp	r3, r1
900185f2:	612b      	str	r3, [r5, #16]
900185f4:	db15      	blt.n	90018622 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
900185f6:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
900185fa:	3201      	adds	r2, #1
900185fc:	1a5b      	subs	r3, r3, r1
900185fe:	ee76 6a26 	vadd.f32	s13, s12, s13
90018602:	602a      	str	r2, [r5, #0]
90018604:	612b      	str	r3, [r5, #16]
90018606:	edc5 6a07 	vstr	s13, [r5, #28]
9001860a:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
9001860e:	ee36 7a87 	vadd.f32	s14, s13, s14
90018612:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90018616:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
9001861a:	ee77 7a27 	vadd.f32	s15, s14, s15
9001861e:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90018622:	3f01      	subs	r7, #1
90018624:	e757      	b.n	900184d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90018626:	ad39      	add	r5, sp, #228	@ 0xe4
90018628:	ac19      	add	r4, sp, #100	@ 0x64
9001862a:	e72d      	b.n	90018488 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
9001862c:	4613      	mov	r3, r2
9001862e:	e744      	b.n	900184ba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90018630:	4613      	mov	r3, r2
90018632:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
90018634:	469e      	mov	lr, r3
90018636:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
9001863a:	461f      	mov	r7, r3
9001863c:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
90018640:	f04f 0900 	mov.w	r9, #0
90018644:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
90018648:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
9001864c:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
90018650:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
90018654:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
90018658:	993d      	ldr	r1, [sp, #244]	@ 0xf4
9001865a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
9001865e:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
90018662:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
90018666:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
9001866a:	960e      	str	r6, [sp, #56]	@ 0x38
9001866c:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
90018670:	2f00      	cmp	r7, #0
90018672:	d146      	bne.n	90018702 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90018674:	449c      	add	ip, r3
90018676:	1ad7      	subs	r7, r2, r3
90018678:	f1b9 0f00 	cmp.w	r9, #0
9001867c:	d009      	beq.n	90018692 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
9001867e:	9039      	str	r0, [sp, #228]	@ 0xe4
90018680:	913d      	str	r1, [sp, #244]	@ 0xf4
90018682:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
90018686:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
9001868a:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
9001868e:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
90018692:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90018694:	f04f 0800 	mov.w	r8, #0
90018698:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
9001869c:	910e      	str	r1, [sp, #56]	@ 0x38
9001869e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
900186a2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
900186a6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
900186aa:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
900186ae:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
900186b2:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
900186b6:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
900186ba:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
900186be:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
900186c2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
900186c6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
900186ca:	f1be 0f00 	cmp.w	lr, #0
900186ce:	d030      	beq.n	90018732 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
900186d0:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
900186d2:	4450      	add	r0, sl
900186d4:	ee76 6aa4 	vadd.f32	s13, s13, s9
900186d8:	4431      	add	r1, r6
900186da:	ee37 7a04 	vadd.f32	s14, s14, s8
900186de:	ee77 7aa3 	vadd.f32	s15, s15, s7
900186e2:	4549      	cmp	r1, r9
900186e4:	db08      	blt.n	900186f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
900186e6:	ee77 7a85 	vadd.f32	s15, s15, s10
900186ea:	3001      	adds	r0, #1
900186ec:	ee76 6aa5 	vadd.f32	s13, s13, s11
900186f0:	eba1 0109 	sub.w	r1, r1, r9
900186f4:	ee37 7a06 	vadd.f32	s14, s14, s12
900186f8:	f10e 3eff 	add.w	lr, lr, #4294967295
900186fc:	f04f 0801 	mov.w	r8, #1
90018700:	e7e3      	b.n	900186ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90018702:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90018704:	4450      	add	r0, sl
90018706:	ee37 7a24 	vadd.f32	s14, s14, s9
9001870a:	4431      	add	r1, r6
9001870c:	ee77 7a84 	vadd.f32	s15, s15, s8
90018710:	ee76 6aa3 	vadd.f32	s13, s13, s7
90018714:	4541      	cmp	r1, r8
90018716:	db08      	blt.n	9001872a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90018718:	ee76 6a85 	vadd.f32	s13, s13, s10
9001871c:	3001      	adds	r0, #1
9001871e:	ee37 7a25 	vadd.f32	s14, s14, s11
90018722:	eba1 0108 	sub.w	r1, r1, r8
90018726:	ee77 7a86 	vadd.f32	s15, s15, s12
9001872a:	3f01      	subs	r7, #1
9001872c:	f04f 0901 	mov.w	r9, #1
90018730:	e79e      	b.n	90018670 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90018732:	449c      	add	ip, r3
90018734:	1aff      	subs	r7, r7, r3
90018736:	f1b8 0f00 	cmp.w	r8, #0
9001873a:	d009      	beq.n	90018750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
9001873c:	9019      	str	r0, [sp, #100]	@ 0x64
9001873e:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90018742:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90018746:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
9001874a:	911d      	str	r1, [sp, #116]	@ 0x74
9001874c:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90018750:	1ad2      	subs	r2, r2, r3
90018752:	e6b5      	b.n	900184c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90018754:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90018756:	681b      	ldr	r3, [r3, #0]
90018758:	b923      	cbnz	r3, 90018764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001875a:	4b04      	ldr	r3, [pc, #16]	@ (9001876c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
9001875c:	6818      	ldr	r0, [r3, #0]
9001875e:	6803      	ldr	r3, [r0, #0]
90018760:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90018762:	4798      	blx	r3
90018764:	b05b      	add	sp, #364	@ 0x16c
90018766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001876a:	bf00      	nop
9001876c:	24024598 	.word	0x24024598

90018770 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90018770:	b570      	push	{r4, r5, r6, lr}
90018772:	4604      	mov	r4, r0
90018774:	2500      	movs	r5, #0
90018776:	9805      	ldr	r0, [sp, #20]
90018778:	f89d 601c 	ldrb.w	r6, [sp, #28]
9001877c:	6061      	str	r1, [r4, #4]
9001877e:	8263      	strh	r3, [r4, #18]
90018780:	f89d 1010 	ldrb.w	r1, [sp, #16]
90018784:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90018788:	8025      	strh	r5, [r4, #0]
9001878a:	7221      	strb	r1, [r4, #8]
9001878c:	7266      	strb	r6, [r4, #9]
9001878e:	60e0      	str	r0, [r4, #12]
90018790:	8222      	strh	r2, [r4, #16]
90018792:	82a3      	strh	r3, [r4, #20]
90018794:	82e5      	strh	r5, [r4, #22]
90018796:	8325      	strh	r5, [r4, #24]
90018798:	8365      	strh	r5, [r4, #26]
9001879a:	83a5      	strh	r5, [r4, #28]
9001879c:	83e5      	strh	r5, [r4, #30]
9001879e:	8425      	strh	r5, [r4, #32]
900187a0:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
900187a4:	b32e      	cbz	r6, 900187f2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900187a6:	6803      	ldr	r3, [r0, #0]
900187a8:	695b      	ldr	r3, [r3, #20]
900187aa:	4798      	blx	r3
900187ac:	4606      	mov	r6, r0
900187ae:	b300      	cbz	r0, 900187f2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900187b0:	68e0      	ldr	r0, [r4, #12]
900187b2:	4631      	mov	r1, r6
900187b4:	6803      	ldr	r3, [r0, #0]
900187b6:	68db      	ldr	r3, [r3, #12]
900187b8:	4798      	blx	r3
900187ba:	4605      	mov	r5, r0
900187bc:	b1c8      	cbz	r0, 900187f2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900187be:	7b43      	ldrb	r3, [r0, #13]
900187c0:	7a82      	ldrb	r2, [r0, #10]
900187c2:	005b      	lsls	r3, r3, #1
900187c4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900187c8:	4313      	orrs	r3, r2
900187ca:	8423      	strh	r3, [r4, #32]
900187cc:	7a63      	ldrb	r3, [r4, #9]
900187ce:	2b06      	cmp	r3, #6
900187d0:	d10f      	bne.n	900187f2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
900187d2:	68e0      	ldr	r0, [r4, #12]
900187d4:	462a      	mov	r2, r5
900187d6:	4631      	mov	r1, r6
900187d8:	6803      	ldr	r3, [r0, #0]
900187da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900187dc:	4798      	blx	r3
900187de:	7b6b      	ldrb	r3, [r5, #13]
900187e0:	005b      	lsls	r3, r3, #1
900187e2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900187e6:	7aab      	ldrb	r3, [r5, #10]
900187e8:	4313      	orrs	r3, r2
900187ea:	4418      	add	r0, r3
900187ec:	8c23      	ldrh	r3, [r4, #32]
900187ee:	4418      	add	r0, r3
900187f0:	8420      	strh	r0, [r4, #32]
900187f2:	4620      	mov	r0, r4
900187f4:	bd70      	pop	{r4, r5, r6, pc}

900187f6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
900187f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900187fa:	2400      	movs	r4, #0
900187fc:	b085      	sub	sp, #20
900187fe:	4681      	mov	r9, r0
90018800:	4688      	mov	r8, r1
90018802:	4692      	mov	sl, r2
90018804:	469b      	mov	fp, r3
90018806:	4627      	mov	r7, r4
90018808:	4625      	mov	r5, r4
9001880a:	4626      	mov	r6, r4
9001880c:	4554      	cmp	r4, sl
9001880e:	da2a      	bge.n	90018866 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90018810:	2300      	movs	r3, #0
90018812:	9303      	str	r3, [sp, #12]
90018814:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018818:	429d      	cmp	r5, r3
9001881a:	d004      	beq.n	90018826 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
9001881c:	f242 030b 	movw	r3, #8203	@ 0x200b
90018820:	429d      	cmp	r5, r3
90018822:	bf18      	it	ne
90018824:	462f      	movne	r7, r5
90018826:	ab03      	add	r3, sp, #12
90018828:	4642      	mov	r2, r8
9001882a:	4659      	mov	r1, fp
9001882c:	4648      	mov	r0, r9
9001882e:	f003 fb0d 	bl	9001be4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018832:	4605      	mov	r5, r0
90018834:	b1b8      	cbz	r0, 90018866 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90018836:	280a      	cmp	r0, #10
90018838:	d015      	beq.n	90018866 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001883a:	9a03      	ldr	r2, [sp, #12]
9001883c:	b18a      	cbz	r2, 90018862 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
9001883e:	7b50      	ldrb	r0, [r2, #13]
90018840:	4639      	mov	r1, r7
90018842:	7a93      	ldrb	r3, [r2, #10]
90018844:	0040      	lsls	r0, r0, #1
90018846:	8895      	ldrh	r5, [r2, #4]
90018848:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001884c:	4303      	orrs	r3, r0
9001884e:	4640      	mov	r0, r8
90018850:	9301      	str	r3, [sp, #4]
90018852:	f8d8 3000 	ldr.w	r3, [r8]
90018856:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018858:	4798      	blx	r3
9001885a:	9b01      	ldr	r3, [sp, #4]
9001885c:	4418      	add	r0, r3
9001885e:	4406      	add	r6, r0
90018860:	b2b6      	uxth	r6, r6
90018862:	3401      	adds	r4, #1
90018864:	e7d2      	b.n	9001880c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90018866:	4630      	mov	r0, r6
90018868:	b005      	add	sp, #20
9001886a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001886e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
9001886e:	2a02      	cmp	r2, #2
90018870:	b530      	push	{r4, r5, lr}
90018872:	d011      	beq.n	90018898 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90018874:	2a03      	cmp	r2, #3
90018876:	d01c      	beq.n	900188b2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90018878:	2a01      	cmp	r2, #1
9001887a:	d10c      	bne.n	90018896 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9001887c:	888b      	ldrh	r3, [r1, #4]
9001887e:	8801      	ldrh	r1, [r0, #0]
90018880:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90018884:	1a5b      	subs	r3, r3, r1
90018886:	8844      	ldrh	r4, [r0, #2]
90018888:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9001888c:	1a9b      	subs	r3, r3, r2
9001888e:	8004      	strh	r4, [r0, #0]
90018890:	8081      	strh	r1, [r0, #4]
90018892:	8043      	strh	r3, [r0, #2]
90018894:	80c2      	strh	r2, [r0, #6]
90018896:	bd30      	pop	{r4, r5, pc}
90018898:	88cb      	ldrh	r3, [r1, #6]
9001889a:	8842      	ldrh	r2, [r0, #2]
9001889c:	1a9b      	subs	r3, r3, r2
9001889e:	88c2      	ldrh	r2, [r0, #6]
900188a0:	1a9b      	subs	r3, r3, r2
900188a2:	888a      	ldrh	r2, [r1, #4]
900188a4:	8801      	ldrh	r1, [r0, #0]
900188a6:	8043      	strh	r3, [r0, #2]
900188a8:	1a52      	subs	r2, r2, r1
900188aa:	8881      	ldrh	r1, [r0, #4]
900188ac:	1a52      	subs	r2, r2, r1
900188ae:	8002      	strh	r2, [r0, #0]
900188b0:	e7f1      	b.n	90018896 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
900188b2:	88cb      	ldrh	r3, [r1, #6]
900188b4:	8841      	ldrh	r1, [r0, #2]
900188b6:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
900188ba:	1a5b      	subs	r3, r3, r1
900188bc:	f9b0 5000 	ldrsh.w	r5, [r0]
900188c0:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
900188c4:	1a9b      	subs	r3, r3, r2
900188c6:	8045      	strh	r5, [r0, #2]
900188c8:	8082      	strh	r2, [r0, #4]
900188ca:	8003      	strh	r3, [r0, #0]
900188cc:	80c4      	strh	r4, [r0, #6]
900188ce:	e7e2      	b.n	90018896 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

900188d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
900188d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900188d4:	b09f      	sub	sp, #124	@ 0x7c
900188d6:	920f      	str	r2, [sp, #60]	@ 0x3c
900188d8:	9312      	str	r3, [sp, #72]	@ 0x48
900188da:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900188dc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900188de:	8812      	ldrh	r2, [r2, #0]
900188e0:	889b      	ldrh	r3, [r3, #4]
900188e2:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
900188e4:	4413      	add	r3, r2
900188e6:	900e      	str	r0, [sp, #56]	@ 0x38
900188e8:	6828      	ldr	r0, [r5, #0]
900188ea:	b21b      	sxth	r3, r3
900188ec:	9117      	str	r1, [sp, #92]	@ 0x5c
900188ee:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
900188f2:	9311      	str	r3, [sp, #68]	@ 0x44
900188f4:	6803      	ldr	r3, [r0, #0]
900188f6:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
900188fa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
900188fc:	4798      	blx	r3
900188fe:	682b      	ldr	r3, [r5, #0]
90018900:	9013      	str	r0, [sp, #76]	@ 0x4c
90018902:	7b1a      	ldrb	r2, [r3, #12]
90018904:	7adb      	ldrb	r3, [r3, #11]
90018906:	9215      	str	r2, [sp, #84]	@ 0x54
90018908:	9316      	str	r3, [sp, #88]	@ 0x58
9001890a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
9001890e:	2c00      	cmp	r4, #0
90018910:	d067      	beq.n	900189e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90018912:	7c2b      	ldrb	r3, [r5, #16]
90018914:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90018916:	2b06      	cmp	r3, #6
90018918:	bf14      	ite	ne
9001891a:	2301      	movne	r3, #1
9001891c:	2302      	moveq	r3, #2
9001891e:	4413      	add	r3, r2
90018920:	f04f 0900 	mov.w	r9, #0
90018924:	9310      	str	r3, [sp, #64]	@ 0x40
90018926:	464c      	mov	r4, r9
90018928:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
9001892c:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
90018930:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90018932:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90018934:	4293      	cmp	r3, r2
90018936:	f280 808b 	bge.w	90018a50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001893a:	2300      	movs	r3, #0
9001893c:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
90018940:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
90018944:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018948:	429c      	cmp	r4, r3
9001894a:	d006      	beq.n	9001895a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
9001894c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001894e:	f242 020b 	movw	r2, #8203	@ 0x200b
90018952:	4294      	cmp	r4, r2
90018954:	bf18      	it	ne
90018956:	4623      	movne	r3, r4
90018958:	930c      	str	r3, [sp, #48]	@ 0x30
9001895a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001895c:	992d      	ldr	r1, [sp, #180]	@ 0xb4
9001895e:	682a      	ldr	r2, [r5, #0]
90018960:	428b      	cmp	r3, r1
90018962:	db40      	blt.n	900189e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90018964:	6813      	ldr	r3, [r2, #0]
90018966:	4610      	mov	r0, r2
90018968:	695b      	ldr	r3, [r3, #20]
9001896a:	4798      	blx	r3
9001896c:	4604      	mov	r4, r0
9001896e:	6828      	ldr	r0, [r5, #0]
90018970:	aa1d      	add	r2, sp, #116	@ 0x74
90018972:	4621      	mov	r1, r4
90018974:	6803      	ldr	r3, [r0, #0]
90018976:	689f      	ldr	r7, [r3, #8]
90018978:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
9001897c:	47b8      	blx	r7
9001897e:	901c      	str	r0, [sp, #112]	@ 0x70
90018980:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018984:	429c      	cmp	r4, r3
90018986:	f000 80eb 	beq.w	90018b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001898a:	f242 030b 	movw	r3, #8203	@ 0x200b
9001898e:	429c      	cmp	r4, r3
90018990:	f000 80e6 	beq.w	90018b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018994:	2c00      	cmp	r4, #0
90018996:	f000 810d 	beq.w	90018bb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001899a:	2c0a      	cmp	r4, #10
9001899c:	d05e      	beq.n	90018a5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
9001899e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900189a0:	b36a      	cbz	r2, 900189fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
900189a2:	8894      	ldrh	r4, [r2, #4]
900189a4:	f1bb 0f00 	cmp.w	fp, #0
900189a8:	d03a      	beq.n	90018a20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
900189aa:	f892 900d 	ldrb.w	r9, [r2, #13]
900189ae:	f1bb 0f01 	cmp.w	fp, #1
900189b2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900189b6:	f409 7380 	and.w	r3, r9, #256	@ 0x100
900189ba:	f892 900a 	ldrb.w	r9, [r2, #10]
900189be:	ea49 0903 	orr.w	r9, r9, r3
900189c2:	d133      	bne.n	90018a2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
900189c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900189c6:	eba6 0609 	sub.w	r6, r6, r9
900189ca:	2b00      	cmp	r3, #0
900189cc:	d14d      	bne.n	90018a6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
900189ce:	9a15      	ldr	r2, [sp, #84]	@ 0x54
900189d0:	eb09 0306 	add.w	r3, r9, r6
900189d4:	4413      	add	r3, r2
900189d6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900189d8:	f9b2 2000 	ldrsh.w	r2, [r2]
900189dc:	4293      	cmp	r3, r2
900189de:	da4e      	bge.n	90018a7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900189e0:	e036      	b.n	90018a50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900189e2:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
900189e4:	e79c      	b.n	90018920 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
900189e6:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
900189ea:	4659      	mov	r1, fp
900189ec:	982c      	ldr	r0, [sp, #176]	@ 0xb0
900189ee:	9301      	str	r3, [sp, #4]
900189f0:	ab1d      	add	r3, sp, #116	@ 0x74
900189f2:	9300      	str	r3, [sp, #0]
900189f4:	ab1c      	add	r3, sp, #112	@ 0x70
900189f6:	f003 fa72 	bl	9001bede <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
900189fa:	4604      	mov	r4, r0
900189fc:	e7c0      	b.n	90018980 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
900189fe:	6828      	ldr	r0, [r5, #0]
90018a00:	6803      	ldr	r3, [r0, #0]
90018a02:	691b      	ldr	r3, [r3, #16]
90018a04:	4798      	blx	r3
90018a06:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018a0a:	4298      	cmp	r0, r3
90018a0c:	f000 80a8 	beq.w	90018b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018a10:	f242 030b 	movw	r3, #8203	@ 0x200b
90018a14:	4298      	cmp	r0, r3
90018a16:	f000 80a3 	beq.w	90018b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018a1a:	f1bb 0f00 	cmp.w	fp, #0
90018a1e:	d100      	bne.n	90018a22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90018a20:	444e      	add	r6, r9
90018a22:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90018a24:	2a00      	cmp	r2, #0
90018a26:	d1c0      	bne.n	900189aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90018a28:	4691      	mov	r9, r2
90018a2a:	e099      	b.n	90018b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018a2c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90018a2e:	2b00      	cmp	r3, #0
90018a30:	f000 80c2 	beq.w	90018bb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90018a34:	f1bb 0f00 	cmp.w	fp, #0
90018a38:	d117      	bne.n	90018a6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
90018a3a:	6828      	ldr	r0, [r5, #0]
90018a3c:	990c      	ldr	r1, [sp, #48]	@ 0x30
90018a3e:	6803      	ldr	r3, [r0, #0]
90018a40:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018a42:	4798      	blx	r3
90018a44:	4406      	add	r6, r0
90018a46:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90018a48:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90018a4a:	1af3      	subs	r3, r6, r3
90018a4c:	4293      	cmp	r3, r2
90018a4e:	dd16      	ble.n	90018a7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90018a50:	2c00      	cmp	r4, #0
90018a52:	f000 80af 	beq.w	90018bb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90018a56:	2c0a      	cmp	r4, #10
90018a58:	f040 809d 	bne.w	90018b96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
90018a5c:	240a      	movs	r4, #10
90018a5e:	fab4 f084 	clz	r0, r4
90018a62:	0940      	lsrs	r0, r0, #5
90018a64:	b01f      	add	sp, #124	@ 0x7c
90018a66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018a6a:	6828      	ldr	r0, [r5, #0]
90018a6c:	990c      	ldr	r1, [sp, #48]	@ 0x30
90018a6e:	6803      	ldr	r3, [r0, #0]
90018a70:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018a72:	4798      	blx	r3
90018a74:	f1bb 0f01 	cmp.w	fp, #1
90018a78:	eba6 0600 	sub.w	r6, r6, r0
90018a7c:	d0a7      	beq.n	900189ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
90018a7e:	981c      	ldr	r0, [sp, #112]	@ 0x70
90018a80:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90018a82:	f990 1009 	ldrsb.w	r1, [r0, #9]
90018a86:	f9b3 8000 	ldrsh.w	r8, [r3]
90018a8a:	7b43      	ldrb	r3, [r0, #13]
90018a8c:	4431      	add	r1, r6
90018a8e:	015b      	lsls	r3, r3, #5
90018a90:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018a94:	7983      	ldrb	r3, [r0, #6]
90018a96:	4313      	orrs	r3, r2
90018a98:	440b      	add	r3, r1
90018a9a:	4543      	cmp	r3, r8
90018a9c:	db60      	blt.n	90018b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018a9e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90018aa0:	4299      	cmp	r1, r3
90018aa2:	da5d      	bge.n	90018b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018aa4:	6828      	ldr	r0, [r5, #0]
90018aa6:	45b0      	cmp	r8, r6
90018aa8:	6803      	ldr	r3, [r0, #0]
90018aaa:	bfcc      	ite	gt
90018aac:	eba8 0806 	subgt.w	r8, r8, r6
90018ab0:	f04f 0800 	movle.w	r8, #0
90018ab4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90018ab6:	bfc8      	it	gt
90018ab8:	fa1f f888 	uxthgt.w	r8, r8
90018abc:	4798      	blx	r3
90018abe:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
90018ac0:	7b53      	ldrb	r3, [r2, #13]
90018ac2:	00d9      	lsls	r1, r3, #3
90018ac4:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90018ac8:	7a11      	ldrb	r1, [r2, #8]
90018aca:	4339      	orrs	r1, r7
90018acc:	065f      	lsls	r7, r3, #25
90018ace:	9f12      	ldr	r7, [sp, #72]	@ 0x48
90018ad0:	bf48      	it	mi
90018ad2:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90018ad6:	4407      	add	r7, r0
90018ad8:	bf48      	it	mi
90018ada:	b209      	sxthmi	r1, r1
90018adc:	1a7f      	subs	r7, r7, r1
90018ade:	9929      	ldr	r1, [sp, #164]	@ 0xa4
90018ae0:	b2bf      	uxth	r7, r7
90018ae2:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90018ae6:	fa0f fa87 	sxth.w	sl, r7
90018aea:	4551      	cmp	r1, sl
90018aec:	dd3c      	ble.n	90018b68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
90018aee:	011b      	lsls	r3, r3, #4
90018af0:	79d0      	ldrb	r0, [r2, #7]
90018af2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90018af6:	4303      	orrs	r3, r0
90018af8:	449a      	add	sl, r3
90018afa:	4551      	cmp	r1, sl
90018afc:	dc30      	bgt.n	90018b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018afe:	1bcf      	subs	r7, r1, r7
90018b00:	468a      	mov	sl, r1
90018b02:	b23f      	sxth	r7, r7
90018b04:	9219      	str	r2, [sp, #100]	@ 0x64
90018b06:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90018b08:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90018b0a:	6828      	ldr	r0, [r5, #0]
90018b0c:	2a00      	cmp	r2, #0
90018b0e:	d12d      	bne.n	90018b6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90018b10:	9318      	str	r3, [sp, #96]	@ 0x60
90018b12:	b2bf      	uxth	r7, r7
90018b14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90018b16:	6819      	ldr	r1, [r3, #0]
90018b18:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
90018b1a:	6801      	ldr	r1, [r0, #0]
90018b1c:	9314      	str	r3, [sp, #80]	@ 0x50
90018b1e:	6c09      	ldr	r1, [r1, #64]	@ 0x40
90018b20:	4788      	blx	r1
90018b22:	79a9      	ldrb	r1, [r5, #6]
90018b24:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90018b26:	910b      	str	r1, [sp, #44]	@ 0x2c
90018b28:	7ba9      	ldrb	r1, [r5, #14]
90018b2a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90018b2c:	910a      	str	r1, [sp, #40]	@ 0x28
90018b2e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
90018b32:	9109      	str	r1, [sp, #36]	@ 0x24
90018b34:	68a9      	ldr	r1, [r5, #8]
90018b36:	9306      	str	r3, [sp, #24]
90018b38:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90018b3a:	9205      	str	r2, [sp, #20]
90018b3c:	9304      	str	r3, [sp, #16]
90018b3e:	f8cd a004 	str.w	sl, [sp, #4]
90018b42:	e9cd 8702 	strd	r8, r7, [sp, #8]
90018b46:	44b0      	add	r8, r6
90018b48:	9f14      	ldr	r7, [sp, #80]	@ 0x50
90018b4a:	fa0f f388 	sxth.w	r3, r8
90018b4e:	9300      	str	r3, [sp, #0]
90018b50:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90018b52:	e9cd 0107 	strd	r0, r1, [sp, #28]
90018b56:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90018b58:	681a      	ldr	r2, [r3, #0]
90018b5a:	980e      	ldr	r0, [sp, #56]	@ 0x38
90018b5c:	685b      	ldr	r3, [r3, #4]
90018b5e:	47b8      	blx	r7
90018b60:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90018b62:	3301      	adds	r3, #1
90018b64:	930d      	str	r3, [sp, #52]	@ 0x34
90018b66:	e6e3      	b.n	90018930 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90018b68:	2700      	movs	r7, #0
90018b6a:	e7cb      	b.n	90018b04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
90018b6c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90018b6e:	f8d2 c008 	ldr.w	ip, [r2, #8]
90018b72:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90018b74:	f8dc 1000 	ldr.w	r1, [ip]
90018b78:	e9cd 6204 	strd	r6, r2, [sp, #16]
90018b7c:	79aa      	ldrb	r2, [r5, #6]
90018b7e:	9203      	str	r2, [sp, #12]
90018b80:	7baa      	ldrb	r2, [r5, #14]
90018b82:	9202      	str	r2, [sp, #8]
90018b84:	68aa      	ldr	r2, [r5, #8]
90018b86:	e9cd 0200 	strd	r0, r2, [sp]
90018b8a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90018b8c:	4660      	mov	r0, ip
90018b8e:	688f      	ldr	r7, [r1, #8]
90018b90:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90018b92:	47b8      	blx	r7
90018b94:	e7e4      	b.n	90018b60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90018b96:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90018b98:	3501      	adds	r5, #1
90018b9a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90018b9c:	429d      	cmp	r5, r3
90018b9e:	f6bf af5e 	bge.w	90018a5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90018ba2:	4659      	mov	r1, fp
90018ba4:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90018ba6:	f7ec fd37 	bl	90005618 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018baa:	4604      	mov	r4, r0
90018bac:	b110      	cbz	r0, 90018bb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90018bae:	280a      	cmp	r0, #10
90018bb0:	d1f2      	bne.n	90018b98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90018bb2:	e753      	b.n	90018a5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90018bb4:	2400      	movs	r4, #0
90018bb6:	e752      	b.n	90018a5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90018bb8:	f1bb 0f00 	cmp.w	fp, #0
90018bbc:	f43f af43 	beq.w	90018a46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90018bc0:	e75d      	b.n	90018a7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90018bc2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90018bc2:	b530      	push	{r4, r5, lr}
90018bc4:	8ac4      	ldrh	r4, [r0, #22]
90018bc6:	8b45      	ldrh	r5, [r0, #26]
90018bc8:	8343      	strh	r3, [r0, #26]
90018bca:	442c      	add	r4, r5
90018bcc:	1ae4      	subs	r4, r4, r3
90018bce:	8b83      	ldrh	r3, [r0, #28]
90018bd0:	82c4      	strh	r4, [r0, #22]
90018bd2:	8b04      	ldrh	r4, [r0, #24]
90018bd4:	4422      	add	r2, r4
90018bd6:	440c      	add	r4, r1
90018bd8:	1a59      	subs	r1, r3, r1
90018bda:	83c2      	strh	r2, [r0, #30]
90018bdc:	8304      	strh	r4, [r0, #24]
90018bde:	8381      	strh	r1, [r0, #28]
90018be0:	bd30      	pop	{r4, r5, pc}

90018be2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90018be2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018be6:	4604      	mov	r4, r0
90018be8:	8a47      	ldrh	r7, [r0, #18]
90018bea:	68c0      	ldr	r0, [r0, #12]
90018bec:	b085      	sub	sp, #20
90018bee:	6803      	ldr	r3, [r0, #0]
90018bf0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018bf2:	4798      	blx	r3
90018bf4:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90018bf8:	7a63      	ldrb	r3, [r4, #9]
90018bfa:	eb06 0640 	add.w	r6, r6, r0, lsl #1
90018bfe:	3b01      	subs	r3, #1
90018c00:	42b7      	cmp	r7, r6
90018c02:	bfac      	ite	ge
90018c04:	f04f 0900 	movge.w	r9, #0
90018c08:	f04f 0901 	movlt.w	r9, #1
90018c0c:	2b05      	cmp	r3, #5
90018c0e:	d804      	bhi.n	90018c1a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90018c10:	e8df f003 	tbb	[pc, r3]
90018c14:	470f0854 	.word	0x470f0854
90018c18:	4c4c      	.short	0x4c4c
90018c1a:	2500      	movs	r5, #0
90018c1c:	46a9      	mov	r9, r5
90018c1e:	462e      	mov	r6, r5
90018c20:	462f      	mov	r7, r5
90018c22:	e00e      	b.n	90018c42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90018c24:	42b7      	cmp	r7, r6
90018c26:	f04f 0500 	mov.w	r5, #0
90018c2a:	bfb4      	ite	lt
90018c2c:	2600      	movlt	r6, #0
90018c2e:	2601      	movge	r6, #1
90018c30:	e7f6      	b.n	90018c20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90018c32:	42b7      	cmp	r7, r6
90018c34:	464d      	mov	r5, r9
90018c36:	f04f 0900 	mov.w	r9, #0
90018c3a:	bfb4      	ite	lt
90018c3c:	2600      	movlt	r6, #0
90018c3e:	2601      	movge	r6, #1
90018c40:	464f      	mov	r7, r9
90018c42:	f04f 0800 	mov.w	r8, #0
90018c46:	f8a4 8016 	strh.w	r8, [r4, #22]
90018c4a:	f8a4 8018 	strh.w	r8, [r4, #24]
90018c4e:	f8cd 8004 	str.w	r8, [sp, #4]
90018c52:	2300      	movs	r3, #0
90018c54:	9303      	str	r3, [sp, #12]
90018c56:	8823      	ldrh	r3, [r4, #0]
90018c58:	2b20      	cmp	r3, #32
90018c5a:	d033      	beq.n	90018cc4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
90018c5c:	f242 010b 	movw	r1, #8203	@ 0x200b
90018c60:	1a5a      	subs	r2, r3, r1
90018c62:	f1d2 0a00 	rsbs	sl, r2, #0
90018c66:	eb4a 0a02 	adc.w	sl, sl, r2
90018c6a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90018c6e:	4293      	cmp	r3, r2
90018c70:	d008      	beq.n	90018c84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90018c72:	428b      	cmp	r3, r1
90018c74:	9a01      	ldr	r2, [sp, #4]
90018c76:	bf0e      	itee	eq
90018c78:	f04f 0a01 	moveq.w	sl, #1
90018c7c:	461a      	movne	r2, r3
90018c7e:	f04f 0a00 	movne.w	sl, #0
90018c82:	9201      	str	r2, [sp, #4]
90018c84:	ab03      	add	r3, sp, #12
90018c86:	68e2      	ldr	r2, [r4, #12]
90018c88:	7a21      	ldrb	r1, [r4, #8]
90018c8a:	6860      	ldr	r0, [r4, #4]
90018c8c:	f003 f8de 	bl	9001be4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90018c90:	8020      	strh	r0, [r4, #0]
90018c92:	b9d8      	cbnz	r0, 90018ccc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90018c94:	8ba2      	ldrh	r2, [r4, #28]
90018c96:	2300      	movs	r3, #0
90018c98:	4611      	mov	r1, r2
90018c9a:	4620      	mov	r0, r4
90018c9c:	f7ff ff91 	bl	90018bc2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90018ca0:	e06e      	b.n	90018d80 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90018ca2:	2500      	movs	r5, #0
90018ca4:	2701      	movs	r7, #1
90018ca6:	46a9      	mov	r9, r5
90018ca8:	462e      	mov	r6, r5
90018caa:	e7ca      	b.n	90018c42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90018cac:	42b7      	cmp	r7, r6
90018cae:	f04f 0500 	mov.w	r5, #0
90018cb2:	bfb4      	ite	lt
90018cb4:	2700      	movlt	r7, #0
90018cb6:	2701      	movge	r7, #1
90018cb8:	462e      	mov	r6, r5
90018cba:	e7c2      	b.n	90018c42 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90018cbc:	2500      	movs	r5, #0
90018cbe:	2601      	movs	r6, #1
90018cc0:	46a9      	mov	r9, r5
90018cc2:	e7ad      	b.n	90018c20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90018cc4:	9301      	str	r3, [sp, #4]
90018cc6:	f04f 0a01 	mov.w	sl, #1
90018cca:	e7db      	b.n	90018c84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90018ccc:	8b63      	ldrh	r3, [r4, #26]
90018cce:	280a      	cmp	r0, #10
90018cd0:	f103 0301 	add.w	r3, r3, #1
90018cd4:	8363      	strh	r3, [r4, #26]
90018cd6:	d0dd      	beq.n	90018c94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90018cd8:	9a03      	ldr	r2, [sp, #12]
90018cda:	bb62      	cbnz	r2, 90018d36 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90018cdc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90018ce0:	4298      	cmp	r0, r3
90018ce2:	d003      	beq.n	90018cec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90018ce4:	f242 030b 	movw	r3, #8203	@ 0x200b
90018ce8:	4298      	cmp	r0, r3
90018cea:	d1b2      	bne.n	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018cec:	8823      	ldrh	r3, [r4, #0]
90018cee:	8ba1      	ldrh	r1, [r4, #28]
90018cf0:	2b20      	cmp	r3, #32
90018cf2:	d003      	beq.n	90018cfc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90018cf4:	f242 000b 	movw	r0, #8203	@ 0x200b
90018cf8:	4283      	cmp	r3, r0
90018cfa:	d131      	bne.n	90018d60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90018cfc:	f1ba 0f00 	cmp.w	sl, #0
90018d00:	bf0a      	itet	eq
90018d02:	4688      	moveq	r8, r1
90018d04:	4650      	movne	r0, sl
90018d06:	2001      	moveq	r0, #1
90018d08:	440a      	add	r2, r1
90018d0a:	8b23      	ldrh	r3, [r4, #24]
90018d0c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90018d10:	b292      	uxth	r2, r2
90018d12:	83a2      	strh	r2, [r4, #28]
90018d14:	4413      	add	r3, r2
90018d16:	f1b9 0f00 	cmp.w	r9, #0
90018d1a:	d102      	bne.n	90018d22 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
90018d1c:	2d00      	cmp	r5, #0
90018d1e:	d042      	beq.n	90018da6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90018d20:	b300      	cbz	r0, 90018d64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90018d22:	8c21      	ldrh	r1, [r4, #32]
90018d24:	4419      	add	r1, r3
90018d26:	458c      	cmp	ip, r1
90018d28:	da37      	bge.n	90018d9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90018d2a:	8ae1      	ldrh	r1, [r4, #22]
90018d2c:	2900      	cmp	r1, #0
90018d2e:	d034      	beq.n	90018d9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90018d30:	4563      	cmp	r3, ip
90018d32:	dd8e      	ble.n	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018d34:	e01d      	b.n	90018d72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90018d36:	8893      	ldrh	r3, [r2, #4]
90018d38:	9901      	ldr	r1, [sp, #4]
90018d3a:	8023      	strh	r3, [r4, #0]
90018d3c:	f892 b00d 	ldrb.w	fp, [r2, #13]
90018d40:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90018d44:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
90018d48:	f892 b00a 	ldrb.w	fp, [r2, #10]
90018d4c:	ea4b 0b00 	orr.w	fp, fp, r0
90018d50:	68e0      	ldr	r0, [r4, #12]
90018d52:	6803      	ldr	r3, [r0, #0]
90018d54:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018d56:	4798      	blx	r3
90018d58:	eb0b 0200 	add.w	r2, fp, r0
90018d5c:	b292      	uxth	r2, r2
90018d5e:	e7c5      	b.n	90018cec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90018d60:	2000      	movs	r0, #0
90018d62:	e7d1      	b.n	90018d08 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90018d64:	4563      	cmp	r3, ip
90018d66:	f77f af74 	ble.w	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018d6a:	8ae3      	ldrh	r3, [r4, #22]
90018d6c:	2b00      	cmp	r3, #0
90018d6e:	f43f af70 	beq.w	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018d72:	2301      	movs	r3, #1
90018d74:	8c22      	ldrh	r2, [r4, #32]
90018d76:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
90018d7a:	8be3      	ldrh	r3, [r4, #30]
90018d7c:	4413      	add	r3, r2
90018d7e:	83e3      	strh	r3, [r4, #30]
90018d80:	68e0      	ldr	r0, [r4, #12]
90018d82:	6803      	ldr	r3, [r0, #0]
90018d84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018d86:	4798      	blx	r3
90018d88:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90018d8c:	4418      	add	r0, r3
90018d8e:	8a63      	ldrh	r3, [r4, #18]
90018d90:	1a18      	subs	r0, r3, r0
90018d92:	8260      	strh	r0, [r4, #18]
90018d94:	b005      	add	sp, #20
90018d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018d9a:	2300      	movs	r3, #0
90018d9c:	4611      	mov	r1, r2
90018d9e:	4620      	mov	r0, r4
90018da0:	f7ff ff0f 	bl	90018bc2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90018da4:	e755      	b.n	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018da6:	4563      	cmp	r3, ip
90018da8:	dd14      	ble.n	90018dd4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90018daa:	b117      	cbz	r7, 90018db2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90018dac:	2301      	movs	r3, #1
90018dae:	460a      	mov	r2, r1
90018db0:	e772      	b.n	90018c98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90018db2:	2e00      	cmp	r6, #0
90018db4:	f43f af4d 	beq.w	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018db8:	2800      	cmp	r0, #0
90018dba:	f47f af4a 	bne.w	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018dbe:	f1ba 0f00 	cmp.w	sl, #0
90018dc2:	d002      	beq.n	90018dca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90018dc4:	2301      	movs	r3, #1
90018dc6:	4642      	mov	r2, r8
90018dc8:	e767      	b.n	90018c9a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90018dca:	8ae3      	ldrh	r3, [r4, #22]
90018dcc:	2b00      	cmp	r3, #0
90018dce:	f43f af40 	beq.w	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018dd2:	e7d5      	b.n	90018d80 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90018dd4:	2800      	cmp	r0, #0
90018dd6:	f47f af3c 	bne.w	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018dda:	f1ba 0f00 	cmp.w	sl, #0
90018dde:	f43f af38 	beq.w	90018c52 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90018de2:	2301      	movs	r3, #1
90018de4:	4642      	mov	r2, r8
90018de6:	e7da      	b.n	90018d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90018de8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90018de8:	b5f0      	push	{r4, r5, r6, r7, lr}
90018dea:	4605      	mov	r5, r0
90018dec:	b08f      	sub	sp, #60	@ 0x3c
90018dee:	4617      	mov	r7, r2
90018df0:	461c      	mov	r4, r3
90018df2:	460e      	mov	r6, r1
90018df4:	b1d1      	cbz	r1, 90018e2c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90018df6:	681b      	ldr	r3, [r3, #0]
90018df8:	4620      	mov	r0, r4
90018dfa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018dfc:	4798      	blx	r3
90018dfe:	4240      	negs	r0, r0
90018e00:	9603      	str	r6, [sp, #12]
90018e02:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90018e06:	b200      	sxth	r0, r0
90018e08:	9700      	str	r7, [sp, #0]
90018e0a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
90018e0e:	4629      	mov	r1, r5
90018e10:	e9cd 4001 	strd	r4, r0, [sp, #4]
90018e14:	2401      	movs	r4, #1
90018e16:	a805      	add	r0, sp, #20
90018e18:	f7ff fcaa 	bl	90018770 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90018e1c:	a805      	add	r0, sp, #20
90018e1e:	f7ff fee0 	bl	90018be2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90018e22:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90018e26:	b163      	cbz	r3, 90018e42 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90018e28:	3401      	adds	r4, #1
90018e2a:	e7f7      	b.n	90018e1c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
90018e2c:	2401      	movs	r4, #1
90018e2e:	f003 f8d9 	bl	9001bfe4 <_ZN8touchgfx12TextProvider11getNextCharEv>
90018e32:	280a      	cmp	r0, #10
90018e34:	4628      	mov	r0, r5
90018e36:	bf08      	it	eq
90018e38:	3401      	addeq	r4, #1
90018e3a:	f003 f8d3 	bl	9001bfe4 <_ZN8touchgfx12TextProvider11getNextCharEv>
90018e3e:	2800      	cmp	r0, #0
90018e40:	d1f7      	bne.n	90018e32 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90018e42:	b2a0      	uxth	r0, r4
90018e44:	b00f      	add	sp, #60	@ 0x3c
90018e46:	bdf0      	pop	{r4, r5, r6, r7, pc}

90018e48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90018e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018e4c:	b0e3      	sub	sp, #396	@ 0x18c
90018e4e:	461c      	mov	r4, r3
90018e50:	4683      	mov	fp, r0
90018e52:	4688      	mov	r8, r1
90018e54:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
90018e56:	2b00      	cmp	r3, #0
90018e58:	f000 8112 	beq.w	90019080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018e5c:	6823      	ldr	r3, [r4, #0]
90018e5e:	2b00      	cmp	r3, #0
90018e60:	f000 810e 	beq.w	90019080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018e64:	7ba3      	ldrb	r3, [r4, #14]
90018e66:	2b00      	cmp	r3, #0
90018e68:	f000 810a 	beq.w	90019080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018e6c:	ad0a      	add	r5, sp, #40	@ 0x28
90018e6e:	6810      	ldr	r0, [r2, #0]
90018e70:	6851      	ldr	r1, [r2, #4]
90018e72:	462b      	mov	r3, r5
90018e74:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90018e78:	c303      	stmia	r3!, {r0, r1}
90018e7a:	2100      	movs	r1, #0
90018e7c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90018e80:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90018e84:	4628      	mov	r0, r5
90018e86:	910c      	str	r1, [sp, #48]	@ 0x30
90018e88:	a90c      	add	r1, sp, #48	@ 0x30
90018e8a:	79a2      	ldrb	r2, [r4, #6]
90018e8c:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90018e90:	f7ff fced 	bl	9001886e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90018e94:	a90c      	add	r1, sp, #48	@ 0x30
90018e96:	79a2      	ldrb	r2, [r4, #6]
90018e98:	4608      	mov	r0, r1
90018e9a:	f7ff fce8 	bl	9001886e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90018e9e:	a817      	add	r0, sp, #92	@ 0x5c
90018ea0:	f002 fc8c 	bl	9001b7bc <_ZN8touchgfx12TextProviderC1Ev>
90018ea4:	6820      	ldr	r0, [r4, #0]
90018ea6:	6803      	ldr	r3, [r0, #0]
90018ea8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018eaa:	4798      	blx	r3
90018eac:	4606      	mov	r6, r0
90018eae:	6820      	ldr	r0, [r4, #0]
90018eb0:	6803      	ldr	r3, [r0, #0]
90018eb2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90018eb4:	4798      	blx	r3
90018eb6:	4633      	mov	r3, r6
90018eb8:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90018eba:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90018ebc:	9000      	str	r0, [sp, #0]
90018ebe:	a817      	add	r0, sp, #92	@ 0x5c
90018ec0:	f002 fccf 	bl	9001b862 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018ec4:	6820      	ldr	r0, [r4, #0]
90018ec6:	f894 a004 	ldrb.w	sl, [r4, #4]
90018eca:	6803      	ldr	r3, [r0, #0]
90018ecc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90018ece:	4798      	blx	r3
90018ed0:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90018ed4:	6823      	ldr	r3, [r4, #0]
90018ed6:	4607      	mov	r7, r0
90018ed8:	4406      	add	r6, r0
90018eda:	a830      	add	r0, sp, #192	@ 0xc0
90018edc:	f893 9009 	ldrb.w	r9, [r3, #9]
90018ee0:	f002 fc6c 	bl	9001b7bc <_ZN8touchgfx12TextProviderC1Ev>
90018ee4:	7c23      	ldrb	r3, [r4, #16]
90018ee6:	b17b      	cbz	r3, 90018f08 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90018ee8:	6820      	ldr	r0, [r4, #0]
90018eea:	6803      	ldr	r3, [r0, #0]
90018eec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90018eee:	4798      	blx	r3
90018ef0:	9009      	str	r0, [sp, #36]	@ 0x24
90018ef2:	6820      	ldr	r0, [r4, #0]
90018ef4:	6802      	ldr	r2, [r0, #0]
90018ef6:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90018ef8:	4790      	blx	r2
90018efa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018efc:	9000      	str	r0, [sp, #0]
90018efe:	a830      	add	r0, sp, #192	@ 0xc0
90018f00:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90018f02:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90018f04:	f002 fcad 	bl	9001b862 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90018f08:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90018f0c:	a80e      	add	r0, sp, #56	@ 0x38
90018f0e:	7be2      	ldrb	r2, [r4, #15]
90018f10:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90018f14:	1a8a      	subs	r2, r1, r2
90018f16:	7c21      	ldrb	r1, [r4, #16]
90018f18:	9103      	str	r1, [sp, #12]
90018f1a:	b292      	uxth	r2, r2
90018f1c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90018f20:	9102      	str	r1, [sp, #8]
90018f22:	6821      	ldr	r1, [r4, #0]
90018f24:	9101      	str	r1, [sp, #4]
90018f26:	7961      	ldrb	r1, [r4, #5]
90018f28:	9100      	str	r1, [sp, #0]
90018f2a:	a930      	add	r1, sp, #192	@ 0xc0
90018f2c:	f7ff fc20 	bl	90018770 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90018f30:	2e00      	cmp	r6, #0
90018f32:	dc5b      	bgt.n	90018fec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90018f34:	af17      	add	r7, sp, #92	@ 0x5c
90018f36:	f04f 0900 	mov.w	r9, #0
90018f3a:	7c23      	ldrb	r3, [r4, #16]
90018f3c:	2b00      	cmp	r3, #0
90018f3e:	f000 80b1 	beq.w	900190a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90018f42:	a80e      	add	r0, sp, #56	@ 0x38
90018f44:	f7ff fe4d 	bl	90018be2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90018f48:	f1ba 0f00 	cmp.w	sl, #0
90018f4c:	f000 80a5 	beq.w	9001909a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90018f50:	7c23      	ldrb	r3, [r4, #16]
90018f52:	2264      	movs	r2, #100	@ 0x64
90018f54:	4639      	mov	r1, r7
90018f56:	a849      	add	r0, sp, #292	@ 0x124
90018f58:	9309      	str	r3, [sp, #36]	@ 0x24
90018f5a:	f013 fcf2 	bl	9002c942 <memcpy>
90018f5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90018f60:	2b00      	cmp	r3, #0
90018f62:	f000 80a7 	beq.w	900190b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90018f66:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
90018f6a:	7922      	ldrb	r2, [r4, #4]
90018f6c:	2a01      	cmp	r2, #1
90018f6e:	f040 808a 	bne.w	90019086 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90018f72:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90018f76:	1ac0      	subs	r0, r0, r3
90018f78:	2302      	movs	r3, #2
90018f7a:	fb90 f0f3 	sdiv	r0, r0, r3
90018f7e:	b200      	sxth	r0, r0
90018f80:	7c23      	ldrb	r3, [r4, #16]
90018f82:	2b00      	cmp	r3, #0
90018f84:	f000 808b 	beq.w	9001909e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90018f88:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90018f8c:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90018f90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90018f94:	e9cd 2105 	strd	r2, r1, [sp, #20]
90018f98:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90018f9c:	2100      	movs	r1, #0
90018f9e:	4410      	add	r0, r2
90018fa0:	4642      	mov	r2, r8
90018fa2:	b200      	sxth	r0, r0
90018fa4:	e9cd 9703 	strd	r9, r7, [sp, #12]
90018fa8:	9000      	str	r0, [sp, #0]
90018faa:	4658      	mov	r0, fp
90018fac:	e9cd 5401 	strd	r5, r4, [sp, #4]
90018fb0:	f7ff fc8e 	bl	900188d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90018fb4:	2800      	cmp	r0, #0
90018fb6:	d163      	bne.n	90019080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018fb8:	b2b2      	uxth	r2, r6
90018fba:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90018fbe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90018fc2:	4413      	add	r3, r2
90018fc4:	1a8a      	subs	r2, r1, r2
90018fc6:	b21b      	sxth	r3, r3
90018fc8:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90018fcc:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90018fd0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90018fd4:	2a00      	cmp	r2, #0
90018fd6:	d153      	bne.n	90019080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018fd8:	6822      	ldr	r2, [r4, #0]
90018fda:	8869      	ldrh	r1, [r5, #2]
90018fdc:	7a12      	ldrb	r2, [r2, #8]
90018fde:	1a9b      	subs	r3, r3, r2
90018fe0:	88ea      	ldrh	r2, [r5, #6]
90018fe2:	440a      	add	r2, r1
90018fe4:	b212      	sxth	r2, r2
90018fe6:	4293      	cmp	r3, r2
90018fe8:	dda7      	ble.n	90018f3a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90018fea:	e049      	b.n	90019080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90018fec:	7c23      	ldrb	r3, [r4, #16]
90018fee:	444f      	add	r7, r9
90018ff0:	b1c3      	cbz	r3, 90019024 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90018ff2:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90018ff6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90018ffa:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90018ffe:	443b      	add	r3, r7
90019000:	4293      	cmp	r3, r2
90019002:	da97      	bge.n	90018f34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90019004:	a80e      	add	r0, sp, #56	@ 0x38
90019006:	f7ff fdec 	bl	90018be2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001900a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
9001900e:	3b01      	subs	r3, #1
90019010:	b29b      	uxth	r3, r3
90019012:	454b      	cmp	r3, r9
90019014:	9309      	str	r3, [sp, #36]	@ 0x24
90019016:	d021      	beq.n	9001905c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90019018:	7961      	ldrb	r1, [r4, #5]
9001901a:	a817      	add	r0, sp, #92	@ 0x5c
9001901c:	f7ec fafc 	bl	90005618 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90019020:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90019022:	e7f4      	b.n	9001900e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90019024:	fa1f f986 	uxth.w	r9, r6
90019028:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001902c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90019030:	443b      	add	r3, r7
90019032:	4293      	cmp	r3, r2
90019034:	f6bf af7e 	bge.w	90018f34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90019038:	a817      	add	r0, sp, #92	@ 0x5c
9001903a:	f002 ffd3 	bl	9001bfe4 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001903e:	b1f8      	cbz	r0, 90019080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90019040:	280a      	cmp	r0, #10
90019042:	d1f1      	bne.n	90019028 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90019044:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90019048:	444b      	add	r3, r9
9001904a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001904e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90019052:	eba3 0309 	sub.w	r3, r3, r9
90019056:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001905a:	e7e5      	b.n	90019028 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
9001905c:	b2b3      	uxth	r3, r6
9001905e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90019062:	441a      	add	r2, r3
90019064:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90019068:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
9001906c:	1ad3      	subs	r3, r2, r3
9001906e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90019072:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90019076:	b11b      	cbz	r3, 90019080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90019078:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
9001907c:	2b00      	cmp	r3, #0
9001907e:	d0ba      	beq.n	90018ff6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90019080:	b063      	add	sp, #396	@ 0x18c
90019082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019086:	2a02      	cmp	r2, #2
90019088:	d105      	bne.n	90019096 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
9001908a:	7be2      	ldrb	r2, [r4, #15]
9001908c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90019090:	1a80      	subs	r0, r0, r2
90019092:	1ac0      	subs	r0, r0, r3
90019094:	e773      	b.n	90018f7e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90019096:	2000      	movs	r0, #0
90019098:	e772      	b.n	90018f80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001909a:	7be0      	ldrb	r0, [r4, #15]
9001909c:	e770      	b.n	90018f80 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001909e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
900190a2:	e773      	b.n	90018f8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
900190a4:	f1ba 0f00 	cmp.w	sl, #0
900190a8:	d0f7      	beq.n	9001909a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900190aa:	2264      	movs	r2, #100	@ 0x64
900190ac:	4639      	mov	r1, r7
900190ae:	a849      	add	r0, sp, #292	@ 0x124
900190b0:	f013 fc47 	bl	9002c942 <memcpy>
900190b4:	2300      	movs	r3, #0
900190b6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
900190ba:	6821      	ldr	r1, [r4, #0]
900190bc:	a849      	add	r0, sp, #292	@ 0x124
900190be:	f7ff fb9a 	bl	900187f6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
900190c2:	b203      	sxth	r3, r0
900190c4:	e751      	b.n	90018f6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

900190c6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
900190c6:	2b03      	cmp	r3, #3
900190c8:	d818      	bhi.n	900190fc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
900190ca:	e8df f003 	tbb	[pc, r3]
900190ce:	0602      	.short	0x0602
900190d0:	130d      	.short	0x130d
900190d2:	f9b0 2000 	ldrsh.w	r2, [r0]
900190d6:	1850      	adds	r0, r2, r1
900190d8:	4770      	bx	lr
900190da:	8803      	ldrh	r3, [r0, #0]
900190dc:	8880      	ldrh	r0, [r0, #4]
900190de:	4418      	add	r0, r3
900190e0:	b200      	sxth	r0, r0
900190e2:	1a80      	subs	r0, r0, r2
900190e4:	3801      	subs	r0, #1
900190e6:	4770      	bx	lr
900190e8:	8803      	ldrh	r3, [r0, #0]
900190ea:	8880      	ldrh	r0, [r0, #4]
900190ec:	4418      	add	r0, r3
900190ee:	b200      	sxth	r0, r0
900190f0:	1a40      	subs	r0, r0, r1
900190f2:	e7f7      	b.n	900190e4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
900190f4:	f9b0 0000 	ldrsh.w	r0, [r0]
900190f8:	4410      	add	r0, r2
900190fa:	4770      	bx	lr
900190fc:	2000      	movs	r0, #0
900190fe:	4770      	bx	lr

90019100 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90019100:	2b03      	cmp	r3, #3
90019102:	d817      	bhi.n	90019134 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90019104:	e8df f003 	tbb	[pc, r3]
90019108:	10090602 	.word	0x10090602
9001910c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90019110:	1850      	adds	r0, r2, r1
90019112:	4770      	bx	lr
90019114:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90019118:	e7fa      	b.n	90019110 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
9001911a:	8843      	ldrh	r3, [r0, #2]
9001911c:	88c0      	ldrh	r0, [r0, #6]
9001911e:	4418      	add	r0, r3
90019120:	b200      	sxth	r0, r0
90019122:	1a80      	subs	r0, r0, r2
90019124:	3801      	subs	r0, #1
90019126:	4770      	bx	lr
90019128:	8843      	ldrh	r3, [r0, #2]
9001912a:	88c0      	ldrh	r0, [r0, #6]
9001912c:	4418      	add	r0, r3
9001912e:	b200      	sxth	r0, r0
90019130:	1a40      	subs	r0, r0, r1
90019132:	e7f7      	b.n	90019124 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90019134:	2000      	movs	r0, #0
90019136:	4770      	bx	lr

90019138 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90019138:	4b01      	ldr	r3, [pc, #4]	@ (90019140 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
9001913a:	2200      	movs	r2, #0
9001913c:	601a      	str	r2, [r3, #0]
9001913e:	4770      	bx	lr
90019140:	240245a8 	.word	0x240245a8

90019144 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90019144:	4603      	mov	r3, r0
90019146:	b1c8      	cbz	r0, 9001917c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90019148:	0c02      	lsrs	r2, r0, #16
9001914a:	0412      	lsls	r2, r2, #16
9001914c:	b9a2      	cbnz	r2, 90019178 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
9001914e:	0403      	lsls	r3, r0, #16
90019150:	2010      	movs	r0, #16
90019152:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90019156:	bf04      	itt	eq
90019158:	021b      	lsleq	r3, r3, #8
9001915a:	3008      	addeq	r0, #8
9001915c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90019160:	bf04      	itt	eq
90019162:	011b      	lsleq	r3, r3, #4
90019164:	3004      	addeq	r0, #4
90019166:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
9001916a:	bf04      	itt	eq
9001916c:	009b      	lsleq	r3, r3, #2
9001916e:	3002      	addeq	r0, #2
90019170:	2b00      	cmp	r3, #0
90019172:	db04      	blt.n	9001917e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90019174:	3001      	adds	r0, #1
90019176:	4770      	bx	lr
90019178:	2000      	movs	r0, #0
9001917a:	e7ea      	b.n	90019152 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
9001917c:	2020      	movs	r0, #32
9001917e:	4770      	bx	lr

90019180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90019180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019184:	b087      	sub	sp, #28
90019186:	460d      	mov	r5, r1
90019188:	4616      	mov	r6, r2
9001918a:	4698      	mov	r8, r3
9001918c:	4601      	mov	r1, r0
9001918e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90019192:	b120      	cbz	r0, 9001919e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90019194:	b11a      	cbz	r2, 9001919e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90019196:	2d1f      	cmp	r5, #31
90019198:	d801      	bhi.n	9001919e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
9001919a:	2b1f      	cmp	r3, #31
9001919c:	d904      	bls.n	900191a8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
9001919e:	2000      	movs	r0, #0
900191a0:	6038      	str	r0, [r7, #0]
900191a2:	b007      	add	sp, #28
900191a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900191a8:	b97d      	cbnz	r5, 900191ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
900191aa:	b143      	cbz	r3, 900191be <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
900191ac:	4602      	mov	r2, r0
900191ae:	462b      	mov	r3, r5
900191b0:	4641      	mov	r1, r8
900191b2:	4630      	mov	r0, r6
900191b4:	e9cd 4700 	strd	r4, r7, [sp]
900191b8:	f7ff ffe2 	bl	90019180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900191bc:	e7f1      	b.n	900191a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
900191be:	f04f 33ff 	mov.w	r3, #4294967295
900191c2:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
900191c6:	603b      	str	r3, [r7, #0]
900191c8:	e7eb      	b.n	900191a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
900191ca:	fa32 fa05 	lsrs.w	sl, r2, r5
900191ce:	d106      	bne.n	900191de <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
900191d0:	4346      	muls	r6, r0
900191d2:	fbb6 f0f4 	udiv	r0, r6, r4
900191d6:	fb04 6610 	mls	r6, r4, r0, r6
900191da:	603e      	str	r6, [r7, #0]
900191dc:	e7e1      	b.n	900191a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
900191de:	2201      	movs	r2, #1
900191e0:	fa00 fb05 	lsl.w	fp, r0, r5
900191e4:	40aa      	lsls	r2, r5
900191e6:	fbbb f9f4 	udiv	r9, fp, r4
900191ea:	3a01      	subs	r2, #1
900191ec:	fb0a f309 	mul.w	r3, sl, r9
900191f0:	fb04 b919 	mls	r9, r4, r9, fp
900191f4:	4016      	ands	r6, r2
900191f6:	9303      	str	r3, [sp, #12]
900191f8:	4630      	mov	r0, r6
900191fa:	f7ff ffa3 	bl	90019144 <_ZN8touchgfx16TouchCalibration4clzuEm>
900191fe:	462b      	mov	r3, r5
90019200:	460a      	mov	r2, r1
90019202:	4601      	mov	r1, r0
90019204:	4630      	mov	r0, r6
90019206:	e9cd 4700 	strd	r4, r7, [sp]
9001920a:	f7ff ffb9 	bl	90019180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001920e:	4606      	mov	r6, r0
90019210:	4648      	mov	r0, r9
90019212:	eb05 0108 	add.w	r1, r5, r8
90019216:	f7ff ff95 	bl	90019144 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001921a:	ab05      	add	r3, sp, #20
9001921c:	464a      	mov	r2, r9
9001921e:	e9cd 4300 	strd	r4, r3, [sp]
90019222:	4603      	mov	r3, r0
90019224:	4650      	mov	r0, sl
90019226:	f7ff ffab 	bl	90019180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001922a:	6839      	ldr	r1, [r7, #0]
9001922c:	9a05      	ldr	r2, [sp, #20]
9001922e:	9b03      	ldr	r3, [sp, #12]
90019230:	4411      	add	r1, r2
90019232:	fbb1 f2f4 	udiv	r2, r1, r4
90019236:	18d3      	adds	r3, r2, r3
90019238:	fb04 1412 	mls	r4, r4, r2, r1
9001923c:	441e      	add	r6, r3
9001923e:	603c      	str	r4, [r7, #0]
90019240:	4430      	add	r0, r6
90019242:	e7ae      	b.n	900191a2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90019244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90019244:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90019248:	b085      	sub	sp, #20
9001924a:	f1b0 0900 	subs.w	r9, r0, #0
9001924e:	461d      	mov	r5, r3
90019250:	4617      	mov	r7, r2
90019252:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90019254:	bfbb      	ittet	lt
90019256:	f1c9 0900 	rsblt	r9, r9, #0
9001925a:	f04f 36ff 	movlt.w	r6, #4294967295
9001925e:	2601      	movge	r6, #1
90019260:	6823      	ldrlt	r3, [r4, #0]
90019262:	bfbc      	itt	lt
90019264:	425b      	neglt	r3, r3
90019266:	6023      	strlt	r3, [r4, #0]
90019268:	2a00      	cmp	r2, #0
9001926a:	da04      	bge.n	90019276 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
9001926c:	6823      	ldr	r3, [r4, #0]
9001926e:	4257      	negs	r7, r2
90019270:	4276      	negs	r6, r6
90019272:	425b      	negs	r3, r3
90019274:	6023      	str	r3, [r4, #0]
90019276:	2d00      	cmp	r5, #0
90019278:	4638      	mov	r0, r7
9001927a:	bfba      	itte	lt
9001927c:	426d      	neglt	r5, r5
9001927e:	f04f 38ff 	movlt.w	r8, #4294967295
90019282:	f04f 0801 	movge.w	r8, #1
90019286:	f7ff ff5d 	bl	90019144 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001928a:	ab03      	add	r3, sp, #12
9001928c:	463a      	mov	r2, r7
9001928e:	e9cd 5300 	strd	r5, r3, [sp]
90019292:	4603      	mov	r3, r0
90019294:	4648      	mov	r0, r9
90019296:	f7ff ff73 	bl	90019180 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001929a:	6823      	ldr	r3, [r4, #0]
9001929c:	9a03      	ldr	r2, [sp, #12]
9001929e:	4546      	cmp	r6, r8
900192a0:	441a      	add	r2, r3
900192a2:	fb92 f3f5 	sdiv	r3, r2, r5
900192a6:	4418      	add	r0, r3
900192a8:	fb05 2313 	mls	r3, r5, r3, r2
900192ac:	bf18      	it	ne
900192ae:	4240      	negne	r0, r0
900192b0:	1c72      	adds	r2, r6, #1
900192b2:	6023      	str	r3, [r4, #0]
900192b4:	d105      	bne.n	900192c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
900192b6:	2b00      	cmp	r3, #0
900192b8:	f1c3 0200 	rsb	r2, r3, #0
900192bc:	db0b      	blt.n	900192d6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
900192be:	6022      	str	r2, [r4, #0]
900192c0:	e006      	b.n	900192d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900192c2:	2e01      	cmp	r6, #1
900192c4:	d104      	bne.n	900192d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900192c6:	2b00      	cmp	r3, #0
900192c8:	da02      	bge.n	900192d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
900192ca:	442b      	add	r3, r5
900192cc:	3801      	subs	r0, #1
900192ce:	6023      	str	r3, [r4, #0]
900192d0:	b005      	add	sp, #20
900192d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900192d6:	3801      	subs	r0, #1
900192d8:	1b52      	subs	r2, r2, r5
900192da:	e7f0      	b.n	900192be <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

900192dc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
900192dc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
900192e0:	4c1c      	ldr	r4, [pc, #112]	@ (90019354 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
900192e2:	4605      	mov	r5, r0
900192e4:	6807      	ldr	r7, [r0, #0]
900192e6:	69a3      	ldr	r3, [r4, #24]
900192e8:	b92b      	cbnz	r3, 900192f6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
900192ea:	6840      	ldr	r0, [r0, #4]
900192ec:	e9c5 7000 	strd	r7, r0, [r5]
900192f0:	b004      	add	sp, #16
900192f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900192f6:	f04f 0802 	mov.w	r8, #2
900192fa:	68a2      	ldr	r2, [r4, #8]
900192fc:	ae04      	add	r6, sp, #16
900192fe:	6820      	ldr	r0, [r4, #0]
90019300:	fb93 f1f8 	sdiv	r1, r3, r8
90019304:	440a      	add	r2, r1
90019306:	69e1      	ldr	r1, [r4, #28]
90019308:	f846 2d04 	str.w	r2, [r6, #-4]!
9001930c:	463a      	mov	r2, r7
9001930e:	9600      	str	r6, [sp, #0]
90019310:	f7ff ff98 	bl	90019244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90019314:	69a3      	ldr	r3, [r4, #24]
90019316:	4607      	mov	r7, r0
90019318:	686a      	ldr	r2, [r5, #4]
9001931a:	6a21      	ldr	r1, [r4, #32]
9001931c:	9600      	str	r6, [sp, #0]
9001931e:	6860      	ldr	r0, [r4, #4]
90019320:	f7ff ff90 	bl	90019244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90019324:	69a3      	ldr	r3, [r4, #24]
90019326:	6962      	ldr	r2, [r4, #20]
90019328:	4407      	add	r7, r0
9001932a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9001932c:	9600      	str	r6, [sp, #0]
9001932e:	68e0      	ldr	r0, [r4, #12]
90019330:	fb93 f8f8 	sdiv	r8, r3, r8
90019334:	4442      	add	r2, r8
90019336:	9203      	str	r2, [sp, #12]
90019338:	682a      	ldr	r2, [r5, #0]
9001933a:	f7ff ff83 	bl	90019244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001933e:	4680      	mov	r8, r0
90019340:	9600      	str	r6, [sp, #0]
90019342:	69a3      	ldr	r3, [r4, #24]
90019344:	686a      	ldr	r2, [r5, #4]
90019346:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90019348:	6920      	ldr	r0, [r4, #16]
9001934a:	f7ff ff7b 	bl	90019244 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001934e:	4440      	add	r0, r8
90019350:	e7cc      	b.n	900192ec <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90019352:	bf00      	nop
90019354:	240245ac 	.word	0x240245ac

90019358 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90019358:	4b07      	ldr	r3, [pc, #28]	@ (90019378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
9001935a:	781b      	ldrb	r3, [r3, #0]
9001935c:	2b01      	cmp	r3, #1
9001935e:	d109      	bne.n	90019374 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90019360:	f9b1 3000 	ldrsh.w	r3, [r1]
90019364:	f9b0 2000 	ldrsh.w	r2, [r0]
90019368:	8003      	strh	r3, [r0, #0]
9001936a:	4b04      	ldr	r3, [pc, #16]	@ (9001937c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
9001936c:	881b      	ldrh	r3, [r3, #0]
9001936e:	3b01      	subs	r3, #1
90019370:	1a9b      	subs	r3, r3, r2
90019372:	800b      	strh	r3, [r1, #0]
90019374:	4770      	bx	lr
90019376:	bf00      	nop
90019378:	2402458e 	.word	0x2402458e
9001937c:	2402458a 	.word	0x2402458a

90019380 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90019380:	4b07      	ldr	r3, [pc, #28]	@ (900193a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90019382:	b510      	push	{r4, lr}
90019384:	781b      	ldrb	r3, [r3, #0]
90019386:	2b01      	cmp	r3, #1
90019388:	d108      	bne.n	9001939c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
9001938a:	4b06      	ldr	r3, [pc, #24]	@ (900193a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
9001938c:	880c      	ldrh	r4, [r1, #0]
9001938e:	881b      	ldrh	r3, [r3, #0]
90019390:	f9b0 2000 	ldrsh.w	r2, [r0]
90019394:	3b01      	subs	r3, #1
90019396:	1b1b      	subs	r3, r3, r4
90019398:	8003      	strh	r3, [r0, #0]
9001939a:	800a      	strh	r2, [r1, #0]
9001939c:	bd10      	pop	{r4, pc}
9001939e:	bf00      	nop
900193a0:	2402458e 	.word	0x2402458e
900193a4:	2402458a 	.word	0x2402458a

900193a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
900193a8:	4b0a      	ldr	r3, [pc, #40]	@ (900193d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
900193aa:	b510      	push	{r4, lr}
900193ac:	781b      	ldrb	r3, [r3, #0]
900193ae:	2b01      	cmp	r3, #1
900193b0:	d10e      	bne.n	900193d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
900193b2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
900193b6:	8843      	ldrh	r3, [r0, #2]
900193b8:	f9b0 4000 	ldrsh.w	r4, [r0]
900193bc:	18ca      	adds	r2, r1, r3
900193be:	4b06      	ldr	r3, [pc, #24]	@ (900193d8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
900193c0:	8044      	strh	r4, [r0, #2]
900193c2:	881b      	ldrh	r3, [r3, #0]
900193c4:	1a9b      	subs	r3, r3, r2
900193c6:	8003      	strh	r3, [r0, #0]
900193c8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
900193cc:	8081      	strh	r1, [r0, #4]
900193ce:	80c3      	strh	r3, [r0, #6]
900193d0:	bd10      	pop	{r4, pc}
900193d2:	bf00      	nop
900193d4:	2402458e 	.word	0x2402458e
900193d8:	2402458a 	.word	0x2402458a

900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
900193dc:	4b08      	ldr	r3, [pc, #32]	@ (90019400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
900193de:	781b      	ldrb	r3, [r3, #0]
900193e0:	2b01      	cmp	r3, #1
900193e2:	d10c      	bne.n	900193fe <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
900193e4:	8803      	ldrh	r3, [r0, #0]
900193e6:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
900193ea:	8842      	ldrh	r2, [r0, #2]
900193ec:	8002      	strh	r2, [r0, #0]
900193ee:	185a      	adds	r2, r3, r1
900193f0:	4b04      	ldr	r3, [pc, #16]	@ (90019404 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
900193f2:	881b      	ldrh	r3, [r3, #0]
900193f4:	1a9b      	subs	r3, r3, r2
900193f6:	8043      	strh	r3, [r0, #2]
900193f8:	88c3      	ldrh	r3, [r0, #6]
900193fa:	80c1      	strh	r1, [r0, #6]
900193fc:	8083      	strh	r3, [r0, #4]
900193fe:	4770      	bx	lr
90019400:	2402458e 	.word	0x2402458e
90019404:	2402458a 	.word	0x2402458a

90019408 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90019408:	4b07      	ldr	r3, [pc, #28]	@ (90019428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
9001940a:	b510      	push	{r4, lr}
9001940c:	781b      	ldrb	r3, [r3, #0]
9001940e:	2b01      	cmp	r3, #1
90019410:	d108      	bne.n	90019424 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90019412:	f9b1 3000 	ldrsh.w	r3, [r1]
90019416:	f9b0 4000 	ldrsh.w	r4, [r0]
9001941a:	8003      	strh	r3, [r0, #0]
9001941c:	8893      	ldrh	r3, [r2, #4]
9001941e:	3b01      	subs	r3, #1
90019420:	1b1b      	subs	r3, r3, r4
90019422:	800b      	strh	r3, [r1, #0]
90019424:	bd10      	pop	{r4, pc}
90019426:	bf00      	nop
90019428:	2402458e 	.word	0x2402458e

9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
9001942c:	4b0a      	ldr	r3, [pc, #40]	@ (90019458 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
9001942e:	460a      	mov	r2, r1
90019430:	b510      	push	{r4, lr}
90019432:	781b      	ldrb	r3, [r3, #0]
90019434:	2b01      	cmp	r3, #1
90019436:	d10d      	bne.n	90019454 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90019438:	8881      	ldrh	r1, [r0, #4]
9001943a:	8803      	ldrh	r3, [r0, #0]
9001943c:	440b      	add	r3, r1
9001943e:	4601      	mov	r1, r0
90019440:	3b01      	subs	r3, #1
90019442:	f821 3b02 	strh.w	r3, [r1], #2
90019446:	f7ff ffdf 	bl	90019408 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
9001944a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001944e:	88c2      	ldrh	r2, [r0, #6]
90019450:	80c3      	strh	r3, [r0, #6]
90019452:	8082      	strh	r2, [r0, #4]
90019454:	bd10      	pop	{r4, pc}
90019456:	bf00      	nop
90019458:	2402458e 	.word	0x2402458e

9001945c <_ZN8touchgfx11Application19changeToStartScreenEv>:
9001945c:	4770      	bx	lr
	...

90019460 <_ZN8touchgfx11Application13requestRedrawEv>:
90019460:	4b06      	ldr	r3, [pc, #24]	@ (9001947c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90019462:	2100      	movs	r1, #0
90019464:	f9b3 2000 	ldrsh.w	r2, [r3]
90019468:	4b05      	ldr	r3, [pc, #20]	@ (90019480 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
9001946a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
9001946e:	f9b3 3000 	ldrsh.w	r3, [r3]
90019472:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90019476:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
9001947a:	4770      	bx	lr
9001947c:	2402458a 	.word	0x2402458a
90019480:	2402458c 	.word	0x2402458c

90019484 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90019484:	4b03      	ldr	r3, [pc, #12]	@ (90019494 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90019486:	6818      	ldr	r0, [r3, #0]
90019488:	b110      	cbz	r0, 90019490 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
9001948a:	6803      	ldr	r3, [r0, #0]
9001948c:	699b      	ldr	r3, [r3, #24]
9001948e:	4718      	bx	r3
90019490:	4770      	bx	lr
90019492:	bf00      	nop
90019494:	240245dc 	.word	0x240245dc

90019498 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90019498:	4770      	bx	lr
	...

9001949c <_ZN8touchgfx11Application4drawEv>:
9001949c:	4b09      	ldr	r3, [pc, #36]	@ (900194c4 <_ZN8touchgfx11Application4drawEv+0x28>)
9001949e:	b507      	push	{r0, r1, r2, lr}
900194a0:	f9b3 2000 	ldrsh.w	r2, [r3]
900194a4:	2100      	movs	r1, #0
900194a6:	4b08      	ldr	r3, [pc, #32]	@ (900194c8 <_ZN8touchgfx11Application4drawEv+0x2c>)
900194a8:	9100      	str	r1, [sp, #0]
900194aa:	4669      	mov	r1, sp
900194ac:	f9b3 3000 	ldrsh.w	r3, [r3]
900194b0:	f8ad 2004 	strh.w	r2, [sp, #4]
900194b4:	f8ad 3006 	strh.w	r3, [sp, #6]
900194b8:	6803      	ldr	r3, [r0, #0]
900194ba:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900194bc:	4798      	blx	r3
900194be:	b003      	add	sp, #12
900194c0:	f85d fb04 	ldr.w	pc, [sp], #4
900194c4:	2402458a 	.word	0x2402458a
900194c8:	2402458c 	.word	0x2402458c

900194cc <_ZN8touchgfx11Application10invalidateEv>:
900194cc:	4b09      	ldr	r3, [pc, #36]	@ (900194f4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
900194ce:	b082      	sub	sp, #8
900194d0:	2100      	movs	r1, #0
900194d2:	f9b3 2000 	ldrsh.w	r2, [r3]
900194d6:	4b08      	ldr	r3, [pc, #32]	@ (900194f8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
900194d8:	f8ad 2004 	strh.w	r2, [sp, #4]
900194dc:	aa02      	add	r2, sp, #8
900194de:	f9b3 3000 	ldrsh.w	r3, [r3]
900194e2:	9100      	str	r1, [sp, #0]
900194e4:	f8ad 3006 	strh.w	r3, [sp, #6]
900194e8:	6803      	ldr	r3, [r0, #0]
900194ea:	e912 0006 	ldmdb	r2, {r1, r2}
900194ee:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900194f0:	b002      	add	sp, #8
900194f2:	4718      	bx	r3
900194f4:	2402458a 	.word	0x2402458a
900194f8:	2402458c 	.word	0x2402458c

900194fc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
900194fc:	4b03      	ldr	r3, [pc, #12]	@ (9001950c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
900194fe:	6818      	ldr	r0, [r3, #0]
90019500:	b110      	cbz	r0, 90019508 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90019502:	6803      	ldr	r3, [r0, #0]
90019504:	69db      	ldr	r3, [r3, #28]
90019506:	4718      	bx	r3
90019508:	4770      	bx	lr
9001950a:	bf00      	nop
9001950c:	240245dc 	.word	0x240245dc

90019510 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90019510:	4b03      	ldr	r3, [pc, #12]	@ (90019520 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90019512:	6818      	ldr	r0, [r3, #0]
90019514:	b110      	cbz	r0, 9001951c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90019516:	6803      	ldr	r3, [r0, #0]
90019518:	6a1b      	ldr	r3, [r3, #32]
9001951a:	4718      	bx	r3
9001951c:	4770      	bx	lr
9001951e:	bf00      	nop
90019520:	240245dc 	.word	0x240245dc

90019524 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90019524:	2300      	movs	r3, #0
90019526:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
9001952a:	4770      	bx	lr

9001952c <_ZN8touchgfx11Application14handleKeyEventEh>:
9001952c:	4b03      	ldr	r3, [pc, #12]	@ (9001953c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
9001952e:	6818      	ldr	r0, [r3, #0]
90019530:	b110      	cbz	r0, 90019538 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90019532:	6803      	ldr	r3, [r0, #0]
90019534:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90019536:	4718      	bx	r3
90019538:	4770      	bx	lr
9001953a:	bf00      	nop
9001953c:	240245dc 	.word	0x240245dc

90019540 <_ZN8touchgfx11ApplicationD1Ev>:
90019540:	4770      	bx	lr

90019542 <_ZN8touchgfx11ApplicationD0Ev>:
90019542:	b510      	push	{r4, lr}
90019544:	4604      	mov	r4, r0
90019546:	f44f 719e 	mov.w	r1, #316	@ 0x13c
9001954a:	f012 fb06 	bl	9002bb5a <_ZdlPvj>
9001954e:	4620      	mov	r0, r4
90019550:	bd10      	pop	{r4, pc}

90019552 <_ZN8touchgfx4Rect10restrictToEss>:
90019552:	f9b0 3000 	ldrsh.w	r3, [r0]
90019556:	2b00      	cmp	r3, #0
90019558:	b510      	push	{r4, lr}
9001955a:	da04      	bge.n	90019566 <_ZN8touchgfx4Rect10restrictToEss+0x14>
9001955c:	8884      	ldrh	r4, [r0, #4]
9001955e:	4423      	add	r3, r4
90019560:	8083      	strh	r3, [r0, #4]
90019562:	2300      	movs	r3, #0
90019564:	8003      	strh	r3, [r0, #0]
90019566:	f9b0 4000 	ldrsh.w	r4, [r0]
9001956a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001956e:	1b09      	subs	r1, r1, r4
90019570:	428b      	cmp	r3, r1
90019572:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90019576:	bfc8      	it	gt
90019578:	8081      	strhgt	r1, [r0, #4]
9001957a:	2b00      	cmp	r3, #0
9001957c:	da04      	bge.n	90019588 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001957e:	88c1      	ldrh	r1, [r0, #6]
90019580:	440b      	add	r3, r1
90019582:	80c3      	strh	r3, [r0, #6]
90019584:	2300      	movs	r3, #0
90019586:	8043      	strh	r3, [r0, #2]
90019588:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001958c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90019590:	1a52      	subs	r2, r2, r1
90019592:	4293      	cmp	r3, r2
90019594:	bfc8      	it	gt
90019596:	80c2      	strhgt	r2, [r0, #6]
90019598:	bd10      	pop	{r4, pc}
	...

9001959c <_ZN8touchgfx11Application4drawERNS_4RectE>:
9001959c:	4b10      	ldr	r3, [pc, #64]	@ (900195e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
9001959e:	b510      	push	{r4, lr}
900195a0:	460c      	mov	r4, r1
900195a2:	f9b3 2000 	ldrsh.w	r2, [r3]
900195a6:	4b0f      	ldr	r3, [pc, #60]	@ (900195e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
900195a8:	4620      	mov	r0, r4
900195aa:	f9b3 1000 	ldrsh.w	r1, [r3]
900195ae:	f7ff ffd0 	bl	90019552 <_ZN8touchgfx4Rect10restrictToEss>
900195b2:	4b0d      	ldr	r3, [pc, #52]	@ (900195e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
900195b4:	6818      	ldr	r0, [r3, #0]
900195b6:	b190      	cbz	r0, 900195de <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
900195b8:	6803      	ldr	r3, [r0, #0]
900195ba:	4621      	mov	r1, r4
900195bc:	689b      	ldr	r3, [r3, #8]
900195be:	4798      	blx	r3
900195c0:	4b0a      	ldr	r3, [pc, #40]	@ (900195ec <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
900195c2:	6818      	ldr	r0, [r3, #0]
900195c4:	b118      	cbz	r0, 900195ce <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
900195c6:	6803      	ldr	r3, [r0, #0]
900195c8:	4621      	mov	r1, r4
900195ca:	689b      	ldr	r3, [r3, #8]
900195cc:	4798      	blx	r3
900195ce:	4b08      	ldr	r3, [pc, #32]	@ (900195f0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
900195d0:	4621      	mov	r1, r4
900195d2:	6818      	ldr	r0, [r3, #0]
900195d4:	6803      	ldr	r3, [r0, #0]
900195d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900195da:	69db      	ldr	r3, [r3, #28]
900195dc:	4718      	bx	r3
900195de:	bd10      	pop	{r4, pc}
900195e0:	2402458c 	.word	0x2402458c
900195e4:	2402458a 	.word	0x2402458a
900195e8:	240245dc 	.word	0x240245dc
900195ec:	240245d8 	.word	0x240245d8
900195f0:	24024598 	.word	0x24024598

900195f4 <_ZNK8touchgfx4Rect8includesERKS0_>:
900195f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900195f6:	4606      	mov	r6, r0
900195f8:	4608      	mov	r0, r1
900195fa:	460f      	mov	r7, r1
900195fc:	f7f9 ffb5 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
90019600:	b9e8      	cbnz	r0, 9001963e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90019602:	f9b7 5000 	ldrsh.w	r5, [r7]
90019606:	f9b6 4000 	ldrsh.w	r4, [r6]
9001960a:	42a5      	cmp	r5, r4
9001960c:	db17      	blt.n	9001963e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001960e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90019612:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90019616:	429a      	cmp	r2, r3
90019618:	db11      	blt.n	9001963e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001961a:	88b9      	ldrh	r1, [r7, #4]
9001961c:	440d      	add	r5, r1
9001961e:	88b1      	ldrh	r1, [r6, #4]
90019620:	440c      	add	r4, r1
90019622:	b22d      	sxth	r5, r5
90019624:	b224      	sxth	r4, r4
90019626:	42a5      	cmp	r5, r4
90019628:	dc09      	bgt.n	9001963e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
9001962a:	88f8      	ldrh	r0, [r7, #6]
9001962c:	4410      	add	r0, r2
9001962e:	88f2      	ldrh	r2, [r6, #6]
90019630:	4413      	add	r3, r2
90019632:	b200      	sxth	r0, r0
90019634:	b21b      	sxth	r3, r3
90019636:	4298      	cmp	r0, r3
90019638:	bfcc      	ite	gt
9001963a:	2000      	movgt	r0, #0
9001963c:	2001      	movle	r0, #1
9001963e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90019640 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90019640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019642:	4604      	mov	r4, r0
90019644:	4608      	mov	r0, r1
90019646:	460d      	mov	r5, r1
90019648:	f7f9 ff8f 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
9001964c:	b978      	cbnz	r0, 9001966e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001964e:	4620      	mov	r0, r4
90019650:	f7f9 ff8b 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
90019654:	f9b5 6000 	ldrsh.w	r6, [r5]
90019658:	b150      	cbz	r0, 90019670 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
9001965a:	8026      	strh	r6, [r4, #0]
9001965c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90019660:	8063      	strh	r3, [r4, #2]
90019662:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90019666:	80a3      	strh	r3, [r4, #4]
90019668:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9001966c:	80e3      	strh	r3, [r4, #6]
9001966e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019670:	f9b4 1000 	ldrsh.w	r1, [r4]
90019674:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90019678:	42b1      	cmp	r1, r6
9001967a:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001967e:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90019682:	460f      	mov	r7, r1
90019684:	88ed      	ldrh	r5, [r5, #6]
90019686:	bfa8      	it	ge
90019688:	4637      	movge	r7, r6
9001968a:	4293      	cmp	r3, r2
9001968c:	4618      	mov	r0, r3
9001968e:	4466      	add	r6, ip
90019690:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90019694:	bfa8      	it	ge
90019696:	4610      	movge	r0, r2
90019698:	442a      	add	r2, r5
9001969a:	88e5      	ldrh	r5, [r4, #6]
9001969c:	4461      	add	r1, ip
9001969e:	b236      	sxth	r6, r6
900196a0:	8027      	strh	r7, [r4, #0]
900196a2:	442b      	add	r3, r5
900196a4:	b209      	sxth	r1, r1
900196a6:	b212      	sxth	r2, r2
900196a8:	8060      	strh	r0, [r4, #2]
900196aa:	b21b      	sxth	r3, r3
900196ac:	428e      	cmp	r6, r1
900196ae:	bfac      	ite	ge
900196b0:	ebc7 0106 	rsbge	r1, r7, r6
900196b4:	ebc7 0101 	rsblt	r1, r7, r1
900196b8:	429a      	cmp	r2, r3
900196ba:	bfac      	ite	ge
900196bc:	ebc0 0202 	rsbge	r2, r0, r2
900196c0:	ebc0 0203 	rsblt	r2, r0, r3
900196c4:	80a1      	strh	r1, [r4, #4]
900196c6:	80e2      	strh	r2, [r4, #6]
900196c8:	e7d1      	b.n	9001966e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

900196cc <_ZN8touchgfx11Application11getInstanceEv>:
900196cc:	4b01      	ldr	r3, [pc, #4]	@ (900196d4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
900196ce:	6818      	ldr	r0, [r3, #0]
900196d0:	4770      	bx	lr
900196d2:	bf00      	nop
900196d4:	240245ec 	.word	0x240245ec

900196d8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
900196d8:	2300      	movs	r3, #0
900196da:	b510      	push	{r4, lr}
900196dc:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
900196e0:	4604      	mov	r4, r0
900196e2:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900196e6:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900196ea:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900196ee:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
900196f2:	429a      	cmp	r2, r3
900196f4:	d90e      	bls.n	90019714 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900196f6:	18e2      	adds	r2, r4, r3
900196f8:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
900196fc:	b122      	cbz	r2, 90019708 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900196fe:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90019702:	6803      	ldr	r3, [r0, #0]
90019704:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90019706:	4798      	blx	r3
90019708:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
9001970c:	3301      	adds	r3, #1
9001970e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90019712:	e7ea      	b.n	900196ea <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90019714:	bd10      	pop	{r4, pc}

90019716 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90019716:	2300      	movs	r3, #0
90019718:	f100 0284 	add.w	r2, r0, #132	@ 0x84
9001971c:	30a4      	adds	r0, #164	@ 0xa4
9001971e:	f820 3c24 	strh.w	r3, [r0, #-36]
90019722:	f802 3b01 	strb.w	r3, [r2], #1
90019726:	4282      	cmp	r2, r0
90019728:	d1fb      	bne.n	90019722 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
9001972a:	4770      	bx	lr

9001972c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
9001972c:	b570      	push	{r4, r5, r6, lr}
9001972e:	4c0b      	ldr	r4, [pc, #44]	@ (9001975c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90019730:	4605      	mov	r5, r0
90019732:	460e      	mov	r6, r1
90019734:	6820      	ldr	r0, [r4, #0]
90019736:	b110      	cbz	r0, 9001973e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90019738:	6803      	ldr	r3, [r0, #0]
9001973a:	695b      	ldr	r3, [r3, #20]
9001973c:	4798      	blx	r3
9001973e:	1d28      	adds	r0, r5, #4
90019740:	f7ff ffe9 	bl	90019716 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90019744:	6026      	str	r6, [r4, #0]
90019746:	6833      	ldr	r3, [r6, #0]
90019748:	4630      	mov	r0, r6
9001974a:	68db      	ldr	r3, [r3, #12]
9001974c:	4798      	blx	r3
9001974e:	682b      	ldr	r3, [r5, #0]
90019750:	4628      	mov	r0, r5
90019752:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90019754:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90019758:	4718      	bx	r3
9001975a:	bf00      	nop
9001975c:	240245dc 	.word	0x240245dc

90019760 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90019760:	2300      	movs	r3, #0
90019762:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
90019766:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
9001976a:	461a      	mov	r2, r3
9001976c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001976e:	461c      	mov	r4, r3
90019770:	461d      	mov	r5, r3
90019772:	459c      	cmp	ip, r3
90019774:	dd1a      	ble.n	900197ac <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90019776:	18c6      	adds	r6, r0, r3
90019778:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
9001977c:	b16e      	cbz	r6, 9001979a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
9001977e:	429a      	cmp	r2, r3
90019780:	d008      	beq.n	90019794 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90019782:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90019786:	fa1f fe82 	uxth.w	lr, r2
9001978a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
9001978e:	1887      	adds	r7, r0, r2
90019790:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90019794:	3201      	adds	r2, #1
90019796:	3301      	adds	r3, #1
90019798:	e7eb      	b.n	90019772 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
9001979a:	4299      	cmp	r1, r3
9001979c:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
900197a0:	bfa8      	it	ge
900197a2:	3501      	addge	r5, #1
900197a4:	429e      	cmp	r6, r3
900197a6:	bfc8      	it	gt
900197a8:	3401      	addgt	r4, #1
900197aa:	e7f4      	b.n	90019796 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
900197ac:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
900197b0:	1b49      	subs	r1, r1, r5
900197b2:	1b1b      	subs	r3, r3, r4
900197b4:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
900197b8:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900197bc:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900197c0:	4293      	cmp	r3, r2
900197c2:	dd03      	ble.n	900197cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900197c4:	3b01      	subs	r3, #1
900197c6:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
900197ca:	e7f7      	b.n	900197bc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900197cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900197d0 <_ZN8touchgfx11Application15handleTickEventEv>:
900197d0:	b570      	push	{r4, r5, r6, lr}
900197d2:	4d16      	ldr	r5, [pc, #88]	@ (9001982c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900197d4:	4604      	mov	r4, r0
900197d6:	6828      	ldr	r0, [r5, #0]
900197d8:	b140      	cbz	r0, 900197ec <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900197da:	7a03      	ldrb	r3, [r0, #8]
900197dc:	b933      	cbnz	r3, 900197ec <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900197de:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900197e2:	6803      	ldr	r3, [r0, #0]
900197e4:	689b      	ldr	r3, [r3, #8]
900197e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900197ea:	4718      	bx	r3
900197ec:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
900197f0:	4e0f      	ldr	r6, [pc, #60]	@ (90019830 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900197f2:	b973      	cbnz	r3, 90019812 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900197f4:	b168      	cbz	r0, 90019812 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900197f6:	7a03      	ldrb	r3, [r0, #8]
900197f8:	b15b      	cbz	r3, 90019812 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900197fa:	6830      	ldr	r0, [r6, #0]
900197fc:	b110      	cbz	r0, 90019804 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
900197fe:	6803      	ldr	r3, [r0, #0]
90019800:	691b      	ldr	r3, [r3, #16]
90019802:	4798      	blx	r3
90019804:	6828      	ldr	r0, [r5, #0]
90019806:	6803      	ldr	r3, [r0, #0]
90019808:	68db      	ldr	r3, [r3, #12]
9001980a:	4798      	blx	r3
9001980c:	2301      	movs	r3, #1
9001980e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90019812:	3404      	adds	r4, #4
90019814:	4620      	mov	r0, r4
90019816:	f7ff ff5f 	bl	900196d8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
9001981a:	4620      	mov	r0, r4
9001981c:	f7ff ffa0 	bl	90019760 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90019820:	6830      	ldr	r0, [r6, #0]
90019822:	b110      	cbz	r0, 9001982a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90019824:	6803      	ldr	r3, [r0, #0]
90019826:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90019828:	e7dd      	b.n	900197e6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
9001982a:	bd70      	pop	{r4, r5, r6, pc}
9001982c:	240245e0 	.word	0x240245e0
90019830:	240245dc 	.word	0x240245dc

90019834 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90019834:	4603      	mov	r3, r0
90019836:	f100 0140 	add.w	r1, r0, #64	@ 0x40
9001983a:	2200      	movs	r2, #0
9001983c:	801a      	strh	r2, [r3, #0]
9001983e:	3308      	adds	r3, #8
90019840:	f823 2c06 	strh.w	r2, [r3, #-6]
90019844:	f823 2c04 	strh.w	r2, [r3, #-4]
90019848:	f823 2c02 	strh.w	r2, [r3, #-2]
9001984c:	428b      	cmp	r3, r1
9001984e:	d1f5      	bne.n	9001983c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90019850:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
90019854:	4770      	bx	lr
	...

90019858 <_ZN8touchgfx11ApplicationC1Ev>:
90019858:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001985a:	4b1d      	ldr	r3, [pc, #116]	@ (900198d0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
9001985c:	4606      	mov	r6, r0
9001985e:	4604      	mov	r4, r0
90019860:	2500      	movs	r5, #0
90019862:	f846 3b04 	str.w	r3, [r6], #4
90019866:	22a8      	movs	r2, #168	@ 0xa8
90019868:	2100      	movs	r1, #0
9001986a:	4630      	mov	r0, r6
9001986c:	f012 ff88 	bl	9002c780 <memset>
90019870:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
90019874:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90019878:	4f16      	ldr	r7, [pc, #88]	@ (900198d4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
9001987a:	f7ff ffdb 	bl	90019834 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001987e:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
90019882:	f7ff ffd7 	bl	90019834 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90019886:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
9001988a:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
9001988e:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
90019892:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
90019896:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
9001989a:	490f      	ldr	r1, [pc, #60]	@ (900198d8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
9001989c:	480f      	ldr	r0, [pc, #60]	@ (900198dc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
9001989e:	f011 f965 	bl	9002ab6c <CRC_Lock>
900198a2:	4b0f      	ldr	r3, [pc, #60]	@ (900198e0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
900198a4:	b158      	cbz	r0, 900198be <_ZN8touchgfx11ApplicationC1Ev+0x66>
900198a6:	801d      	strh	r5, [r3, #0]
900198a8:	2300      	movs	r3, #0
900198aa:	4a0e      	ldr	r2, [pc, #56]	@ (900198e4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
900198ac:	4630      	mov	r0, r6
900198ae:	6013      	str	r3, [r2, #0]
900198b0:	4a0d      	ldr	r2, [pc, #52]	@ (900198e8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
900198b2:	603b      	str	r3, [r7, #0]
900198b4:	6013      	str	r3, [r2, #0]
900198b6:	f7ff ff2e 	bl	90019716 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
900198ba:	4620      	mov	r0, r4
900198bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900198be:	f44f 6280 	mov.w	r2, #1024	@ 0x400
900198c2:	2002      	movs	r0, #2
900198c4:	801a      	strh	r2, [r3, #0]
900198c6:	6038      	str	r0, [r7, #0]
900198c8:	f001 fdfe 	bl	9001b4c8 <_ZN8touchgfx6Screen4drawEv>
900198cc:	e7ec      	b.n	900198a8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
900198ce:	bf00      	nop
900198d0:	900304cc 	.word	0x900304cc
900198d4:	240245dc 	.word	0x240245dc
900198d8:	b5e8b5cd 	.word	0xb5e8b5cd
900198dc:	f407a5c2 	.word	0xf407a5c2
900198e0:	240002a8 	.word	0x240002a8
900198e4:	240245ec 	.word	0x240245ec
900198e8:	240245e0 	.word	0x240245e0

900198ec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
900198ec:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
900198f0:	3b01      	subs	r3, #1
900198f2:	b29b      	uxth	r3, r3
900198f4:	428b      	cmp	r3, r1
900198f6:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
900198fa:	b510      	push	{r4, lr}
900198fc:	d908      	bls.n	90019910 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
900198fe:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90019902:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90019906:	681a      	ldr	r2, [r3, #0]
90019908:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
9001990c:	685a      	ldr	r2, [r3, #4]
9001990e:	6062      	str	r2, [r4, #4]
90019910:	bd10      	pop	{r4, pc}
	...

90019914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90019914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019918:	b08f      	sub	sp, #60	@ 0x3c
9001991a:	4b8f      	ldr	r3, [pc, #572]	@ (90019b58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
9001991c:	4683      	mov	fp, r0
9001991e:	ac0a      	add	r4, sp, #40	@ 0x28
90019920:	e884 0006 	stmia.w	r4, {r1, r2}
90019924:	f9b3 2000 	ldrsh.w	r2, [r3]
90019928:	4620      	mov	r0, r4
9001992a:	4b8c      	ldr	r3, [pc, #560]	@ (90019b5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
9001992c:	f9b3 1000 	ldrsh.w	r1, [r3]
90019930:	f7ff fe0f 	bl	90019552 <_ZN8touchgfx4Rect10restrictToEss>
90019934:	4620      	mov	r0, r4
90019936:	f7f9 fe18 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
9001993a:	2800      	cmp	r0, #0
9001993c:	d16a      	bne.n	90019a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001993e:	9403      	str	r4, [sp, #12]
90019940:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90019944:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90019948:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
9001994c:	9301      	str	r3, [sp, #4]
9001994e:	35a4      	adds	r5, #164	@ 0xa4
90019950:	b15c      	cbz	r4, 9001996a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
90019952:	4629      	mov	r1, r5
90019954:	9803      	ldr	r0, [sp, #12]
90019956:	f7ff fe4d 	bl	900195f4 <_ZNK8touchgfx4Rect8includesERKS0_>
9001995a:	3c01      	subs	r4, #1
9001995c:	b118      	cbz	r0, 90019966 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001995e:	b2a1      	uxth	r1, r4
90019960:	9801      	ldr	r0, [sp, #4]
90019962:	f7ff ffc3 	bl	900198ec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019966:	3d08      	subs	r5, #8
90019968:	e7f2      	b.n	90019950 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
9001996a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
9001996e:	f10a 33ff 	add.w	r3, sl, #4294967295
90019972:	f8cd a010 	str.w	sl, [sp, #16]
90019976:	9302      	str	r3, [sp, #8]
90019978:	ea4f 03ca 	mov.w	r3, sl, lsl #3
9001997c:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
90019980:	9306      	str	r3, [sp, #24]
90019982:	445c      	add	r4, fp
90019984:	2500      	movs	r5, #0
90019986:	4626      	mov	r6, r4
90019988:	f8cd a014 	str.w	sl, [sp, #20]
9001998c:	462f      	mov	r7, r5
9001998e:	9b05      	ldr	r3, [sp, #20]
90019990:	2b00      	cmp	r3, #0
90019992:	d073      	beq.n	90019a7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90019994:	9903      	ldr	r1, [sp, #12]
90019996:	4630      	mov	r0, r6
90019998:	f7fd f836 	bl	90016a08 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001999c:	b350      	cbz	r0, 900199f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001999e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
900199a2:	f9b6 c000 	ldrsh.w	ip, [r6]
900199a6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
900199aa:	45e6      	cmp	lr, ip
900199ac:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900199b0:	db33      	blt.n	90019a1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900199b2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900199b6:	88b3      	ldrh	r3, [r6, #4]
900199b8:	4472      	add	r2, lr
900199ba:	4463      	add	r3, ip
900199bc:	b212      	sxth	r2, r2
900199be:	b21b      	sxth	r3, r3
900199c0:	429a      	cmp	r2, r3
900199c2:	dc2a      	bgt.n	90019a1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900199c4:	fa1f f289 	uxth.w	r2, r9
900199c8:	88f3      	ldrh	r3, [r6, #6]
900199ca:	45c8      	cmp	r8, r9
900199cc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
900199d0:	4413      	add	r3, r2
900199d2:	fa1f fc88 	uxth.w	ip, r8
900199d6:	b29b      	uxth	r3, r3
900199d8:	fa0f fe83 	sxth.w	lr, r3
900199dc:	db0f      	blt.n	900199fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900199de:	eba3 030c 	sub.w	r3, r3, ip
900199e2:	1ac9      	subs	r1, r1, r3
900199e4:	b209      	sxth	r1, r1
900199e6:	2900      	cmp	r1, #0
900199e8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900199ec:	dd12      	ble.n	90019a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900199ee:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
900199f2:	4605      	mov	r5, r0
900199f4:	9b05      	ldr	r3, [sp, #20]
900199f6:	3e08      	subs	r6, #8
900199f8:	3b01      	subs	r3, #1
900199fa:	9305      	str	r3, [sp, #20]
900199fc:	e7c7      	b.n	9001998e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
900199fe:	4461      	add	r1, ip
90019a00:	b209      	sxth	r1, r1
90019a02:	4571      	cmp	r1, lr
90019a04:	dc38      	bgt.n	90019a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90019a06:	eba2 020c 	sub.w	r2, r2, ip
90019a0a:	b212      	sxth	r2, r2
90019a0c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90019a10:	2a00      	cmp	r2, #0
90019a12:	dcee      	bgt.n	900199f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90019a14:	b00f      	add	sp, #60	@ 0x3c
90019a16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019a1a:	45c8      	cmp	r8, r9
90019a1c:	db2c      	blt.n	90019a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90019a1e:	88f3      	ldrh	r3, [r6, #6]
90019a20:	4499      	add	r9, r3
90019a22:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90019a26:	4498      	add	r8, r3
90019a28:	fa0f f989 	sxth.w	r9, r9
90019a2c:	fa0f f888 	sxth.w	r8, r8
90019a30:	45c1      	cmp	r9, r8
90019a32:	db21      	blt.n	90019a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90019a34:	fa1f f28c 	uxth.w	r2, ip
90019a38:	88b3      	ldrh	r3, [r6, #4]
90019a3a:	45e6      	cmp	lr, ip
90019a3c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90019a40:	4413      	add	r3, r2
90019a42:	fa1f f88e 	uxth.w	r8, lr
90019a46:	b29b      	uxth	r3, r3
90019a48:	fa0f f983 	sxth.w	r9, r3
90019a4c:	db0a      	blt.n	90019a64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
90019a4e:	eba3 0308 	sub.w	r3, r3, r8
90019a52:	1ac9      	subs	r1, r1, r3
90019a54:	b209      	sxth	r1, r1
90019a56:	2900      	cmp	r1, #0
90019a58:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90019a5c:	ddda      	ble.n	90019a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90019a5e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90019a62:	e7c6      	b.n	900199f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90019a64:	4441      	add	r1, r8
90019a66:	b209      	sxth	r1, r1
90019a68:	4549      	cmp	r1, r9
90019a6a:	dc05      	bgt.n	90019a78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90019a6c:	eba2 0208 	sub.w	r2, r2, r8
90019a70:	b212      	sxth	r2, r2
90019a72:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90019a76:	e7cb      	b.n	90019a10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90019a78:	4607      	mov	r7, r0
90019a7a:	e7bb      	b.n	900199f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90019a7c:	2d00      	cmp	r5, #0
90019a7e:	d181      	bne.n	90019984 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
90019a80:	2f00      	cmp	r7, #0
90019a82:	f000 81dd 	beq.w	90019e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90019a86:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
90019a8a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
90019a8e:	b2b3      	uxth	r3, r6
90019a90:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90019a94:	9305      	str	r3, [sp, #20]
90019a96:	9a05      	ldr	r2, [sp, #20]
90019a98:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90019a9c:	4413      	add	r3, r2
90019a9e:	b2ba      	uxth	r2, r7
90019aa0:	4492      	add	sl, r2
90019aa2:	b29b      	uxth	r3, r3
90019aa4:	fa1f fa8a 	uxth.w	sl, sl
90019aa8:	fa0f f883 	sxth.w	r8, r3
90019aac:	fa0f f98a 	sxth.w	r9, sl
90019ab0:	e9cd 2307 	strd	r2, r3, [sp, #28]
90019ab4:	9b04      	ldr	r3, [sp, #16]
90019ab6:	2b00      	cmp	r3, #0
90019ab8:	d052      	beq.n	90019b60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90019aba:	9903      	ldr	r1, [sp, #12]
90019abc:	4620      	mov	r0, r4
90019abe:	f7fc ffa3 	bl	90016a08 <_ZNK8touchgfx4Rect9intersectERKS0_>
90019ac2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90019ac6:	b1c0      	cbz	r0, 90019afa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90019ac8:	f9b4 e000 	ldrsh.w	lr, [r4]
90019acc:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90019ad0:	4576      	cmp	r6, lr
90019ad2:	dc22      	bgt.n	90019b1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90019ad4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90019ad8:	44f4      	add	ip, lr
90019ada:	fa0f fc8c 	sxth.w	ip, ip
90019ade:	45e0      	cmp	r8, ip
90019ae0:	db1b      	blt.n	90019b1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90019ae2:	428f      	cmp	r7, r1
90019ae4:	fa1f fc81 	uxth.w	ip, r1
90019ae8:	88e1      	ldrh	r1, [r4, #6]
90019aea:	dc0d      	bgt.n	90019b08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90019aec:	ebaa 0c0c 	sub.w	ip, sl, ip
90019af0:	f8a4 9002 	strh.w	r9, [r4, #2]
90019af4:	eba1 010c 	sub.w	r1, r1, ip
90019af8:	80e1      	strh	r1, [r4, #6]
90019afa:	4628      	mov	r0, r5
90019afc:	9904      	ldr	r1, [sp, #16]
90019afe:	3c08      	subs	r4, #8
90019b00:	4605      	mov	r5, r0
90019b02:	3901      	subs	r1, #1
90019b04:	9104      	str	r1, [sp, #16]
90019b06:	e7d3      	b.n	90019ab0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90019b08:	4461      	add	r1, ip
90019b0a:	b209      	sxth	r1, r1
90019b0c:	4549      	cmp	r1, r9
90019b0e:	dcf5      	bgt.n	90019afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90019b10:	eba2 0c0c 	sub.w	ip, r2, ip
90019b14:	f8a4 c006 	strh.w	ip, [r4, #6]
90019b18:	e7ef      	b.n	90019afa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90019b1a:	428f      	cmp	r7, r1
90019b1c:	dcee      	bgt.n	90019afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90019b1e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
90019b22:	4461      	add	r1, ip
90019b24:	b209      	sxth	r1, r1
90019b26:	4589      	cmp	r9, r1
90019b28:	dbe8      	blt.n	90019afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90019b2a:	4576      	cmp	r6, lr
90019b2c:	fa1f fc8e 	uxth.w	ip, lr
90019b30:	88a1      	ldrh	r1, [r4, #4]
90019b32:	dc07      	bgt.n	90019b44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90019b34:	eba3 0c0c 	sub.w	ip, r3, ip
90019b38:	f8a4 8000 	strh.w	r8, [r4]
90019b3c:	eba1 010c 	sub.w	r1, r1, ip
90019b40:	80a1      	strh	r1, [r4, #4]
90019b42:	e7da      	b.n	90019afa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90019b44:	4461      	add	r1, ip
90019b46:	b209      	sxth	r1, r1
90019b48:	4588      	cmp	r8, r1
90019b4a:	dbd7      	blt.n	90019afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90019b4c:	9905      	ldr	r1, [sp, #20]
90019b4e:	eba1 0c0c 	sub.w	ip, r1, ip
90019b52:	f8a4 c004 	strh.w	ip, [r4, #4]
90019b56:	e7d0      	b.n	90019afa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90019b58:	2402458c 	.word	0x2402458c
90019b5c:	2402458a 	.word	0x2402458a
90019b60:	2d00      	cmp	r5, #0
90019b62:	f000 816d 	beq.w	90019e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90019b66:	9b06      	ldr	r3, [sp, #24]
90019b68:	445b      	add	r3, fp
90019b6a:	461c      	mov	r4, r3
90019b6c:	9b02      	ldr	r3, [sp, #8]
90019b6e:	3301      	adds	r3, #1
90019b70:	f000 8166 	beq.w	90019e40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90019b74:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
90019b78:	9803      	ldr	r0, [sp, #12]
90019b7a:	4629      	mov	r1, r5
90019b7c:	f7ff fd3a 	bl	900195f4 <_ZNK8touchgfx4Rect8includesERKS0_>
90019b80:	b120      	cbz	r0, 90019b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
90019b82:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90019b86:	9801      	ldr	r0, [sp, #4]
90019b88:	f7ff feb0 	bl	900198ec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019b8c:	9903      	ldr	r1, [sp, #12]
90019b8e:	4628      	mov	r0, r5
90019b90:	f7fc ff3a 	bl	90016a08 <_ZNK8touchgfx4Rect9intersectERKS0_>
90019b94:	2800      	cmp	r0, #0
90019b96:	f000 809c 	beq.w	90019cd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90019b9a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90019b9e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90019ba2:	fa1f f189 	uxth.w	r1, r9
90019ba6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90019baa:	9309      	str	r3, [sp, #36]	@ 0x24
90019bac:	eb01 0c03 	add.w	ip, r1, r3
90019bb0:	b283      	uxth	r3, r0
90019bb2:	4548      	cmp	r0, r9
90019bb4:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
90019bb8:	fa1f fa8c 	uxth.w	sl, ip
90019bbc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90019bc0:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90019bc4:	eb03 050c 	add.w	r5, r3, ip
90019bc8:	b2ad      	uxth	r5, r5
90019bca:	9505      	str	r5, [sp, #20]
90019bcc:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90019bd0:	9504      	str	r5, [sp, #16]
90019bd2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
90019bd6:	f340 8099 	ble.w	90019d0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90019bda:	1a5b      	subs	r3, r3, r1
90019bdc:	4596      	cmp	lr, r2
90019bde:	fa0f f08a 	sxth.w	r0, sl
90019be2:	b29b      	uxth	r3, r3
90019be4:	b21e      	sxth	r6, r3
90019be6:	dd2e      	ble.n	90019c46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90019be8:	9f02      	ldr	r7, [sp, #8]
90019bea:	fa1f fe8e 	uxth.w	lr, lr
90019bee:	b292      	uxth	r2, r2
90019bf0:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90019bf4:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90019bf8:	9f04      	ldr	r7, [sp, #16]
90019bfa:	ebae 0102 	sub.w	r1, lr, r2
90019bfe:	44a6      	add	lr, r4
90019c00:	1a3f      	subs	r7, r7, r0
90019c02:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
90019c06:	b289      	uxth	r1, r1
90019c08:	4402      	add	r2, r0
90019c0a:	fa0f fe8e 	sxth.w	lr, lr
90019c0e:	b20d      	sxth	r5, r1
90019c10:	b212      	sxth	r2, r2
90019c12:	436f      	muls	r7, r5
90019c14:	ebae 0202 	sub.w	r2, lr, r2
90019c18:	4372      	muls	r2, r6
90019c1a:	4297      	cmp	r7, r2
90019c1c:	db09      	blt.n	90019c32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
90019c1e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
90019c22:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
90019c26:	449c      	add	ip, r3
90019c28:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90019c2c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90019c30:	e686      	b.n	90019940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019c32:	4421      	add	r1, r4
90019c34:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
90019c38:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
90019c3c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90019c40:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90019c44:	e67c      	b.n	90019940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019c46:	9f04      	ldr	r7, [sp, #16]
90019c48:	42b8      	cmp	r0, r7
90019c4a:	da27      	bge.n	90019c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90019c4c:	9902      	ldr	r1, [sp, #8]
90019c4e:	1a3f      	subs	r7, r7, r0
90019c50:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
90019c54:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90019c58:	eb05 010e 	add.w	r1, r5, lr
90019c5c:	fa1f f881 	uxth.w	r8, r1
90019c60:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
90019c64:	4411      	add	r1, r2
90019c66:	fa0f f988 	sxth.w	r9, r8
90019c6a:	eba2 020e 	sub.w	r2, r2, lr
90019c6e:	eba1 0108 	sub.w	r1, r1, r8
90019c72:	4372      	muls	r2, r6
90019c74:	b289      	uxth	r1, r1
90019c76:	fa0f f881 	sxth.w	r8, r1
90019c7a:	fb08 f707 	mul.w	r7, r8, r7
90019c7e:	42ba      	cmp	r2, r7
90019c80:	dc06      	bgt.n	90019c90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
90019c82:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
90019c86:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
90019c8a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90019c8e:	e7ca      	b.n	90019c26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
90019c90:	4429      	add	r1, r5
90019c92:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
90019c96:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90019c9a:	e651      	b.n	90019940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019c9c:	9805      	ldr	r0, [sp, #20]
90019c9e:	2d06      	cmp	r5, #6
90019ca0:	ebaa 0000 	sub.w	r0, sl, r0
90019ca4:	b280      	uxth	r0, r0
90019ca6:	fa0f fe80 	sxth.w	lr, r0
90019caa:	d817      	bhi.n	90019cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90019cac:	9b04      	ldr	r3, [sp, #16]
90019cae:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90019cb2:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
90019cb6:	1c6b      	adds	r3, r5, #1
90019cb8:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90019cbc:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90019cc0:	9b01      	ldr	r3, [sp, #4]
90019cc2:	9801      	ldr	r0, [sp, #4]
90019cc4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90019cc8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90019ccc:	805a      	strh	r2, [r3, #2]
90019cce:	809e      	strh	r6, [r3, #4]
90019cd0:	80d9      	strh	r1, [r3, #6]
90019cd2:	9b02      	ldr	r3, [sp, #8]
90019cd4:	3c08      	subs	r4, #8
90019cd6:	3b01      	subs	r3, #1
90019cd8:	9302      	str	r3, [sp, #8]
90019cda:	e747      	b.n	90019b6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90019cdc:	9a02      	ldr	r2, [sp, #8]
90019cde:	45b6      	cmp	lr, r6
90019ce0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90019ce4:	db0d      	blt.n	90019d02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90019ce6:	449c      	add	ip, r3
90019ce8:	445a      	add	r2, fp
90019cea:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90019cee:	fa1f fc8c 	uxth.w	ip, ip
90019cf2:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
90019cf6:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
90019cfa:	448c      	add	ip, r1
90019cfc:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90019d00:	e61e      	b.n	90019940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019d02:	445a      	add	r2, fp
90019d04:	4484      	add	ip, r0
90019d06:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
90019d0a:	e78f      	b.n	90019c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90019d0c:	fa1f f18e 	uxth.w	r1, lr
90019d10:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90019d14:	b293      	uxth	r3, r2
90019d16:	4596      	cmp	lr, r2
90019d18:	eb01 0806 	add.w	r8, r1, r6
90019d1c:	9306      	str	r3, [sp, #24]
90019d1e:	fa1f f888 	uxth.w	r8, r8
90019d22:	9f06      	ldr	r7, [sp, #24]
90019d24:	fa0f f388 	sxth.w	r3, r8
90019d28:	9307      	str	r3, [sp, #28]
90019d2a:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90019d2e:	443b      	add	r3, r7
90019d30:	b29b      	uxth	r3, r3
90019d32:	9308      	str	r3, [sp, #32]
90019d34:	da24      	bge.n	90019d80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90019d36:	9905      	ldr	r1, [sp, #20]
90019d38:	eba3 0308 	sub.w	r3, r3, r8
90019d3c:	eba2 020e 	sub.w	r2, r2, lr
90019d40:	eba9 0000 	sub.w	r0, r9, r0
90019d44:	ebaa 0401 	sub.w	r4, sl, r1
90019d48:	b29b      	uxth	r3, r3
90019d4a:	b2a4      	uxth	r4, r4
90019d4c:	b219      	sxth	r1, r3
90019d4e:	b225      	sxth	r5, r4
90019d50:	4348      	muls	r0, r1
90019d52:	436a      	muls	r2, r5
90019d54:	4282      	cmp	r2, r0
90019d56:	9a02      	ldr	r2, [sp, #8]
90019d58:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90019d5c:	445a      	add	r2, fp
90019d5e:	dc06      	bgt.n	90019d6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
90019d60:	9b07      	ldr	r3, [sp, #28]
90019d62:	44a4      	add	ip, r4
90019d64:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
90019d68:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
90019d6c:	e75e      	b.n	90019c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90019d6e:	9904      	ldr	r1, [sp, #16]
90019d70:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
90019d74:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
90019d78:	4433      	add	r3, r6
90019d7a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90019d7e:	e5df      	b.n	90019940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019d80:	9f06      	ldr	r7, [sp, #24]
90019d82:	9b04      	ldr	r3, [sp, #16]
90019d84:	1bc9      	subs	r1, r1, r7
90019d86:	fa0f f78a 	sxth.w	r7, sl
90019d8a:	b289      	uxth	r1, r1
90019d8c:	429f      	cmp	r7, r3
90019d8e:	fa0f fe81 	sxth.w	lr, r1
90019d92:	dd23      	ble.n	90019ddc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90019d94:	9a05      	ldr	r2, [sp, #20]
90019d96:	eba9 0000 	sub.w	r0, r9, r0
90019d9a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90019d9e:	ebaa 0202 	sub.w	r2, sl, r2
90019da2:	9d07      	ldr	r5, [sp, #28]
90019da4:	fb0e f000 	mul.w	r0, lr, r0
90019da8:	b292      	uxth	r2, r2
90019daa:	eba5 0a03 	sub.w	sl, r5, r3
90019dae:	9b02      	ldr	r3, [sp, #8]
90019db0:	b214      	sxth	r4, r2
90019db2:	00db      	lsls	r3, r3, #3
90019db4:	fb04 fa0a 	mul.w	sl, r4, sl
90019db8:	445b      	add	r3, fp
90019dba:	4550      	cmp	r0, sl
90019dbc:	db03      	blt.n	90019dc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
90019dbe:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90019dc2:	4494      	add	ip, r2
90019dc4:	e732      	b.n	90019c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90019dc6:	9a04      	ldr	r2, [sp, #16]
90019dc8:	4431      	add	r1, r6
90019dca:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90019dce:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90019dd2:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
90019dd6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90019dda:	e75c      	b.n	90019c96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90019ddc:	9b08      	ldr	r3, [sp, #32]
90019dde:	2d06      	cmp	r5, #6
90019de0:	eba3 0308 	sub.w	r3, r3, r8
90019de4:	b29b      	uxth	r3, r3
90019de6:	b218      	sxth	r0, r3
90019de8:	d813      	bhi.n	90019e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90019dea:	9b07      	ldr	r3, [sp, #28]
90019dec:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90019df0:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90019df4:	1c6b      	adds	r3, r5, #1
90019df6:	9901      	ldr	r1, [sp, #4]
90019df8:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90019dfc:	9b01      	ldr	r3, [sp, #4]
90019dfe:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90019e02:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90019e06:	805a      	strh	r2, [r3, #2]
90019e08:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90019e0a:	f8a3 e006 	strh.w	lr, [r3, #6]
90019e0e:	809a      	strh	r2, [r3, #4]
90019e10:	e75f      	b.n	90019cd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90019e12:	9c02      	ldr	r4, [sp, #8]
90019e14:	4570      	cmp	r0, lr
90019e16:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90019e1a:	db0d      	blt.n	90019e38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90019e1c:	4431      	add	r1, r6
90019e1e:	9b06      	ldr	r3, [sp, #24]
90019e20:	445c      	add	r4, fp
90019e22:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
90019e26:	b289      	uxth	r1, r1
90019e28:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
90019e2c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
90019e30:	4419      	add	r1, r3
90019e32:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
90019e36:	e583      	b.n	90019940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019e38:	445c      	add	r4, fp
90019e3a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
90019e3e:	e79b      	b.n	90019d78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
90019e40:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
90019e44:	f64f 76ff 	movw	r6, #65535	@ 0xffff
90019e48:	1e65      	subs	r5, r4, #1
90019e4a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
90019e4e:	b2ad      	uxth	r5, r5
90019e50:	42b5      	cmp	r5, r6
90019e52:	d044      	beq.n	90019ede <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90019e54:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90019e58:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
90019e5c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90019e60:	4282      	cmp	r2, r0
90019e62:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
90019e66:	d11f      	bne.n	90019ea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90019e68:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
90019e6c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90019e70:	459c      	cmp	ip, r3
90019e72:	d119      	bne.n	90019ea8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90019e74:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
90019e78:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90019e7c:	19d8      	adds	r0, r3, r7
90019e7e:	b200      	sxth	r0, r0
90019e80:	4288      	cmp	r0, r1
90019e82:	d109      	bne.n	90019e98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90019e84:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
90019e88:	4413      	add	r3, r2
90019e8a:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90019e8e:	4629      	mov	r1, r5
90019e90:	9801      	ldr	r0, [sp, #4]
90019e92:	f7ff fd2b 	bl	900198ec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019e96:	e003      	b.n	90019ea0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019e98:	4411      	add	r1, r2
90019e9a:	b209      	sxth	r1, r1
90019e9c:	42b9      	cmp	r1, r7
90019e9e:	d0f3      	beq.n	90019e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
90019ea0:	3d01      	subs	r5, #1
90019ea2:	3c08      	subs	r4, #8
90019ea4:	b2ad      	uxth	r5, r5
90019ea6:	e7d3      	b.n	90019e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90019ea8:	42b9      	cmp	r1, r7
90019eaa:	d1f9      	bne.n	90019ea0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019eac:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90019eb0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90019eb4:	4299      	cmp	r1, r3
90019eb6:	d1f3      	bne.n	90019ea0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019eb8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90019ebc:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90019ec0:	181f      	adds	r7, r3, r0
90019ec2:	b23f      	sxth	r7, r7
90019ec4:	42ba      	cmp	r2, r7
90019ec6:	d105      	bne.n	90019ed4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90019ec8:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90019ecc:	440b      	add	r3, r1
90019ece:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90019ed2:	e7dc      	b.n	90019e8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90019ed4:	440a      	add	r2, r1
90019ed6:	b212      	sxth	r2, r2
90019ed8:	4290      	cmp	r0, r2
90019eda:	d1e1      	bne.n	90019ea0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90019edc:	e7f6      	b.n	90019ecc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
90019ede:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90019ee2:	2e07      	cmp	r6, #7
90019ee4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90019ee8:	d812      	bhi.n	90019f10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90019eea:	1c75      	adds	r5, r6, #1
90019eec:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90019ef0:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90019ef4:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90019ef8:	9d01      	ldr	r5, [sp, #4]
90019efa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90019efe:	442c      	add	r4, r5
90019f00:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90019f04:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90019f08:	8061      	strh	r1, [r4, #2]
90019f0a:	80a2      	strh	r2, [r4, #4]
90019f0c:	80e3      	strh	r3, [r4, #6]
90019f0e:	e581      	b.n	90019a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
90019f10:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90019f14:	3e01      	subs	r6, #1
90019f16:	445c      	add	r4, fp
90019f18:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90019f1c:	f04f 37ff 	mov.w	r7, #4294967295
90019f20:	2500      	movs	r5, #0
90019f22:	9305      	str	r3, [sp, #20]
90019f24:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90019f28:	1e72      	subs	r2, r6, #1
90019f2a:	9302      	str	r3, [sp, #8]
90019f2c:	4691      	mov	r9, r2
90019f2e:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90019f32:	9304      	str	r3, [sp, #16]
90019f34:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90019f38:	f1b9 3fff 	cmp.w	r9, #4294967295
90019f3c:	6818      	ldr	r0, [r3, #0]
90019f3e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90019f42:	9207      	str	r2, [sp, #28]
90019f44:	bf16      	itet	ne
90019f46:	9905      	ldrne	r1, [sp, #20]
90019f48:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90019f4c:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90019f50:	9306      	str	r3, [sp, #24]
90019f52:	f8be 1006 	ldrh.w	r1, [lr, #6]
90019f56:	f8be 8004 	ldrh.w	r8, [lr, #4]
90019f5a:	fb18 f801 	smulbb	r8, r8, r1
90019f5e:	6859      	ldr	r1, [r3, #4]
90019f60:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90019f64:	4671      	mov	r1, lr
90019f66:	a80c      	add	r0, sp, #48	@ 0x30
90019f68:	f7ff fb6a 	bl	90019640 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90019f6c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90019f70:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90019f74:	f04f 0c08 	mov.w	ip, #8
90019f78:	9b04      	ldr	r3, [sp, #16]
90019f7a:	9a02      	ldr	r2, [sp, #8]
90019f7c:	fb10 f001 	smulbb	r0, r0, r1
90019f80:	fb02 8803 	mla	r8, r2, r3, r8
90019f84:	eba0 0108 	sub.w	r1, r0, r8
90019f88:	fb90 f0fc 	sdiv	r0, r0, ip
90019f8c:	4288      	cmp	r0, r1
90019f8e:	dc20      	bgt.n	90019fd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90019f90:	4551      	cmp	r1, sl
90019f92:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90019f96:	da03      	bge.n	90019fa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90019f98:	b1d9      	cbz	r1, 90019fd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90019f9a:	468a      	mov	sl, r1
90019f9c:	464f      	mov	r7, r9
90019f9e:	4635      	mov	r5, r6
90019fa0:	f109 39ff 	add.w	r9, r9, #4294967295
90019fa4:	f119 0f02 	cmn.w	r9, #2
90019fa8:	d1c6      	bne.n	90019f38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90019faa:	4616      	mov	r6, r2
90019fac:	3201      	adds	r2, #1
90019fae:	f1a4 0408 	sub.w	r4, r4, #8
90019fb2:	d1b7      	bne.n	90019f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90019fb4:	9b01      	ldr	r3, [sp, #4]
90019fb6:	b2ac      	uxth	r4, r5
90019fb8:	00ed      	lsls	r5, r5, #3
90019fba:	1958      	adds	r0, r3, r5
90019fbc:	1c7b      	adds	r3, r7, #1
90019fbe:	d10b      	bne.n	90019fd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90019fc0:	4601      	mov	r1, r0
90019fc2:	9803      	ldr	r0, [sp, #12]
90019fc4:	f7ff fb3c 	bl	90019640 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90019fc8:	4621      	mov	r1, r4
90019fca:	9801      	ldr	r0, [sp, #4]
90019fcc:	f7ff fc8e 	bl	900198ec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90019fd0:	e4b6      	b.n	90019940 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90019fd2:	464f      	mov	r7, r9
90019fd4:	4635      	mov	r5, r6
90019fd6:	e7ed      	b.n	90019fb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90019fd8:	9b01      	ldr	r3, [sp, #4]
90019fda:	00ff      	lsls	r7, r7, #3
90019fdc:	445d      	add	r5, fp
90019fde:	19d9      	adds	r1, r3, r7
90019fe0:	445f      	add	r7, fp
90019fe2:	f7ff fb2d 	bl	90019640 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90019fe6:	9b03      	ldr	r3, [sp, #12]
90019fe8:	cb03      	ldmia	r3!, {r0, r1}
90019fea:	9b03      	ldr	r3, [sp, #12]
90019fec:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90019ff0:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90019ff4:	f855 0fac 	ldr.w	r0, [r5, #172]!
90019ff8:	6869      	ldr	r1, [r5, #4]
90019ffa:	c303      	stmia	r3!, {r0, r1}
90019ffc:	e7e4      	b.n	90019fc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
90019ffe:	bf00      	nop

9001a000 <_ZN8touchgfx11Application15drawCachedAreasEv>:
9001a000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a004:	f500 7698 	add.w	r6, r0, #304	@ 0x130
9001a008:	b09b      	sub	sp, #108	@ 0x6c
9001a00a:	4604      	mov	r4, r0
9001a00c:	4630      	mov	r0, r6
9001a00e:	f7f9 faac 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
9001a012:	4605      	mov	r5, r0
9001a014:	b948      	cbnz	r0, 9001a02a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
9001a016:	6823      	ldr	r3, [r4, #0]
9001a018:	4620      	mov	r0, r4
9001a01a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001a01c:	e896 0006 	ldmia.w	r6, {r1, r2}
9001a020:	4798      	blx	r3
9001a022:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
9001a026:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
9001a02a:	4bc5      	ldr	r3, [pc, #788]	@ (9001a340 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
9001a02c:	681b      	ldr	r3, [r3, #0]
9001a02e:	2b00      	cmp	r3, #0
9001a030:	d03f      	beq.n	9001a0b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001a032:	4dc4      	ldr	r5, [pc, #784]	@ (9001a344 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
9001a034:	4628      	mov	r0, r5
9001a036:	f7f9 fa98 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
9001a03a:	4606      	mov	r6, r0
9001a03c:	2800      	cmp	r0, #0
9001a03e:	d138      	bne.n	9001a0b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001a040:	4628      	mov	r0, r5
9001a042:	f7ff f9b1 	bl	900193a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001a046:	6823      	ldr	r3, [r4, #0]
9001a048:	6829      	ldr	r1, [r5, #0]
9001a04a:	4620      	mov	r0, r4
9001a04c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001a04e:	686a      	ldr	r2, [r5, #4]
9001a050:	4798      	blx	r3
9001a052:	802e      	strh	r6, [r5, #0]
9001a054:	806e      	strh	r6, [r5, #2]
9001a056:	80ae      	strh	r6, [r5, #4]
9001a058:	80ee      	strh	r6, [r5, #6]
9001a05a:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
9001a05e:	4dba      	ldr	r5, [pc, #744]	@ (9001a348 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
9001a060:	4640      	mov	r0, r8
9001a062:	f7ff fbe7 	bl	90019834 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
9001a066:	882e      	ldrh	r6, [r5, #0]
9001a068:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
9001a06c:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
9001a070:	4633      	mov	r3, r6
9001a072:	42bb      	cmp	r3, r7
9001a074:	d224      	bcs.n	9001a0c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001a076:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
9001a07a:	2907      	cmp	r1, #7
9001a07c:	d816      	bhi.n	9001a0ac <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
9001a07e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001a082:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
9001a086:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
9001a08a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
9001a08e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
9001a092:	1c4a      	adds	r2, r1, #1
9001a094:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
9001a098:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
9001a09c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
9001a0a0:	f8a2 a002 	strh.w	sl, [r2, #2]
9001a0a4:	f8a2 e004 	strh.w	lr, [r2, #4]
9001a0a8:	f8a2 c006 	strh.w	ip, [r2, #6]
9001a0ac:	3301      	adds	r3, #1
9001a0ae:	b29b      	uxth	r3, r3
9001a0b0:	e7df      	b.n	9001a072 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
9001a0b2:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001a0b6:	2b00      	cmp	r3, #0
9001a0b8:	d1cf      	bne.n	9001a05a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
9001a0ba:	b01b      	add	sp, #108	@ 0x6c
9001a0bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a0c0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
9001a0c4:	42b3      	cmp	r3, r6
9001a0c6:	d90c      	bls.n	9001a0e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
9001a0c8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
9001a0cc:	6822      	ldr	r2, [r4, #0]
9001a0ce:	3601      	adds	r6, #1
9001a0d0:	4620      	mov	r0, r4
9001a0d2:	6c17      	ldr	r7, [r2, #64]	@ 0x40
9001a0d4:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
9001a0d8:	b2b6      	uxth	r6, r6
9001a0da:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
9001a0de:	47b8      	blx	r7
9001a0e0:	e7ee      	b.n	9001a0c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001a0e2:	4a9a      	ldr	r2, [pc, #616]	@ (9001a34c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001a0e4:	6813      	ldr	r3, [r2, #0]
9001a0e6:	4691      	mov	r9, r2
9001a0e8:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
9001a0ec:	2b01      	cmp	r3, #1
9001a0ee:	f040 80e0 	bne.w	9001a2b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
9001a0f2:	8829      	ldrh	r1, [r5, #0]
9001a0f4:	2600      	movs	r6, #0
9001a0f6:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
9001a0fa:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
9001a0fe:	33ae      	adds	r3, #174	@ 0xae
9001a100:	428f      	cmp	r7, r1
9001a102:	f103 0308 	add.w	r3, r3, #8
9001a106:	dd0a      	ble.n	9001a11e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
9001a108:	f833 2c04 	ldrh.w	r2, [r3, #-4]
9001a10c:	3101      	adds	r1, #1
9001a10e:	f833 0c08 	ldrh.w	r0, [r3, #-8]
9001a112:	4402      	add	r2, r0
9001a114:	b212      	sxth	r2, r2
9001a116:	4296      	cmp	r6, r2
9001a118:	bfb8      	it	lt
9001a11a:	4616      	movlt	r6, r2
9001a11c:	e7f0      	b.n	9001a100 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
9001a11e:	4b8c      	ldr	r3, [pc, #560]	@ (9001a350 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
9001a120:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 9001a34c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
9001a124:	881b      	ldrh	r3, [r3, #0]
9001a126:	2b0f      	cmp	r3, #15
9001a128:	bf8c      	ite	hi
9001a12a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
9001a12e:	f04f 0b01 	movls.w	fp, #1
9001a132:	2300      	movs	r3, #0
9001a134:	e9cd 3305 	strd	r3, r3, [sp, #20]
9001a138:	f8bd 7016 	ldrh.w	r7, [sp, #22]
9001a13c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
9001a140:	4b82      	ldr	r3, [pc, #520]	@ (9001a34c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001a142:	4438      	add	r0, r7
9001a144:	b207      	sxth	r7, r0
9001a146:	6818      	ldr	r0, [r3, #0]
9001a148:	42b7      	cmp	r7, r6
9001a14a:	6803      	ldr	r3, [r0, #0]
9001a14c:	f280 8083 	bge.w	9001a256 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
9001a150:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
9001a154:	4798      	blx	r3
9001a156:	eb07 030b 	add.w	r3, r7, fp
9001a15a:	4298      	cmp	r0, r3
9001a15c:	da07      	bge.n	9001a16e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001a15e:	42b0      	cmp	r0, r6
9001a160:	da05      	bge.n	9001a16e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001a162:	4287      	cmp	r7, r0
9001a164:	dd6c      	ble.n	9001a240 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001a166:	2f00      	cmp	r7, #0
9001a168:	dd6a      	ble.n	9001a240 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
9001a16a:	4630      	mov	r0, r6
9001a16c:	e004      	b.n	9001a178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
9001a16e:	4287      	cmp	r7, r0
9001a170:	dcfb      	bgt.n	9001a16a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
9001a172:	42b0      	cmp	r0, r6
9001a174:	bfa8      	it	ge
9001a176:	4630      	movge	r0, r6
9001a178:	4b76      	ldr	r3, [pc, #472]	@ (9001a354 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
9001a17a:	1bc0      	subs	r0, r0, r7
9001a17c:	2200      	movs	r2, #0
9001a17e:	f8ad 7016 	strh.w	r7, [sp, #22]
9001a182:	f9b3 3000 	ldrsh.w	r3, [r3]
9001a186:	882f      	ldrh	r7, [r5, #0]
9001a188:	f8ad 2014 	strh.w	r2, [sp, #20]
9001a18c:	f8ad 3018 	strh.w	r3, [sp, #24]
9001a190:	f8ad 001a 	strh.w	r0, [sp, #26]
9001a194:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001a198:	42bb      	cmp	r3, r7
9001a19a:	d9cd      	bls.n	9001a138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
9001a19c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
9001a1a0:	ab07      	add	r3, sp, #28
9001a1a2:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001a1a6:	6851      	ldr	r1, [r2, #4]
9001a1a8:	c303      	stmia	r3!, {r0, r1}
9001a1aa:	a905      	add	r1, sp, #20
9001a1ac:	a807      	add	r0, sp, #28
9001a1ae:	f7fc fc2b 	bl	90016a08 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001a1b2:	2800      	cmp	r0, #0
9001a1b4:	d04c      	beq.n	9001a250 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
9001a1b6:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
9001a1ba:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
9001a1be:	f8bd a020 	ldrh.w	sl, [sp, #32]
9001a1c2:	4686      	mov	lr, r0
9001a1c4:	4290      	cmp	r0, r2
9001a1c6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
9001a1ca:	4450      	add	r0, sl
9001a1cc:	f8bd a018 	ldrh.w	sl, [sp, #24]
9001a1d0:	bfb8      	it	lt
9001a1d2:	4696      	movlt	lr, r2
9001a1d4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001a1d8:	4452      	add	r2, sl
9001a1da:	b280      	uxth	r0, r0
9001a1dc:	4299      	cmp	r1, r3
9001a1de:	468c      	mov	ip, r1
9001a1e0:	b292      	uxth	r2, r2
9001a1e2:	9302      	str	r3, [sp, #8]
9001a1e4:	bfb8      	it	lt
9001a1e6:	469c      	movlt	ip, r3
9001a1e8:	b203      	sxth	r3, r0
9001a1ea:	fa0f fa82 	sxth.w	sl, r2
9001a1ee:	f8ad e01c 	strh.w	lr, [sp, #28]
9001a1f2:	f8ad c01e 	strh.w	ip, [sp, #30]
9001a1f6:	4553      	cmp	r3, sl
9001a1f8:	bfb8      	it	lt
9001a1fa:	4602      	movlt	r2, r0
9001a1fc:	9b02      	ldr	r3, [sp, #8]
9001a1fe:	eba2 020e 	sub.w	r2, r2, lr
9001a202:	f8ad 2020 	strh.w	r2, [sp, #32]
9001a206:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001a20a:	4411      	add	r1, r2
9001a20c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001a210:	4413      	add	r3, r2
9001a212:	b289      	uxth	r1, r1
9001a214:	b29b      	uxth	r3, r3
9001a216:	b208      	sxth	r0, r1
9001a218:	b21a      	sxth	r2, r3
9001a21a:	4290      	cmp	r0, r2
9001a21c:	bfb8      	it	lt
9001a21e:	460b      	movlt	r3, r1
9001a220:	eba3 030c 	sub.w	r3, r3, ip
9001a224:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001a228:	a807      	add	r0, sp, #28
9001a22a:	f7f9 f99e 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
9001a22e:	b920      	cbnz	r0, 9001a23a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
9001a230:	6823      	ldr	r3, [r4, #0]
9001a232:	a907      	add	r1, sp, #28
9001a234:	4620      	mov	r0, r4
9001a236:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a238:	4798      	blx	r3
9001a23a:	3701      	adds	r7, #1
9001a23c:	b2bf      	uxth	r7, r7
9001a23e:	e7a9      	b.n	9001a194 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
9001a240:	f8d9 0000 	ldr.w	r0, [r9]
9001a244:	2101      	movs	r1, #1
9001a246:	6803      	ldr	r3, [r0, #0]
9001a248:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
9001a24c:	4798      	blx	r3
9001a24e:	e773      	b.n	9001a138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
9001a250:	e9cd 0007 	strd	r0, r0, [sp, #28]
9001a254:	e7e8      	b.n	9001a228 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
9001a256:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001a258:	4798      	blx	r3
9001a25a:	4b3f      	ldr	r3, [pc, #252]	@ (9001a358 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
9001a25c:	781b      	ldrb	r3, [r3, #0]
9001a25e:	2b00      	cmp	r3, #0
9001a260:	f43f af2b 	beq.w	9001a0ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
9001a264:	2300      	movs	r3, #0
9001a266:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
9001a26a:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
9001a26e:	882b      	ldrh	r3, [r5, #0]
9001a270:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001a274:	42ab      	cmp	r3, r5
9001a276:	f4bf af20 	bcs.w	9001a0ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
9001a27a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
9001a27e:	2907      	cmp	r1, #7
9001a280:	d814      	bhi.n	9001a2ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
9001a282:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
9001a286:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
9001a28a:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
9001a28e:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
9001a292:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
9001a296:	1c4a      	adds	r2, r1, #1
9001a298:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
9001a29c:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
9001a2a0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
9001a2a4:	f8a2 c002 	strh.w	ip, [r2, #2]
9001a2a8:	8097      	strh	r7, [r2, #4]
9001a2aa:	80d6      	strh	r6, [r2, #6]
9001a2ac:	3301      	adds	r3, #1
9001a2ae:	b29b      	uxth	r3, r3
9001a2b0:	e7e0      	b.n	9001a274 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
9001a2b2:	2b02      	cmp	r3, #2
9001a2b4:	f040 8133 	bne.w	9001a51e <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
9001a2b8:	4b28      	ldr	r3, [pc, #160]	@ (9001a35c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
9001a2ba:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
9001a2be:	781b      	ldrb	r3, [r3, #0]
9001a2c0:	2b01      	cmp	r3, #1
9001a2c2:	f000 8098 	beq.w	9001a3f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001a2c6:	882a      	ldrh	r2, [r5, #0]
9001a2c8:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
9001a2cc:	3201      	adds	r2, #1
9001a2ce:	b292      	uxth	r2, r2
9001a2d0:	2900      	cmp	r1, #0
9001a2d2:	d0c2      	beq.n	9001a25a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001a2d4:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
9001a2d8:	4694      	mov	ip, r2
9001a2da:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
9001a2de:	f04f 0900 	mov.w	r9, #0
9001a2e2:	441e      	add	r6, r3
9001a2e4:	b236      	sxth	r6, r6
9001a2e6:	fa1f f38c 	uxth.w	r3, ip
9001a2ea:	ea4f 07c9 	mov.w	r7, r9, lsl #3
9001a2ee:	4299      	cmp	r1, r3
9001a2f0:	f240 80be 	bls.w	9001a470 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
9001a2f4:	4427      	add	r7, r4
9001a2f6:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
9001a2fa:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
9001a2fe:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
9001a302:	4283      	cmp	r3, r0
9001a304:	f340 80a0 	ble.w	9001a448 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
9001a308:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
9001a30c:	46e1      	mov	r9, ip
9001a30e:	4406      	add	r6, r0
9001a310:	b236      	sxth	r6, r6
9001a312:	429e      	cmp	r6, r3
9001a314:	bfa8      	it	ge
9001a316:	461e      	movge	r6, r3
9001a318:	f10c 0c01 	add.w	ip, ip, #1
9001a31c:	e7e3      	b.n	9001a2e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
9001a31e:	d10a      	bne.n	9001a336 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
9001a320:	4562      	cmp	r2, ip
9001a322:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
9001a326:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
9001a32a:	bfb8      	it	lt
9001a32c:	4662      	movlt	r2, ip
9001a32e:	4288      	cmp	r0, r1
9001a330:	bfb8      	it	lt
9001a332:	461f      	movlt	r7, r3
9001a334:	e086      	b.n	9001a444 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
9001a336:	428a      	cmp	r2, r1
9001a338:	bfb8      	it	lt
9001a33a:	460a      	movlt	r2, r1
9001a33c:	e082      	b.n	9001a444 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
9001a33e:	bf00      	nop
9001a340:	240245d8 	.word	0x240245d8
9001a344:	240245e4 	.word	0x240245e4
9001a348:	240002a8 	.word	0x240002a8
9001a34c:	24024598 	.word	0x24024598
9001a350:	2402458c 	.word	0x2402458c
9001a354:	2402458a 	.word	0x2402458a
9001a358:	24024594 	.word	0x24024594
9001a35c:	2402458e 	.word	0x2402458e
9001a360:	19a1      	adds	r1, r4, r6
9001a362:	ab07      	add	r3, sp, #28
9001a364:	f851 0fac 	ldr.w	r0, [r1, #172]!
9001a368:	6849      	ldr	r1, [r1, #4]
9001a36a:	c303      	stmia	r3!, {r0, r1}
9001a36c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001a370:	a807      	add	r0, sp, #28
9001a372:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001a376:	2b13      	cmp	r3, #19
9001a378:	440b      	add	r3, r1
9001a37a:	bfd8      	it	le
9001a37c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
9001a380:	1a9b      	subs	r3, r3, r2
9001a382:	f8ad 201c 	strh.w	r2, [sp, #28]
9001a386:	f8ad 3020 	strh.w	r3, [sp, #32]
9001a38a:	f7ff f827 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001a38e:	a807      	add	r0, sp, #28
9001a390:	f7f9 f8eb 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
9001a394:	bb78      	cbnz	r0, 9001a3f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001a396:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
9001a39a:	4426      	add	r6, r4
9001a39c:	f8d9 0000 	ldr.w	r0, [r9]
9001a3a0:	f1bc 0f14 	cmp.w	ip, #20
9001a3a4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9001a3a8:	f8d0 e000 	ldr.w	lr, [r0]
9001a3ac:	bfa8      	it	ge
9001a3ae:	f04f 0c14 	movge.w	ip, #20
9001a3b2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
9001a3b6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
9001a3ba:	fa1f fc8c 	uxth.w	ip, ip
9001a3be:	f8cd c000 	str.w	ip, [sp]
9001a3c2:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
9001a3c6:	47d8      	blx	fp
9001a3c8:	4683      	mov	fp, r0
9001a3ca:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001a3ce:	a807      	add	r0, sp, #28
9001a3d0:	f7fe ffea 	bl	900193a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
9001a3d4:	6823      	ldr	r3, [r4, #0]
9001a3d6:	4620      	mov	r0, r4
9001a3d8:	a907      	add	r1, sp, #28
9001a3da:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a3dc:	4798      	blx	r3
9001a3de:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
9001a3e2:	eba0 000b 	sub.w	r0, r0, fp
9001a3e6:	b200      	sxth	r0, r0
9001a3e8:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
9001a3ec:	b918      	cbnz	r0, 9001a3f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
9001a3ee:	b2b9      	uxth	r1, r7
9001a3f0:	4650      	mov	r0, sl
9001a3f2:	f7ff fa7b 	bl	900198ec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001a3f6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
9001a3fa:	f1bb 0f00 	cmp.w	fp, #0
9001a3fe:	f43f af2c 	beq.w	9001a25a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001a402:	882b      	ldrh	r3, [r5, #0]
9001a404:	2700      	movs	r7, #0
9001a406:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
9001a40a:	3301      	adds	r3, #1
9001a40c:	b29b      	uxth	r3, r3
9001a40e:	b299      	uxth	r1, r3
9001a410:	00fe      	lsls	r6, r7, #3
9001a412:	458b      	cmp	fp, r1
9001a414:	d9a4      	bls.n	9001a360 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
9001a416:	4426      	add	r6, r4
9001a418:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
9001a41c:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
9001a420:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
9001a424:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
9001a428:	4408      	add	r0, r1
9001a42a:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
9001a42e:	4461      	add	r1, ip
9001a430:	b200      	sxth	r0, r0
9001a432:	b209      	sxth	r1, r1
9001a434:	4288      	cmp	r0, r1
9001a436:	f6bf af72 	bge.w	9001a31e <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
9001a43a:	4584      	cmp	ip, r0
9001a43c:	4662      	mov	r2, ip
9001a43e:	461f      	mov	r7, r3
9001a440:	bfb8      	it	lt
9001a442:	4602      	movlt	r2, r0
9001a444:	3301      	adds	r3, #1
9001a446:	e7e2      	b.n	9001a40e <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
9001a448:	d10e      	bne.n	9001a468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
9001a44a:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
9001a44e:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
9001a452:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
9001a456:	4473      	add	r3, lr
9001a458:	b21b      	sxth	r3, r3
9001a45a:	429e      	cmp	r6, r3
9001a45c:	bfa8      	it	ge
9001a45e:	461e      	movge	r6, r3
9001a460:	4287      	cmp	r7, r0
9001a462:	bfb8      	it	lt
9001a464:	46e1      	movlt	r9, ip
9001a466:	e757      	b.n	9001a318 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
9001a468:	4286      	cmp	r6, r0
9001a46a:	bfa8      	it	ge
9001a46c:	4606      	movge	r6, r0
9001a46e:	e753      	b.n	9001a318 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
9001a470:	eb0a 0007 	add.w	r0, sl, r7
9001a474:	4427      	add	r7, r4
9001a476:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
9001a47a:	f1bb 0f13 	cmp.w	fp, #19
9001a47e:	bfdc      	itt	le
9001a480:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
9001a484:	445e      	addle	r6, fp
9001a486:	e9cd 2102 	strd	r2, r1, [sp, #8]
9001a48a:	bfd8      	it	le
9001a48c:	b236      	sxthle	r6, r6
9001a48e:	f7f9 f86c 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
9001a492:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
9001a496:	2800      	cmp	r0, #0
9001a498:	f47f af1a 	bne.w	9001a2d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
9001a49c:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
9001a4a0:	fa1f fb8b 	uxth.w	fp, fp
9001a4a4:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001a4a8:	1ab6      	subs	r6, r6, r2
9001a4aa:	4829      	ldr	r0, [pc, #164]	@ (9001a550 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
9001a4ac:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
9001a4b0:	2e14      	cmp	r6, #20
9001a4b2:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
9001a4b6:	6800      	ldr	r0, [r0, #0]
9001a4b8:	bfa8      	it	ge
9001a4ba:	2614      	movge	r6, #20
9001a4bc:	f8ad 101c 	strh.w	r1, [sp, #28]
9001a4c0:	f8ad 201e 	strh.w	r2, [sp, #30]
9001a4c4:	b289      	uxth	r1, r1
9001a4c6:	f8ad 3020 	strh.w	r3, [sp, #32]
9001a4ca:	b2b6      	uxth	r6, r6
9001a4cc:	f8d0 c000 	ldr.w	ip, [r0]
9001a4d0:	b292      	uxth	r2, r2
9001a4d2:	455e      	cmp	r6, fp
9001a4d4:	bf94      	ite	ls
9001a4d6:	9600      	strls	r6, [sp, #0]
9001a4d8:	f8cd b000 	strhi.w	fp, [sp]
9001a4dc:	b29b      	uxth	r3, r3
9001a4de:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
9001a4e2:	47b0      	blx	r6
9001a4e4:	6823      	ldr	r3, [r4, #0]
9001a4e6:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
9001a4ea:	a907      	add	r1, sp, #28
9001a4ec:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a4ee:	4620      	mov	r0, r4
9001a4f0:	4798      	blx	r3
9001a4f2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
9001a4f6:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
9001a4fa:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
9001a4fe:	1a5b      	subs	r3, r3, r1
9001a500:	440a      	add	r2, r1
9001a502:	b21b      	sxth	r3, r3
9001a504:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
9001a508:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
9001a50c:	2b00      	cmp	r3, #0
9001a50e:	f47f aeda 	bne.w	9001a2c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001a512:	fa1f f189 	uxth.w	r1, r9
9001a516:	4650      	mov	r0, sl
9001a518:	f7ff f9e8 	bl	900198ec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001a51c:	e6d3      	b.n	9001a2c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
9001a51e:	882e      	ldrh	r6, [r5, #0]
9001a520:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
9001a524:	42b3      	cmp	r3, r6
9001a526:	f67f ae98 	bls.w	9001a25a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
9001a52a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
9001a52e:	ab07      	add	r3, sp, #28
9001a530:	f852 0fac 	ldr.w	r0, [r2, #172]!
9001a534:	6851      	ldr	r1, [r2, #4]
9001a536:	c303      	stmia	r3!, {r0, r1}
9001a538:	a807      	add	r0, sp, #28
9001a53a:	f7f9 f816 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
9001a53e:	b920      	cbnz	r0, 9001a54a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
9001a540:	6823      	ldr	r3, [r4, #0]
9001a542:	a907      	add	r1, sp, #28
9001a544:	4620      	mov	r0, r4
9001a546:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001a548:	4798      	blx	r3
9001a54a:	3601      	adds	r6, #1
9001a54c:	b2b6      	uxth	r6, r6
9001a54e:	e7e7      	b.n	9001a520 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
9001a550:	24024598 	.word	0x24024598

9001a554 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
9001a554:	4b03      	ldr	r3, [pc, #12]	@ (9001a564 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001a556:	2200      	movs	r2, #0
9001a558:	801a      	strh	r2, [r3, #0]
9001a55a:	805a      	strh	r2, [r3, #2]
9001a55c:	809a      	strh	r2, [r3, #4]
9001a55e:	80da      	strh	r2, [r3, #6]
9001a560:	4770      	bx	lr
9001a562:	bf00      	nop
9001a564:	240245e4 	.word	0x240245e4

9001a568 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
9001a568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a56c:	b09d      	sub	sp, #116	@ 0x74
9001a56e:	4606      	mov	r6, r0
9001a570:	4614      	mov	r4, r2
9001a572:	468a      	mov	sl, r1
9001a574:	a803      	add	r0, sp, #12
9001a576:	461d      	mov	r5, r3
9001a578:	f001 f920 	bl	9001b7bc <_ZN8touchgfx12TextProviderC1Ev>
9001a57c:	6833      	ldr	r3, [r6, #0]
9001a57e:	4630      	mov	r0, r6
9001a580:	f242 0b0b 	movw	fp, #8203	@ 0x200b
9001a584:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a586:	4798      	blx	r3
9001a588:	6833      	ldr	r3, [r6, #0]
9001a58a:	4607      	mov	r7, r0
9001a58c:	4630      	mov	r0, r6
9001a58e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a590:	4798      	blx	r3
9001a592:	462a      	mov	r2, r5
9001a594:	2500      	movs	r5, #0
9001a596:	4621      	mov	r1, r4
9001a598:	9000      	str	r0, [sp, #0]
9001a59a:	463b      	mov	r3, r7
9001a59c:	462c      	mov	r4, r5
9001a59e:	46a9      	mov	r9, r5
9001a5a0:	46a8      	mov	r8, r5
9001a5a2:	a803      	add	r0, sp, #12
9001a5a4:	f001 f95d 	bl	9001b862 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a5a8:	2300      	movs	r3, #0
9001a5aa:	9302      	str	r3, [sp, #8]
9001a5ac:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001a5b0:	429c      	cmp	r4, r3
9001a5b2:	d002      	beq.n	9001a5ba <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
9001a5b4:	455c      	cmp	r4, fp
9001a5b6:	bf18      	it	ne
9001a5b8:	4625      	movne	r5, r4
9001a5ba:	ab02      	add	r3, sp, #8
9001a5bc:	4632      	mov	r2, r6
9001a5be:	4651      	mov	r1, sl
9001a5c0:	a803      	add	r0, sp, #12
9001a5c2:	f001 fc43 	bl	9001be4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a5c6:	4604      	mov	r4, r0
9001a5c8:	b108      	cbz	r0, 9001a5ce <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
9001a5ca:	280a      	cmp	r0, #10
9001a5cc:	d10a      	bne.n	9001a5e4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
9001a5ce:	45c1      	cmp	r9, r8
9001a5d0:	bf38      	it	cc
9001a5d2:	46c1      	movcc	r9, r8
9001a5d4:	f04f 0800 	mov.w	r8, #0
9001a5d8:	2c00      	cmp	r4, #0
9001a5da:	d1e5      	bne.n	9001a5a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001a5dc:	4648      	mov	r0, r9
9001a5de:	b01d      	add	sp, #116	@ 0x74
9001a5e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a5e4:	9a02      	ldr	r2, [sp, #8]
9001a5e6:	2a00      	cmp	r2, #0
9001a5e8:	d0de      	beq.n	9001a5a8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
9001a5ea:	7b57      	ldrb	r7, [r2, #13]
9001a5ec:	4629      	mov	r1, r5
9001a5ee:	6833      	ldr	r3, [r6, #0]
9001a5f0:	007f      	lsls	r7, r7, #1
9001a5f2:	8894      	ldrh	r4, [r2, #4]
9001a5f4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001a5f6:	f407 7080 	and.w	r0, r7, #256	@ 0x100
9001a5fa:	7a97      	ldrb	r7, [r2, #10]
9001a5fc:	4307      	orrs	r7, r0
9001a5fe:	4630      	mov	r0, r6
9001a600:	4798      	blx	r3
9001a602:	4438      	add	r0, r7
9001a604:	4480      	add	r8, r0
9001a606:	fa1f f888 	uxth.w	r8, r8
9001a60a:	e7e5      	b.n	9001a5d8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

9001a60c <_ZNK8touchgfx4Font12getCharWidthEt>:
9001a60c:	b508      	push	{r3, lr}
9001a60e:	6803      	ldr	r3, [r0, #0]
9001a610:	68db      	ldr	r3, [r3, #12]
9001a612:	4798      	blx	r3
9001a614:	b128      	cbz	r0, 9001a622 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
9001a616:	7b43      	ldrb	r3, [r0, #13]
9001a618:	7a80      	ldrb	r0, [r0, #10]
9001a61a:	005b      	lsls	r3, r3, #1
9001a61c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001a620:	4318      	orrs	r0, r3
9001a622:	bd08      	pop	{r3, pc}

9001a624 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
9001a624:	b40e      	push	{r1, r2, r3}
9001a626:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a628:	b09e      	sub	sp, #120	@ 0x78
9001a62a:	4605      	mov	r5, r0
9001a62c:	ab23      	add	r3, sp, #140	@ 0x8c
9001a62e:	a805      	add	r0, sp, #20
9001a630:	f853 4b04 	ldr.w	r4, [r3], #4
9001a634:	9303      	str	r3, [sp, #12]
9001a636:	f001 f8c1 	bl	9001b7bc <_ZN8touchgfx12TextProviderC1Ev>
9001a63a:	682b      	ldr	r3, [r5, #0]
9001a63c:	4628      	mov	r0, r5
9001a63e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a640:	4798      	blx	r3
9001a642:	682b      	ldr	r3, [r5, #0]
9001a644:	4606      	mov	r6, r0
9001a646:	4628      	mov	r0, r5
9001a648:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a64a:	4798      	blx	r3
9001a64c:	4633      	mov	r3, r6
9001a64e:	4621      	mov	r1, r4
9001a650:	ae1e      	add	r6, sp, #120	@ 0x78
9001a652:	2400      	movs	r4, #0
9001a654:	9000      	str	r0, [sp, #0]
9001a656:	9a03      	ldr	r2, [sp, #12]
9001a658:	a805      	add	r0, sp, #20
9001a65a:	f001 f902 	bl	9001b862 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a65e:	f846 4d68 	str.w	r4, [r6, #-104]!
9001a662:	462a      	mov	r2, r5
9001a664:	4633      	mov	r3, r6
9001a666:	4621      	mov	r1, r4
9001a668:	a805      	add	r0, sp, #20
9001a66a:	f001 fbef 	bl	9001be4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a66e:	b300      	cbz	r0, 9001a6b2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
9001a670:	280a      	cmp	r0, #10
9001a672:	d01a      	beq.n	9001a6aa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001a674:	9f04      	ldr	r7, [sp, #16]
9001a676:	b1c7      	cbz	r7, 9001a6aa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001a678:	7b78      	ldrb	r0, [r7, #13]
9001a67a:	7a3b      	ldrb	r3, [r7, #8]
9001a67c:	00c1      	lsls	r1, r0, #3
9001a67e:	88ea      	ldrh	r2, [r5, #6]
9001a680:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001a684:	4319      	orrs	r1, r3
9001a686:	0643      	lsls	r3, r0, #25
9001a688:	ea4f 1000 	mov.w	r0, r0, lsl #4
9001a68c:	bf48      	it	mi
9001a68e:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
9001a692:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001a696:	bf48      	it	mi
9001a698:	b219      	sxthmi	r1, r3
9001a69a:	79fb      	ldrb	r3, [r7, #7]
9001a69c:	4303      	orrs	r3, r0
9001a69e:	4413      	add	r3, r2
9001a6a0:	1a5b      	subs	r3, r3, r1
9001a6a2:	b21b      	sxth	r3, r3
9001a6a4:	429c      	cmp	r4, r3
9001a6a6:	bfb8      	it	lt
9001a6a8:	461c      	movlt	r4, r3
9001a6aa:	4633      	mov	r3, r6
9001a6ac:	462a      	mov	r2, r5
9001a6ae:	2100      	movs	r1, #0
9001a6b0:	e7da      	b.n	9001a668 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
9001a6b2:	b2a0      	uxth	r0, r4
9001a6b4:	b01e      	add	sp, #120	@ 0x78
9001a6b6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001a6ba:	b003      	add	sp, #12
9001a6bc:	4770      	bx	lr

9001a6be <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
9001a6be:	7a43      	ldrb	r3, [r0, #9]
9001a6c0:	8880      	ldrh	r0, [r0, #4]
9001a6c2:	4418      	add	r0, r3
9001a6c4:	b280      	uxth	r0, r0
9001a6c6:	4770      	bx	lr

9001a6c8 <_ZNK8touchgfx4Font13getFontHeightEv>:
9001a6c8:	6803      	ldr	r3, [r0, #0]
9001a6ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001a6cc:	4718      	bx	r3

9001a6ce <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
9001a6ce:	b40e      	push	{r1, r2, r3}
9001a6d0:	b570      	push	{r4, r5, r6, lr}
9001a6d2:	b09d      	sub	sp, #116	@ 0x74
9001a6d4:	4604      	mov	r4, r0
9001a6d6:	ab21      	add	r3, sp, #132	@ 0x84
9001a6d8:	a803      	add	r0, sp, #12
9001a6da:	f853 5b04 	ldr.w	r5, [r3], #4
9001a6de:	9302      	str	r3, [sp, #8]
9001a6e0:	f001 f86c 	bl	9001b7bc <_ZN8touchgfx12TextProviderC1Ev>
9001a6e4:	6823      	ldr	r3, [r4, #0]
9001a6e6:	4620      	mov	r0, r4
9001a6e8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a6ea:	4798      	blx	r3
9001a6ec:	6823      	ldr	r3, [r4, #0]
9001a6ee:	4606      	mov	r6, r0
9001a6f0:	4620      	mov	r0, r4
9001a6f2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a6f4:	2401      	movs	r4, #1
9001a6f6:	4798      	blx	r3
9001a6f8:	4633      	mov	r3, r6
9001a6fa:	9000      	str	r0, [sp, #0]
9001a6fc:	4629      	mov	r1, r5
9001a6fe:	9a02      	ldr	r2, [sp, #8]
9001a700:	a803      	add	r0, sp, #12
9001a702:	f001 f8ae 	bl	9001b862 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a706:	a803      	add	r0, sp, #12
9001a708:	f001 fc6c 	bl	9001bfe4 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a70c:	b2a3      	uxth	r3, r4
9001a70e:	b138      	cbz	r0, 9001a720 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
9001a710:	280a      	cmp	r0, #10
9001a712:	a803      	add	r0, sp, #12
9001a714:	bf04      	itt	eq
9001a716:	3301      	addeq	r3, #1
9001a718:	b21c      	sxtheq	r4, r3
9001a71a:	f001 fc63 	bl	9001bfe4 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001a71e:	e7f5      	b.n	9001a70c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
9001a720:	4618      	mov	r0, r3
9001a722:	b01d      	add	sp, #116	@ 0x74
9001a724:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a728:	b003      	add	sp, #12
9001a72a:	4770      	bx	lr

9001a72c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
9001a72c:	b40e      	push	{r1, r2, r3}
9001a72e:	b5f0      	push	{r4, r5, r6, r7, lr}
9001a730:	b09e      	sub	sp, #120	@ 0x78
9001a732:	4604      	mov	r4, r0
9001a734:	ab23      	add	r3, sp, #140	@ 0x8c
9001a736:	a805      	add	r0, sp, #20
9001a738:	f853 5b04 	ldr.w	r5, [r3], #4
9001a73c:	9303      	str	r3, [sp, #12]
9001a73e:	f001 f83d 	bl	9001b7bc <_ZN8touchgfx12TextProviderC1Ev>
9001a742:	6823      	ldr	r3, [r4, #0]
9001a744:	4620      	mov	r0, r4
9001a746:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001a748:	4798      	blx	r3
9001a74a:	6823      	ldr	r3, [r4, #0]
9001a74c:	4606      	mov	r6, r0
9001a74e:	4620      	mov	r0, r4
9001a750:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001a752:	4798      	blx	r3
9001a754:	4633      	mov	r3, r6
9001a756:	4629      	mov	r1, r5
9001a758:	9000      	str	r0, [sp, #0]
9001a75a:	9a03      	ldr	r2, [sp, #12]
9001a75c:	a805      	add	r0, sp, #20
9001a75e:	f001 f880 	bl	9001b862 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001a762:	ad1e      	add	r5, sp, #120	@ 0x78
9001a764:	2100      	movs	r1, #0
9001a766:	f647 76ff 	movw	r6, #32767	@ 0x7fff
9001a76a:	4622      	mov	r2, r4
9001a76c:	a805      	add	r0, sp, #20
9001a76e:	f845 1d68 	str.w	r1, [r5, #-104]!
9001a772:	462b      	mov	r3, r5
9001a774:	f001 fb6a 	bl	9001be4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a778:	b1d8      	cbz	r0, 9001a7b2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
9001a77a:	280a      	cmp	r0, #10
9001a77c:	d012      	beq.n	9001a7a4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001a77e:	9804      	ldr	r0, [sp, #16]
9001a780:	b180      	cbz	r0, 9001a7a4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
9001a782:	7b47      	ldrb	r7, [r0, #13]
9001a784:	88e2      	ldrh	r2, [r4, #6]
9001a786:	00fb      	lsls	r3, r7, #3
9001a788:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001a78c:	7a03      	ldrb	r3, [r0, #8]
9001a78e:	430b      	orrs	r3, r1
9001a790:	0679      	lsls	r1, r7, #25
9001a792:	bf44      	itt	mi
9001a794:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001a798:	b21b      	sxthmi	r3, r3
9001a79a:	1ad3      	subs	r3, r2, r3
9001a79c:	b21b      	sxth	r3, r3
9001a79e:	429e      	cmp	r6, r3
9001a7a0:	bfa8      	it	ge
9001a7a2:	461e      	movge	r6, r3
9001a7a4:	462b      	mov	r3, r5
9001a7a6:	4622      	mov	r2, r4
9001a7a8:	2100      	movs	r1, #0
9001a7aa:	a805      	add	r0, sp, #20
9001a7ac:	f001 fb4e 	bl	9001be4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001a7b0:	e7e2      	b.n	9001a778 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
9001a7b2:	4630      	mov	r0, r6
9001a7b4:	b01e      	add	sp, #120	@ 0x78
9001a7b6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001a7ba:	b003      	add	sp, #12
9001a7bc:	4770      	bx	lr

9001a7be <_ZNK8touchgfx8Drawable10invalidateEv>:
9001a7be:	b513      	push	{r0, r1, r4, lr}
9001a7c0:	6803      	ldr	r3, [r0, #0]
9001a7c2:	2400      	movs	r4, #0
9001a7c4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001a7c8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001a7cc:	f8ad 1004 	strh.w	r1, [sp, #4]
9001a7d0:	4669      	mov	r1, sp
9001a7d2:	691b      	ldr	r3, [r3, #16]
9001a7d4:	9400      	str	r4, [sp, #0]
9001a7d6:	f8ad 2006 	strh.w	r2, [sp, #6]
9001a7da:	4798      	blx	r3
9001a7dc:	b002      	add	sp, #8
9001a7de:	bd10      	pop	{r4, pc}

9001a7e0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001a7e0:	b538      	push	{r3, r4, r5, lr}
9001a7e2:	680b      	ldr	r3, [r1, #0]
9001a7e4:	460c      	mov	r4, r1
9001a7e6:	4605      	mov	r5, r0
9001a7e8:	68db      	ldr	r3, [r3, #12]
9001a7ea:	4798      	blx	r3
9001a7ec:	6823      	ldr	r3, [r4, #0]
9001a7ee:	4620      	mov	r0, r4
9001a7f0:	4629      	mov	r1, r5
9001a7f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a7f4:	4798      	blx	r3
9001a7f6:	4628      	mov	r0, r5
9001a7f8:	bd38      	pop	{r3, r4, r5, pc}

9001a7fa <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
9001a7fa:	b410      	push	{r4}
9001a7fc:	880a      	ldrh	r2, [r1, #0]
9001a7fe:	8884      	ldrh	r4, [r0, #4]
9001a800:	4422      	add	r2, r4
9001a802:	800a      	strh	r2, [r1, #0]
9001a804:	884a      	ldrh	r2, [r1, #2]
9001a806:	88c4      	ldrh	r4, [r0, #6]
9001a808:	4422      	add	r2, r4
9001a80a:	804a      	strh	r2, [r1, #2]
9001a80c:	6940      	ldr	r0, [r0, #20]
9001a80e:	b120      	cbz	r0, 9001a81a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001a810:	6803      	ldr	r3, [r0, #0]
9001a812:	f85d 4b04 	ldr.w	r4, [sp], #4
9001a816:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a818:	4718      	bx	r3
9001a81a:	f85d 4b04 	ldr.w	r4, [sp], #4
9001a81e:	4770      	bx	lr

9001a820 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001a820:	b570      	push	{r4, r5, r6, lr}
9001a822:	8882      	ldrh	r2, [r0, #4]
9001a824:	460c      	mov	r4, r1
9001a826:	880b      	ldrh	r3, [r1, #0]
9001a828:	4605      	mov	r5, r0
9001a82a:	4413      	add	r3, r2
9001a82c:	800b      	strh	r3, [r1, #0]
9001a82e:	884b      	ldrh	r3, [r1, #2]
9001a830:	88c2      	ldrh	r2, [r0, #6]
9001a832:	4413      	add	r3, r2
9001a834:	804b      	strh	r3, [r1, #2]
9001a836:	1d01      	adds	r1, r0, #4
9001a838:	4620      	mov	r0, r4
9001a83a:	f7f8 fe53 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
9001a83e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001a842:	2b00      	cmp	r3, #0
9001a844:	dd0b      	ble.n	9001a85e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001a846:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001a84a:	2b00      	cmp	r3, #0
9001a84c:	dd07      	ble.n	9001a85e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001a84e:	6968      	ldr	r0, [r5, #20]
9001a850:	b128      	cbz	r0, 9001a85e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001a852:	6803      	ldr	r3, [r0, #0]
9001a854:	4621      	mov	r1, r4
9001a856:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001a858:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a85c:	4718      	bx	r3
9001a85e:	bd70      	pop	{r4, r5, r6, pc}

9001a860 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
9001a860:	b570      	push	{r4, r5, r6, lr}
9001a862:	8882      	ldrh	r2, [r0, #4]
9001a864:	460c      	mov	r4, r1
9001a866:	880b      	ldrh	r3, [r1, #0]
9001a868:	4605      	mov	r5, r0
9001a86a:	4413      	add	r3, r2
9001a86c:	800b      	strh	r3, [r1, #0]
9001a86e:	884b      	ldrh	r3, [r1, #2]
9001a870:	88c2      	ldrh	r2, [r0, #6]
9001a872:	4413      	add	r3, r2
9001a874:	804b      	strh	r3, [r1, #2]
9001a876:	1d01      	adds	r1, r0, #4
9001a878:	4620      	mov	r0, r4
9001a87a:	f7f8 fe33 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
9001a87e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001a882:	2b00      	cmp	r3, #0
9001a884:	dd19      	ble.n	9001a8ba <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001a886:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001a88a:	2b00      	cmp	r3, #0
9001a88c:	dd15      	ble.n	9001a8ba <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001a88e:	6968      	ldr	r0, [r5, #20]
9001a890:	b128      	cbz	r0, 9001a89e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
9001a892:	6803      	ldr	r3, [r0, #0]
9001a894:	4621      	mov	r1, r4
9001a896:	691b      	ldr	r3, [r3, #16]
9001a898:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a89c:	4718      	bx	r3
9001a89e:	4b07      	ldr	r3, [pc, #28]	@ (9001a8bc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
9001a8a0:	681b      	ldr	r3, [r3, #0]
9001a8a2:	3304      	adds	r3, #4
9001a8a4:	429d      	cmp	r5, r3
9001a8a6:	d108      	bne.n	9001a8ba <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001a8a8:	f7fe ff10 	bl	900196cc <_ZN8touchgfx11Application11getInstanceEv>
9001a8ac:	6803      	ldr	r3, [r0, #0]
9001a8ae:	6821      	ldr	r1, [r4, #0]
9001a8b0:	6862      	ldr	r2, [r4, #4]
9001a8b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
9001a8b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a8b8:	4718      	bx	r3
9001a8ba:	bd70      	pop	{r4, r5, r6, pc}
9001a8bc:	240245dc 	.word	0x240245dc

9001a8c0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001a8c0:	b570      	push	{r4, r5, r6, lr}
9001a8c2:	4604      	mov	r4, r0
9001a8c4:	4616      	mov	r6, r2
9001a8c6:	460d      	mov	r5, r1
9001a8c8:	b901      	cbnz	r1, 9001a8cc <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
9001a8ca:	b192      	cbz	r2, 9001a8f2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
9001a8cc:	6823      	ldr	r3, [r4, #0]
9001a8ce:	4620      	mov	r0, r4
9001a8d0:	699b      	ldr	r3, [r3, #24]
9001a8d2:	4798      	blx	r3
9001a8d4:	88e2      	ldrh	r2, [r4, #6]
9001a8d6:	88a1      	ldrh	r1, [r4, #4]
9001a8d8:	4620      	mov	r0, r4
9001a8da:	4432      	add	r2, r6
9001a8dc:	4429      	add	r1, r5
9001a8de:	b212      	sxth	r2, r2
9001a8e0:	b209      	sxth	r1, r1
9001a8e2:	f7f9 f8d5 	bl	90013a90 <_ZN8touchgfx8Drawable5setXYEss>
9001a8e6:	6823      	ldr	r3, [r4, #0]
9001a8e8:	4620      	mov	r0, r4
9001a8ea:	699b      	ldr	r3, [r3, #24]
9001a8ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001a8f0:	4718      	bx	r3
9001a8f2:	bd70      	pop	{r4, r5, r6, pc}

9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
9001a8f4:	b510      	push	{r4, lr}
9001a8f6:	2300      	movs	r3, #0
9001a8f8:	4604      	mov	r4, r0
9001a8fa:	4608      	mov	r0, r1
9001a8fc:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001a900:	8023      	strh	r3, [r4, #0]
9001a902:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001a906:	8063      	strh	r3, [r4, #2]
9001a908:	6803      	ldr	r3, [r0, #0]
9001a90a:	80a1      	strh	r1, [r4, #4]
9001a90c:	4621      	mov	r1, r4
9001a90e:	80e2      	strh	r2, [r4, #6]
9001a910:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a912:	4798      	blx	r3
9001a914:	4620      	mov	r0, r4
9001a916:	bd10      	pop	{r4, pc}

9001a918 <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
9001a918:	4770      	bx	lr

9001a91a <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
9001a91a:	b510      	push	{r4, lr}
9001a91c:	4604      	mov	r4, r0
9001a91e:	211c      	movs	r1, #28
9001a920:	f011 f91b 	bl	9002bb5a <_ZdlPvj>
9001a924:	4620      	mov	r0, r4
9001a926:	bd10      	pop	{r4, pc}

9001a928 <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
9001a928:	4a04      	ldr	r2, [pc, #16]	@ (9001a93c <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
9001a92a:	6002      	str	r2, [r0, #0]
9001a92c:	2200      	movs	r2, #0
9001a92e:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001a932:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001a936:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001a93a:	4770      	bx	lr
9001a93c:	90030588 	.word	0x90030588

9001a940 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
9001a940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a944:	4604      	mov	r4, r0
9001a946:	b087      	sub	sp, #28
9001a948:	4696      	mov	lr, r2
9001a94a:	6880      	ldr	r0, [r0, #8]
9001a94c:	8b22      	ldrh	r2, [r4, #24]
9001a94e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
9001a952:	9105      	str	r1, [sp, #20]
9001a954:	1c51      	adds	r1, r2, #1
9001a956:	8321      	strh	r1, [r4, #24]
9001a958:	2101      	movs	r1, #1
9001a95a:	5481      	strb	r1, [r0, r2]
9001a95c:	4689      	mov	r9, r1
9001a95e:	f9b3 2000 	ldrsh.w	r2, [r3]
9001a962:	8b60      	ldrh	r0, [r4, #26]
9001a964:	ee06 2a90 	vmov	s13, r2
9001a968:	68e2      	ldr	r2, [r4, #12]
9001a96a:	1845      	adds	r5, r0, r1
9001a96c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001a970:	eb02 0280 	add.w	r2, r2, r0, lsl #2
9001a974:	8365      	strh	r5, [r4, #26]
9001a976:	edc2 6a00 	vstr	s13, [r2]
9001a97a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001a97e:	8b60      	ldrh	r0, [r4, #26]
9001a980:	ee07 2a10 	vmov	s14, r2
9001a984:	68e2      	ldr	r2, [r4, #12]
9001a986:	1845      	adds	r5, r0, r1
9001a988:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001a98c:	eb02 0280 	add.w	r2, r2, r0, lsl #2
9001a990:	8365      	strh	r5, [r4, #26]
9001a992:	1d18      	adds	r0, r3, #4
9001a994:	460d      	mov	r5, r1
9001a996:	ed82 7a00 	vstr	s14, [r2]
9001a99a:	f8be 2000 	ldrh.w	r2, [lr]
9001a99e:	9203      	str	r2, [sp, #12]
9001a9a0:	2200      	movs	r2, #0
9001a9a2:	4613      	mov	r3, r2
9001a9a4:	4694      	mov	ip, r2
9001a9a6:	9201      	str	r2, [sp, #4]
9001a9a8:	9202      	str	r2, [sp, #8]
9001a9aa:	f8b4 8018 	ldrh.w	r8, [r4, #24]
9001a9ae:	9e05      	ldr	r6, [sp, #20]
9001a9b0:	f108 0701 	add.w	r7, r8, #1
9001a9b4:	f8d4 a008 	ldr.w	sl, [r4, #8]
9001a9b8:	428e      	cmp	r6, r1
9001a9ba:	b2bf      	uxth	r7, r7
9001a9bc:	eb0a 0b08 	add.w	fp, sl, r8
9001a9c0:	f340 80b6 	ble.w	9001ab30 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1f0>
9001a9c4:	9b03      	ldr	r3, [sp, #12]
9001a9c6:	f9b0 c000 	ldrsh.w	ip, [r0]
9001a9ca:	fa43 fb05 	asr.w	fp, r3, r5
9001a9ce:	f00b 0b01 	and.w	fp, fp, #1
9001a9d2:	fa5f f38b 	uxtb.w	r3, fp
9001a9d6:	9304      	str	r3, [sp, #16]
9001a9d8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9001a9dc:	f1bb 0f00 	cmp.w	fp, #0
9001a9e0:	d057      	beq.n	9001aa92 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x152>
9001a9e2:	ee07 ca90 	vmov	s15, ip
9001a9e6:	8327      	strh	r7, [r4, #24]
9001a9e8:	eef8 5ae7 	vcvt.f32.s32	s11, s15
9001a9ec:	ee07 3a90 	vmov	s15, r3
9001a9f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001a9f4:	f1b9 0f00 	cmp.w	r9, #0
9001a9f8:	d028      	beq.n	9001aa4c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x10c>
9001a9fa:	f04f 0602 	mov.w	r6, #2
9001a9fe:	f80a 6008 	strb.w	r6, [sl, r8]
9001aa02:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aa06:	68e7      	ldr	r7, [r4, #12]
9001aa08:	f108 0901 	add.w	r9, r8, #1
9001aa0c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aa10:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aa14:	edc7 5a00 	vstr	s11, [r7]
9001aa18:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aa1c:	68e7      	ldr	r7, [r4, #12]
9001aa1e:	f108 0901 	add.w	r9, r8, #1
9001aa22:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aa26:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aa2a:	edc7 7a00 	vstr	s15, [r7]
9001aa2e:	3501      	adds	r5, #1
9001aa30:	2d10      	cmp	r5, #16
9001aa32:	d106      	bne.n	9001aa42 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
9001aa34:	9d02      	ldr	r5, [sp, #8]
9001aa36:	3501      	adds	r5, #1
9001aa38:	9502      	str	r5, [sp, #8]
9001aa3a:	f83e 5015 	ldrh.w	r5, [lr, r5, lsl #1]
9001aa3e:	9503      	str	r5, [sp, #12]
9001aa40:	2500      	movs	r5, #0
9001aa42:	3101      	adds	r1, #1
9001aa44:	3004      	adds	r0, #4
9001aa46:	f8dd 9010 	ldr.w	r9, [sp, #16]
9001aa4a:	e7ae      	b.n	9001a9aa <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x6a>
9001aa4c:	f04f 0605 	mov.w	r6, #5
9001aa50:	ed9d 5a01 	vldr	s10, [sp, #4]
9001aa54:	f80a 6008 	strb.w	r6, [sl, r8]
9001aa58:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001aa5c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aa60:	68e7      	ldr	r7, [r4, #12]
9001aa62:	f108 0901 	add.w	r9, r8, #1
9001aa66:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aa6a:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aa6e:	ed87 5a00 	vstr	s10, [r7]
9001aa72:	ee05 2a10 	vmov	s10, r2
9001aa76:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aa7a:	68e7      	ldr	r7, [r4, #12]
9001aa7c:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001aa80:	f108 0901 	add.w	r9, r8, #1
9001aa84:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aa88:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aa8c:	ed87 5a00 	vstr	s10, [r7]
9001aa90:	e7b7      	b.n	9001aa02 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xc2>
9001aa92:	f1b9 0f00 	cmp.w	r9, #0
9001aa96:	d147      	bne.n	9001ab28 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1e8>
9001aa98:	f04f 0605 	mov.w	r6, #5
9001aa9c:	eddd 7a01 	vldr	s15, [sp, #4]
9001aaa0:	8327      	strh	r7, [r4, #24]
9001aaa2:	f80a 6008 	strb.w	r6, [sl, r8]
9001aaa6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001aaaa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aaae:	68e7      	ldr	r7, [r4, #12]
9001aab0:	f108 0901 	add.w	r9, r8, #1
9001aab4:	9e01      	ldr	r6, [sp, #4]
9001aab6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aaba:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aabe:	4466      	add	r6, ip
9001aac0:	edc7 7a00 	vstr	s15, [r7]
9001aac4:	ee07 2a90 	vmov	s15, r2
9001aac8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aacc:	441a      	add	r2, r3
9001aace:	68e7      	ldr	r7, [r4, #12]
9001aad0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001aad4:	f108 0901 	add.w	r9, r8, #1
9001aad8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aadc:	f8a4 901a 	strh.w	r9, [r4, #26]
9001aae0:	edc7 7a00 	vstr	s15, [r7]
9001aae4:	ee07 6a90 	vmov	s15, r6
9001aae8:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001aaec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001aaf0:	68e7      	ldr	r7, [r4, #12]
9001aaf2:	f108 0901 	add.w	r9, r8, #1
9001aaf6:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001aafa:	ee67 7a86 	vmul.f32	s15, s15, s12
9001aafe:	f8a4 901a 	strh.w	r9, [r4, #26]
9001ab02:	edc7 7a00 	vstr	s15, [r7]
9001ab06:	ee07 2a90 	vmov	s15, r2
9001ab0a:	f8b4 801a 	ldrh.w	r8, [r4, #26]
9001ab0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ab12:	68e7      	ldr	r7, [r4, #12]
9001ab14:	f108 0901 	add.w	r9, r8, #1
9001ab18:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001ab1c:	ee67 7a86 	vmul.f32	s15, s15, s12
9001ab20:	f8a4 901a 	strh.w	r9, [r4, #26]
9001ab24:	edc7 7a00 	vstr	s15, [r7]
9001ab28:	461a      	mov	r2, r3
9001ab2a:	f8cd c004 	str.w	ip, [sp, #4]
9001ab2e:	e77e      	b.n	9001aa2e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xee>
9001ab30:	f1b9 0f00 	cmp.w	r9, #0
9001ab34:	d028      	beq.n	9001ab88 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
9001ab36:	ee07 ca90 	vmov	s15, ip
9001ab3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ab3e:	eef4 6a67 	vcmp.f32	s13, s15
9001ab42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ab46:	d108      	bne.n	9001ab5a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x21a>
9001ab48:	ee07 3a90 	vmov	s15, r3
9001ab4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ab50:	eeb4 7a67 	vcmp.f32	s14, s15
9001ab54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001ab58:	d016      	beq.n	9001ab88 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x248>
9001ab5a:	2302      	movs	r3, #2
9001ab5c:	8327      	strh	r7, [r4, #24]
9001ab5e:	f88b 3000 	strb.w	r3, [fp]
9001ab62:	8b62      	ldrh	r2, [r4, #26]
9001ab64:	68e3      	ldr	r3, [r4, #12]
9001ab66:	1c51      	adds	r1, r2, #1
9001ab68:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001ab6c:	8361      	strh	r1, [r4, #26]
9001ab6e:	edc3 6a00 	vstr	s13, [r3]
9001ab72:	8b62      	ldrh	r2, [r4, #26]
9001ab74:	68e3      	ldr	r3, [r4, #12]
9001ab76:	1c51      	adds	r1, r2, #1
9001ab78:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001ab7c:	8361      	strh	r1, [r4, #26]
9001ab7e:	ed83 7a00 	vstr	s14, [r3]
9001ab82:	b007      	add	sp, #28
9001ab84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ab88:	2305      	movs	r3, #5
9001ab8a:	eddd 7a01 	vldr	s15, [sp, #4]
9001ab8e:	8327      	strh	r7, [r4, #24]
9001ab90:	f88b 3000 	strb.w	r3, [fp]
9001ab94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001ab98:	8b61      	ldrh	r1, [r4, #26]
9001ab9a:	68e3      	ldr	r3, [r4, #12]
9001ab9c:	1c4d      	adds	r5, r1, #1
9001ab9e:	eb03 0381 	add.w	r3, r3, r1, lsl #2
9001aba2:	8365      	strh	r5, [r4, #26]
9001aba4:	edc3 7a00 	vstr	s15, [r3]
9001aba8:	ee07 2a90 	vmov	s15, r2
9001abac:	8b61      	ldrh	r1, [r4, #26]
9001abae:	68e3      	ldr	r3, [r4, #12]
9001abb0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001abb4:	1c4d      	adds	r5, r1, #1
9001abb6:	eb03 0381 	add.w	r3, r3, r1, lsl #2
9001abba:	8365      	strh	r5, [r4, #26]
9001abbc:	edc3 7a00 	vstr	s15, [r3]
9001abc0:	e7cf      	b.n	9001ab62 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x222>
	...

9001abc4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
9001abc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001abc8:	4604      	mov	r4, r0
9001abca:	b08e      	sub	sp, #56	@ 0x38
9001abcc:	4699      	mov	r9, r3
9001abce:	4688      	mov	r8, r1
9001abd0:	4615      	mov	r5, r2
9001abd2:	9e16      	ldr	r6, [sp, #88]	@ 0x58
9001abd4:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
9001abd8:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
9001abda:	f7e8 fcad 	bl	90003538 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
9001abde:	6060      	str	r0, [r4, #4]
9001abe0:	f1b9 0f00 	cmp.w	r9, #0
9001abe4:	f000 80e8 	beq.w	9001adb8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001abe8:	2800      	cmp	r0, #0
9001abea:	f000 80e5 	beq.w	9001adb8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
9001abee:	a805      	add	r0, sp, #20
9001abf0:	f000 f8f9 	bl	9001ade6 <_ZN8touchgfx9Matrix3x3C1Ev>
9001abf4:	6833      	ldr	r3, [r6, #0]
9001abf6:	4630      	mov	r0, r6
9001abf8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
9001abfa:	4798      	blx	r3
9001abfc:	a805      	add	r0, sp, #20
9001abfe:	eef0 0a40 	vmov.f32	s1, s0
9001ac02:	f000 f8f4 	bl	9001adee <_ZN8touchgfx9Matrix3x35scaleEff>
9001ac06:	6860      	ldr	r0, [r4, #4]
9001ac08:	f1ba 0f03 	cmp.w	sl, #3
9001ac0c:	d83b      	bhi.n	9001ac86 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
9001ac0e:	e8df f00a 	tbb	[pc, sl]
9001ac12:	1002      	.short	0x1002
9001ac14:	9f71      	.short	0x9f71
9001ac16:	6803      	ldr	r3, [r0, #0]
9001ac18:	462a      	mov	r2, r5
9001ac1a:	4641      	mov	r1, r8
9001ac1c:	689b      	ldr	r3, [r3, #8]
9001ac1e:	4798      	blx	r3
9001ac20:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
9001ac24:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9001ac28:	ee07 7a90 	vmov	s15, r7
9001ac2c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
9001ac30:	e026      	b.n	9001ac80 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
9001ac32:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
9001ac36:	f8b8 3004 	ldrh.w	r3, [r8, #4]
9001ac3a:	8869      	ldrh	r1, [r5, #2]
9001ac3c:	1a9b      	subs	r3, r3, r2
9001ac3e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001ac42:	aa03      	add	r2, sp, #12
9001ac44:	1a5b      	subs	r3, r3, r1
9001ac46:	4641      	mov	r1, r8
9001ac48:	f8ad 300c 	strh.w	r3, [sp, #12]
9001ac4c:	882b      	ldrh	r3, [r5, #0]
9001ac4e:	f8ad 300e 	strh.w	r3, [sp, #14]
9001ac52:	88ab      	ldrh	r3, [r5, #4]
9001ac54:	f8ad 3012 	strh.w	r3, [sp, #18]
9001ac58:	6803      	ldr	r3, [r0, #0]
9001ac5a:	689b      	ldr	r3, [r3, #8]
9001ac5c:	4798      	blx	r3
9001ac5e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 9001adc0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
9001ac62:	a805      	add	r0, sp, #20
9001ac64:	f000 f8e8 	bl	9001ae38 <_ZN8touchgfx9Matrix3x36rotateEf>
9001ac68:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
9001ac6c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9001ac6e:	ee07 7a90 	vmov	s15, r7
9001ac72:	1a9b      	subs	r3, r3, r2
9001ac74:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9001ac78:	ee00 3a10 	vmov	s0, r3
9001ac7c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
9001ac80:	a805      	add	r0, sp, #20
9001ac82:	f000 f927 	bl	9001aed4 <_ZN8touchgfx9Matrix3x39translateEff>
9001ac86:	6860      	ldr	r0, [r4, #4]
9001ac88:	a905      	add	r1, sp, #20
9001ac8a:	2500      	movs	r5, #0
9001ac8c:	f109 0602 	add.w	r6, r9, #2
9001ac90:	6803      	ldr	r3, [r0, #0]
9001ac92:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001ac94:	4798      	blx	r3
9001ac96:	6860      	ldr	r0, [r4, #4]
9001ac98:	9917      	ldr	r1, [sp, #92]	@ 0x5c
9001ac9a:	6803      	ldr	r3, [r0, #0]
9001ac9c:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
9001aca0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001aca2:	4798      	blx	r3
9001aca4:	6860      	ldr	r0, [r4, #4]
9001aca6:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
9001acaa:	6803      	ldr	r3, [r0, #0]
9001acac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001acae:	4798      	blx	r3
9001acb0:	6860      	ldr	r0, [r4, #4]
9001acb2:	2101      	movs	r1, #1
9001acb4:	6803      	ldr	r3, [r0, #0]
9001acb6:	68db      	ldr	r3, [r3, #12]
9001acb8:	4798      	blx	r3
9001acba:	f8b9 7000 	ldrh.w	r7, [r9]
9001acbe:	f104 0310 	add.w	r3, r4, #16
9001acc2:	61a5      	str	r5, [r4, #24]
9001acc4:	f104 0208 	add.w	r2, r4, #8
9001acc8:	f104 0114 	add.w	r1, r4, #20
9001accc:	f104 000c 	add.w	r0, r4, #12
9001acd0:	f7ea fddc 	bl	9000588c <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
9001acd4:	42af      	cmp	r7, r5
9001acd6:	dd60      	ble.n	9001ad9a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
9001acd8:	8831      	ldrh	r1, [r6, #0]
9001acda:	1cb2      	adds	r2, r6, #2
9001acdc:	4620      	mov	r0, r4
9001acde:	3501      	adds	r5, #1
9001ace0:	f101 030f 	add.w	r3, r1, #15
9001ace4:	f3c3 1307 	ubfx	r3, r3, #4, #8
9001ace8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001acec:	f7ff fe28 	bl	9001a940 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
9001acf0:	4606      	mov	r6, r0
9001acf2:	e7ef      	b.n	9001acd4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
9001acf4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001acf8:	f8b8 3004 	ldrh.w	r3, [r8, #4]
9001acfc:	8829      	ldrh	r1, [r5, #0]
9001acfe:	1a9b      	subs	r3, r3, r2
9001ad00:	f8ad 2010 	strh.w	r2, [sp, #16]
9001ad04:	aa03      	add	r2, sp, #12
9001ad06:	1a5b      	subs	r3, r3, r1
9001ad08:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
9001ad0c:	886d      	ldrh	r5, [r5, #2]
9001ad0e:	f8ad 300c 	strh.w	r3, [sp, #12]
9001ad12:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001ad16:	f8ad 1012 	strh.w	r1, [sp, #18]
9001ad1a:	1a5b      	subs	r3, r3, r1
9001ad1c:	4641      	mov	r1, r8
9001ad1e:	1b5b      	subs	r3, r3, r5
9001ad20:	f8ad 300e 	strh.w	r3, [sp, #14]
9001ad24:	6803      	ldr	r3, [r0, #0]
9001ad26:	689b      	ldr	r3, [r3, #8]
9001ad28:	4798      	blx	r3
9001ad2a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 9001adc4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
9001ad2e:	a805      	add	r0, sp, #20
9001ad30:	f000 f882 	bl	9001ae38 <_ZN8touchgfx9Matrix3x36rotateEf>
9001ad34:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001ad38:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
9001ad3a:	1a9b      	subs	r3, r3, r2
9001ad3c:	ee00 3a90 	vmov	s1, r3
9001ad40:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
9001ad44:	1bdb      	subs	r3, r3, r7
9001ad46:	eef8 0ae0 	vcvt.f32.s32	s1, s1
9001ad4a:	ee00 3a10 	vmov	s0, r3
9001ad4e:	e795      	b.n	9001ac7c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
9001ad50:	886b      	ldrh	r3, [r5, #2]
9001ad52:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
9001ad56:	f8ad 300c 	strh.w	r3, [sp, #12]
9001ad5a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
9001ad5e:	8829      	ldrh	r1, [r5, #0]
9001ad60:	1a9b      	subs	r3, r3, r2
9001ad62:	f8ad 2012 	strh.w	r2, [sp, #18]
9001ad66:	aa03      	add	r2, sp, #12
9001ad68:	1a5b      	subs	r3, r3, r1
9001ad6a:	4641      	mov	r1, r8
9001ad6c:	f8ad 300e 	strh.w	r3, [sp, #14]
9001ad70:	88eb      	ldrh	r3, [r5, #6]
9001ad72:	f8ad 3010 	strh.w	r3, [sp, #16]
9001ad76:	6803      	ldr	r3, [r0, #0]
9001ad78:	689b      	ldr	r3, [r3, #8]
9001ad7a:	4798      	blx	r3
9001ad7c:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 9001adc8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
9001ad80:	a805      	add	r0, sp, #20
9001ad82:	f000 f859 	bl	9001ae38 <_ZN8touchgfx9Matrix3x36rotateEf>
9001ad86:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001ad8a:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
9001ad8e:	1bdb      	subs	r3, r3, r7
9001ad90:	ee00 3a90 	vmov	s1, r3
9001ad94:	eef8 0ae0 	vcvt.f32.s32	s1, s1
9001ad98:	e748      	b.n	9001ac2c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
9001ad9a:	6860      	ldr	r0, [r4, #4]
9001ad9c:	2100      	movs	r1, #0
9001ad9e:	8b22      	ldrh	r2, [r4, #24]
9001ada0:	6803      	ldr	r3, [r0, #0]
9001ada2:	9101      	str	r1, [sp, #4]
9001ada4:	8b61      	ldrh	r1, [r4, #26]
9001ada6:	9100      	str	r1, [sp, #0]
9001ada8:	6a1d      	ldr	r5, [r3, #32]
9001adaa:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
9001adae:	47a8      	blx	r5
9001adb0:	6860      	ldr	r0, [r4, #4]
9001adb2:	6803      	ldr	r3, [r0, #0]
9001adb4:	69db      	ldr	r3, [r3, #28]
9001adb6:	4798      	blx	r3
9001adb8:	b00e      	add	sp, #56	@ 0x38
9001adba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001adbe:	bf00      	nop
9001adc0:	42b40000 	.word	0x42b40000
9001adc4:	43340000 	.word	0x43340000
9001adc8:	43870000 	.word	0x43870000

9001adcc <_ZN8touchgfx9Matrix3x35resetEv>:
9001adcc:	2300      	movs	r3, #0
9001adce:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
9001add2:	6043      	str	r3, [r0, #4]
9001add4:	6002      	str	r2, [r0, #0]
9001add6:	6083      	str	r3, [r0, #8]
9001add8:	60c3      	str	r3, [r0, #12]
9001adda:	6102      	str	r2, [r0, #16]
9001addc:	6143      	str	r3, [r0, #20]
9001adde:	6183      	str	r3, [r0, #24]
9001ade0:	61c3      	str	r3, [r0, #28]
9001ade2:	6202      	str	r2, [r0, #32]
9001ade4:	4770      	bx	lr

9001ade6 <_ZN8touchgfx9Matrix3x3C1Ev>:
9001ade6:	b508      	push	{r3, lr}
9001ade8:	f7ff fff0 	bl	9001adcc <_ZN8touchgfx9Matrix3x35resetEv>
9001adec:	bd08      	pop	{r3, pc}

9001adee <_ZN8touchgfx9Matrix3x35scaleEff>:
9001adee:	edd0 7a00 	vldr	s15, [r0]
9001adf2:	ee67 7a80 	vmul.f32	s15, s15, s0
9001adf6:	edc0 7a00 	vstr	s15, [r0]
9001adfa:	edd0 7a01 	vldr	s15, [r0, #4]
9001adfe:	ee67 7a80 	vmul.f32	s15, s15, s0
9001ae02:	edc0 7a01 	vstr	s15, [r0, #4]
9001ae06:	edd0 7a02 	vldr	s15, [r0, #8]
9001ae0a:	ee27 0a80 	vmul.f32	s0, s15, s0
9001ae0e:	edd0 7a03 	vldr	s15, [r0, #12]
9001ae12:	ee67 7aa0 	vmul.f32	s15, s15, s1
9001ae16:	ed80 0a02 	vstr	s0, [r0, #8]
9001ae1a:	edc0 7a03 	vstr	s15, [r0, #12]
9001ae1e:	edd0 7a04 	vldr	s15, [r0, #16]
9001ae22:	ee67 7aa0 	vmul.f32	s15, s15, s1
9001ae26:	edc0 7a04 	vstr	s15, [r0, #16]
9001ae2a:	edd0 7a05 	vldr	s15, [r0, #20]
9001ae2e:	ee67 0aa0 	vmul.f32	s1, s15, s1
9001ae32:	edc0 0a05 	vstr	s1, [r0, #20]
9001ae36:	4770      	bx	lr

9001ae38 <_ZN8touchgfx9Matrix3x36rotateEf>:
9001ae38:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9001aecc <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
9001ae3c:	ee20 0a27 	vmul.f32	s0, s0, s15
9001ae40:	eddf 7a23 	vldr	s15, [pc, #140]	@ 9001aed0 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
9001ae44:	b510      	push	{r4, lr}
9001ae46:	ed2d 8b02 	vpush	{d8}
9001ae4a:	eec0 8a27 	vdiv.f32	s17, s0, s15
9001ae4e:	4604      	mov	r4, r0
9001ae50:	eeb0 0a68 	vmov.f32	s0, s17
9001ae54:	f010 ffb8 	bl	9002bdc8 <cosf>
9001ae58:	eeb0 8a40 	vmov.f32	s16, s0
9001ae5c:	eeb0 0a68 	vmov.f32	s0, s17
9001ae60:	f010 feee 	bl	9002bc40 <sinf>
9001ae64:	edd4 6a03 	vldr	s13, [r4, #12]
9001ae68:	edd4 4a00 	vldr	s9, [r4]
9001ae6c:	ee60 7a66 	vnmul.f32	s15, s0, s13
9001ae70:	ed94 7a04 	vldr	s14, [r4, #16]
9001ae74:	ed94 5a01 	vldr	s10, [r4, #4]
9001ae78:	ee66 6a88 	vmul.f32	s13, s13, s16
9001ae7c:	edd4 5a02 	vldr	s11, [r4, #8]
9001ae80:	eee8 7a24 	vfma.f32	s15, s16, s9
9001ae84:	eee0 6a24 	vfma.f32	s13, s0, s9
9001ae88:	edc4 7a00 	vstr	s15, [r4]
9001ae8c:	ee60 7a47 	vnmul.f32	s15, s0, s14
9001ae90:	ee27 7a08 	vmul.f32	s14, s14, s16
9001ae94:	edc4 6a03 	vstr	s13, [r4, #12]
9001ae98:	eee8 7a05 	vfma.f32	s15, s16, s10
9001ae9c:	eea0 7a05 	vfma.f32	s14, s0, s10
9001aea0:	edc4 7a01 	vstr	s15, [r4, #4]
9001aea4:	edd4 7a05 	vldr	s15, [r4, #20]
9001aea8:	ed84 7a04 	vstr	s14, [r4, #16]
9001aeac:	ee20 6a67 	vnmul.f32	s12, s0, s15
9001aeb0:	ee67 7a88 	vmul.f32	s15, s15, s16
9001aeb4:	eea8 6a25 	vfma.f32	s12, s16, s11
9001aeb8:	eee0 7a25 	vfma.f32	s15, s0, s11
9001aebc:	ecbd 8b02 	vpop	{d8}
9001aec0:	ed84 6a02 	vstr	s12, [r4, #8]
9001aec4:	edc4 7a05 	vstr	s15, [r4, #20]
9001aec8:	bd10      	pop	{r4, pc}
9001aeca:	bf00      	nop
9001aecc:	40490fdb 	.word	0x40490fdb
9001aed0:	43340000 	.word	0x43340000

9001aed4 <_ZN8touchgfx9Matrix3x39translateEff>:
9001aed4:	ed90 6a06 	vldr	s12, [r0, #24]
9001aed8:	edd0 7a00 	vldr	s15, [r0]
9001aedc:	edd0 6a07 	vldr	s13, [r0, #28]
9001aee0:	eee6 7a00 	vfma.f32	s15, s12, s0
9001aee4:	ed90 7a08 	vldr	s14, [r0, #32]
9001aee8:	edc0 7a00 	vstr	s15, [r0]
9001aeec:	edd0 7a01 	vldr	s15, [r0, #4]
9001aef0:	eee6 7a80 	vfma.f32	s15, s13, s0
9001aef4:	edc0 7a01 	vstr	s15, [r0, #4]
9001aef8:	edd0 7a02 	vldr	s15, [r0, #8]
9001aefc:	eee7 7a00 	vfma.f32	s15, s14, s0
9001af00:	edc0 7a02 	vstr	s15, [r0, #8]
9001af04:	edd0 7a03 	vldr	s15, [r0, #12]
9001af08:	eee6 7a20 	vfma.f32	s15, s12, s1
9001af0c:	edc0 7a03 	vstr	s15, [r0, #12]
9001af10:	edd0 7a04 	vldr	s15, [r0, #16]
9001af14:	eee6 7aa0 	vfma.f32	s15, s13, s1
9001af18:	edc0 7a04 	vstr	s15, [r0, #16]
9001af1c:	edd0 7a05 	vldr	s15, [r0, #20]
9001af20:	eee7 7a20 	vfma.f32	s15, s14, s1
9001af24:	edc0 7a05 	vstr	s15, [r0, #20]
9001af28:	4770      	bx	lr

9001af2a <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
9001af2a:	edd0 6a01 	vldr	s13, [r0, #4]
9001af2e:	b084      	sub	sp, #16
9001af30:	edd0 7a04 	vldr	s15, [r0, #16]
9001af34:	ed90 7a03 	vldr	s14, [r0, #12]
9001af38:	ee60 7aa7 	vmul.f32	s15, s1, s15
9001af3c:	ee60 0aa6 	vmul.f32	s1, s1, s13
9001af40:	edd0 6a00 	vldr	s13, [r0]
9001af44:	eee7 7a00 	vfma.f32	s15, s14, s0
9001af48:	ed90 7a05 	vldr	s14, [r0, #20]
9001af4c:	eee6 0a80 	vfma.f32	s1, s13, s0
9001af50:	ed90 0a02 	vldr	s0, [r0, #8]
9001af54:	ee30 0a80 	vadd.f32	s0, s1, s0
9001af58:	ee77 0a87 	vadd.f32	s1, s15, s14
9001af5c:	b004      	add	sp, #16
9001af5e:	4770      	bx	lr

9001af60 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
9001af60:	b530      	push	{r4, r5, lr}
9001af62:	8083      	strh	r3, [r0, #4]
9001af64:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001af68:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001af6c:	80c3      	strh	r3, [r0, #6]
9001af6e:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001af72:	6141      	str	r1, [r0, #20]
9001af74:	7203      	strb	r3, [r0, #8]
9001af76:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001af7a:	8302      	strh	r2, [r0, #24]
9001af7c:	7243      	strb	r3, [r0, #9]
9001af7e:	7a83      	ldrb	r3, [r0, #10]
9001af80:	f365 0306 	bfi	r3, r5, #0, #7
9001af84:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001af88:	f365 13c7 	bfi	r3, r5, #7, #1
9001af8c:	7283      	strb	r3, [r0, #10]
9001af8e:	f89d 3020 	ldrb.w	r3, [sp, #32]
9001af92:	72c3      	strb	r3, [r0, #11]
9001af94:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
9001af98:	7303      	strb	r3, [r0, #12]
9001af9a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001af9e:	81c3      	strh	r3, [r0, #14]
9001afa0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
9001afa4:	8203      	strh	r3, [r0, #16]
9001afa6:	4b01      	ldr	r3, [pc, #4]	@ (9001afac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
9001afa8:	6003      	str	r3, [r0, #0]
9001afaa:	bd30      	pop	{r4, r5, pc}
9001afac:	9003059c 	.word	0x9003059c

9001afb0 <_ZNK8touchgfx9ConstFont4findEt>:
9001afb0:	b5f0      	push	{r4, r5, r6, r7, lr}
9001afb2:	6944      	ldr	r4, [r0, #20]
9001afb4:	b3bc      	cbz	r4, 9001b026 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001afb6:	88a3      	ldrh	r3, [r4, #4]
9001afb8:	8b02      	ldrh	r2, [r0, #24]
9001afba:	1acb      	subs	r3, r1, r3
9001afbc:	f102 32ff 	add.w	r2, r2, #4294967295
9001afc0:	d431      	bmi.n	9001b026 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001afc2:	4293      	cmp	r3, r2
9001afc4:	dd0c      	ble.n	9001afe0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001afc6:	230e      	movs	r3, #14
9001afc8:	fb03 4302 	mla	r3, r3, r2, r4
9001afcc:	889b      	ldrh	r3, [r3, #4]
9001afce:	1a5b      	subs	r3, r3, r1
9001afd0:	1ad3      	subs	r3, r2, r3
9001afd2:	429a      	cmp	r2, r3
9001afd4:	db27      	blt.n	9001b026 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001afd6:	2b00      	cmp	r3, #0
9001afd8:	bfbc      	itt	lt
9001afda:	2302      	movlt	r3, #2
9001afdc:	fb92 f3f3 	sdivlt	r3, r2, r3
9001afe0:	2500      	movs	r5, #0
9001afe2:	260e      	movs	r6, #14
9001afe4:	4295      	cmp	r5, r2
9001afe6:	dc1e      	bgt.n	9001b026 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001afe8:	fb06 4003 	mla	r0, r6, r3, r4
9001afec:	8887      	ldrh	r7, [r0, #4]
9001afee:	42b9      	cmp	r1, r7
9001aff0:	d01a      	beq.n	9001b028 <_ZNK8touchgfx9ConstFont4findEt+0x78>
9001aff2:	d20d      	bcs.n	9001b010 <_ZNK8touchgfx9ConstFont4findEt+0x60>
9001aff4:	1e5a      	subs	r2, r3, #1
9001aff6:	4295      	cmp	r5, r2
9001aff8:	dc15      	bgt.n	9001b026 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001affa:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
9001affe:	1a5b      	subs	r3, r3, r1
9001b000:	1ad3      	subs	r3, r2, r3
9001b002:	429a      	cmp	r2, r3
9001b004:	db0f      	blt.n	9001b026 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b006:	429d      	cmp	r5, r3
9001b008:	ddec      	ble.n	9001afe4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001b00a:	1953      	adds	r3, r2, r5
9001b00c:	105b      	asrs	r3, r3, #1
9001b00e:	e7e9      	b.n	9001afe4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001b010:	1c5d      	adds	r5, r3, #1
9001b012:	42aa      	cmp	r2, r5
9001b014:	db07      	blt.n	9001b026 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b016:	8a43      	ldrh	r3, [r0, #18]
9001b018:	1acb      	subs	r3, r1, r3
9001b01a:	442b      	add	r3, r5
9001b01c:	429d      	cmp	r5, r3
9001b01e:	dc02      	bgt.n	9001b026 <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001b020:	429a      	cmp	r2, r3
9001b022:	dadf      	bge.n	9001afe4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001b024:	e7f1      	b.n	9001b00a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001b026:	2000      	movs	r0, #0
9001b028:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001b02a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001b02a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001b02c:	4604      	mov	r4, r0
9001b02e:	4617      	mov	r7, r2
9001b030:	461e      	mov	r6, r3
9001b032:	b911      	cbnz	r1, 9001b03a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
9001b034:	2500      	movs	r5, #0
9001b036:	4628      	mov	r0, r5
9001b038:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001b03a:	290a      	cmp	r1, #10
9001b03c:	d0fa      	beq.n	9001b034 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001b03e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
9001b042:	4291      	cmp	r1, r2
9001b044:	d0f6      	beq.n	9001b034 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001b046:	f242 020b 	movw	r2, #8203	@ 0x200b
9001b04a:	4291      	cmp	r1, r2
9001b04c:	d0f2      	beq.n	9001b034 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001b04e:	f7ff ffaf 	bl	9001afb0 <_ZNK8touchgfx9ConstFont4findEt>
9001b052:	4605      	mov	r5, r0
9001b054:	b950      	cbnz	r0, 9001b06c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001b056:	6823      	ldr	r3, [r4, #0]
9001b058:	4620      	mov	r0, r4
9001b05a:	691b      	ldr	r3, [r3, #16]
9001b05c:	4798      	blx	r3
9001b05e:	4601      	mov	r1, r0
9001b060:	4620      	mov	r0, r4
9001b062:	f7ff ffa5 	bl	9001afb0 <_ZNK8touchgfx9ConstFont4findEt>
9001b066:	4605      	mov	r5, r0
9001b068:	2800      	cmp	r0, #0
9001b06a:	d0e3      	beq.n	9001b034 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001b06c:	6823      	ldr	r3, [r4, #0]
9001b06e:	4629      	mov	r1, r5
9001b070:	4620      	mov	r0, r4
9001b072:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001b074:	4798      	blx	r3
9001b076:	6038      	str	r0, [r7, #0]
9001b078:	6823      	ldr	r3, [r4, #0]
9001b07a:	4620      	mov	r0, r4
9001b07c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001b07e:	4798      	blx	r3
9001b080:	7030      	strb	r0, [r6, #0]
9001b082:	e7d8      	b.n	9001b036 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

9001b084 <_ZN8touchgfx4clzuEm>:
9001b084:	4603      	mov	r3, r0
9001b086:	b1c8      	cbz	r0, 9001b0bc <_ZN8touchgfx4clzuEm+0x38>
9001b088:	0c02      	lsrs	r2, r0, #16
9001b08a:	0412      	lsls	r2, r2, #16
9001b08c:	b9a2      	cbnz	r2, 9001b0b8 <_ZN8touchgfx4clzuEm+0x34>
9001b08e:	0403      	lsls	r3, r0, #16
9001b090:	2010      	movs	r0, #16
9001b092:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
9001b096:	bf04      	itt	eq
9001b098:	021b      	lsleq	r3, r3, #8
9001b09a:	3008      	addeq	r0, #8
9001b09c:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
9001b0a0:	bf04      	itt	eq
9001b0a2:	011b      	lsleq	r3, r3, #4
9001b0a4:	3004      	addeq	r0, #4
9001b0a6:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
9001b0aa:	bf04      	itt	eq
9001b0ac:	009b      	lsleq	r3, r3, #2
9001b0ae:	3002      	addeq	r0, #2
9001b0b0:	2b00      	cmp	r3, #0
9001b0b2:	db04      	blt.n	9001b0be <_ZN8touchgfx4clzuEm+0x3a>
9001b0b4:	3001      	adds	r0, #1
9001b0b6:	4770      	bx	lr
9001b0b8:	2000      	movs	r0, #0
9001b0ba:	e7ea      	b.n	9001b092 <_ZN8touchgfx4clzuEm+0xe>
9001b0bc:	2020      	movs	r0, #32
9001b0be:	4770      	bx	lr

9001b0c0 <_ZN8touchgfx7muldivuEmmmRm>:
9001b0c0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001b0c4:	460f      	mov	r7, r1
9001b0c6:	4615      	mov	r5, r2
9001b0c8:	461e      	mov	r6, r3
9001b0ca:	4601      	mov	r1, r0
9001b0cc:	b100      	cbz	r0, 9001b0d0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
9001b0ce:	b927      	cbnz	r7, 9001b0da <_ZN8touchgfx7muldivuEmmmRm+0x1a>
9001b0d0:	2000      	movs	r0, #0
9001b0d2:	6030      	str	r0, [r6, #0]
9001b0d4:	b002      	add	sp, #8
9001b0d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001b0da:	f7ff ffd3 	bl	9001b084 <_ZN8touchgfx4clzuEm>
9001b0de:	b980      	cbnz	r0, 9001b102 <_ZN8touchgfx7muldivuEmmmRm+0x42>
9001b0e0:	4638      	mov	r0, r7
9001b0e2:	f7ff ffcf 	bl	9001b084 <_ZN8touchgfx4clzuEm>
9001b0e6:	2800      	cmp	r0, #0
9001b0e8:	dd05      	ble.n	9001b0f6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
9001b0ea:	4633      	mov	r3, r6
9001b0ec:	462a      	mov	r2, r5
9001b0ee:	4638      	mov	r0, r7
9001b0f0:	f7ff ffe6 	bl	9001b0c0 <_ZN8touchgfx7muldivuEmmmRm>
9001b0f4:	e7ee      	b.n	9001b0d4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001b0f6:	f04f 33ff 	mov.w	r3, #4294967295
9001b0fa:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
9001b0fe:	6033      	str	r3, [r6, #0]
9001b100:	e7e8      	b.n	9001b0d4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001b102:	fa37 f800 	lsrs.w	r8, r7, r0
9001b106:	fb07 f301 	mul.w	r3, r7, r1
9001b10a:	d105      	bne.n	9001b118 <_ZN8touchgfx7muldivuEmmmRm+0x58>
9001b10c:	fbb3 f0f5 	udiv	r0, r3, r5
9001b110:	fb05 3510 	mls	r5, r5, r0, r3
9001b114:	6035      	str	r5, [r6, #0]
9001b116:	e7dd      	b.n	9001b0d4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001b118:	2301      	movs	r3, #1
9001b11a:	fa01 fa00 	lsl.w	sl, r1, r0
9001b11e:	462a      	mov	r2, r5
9001b120:	fa03 f000 	lsl.w	r0, r3, r0
9001b124:	4633      	mov	r3, r6
9001b126:	fbba f9f5 	udiv	r9, sl, r5
9001b12a:	3801      	subs	r0, #1
9001b12c:	fb08 f409 	mul.w	r4, r8, r9
9001b130:	4038      	ands	r0, r7
9001b132:	f7ff ffc5 	bl	9001b0c0 <_ZN8touchgfx7muldivuEmmmRm>
9001b136:	462a      	mov	r2, r5
9001b138:	4607      	mov	r7, r0
9001b13a:	ab01      	add	r3, sp, #4
9001b13c:	fb05 a119 	mls	r1, r5, r9, sl
9001b140:	4640      	mov	r0, r8
9001b142:	f7ff ffbd 	bl	9001b0c0 <_ZN8touchgfx7muldivuEmmmRm>
9001b146:	9b01      	ldr	r3, [sp, #4]
9001b148:	6832      	ldr	r2, [r6, #0]
9001b14a:	441a      	add	r2, r3
9001b14c:	fbb2 f3f5 	udiv	r3, r2, r5
9001b150:	441c      	add	r4, r3
9001b152:	fb05 2513 	mls	r5, r5, r3, r2
9001b156:	443c      	add	r4, r7
9001b158:	4420      	add	r0, r4
9001b15a:	e7db      	b.n	9001b114 <_ZN8touchgfx7muldivuEmmmRm+0x54>

9001b15c <_ZN8touchgfx6muldivElllRl>:
9001b15c:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001b15e:	2800      	cmp	r0, #0
9001b160:	461e      	mov	r6, r3
9001b162:	bfba      	itte	lt
9001b164:	4240      	neglt	r0, r0
9001b166:	f04f 34ff 	movlt.w	r4, #4294967295
9001b16a:	2401      	movge	r4, #1
9001b16c:	2900      	cmp	r1, #0
9001b16e:	bfbc      	itt	lt
9001b170:	4249      	neglt	r1, r1
9001b172:	4264      	neglt	r4, r4
9001b174:	2a00      	cmp	r2, #0
9001b176:	bfb6      	itet	lt
9001b178:	4265      	neglt	r5, r4
9001b17a:	4625      	movge	r5, r4
9001b17c:	4252      	neglt	r2, r2
9001b17e:	4288      	cmp	r0, r1
9001b180:	bfc2      	ittt	gt
9001b182:	4603      	movgt	r3, r0
9001b184:	4608      	movgt	r0, r1
9001b186:	4619      	movgt	r1, r3
9001b188:	ab01      	add	r3, sp, #4
9001b18a:	f7ff ff99 	bl	9001b0c0 <_ZN8touchgfx7muldivuEmmmRm>
9001b18e:	9b01      	ldr	r3, [sp, #4]
9001b190:	4368      	muls	r0, r5
9001b192:	435c      	muls	r4, r3
9001b194:	6034      	str	r4, [r6, #0]
9001b196:	b002      	add	sp, #8
9001b198:	bd70      	pop	{r4, r5, r6, pc}

9001b19a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
9001b19a:	2001      	movs	r0, #1
9001b19c:	4770      	bx	lr

9001b19e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001b19e:	2002      	movs	r0, #2
9001b1a0:	4770      	bx	lr

9001b1a2 <_ZN8touchgfx6ScreenD1Ev>:
9001b1a2:	4770      	bx	lr

9001b1a4 <_ZN8touchgfx6Screen11setupScreenEv>:
9001b1a4:	4770      	bx	lr

9001b1a6 <_ZN8touchgfx12GestureEventD1Ev>:
9001b1a6:	4770      	bx	lr

9001b1a8 <_ZN8touchgfx9DragEventD1Ev>:
9001b1a8:	4770      	bx	lr

9001b1aa <_ZN8touchgfx9DragEventD0Ev>:
9001b1aa:	b510      	push	{r4, lr}
9001b1ac:	4604      	mov	r4, r0
9001b1ae:	2110      	movs	r1, #16
9001b1b0:	f010 fcd3 	bl	9002bb5a <_ZdlPvj>
9001b1b4:	4620      	mov	r0, r4
9001b1b6:	bd10      	pop	{r4, pc}

9001b1b8 <_ZN8touchgfx12GestureEventD0Ev>:
9001b1b8:	b510      	push	{r4, lr}
9001b1ba:	4604      	mov	r4, r0
9001b1bc:	210c      	movs	r1, #12
9001b1be:	f010 fccc 	bl	9002bb5a <_ZdlPvj>
9001b1c2:	4620      	mov	r0, r4
9001b1c4:	bd10      	pop	{r4, pc}

9001b1c6 <_ZN8touchgfx6ScreenD0Ev>:
9001b1c6:	b510      	push	{r4, lr}
9001b1c8:	4604      	mov	r4, r0
9001b1ca:	213c      	movs	r1, #60	@ 0x3c
9001b1cc:	f010 fcc5 	bl	9002bb5a <_ZdlPvj>
9001b1d0:	4620      	mov	r0, r4
9001b1d2:	bd10      	pop	{r4, pc}

9001b1d4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
9001b1d4:	b530      	push	{r4, r5, lr}
9001b1d6:	460d      	mov	r5, r1
9001b1d8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001b1da:	b087      	sub	sp, #28
9001b1dc:	4604      	mov	r4, r0
9001b1de:	b301      	cbz	r1, 9001b222 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
9001b1e0:	a801      	add	r0, sp, #4
9001b1e2:	f7ff fb87 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b1e6:	892a      	ldrh	r2, [r5, #8]
9001b1e8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
9001b1ec:	7928      	ldrb	r0, [r5, #4]
9001b1ee:	1ad2      	subs	r2, r2, r3
9001b1f0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
9001b1f2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
9001b1f6:	441a      	add	r2, r3
9001b1f8:	896b      	ldrh	r3, [r5, #10]
9001b1fa:	f8bd 5006 	ldrh.w	r5, [sp, #6]
9001b1fe:	f88d 0010 	strb.w	r0, [sp, #16]
9001b202:	1b5b      	subs	r3, r3, r5
9001b204:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
9001b206:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001b208:	442b      	add	r3, r5
9001b20a:	4d07      	ldr	r5, [pc, #28]	@ (9001b228 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
9001b20c:	f8ad 1012 	strh.w	r1, [sp, #18]
9001b210:	a903      	add	r1, sp, #12
9001b212:	9503      	str	r5, [sp, #12]
9001b214:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b218:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b21c:	6803      	ldr	r3, [r0, #0]
9001b21e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001b220:	4798      	blx	r3
9001b222:	b007      	add	sp, #28
9001b224:	bd30      	pop	{r4, r5, pc}
9001b226:	bf00      	nop
9001b228:	90030618 	.word	0x90030618

9001b22c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
9001b22c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001b230:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001b232:	b08a      	sub	sp, #40	@ 0x28
9001b234:	4604      	mov	r4, r0
9001b236:	460d      	mov	r5, r1
9001b238:	b113      	cbz	r3, 9001b240 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001b23a:	790b      	ldrb	r3, [r1, #4]
9001b23c:	2b00      	cmp	r3, #0
9001b23e:	d044      	beq.n	9001b2ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001b240:	f104 0804 	add.w	r8, r4, #4
9001b244:	a803      	add	r0, sp, #12
9001b246:	4641      	mov	r1, r8
9001b248:	f7ff fb54 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b24c:	792b      	ldrb	r3, [r5, #4]
9001b24e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001b252:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
9001b256:	b983      	cbnz	r3, 9001b27a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
9001b258:	f104 0336 	add.w	r3, r4, #54	@ 0x36
9001b25c:	892a      	ldrh	r2, [r5, #8]
9001b25e:	88e9      	ldrh	r1, [r5, #6]
9001b260:	4640      	mov	r0, r8
9001b262:	1b92      	subs	r2, r2, r6
9001b264:	9301      	str	r3, [sp, #4]
9001b266:	1bc9      	subs	r1, r1, r7
9001b268:	f104 0334 	add.w	r3, r4, #52	@ 0x34
9001b26c:	b212      	sxth	r2, r2
9001b26e:	9300      	str	r3, [sp, #0]
9001b270:	b209      	sxth	r1, r1
9001b272:	f104 0330 	add.w	r3, r4, #48	@ 0x30
9001b276:	f7f8 f853 	bl	90013320 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001b27a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001b27c:	b329      	cbz	r1, 9001b2ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001b27e:	a805      	add	r0, sp, #20
9001b280:	f7ff fb38 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b284:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001b288:	792b      	ldrb	r3, [r5, #4]
9001b28a:	a907      	add	r1, sp, #28
9001b28c:	1abf      	subs	r7, r7, r2
9001b28e:	88ea      	ldrh	r2, [r5, #6]
9001b290:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9001b292:	4417      	add	r7, r2
9001b294:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
9001b296:	f88d 3020 	strb.w	r3, [sp, #32]
9001b29a:	4417      	add	r7, r2
9001b29c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001b2a0:	1ab6      	subs	r6, r6, r2
9001b2a2:	892a      	ldrh	r2, [r5, #8]
9001b2a4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
9001b2a8:	4416      	add	r6, r2
9001b2aa:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001b2ac:	4416      	add	r6, r2
9001b2ae:	4a08      	ldr	r2, [pc, #32]	@ (9001b2d0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001b2b0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
9001b2b4:	2600      	movs	r6, #0
9001b2b6:	9207      	str	r2, [sp, #28]
9001b2b8:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
9001b2bc:	6803      	ldr	r3, [r0, #0]
9001b2be:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001b2c0:	4798      	blx	r3
9001b2c2:	792b      	ldrb	r3, [r5, #4]
9001b2c4:	b10b      	cbz	r3, 9001b2ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001b2c6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
9001b2ca:	b00a      	add	sp, #40	@ 0x28
9001b2cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001b2d0:	90030388 	.word	0x90030388

9001b2d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
9001b2d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001b2d8:	460c      	mov	r4, r1
9001b2da:	6b01      	ldr	r1, [r0, #48]	@ 0x30
9001b2dc:	b088      	sub	sp, #32
9001b2de:	4605      	mov	r5, r0
9001b2e0:	2900      	cmp	r1, #0
9001b2e2:	d06d      	beq.n	9001b3c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
9001b2e4:	4668      	mov	r0, sp
9001b2e6:	f7ff fb05 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b2ea:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
9001b2ec:	88e3      	ldrh	r3, [r4, #6]
9001b2ee:	f9bd 8000 	ldrsh.w	r8, [sp]
9001b2f2:	440b      	add	r3, r1
9001b2f4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
9001b2f8:	b21b      	sxth	r3, r3
9001b2fa:	4543      	cmp	r3, r8
9001b2fc:	db31      	blt.n	9001b362 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b2fe:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001b302:	44c4      	add	ip, r8
9001b304:	fa0f fc8c 	sxth.w	ip, ip
9001b308:	4563      	cmp	r3, ip
9001b30a:	da2a      	bge.n	9001b362 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b30c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
9001b30e:	8926      	ldrh	r6, [r4, #8]
9001b310:	4416      	add	r6, r2
9001b312:	b236      	sxth	r6, r6
9001b314:	42be      	cmp	r6, r7
9001b316:	db24      	blt.n	9001b362 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b318:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001b31c:	4438      	add	r0, r7
9001b31e:	b200      	sxth	r0, r0
9001b320:	4286      	cmp	r6, r0
9001b322:	da1e      	bge.n	9001b362 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b324:	8963      	ldrh	r3, [r4, #10]
9001b326:	4419      	add	r1, r3
9001b328:	b209      	sxth	r1, r1
9001b32a:	4541      	cmp	r1, r8
9001b32c:	db08      	blt.n	9001b340 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001b32e:	4561      	cmp	r1, ip
9001b330:	da06      	bge.n	9001b340 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001b332:	89a3      	ldrh	r3, [r4, #12]
9001b334:	441a      	add	r2, r3
9001b336:	b212      	sxth	r2, r2
9001b338:	42ba      	cmp	r2, r7
9001b33a:	db01      	blt.n	9001b340 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001b33c:	4282      	cmp	r2, r0
9001b33e:	db10      	blt.n	9001b362 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001b340:	4b21      	ldr	r3, [pc, #132]	@ (9001b3c8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001b342:	a904      	add	r1, sp, #16
9001b344:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001b346:	9304      	str	r3, [sp, #16]
9001b348:	2302      	movs	r3, #2
9001b34a:	f88d 3014 	strb.w	r3, [sp, #20]
9001b34e:	2300      	movs	r3, #0
9001b350:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b354:	f8ad 3018 	strh.w	r3, [sp, #24]
9001b358:	f8ad 301a 	strh.w	r3, [sp, #26]
9001b35c:	6803      	ldr	r3, [r0, #0]
9001b35e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
9001b360:	4798      	blx	r3
9001b362:	1d29      	adds	r1, r5, #4
9001b364:	a802      	add	r0, sp, #8
9001b366:	f7ff fac5 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b36a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001b36e:	88e0      	ldrh	r0, [r4, #6]
9001b370:	eba3 0808 	sub.w	r8, r3, r8
9001b374:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001b378:	7921      	ldrb	r1, [r4, #4]
9001b37a:	fa1f f888 	uxth.w	r8, r8
9001b37e:	1bdf      	subs	r7, r3, r7
9001b380:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
9001b384:	b2bb      	uxth	r3, r7
9001b386:	4440      	add	r0, r8
9001b388:	8922      	ldrh	r2, [r4, #8]
9001b38a:	8967      	ldrh	r7, [r4, #10]
9001b38c:	4460      	add	r0, ip
9001b38e:	89a4      	ldrh	r4, [r4, #12]
9001b390:	441a      	add	r2, r3
9001b392:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
9001b394:	44b8      	add	r8, r7
9001b396:	4423      	add	r3, r4
9001b398:	f8ad 0016 	strh.w	r0, [sp, #22]
9001b39c:	4432      	add	r2, r6
9001b39e:	44e0      	add	r8, ip
9001b3a0:	4433      	add	r3, r6
9001b3a2:	4c0a      	ldr	r4, [pc, #40]	@ (9001b3cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
9001b3a4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9001b3a6:	f88d 1014 	strb.w	r1, [sp, #20]
9001b3aa:	a904      	add	r1, sp, #16
9001b3ac:	9404      	str	r4, [sp, #16]
9001b3ae:	f8ad 2018 	strh.w	r2, [sp, #24]
9001b3b2:	f8ad 801a 	strh.w	r8, [sp, #26]
9001b3b6:	f8ad 301c 	strh.w	r3, [sp, #28]
9001b3ba:	6803      	ldr	r3, [r0, #0]
9001b3bc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001b3be:	4798      	blx	r3
9001b3c0:	b008      	add	sp, #32
9001b3c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001b3c6:	bf00      	nop
9001b3c8:	90030388 	.word	0x90030388
9001b3cc:	90030604 	.word	0x90030604

9001b3d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001b3d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001b3d2:	4604      	mov	r4, r0
9001b3d4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
9001b3d8:	3201      	adds	r2, #1
9001b3da:	d112      	bne.n	9001b402 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
9001b3dc:	2500      	movs	r5, #0
9001b3de:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001b3e2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9001b3e6:	6803      	ldr	r3, [r0, #0]
9001b3e8:	9500      	str	r5, [sp, #0]
9001b3ea:	466d      	mov	r5, sp
9001b3ec:	f8ad 1004 	strh.w	r1, [sp, #4]
9001b3f0:	f8ad 2006 	strh.w	r2, [sp, #6]
9001b3f4:	4629      	mov	r1, r5
9001b3f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001b3f8:	4798      	blx	r3
9001b3fa:	e895 0003 	ldmia.w	r5, {r0, r1}
9001b3fe:	e884 0003 	stmia.w	r4, {r0, r1}
9001b402:	4620      	mov	r0, r4
9001b404:	b003      	add	sp, #12
9001b406:	bd30      	pop	{r4, r5, pc}

9001b408 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
9001b408:	b513      	push	{r0, r1, r4, lr}
9001b40a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001b40e:	4604      	mov	r4, r0
9001b410:	3301      	adds	r3, #1
9001b412:	d109      	bne.n	9001b428 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
9001b414:	4601      	mov	r1, r0
9001b416:	4668      	mov	r0, sp
9001b418:	f7ff fa6c 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b41c:	f8bd 3000 	ldrh.w	r3, [sp]
9001b420:	8423      	strh	r3, [r4, #32]
9001b422:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001b426:	8463      	strh	r3, [r4, #34]	@ 0x22
9001b428:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001b42c:	b002      	add	sp, #8
9001b42e:	bd10      	pop	{r4, pc}

9001b430 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001b430:	b513      	push	{r0, r1, r4, lr}
9001b432:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
9001b436:	4604      	mov	r4, r0
9001b438:	3301      	adds	r3, #1
9001b43a:	d109      	bne.n	9001b450 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001b43c:	4601      	mov	r1, r0
9001b43e:	4668      	mov	r0, sp
9001b440:	f7ff fa58 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b444:	f8bd 3000 	ldrh.w	r3, [sp]
9001b448:	8423      	strh	r3, [r4, #32]
9001b44a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001b44e:	8463      	strh	r3, [r4, #34]	@ 0x22
9001b450:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
9001b454:	b002      	add	sp, #8
9001b456:	bd10      	pop	{r4, pc}

9001b458 <_ZN8touchgfx6ScreenC1Ev>:
9001b458:	b570      	push	{r4, r5, r6, lr}
9001b45a:	4b17      	ldr	r3, [pc, #92]	@ (9001b4b8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001b45c:	4605      	mov	r5, r0
9001b45e:	4a17      	ldr	r2, [pc, #92]	@ (9001b4bc <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001b460:	2101      	movs	r1, #1
9001b462:	f845 3b04 	str.w	r3, [r5], #4
9001b466:	2300      	movs	r3, #0
9001b468:	6042      	str	r2, [r0, #4]
9001b46a:	4604      	mov	r4, r0
9001b46c:	8103      	strh	r3, [r0, #8]
9001b46e:	8143      	strh	r3, [r0, #10]
9001b470:	8183      	strh	r3, [r0, #12]
9001b472:	81c3      	strh	r3, [r0, #14]
9001b474:	8203      	strh	r3, [r0, #16]
9001b476:	8243      	strh	r3, [r0, #18]
9001b478:	8283      	strh	r3, [r0, #20]
9001b47a:	82c3      	strh	r3, [r0, #22]
9001b47c:	6203      	str	r3, [r0, #32]
9001b47e:	8483      	strh	r3, [r0, #36]	@ 0x24
9001b480:	84c3      	strh	r3, [r0, #38]	@ 0x26
9001b482:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
9001b486:	6343      	str	r3, [r0, #52]	@ 0x34
9001b488:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001b48c:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
9001b490:	e9c0 3306 	strd	r3, r3, [r0, #24]
9001b494:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
9001b498:	4b09      	ldr	r3, [pc, #36]	@ (9001b4c0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001b49a:	4628      	mov	r0, r5
9001b49c:	f9b3 6000 	ldrsh.w	r6, [r3]
9001b4a0:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9001b4a2:	4a08      	ldr	r2, [pc, #32]	@ (9001b4c4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
9001b4a4:	f9b2 1000 	ldrsh.w	r1, [r2]
9001b4a8:	4798      	blx	r3
9001b4aa:	6863      	ldr	r3, [r4, #4]
9001b4ac:	4628      	mov	r0, r5
9001b4ae:	4631      	mov	r1, r6
9001b4b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001b4b2:	4798      	blx	r3
9001b4b4:	4620      	mov	r0, r4
9001b4b6:	bd70      	pop	{r4, r5, r6, pc}
9001b4b8:	9003062c 	.word	0x9003062c
9001b4bc:	9002ff94 	.word	0x9002ff94
9001b4c0:	2402458c 	.word	0x2402458c
9001b4c4:	2402458a 	.word	0x2402458a

9001b4c8 <_ZN8touchgfx6Screen4drawEv>:
9001b4c8:	4b09      	ldr	r3, [pc, #36]	@ (9001b4f0 <_ZN8touchgfx6Screen4drawEv+0x28>)
9001b4ca:	b507      	push	{r0, r1, r2, lr}
9001b4cc:	f9b3 2000 	ldrsh.w	r2, [r3]
9001b4d0:	2100      	movs	r1, #0
9001b4d2:	4b08      	ldr	r3, [pc, #32]	@ (9001b4f4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
9001b4d4:	9100      	str	r1, [sp, #0]
9001b4d6:	4669      	mov	r1, sp
9001b4d8:	f9b3 3000 	ldrsh.w	r3, [r3]
9001b4dc:	f8ad 2004 	strh.w	r2, [sp, #4]
9001b4e0:	f8ad 3006 	strh.w	r3, [sp, #6]
9001b4e4:	6803      	ldr	r3, [r0, #0]
9001b4e6:	689b      	ldr	r3, [r3, #8]
9001b4e8:	4798      	blx	r3
9001b4ea:	b003      	add	sp, #12
9001b4ec:	f85d fb04 	ldr.w	pc, [sp], #4
9001b4f0:	2402458a 	.word	0x2402458a
9001b4f4:	2402458c 	.word	0x2402458c

9001b4f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
9001b4f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b4fc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001b500:	b089      	sub	sp, #36	@ 0x24
9001b502:	4680      	mov	r8, r0
9001b504:	460c      	mov	r4, r1
9001b506:	2b00      	cmp	r3, #0
9001b508:	4615      	mov	r5, r2
9001b50a:	dd0e      	ble.n	9001b52a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b50c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001b510:	2b00      	cmp	r3, #0
9001b512:	dd0a      	ble.n	9001b52a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b514:	4628      	mov	r0, r5
9001b516:	f7ff ff5b 	bl	9001b3d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001b51a:	4621      	mov	r1, r4
9001b51c:	f7fb fa74 	bl	90016a08 <_ZNK8touchgfx4Rect9intersectERKS0_>
9001b520:	69eb      	ldr	r3, [r5, #28]
9001b522:	b928      	cbnz	r0, 9001b530 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
9001b524:	461d      	mov	r5, r3
9001b526:	2b00      	cmp	r3, #0
9001b528:	d1f4      	bne.n	9001b514 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001b52a:	b009      	add	sp, #36	@ 0x24
9001b52c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b530:	ae04      	add	r6, sp, #16
9001b532:	2b00      	cmp	r3, #0
9001b534:	f000 80b5 	beq.w	9001b6a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001b538:	682b      	ldr	r3, [r5, #0]
9001b53a:	4629      	mov	r1, r5
9001b53c:	a802      	add	r0, sp, #8
9001b53e:	68db      	ldr	r3, [r3, #12]
9001b540:	4798      	blx	r3
9001b542:	4628      	mov	r0, r5
9001b544:	f7ff ff60 	bl	9001b408 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001b548:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001b54c:	4407      	add	r7, r0
9001b54e:	4628      	mov	r0, r5
9001b550:	f7ff ff6e 	bl	9001b430 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001b554:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001b558:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001b55c:	b23f      	sxth	r7, r7
9001b55e:	4418      	add	r0, r3
9001b560:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
9001b564:	4621      	mov	r1, r4
9001b566:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b56a:	f8ad 0012 	strh.w	r0, [sp, #18]
9001b56e:	4630      	mov	r0, r6
9001b570:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b574:	f8ad 7010 	strh.w	r7, [sp, #16]
9001b578:	f7f7 ffb4 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
9001b57c:	4628      	mov	r0, r5
9001b57e:	f7ff ff27 	bl	9001b3d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001b582:	ab06      	add	r3, sp, #24
9001b584:	4602      	mov	r2, r0
9001b586:	e896 0003 	ldmia.w	r6, {r0, r1}
9001b58a:	e883 0003 	stmia.w	r3, {r0, r1}
9001b58e:	4611      	mov	r1, r2
9001b590:	4618      	mov	r0, r3
9001b592:	f7f7 ffa7 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
9001b596:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001b59a:	f9b4 1000 	ldrsh.w	r1, [r4]
9001b59e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001b5a2:	4299      	cmp	r1, r3
9001b5a4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
9001b5a8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001b5ac:	d10b      	bne.n	9001b5c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001b5ae:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001b5b2:	4552      	cmp	r2, sl
9001b5b4:	d107      	bne.n	9001b5c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001b5b6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
9001b5ba:	455a      	cmp	r2, fp
9001b5bc:	d103      	bne.n	9001b5c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001b5be:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001b5c2:	454a      	cmp	r2, r9
9001b5c4:	d06d      	beq.n	9001b6a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001b5c6:	f1bb 0f00 	cmp.w	fp, #0
9001b5ca:	dd65      	ble.n	9001b698 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001b5cc:	f1b9 0f00 	cmp.w	r9, #0
9001b5d0:	dd62      	ble.n	9001b698 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001b5d2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001b5d6:	fa1f f08a 	uxth.w	r0, sl
9001b5da:	4552      	cmp	r2, sl
9001b5dc:	9000      	str	r0, [sp, #0]
9001b5de:	da12      	bge.n	9001b606 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001b5e0:	9301      	str	r3, [sp, #4]
9001b5e2:	9b00      	ldr	r3, [sp, #0]
9001b5e4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001b5e8:	f8ad 2012 	strh.w	r2, [sp, #18]
9001b5ec:	1a9a      	subs	r2, r3, r2
9001b5ee:	f8ad 1010 	strh.w	r1, [sp, #16]
9001b5f2:	4631      	mov	r1, r6
9001b5f4:	f8ad 0014 	strh.w	r0, [sp, #20]
9001b5f8:	4640      	mov	r0, r8
9001b5fa:	f8ad 2016 	strh.w	r2, [sp, #22]
9001b5fe:	69ea      	ldr	r2, [r5, #28]
9001b600:	f7ff ff7a 	bl	9001b4f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b604:	9b01      	ldr	r3, [sp, #4]
9001b606:	f9b4 2000 	ldrsh.w	r2, [r4]
9001b60a:	b29f      	uxth	r7, r3
9001b60c:	429a      	cmp	r2, r3
9001b60e:	da0d      	bge.n	9001b62c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001b610:	f8ad 2010 	strh.w	r2, [sp, #16]
9001b614:	1aba      	subs	r2, r7, r2
9001b616:	f8ad a012 	strh.w	sl, [sp, #18]
9001b61a:	4631      	mov	r1, r6
9001b61c:	f8ad 2014 	strh.w	r2, [sp, #20]
9001b620:	4640      	mov	r0, r8
9001b622:	f8ad 9016 	strh.w	r9, [sp, #22]
9001b626:	69ea      	ldr	r2, [r5, #28]
9001b628:	f7ff ff66 	bl	9001b4f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b62c:	8822      	ldrh	r2, [r4, #0]
9001b62e:	445f      	add	r7, fp
9001b630:	88a3      	ldrh	r3, [r4, #4]
9001b632:	b2bf      	uxth	r7, r7
9001b634:	4413      	add	r3, r2
9001b636:	b23a      	sxth	r2, r7
9001b638:	b29b      	uxth	r3, r3
9001b63a:	b219      	sxth	r1, r3
9001b63c:	4291      	cmp	r1, r2
9001b63e:	dd0d      	ble.n	9001b65c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001b640:	1bdb      	subs	r3, r3, r7
9001b642:	f8ad 2010 	strh.w	r2, [sp, #16]
9001b646:	f8ad a012 	strh.w	sl, [sp, #18]
9001b64a:	4631      	mov	r1, r6
9001b64c:	f8ad 3014 	strh.w	r3, [sp, #20]
9001b650:	4640      	mov	r0, r8
9001b652:	f8ad 9016 	strh.w	r9, [sp, #22]
9001b656:	69ea      	ldr	r2, [r5, #28]
9001b658:	f7ff ff4e 	bl	9001b4f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b65c:	88e2      	ldrh	r2, [r4, #6]
9001b65e:	8863      	ldrh	r3, [r4, #2]
9001b660:	4413      	add	r3, r2
9001b662:	9a00      	ldr	r2, [sp, #0]
9001b664:	444a      	add	r2, r9
9001b666:	b29b      	uxth	r3, r3
9001b668:	fa1f f982 	uxth.w	r9, r2
9001b66c:	b219      	sxth	r1, r3
9001b66e:	fa0f f289 	sxth.w	r2, r9
9001b672:	428a      	cmp	r2, r1
9001b674:	da15      	bge.n	9001b6a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
9001b676:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001b67a:	eba3 0309 	sub.w	r3, r3, r9
9001b67e:	f9b4 0000 	ldrsh.w	r0, [r4]
9001b682:	f8ad 1014 	strh.w	r1, [sp, #20]
9001b686:	4631      	mov	r1, r6
9001b688:	f8ad 0010 	strh.w	r0, [sp, #16]
9001b68c:	f8ad 2012 	strh.w	r2, [sp, #18]
9001b690:	f8ad 3016 	strh.w	r3, [sp, #22]
9001b694:	69ea      	ldr	r2, [r5, #28]
9001b696:	e001      	b.n	9001b69c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
9001b698:	69ea      	ldr	r2, [r5, #28]
9001b69a:	4621      	mov	r1, r4
9001b69c:	4640      	mov	r0, r8
9001b69e:	f7ff ff2b 	bl	9001b4f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b6a2:	4628      	mov	r0, r5
9001b6a4:	f7ff fe94 	bl	9001b3d0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001b6a8:	6861      	ldr	r1, [r4, #4]
9001b6aa:	4602      	mov	r2, r0
9001b6ac:	4633      	mov	r3, r6
9001b6ae:	6820      	ldr	r0, [r4, #0]
9001b6b0:	c303      	stmia	r3!, {r0, r1}
9001b6b2:	4611      	mov	r1, r2
9001b6b4:	4630      	mov	r0, r6
9001b6b6:	f7f7 ff15 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
9001b6ba:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001b6be:	2b00      	cmp	r3, #0
9001b6c0:	f77f af33 	ble.w	9001b52a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b6c4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
9001b6c8:	2b00      	cmp	r3, #0
9001b6ca:	f77f af2e 	ble.w	9001b52a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001b6ce:	4628      	mov	r0, r5
9001b6d0:	f7ff fe9a 	bl	9001b408 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
9001b6d4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
9001b6d8:	1a18      	subs	r0, r3, r0
9001b6da:	f8ad 0010 	strh.w	r0, [sp, #16]
9001b6de:	4628      	mov	r0, r5
9001b6e0:	f7ff fea6 	bl	9001b430 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
9001b6e4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001b6e8:	4631      	mov	r1, r6
9001b6ea:	1a18      	subs	r0, r3, r0
9001b6ec:	f8ad 0012 	strh.w	r0, [sp, #18]
9001b6f0:	4628      	mov	r0, r5
9001b6f2:	682b      	ldr	r3, [r5, #0]
9001b6f4:	689b      	ldr	r3, [r3, #8]
9001b6f6:	4798      	blx	r3
9001b6f8:	e717      	b.n	9001b52a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

9001b6fa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
9001b6fa:	b570      	push	{r4, r5, r6, lr}
9001b6fc:	1d06      	adds	r6, r0, #4
9001b6fe:	b086      	sub	sp, #24
9001b700:	460c      	mov	r4, r1
9001b702:	2300      	movs	r3, #0
9001b704:	4631      	mov	r1, r6
9001b706:	4605      	mov	r5, r0
9001b708:	a802      	add	r0, sp, #8
9001b70a:	9301      	str	r3, [sp, #4]
9001b70c:	f7ff f8f2 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b710:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001b714:	8822      	ldrh	r2, [r4, #0]
9001b716:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001b71a:	1ad2      	subs	r2, r2, r3
9001b71c:	8863      	ldrh	r3, [r4, #2]
9001b71e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001b722:	1a5b      	subs	r3, r3, r1
9001b724:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9001b728:	f8ad 2010 	strh.w	r2, [sp, #16]
9001b72c:	aa01      	add	r2, sp, #4
9001b72e:	f8ad 0014 	strh.w	r0, [sp, #20]
9001b732:	4630      	mov	r0, r6
9001b734:	f8ad 1016 	strh.w	r1, [sp, #22]
9001b738:	a904      	add	r1, sp, #16
9001b73a:	f8ad 3012 	strh.w	r3, [sp, #18]
9001b73e:	f7f7 ffa9 	bl	90013694 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001b742:	9a01      	ldr	r2, [sp, #4]
9001b744:	b11a      	cbz	r2, 9001b74e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
9001b746:	4621      	mov	r1, r4
9001b748:	4628      	mov	r0, r5
9001b74a:	f7ff fed5 	bl	9001b4f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001b74e:	b006      	add	sp, #24
9001b750:	bd70      	pop	{r4, r5, r6, pc}

9001b752 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001b752:	4602      	mov	r2, r0
9001b754:	b530      	push	{r4, r5, lr}
9001b756:	4604      	mov	r4, r0
9001b758:	b085      	sub	sp, #20
9001b75a:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001b75e:	460d      	mov	r5, r1
9001b760:	466b      	mov	r3, sp
9001b762:	6851      	ldr	r1, [r2, #4]
9001b764:	c303      	stmia	r3!, {r0, r1}
9001b766:	4629      	mov	r1, r5
9001b768:	4668      	mov	r0, sp
9001b76a:	f7f7 febb 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
9001b76e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9001b772:	b12b      	cbz	r3, 9001b780 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
9001b774:	4669      	mov	r1, sp
9001b776:	4620      	mov	r0, r4
9001b778:	f7ff ffbf 	bl	9001b6fa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001b77c:	b005      	add	sp, #20
9001b77e:	bd30      	pop	{r4, r5, pc}
9001b780:	3404      	adds	r4, #4
9001b782:	a802      	add	r0, sp, #8
9001b784:	4621      	mov	r1, r4
9001b786:	f7ff f8b5 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001b78a:	f8bd 3000 	ldrh.w	r3, [sp]
9001b78e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001b792:	4669      	mov	r1, sp
9001b794:	4620      	mov	r0, r4
9001b796:	1a9b      	subs	r3, r3, r2
9001b798:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001b79c:	f8ad 3000 	strh.w	r3, [sp]
9001b7a0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001b7a4:	1a9b      	subs	r3, r3, r2
9001b7a6:	f8ad 3002 	strh.w	r3, [sp, #2]
9001b7aa:	f7f7 ff3a 	bl	90013622 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001b7ae:	e7e5      	b.n	9001b77c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001b7b0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001b7b0:	460b      	mov	r3, r1
9001b7b2:	680a      	ldr	r2, [r1, #0]
9001b7b4:	1d01      	adds	r1, r0, #4
9001b7b6:	6992      	ldr	r2, [r2, #24]
9001b7b8:	4618      	mov	r0, r3
9001b7ba:	4710      	bx	r2

9001b7bc <_ZN8touchgfx12TextProviderC1Ev>:
9001b7bc:	b538      	push	{r3, r4, r5, lr}
9001b7be:	2500      	movs	r5, #0
9001b7c0:	2302      	movs	r3, #2
9001b7c2:	4604      	mov	r4, r0
9001b7c4:	220e      	movs	r2, #14
9001b7c6:	7403      	strb	r3, [r0, #16]
9001b7c8:	4629      	mov	r1, r5
9001b7ca:	6145      	str	r5, [r0, #20]
9001b7cc:	7605      	strb	r5, [r0, #24]
9001b7ce:	83c5      	strh	r5, [r0, #30]
9001b7d0:	8405      	strh	r5, [r0, #32]
9001b7d2:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001b7d4:	8705      	strh	r5, [r0, #56]	@ 0x38
9001b7d6:	87c5      	strh	r5, [r0, #62]	@ 0x3e
9001b7d8:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
9001b7dc:	e9c0 5500 	strd	r5, r5, [r0]
9001b7e0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
9001b7e4:	304c      	adds	r0, #76	@ 0x4c
9001b7e6:	f010 ffcb 	bl	9002c780 <memset>
9001b7ea:	2301      	movs	r3, #1
9001b7ec:	4620      	mov	r0, r4
9001b7ee:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
9001b7f2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001b7f6:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
9001b7fa:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
9001b7fe:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
9001b802:	f7e9 ff59 	bl	900056b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
9001b806:	4620      	mov	r0, r4
9001b808:	bd38      	pop	{r3, r4, r5, pc}

9001b80a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001b80a:	b530      	push	{r4, r5, lr}
9001b80c:	2500      	movs	r5, #0
9001b80e:	2401      	movs	r4, #1
9001b810:	6843      	ldr	r3, [r0, #4]
9001b812:	b913      	cbnz	r3, 9001b81a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
9001b814:	6803      	ldr	r3, [r0, #0]
9001b816:	b313      	cbz	r3, 9001b85e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001b818:	6043      	str	r3, [r0, #4]
9001b81a:	7e03      	ldrb	r3, [r0, #24]
9001b81c:	b143      	cbz	r3, 9001b830 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001b81e:	6943      	ldr	r3, [r0, #20]
9001b820:	b12b      	cbz	r3, 9001b82e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001b822:	881a      	ldrh	r2, [r3, #0]
9001b824:	b11a      	cbz	r2, 9001b82e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
9001b826:	1c9a      	adds	r2, r3, #2
9001b828:	6142      	str	r2, [r0, #20]
9001b82a:	8818      	ldrh	r0, [r3, #0]
9001b82c:	bd30      	pop	{r4, r5, pc}
9001b82e:	7605      	strb	r5, [r0, #24]
9001b830:	6843      	ldr	r3, [r0, #4]
9001b832:	8819      	ldrh	r1, [r3, #0]
9001b834:	b199      	cbz	r1, 9001b85e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001b836:	1c9a      	adds	r2, r3, #2
9001b838:	2902      	cmp	r1, #2
9001b83a:	6042      	str	r2, [r0, #4]
9001b83c:	d1f5      	bne.n	9001b82a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001b83e:	7c03      	ldrb	r3, [r0, #16]
9001b840:	2b01      	cmp	r3, #1
9001b842:	d8e5      	bhi.n	9001b810 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b844:	1c5a      	adds	r2, r3, #1
9001b846:	3302      	adds	r3, #2
9001b848:	7402      	strb	r2, [r0, #16]
9001b84a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001b84e:	6143      	str	r3, [r0, #20]
9001b850:	2b00      	cmp	r3, #0
9001b852:	d0dd      	beq.n	9001b810 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b854:	881b      	ldrh	r3, [r3, #0]
9001b856:	2b00      	cmp	r3, #0
9001b858:	d0da      	beq.n	9001b810 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b85a:	7604      	strb	r4, [r0, #24]
9001b85c:	e7d8      	b.n	9001b810 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001b85e:	2000      	movs	r0, #0
9001b860:	e7e4      	b.n	9001b82c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

9001b862 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
9001b862:	6001      	str	r1, [r0, #0]
9001b864:	2100      	movs	r1, #0
9001b866:	b430      	push	{r4, r5}
9001b868:	6041      	str	r1, [r0, #4]
9001b86a:	6815      	ldr	r5, [r2, #0]
9001b86c:	6085      	str	r5, [r0, #8]
9001b86e:	6852      	ldr	r2, [r2, #4]
9001b870:	6443      	str	r3, [r0, #68]	@ 0x44
9001b872:	9b02      	ldr	r3, [sp, #8]
9001b874:	60c2      	str	r2, [r0, #12]
9001b876:	7401      	strb	r1, [r0, #16]
9001b878:	6141      	str	r1, [r0, #20]
9001b87a:	7601      	strb	r1, [r0, #24]
9001b87c:	8701      	strh	r1, [r0, #56]	@ 0x38
9001b87e:	8401      	strh	r1, [r0, #32]
9001b880:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
9001b884:	6483      	str	r3, [r0, #72]	@ 0x48
9001b886:	bc30      	pop	{r4, r5}
9001b888:	f7e9 bf16 	b.w	900056b8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001b88c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
9001b88c:	b5f0      	push	{r4, r5, r6, r7, lr}
9001b88e:	4605      	mov	r5, r0
9001b890:	4608      	mov	r0, r1
9001b892:	b1f1      	cbz	r1, 9001b8d2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
9001b894:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
9001b898:	460b      	mov	r3, r1
9001b89a:	f101 0708 	add.w	r7, r1, #8
9001b89e:	4622      	mov	r2, r4
9001b8a0:	6818      	ldr	r0, [r3, #0]
9001b8a2:	3308      	adds	r3, #8
9001b8a4:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001b8a8:	4626      	mov	r6, r4
9001b8aa:	42bb      	cmp	r3, r7
9001b8ac:	c603      	stmia	r6!, {r0, r1}
9001b8ae:	4634      	mov	r4, r6
9001b8b0:	d1f6      	bne.n	9001b8a0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
9001b8b2:	6818      	ldr	r0, [r3, #0]
9001b8b4:	6030      	str	r0, [r6, #0]
9001b8b6:	4610      	mov	r0, r2
9001b8b8:	889b      	ldrh	r3, [r3, #4]
9001b8ba:	80b3      	strh	r3, [r6, #4]
9001b8bc:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
9001b8c0:	015b      	lsls	r3, r3, #5
9001b8c2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001b8c6:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
9001b8ca:	430b      	orrs	r3, r1
9001b8cc:	425b      	negs	r3, r3
9001b8ce:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
9001b8d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001b8d4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
9001b8d4:	b538      	push	{r3, r4, r5, lr}
9001b8d6:	460c      	mov	r4, r1
9001b8d8:	6811      	ldr	r1, [r2, #0]
9001b8da:	4610      	mov	r0, r2
9001b8dc:	68cd      	ldr	r5, [r1, #12]
9001b8de:	4619      	mov	r1, r3
9001b8e0:	47a8      	blx	r5
9001b8e2:	2800      	cmp	r0, #0
9001b8e4:	bf08      	it	eq
9001b8e6:	4620      	moveq	r0, r4
9001b8e8:	bd38      	pop	{r3, r4, r5, pc}
	...

9001b8ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001b8ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001b8f0:	468c      	mov	ip, r1
9001b8f2:	4604      	mov	r4, r0
9001b8f4:	4615      	mov	r5, r2
9001b8f6:	b942      	cbnz	r2, 9001b90a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
9001b8f8:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
9001b8fc:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
9001b900:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
9001b904:	4628      	mov	r0, r5
9001b906:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001b90a:	7b50      	ldrb	r0, [r2, #13]
9001b90c:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
9001b910:	8893      	ldrh	r3, [r2, #4]
9001b912:	0106      	lsls	r6, r0, #4
9001b914:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001b918:	79ee      	ldrb	r6, [r5, #7]
9001b91a:	4316      	orrs	r6, r2
9001b91c:	185a      	adds	r2, r3, r1
9001b91e:	b291      	uxth	r1, r2
9001b920:	b2b7      	uxth	r7, r6
9001b922:	291d      	cmp	r1, #29
9001b924:	d87f      	bhi.n	9001ba26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
9001b926:	2201      	movs	r2, #1
9001b928:	10f6      	asrs	r6, r6, #3
9001b92a:	408a      	lsls	r2, r1
9001b92c:	4974      	ldr	r1, [pc, #464]	@ (9001bb00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
9001b92e:	420a      	tst	r2, r1
9001b930:	d12e      	bne.n	9001b990 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
9001b932:	f412 7f60 	tst.w	r2, #896	@ 0x380
9001b936:	d076      	beq.n	9001ba26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
9001b938:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
9001b93c:	462b      	mov	r3, r5
9001b93e:	f105 0e08 	add.w	lr, r5, #8
9001b942:	4615      	mov	r5, r2
9001b944:	6818      	ldr	r0, [r3, #0]
9001b946:	3308      	adds	r3, #8
9001b948:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001b94c:	4694      	mov	ip, r2
9001b94e:	4573      	cmp	r3, lr
9001b950:	e8ac 0003 	stmia.w	ip!, {r0, r1}
9001b954:	4662      	mov	r2, ip
9001b956:	d1f5      	bne.n	9001b944 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
9001b958:	6818      	ldr	r0, [r3, #0]
9001b95a:	f8cc 0000 	str.w	r0, [ip]
9001b95e:	889b      	ldrh	r3, [r3, #4]
9001b960:	f8ac 3004 	strh.w	r3, [ip, #4]
9001b964:	b2b3      	uxth	r3, r6
9001b966:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
9001b96a:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
9001b96e:	1aca      	subs	r2, r1, r3
9001b970:	1bcf      	subs	r7, r1, r7
9001b972:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
9001b976:	b292      	uxth	r2, r2
9001b978:	1afb      	subs	r3, r7, r3
9001b97a:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
9001b97e:	10d2      	asrs	r2, r2, #3
9001b980:	f002 0260 	and.w	r2, r2, #96	@ 0x60
9001b984:	4302      	orrs	r2, r0
9001b986:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
9001b98a:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001b98e:	e7b9      	b.n	9001b904 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
9001b990:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
9001b994:	462b      	mov	r3, r5
9001b996:	f105 0808 	add.w	r8, r5, #8
9001b99a:	4615      	mov	r5, r2
9001b99c:	6818      	ldr	r0, [r3, #0]
9001b99e:	3308      	adds	r3, #8
9001b9a0:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001b9a4:	4696      	mov	lr, r2
9001b9a6:	4543      	cmp	r3, r8
9001b9a8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001b9ac:	4672      	mov	r2, lr
9001b9ae:	d1f5      	bne.n	9001b99c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
9001b9b0:	6818      	ldr	r0, [r3, #0]
9001b9b2:	f8ce 0000 	str.w	r0, [lr]
9001b9b6:	889b      	ldrh	r3, [r3, #4]
9001b9b8:	f8ae 3004 	strh.w	r3, [lr, #4]
9001b9bc:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001b9be:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001b9c2:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
9001b9c4:	f640 6333 	movw	r3, #3635	@ 0xe33
9001b9c8:	4299      	cmp	r1, r3
9001b9ca:	d111      	bne.n	9001b9f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
9001b9cc:	f8dc 3000 	ldr.w	r3, [ip]
9001b9d0:	4660      	mov	r0, ip
9001b9d2:	68db      	ldr	r3, [r3, #12]
9001b9d4:	4798      	blx	r3
9001b9d6:	7b41      	ldrb	r1, [r0, #13]
9001b9d8:	00cb      	lsls	r3, r1, #3
9001b9da:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001b9de:	7a03      	ldrb	r3, [r0, #8]
9001b9e0:	4313      	orrs	r3, r2
9001b9e2:	064a      	lsls	r2, r1, #25
9001b9e4:	bf44      	itt	mi
9001b9e6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001b9ea:	b21b      	sxthmi	r3, r3
9001b9ec:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001b9f0:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
9001b9f4:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001b9f8:	443b      	add	r3, r7
9001b9fa:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001b9fe:	4433      	add	r3, r6
9001ba00:	b29b      	uxth	r3, r3
9001ba02:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001ba06:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001ba0a:	10db      	asrs	r3, r3, #3
9001ba0c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001ba10:	4313      	orrs	r3, r2
9001ba12:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
9001ba16:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001ba1a:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
9001ba1e:	1a9b      	subs	r3, r3, r2
9001ba20:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
9001ba24:	e76e      	b.n	9001b904 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
9001ba26:	f023 0204 	bic.w	r2, r3, #4
9001ba2a:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001ba2e:	428a      	cmp	r2, r1
9001ba30:	d003      	beq.n	9001ba3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
9001ba32:	f640 621d 	movw	r2, #3613	@ 0xe1d
9001ba36:	4293      	cmp	r3, r2
9001ba38:	d120      	bne.n	9001ba7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x190>
9001ba3a:	3b01      	subs	r3, #1
9001ba3c:	4662      	mov	r2, ip
9001ba3e:	4629      	mov	r1, r5
9001ba40:	4620      	mov	r0, r4
9001ba42:	b29b      	uxth	r3, r3
9001ba44:	f7ff ff46 	bl	9001b8d4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001ba48:	7b41      	ldrb	r1, [r0, #13]
9001ba4a:	00cb      	lsls	r3, r1, #3
9001ba4c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001ba50:	7a03      	ldrb	r3, [r0, #8]
9001ba52:	0648      	lsls	r0, r1, #25
9001ba54:	ea43 0302 	orr.w	r3, r3, r2
9001ba58:	bf44      	itt	mi
9001ba5a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001ba5e:	b21b      	sxthmi	r3, r3
9001ba60:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001ba64:	7b6b      	ldrb	r3, [r5, #13]
9001ba66:	7aaa      	ldrb	r2, [r5, #10]
9001ba68:	005b      	lsls	r3, r3, #1
9001ba6a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001ba6e:	4313      	orrs	r3, r2
9001ba70:	115a      	asrs	r2, r3, #5
9001ba72:	eb02 0393 	add.w	r3, r2, r3, lsr #2
9001ba76:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001ba7a:	e032      	b.n	9001bae2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
9001ba7c:	00c2      	lsls	r2, r0, #3
9001ba7e:	f402 7180 	and.w	r1, r2, #256	@ 0x100
9001ba82:	7a2a      	ldrb	r2, [r5, #8]
9001ba84:	430a      	orrs	r2, r1
9001ba86:	0641      	lsls	r1, r0, #25
9001ba88:	f640 6109 	movw	r1, #3593	@ 0xe09
9001ba8c:	bf44      	itt	mi
9001ba8e:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
9001ba92:	b212      	sxthmi	r2, r2
9001ba94:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
9001ba98:	f023 0210 	bic.w	r2, r3, #16
9001ba9c:	428a      	cmp	r2, r1
9001ba9e:	d003      	beq.n	9001baa8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
9001baa0:	f640 6213 	movw	r2, #3603	@ 0xe13
9001baa4:	4293      	cmp	r3, r2
9001baa6:	d129      	bne.n	9001bafc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>
9001baa8:	7b6e      	ldrb	r6, [r5, #13]
9001baaa:	4629      	mov	r1, r5
9001baac:	4620      	mov	r0, r4
9001baae:	0076      	lsls	r6, r6, #1
9001bab0:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001bab4:	7aae      	ldrb	r6, [r5, #10]
9001bab6:	4316      	orrs	r6, r2
9001bab8:	f640 6213 	movw	r2, #3603	@ 0xe13
9001babc:	4293      	cmp	r3, r2
9001babe:	4662      	mov	r2, ip
9001bac0:	bf16      	itet	ne
9001bac2:	f103 33ff 	addne.w	r3, r3, #4294967295
9001bac6:	f640 630c 	movweq	r3, #3596	@ 0xe0c
9001baca:	b29b      	uxthne	r3, r3
9001bacc:	f7ff ff02 	bl	9001b8d4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001bad0:	7b43      	ldrb	r3, [r0, #13]
9001bad2:	7a82      	ldrb	r2, [r0, #10]
9001bad4:	005b      	lsls	r3, r3, #1
9001bad6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001bada:	4313      	orrs	r3, r2
9001badc:	1af6      	subs	r6, r6, r3
9001bade:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
9001bae2:	7b69      	ldrb	r1, [r5, #13]
9001bae4:	00cb      	lsls	r3, r1, #3
9001bae6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001baea:	7a2b      	ldrb	r3, [r5, #8]
9001baec:	4313      	orrs	r3, r2
9001baee:	064a      	lsls	r2, r1, #25
9001baf0:	bf44      	itt	mi
9001baf2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001baf6:	b21b      	sxthmi	r3, r3
9001baf8:	1bdb      	subs	r3, r3, r7
9001bafa:	e746      	b.n	9001b98a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
9001bafc:	2300      	movs	r3, #0
9001bafe:	e7ba      	b.n	9001ba76 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18a>
9001bb00:	3fc00079 	.word	0x3fc00079

9001bb04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
9001bb04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001bb08:	4604      	mov	r4, r0
9001bb0a:	b942      	cbnz	r2, 9001bb1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
9001bb0c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001bb10:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
9001bb14:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
9001bb18:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
9001bb1c:	e047      	b.n	9001bbae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001bb1e:	7b51      	ldrb	r1, [r2, #13]
9001bb20:	8893      	ldrh	r3, [r2, #4]
9001bb22:	010d      	lsls	r5, r1, #4
9001bb24:	f405 7080 	and.w	r0, r5, #256	@ 0x100
9001bb28:	79d5      	ldrb	r5, [r2, #7]
9001bb2a:	4305      	orrs	r5, r0
9001bb2c:	2d04      	cmp	r5, #4
9001bb2e:	bfcc      	ite	gt
9001bb30:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
9001bb34:	f04f 0e01 	movle.w	lr, #1
9001bb38:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
9001bb3c:	f200 80ab 	bhi.w	9001bc96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
9001bb40:	f240 60e7 	movw	r0, #1767	@ 0x6e7
9001bb44:	4283      	cmp	r3, r0
9001bb46:	d216      	bcs.n	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bb48:	f240 605b 	movw	r0, #1627	@ 0x65b
9001bb4c:	4283      	cmp	r3, r0
9001bb4e:	d859      	bhi.n	9001bc04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
9001bb50:	f240 6057 	movw	r0, #1623	@ 0x657
9001bb54:	4283      	cmp	r3, r0
9001bb56:	d20e      	bcs.n	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bb58:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001bb5c:	d24a      	bcs.n	9001bbf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
9001bb5e:	f240 604e 	movw	r0, #1614	@ 0x64e
9001bb62:	4283      	cmp	r3, r0
9001bb64:	d207      	bcs.n	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bb66:	f240 601a 	movw	r0, #1562	@ 0x61a
9001bb6a:	4283      	cmp	r3, r0
9001bb6c:	d02a      	beq.n	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bb6e:	d821      	bhi.n	9001bbb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
9001bb70:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
9001bb74:	d35b      	bcc.n	9001bc2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001bb76:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
9001bb7a:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001bb7e:	f040 80d0 	bne.w	9001bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001bb82:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
9001bb86:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001bb8a:	f040 80ca 	bne.w	9001bd22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
9001bb8e:	00cb      	lsls	r3, r1, #3
9001bb90:	0649      	lsls	r1, r1, #25
9001bb92:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001bb96:	7a13      	ldrb	r3, [r2, #8]
9001bb98:	ea43 0300 	orr.w	r3, r3, r0
9001bb9c:	bf44      	itt	mi
9001bb9e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bba2:	b21b      	sxthmi	r3, r3
9001bba4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001bba8:	1b5d      	subs	r5, r3, r5
9001bbaa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001bbae:	4610      	mov	r0, r2
9001bbb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001bbb4:	f240 604b 	movw	r0, #1611	@ 0x64b
9001bbb8:	4283      	cmp	r3, r0
9001bbba:	d338      	bcc.n	9001bc2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001bbbc:	f240 604c 	movw	r0, #1612	@ 0x64c
9001bbc0:	4283      	cmp	r3, r0
9001bbc2:	d9d8      	bls.n	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bbc4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
9001bbc8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
9001bbcc:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001bbd0:	f040 80f3 	bne.w	9001bdba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001bbd4:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001bbd8:	f040 80ef 	bne.w	9001bdba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
9001bbdc:	00cb      	lsls	r3, r1, #3
9001bbde:	064e      	lsls	r6, r1, #25
9001bbe0:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001bbe4:	7a13      	ldrb	r3, [r2, #8]
9001bbe6:	ea43 0300 	orr.w	r3, r3, r0
9001bbea:	bf44      	itt	mi
9001bbec:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bbf0:	b21b      	sxthmi	r3, r3
9001bbf2:	e7d9      	b.n	9001bba8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
9001bbf4:	f240 6054 	movw	r0, #1620	@ 0x654
9001bbf8:	4283      	cmp	r3, r0
9001bbfa:	d8e3      	bhi.n	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bbfc:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
9001bc00:	d9e0      	bls.n	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bc02:	e7b8      	b.n	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc04:	f240 6074 	movw	r0, #1652	@ 0x674
9001bc08:	4283      	cmp	r3, r0
9001bc0a:	d0b4      	beq.n	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc0c:	d82d      	bhi.n	9001bc6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
9001bc0e:	f240 605e 	movw	r0, #1630	@ 0x65e
9001bc12:	4283      	cmp	r3, r0
9001bc14:	d804      	bhi.n	9001bc20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
9001bc16:	f240 605d 	movw	r0, #1629	@ 0x65d
9001bc1a:	4283      	cmp	r3, r0
9001bc1c:	d3d2      	bcc.n	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bc1e:	e7aa      	b.n	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc20:	f240 605f 	movw	r0, #1631	@ 0x65f
9001bc24:	4283      	cmp	r3, r0
9001bc26:	d0cd      	beq.n	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bc28:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
9001bc2c:	d0a3      	beq.n	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc2e:	00cb      	lsls	r3, r1, #3
9001bc30:	0649      	lsls	r1, r1, #25
9001bc32:	f403 7080 	and.w	r0, r3, #256	@ 0x100
9001bc36:	7a13      	ldrb	r3, [r2, #8]
9001bc38:	ea43 0300 	orr.w	r3, r3, r0
9001bc3c:	bf44      	itt	mi
9001bc3e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bc42:	b21b      	sxthmi	r3, r3
9001bc44:	1b5d      	subs	r5, r3, r5
9001bc46:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001bc4a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001bc4e:	7b53      	ldrb	r3, [r2, #13]
9001bc50:	015b      	lsls	r3, r3, #5
9001bc52:	f403 7180 	and.w	r1, r3, #256	@ 0x100
9001bc56:	7993      	ldrb	r3, [r2, #6]
9001bc58:	430b      	orrs	r3, r1
9001bc5a:	2105      	movs	r1, #5
9001bc5c:	005b      	lsls	r3, r3, #1
9001bc5e:	fb93 f3f1 	sdiv	r3, r3, r1
9001bc62:	f992 1009 	ldrsb.w	r1, [r2, #9]
9001bc66:	440b      	add	r3, r1
9001bc68:	e756      	b.n	9001bb18 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
9001bc6a:	f240 60e2 	movw	r0, #1762	@ 0x6e2
9001bc6e:	4283      	cmp	r3, r0
9001bc70:	d809      	bhi.n	9001bc86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
9001bc72:	f240 60df 	movw	r0, #1759	@ 0x6df
9001bc76:	4283      	cmp	r3, r0
9001bc78:	f4bf af7d 	bcs.w	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc7c:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
9001bc80:	2b05      	cmp	r3, #5
9001bc82:	d8d4      	bhi.n	9001bc2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001bc84:	e777      	b.n	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bc86:	f240 60e3 	movw	r0, #1763	@ 0x6e3
9001bc8a:	4283      	cmp	r3, r0
9001bc8c:	d09a      	beq.n	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bc8e:	f240 60e4 	movw	r0, #1764	@ 0x6e4
9001bc92:	4283      	cmp	r3, r0
9001bc94:	e7ca      	b.n	9001bc2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
9001bc96:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
9001bc9a:	d22b      	bcs.n	9001bcf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
9001bc9c:	f640 00ed 	movw	r0, #2285	@ 0x8ed
9001bca0:	4283      	cmp	r3, r0
9001bca2:	d28f      	bcs.n	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bca4:	f640 00e5 	movw	r0, #2277	@ 0x8e5
9001bca8:	4283      	cmp	r3, r0
9001bcaa:	d816      	bhi.n	9001bcda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
9001bcac:	f640 00e4 	movw	r0, #2276	@ 0x8e4
9001bcb0:	4283      	cmp	r3, r0
9001bcb2:	f4bf af60 	bcs.w	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bcb6:	f240 60ec 	movw	r0, #1772	@ 0x6ec
9001bcba:	4283      	cmp	r3, r0
9001bcbc:	d80a      	bhi.n	9001bcd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
9001bcbe:	f240 60eb 	movw	r0, #1771	@ 0x6eb
9001bcc2:	4283      	cmp	r3, r0
9001bcc4:	f4bf af57 	bcs.w	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bcc8:	f240 60ea 	movw	r0, #1770	@ 0x6ea
9001bccc:	4283      	cmp	r3, r0
9001bcce:	f43f af79 	beq.w	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bcd2:	e7ac      	b.n	9001bc2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
9001bcd4:	f240 60ed 	movw	r0, #1773	@ 0x6ed
9001bcd8:	e7f8      	b.n	9001bccc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
9001bcda:	f640 00e8 	movw	r0, #2280	@ 0x8e8
9001bcde:	4283      	cmp	r3, r0
9001bce0:	d802      	bhi.n	9001bce8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
9001bce2:	f640 00e7 	movw	r0, #2279	@ 0x8e7
9001bce6:	e798      	b.n	9001bc1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
9001bce8:	f640 00e9 	movw	r0, #2281	@ 0x8e9
9001bcec:	4283      	cmp	r3, r0
9001bcee:	f47f af42 	bne.w	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bcf2:	e767      	b.n	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bcf4:	f640 00f6 	movw	r0, #2294	@ 0x8f6
9001bcf8:	4283      	cmp	r3, r0
9001bcfa:	f43f af63 	beq.w	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bcfe:	d802      	bhi.n	9001bd06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
9001bd00:	f640 00f2 	movw	r0, #2290	@ 0x8f2
9001bd04:	e7f2      	b.n	9001bcec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
9001bd06:	f640 00fa 	movw	r0, #2298	@ 0x8fa
9001bd0a:	4283      	cmp	r3, r0
9001bd0c:	d805      	bhi.n	9001bd1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
9001bd0e:	f640 00f9 	movw	r0, #2297	@ 0x8f9
9001bd12:	4283      	cmp	r3, r0
9001bd14:	f4ff af2f 	bcc.w	9001bb76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001bd18:	e754      	b.n	9001bbc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001bd1a:	f640 00fe 	movw	r0, #2302	@ 0x8fe
9001bd1e:	4283      	cmp	r3, r0
9001bd20:	e7af      	b.n	9001bc82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
9001bd22:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001bd26:	4617      	mov	r7, r2
9001bd28:	f102 0808 	add.w	r8, r2, #8
9001bd2c:	4666      	mov	r6, ip
9001bd2e:	6838      	ldr	r0, [r7, #0]
9001bd30:	3708      	adds	r7, #8
9001bd32:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001bd36:	46e6      	mov	lr, ip
9001bd38:	4547      	cmp	r7, r8
9001bd3a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
9001bd3e:	46f4      	mov	ip, lr
9001bd40:	d1f5      	bne.n	9001bd2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
9001bd42:	6838      	ldr	r0, [r7, #0]
9001bd44:	f8ce 0000 	str.w	r0, [lr]
9001bd48:	88b9      	ldrh	r1, [r7, #4]
9001bd4a:	f8ae 1004 	strh.w	r1, [lr, #4]
9001bd4e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001bd52:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001bd56:	d009      	beq.n	9001bd6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001bd58:	7b51      	ldrb	r1, [r2, #13]
9001bd5a:	7992      	ldrb	r2, [r2, #6]
9001bd5c:	0149      	lsls	r1, r1, #5
9001bd5e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001bd62:	4311      	orrs	r1, r2
9001bd64:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001bd68:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001bd6c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001bd70:	b2ad      	uxth	r5, r5
9001bd72:	d00d      	beq.n	9001bd90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
9001bd74:	442b      	add	r3, r5
9001bd76:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001bd7a:	b29b      	uxth	r3, r3
9001bd7c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001bd80:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001bd84:	10db      	asrs	r3, r3, #3
9001bd86:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001bd8a:	4313      	orrs	r3, r2
9001bd8c:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001bd90:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001bd94:	00cb      	lsls	r3, r1, #3
9001bd96:	064f      	lsls	r7, r1, #25
9001bd98:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001bd9c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001bda0:	ea43 0302 	orr.w	r3, r3, r2
9001bda4:	bf44      	itt	mi
9001bda6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001bdaa:	b21b      	sxthmi	r3, r3
9001bdac:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
9001bdb0:	1b5b      	subs	r3, r3, r5
9001bdb2:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
9001bdb6:	4632      	mov	r2, r6
9001bdb8:	e6f9      	b.n	9001bbae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001bdba:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
9001bdbe:	4617      	mov	r7, r2
9001bdc0:	f102 0908 	add.w	r9, r2, #8
9001bdc4:	4666      	mov	r6, ip
9001bdc6:	6838      	ldr	r0, [r7, #0]
9001bdc8:	3708      	adds	r7, #8
9001bdca:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001bdce:	46e0      	mov	r8, ip
9001bdd0:	454f      	cmp	r7, r9
9001bdd2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
9001bdd6:	46c4      	mov	ip, r8
9001bdd8:	d1f5      	bne.n	9001bdc6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
9001bdda:	6838      	ldr	r0, [r7, #0]
9001bddc:	f8c8 0000 	str.w	r0, [r8]
9001bde0:	88b9      	ldrh	r1, [r7, #4]
9001bde2:	f8a8 1004 	strh.w	r1, [r8, #4]
9001bde6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
9001bdea:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
9001bdee:	d009      	beq.n	9001be04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
9001bdf0:	7b51      	ldrb	r1, [r2, #13]
9001bdf2:	7992      	ldrb	r2, [r2, #6]
9001bdf4:	0149      	lsls	r1, r1, #5
9001bdf6:	f401 7180 	and.w	r1, r1, #256	@ 0x100
9001bdfa:	4311      	orrs	r1, r2
9001bdfc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001be00:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
9001be04:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
9001be08:	d00e      	beq.n	9001be28 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
9001be0a:	eba3 030e 	sub.w	r3, r3, lr
9001be0e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
9001be12:	b29b      	uxth	r3, r3
9001be14:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001be18:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
9001be1c:	10db      	asrs	r3, r3, #3
9001be1e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
9001be22:	4313      	orrs	r3, r2
9001be24:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
9001be28:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
9001be2c:	00cb      	lsls	r3, r1, #3
9001be2e:	0648      	lsls	r0, r1, #25
9001be30:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001be34:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
9001be38:	ea43 0302 	orr.w	r3, r3, r2
9001be3c:	bf44      	itt	mi
9001be3e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001be42:	b21b      	sxthmi	r3, r3
9001be44:	1b5d      	subs	r5, r3, r5
9001be46:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
9001be4a:	e7b4      	b.n	9001bdb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

9001be4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
9001be4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001be50:	461e      	mov	r6, r3
9001be52:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001be54:	4604      	mov	r4, r0
9001be56:	4617      	mov	r7, r2
9001be58:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001be5c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001be60:	f7e9 fbda 	bl	90005618 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001be64:	4605      	mov	r5, r0
9001be66:	b918      	cbnz	r0, 9001be70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001be68:	6030      	str	r0, [r6, #0]
9001be6a:	4628      	mov	r0, r5
9001be6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001be70:	683b      	ldr	r3, [r7, #0]
9001be72:	4601      	mov	r1, r0
9001be74:	4638      	mov	r0, r7
9001be76:	68db      	ldr	r3, [r3, #12]
9001be78:	4798      	blx	r3
9001be7a:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001be7e:	4602      	mov	r2, r0
9001be80:	6030      	str	r0, [r6, #0]
9001be82:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001be86:	d213      	bcs.n	9001beb0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001be88:	4643      	mov	r3, r8
9001be8a:	4639      	mov	r1, r7
9001be8c:	4620      	mov	r0, r4
9001be8e:	f7ff fe39 	bl	9001bb04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001be92:	6030      	str	r0, [r6, #0]
9001be94:	6833      	ldr	r3, [r6, #0]
9001be96:	b143      	cbz	r3, 9001beaa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001be98:	7b5a      	ldrb	r2, [r3, #13]
9001be9a:	7a9b      	ldrb	r3, [r3, #10]
9001be9c:	0052      	lsls	r2, r2, #1
9001be9e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001bea2:	4313      	orrs	r3, r2
9001bea4:	bf0c      	ite	eq
9001bea6:	2301      	moveq	r3, #1
9001bea8:	2300      	movne	r3, #0
9001beaa:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001beae:	e7dc      	b.n	9001be6a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
9001beb0:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001beb4:	b29b      	uxth	r3, r3
9001beb6:	2b7f      	cmp	r3, #127	@ 0x7f
9001beb8:	d804      	bhi.n	9001bec4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001beba:	4639      	mov	r1, r7
9001bebc:	4620      	mov	r0, r4
9001bebe:	f7ff fd15 	bl	9001b8ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001bec2:	e7e6      	b.n	9001be92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
9001bec4:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001bec8:	2b00      	cmp	r3, #0
9001beca:	d0e3      	beq.n	9001be94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001becc:	f640 1302 	movw	r3, #2306	@ 0x902
9001bed0:	429d      	cmp	r5, r3
9001bed2:	d1df      	bne.n	9001be94 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
9001bed4:	4601      	mov	r1, r0
9001bed6:	4620      	mov	r0, r4
9001bed8:	f7ff fcd8 	bl	9001b88c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001bedc:	e7d9      	b.n	9001be92 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

9001bede <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
9001bede:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001bee2:	461e      	mov	r6, r3
9001bee4:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001bee6:	4604      	mov	r4, r0
9001bee8:	4617      	mov	r7, r2
9001beea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001beee:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001bef2:	f7e9 fb91 	bl	90005618 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001bef6:	4605      	mov	r5, r0
9001bef8:	b918      	cbnz	r0, 9001bf02 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001befa:	6030      	str	r0, [r6, #0]
9001befc:	4628      	mov	r0, r5
9001befe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001bf02:	683b      	ldr	r3, [r7, #0]
9001bf04:	4601      	mov	r1, r0
9001bf06:	4638      	mov	r0, r7
9001bf08:	f8d3 9008 	ldr.w	r9, [r3, #8]
9001bf0c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
9001bf10:	47c8      	blx	r9
9001bf12:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
9001bf16:	4602      	mov	r2, r0
9001bf18:	6030      	str	r0, [r6, #0]
9001bf1a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
9001bf1e:	d213      	bcs.n	9001bf48 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
9001bf20:	4643      	mov	r3, r8
9001bf22:	4639      	mov	r1, r7
9001bf24:	4620      	mov	r0, r4
9001bf26:	f7ff fded 	bl	9001bb04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001bf2a:	6030      	str	r0, [r6, #0]
9001bf2c:	6833      	ldr	r3, [r6, #0]
9001bf2e:	b143      	cbz	r3, 9001bf42 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
9001bf30:	7b5a      	ldrb	r2, [r3, #13]
9001bf32:	7a9b      	ldrb	r3, [r3, #10]
9001bf34:	0052      	lsls	r2, r2, #1
9001bf36:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9001bf3a:	4313      	orrs	r3, r2
9001bf3c:	bf0c      	ite	eq
9001bf3e:	2301      	moveq	r3, #1
9001bf40:	2300      	movne	r3, #0
9001bf42:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
9001bf46:	e7d9      	b.n	9001befc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001bf48:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
9001bf4c:	b29b      	uxth	r3, r3
9001bf4e:	2b7f      	cmp	r3, #127	@ 0x7f
9001bf50:	d804      	bhi.n	9001bf5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
9001bf52:	4639      	mov	r1, r7
9001bf54:	4620      	mov	r0, r4
9001bf56:	f7ff fcc9 	bl	9001b8ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001bf5a:	e7e6      	b.n	9001bf2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
9001bf5c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
9001bf60:	2b00      	cmp	r3, #0
9001bf62:	d0e3      	beq.n	9001bf2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001bf64:	f640 1302 	movw	r3, #2306	@ 0x902
9001bf68:	429d      	cmp	r5, r3
9001bf6a:	d1df      	bne.n	9001bf2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
9001bf6c:	4601      	mov	r1, r0
9001bf6e:	4620      	mov	r0, r4
9001bf70:	f7ff fc8c 	bl	9001b88c <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
9001bf74:	e7d9      	b.n	9001bf2a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001bf76 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001bf76:	b510      	push	{r4, lr}
9001bf78:	4604      	mov	r4, r0
9001bf7a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
9001bf7e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001bf80:	b1e1      	cbz	r1, 9001bfbc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001bf82:	2b0a      	cmp	r3, #10
9001bf84:	d02d      	beq.n	9001bfe2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001bf86:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
9001bf88:	3901      	subs	r1, #1
9001bf8a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
9001bf8e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
9001bf90:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
9001bf94:	1c51      	adds	r1, r2, #1
9001bf96:	b289      	uxth	r1, r1
9001bf98:	2901      	cmp	r1, #1
9001bf9a:	bf8a      	itet	hi
9001bf9c:	f102 32ff 	addhi.w	r2, r2, #4294967295
9001bfa0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
9001bfa2:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
9001bfa4:	1c5a      	adds	r2, r3, #1
9001bfa6:	8722      	strh	r2, [r4, #56]	@ 0x38
9001bfa8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001bfaa:	4413      	add	r3, r2
9001bfac:	b29b      	uxth	r3, r3
9001bfae:	2b09      	cmp	r3, #9
9001bfb0:	bf88      	it	hi
9001bfb2:	3b0a      	subhi	r3, #10
9001bfb4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001bfb8:	8458      	strh	r0, [r3, #34]	@ 0x22
9001bfba:	e7de      	b.n	9001bf7a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
9001bfbc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001bfbe:	2b0a      	cmp	r3, #10
9001bfc0:	d00f      	beq.n	9001bfe2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001bfc2:	4620      	mov	r0, r4
9001bfc4:	f7ff fc21 	bl	9001b80a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001bfc8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9001bfca:	1c5a      	adds	r2, r3, #1
9001bfcc:	8722      	strh	r2, [r4, #56]	@ 0x38
9001bfce:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001bfd0:	4413      	add	r3, r2
9001bfd2:	b29b      	uxth	r3, r3
9001bfd4:	2b09      	cmp	r3, #9
9001bfd6:	bf88      	it	hi
9001bfd8:	3b0a      	subhi	r3, #10
9001bfda:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001bfde:	8458      	strh	r0, [r3, #34]	@ 0x22
9001bfe0:	e7ec      	b.n	9001bfbc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
9001bfe2:	bd10      	pop	{r4, pc}

9001bfe4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
9001bfe4:	b538      	push	{r3, r4, r5, lr}
9001bfe6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
9001bfe8:	4604      	mov	r4, r0
9001bfea:	eb00 0243 	add.w	r2, r0, r3, lsl #1
9001bfee:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
9001bff0:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
9001bff2:	3a01      	subs	r2, #1
9001bff4:	8702      	strh	r2, [r0, #56]	@ 0x38
9001bff6:	1c5a      	adds	r2, r3, #1
9001bff8:	b292      	uxth	r2, r2
9001bffa:	2a09      	cmp	r2, #9
9001bffc:	bf8a      	itet	hi
9001bffe:	3b09      	subhi	r3, #9
9001c000:	86c2      	strhls	r2, [r0, #54]	@ 0x36
9001c002:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
9001c004:	f7ff ffb7 	bl	9001bf76 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001c008:	8c23      	ldrh	r3, [r4, #32]
9001c00a:	2b01      	cmp	r3, #1
9001c00c:	bf9c      	itt	ls
9001c00e:	3301      	addls	r3, #1
9001c010:	8423      	strhls	r3, [r4, #32]
9001c012:	8be3      	ldrh	r3, [r4, #30]
9001c014:	b90b      	cbnz	r3, 9001c01a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001c016:	2302      	movs	r3, #2
9001c018:	83e3      	strh	r3, [r4, #30]
9001c01a:	8be3      	ldrh	r3, [r4, #30]
9001c01c:	4628      	mov	r0, r5
9001c01e:	3b01      	subs	r3, #1
9001c020:	b29b      	uxth	r3, r3
9001c022:	83e3      	strh	r3, [r4, #30]
9001c024:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c028:	8365      	strh	r5, [r4, #26]
9001c02a:	bd38      	pop	{r3, r4, r5, pc}

9001c02c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
9001c02c:	428a      	cmp	r2, r1
9001c02e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c032:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
9001c034:	d932      	bls.n	9001c09c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001c036:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
9001c038:	1a54      	subs	r4, r2, r1
9001c03a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
9001c03e:	19ee      	adds	r6, r5, r7
9001c040:	fa1f fe84 	uxth.w	lr, r4
9001c044:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
9001c048:	3e01      	subs	r6, #1
9001c04a:	b2b4      	uxth	r4, r6
9001c04c:	eba4 090e 	sub.w	r9, r4, lr
9001c050:	fa1f f989 	uxth.w	r9, r9
9001c054:	2c09      	cmp	r4, #9
9001c056:	4626      	mov	r6, r4
9001c058:	bf88      	it	hi
9001c05a:	f1a4 060a 	subhi.w	r6, r4, #10
9001c05e:	f1bc 0f00 	cmp.w	ip, #0
9001c062:	f104 34ff 	add.w	r4, r4, #4294967295
9001c066:	bf08      	it	eq
9001c068:	f04f 0c02 	moveq.w	ip, #2
9001c06c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001c070:	b2a4      	uxth	r4, r4
9001c072:	f10c 3cff 	add.w	ip, ip, #4294967295
9001c076:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
9001c07a:	454c      	cmp	r4, r9
9001c07c:	fa1f fc8c 	uxth.w	ip, ip
9001c080:	eb00 064c 	add.w	r6, r0, ip, lsl #1
9001c084:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
9001c088:	d1e4      	bne.n	9001c054 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001c08a:	eba5 050e 	sub.w	r5, r5, lr
9001c08e:	eb0e 0408 	add.w	r4, lr, r8
9001c092:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
9001c096:	8705      	strh	r5, [r0, #56]	@ 0x38
9001c098:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
9001c09c:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
9001c09e:	250a      	movs	r5, #10
9001c0a0:	1a64      	subs	r4, r4, r1
9001c0a2:	4439      	add	r1, r7
9001c0a4:	b289      	uxth	r1, r1
9001c0a6:	8704      	strh	r4, [r0, #56]	@ 0x38
9001c0a8:	2909      	cmp	r1, #9
9001c0aa:	bf88      	it	hi
9001c0ac:	390a      	subhi	r1, #10
9001c0ae:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001c0b0:	b18a      	cbz	r2, 9001c0d6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
9001c0b2:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
9001c0b4:	3a01      	subs	r2, #1
9001c0b6:	3101      	adds	r1, #1
9001c0b8:	b292      	uxth	r2, r2
9001c0ba:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
9001c0be:	8701      	strh	r1, [r0, #56]	@ 0x38
9001c0c0:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001c0c2:	b901      	cbnz	r1, 9001c0c6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
9001c0c4:	86c5      	strh	r5, [r0, #54]	@ 0x36
9001c0c6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
9001c0c8:	3901      	subs	r1, #1
9001c0ca:	b289      	uxth	r1, r1
9001c0cc:	86c1      	strh	r1, [r0, #54]	@ 0x36
9001c0ce:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001c0d2:	844c      	strh	r4, [r1, #34]	@ 0x22
9001c0d4:	e7ec      	b.n	9001c0b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001c0d6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c0da:	f7ff bf4c 	b.w	9001bf76 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

9001c0de <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
9001c0de:	b570      	push	{r4, r5, r6, lr}
9001c0e0:	2500      	movs	r5, #0
9001c0e2:	4295      	cmp	r5, r2
9001c0e4:	d011      	beq.n	9001c10a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001c0e6:	8bc4      	ldrh	r4, [r0, #30]
9001c0e8:	f831 6b02 	ldrh.w	r6, [r1], #2
9001c0ec:	4414      	add	r4, r2
9001c0ee:	3c01      	subs	r4, #1
9001c0f0:	1b64      	subs	r4, r4, r5
9001c0f2:	b2a4      	uxth	r4, r4
9001c0f4:	2c01      	cmp	r4, #1
9001c0f6:	bf88      	it	hi
9001c0f8:	3c02      	subhi	r4, #2
9001c0fa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c0fe:	8b64      	ldrh	r4, [r4, #26]
9001c100:	42b4      	cmp	r4, r6
9001c102:	d117      	bne.n	9001c134 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
9001c104:	3501      	adds	r5, #1
9001c106:	b2ad      	uxth	r5, r5
9001c108:	e7eb      	b.n	9001c0e2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001c10a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c10e:	2400      	movs	r4, #0
9001c110:	4413      	add	r3, r2
9001c112:	b2a2      	uxth	r2, r4
9001c114:	429a      	cmp	r2, r3
9001c116:	da0f      	bge.n	9001c138 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001c118:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
9001c11a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
9001c11e:	3401      	adds	r4, #1
9001c120:	4432      	add	r2, r6
9001c122:	b292      	uxth	r2, r2
9001c124:	2a09      	cmp	r2, #9
9001c126:	bf88      	it	hi
9001c128:	3a0a      	subhi	r2, #10
9001c12a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001c12e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
9001c130:	42aa      	cmp	r2, r5
9001c132:	d0ee      	beq.n	9001c112 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
9001c134:	2000      	movs	r0, #0
9001c136:	bd70      	pop	{r4, r5, r6, pc}
9001c138:	2001      	movs	r0, #1
9001c13a:	e7fc      	b.n	9001c136 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

9001c13c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
9001c13c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c140:	4605      	mov	r5, r0
9001c142:	4616      	mov	r6, r2
9001c144:	1c8c      	adds	r4, r1, #2
9001c146:	8809      	ldrh	r1, [r1, #0]
9001c148:	ea4f 3a11 	mov.w	sl, r1, lsr #12
9001c14c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
9001c150:	42b3      	cmp	r3, r6
9001c152:	d124      	bne.n	9001c19e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
9001c154:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001c158:	f3c1 1803 	ubfx	r8, r1, #4, #4
9001c15c:	f001 070f 	and.w	r7, r1, #15
9001c160:	4652      	mov	r2, sl
9001c162:	f8cd 8000 	str.w	r8, [sp]
9001c166:	464b      	mov	r3, r9
9001c168:	4621      	mov	r1, r4
9001c16a:	4628      	mov	r0, r5
9001c16c:	f7ff ffb7 	bl	9001c0de <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
9001c170:	4683      	mov	fp, r0
9001c172:	b168      	cbz	r0, 9001c190 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
9001c174:	eb0a 0109 	add.w	r1, sl, r9
9001c178:	463a      	mov	r2, r7
9001c17a:	4628      	mov	r0, r5
9001c17c:	4441      	add	r1, r8
9001c17e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
9001c182:	4649      	mov	r1, r9
9001c184:	f7ff ff52 	bl	9001c02c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001c188:	4658      	mov	r0, fp
9001c18a:	b003      	add	sp, #12
9001c18c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c190:	eb07 010a 	add.w	r1, r7, sl
9001c194:	4449      	add	r1, r9
9001c196:	4441      	add	r1, r8
9001c198:	eb04 0141 	add.w	r1, r4, r1, lsl #1
9001c19c:	e7d2      	b.n	9001c144 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001c19e:	f04f 0b00 	mov.w	fp, #0
9001c1a2:	e7f1      	b.n	9001c188 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

9001c1a4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
9001c1a4:	b570      	push	{r4, r5, r6, lr}
9001c1a6:	8810      	ldrh	r0, [r2, #0]
9001c1a8:	4298      	cmp	r0, r3
9001c1aa:	d817      	bhi.n	9001c1dc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001c1ac:	1e48      	subs	r0, r1, #1
9001c1ae:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001c1b2:	4298      	cmp	r0, r3
9001c1b4:	d312      	bcc.n	9001c1dc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001c1b6:	2400      	movs	r4, #0
9001c1b8:	428c      	cmp	r4, r1
9001c1ba:	d20f      	bcs.n	9001c1dc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001c1bc:	1860      	adds	r0, r4, r1
9001c1be:	1040      	asrs	r0, r0, #1
9001c1c0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
9001c1c4:	0085      	lsls	r5, r0, #2
9001c1c6:	42b3      	cmp	r3, r6
9001c1c8:	d902      	bls.n	9001c1d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001c1ca:	3001      	adds	r0, #1
9001c1cc:	b284      	uxth	r4, r0
9001c1ce:	e7f3      	b.n	9001c1b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001c1d0:	d201      	bcs.n	9001c1d6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001c1d2:	b281      	uxth	r1, r0
9001c1d4:	e7f0      	b.n	9001c1b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001c1d6:	442a      	add	r2, r5
9001c1d8:	8850      	ldrh	r0, [r2, #2]
9001c1da:	bd70      	pop	{r4, r5, r6, pc}
9001c1dc:	2000      	movs	r0, #0
9001c1de:	e7fc      	b.n	9001c1da <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001c1e0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001c1e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001c1e4:	6c45      	ldr	r5, [r0, #68]	@ 0x44
9001c1e6:	4604      	mov	r4, r0
9001c1e8:	260b      	movs	r6, #11
9001c1ea:	886f      	ldrh	r7, [r5, #2]
9001c1ec:	087f      	lsrs	r7, r7, #1
9001c1ee:	3e01      	subs	r6, #1
9001c1f0:	d013      	beq.n	9001c21a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001c1f2:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
9001c1f4:	462a      	mov	r2, r5
9001c1f6:	4639      	mov	r1, r7
9001c1f8:	4620      	mov	r0, r4
9001c1fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001c1fe:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001c202:	4643      	mov	r3, r8
9001c204:	f7ff ffce 	bl	9001c1a4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001c208:	b138      	cbz	r0, 9001c21a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001c20a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001c20e:	4642      	mov	r2, r8
9001c210:	4620      	mov	r0, r4
9001c212:	f7ff ff93 	bl	9001c13c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001c216:	2800      	cmp	r0, #0
9001c218:	d1e9      	bne.n	9001c1ee <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001c21a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001c220 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001c220:	b570      	push	{r4, r5, r6, lr}
9001c222:	694a      	ldr	r2, [r1, #20]
9001c224:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
9001c226:	684b      	ldr	r3, [r1, #4]
9001c228:	1b54      	subs	r4, r2, r5
9001c22a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
9001c22c:	f000 8106 	beq.w	9001c43c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
9001c230:	1b9b      	subs	r3, r3, r6
9001c232:	d003      	beq.n	9001c23c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001c234:	4363      	muls	r3, r4
9001c236:	2210      	movs	r2, #16
9001c238:	fb93 f3f2 	sdiv	r3, r3, r2
9001c23c:	680c      	ldr	r4, [r1, #0]
9001c23e:	698a      	ldr	r2, [r1, #24]
9001c240:	1b65      	subs	r5, r4, r5
9001c242:	f000 80fd 	beq.w	9001c440 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001c246:	1b92      	subs	r2, r2, r6
9001c248:	d003      	beq.n	9001c252 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001c24a:	436a      	muls	r2, r5
9001c24c:	2410      	movs	r4, #16
9001c24e:	fb92 f2f4 	sdiv	r2, r2, r4
9001c252:	1a9b      	subs	r3, r3, r2
9001c254:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 9001c47c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001c258:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001c25c:	460a      	mov	r2, r1
9001c25e:	ee07 3a90 	vmov	s15, r3
9001c262:	f100 040c 	add.w	r4, r0, #12
9001c266:	4603      	mov	r3, r0
9001c268:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c26c:	ee67 7a84 	vmul.f32	s15, s15, s8
9001c270:	ee87 3a27 	vdiv.f32	s6, s14, s15
9001c274:	eeb1 6a43 	vneg.f32	s12, s6
9001c278:	edd2 7a02 	vldr	s15, [r2, #8]
9001c27c:	3214      	adds	r2, #20
9001c27e:	eec7 6a27 	vdiv.f32	s13, s14, s15
9001c282:	ece3 6a01 	vstmia	r3!, {s13}
9001c286:	429c      	cmp	r4, r3
9001c288:	ed52 7a02 	vldr	s15, [r2, #-8]
9001c28c:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001c290:	edc3 7a02 	vstr	s15, [r3, #8]
9001c294:	ed52 7a01 	vldr	s15, [r2, #-4]
9001c298:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001c29c:	edc3 7a05 	vstr	s15, [r3, #20]
9001c2a0:	d1ea      	bne.n	9001c278 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001c2a2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c2a4:	698b      	ldr	r3, [r1, #24]
9001c2a6:	edd0 4a02 	vldr	s9, [r0, #8]
9001c2aa:	1a9b      	subs	r3, r3, r2
9001c2ac:	edd0 3a00 	vldr	s7, [r0]
9001c2b0:	edd0 6a01 	vldr	s13, [r0, #4]
9001c2b4:	ee07 3a90 	vmov	s15, r3
9001c2b8:	684b      	ldr	r3, [r1, #4]
9001c2ba:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001c2be:	ed90 5a05 	vldr	s10, [r0, #20]
9001c2c2:	1a9b      	subs	r3, r3, r2
9001c2c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c2c8:	ee73 4ae4 	vsub.f32	s9, s7, s9
9001c2cc:	ed90 2a03 	vldr	s4, [r0, #12]
9001c2d0:	ee07 3a10 	vmov	s14, r3
9001c2d4:	edd0 5a04 	vldr	s11, [r0, #16]
9001c2d8:	ee67 7a84 	vmul.f32	s15, s15, s8
9001c2dc:	ed90 1a07 	vldr	s2, [r0, #28]
9001c2e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c2e4:	edd0 2a06 	vldr	s5, [r0, #24]
9001c2e8:	ee75 5ac5 	vsub.f32	s11, s11, s10
9001c2ec:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001c2f0:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c2f4:	ee32 5a45 	vsub.f32	s10, s4, s10
9001c2f8:	eee6 7a87 	vfma.f32	s15, s13, s14
9001c2fc:	ee67 7a83 	vmul.f32	s15, s15, s6
9001c300:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
9001c304:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001c306:	694a      	ldr	r2, [r1, #20]
9001c308:	1b13      	subs	r3, r2, r4
9001c30a:	ee07 3a10 	vmov	s14, r3
9001c30e:	680b      	ldr	r3, [r1, #0]
9001c310:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c314:	1b1b      	subs	r3, r3, r4
9001c316:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c31a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001c31e:	ee07 3a10 	vmov	s14, r3
9001c322:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c326:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c32a:	eee6 4a87 	vfma.f32	s9, s13, s14
9001c32e:	ee64 4a86 	vmul.f32	s9, s9, s12
9001c332:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
9001c336:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c338:	698b      	ldr	r3, [r1, #24]
9001c33a:	1a9b      	subs	r3, r3, r2
9001c33c:	ee06 3a90 	vmov	s13, r3
9001c340:	684b      	ldr	r3, [r1, #4]
9001c342:	1a9b      	subs	r3, r3, r2
9001c344:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001c348:	ee07 3a10 	vmov	s14, r3
9001c34c:	ee66 6a84 	vmul.f32	s13, s13, s8
9001c350:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c354:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001c358:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c35c:	eee5 6a87 	vfma.f32	s13, s11, s14
9001c360:	ee66 6a83 	vmul.f32	s13, s13, s6
9001c364:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
9001c368:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001c36a:	694a      	ldr	r2, [r1, #20]
9001c36c:	1b13      	subs	r3, r2, r4
9001c36e:	ee07 3a10 	vmov	s14, r3
9001c372:	680b      	ldr	r3, [r1, #0]
9001c374:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c378:	1b1b      	subs	r3, r3, r4
9001c37a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c37e:	ee25 5a47 	vnmul.f32	s10, s10, s14
9001c382:	ee07 3a10 	vmov	s14, r3
9001c386:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c38a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c38e:	eea5 5a87 	vfma.f32	s10, s11, s14
9001c392:	edd0 5a08 	vldr	s11, [r0, #32]
9001c396:	ee31 1a65 	vsub.f32	s2, s2, s11
9001c39a:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001c39e:	ee25 5a06 	vmul.f32	s10, s10, s12
9001c3a2:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
9001c3a6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c3a8:	698b      	ldr	r3, [r1, #24]
9001c3aa:	1a9b      	subs	r3, r3, r2
9001c3ac:	ee07 3a10 	vmov	s14, r3
9001c3b0:	684b      	ldr	r3, [r1, #4]
9001c3b2:	1a9b      	subs	r3, r3, r2
9001c3b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c3b8:	ee01 3a90 	vmov	s3, r3
9001c3bc:	ee27 7a04 	vmul.f32	s14, s14, s8
9001c3c0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
9001c3c4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001c3c8:	ee61 1a84 	vmul.f32	s3, s3, s8
9001c3cc:	eea1 7a21 	vfma.f32	s14, s2, s3
9001c3d0:	ee27 7a03 	vmul.f32	s14, s14, s6
9001c3d4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001c3d8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
9001c3da:	694a      	ldr	r2, [r1, #20]
9001c3dc:	1b13      	subs	r3, r2, r4
9001c3de:	ee03 3a10 	vmov	s6, r3
9001c3e2:	680b      	ldr	r3, [r1, #0]
9001c3e4:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001c3e8:	1b1b      	subs	r3, r3, r4
9001c3ea:	ee23 3a04 	vmul.f32	s6, s6, s8
9001c3ee:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001c3f2:	ee03 3a10 	vmov	s6, r3
9001c3f6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001c3fa:	ee23 4a04 	vmul.f32	s8, s6, s8
9001c3fe:	eee1 5a04 	vfma.f32	s11, s2, s8
9001c402:	ee25 6a86 	vmul.f32	s12, s11, s12
9001c406:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001c40a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001c40e:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001c412:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001c416:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c41a:	dd13      	ble.n	9001c444 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
9001c41c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001c420:	ee62 7ae7 	vnmul.f32	s15, s5, s15
9001c424:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001c426:	eee3 7a87 	vfma.f32	s15, s7, s14
9001c42a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001c42e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c432:	dd15      	ble.n	9001c460 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
9001c434:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001c438:	6403      	str	r3, [r0, #64]	@ 0x40
9001c43a:	bd70      	pop	{r4, r5, r6, pc}
9001c43c:	4623      	mov	r3, r4
9001c43e:	e6fd      	b.n	9001c23c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
9001c440:	462a      	mov	r2, r5
9001c442:	e706      	b.n	9001c252 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001c444:	d502      	bpl.n	9001c44c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001c446:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001c44a:	e7e9      	b.n	9001c420 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
9001c44c:	ee22 2a64 	vnmul.f32	s4, s4, s9
9001c450:	eea3 2a85 	vfma.f32	s4, s7, s10
9001c454:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001c458:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c45c:	dade      	bge.n	9001c41c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
9001c45e:	e7f2      	b.n	9001c446 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
9001c460:	d502      	bpl.n	9001c468 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
9001c462:	f647 73ff 	movw	r3, #32767	@ 0x7fff
9001c466:	e7e7      	b.n	9001c438 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001c468:	ee62 4ae4 	vnmul.f32	s9, s5, s9
9001c46c:	eee3 4a86 	vfma.f32	s9, s7, s12
9001c470:	eef5 4ac0 	vcmpe.f32	s9, #0.0
9001c474:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001c478:	dadc      	bge.n	9001c434 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001c47a:	e7f2      	b.n	9001c462 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
9001c47c:	3d800000 	.word	0x3d800000

9001c480 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
9001c480:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c484:	2714      	movs	r7, #20
9001c486:	435f      	muls	r7, r3
9001c488:	eb02 0c07 	add.w	ip, r2, r7
9001c48c:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001c490:	f115 0e0f 	adds.w	lr, r5, #15
9001c494:	f100 80a2 	bmi.w	9001c5dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001c498:	ea4f 1e2e 	mov.w	lr, lr, asr #4
9001c49c:	9c08      	ldr	r4, [sp, #32]
9001c49e:	2614      	movs	r6, #20
9001c4a0:	f8c0 e014 	str.w	lr, [r0, #20]
9001c4a4:	4366      	muls	r6, r4
9001c4a6:	eb02 0806 	add.w	r8, r2, r6
9001c4aa:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001c4ae:	f115 040f 	adds.w	r4, r5, #15
9001c4b2:	f100 809f 	bmi.w	9001c5f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001c4b6:	1124      	asrs	r4, r4, #4
9001c4b8:	eba4 040e 	sub.w	r4, r4, lr
9001c4bc:	6184      	str	r4, [r0, #24]
9001c4be:	2c00      	cmp	r4, #0
9001c4c0:	f000 808a 	beq.w	9001c5d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
9001c4c4:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001c4c8:	f8d8 4004 	ldr.w	r4, [r8, #4]
9001c4cc:	5995      	ldr	r5, [r2, r6]
9001c4ce:	eba4 0809 	sub.w	r8, r4, r9
9001c4d2:	59d4      	ldr	r4, [r2, r7]
9001c4d4:	eba5 0a04 	sub.w	sl, r5, r4
9001c4d8:	ea4f 1608 	mov.w	r6, r8, lsl #4
9001c4dc:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001c4e0:	fb0e fe05 	mul.w	lr, lr, r5
9001c4e4:	fb0a ee19 	mls	lr, sl, r9, lr
9001c4e8:	fb08 e404 	mla	r4, r8, r4, lr
9001c4ec:	3c01      	subs	r4, #1
9001c4ee:	19a4      	adds	r4, r4, r6
9001c4f0:	f100 808c 	bmi.w	9001c60c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
9001c4f4:	fb94 fef6 	sdiv	lr, r4, r6
9001c4f8:	fb06 441e 	mls	r4, r6, lr, r4
9001c4fc:	f8c0 e000 	str.w	lr, [r0]
9001c500:	6104      	str	r4, [r0, #16]
9001c502:	2d00      	cmp	r5, #0
9001c504:	f2c0 8095 	blt.w	9001c632 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001c508:	fb95 f4f6 	sdiv	r4, r5, r6
9001c50c:	fb06 5514 	mls	r5, r6, r4, r5
9001c510:	6044      	str	r4, [r0, #4]
9001c512:	6085      	str	r5, [r0, #8]
9001c514:	60c6      	str	r6, [r0, #12]
9001c516:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001c51a:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001c51e:	6945      	ldr	r5, [r0, #20]
9001c520:	59d2      	ldr	r2, [r2, r7]
9001c522:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001c526:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 9001c654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001c52a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001c52e:	ee07 4a10 	vmov	s14, r4
9001c532:	6804      	ldr	r4, [r0, #0]
9001c534:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001c538:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001c53c:	ee07 2a90 	vmov	s15, r2
9001c540:	ee27 7a26 	vmul.f32	s14, s14, s13
9001c544:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001c548:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001c54c:	edd3 6a00 	vldr	s13, [r3]
9001c550:	eee6 6a07 	vfma.f32	s13, s12, s14
9001c554:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
9001c558:	eee6 6a27 	vfma.f32	s13, s12, s15
9001c55c:	edc0 6a07 	vstr	s13, [r0, #28]
9001c560:	edd0 6a01 	vldr	s13, [r0, #4]
9001c564:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
9001c568:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001c56c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
9001c570:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001c574:	ed80 6a08 	vstr	s12, [r0, #32]
9001c578:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
9001c57a:	6242      	str	r2, [r0, #36]	@ 0x24
9001c57c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
9001c580:	ed93 6a03 	vldr	s12, [r3, #12]
9001c584:	eea5 6a87 	vfma.f32	s12, s11, s14
9001c588:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001c58c:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001c590:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
9001c594:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
9001c598:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
9001c59c:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001c5a0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
9001c5a4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
9001c5a6:	6302      	str	r2, [r0, #48]	@ 0x30
9001c5a8:	ed93 6a06 	vldr	s12, [r3, #24]
9001c5ac:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001c5b0:	eea5 6a87 	vfma.f32	s12, s11, s14
9001c5b4:	eeb0 7a46 	vmov.f32	s14, s12
9001c5b8:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
9001c5bc:	eea6 7a27 	vfma.f32	s14, s12, s15
9001c5c0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
9001c5c4:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
9001c5c8:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
9001c5cc:	eee6 7a87 	vfma.f32	s15, s13, s14
9001c5d0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
9001c5d4:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
9001c5d6:	63c3      	str	r3, [r0, #60]	@ 0x3c
9001c5d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c5dc:	2410      	movs	r4, #16
9001c5de:	f1c5 0501 	rsb	r5, r5, #1
9001c5e2:	fb9e fef4 	sdiv	lr, lr, r4
9001c5e6:	f015 050f 	ands.w	r5, r5, #15
9001c5ea:	bf18      	it	ne
9001c5ec:	2501      	movne	r5, #1
9001c5ee:	ebae 0e05 	sub.w	lr, lr, r5
9001c5f2:	e753      	b.n	9001c49c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
9001c5f4:	f04f 0910 	mov.w	r9, #16
9001c5f8:	f1c5 0501 	rsb	r5, r5, #1
9001c5fc:	fb94 f4f9 	sdiv	r4, r4, r9
9001c600:	f015 050f 	ands.w	r5, r5, #15
9001c604:	bf18      	it	ne
9001c606:	2501      	movne	r5, #1
9001c608:	1b64      	subs	r4, r4, r5
9001c60a:	e755      	b.n	9001c4b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
9001c60c:	4264      	negs	r4, r4
9001c60e:	fb94 fef6 	sdiv	lr, r4, r6
9001c612:	f1ce 0800 	rsb	r8, lr, #0
9001c616:	fb06 441e 	mls	r4, r6, lr, r4
9001c61a:	f8c0 8000 	str.w	r8, [r0]
9001c61e:	6104      	str	r4, [r0, #16]
9001c620:	2c00      	cmp	r4, #0
9001c622:	f43f af6e 	beq.w	9001c502 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001c626:	ea6f 0e0e 	mvn.w	lr, lr
9001c62a:	1b34      	subs	r4, r6, r4
9001c62c:	f8c0 e000 	str.w	lr, [r0]
9001c630:	e766      	b.n	9001c500 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
9001c632:	426d      	negs	r5, r5
9001c634:	fb95 f4f6 	sdiv	r4, r5, r6
9001c638:	f1c4 0e00 	rsb	lr, r4, #0
9001c63c:	fb06 5514 	mls	r5, r6, r4, r5
9001c640:	f8c0 e004 	str.w	lr, [r0, #4]
9001c644:	6085      	str	r5, [r0, #8]
9001c646:	2d00      	cmp	r5, #0
9001c648:	f43f af64 	beq.w	9001c514 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
9001c64c:	43e4      	mvns	r4, r4
9001c64e:	1b75      	subs	r5, r6, r5
9001c650:	6044      	str	r4, [r0, #4]
9001c652:	e75e      	b.n	9001c512 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
9001c654:	3d800000 	.word	0x3d800000

9001c658 <_ZN8touchgfx7Unicode6strlenEPKt>:
9001c658:	4602      	mov	r2, r0
9001c65a:	b148      	cbz	r0, 9001c670 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
9001c65c:	2300      	movs	r3, #0
9001c65e:	b298      	uxth	r0, r3
9001c660:	3301      	adds	r3, #1
9001c662:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001c666:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001c66a:	2900      	cmp	r1, #0
9001c66c:	d1f7      	bne.n	9001c65e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
9001c66e:	4770      	bx	lr
9001c670:	4770      	bx	lr
	...

9001c674 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
9001c674:	4b01      	ldr	r3, [pc, #4]	@ (9001c67c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
9001c676:	6018      	str	r0, [r3, #0]
9001c678:	4770      	bx	lr
9001c67a:	bf00      	nop
9001c67c:	24024600 	.word	0x24024600

9001c680 <_ZN8touchgfx11FontManager7getFontEt>:
9001c680:	4b03      	ldr	r3, [pc, #12]	@ (9001c690 <_ZN8touchgfx11FontManager7getFontEt+0x10>)
9001c682:	4601      	mov	r1, r0
9001c684:	6818      	ldr	r0, [r3, #0]
9001c686:	b110      	cbz	r0, 9001c68e <_ZN8touchgfx11FontManager7getFontEt+0xe>
9001c688:	6803      	ldr	r3, [r0, #0]
9001c68a:	681b      	ldr	r3, [r3, #0]
9001c68c:	4718      	bx	r3
9001c68e:	4770      	bx	lr
9001c690:	24024600 	.word	0x24024600

9001c694 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001c694:	4b06      	ldr	r3, [pc, #24]	@ (9001c6b0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001c696:	881a      	ldrh	r2, [r3, #0]
9001c698:	4282      	cmp	r2, r0
9001c69a:	d807      	bhi.n	9001c6ac <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
9001c69c:	4b05      	ldr	r3, [pc, #20]	@ (9001c6b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
9001c69e:	881b      	ldrh	r3, [r3, #0]
9001c6a0:	4413      	add	r3, r2
9001c6a2:	4298      	cmp	r0, r3
9001c6a4:	bfac      	ite	ge
9001c6a6:	2000      	movge	r0, #0
9001c6a8:	2001      	movlt	r0, #1
9001c6aa:	4770      	bx	lr
9001c6ac:	2000      	movs	r0, #0
9001c6ae:	4770      	bx	lr
9001c6b0:	24024620 	.word	0x24024620
9001c6b4:	24024624 	.word	0x24024624

9001c6b8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
9001c6b8:	b508      	push	{r3, lr}
9001c6ba:	4601      	mov	r1, r0
9001c6bc:	f7ff ffea 	bl	9001c694 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
9001c6c0:	b118      	cbz	r0, 9001c6ca <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001c6c2:	4b02      	ldr	r3, [pc, #8]	@ (9001c6cc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001c6c4:	681b      	ldr	r3, [r3, #0]
9001c6c6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
9001c6ca:	bd08      	pop	{r3, pc}
9001c6cc:	24024604 	.word	0x24024604

9001c6d0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
9001c6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c6d2:	4c24      	ldr	r4, [pc, #144]	@ (9001c764 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001c6d4:	6823      	ldr	r3, [r4, #0]
9001c6d6:	2b00      	cmp	r3, #0
9001c6d8:	d042      	beq.n	9001c760 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001c6da:	4a23      	ldr	r2, [pc, #140]	@ (9001c768 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
9001c6dc:	4d23      	ldr	r5, [pc, #140]	@ (9001c76c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
9001c6de:	8811      	ldrh	r1, [r2, #0]
9001c6e0:	f8b5 c000 	ldrh.w	ip, [r5]
9001c6e4:	4822      	ldr	r0, [pc, #136]	@ (9001c770 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001c6e6:	4461      	add	r1, ip
9001c6e8:	1c4a      	adds	r2, r1, #1
9001c6ea:	008f      	lsls	r7, r1, #2
9001c6ec:	f022 0201 	bic.w	r2, r2, #1
9001c6f0:	19de      	adds	r6, r3, r7
9001c6f2:	0412      	lsls	r2, r2, #16
9001c6f4:	6006      	str	r6, [r0, #0]
9001c6f6:	4e1f      	ldr	r6, [pc, #124]	@ (9001c774 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
9001c6f8:	0c12      	lsrs	r2, r2, #16
9001c6fa:	eb07 0742 	add.w	r7, r7, r2, lsl #1
9001c6fe:	19da      	adds	r2, r3, r7
9001c700:	6032      	str	r2, [r6, #0]
9001c702:	220e      	movs	r2, #14
9001c704:	fb02 f20c 	mul.w	r2, r2, ip
9001c708:	3203      	adds	r2, #3
9001c70a:	f022 0203 	bic.w	r2, r2, #3
9001c70e:	443a      	add	r2, r7
9001c710:	4f19      	ldr	r7, [pc, #100]	@ (9001c778 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
9001c712:	4413      	add	r3, r2
9001c714:	603b      	str	r3, [r7, #0]
9001c716:	2300      	movs	r3, #0
9001c718:	4f18      	ldr	r7, [pc, #96]	@ (9001c77c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
9001c71a:	469c      	mov	ip, r3
9001c71c:	803b      	strh	r3, [r7, #0]
9001c71e:	4f18      	ldr	r7, [pc, #96]	@ (9001c780 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
9001c720:	683f      	ldr	r7, [r7, #0]
9001c722:	1aba      	subs	r2, r7, r2
9001c724:	4f17      	ldr	r7, [pc, #92]	@ (9001c784 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
9001c726:	603a      	str	r2, [r7, #0]
9001c728:	f64f 77ff 	movw	r7, #65535	@ 0xffff
9001c72c:	4a16      	ldr	r2, [pc, #88]	@ (9001c788 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
9001c72e:	8013      	strh	r3, [r2, #0]
9001c730:	428b      	cmp	r3, r1
9001c732:	d10d      	bne.n	9001c750 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
9001c734:	882d      	ldrh	r5, [r5, #0]
9001c736:	2300      	movs	r3, #0
9001c738:	6830      	ldr	r0, [r6, #0]
9001c73a:	240e      	movs	r4, #14
9001c73c:	429d      	cmp	r5, r3
9001c73e:	d90f      	bls.n	9001c760 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
9001c740:	fb04 0203 	mla	r2, r4, r3, r0
9001c744:	3301      	adds	r3, #1
9001c746:	7b11      	ldrb	r1, [r2, #12]
9001c748:	f36f 1145 	bfc	r1, #5, #1
9001c74c:	7311      	strb	r1, [r2, #12]
9001c74e:	e7f5      	b.n	9001c73c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
9001c750:	6822      	ldr	r2, [r4, #0]
9001c752:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001c756:	6802      	ldr	r2, [r0, #0]
9001c758:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
9001c75c:	3301      	adds	r3, #1
9001c75e:	e7e7      	b.n	9001c730 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
9001c760:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001c762:	bf00      	nop
9001c764:	24024604 	.word	0x24024604
9001c768:	24024620 	.word	0x24024620
9001c76c:	24024624 	.word	0x24024624
9001c770:	24024618 	.word	0x24024618
9001c774:	24024608 	.word	0x24024608
9001c778:	24024610 	.word	0x24024610
9001c77c:	24024622 	.word	0x24024622
9001c780:	2402460c 	.word	0x2402460c
9001c784:	2402461c 	.word	0x2402461c
9001c788:	24024614 	.word	0x24024614

9001c78c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
9001c78c:	4b06      	ldr	r3, [pc, #24]	@ (9001c7a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
9001c78e:	681b      	ldr	r3, [r3, #0]
9001c790:	b943      	cbnz	r3, 9001c7a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001c792:	b139      	cbz	r1, 9001c7a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001c794:	4b05      	ldr	r3, [pc, #20]	@ (9001c7ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001c796:	801a      	strh	r2, [r3, #0]
9001c798:	4b05      	ldr	r3, [pc, #20]	@ (9001c7b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
9001c79a:	6019      	str	r1, [r3, #0]
9001c79c:	4b05      	ldr	r3, [pc, #20]	@ (9001c7b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
9001c79e:	6018      	str	r0, [r3, #0]
9001c7a0:	f7ff bf96 	b.w	9001c6d0 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001c7a4:	4770      	bx	lr
9001c7a6:	bf00      	nop
9001c7a8:	24024610 	.word	0x24024610
9001c7ac:	24024624 	.word	0x24024624
9001c7b0:	2402460c 	.word	0x2402460c
9001c7b4:	24024604 	.word	0x24024604

9001c7b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
9001c7b8:	b470      	push	{r4, r5, r6}
9001c7ba:	4c07      	ldr	r4, [pc, #28]	@ (9001c7d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
9001c7bc:	4605      	mov	r5, r0
9001c7be:	4610      	mov	r0, r2
9001c7c0:	9a03      	ldr	r2, [sp, #12]
9001c7c2:	6826      	ldr	r6, [r4, #0]
9001c7c4:	b936      	cbnz	r6, 9001c7d4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001c7c6:	6025      	str	r5, [r4, #0]
9001c7c8:	4c04      	ldr	r4, [pc, #16]	@ (9001c7dc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
9001c7ca:	8021      	strh	r1, [r4, #0]
9001c7cc:	4619      	mov	r1, r3
9001c7ce:	bc70      	pop	{r4, r5, r6}
9001c7d0:	f7ff bfdc 	b.w	9001c78c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001c7d4:	bc70      	pop	{r4, r5, r6}
9001c7d6:	4770      	bx	lr
9001c7d8:	24024628 	.word	0x24024628
9001c7dc:	24024620 	.word	0x24024620

9001c7e0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
9001c7e0:	4a12      	ldr	r2, [pc, #72]	@ (9001c82c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001c7e2:	8803      	ldrh	r3, [r0, #0]
9001c7e4:	8812      	ldrh	r2, [r2, #0]
9001c7e6:	4293      	cmp	r3, r2
9001c7e8:	d207      	bcs.n	9001c7fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
9001c7ea:	4a11      	ldr	r2, [pc, #68]	@ (9001c830 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
9001c7ec:	2114      	movs	r1, #20
9001c7ee:	6812      	ldr	r2, [r2, #0]
9001c7f0:	fb01 2303 	mla	r3, r1, r3, r2
9001c7f4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
9001c7f8:	4770      	bx	lr
9001c7fa:	490e      	ldr	r1, [pc, #56]	@ (9001c834 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
9001c7fc:	8809      	ldrh	r1, [r1, #0]
9001c7fe:	4411      	add	r1, r2
9001c800:	428b      	cmp	r3, r1
9001c802:	da04      	bge.n	9001c80e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001c804:	1a9b      	subs	r3, r3, r2
9001c806:	4a0c      	ldr	r2, [pc, #48]	@ (9001c838 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
9001c808:	210e      	movs	r1, #14
9001c80a:	6812      	ldr	r2, [r2, #0]
9001c80c:	e7f0      	b.n	9001c7f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
9001c80e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001c812:	4293      	cmp	r3, r2
9001c814:	d108      	bne.n	9001c828 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001c816:	4b09      	ldr	r3, [pc, #36]	@ (9001c83c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
9001c818:	781b      	ldrb	r3, [r3, #0]
9001c81a:	b91b      	cbnz	r3, 9001c824 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
9001c81c:	4b08      	ldr	r3, [pc, #32]	@ (9001c840 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
9001c81e:	f9b3 0000 	ldrsh.w	r0, [r3]
9001c822:	4770      	bx	lr
9001c824:	4b07      	ldr	r3, [pc, #28]	@ (9001c844 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001c826:	e7fa      	b.n	9001c81e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
9001c828:	2000      	movs	r0, #0
9001c82a:	4770      	bx	lr
9001c82c:	24024620 	.word	0x24024620
9001c830:	24024628 	.word	0x24024628
9001c834:	24024624 	.word	0x24024624
9001c838:	24024608 	.word	0x24024608
9001c83c:	2402458e 	.word	0x2402458e
9001c840:	24024590 	.word	0x24024590
9001c844:	24024592 	.word	0x24024592

9001c848 <_ZNK8touchgfx6Bitmap9getHeightEv>:
9001c848:	4a12      	ldr	r2, [pc, #72]	@ (9001c894 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
9001c84a:	8803      	ldrh	r3, [r0, #0]
9001c84c:	8812      	ldrh	r2, [r2, #0]
9001c84e:	4293      	cmp	r3, r2
9001c850:	d207      	bcs.n	9001c862 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001c852:	4a11      	ldr	r2, [pc, #68]	@ (9001c898 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001c854:	2114      	movs	r1, #20
9001c856:	6812      	ldr	r2, [r2, #0]
9001c858:	fb01 2303 	mla	r3, r1, r3, r2
9001c85c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
9001c860:	4770      	bx	lr
9001c862:	490e      	ldr	r1, [pc, #56]	@ (9001c89c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001c864:	8809      	ldrh	r1, [r1, #0]
9001c866:	4411      	add	r1, r2
9001c868:	428b      	cmp	r3, r1
9001c86a:	da04      	bge.n	9001c876 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
9001c86c:	1a9b      	subs	r3, r3, r2
9001c86e:	4a0c      	ldr	r2, [pc, #48]	@ (9001c8a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
9001c870:	210e      	movs	r1, #14
9001c872:	6812      	ldr	r2, [r2, #0]
9001c874:	e7f0      	b.n	9001c858 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001c876:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001c87a:	4293      	cmp	r3, r2
9001c87c:	d108      	bne.n	9001c890 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
9001c87e:	4b09      	ldr	r3, [pc, #36]	@ (9001c8a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
9001c880:	781b      	ldrb	r3, [r3, #0]
9001c882:	b91b      	cbnz	r3, 9001c88c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001c884:	4b08      	ldr	r3, [pc, #32]	@ (9001c8a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001c886:	f9b3 0000 	ldrsh.w	r0, [r3]
9001c88a:	4770      	bx	lr
9001c88c:	4b07      	ldr	r3, [pc, #28]	@ (9001c8ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
9001c88e:	e7fa      	b.n	9001c886 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
9001c890:	2000      	movs	r0, #0
9001c892:	4770      	bx	lr
9001c894:	24024620 	.word	0x24024620
9001c898:	24024628 	.word	0x24024628
9001c89c:	24024624 	.word	0x24024624
9001c8a0:	24024608 	.word	0x24024608
9001c8a4:	2402458e 	.word	0x2402458e
9001c8a8:	24024592 	.word	0x24024592
9001c8ac:	24024590 	.word	0x24024590

9001c8b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
9001c8b0:	4a22      	ldr	r2, [pc, #136]	@ (9001c93c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001c8b2:	b530      	push	{r4, r5, lr}
9001c8b4:	880b      	ldrh	r3, [r1, #0]
9001c8b6:	8812      	ldrh	r2, [r2, #0]
9001c8b8:	4293      	cmp	r3, r2
9001c8ba:	d213      	bcs.n	9001c8e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
9001c8bc:	4a20      	ldr	r2, [pc, #128]	@ (9001c940 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
9001c8be:	2114      	movs	r1, #20
9001c8c0:	6812      	ldr	r2, [r2, #0]
9001c8c2:	fb01 2303 	mla	r3, r1, r3, r2
9001c8c6:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
9001c8ca:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
9001c8ce:	8a1a      	ldrh	r2, [r3, #16]
9001c8d0:	8a5b      	ldrh	r3, [r3, #18]
9001c8d2:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001c8d6:	8004      	strh	r4, [r0, #0]
9001c8d8:	f3c3 030c 	ubfx	r3, r3, #0, #13
9001c8dc:	8041      	strh	r1, [r0, #2]
9001c8de:	8082      	strh	r2, [r0, #4]
9001c8e0:	80c3      	strh	r3, [r0, #6]
9001c8e2:	e024      	b.n	9001c92e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
9001c8e4:	4917      	ldr	r1, [pc, #92]	@ (9001c944 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001c8e6:	8809      	ldrh	r1, [r1, #0]
9001c8e8:	4411      	add	r1, r2
9001c8ea:	428b      	cmp	r3, r1
9001c8ec:	da10      	bge.n	9001c910 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
9001c8ee:	1a9b      	subs	r3, r3, r2
9001c8f0:	220e      	movs	r2, #14
9001c8f2:	4353      	muls	r3, r2
9001c8f4:	4a14      	ldr	r2, [pc, #80]	@ (9001c948 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
9001c8f6:	6811      	ldr	r1, [r2, #0]
9001c8f8:	18ca      	adds	r2, r1, r3
9001c8fa:	5ecd      	ldrsh	r5, [r1, r3]
9001c8fc:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
9001c900:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
9001c904:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
9001c908:	8005      	strh	r5, [r0, #0]
9001c90a:	8044      	strh	r4, [r0, #2]
9001c90c:	8081      	strh	r1, [r0, #4]
9001c90e:	e7e7      	b.n	9001c8e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001c910:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001c914:	4293      	cmp	r3, r2
9001c916:	d10b      	bne.n	9001c930 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
9001c918:	4b0c      	ldr	r3, [pc, #48]	@ (9001c94c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
9001c91a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001c91e:	4b0c      	ldr	r3, [pc, #48]	@ (9001c950 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
9001c920:	8081      	strh	r1, [r0, #4]
9001c922:	f9b3 2000 	ldrsh.w	r2, [r3]
9001c926:	2300      	movs	r3, #0
9001c928:	80c2      	strh	r2, [r0, #6]
9001c92a:	8003      	strh	r3, [r0, #0]
9001c92c:	8043      	strh	r3, [r0, #2]
9001c92e:	bd30      	pop	{r4, r5, pc}
9001c930:	2300      	movs	r3, #0
9001c932:	8003      	strh	r3, [r0, #0]
9001c934:	8043      	strh	r3, [r0, #2]
9001c936:	8083      	strh	r3, [r0, #4]
9001c938:	e7d2      	b.n	9001c8e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
9001c93a:	bf00      	nop
9001c93c:	24024620 	.word	0x24024620
9001c940:	24024628 	.word	0x24024628
9001c944:	24024624 	.word	0x24024624
9001c948:	24024608 	.word	0x24024608
9001c94c:	2402458a 	.word	0x2402458a
9001c950:	2402458c 	.word	0x2402458c

9001c954 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
9001c954:	4a17      	ldr	r2, [pc, #92]	@ (9001c9b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
9001c956:	8803      	ldrh	r3, [r0, #0]
9001c958:	8812      	ldrh	r2, [r2, #0]
9001c95a:	4293      	cmp	r3, r2
9001c95c:	d213      	bcs.n	9001c986 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001c95e:	4a16      	ldr	r2, [pc, #88]	@ (9001c9b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001c960:	2114      	movs	r1, #20
9001c962:	6812      	ldr	r2, [r2, #0]
9001c964:	fb01 2303 	mla	r3, r1, r3, r2
9001c968:	8a1a      	ldrh	r2, [r3, #16]
9001c96a:	8919      	ldrh	r1, [r3, #8]
9001c96c:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001c970:	428a      	cmp	r2, r1
9001c972:	db1d      	blt.n	9001c9b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001c974:	8a58      	ldrh	r0, [r3, #18]
9001c976:	f3c0 000c 	ubfx	r0, r0, #0, #13
9001c97a:	895b      	ldrh	r3, [r3, #10]
9001c97c:	4298      	cmp	r0, r3
9001c97e:	bfac      	ite	ge
9001c980:	2000      	movge	r0, #0
9001c982:	2001      	movlt	r0, #1
9001c984:	4770      	bx	lr
9001c986:	490d      	ldr	r1, [pc, #52]	@ (9001c9bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
9001c988:	8809      	ldrh	r1, [r1, #0]
9001c98a:	4411      	add	r1, r2
9001c98c:	428b      	cmp	r3, r1
9001c98e:	da0d      	bge.n	9001c9ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001c990:	1a9b      	subs	r3, r3, r2
9001c992:	4a0b      	ldr	r2, [pc, #44]	@ (9001c9c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
9001c994:	210e      	movs	r1, #14
9001c996:	6812      	ldr	r2, [r2, #0]
9001c998:	fb01 2303 	mla	r3, r1, r3, r2
9001c99c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001c9a0:	891a      	ldrh	r2, [r3, #8]
9001c9a2:	4291      	cmp	r1, r2
9001c9a4:	db04      	blt.n	9001c9b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
9001c9a6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
9001c9aa:	e7e6      	b.n	9001c97a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
9001c9ac:	2000      	movs	r0, #0
9001c9ae:	4770      	bx	lr
9001c9b0:	2001      	movs	r0, #1
9001c9b2:	4770      	bx	lr
9001c9b4:	24024620 	.word	0x24024620
9001c9b8:	24024628 	.word	0x24024628
9001c9bc:	24024624 	.word	0x24024624
9001c9c0:	24024608 	.word	0x24024608

9001c9c4 <_ZNK8touchgfx6Bitmap7getDataEv>:
9001c9c4:	4a12      	ldr	r2, [pc, #72]	@ (9001ca10 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
9001c9c6:	8803      	ldrh	r3, [r0, #0]
9001c9c8:	8811      	ldrh	r1, [r2, #0]
9001c9ca:	428b      	cmp	r3, r1
9001c9cc:	d20b      	bcs.n	9001c9e6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001c9ce:	4a11      	ldr	r2, [pc, #68]	@ (9001ca14 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001c9d0:	6812      	ldr	r2, [r2, #0]
9001c9d2:	b112      	cbz	r2, 9001c9da <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
9001c9d4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001c9d8:	b9c0      	cbnz	r0, 9001ca0c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
9001c9da:	4a0f      	ldr	r2, [pc, #60]	@ (9001ca18 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
9001c9dc:	6811      	ldr	r1, [r2, #0]
9001c9de:	2214      	movs	r2, #20
9001c9e0:	4353      	muls	r3, r2
9001c9e2:	58c8      	ldr	r0, [r1, r3]
9001c9e4:	4770      	bx	lr
9001c9e6:	4a0d      	ldr	r2, [pc, #52]	@ (9001ca1c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
9001c9e8:	8812      	ldrh	r2, [r2, #0]
9001c9ea:	440a      	add	r2, r1
9001c9ec:	4293      	cmp	r3, r2
9001c9ee:	da04      	bge.n	9001c9fa <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001c9f0:	4a08      	ldr	r2, [pc, #32]	@ (9001ca14 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001c9f2:	6812      	ldr	r2, [r2, #0]
9001c9f4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
9001c9f8:	4770      	bx	lr
9001c9fa:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
9001c9fe:	4293      	cmp	r3, r2
9001ca00:	d103      	bne.n	9001ca0a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001ca02:	4b07      	ldr	r3, [pc, #28]	@ (9001ca20 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
9001ca04:	681b      	ldr	r3, [r3, #0]
9001ca06:	6c58      	ldr	r0, [r3, #68]	@ 0x44
9001ca08:	4770      	bx	lr
9001ca0a:	2000      	movs	r0, #0
9001ca0c:	4770      	bx	lr
9001ca0e:	bf00      	nop
9001ca10:	24024620 	.word	0x24024620
9001ca14:	24024604 	.word	0x24024604
9001ca18:	24024628 	.word	0x24024628
9001ca1c:	24024624 	.word	0x24024624
9001ca20:	24024598 	.word	0x24024598

9001ca24 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
9001ca24:	4b24      	ldr	r3, [pc, #144]	@ (9001cab8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
9001ca26:	8802      	ldrh	r2, [r0, #0]
9001ca28:	8818      	ldrh	r0, [r3, #0]
9001ca2a:	4282      	cmp	r2, r0
9001ca2c:	d221      	bcs.n	9001ca72 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001ca2e:	4b23      	ldr	r3, [pc, #140]	@ (9001cabc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001ca30:	6819      	ldr	r1, [r3, #0]
9001ca32:	2314      	movs	r3, #20
9001ca34:	fb03 1302 	mla	r3, r3, r2, r1
9001ca38:	6858      	ldr	r0, [r3, #4]
9001ca3a:	2800      	cmp	r0, #0
9001ca3c:	d03a      	beq.n	9001cab4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ca3e:	4920      	ldr	r1, [pc, #128]	@ (9001cac0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001ca40:	6809      	ldr	r1, [r1, #0]
9001ca42:	2900      	cmp	r1, #0
9001ca44:	d036      	beq.n	9001cab4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ca46:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9001ca4a:	2900      	cmp	r1, #0
9001ca4c:	d032      	beq.n	9001cab4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001ca4e:	891a      	ldrh	r2, [r3, #8]
9001ca50:	8958      	ldrh	r0, [r3, #10]
9001ca52:	4350      	muls	r0, r2
9001ca54:	7c5a      	ldrb	r2, [r3, #17]
9001ca56:	7cdb      	ldrb	r3, [r3, #19]
9001ca58:	0952      	lsrs	r2, r2, #5
9001ca5a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001ca5e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001ca62:	2b0b      	cmp	r3, #11
9001ca64:	bf18      	it	ne
9001ca66:	0040      	lslne	r0, r0, #1
9001ca68:	3003      	adds	r0, #3
9001ca6a:	f020 0003 	bic.w	r0, r0, #3
9001ca6e:	4408      	add	r0, r1
9001ca70:	4770      	bx	lr
9001ca72:	4b14      	ldr	r3, [pc, #80]	@ (9001cac4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
9001ca74:	881b      	ldrh	r3, [r3, #0]
9001ca76:	4403      	add	r3, r0
9001ca78:	429a      	cmp	r2, r3
9001ca7a:	da1a      	bge.n	9001cab2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001ca7c:	4b12      	ldr	r3, [pc, #72]	@ (9001cac8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001ca7e:	1a10      	subs	r0, r2, r0
9001ca80:	210e      	movs	r1, #14
9001ca82:	681b      	ldr	r3, [r3, #0]
9001ca84:	fb01 3000 	mla	r0, r1, r0, r3
9001ca88:	7b03      	ldrb	r3, [r0, #12]
9001ca8a:	f003 031f 	and.w	r3, r3, #31
9001ca8e:	2b0b      	cmp	r3, #11
9001ca90:	d10b      	bne.n	9001caaa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001ca92:	8903      	ldrh	r3, [r0, #8]
9001ca94:	8940      	ldrh	r0, [r0, #10]
9001ca96:	4358      	muls	r0, r3
9001ca98:	4b09      	ldr	r3, [pc, #36]	@ (9001cac0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001ca9a:	3003      	adds	r0, #3
9001ca9c:	6819      	ldr	r1, [r3, #0]
9001ca9e:	f020 0303 	bic.w	r3, r0, #3
9001caa2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
9001caa6:	4418      	add	r0, r3
9001caa8:	4770      	bx	lr
9001caaa:	2b0d      	cmp	r3, #13
9001caac:	d101      	bne.n	9001cab2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001caae:	300d      	adds	r0, #13
9001cab0:	4770      	bx	lr
9001cab2:	2000      	movs	r0, #0
9001cab4:	4770      	bx	lr
9001cab6:	bf00      	nop
9001cab8:	24024620 	.word	0x24024620
9001cabc:	24024628 	.word	0x24024628
9001cac0:	24024604 	.word	0x24024604
9001cac4:	24024624 	.word	0x24024624
9001cac8:	24024608 	.word	0x24024608

9001cacc <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001cacc:	4b1f      	ldr	r3, [pc, #124]	@ (9001cb4c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001cace:	b510      	push	{r4, lr}
9001cad0:	8802      	ldrh	r2, [r0, #0]
9001cad2:	881b      	ldrh	r3, [r3, #0]
9001cad4:	429a      	cmp	r2, r3
9001cad6:	d21a      	bcs.n	9001cb0e <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001cad8:	4b1d      	ldr	r3, [pc, #116]	@ (9001cb50 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001cada:	2114      	movs	r1, #20
9001cadc:	681b      	ldr	r3, [r3, #0]
9001cade:	fb01 3102 	mla	r1, r1, r2, r3
9001cae2:	7c4b      	ldrb	r3, [r1, #17]
9001cae4:	0958      	lsrs	r0, r3, #5
9001cae6:	7ccb      	ldrb	r3, [r1, #19]
9001cae8:	491a      	ldr	r1, [pc, #104]	@ (9001cb54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001caea:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001caee:	6809      	ldr	r1, [r1, #0]
9001caf0:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001caf4:	b2d8      	uxtb	r0, r3
9001caf6:	b149      	cbz	r1, 9001cb0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001caf8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001cafc:	b132      	cbz	r2, 9001cb0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cafe:	2b0e      	cmp	r3, #14
9001cb00:	d021      	beq.n	9001cb46 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001cb02:	280f      	cmp	r0, #15
9001cb04:	d01d      	beq.n	9001cb42 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001cb06:	2810      	cmp	r0, #16
9001cb08:	bf08      	it	eq
9001cb0a:	2002      	moveq	r0, #2
9001cb0c:	bd10      	pop	{r4, pc}
9001cb0e:	4912      	ldr	r1, [pc, #72]	@ (9001cb58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001cb10:	8809      	ldrh	r1, [r1, #0]
9001cb12:	4419      	add	r1, r3
9001cb14:	428a      	cmp	r2, r1
9001cb16:	da09      	bge.n	9001cb2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001cb18:	1ad3      	subs	r3, r2, r3
9001cb1a:	4a10      	ldr	r2, [pc, #64]	@ (9001cb5c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001cb1c:	210e      	movs	r1, #14
9001cb1e:	6812      	ldr	r2, [r2, #0]
9001cb20:	fb01 2303 	mla	r3, r1, r3, r2
9001cb24:	7b18      	ldrb	r0, [r3, #12]
9001cb26:	f000 001f 	and.w	r0, r0, #31
9001cb2a:	e7ef      	b.n	9001cb0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cb2c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001cb30:	429a      	cmp	r2, r3
9001cb32:	d108      	bne.n	9001cb46 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001cb34:	f7f6 ffba 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
9001cb38:	6803      	ldr	r3, [r0, #0]
9001cb3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001cb3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001cb40:	4718      	bx	r3
9001cb42:	2001      	movs	r0, #1
9001cb44:	e7e2      	b.n	9001cb0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cb46:	2000      	movs	r0, #0
9001cb48:	e7e0      	b.n	9001cb0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001cb4a:	bf00      	nop
9001cb4c:	24024620 	.word	0x24024620
9001cb50:	24024628 	.word	0x24024628
9001cb54:	24024604 	.word	0x24024604
9001cb58:	24024624 	.word	0x24024624
9001cb5c:	24024608 	.word	0x24024608

9001cb60 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001cb60:	2010      	movs	r0, #16
9001cb62:	4770      	bx	lr

9001cb64 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001cb64:	4b02      	ldr	r3, [pc, #8]	@ (9001cb70 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001cb66:	8818      	ldrh	r0, [r3, #0]
9001cb68:	0040      	lsls	r0, r0, #1
9001cb6a:	b280      	uxth	r0, r0
9001cb6c:	4770      	bx	lr
9001cb6e:	bf00      	nop
9001cb70:	24024590 	.word	0x24024590

9001cb74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001cb74:	2bff      	cmp	r3, #255	@ 0xff
9001cb76:	d05e      	beq.n	9001cc36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001cb78:	2a0b      	cmp	r2, #11
9001cb7a:	d058      	beq.n	9001cc2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001cb7c:	d80e      	bhi.n	9001cb9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001cb7e:	2a03      	cmp	r2, #3
9001cb80:	d04d      	beq.n	9001cc1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001cb82:	d804      	bhi.n	9001cb8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001cb84:	2a01      	cmp	r2, #1
9001cb86:	d04c      	beq.n	9001cc22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001cb88:	d94d      	bls.n	9001cc26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001cb8a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001cb8c:	e031      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cb8e:	2a09      	cmp	r2, #9
9001cb90:	d04d      	beq.n	9001cc2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001cb92:	d84a      	bhi.n	9001cc2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001cb94:	2a08      	cmp	r2, #8
9001cb96:	d048      	beq.n	9001cc2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001cb98:	2300      	movs	r3, #0
9001cb9a:	e02a      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cb9c:	2a2f      	cmp	r2, #47	@ 0x2f
9001cb9e:	d02c      	beq.n	9001cbfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001cba0:	d811      	bhi.n	9001cbc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001cba2:	2a2d      	cmp	r2, #45	@ 0x2d
9001cba4:	d018      	beq.n	9001cbd8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001cba6:	d831      	bhi.n	9001cc0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001cba8:	2a2c      	cmp	r2, #44	@ 0x2c
9001cbaa:	d1f5      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cbac:	684a      	ldr	r2, [r1, #4]
9001cbae:	7813      	ldrb	r3, [r2, #0]
9001cbb0:	7852      	ldrb	r2, [r2, #1]
9001cbb2:	2a00      	cmp	r2, #0
9001cbb4:	d1f0      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cbb6:	2b01      	cmp	r3, #1
9001cbb8:	d01d      	beq.n	9001cbf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001cbba:	2b00      	cmp	r3, #0
9001cbbc:	d02d      	beq.n	9001cc1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001cbbe:	2b02      	cmp	r3, #2
9001cbc0:	d1ea      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cbc2:	68c3      	ldr	r3, [r0, #12]
9001cbc4:	e015      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cbc6:	2a31      	cmp	r2, #49	@ 0x31
9001cbc8:	d004      	beq.n	9001cbd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001cbca:	d332      	bcc.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001cbcc:	2a32      	cmp	r2, #50	@ 0x32
9001cbce:	d030      	beq.n	9001cc32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001cbd0:	2a33      	cmp	r2, #51	@ 0x33
9001cbd2:	d1e1      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cbd4:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001cbd6:	e00c      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cbd8:	684a      	ldr	r2, [r1, #4]
9001cbda:	7813      	ldrb	r3, [r2, #0]
9001cbdc:	7852      	ldrb	r2, [r2, #1]
9001cbde:	2a00      	cmp	r2, #0
9001cbe0:	d1da      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cbe2:	2b01      	cmp	r3, #1
9001cbe4:	d004      	beq.n	9001cbf0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001cbe6:	d30f      	bcc.n	9001cc08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001cbe8:	2b02      	cmp	r3, #2
9001cbea:	d1d5      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cbec:	6943      	ldr	r3, [r0, #20]
9001cbee:	e000      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cbf0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001cbf2:	4618      	mov	r0, r3
9001cbf4:	4770      	bx	lr
9001cbf6:	69c3      	ldr	r3, [r0, #28]
9001cbf8:	e7fb      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cbfa:	684b      	ldr	r3, [r1, #4]
9001cbfc:	781a      	ldrb	r2, [r3, #0]
9001cbfe:	785b      	ldrb	r3, [r3, #1]
9001cc00:	2b00      	cmp	r3, #0
9001cc02:	d1c9      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc04:	2a00      	cmp	r2, #0
9001cc06:	d1f4      	bne.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc08:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001cc0a:	e7f2      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc0c:	684b      	ldr	r3, [r1, #4]
9001cc0e:	781a      	ldrb	r2, [r3, #0]
9001cc10:	785b      	ldrb	r3, [r3, #1]
9001cc12:	2b00      	cmp	r3, #0
9001cc14:	d1c0      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc16:	2a00      	cmp	r2, #0
9001cc18:	d1eb      	bne.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc1a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001cc1c:	e7e9      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc1e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001cc20:	e7e7      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc22:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001cc24:	e7e5      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc26:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001cc28:	e7e3      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc2a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001cc2c:	e7e1      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc2e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001cc30:	e7df      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc32:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001cc34:	e7dd      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc36:	2a0b      	cmp	r2, #11
9001cc38:	d059      	beq.n	9001ccee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001cc3a:	d80e      	bhi.n	9001cc5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001cc3c:	2a03      	cmp	r2, #3
9001cc3e:	d050      	beq.n	9001cce2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001cc40:	d804      	bhi.n	9001cc4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001cc42:	2a01      	cmp	r2, #1
9001cc44:	d04f      	beq.n	9001cce6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001cc46:	d950      	bls.n	9001ccea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001cc48:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001cc4a:	e7d2      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc4c:	2a09      	cmp	r2, #9
9001cc4e:	d04e      	beq.n	9001ccee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001cc50:	d801      	bhi.n	9001cc56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001cc52:	2a08      	cmp	r2, #8
9001cc54:	d1a0      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc56:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001cc58:	e7cb      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc5a:	2a2f      	cmp	r2, #47	@ 0x2f
9001cc5c:	d02d      	beq.n	9001ccba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001cc5e:	d811      	bhi.n	9001cc84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001cc60:	2a2d      	cmp	r2, #45	@ 0x2d
9001cc62:	d018      	beq.n	9001cc96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001cc64:	d833      	bhi.n	9001ccce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001cc66:	2a2c      	cmp	r2, #44	@ 0x2c
9001cc68:	d196      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc6a:	684a      	ldr	r2, [r1, #4]
9001cc6c:	7813      	ldrb	r3, [r2, #0]
9001cc6e:	7852      	ldrb	r2, [r2, #1]
9001cc70:	2a00      	cmp	r2, #0
9001cc72:	d191      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc74:	2b01      	cmp	r3, #1
9001cc76:	d01e      	beq.n	9001ccb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001cc78:	2b00      	cmp	r3, #0
9001cc7a:	d030      	beq.n	9001ccde <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001cc7c:	2b02      	cmp	r3, #2
9001cc7e:	d18b      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc80:	6903      	ldr	r3, [r0, #16]
9001cc82:	e7b6      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc84:	2a31      	cmp	r2, #49	@ 0x31
9001cc86:	d004      	beq.n	9001cc92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001cc88:	d333      	bcc.n	9001ccf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001cc8a:	2a32      	cmp	r2, #50	@ 0x32
9001cc8c:	d031      	beq.n	9001ccf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001cc8e:	2a33      	cmp	r2, #51	@ 0x33
9001cc90:	d182      	bne.n	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cc92:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001cc94:	e7ad      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cc96:	684a      	ldr	r2, [r1, #4]
9001cc98:	7813      	ldrb	r3, [r2, #0]
9001cc9a:	7852      	ldrb	r2, [r2, #1]
9001cc9c:	2a00      	cmp	r2, #0
9001cc9e:	f47f af7b 	bne.w	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001cca2:	2b01      	cmp	r3, #1
9001cca4:	d005      	beq.n	9001ccb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001cca6:	d310      	bcc.n	9001ccca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001cca8:	2b02      	cmp	r3, #2
9001ccaa:	f47f af75 	bne.w	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ccae:	6983      	ldr	r3, [r0, #24]
9001ccb0:	e79f      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccb2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001ccb4:	e79d      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccb6:	6a03      	ldr	r3, [r0, #32]
9001ccb8:	e79b      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccba:	684b      	ldr	r3, [r1, #4]
9001ccbc:	781a      	ldrb	r2, [r3, #0]
9001ccbe:	785b      	ldrb	r3, [r3, #1]
9001ccc0:	2b00      	cmp	r3, #0
9001ccc2:	f47f af69 	bne.w	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ccc6:	2a00      	cmp	r2, #0
9001ccc8:	d193      	bne.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccca:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001cccc:	e791      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccce:	684b      	ldr	r3, [r1, #4]
9001ccd0:	781a      	ldrb	r2, [r3, #0]
9001ccd2:	785b      	ldrb	r3, [r3, #1]
9001ccd4:	2b00      	cmp	r3, #0
9001ccd6:	f47f af5f 	bne.w	9001cb98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001ccda:	2a00      	cmp	r2, #0
9001ccdc:	d189      	bne.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccde:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001cce0:	e787      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cce2:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001cce4:	e785      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001cce6:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001cce8:	e783      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccea:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001ccec:	e781      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccee:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001ccf0:	e77f      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001ccf2:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001ccf4:	e77d      	b.n	9001cbf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001ccf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ccf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ccfa:	b087      	sub	sp, #28
9001ccfc:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001ccfe:	9205      	str	r2, [sp, #20]
9001cd00:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001cd04:	9101      	str	r1, [sp, #4]
9001cd06:	9202      	str	r2, [sp, #8]
9001cd08:	6841      	ldr	r1, [r0, #4]
9001cd0a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001cd0e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001cd12:	fb01 2404 	mla	r4, r1, r4, r2
9001cd16:	6802      	ldr	r2, [r0, #0]
9001cd18:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cd1c:	f8de 2000 	ldr.w	r2, [lr]
9001cd20:	9203      	str	r2, [sp, #12]
9001cd22:	f8de 2004 	ldr.w	r2, [lr, #4]
9001cd26:	3204      	adds	r2, #4
9001cd28:	9204      	str	r2, [sp, #16]
9001cd2a:	9a02      	ldr	r2, [sp, #8]
9001cd2c:	43d6      	mvns	r6, r2
9001cd2e:	b2f6      	uxtb	r6, r6
9001cd30:	9a01      	ldr	r2, [sp, #4]
9001cd32:	2a00      	cmp	r2, #0
9001cd34:	dc03      	bgt.n	9001cd3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001cd36:	9a05      	ldr	r2, [sp, #20]
9001cd38:	2a00      	cmp	r2, #0
9001cd3a:	f340 8129 	ble.w	9001cf90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001cd3e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001cd40:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001cd44:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001cd48:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001cd4a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001cd4e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001cd52:	2b00      	cmp	r3, #0
9001cd54:	dd0e      	ble.n	9001cd74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001cd56:	1408      	asrs	r0, r1, #16
9001cd58:	d405      	bmi.n	9001cd66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cd5a:	4560      	cmp	r0, ip
9001cd5c:	da03      	bge.n	9001cd66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cd5e:	1410      	asrs	r0, r2, #16
9001cd60:	d401      	bmi.n	9001cd66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cd62:	42b8      	cmp	r0, r7
9001cd64:	db07      	blt.n	9001cd76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001cd66:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cd68:	3b01      	subs	r3, #1
9001cd6a:	3402      	adds	r4, #2
9001cd6c:	4401      	add	r1, r0
9001cd6e:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001cd70:	4402      	add	r2, r0
9001cd72:	e7ee      	b.n	9001cd52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001cd74:	d071      	beq.n	9001ce5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001cd76:	1e58      	subs	r0, r3, #1
9001cd78:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001cd7a:	fb05 1500 	mla	r5, r5, r0, r1
9001cd7e:	142d      	asrs	r5, r5, #16
9001cd80:	d45f      	bmi.n	9001ce42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001cd82:	4565      	cmp	r5, ip
9001cd84:	da5d      	bge.n	9001ce42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001cd86:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001cd88:	fb05 2000 	mla	r0, r5, r0, r2
9001cd8c:	1400      	asrs	r0, r0, #16
9001cd8e:	d458      	bmi.n	9001ce42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001cd90:	42b8      	cmp	r0, r7
9001cd92:	da56      	bge.n	9001ce42 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001cd94:	4699      	mov	r9, r3
9001cd96:	46a2      	mov	sl, r4
9001cd98:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001cd9c:	f1b9 0f00 	cmp.w	r9, #0
9001cda0:	dd57      	ble.n	9001ce52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001cda2:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001cda6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001cdaa:	9803      	ldr	r0, [sp, #12]
9001cdac:	140d      	asrs	r5, r1, #16
9001cdae:	f109 39ff 	add.w	r9, r9, #4294967295
9001cdb2:	fb07 000c 	mla	r0, r7, ip, r0
9001cdb6:	5d40      	ldrb	r0, [r0, r5]
9001cdb8:	9d04      	ldr	r5, [sp, #16]
9001cdba:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001cdbe:	f8ba 5000 	ldrh.w	r5, [sl]
9001cdc2:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001cdc6:	122f      	asrs	r7, r5, #8
9001cdc8:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001cdcc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001cdd0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cdd4:	00ed      	lsls	r5, r5, #3
9001cdd6:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001cdda:	fb17 f706 	smulbb	r7, r7, r6
9001cdde:	b2ed      	uxtb	r5, r5
9001cde0:	fb18 f806 	smulbb	r8, r8, r6
9001cde4:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001cde8:	10c7      	asrs	r7, r0, #3
9001cdea:	fb15 f506 	smulbb	r5, r5, r6
9001cdee:	00c0      	lsls	r0, r0, #3
9001cdf0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001cdf4:	fa1f fc8c 	uxth.w	ip, ip
9001cdf8:	b2c0      	uxtb	r0, r0
9001cdfa:	fb07 870b 	mla	r7, r7, fp, r8
9001cdfe:	fb00 500b 	mla	r0, r0, fp, r5
9001ce02:	f10c 0501 	add.w	r5, ip, #1
9001ce06:	b2bf      	uxth	r7, r7
9001ce08:	b280      	uxth	r0, r0
9001ce0a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001ce0e:	f107 0801 	add.w	r8, r7, #1
9001ce12:	1c45      	adds	r5, r0, #1
9001ce14:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001ce18:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001ce1c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001ce20:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001ce22:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001ce26:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001ce2a:	4401      	add	r1, r0
9001ce2c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001ce30:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001ce32:	ea45 0c0c 	orr.w	ip, r5, ip
9001ce36:	4402      	add	r2, r0
9001ce38:	ea4c 0c08 	orr.w	ip, ip, r8
9001ce3c:	f82a cb02 	strh.w	ip, [sl], #2
9001ce40:	e7ac      	b.n	9001cd9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001ce42:	f04f 0800 	mov.w	r8, #0
9001ce46:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001ce4a:	eb03 0008 	add.w	r0, r3, r8
9001ce4e:	2800      	cmp	r0, #0
9001ce50:	dc41      	bgt.n	9001ced6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001ce52:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ce56:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ce5a:	9b01      	ldr	r3, [sp, #4]
9001ce5c:	2b00      	cmp	r3, #0
9001ce5e:	f340 8097 	ble.w	9001cf90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001ce62:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001ce66:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ce68:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ce6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ce70:	eef0 6a62 	vmov.f32	s13, s5
9001ce74:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001ce78:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ce7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ce80:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001ce84:	eef0 6a43 	vmov.f32	s13, s6
9001ce88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001ce8c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001ce90:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ce94:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ce98:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ce9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001cea0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001cea4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001cea8:	ee12 2a90 	vmov	r2, s5
9001ceac:	eef0 2a47 	vmov.f32	s5, s14
9001ceb0:	fb92 f3f3 	sdiv	r3, r2, r3
9001ceb4:	ee13 2a10 	vmov	r2, s6
9001ceb8:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ceba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001cebc:	eeb0 3a67 	vmov.f32	s6, s15
9001cec0:	fb92 f3f3 	sdiv	r3, r2, r3
9001cec4:	9314      	str	r3, [sp, #80]	@ 0x50
9001cec6:	9b01      	ldr	r3, [sp, #4]
9001cec8:	9a05      	ldr	r2, [sp, #20]
9001ceca:	3b01      	subs	r3, #1
9001cecc:	9301      	str	r3, [sp, #4]
9001cece:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ced0:	bf08      	it	eq
9001ced2:	4613      	moveq	r3, r2
9001ced4:	e72c      	b.n	9001cd30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001ced6:	140f      	asrs	r7, r1, #16
9001ced8:	d453      	bmi.n	9001cf82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001ceda:	f8de 5008 	ldr.w	r5, [lr, #8]
9001cede:	42bd      	cmp	r5, r7
9001cee0:	dd4f      	ble.n	9001cf82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001cee2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001cee6:	d44c      	bmi.n	9001cf82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001cee8:	f8de 000c 	ldr.w	r0, [lr, #12]
9001ceec:	4560      	cmp	r0, ip
9001ceee:	dd48      	ble.n	9001cf82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001cef0:	9803      	ldr	r0, [sp, #12]
9001cef2:	b22d      	sxth	r5, r5
9001cef4:	fb0c 0505 	mla	r5, ip, r5, r0
9001cef8:	5de8      	ldrb	r0, [r5, r7]
9001cefa:	9d04      	ldr	r5, [sp, #16]
9001cefc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001cf00:	f06f 0501 	mvn.w	r5, #1
9001cf04:	fb05 fb08 	mul.w	fp, r5, r8
9001cf08:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001cf0c:	f834 500b 	ldrh.w	r5, [r4, fp]
9001cf10:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001cf14:	122f      	asrs	r7, r5, #8
9001cf16:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001cf1a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001cf1e:	00ed      	lsls	r5, r5, #3
9001cf20:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001cf24:	fb17 f706 	smulbb	r7, r7, r6
9001cf28:	b2ed      	uxtb	r5, r5
9001cf2a:	fb19 f906 	smulbb	r9, r9, r6
9001cf2e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001cf32:	10c7      	asrs	r7, r0, #3
9001cf34:	fb15 f506 	smulbb	r5, r5, r6
9001cf38:	00c0      	lsls	r0, r0, #3
9001cf3a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001cf3e:	fa1f fc8c 	uxth.w	ip, ip
9001cf42:	b2c0      	uxtb	r0, r0
9001cf44:	fb07 970a 	mla	r7, r7, sl, r9
9001cf48:	fb00 500a 	mla	r0, r0, sl, r5
9001cf4c:	f10c 0501 	add.w	r5, ip, #1
9001cf50:	b2bf      	uxth	r7, r7
9001cf52:	b280      	uxth	r0, r0
9001cf54:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001cf58:	f107 0901 	add.w	r9, r7, #1
9001cf5c:	1c45      	adds	r5, r0, #1
9001cf5e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001cf62:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001cf66:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001cf6a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001cf6e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001cf72:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001cf76:	ea45 0c0c 	orr.w	ip, r5, ip
9001cf7a:	ea4c 0c09 	orr.w	ip, ip, r9
9001cf7e:	f824 c00b 	strh.w	ip, [r4, fp]
9001cf82:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001cf84:	f108 38ff 	add.w	r8, r8, #4294967295
9001cf88:	4401      	add	r1, r0
9001cf8a:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001cf8c:	4402      	add	r2, r0
9001cf8e:	e75c      	b.n	9001ce4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001cf90:	b007      	add	sp, #28
9001cf92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001cf96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001cf96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cf9a:	b085      	sub	sp, #20
9001cf9c:	4693      	mov	fp, r2
9001cf9e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001cfa2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001cfa4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001cfa6:	6870      	ldr	r0, [r6, #4]
9001cfa8:	9100      	str	r1, [sp, #0]
9001cfaa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001cfae:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001cfb2:	fb00 2404 	mla	r4, r0, r4, r2
9001cfb6:	6832      	ldr	r2, [r6, #0]
9001cfb8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001cfbc:	682a      	ldr	r2, [r5, #0]
9001cfbe:	9201      	str	r2, [sp, #4]
9001cfc0:	686a      	ldr	r2, [r5, #4]
9001cfc2:	3204      	adds	r2, #4
9001cfc4:	9202      	str	r2, [sp, #8]
9001cfc6:	9a00      	ldr	r2, [sp, #0]
9001cfc8:	2a00      	cmp	r2, #0
9001cfca:	dc03      	bgt.n	9001cfd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001cfcc:	f1bb 0f00 	cmp.w	fp, #0
9001cfd0:	f340 80a0 	ble.w	9001d114 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001cfd4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001cfd6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001cfda:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001cfde:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001cfe0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001cfe4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001cfe8:	2b00      	cmp	r3, #0
9001cfea:	dd0c      	ble.n	9001d006 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001cfec:	1406      	asrs	r6, r0, #16
9001cfee:	d405      	bmi.n	9001cffc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cff0:	454e      	cmp	r6, r9
9001cff2:	da03      	bge.n	9001cffc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cff4:	1416      	asrs	r6, r2, #16
9001cff6:	d401      	bmi.n	9001cffc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001cff8:	4546      	cmp	r6, r8
9001cffa:	db05      	blt.n	9001d008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001cffc:	4470      	add	r0, lr
9001cffe:	4462      	add	r2, ip
9001d000:	3b01      	subs	r3, #1
9001d002:	3402      	adds	r4, #2
9001d004:	e7f0      	b.n	9001cfe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001d006:	d00f      	beq.n	9001d028 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d008:	1e5e      	subs	r6, r3, #1
9001d00a:	fb0e 0706 	mla	r7, lr, r6, r0
9001d00e:	143f      	asrs	r7, r7, #16
9001d010:	d541      	bpl.n	9001d096 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001d012:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001d016:	4698      	mov	r8, r3
9001d018:	9603      	str	r6, [sp, #12]
9001d01a:	f1b8 0f00 	cmp.w	r8, #0
9001d01e:	dc59      	bgt.n	9001d0d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001d020:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d024:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d028:	9b00      	ldr	r3, [sp, #0]
9001d02a:	2b00      	cmp	r3, #0
9001d02c:	dd72      	ble.n	9001d114 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001d02e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d032:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d034:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d038:	eeb0 6a62 	vmov.f32	s12, s5
9001d03c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d040:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d044:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d048:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d04c:	eeb0 6a43 	vmov.f32	s12, s6
9001d050:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d054:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d058:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d05c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d060:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d064:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d068:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d06c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d070:	ee12 2a90 	vmov	r2, s5
9001d074:	eef0 2a47 	vmov.f32	s5, s14
9001d078:	fb92 fef3 	sdiv	lr, r2, r3
9001d07c:	ee13 2a10 	vmov	r2, s6
9001d080:	eeb0 3a67 	vmov.f32	s6, s15
9001d084:	fb92 fcf3 	sdiv	ip, r2, r3
9001d088:	9b00      	ldr	r3, [sp, #0]
9001d08a:	3b01      	subs	r3, #1
9001d08c:	9300      	str	r3, [sp, #0]
9001d08e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d090:	bf08      	it	eq
9001d092:	465b      	moveq	r3, fp
9001d094:	e797      	b.n	9001cfc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001d096:	454f      	cmp	r7, r9
9001d098:	dabb      	bge.n	9001d012 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d09a:	fb0c 2606 	mla	r6, ip, r6, r2
9001d09e:	1436      	asrs	r6, r6, #16
9001d0a0:	d4b7      	bmi.n	9001d012 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d0a2:	4546      	cmp	r6, r8
9001d0a4:	dab5      	bge.n	9001d012 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d0a6:	461e      	mov	r6, r3
9001d0a8:	46a0      	mov	r8, r4
9001d0aa:	2e00      	cmp	r6, #0
9001d0ac:	ddb8      	ble.n	9001d020 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001d0ae:	1417      	asrs	r7, r2, #16
9001d0b0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001d0b4:	9901      	ldr	r1, [sp, #4]
9001d0b6:	ea4f 4920 	mov.w	r9, r0, asr #16
9001d0ba:	4462      	add	r2, ip
9001d0bc:	4470      	add	r0, lr
9001d0be:	fb0a 1707 	mla	r7, sl, r7, r1
9001d0c2:	9902      	ldr	r1, [sp, #8]
9001d0c4:	3e01      	subs	r6, #1
9001d0c6:	f817 7009 	ldrb.w	r7, [r7, r9]
9001d0ca:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001d0ce:	f828 7b02 	strh.w	r7, [r8], #2
9001d0d2:	e7ea      	b.n	9001d0aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001d0d4:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d0d8:	d417      	bmi.n	9001d10a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d0da:	68ae      	ldr	r6, [r5, #8]
9001d0dc:	454e      	cmp	r6, r9
9001d0de:	dd14      	ble.n	9001d10a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d0e0:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001d0e4:	d411      	bmi.n	9001d10a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d0e6:	68ef      	ldr	r7, [r5, #12]
9001d0e8:	4557      	cmp	r7, sl
9001d0ea:	dd0e      	ble.n	9001d10a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001d0ec:	9f01      	ldr	r7, [sp, #4]
9001d0ee:	b236      	sxth	r6, r6
9001d0f0:	f06f 0101 	mvn.w	r1, #1
9001d0f4:	fb0a 7606 	mla	r6, sl, r6, r7
9001d0f8:	9f02      	ldr	r7, [sp, #8]
9001d0fa:	f816 6009 	ldrb.w	r6, [r6, r9]
9001d0fe:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001d102:	fb01 f608 	mul.w	r6, r1, r8
9001d106:	9903      	ldr	r1, [sp, #12]
9001d108:	538f      	strh	r7, [r1, r6]
9001d10a:	4470      	add	r0, lr
9001d10c:	4462      	add	r2, ip
9001d10e:	f108 38ff 	add.w	r8, r8, #4294967295
9001d112:	e782      	b.n	9001d01a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d114:	b005      	add	sp, #20
9001d116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d11a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d11a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d11e:	b087      	sub	sp, #28
9001d120:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001d122:	9205      	str	r2, [sp, #20]
9001d124:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d128:	9102      	str	r1, [sp, #8]
9001d12a:	9203      	str	r2, [sp, #12]
9001d12c:	6861      	ldr	r1, [r4, #4]
9001d12e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001d132:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001d136:	fb01 2000 	mla	r0, r1, r0, r2
9001d13a:	6822      	ldr	r2, [r4, #0]
9001d13c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001d140:	9200      	str	r2, [sp, #0]
9001d142:	f8dc 2000 	ldr.w	r2, [ip]
9001d146:	9204      	str	r2, [sp, #16]
9001d148:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001d14c:	3204      	adds	r2, #4
9001d14e:	9201      	str	r2, [sp, #4]
9001d150:	9a03      	ldr	r2, [sp, #12]
9001d152:	43d5      	mvns	r5, r2
9001d154:	b2ed      	uxtb	r5, r5
9001d156:	9a02      	ldr	r2, [sp, #8]
9001d158:	2a00      	cmp	r2, #0
9001d15a:	dc03      	bgt.n	9001d164 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001d15c:	9a05      	ldr	r2, [sp, #20]
9001d15e:	2a00      	cmp	r2, #0
9001d160:	f340 812c 	ble.w	9001d3bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d164:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d166:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001d16a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d16e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d170:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001d174:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d178:	2b00      	cmp	r3, #0
9001d17a:	dd10      	ble.n	9001d19e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d17c:	140c      	asrs	r4, r1, #16
9001d17e:	d405      	bmi.n	9001d18c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d180:	4574      	cmp	r4, lr
9001d182:	da03      	bge.n	9001d18c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d184:	1414      	asrs	r4, r2, #16
9001d186:	d401      	bmi.n	9001d18c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d188:	42bc      	cmp	r4, r7
9001d18a:	db09      	blt.n	9001d1a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001d18c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001d18e:	3b01      	subs	r3, #1
9001d190:	9800      	ldr	r0, [sp, #0]
9001d192:	4421      	add	r1, r4
9001d194:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001d196:	3002      	adds	r0, #2
9001d198:	4422      	add	r2, r4
9001d19a:	9000      	str	r0, [sp, #0]
9001d19c:	e7ec      	b.n	9001d178 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001d19e:	d071      	beq.n	9001d284 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001d1a0:	1e5c      	subs	r4, r3, #1
9001d1a2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d1a4:	fb06 1604 	mla	r6, r6, r4, r1
9001d1a8:	1436      	asrs	r6, r6, #16
9001d1aa:	d45d      	bmi.n	9001d268 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d1ac:	4576      	cmp	r6, lr
9001d1ae:	da5b      	bge.n	9001d268 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d1b0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001d1b2:	fb06 2404 	mla	r4, r6, r4, r2
9001d1b6:	1424      	asrs	r4, r4, #16
9001d1b8:	d456      	bmi.n	9001d268 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d1ba:	42bc      	cmp	r4, r7
9001d1bc:	da54      	bge.n	9001d268 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001d1be:	4698      	mov	r8, r3
9001d1c0:	f8dd 9000 	ldr.w	r9, [sp]
9001d1c4:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001d1c8:	f1b8 0f00 	cmp.w	r8, #0
9001d1cc:	dd54      	ble.n	9001d278 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001d1ce:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001d1d2:	1414      	asrs	r4, r2, #16
9001d1d4:	9804      	ldr	r0, [sp, #16]
9001d1d6:	140e      	asrs	r6, r1, #16
9001d1d8:	f108 38ff 	add.w	r8, r8, #4294967295
9001d1dc:	fb07 0404 	mla	r4, r7, r4, r0
9001d1e0:	9801      	ldr	r0, [sp, #4]
9001d1e2:	f814 e006 	ldrb.w	lr, [r4, r6]
9001d1e6:	f8b9 4000 	ldrh.w	r4, [r9]
9001d1ea:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d1ee:	1227      	asrs	r7, r4, #8
9001d1f0:	eb00 0b0e 	add.w	fp, r0, lr
9001d1f4:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001d1f8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d1fc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d1fe:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001d202:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d206:	4401      	add	r1, r0
9001d208:	fb16 f60a 	smulbb	r6, r6, sl
9001d20c:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001d20e:	fb1b fb0a 	smulbb	fp, fp, sl
9001d212:	fb07 6705 	mla	r7, r7, r5, r6
9001d216:	10e6      	asrs	r6, r4, #3
9001d218:	00e4      	lsls	r4, r4, #3
9001d21a:	4402      	add	r2, r0
9001d21c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d220:	b2bf      	uxth	r7, r7
9001d222:	b2e4      	uxtb	r4, r4
9001d224:	fb06 b605 	mla	r6, r6, r5, fp
9001d228:	fb14 f405 	smulbb	r4, r4, r5
9001d22c:	b2b6      	uxth	r6, r6
9001d22e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001d232:	1c7c      	adds	r4, r7, #1
9001d234:	f106 0b01 	add.w	fp, r6, #1
9001d238:	fa1f fe8e 	uxth.w	lr, lr
9001d23c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001d240:	f10e 0401 	add.w	r4, lr, #1
9001d244:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001d248:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d24c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001d250:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001d254:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001d258:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001d25c:	4327      	orrs	r7, r4
9001d25e:	ea47 070b 	orr.w	r7, r7, fp
9001d262:	f829 7b02 	strh.w	r7, [r9], #2
9001d266:	e7af      	b.n	9001d1c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001d268:	f04f 0e00 	mov.w	lr, #0
9001d26c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001d270:	eb03 040e 	add.w	r4, r3, lr
9001d274:	2c00      	cmp	r4, #0
9001d276:	dc43      	bgt.n	9001d300 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001d278:	9a00      	ldr	r2, [sp, #0]
9001d27a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d27e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001d282:	9300      	str	r3, [sp, #0]
9001d284:	9b02      	ldr	r3, [sp, #8]
9001d286:	2b00      	cmp	r3, #0
9001d288:	f340 8098 	ble.w	9001d3bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001d28c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001d290:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d292:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d296:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d29a:	eef0 6a62 	vmov.f32	s13, s5
9001d29e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001d2a2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d2a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d2aa:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001d2ae:	eef0 6a43 	vmov.f32	s13, s6
9001d2b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001d2b6:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001d2ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d2be:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d2c2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d2c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d2ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d2ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d2d2:	ee12 2a90 	vmov	r2, s5
9001d2d6:	eef0 2a47 	vmov.f32	s5, s14
9001d2da:	fb92 f3f3 	sdiv	r3, r2, r3
9001d2de:	ee13 2a10 	vmov	r2, s6
9001d2e2:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d2e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d2e6:	eeb0 3a67 	vmov.f32	s6, s15
9001d2ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001d2ee:	9314      	str	r3, [sp, #80]	@ 0x50
9001d2f0:	9b02      	ldr	r3, [sp, #8]
9001d2f2:	9a05      	ldr	r2, [sp, #20]
9001d2f4:	3b01      	subs	r3, #1
9001d2f6:	9302      	str	r3, [sp, #8]
9001d2f8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d2fa:	bf08      	it	eq
9001d2fc:	4613      	moveq	r3, r2
9001d2fe:	e72a      	b.n	9001d156 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001d300:	140f      	asrs	r7, r1, #16
9001d302:	d454      	bmi.n	9001d3ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d304:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001d308:	42be      	cmp	r6, r7
9001d30a:	dd50      	ble.n	9001d3ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d30c:	ea5f 4822 	movs.w	r8, r2, asr #16
9001d310:	d44d      	bmi.n	9001d3ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d312:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001d316:	4544      	cmp	r4, r8
9001d318:	dd49      	ble.n	9001d3ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001d31a:	9c04      	ldr	r4, [sp, #16]
9001d31c:	b236      	sxth	r6, r6
9001d31e:	f06f 0001 	mvn.w	r0, #1
9001d322:	fb08 4606 	mla	r6, r8, r6, r4
9001d326:	9c01      	ldr	r4, [sp, #4]
9001d328:	fb00 fa0e 	mul.w	sl, r0, lr
9001d32c:	9800      	ldr	r0, [sp, #0]
9001d32e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001d332:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001d336:	eb04 0b08 	add.w	fp, r4, r8
9001d33a:	f830 400a 	ldrh.w	r4, [r0, sl]
9001d33e:	9801      	ldr	r0, [sp, #4]
9001d340:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001d344:	1227      	asrs	r7, r4, #8
9001d346:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d34a:	fb16 f609 	smulbb	r6, r6, r9
9001d34e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d352:	f810 8008 	ldrb.w	r8, [r0, r8]
9001d356:	fb1b fb09 	smulbb	fp, fp, r9
9001d35a:	fb07 6705 	mla	r7, r7, r5, r6
9001d35e:	10e6      	asrs	r6, r4, #3
9001d360:	00e4      	lsls	r4, r4, #3
9001d362:	9800      	ldr	r0, [sp, #0]
9001d364:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d368:	b2bf      	uxth	r7, r7
9001d36a:	b2e4      	uxtb	r4, r4
9001d36c:	fb06 b605 	mla	r6, r6, r5, fp
9001d370:	fb14 f405 	smulbb	r4, r4, r5
9001d374:	b2b6      	uxth	r6, r6
9001d376:	fb08 4809 	mla	r8, r8, r9, r4
9001d37a:	1c7c      	adds	r4, r7, #1
9001d37c:	f106 0b01 	add.w	fp, r6, #1
9001d380:	fa1f f888 	uxth.w	r8, r8
9001d384:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001d388:	f108 0401 	add.w	r4, r8, #1
9001d38c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001d390:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d394:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001d398:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001d39c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001d3a0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001d3a4:	4327      	orrs	r7, r4
9001d3a6:	ea47 070b 	orr.w	r7, r7, fp
9001d3aa:	f820 700a 	strh.w	r7, [r0, sl]
9001d3ae:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d3b0:	f10e 3eff 	add.w	lr, lr, #4294967295
9001d3b4:	4401      	add	r1, r0
9001d3b6:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001d3b8:	4402      	add	r2, r0
9001d3ba:	e759      	b.n	9001d270 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001d3bc:	b007      	add	sp, #28
9001d3be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001d3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d3c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d3c8:	b085      	sub	sp, #20
9001d3ca:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d3ce:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d3d0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001d3d2:	9203      	str	r2, [sp, #12]
9001d3d4:	6870      	ldr	r0, [r6, #4]
9001d3d6:	686f      	ldr	r7, [r5, #4]
9001d3d8:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001d3dc:	3704      	adds	r7, #4
9001d3de:	9101      	str	r1, [sp, #4]
9001d3e0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d3e4:	fb00 2404 	mla	r4, r0, r4, r2
9001d3e8:	6832      	ldr	r2, [r6, #0]
9001d3ea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d3ee:	682a      	ldr	r2, [r5, #0]
9001d3f0:	9202      	str	r2, [sp, #8]
9001d3f2:	9a01      	ldr	r2, [sp, #4]
9001d3f4:	2a00      	cmp	r2, #0
9001d3f6:	dc03      	bgt.n	9001d400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001d3f8:	9a03      	ldr	r2, [sp, #12]
9001d3fa:	2a00      	cmp	r2, #0
9001d3fc:	f340 80cc 	ble.w	9001d598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001d400:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d402:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d406:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d40a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d40c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001d410:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d414:	2b00      	cmp	r3, #0
9001d416:	dd0d      	ble.n	9001d434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001d418:	1406      	asrs	r6, r0, #16
9001d41a:	d405      	bmi.n	9001d428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001d41c:	454e      	cmp	r6, r9
9001d41e:	da03      	bge.n	9001d428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001d420:	1416      	asrs	r6, r2, #16
9001d422:	d401      	bmi.n	9001d428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001d424:	4546      	cmp	r6, r8
9001d426:	db06      	blt.n	9001d436 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001d428:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001d42a:	4460      	add	r0, ip
9001d42c:	3b01      	subs	r3, #1
9001d42e:	3402      	adds	r4, #2
9001d430:	4432      	add	r2, r6
9001d432:	e7ef      	b.n	9001d414 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001d434:	d00f      	beq.n	9001d456 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001d436:	1e5e      	subs	r6, r3, #1
9001d438:	fb0c 0e06 	mla	lr, ip, r6, r0
9001d43c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001d440:	d543      	bpl.n	9001d4ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001d442:	4698      	mov	r8, r3
9001d444:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001d448:	f1b8 0f00 	cmp.w	r8, #0
9001d44c:	dc71      	bgt.n	9001d532 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001d44e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d452:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d456:	9b01      	ldr	r3, [sp, #4]
9001d458:	2b00      	cmp	r3, #0
9001d45a:	f340 809d 	ble.w	9001d598 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001d45e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d462:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d464:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d468:	eeb0 6a62 	vmov.f32	s12, s5
9001d46c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d470:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d474:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d478:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d47c:	eeb0 6a43 	vmov.f32	s12, s6
9001d480:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d484:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d488:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d48c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d490:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d494:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d498:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d49c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d4a0:	ee12 2a90 	vmov	r2, s5
9001d4a4:	eef0 2a47 	vmov.f32	s5, s14
9001d4a8:	fb92 fcf3 	sdiv	ip, r2, r3
9001d4ac:	ee13 2a10 	vmov	r2, s6
9001d4b0:	eeb0 3a67 	vmov.f32	s6, s15
9001d4b4:	fb92 f3f3 	sdiv	r3, r2, r3
9001d4b8:	9312      	str	r3, [sp, #72]	@ 0x48
9001d4ba:	9b01      	ldr	r3, [sp, #4]
9001d4bc:	9a03      	ldr	r2, [sp, #12]
9001d4be:	3b01      	subs	r3, #1
9001d4c0:	9301      	str	r3, [sp, #4]
9001d4c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d4c4:	bf08      	it	eq
9001d4c6:	4613      	moveq	r3, r2
9001d4c8:	e793      	b.n	9001d3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001d4ca:	45ce      	cmp	lr, r9
9001d4cc:	dab9      	bge.n	9001d442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d4ce:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001d4d0:	fb01 2606 	mla	r6, r1, r6, r2
9001d4d4:	1436      	asrs	r6, r6, #16
9001d4d6:	d4b4      	bmi.n	9001d442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d4d8:	4546      	cmp	r6, r8
9001d4da:	dab2      	bge.n	9001d442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d4dc:	4698      	mov	r8, r3
9001d4de:	46a2      	mov	sl, r4
9001d4e0:	f1b8 0f00 	cmp.w	r8, #0
9001d4e4:	ddb3      	ble.n	9001d44e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001d4e6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001d4ea:	1416      	asrs	r6, r2, #16
9001d4ec:	9902      	ldr	r1, [sp, #8]
9001d4ee:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001d4f2:	f108 38ff 	add.w	r8, r8, #4294967295
9001d4f6:	4460      	add	r0, ip
9001d4f8:	fb09 1606 	mla	r6, r9, r6, r1
9001d4fc:	4928      	ldr	r1, [pc, #160]	@ (9001d5a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001d4fe:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001d502:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d506:	eb07 0b0e 	add.w	fp, r7, lr
9001d50a:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001d50e:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001d512:	00f6      	lsls	r6, r6, #3
9001d514:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001d518:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001d51a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d51e:	440a      	add	r2, r1
9001d520:	ea49 0606 	orr.w	r6, r9, r6
9001d524:	f817 900e 	ldrb.w	r9, [r7, lr]
9001d528:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001d52c:	f82a 6b02 	strh.w	r6, [sl], #2
9001d530:	e7d6      	b.n	9001d4e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001d532:	ea5f 4920 	movs.w	r9, r0, asr #16
9001d536:	d429      	bmi.n	9001d58c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001d538:	68ae      	ldr	r6, [r5, #8]
9001d53a:	454e      	cmp	r6, r9
9001d53c:	dd26      	ble.n	9001d58c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001d53e:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001d542:	d423      	bmi.n	9001d58c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001d544:	68e9      	ldr	r1, [r5, #12]
9001d546:	4559      	cmp	r1, fp
9001d548:	dd20      	ble.n	9001d58c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001d54a:	fa0f fe86 	sxth.w	lr, r6
9001d54e:	9902      	ldr	r1, [sp, #8]
9001d550:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001d554:	f06f 0101 	mvn.w	r1, #1
9001d558:	f81e e009 	ldrb.w	lr, [lr, r9]
9001d55c:	fb01 f908 	mul.w	r9, r1, r8
9001d560:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001d564:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001d568:	eb07 060e 	add.w	r6, r7, lr
9001d56c:	f896 b002 	ldrb.w	fp, [r6, #2]
9001d570:	7876      	ldrb	r6, [r6, #1]
9001d572:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001d576:	00f6      	lsls	r6, r6, #3
9001d578:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001d57c:	ea4b 0606 	orr.w	r6, fp, r6
9001d580:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001d584:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001d588:	f82a 6009 	strh.w	r6, [sl, r9]
9001d58c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001d58e:	4460      	add	r0, ip
9001d590:	f108 38ff 	add.w	r8, r8, #4294967295
9001d594:	440a      	add	r2, r1
9001d596:	e757      	b.n	9001d448 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001d598:	b005      	add	sp, #20
9001d59a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d59e:	bf00      	nop
9001d5a0:	fffff800 	.word	0xfffff800

9001d5a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d5a8:	b087      	sub	sp, #28
9001d5aa:	468b      	mov	fp, r1
9001d5ac:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d5b0:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001d5b2:	9204      	str	r2, [sp, #16]
9001d5b4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d5b8:	6841      	ldr	r1, [r0, #4]
9001d5ba:	9205      	str	r2, [sp, #20]
9001d5bc:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001d5c0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001d5c4:	fb01 2404 	mla	r4, r1, r4, r2
9001d5c8:	6802      	ldr	r2, [r0, #0]
9001d5ca:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d5ce:	f8dc 2000 	ldr.w	r2, [ip]
9001d5d2:	9201      	str	r2, [sp, #4]
9001d5d4:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001d5d8:	3204      	adds	r2, #4
9001d5da:	9202      	str	r2, [sp, #8]
9001d5dc:	f1bb 0f00 	cmp.w	fp, #0
9001d5e0:	dc03      	bgt.n	9001d5ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001d5e2:	9a04      	ldr	r2, [sp, #16]
9001d5e4:	2a00      	cmp	r2, #0
9001d5e6:	f340 8138 	ble.w	9001d85a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001d5ea:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001d5ec:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001d5f0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001d5f4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d5f6:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001d5fa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d5fe:	2b00      	cmp	r3, #0
9001d600:	dd0e      	ble.n	9001d620 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001d602:	1402      	asrs	r2, r0, #16
9001d604:	d405      	bmi.n	9001d612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d606:	42ba      	cmp	r2, r7
9001d608:	da03      	bge.n	9001d612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d60a:	140a      	asrs	r2, r1, #16
9001d60c:	d401      	bmi.n	9001d612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001d60e:	42b2      	cmp	r2, r6
9001d610:	db07      	blt.n	9001d622 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001d612:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d614:	3b01      	subs	r3, #1
9001d616:	3402      	adds	r4, #2
9001d618:	4410      	add	r0, r2
9001d61a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d61c:	4411      	add	r1, r2
9001d61e:	e7ee      	b.n	9001d5fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001d620:	d019      	beq.n	9001d656 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001d622:	1e5a      	subs	r2, r3, #1
9001d624:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001d626:	fb05 0502 	mla	r5, r5, r2, r0
9001d62a:	142d      	asrs	r5, r5, #16
9001d62c:	d409      	bmi.n	9001d642 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d62e:	42bd      	cmp	r5, r7
9001d630:	da07      	bge.n	9001d642 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d632:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001d634:	fb05 1202 	mla	r2, r5, r2, r1
9001d638:	1412      	asrs	r2, r2, #16
9001d63a:	d402      	bmi.n	9001d642 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001d63c:	42b2      	cmp	r2, r6
9001d63e:	f2c0 80ac 	blt.w	9001d79a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001d642:	f04f 0e00 	mov.w	lr, #0
9001d646:	eb03 020e 	add.w	r2, r3, lr
9001d64a:	2a00      	cmp	r2, #0
9001d64c:	dc3e      	bgt.n	9001d6cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001d64e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d652:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d656:	f1bb 0f00 	cmp.w	fp, #0
9001d65a:	f340 80fe 	ble.w	9001d85a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001d65e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d662:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d664:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d668:	f1bb 0b01 	subs.w	fp, fp, #1
9001d66c:	eeb0 6a62 	vmov.f32	s12, s5
9001d670:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d674:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d678:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d67c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001d680:	eeb0 6a43 	vmov.f32	s12, s6
9001d684:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d688:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001d68c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d690:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d694:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d698:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d69c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d6a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d6a4:	ee12 2a90 	vmov	r2, s5
9001d6a8:	eef0 2a47 	vmov.f32	s5, s14
9001d6ac:	fb92 f3f3 	sdiv	r3, r2, r3
9001d6b0:	ee13 2a10 	vmov	r2, s6
9001d6b4:	9313      	str	r3, [sp, #76]	@ 0x4c
9001d6b6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d6b8:	eeb0 3a67 	vmov.f32	s6, s15
9001d6bc:	fb92 f3f3 	sdiv	r3, r2, r3
9001d6c0:	9a04      	ldr	r2, [sp, #16]
9001d6c2:	9314      	str	r3, [sp, #80]	@ 0x50
9001d6c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001d6c6:	bf08      	it	eq
9001d6c8:	4613      	moveq	r3, r2
9001d6ca:	e787      	b.n	9001d5dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001d6cc:	1406      	asrs	r6, r0, #16
9001d6ce:	d45d      	bmi.n	9001d78c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d6d0:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001d6d4:	42b5      	cmp	r5, r6
9001d6d6:	dd59      	ble.n	9001d78c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d6d8:	140f      	asrs	r7, r1, #16
9001d6da:	d457      	bmi.n	9001d78c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d6dc:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001d6e0:	42ba      	cmp	r2, r7
9001d6e2:	dd53      	ble.n	9001d78c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d6e4:	9a01      	ldr	r2, [sp, #4]
9001d6e6:	b22d      	sxth	r5, r5
9001d6e8:	fb07 2505 	mla	r5, r7, r5, r2
9001d6ec:	5daa      	ldrb	r2, [r5, r6]
9001d6ee:	9d02      	ldr	r5, [sp, #8]
9001d6f0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001d6f4:	0e2e      	lsrs	r6, r5, #24
9001d6f6:	d049      	beq.n	9001d78c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001d6f8:	f06f 0201 	mvn.w	r2, #1
9001d6fc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001d700:	fb02 f20e 	mul.w	r2, r2, lr
9001d704:	f834 8002 	ldrh.w	r8, [r4, r2]
9001d708:	9203      	str	r2, [sp, #12]
9001d70a:	9a05      	ldr	r2, [sp, #20]
9001d70c:	ea4f 2728 	mov.w	r7, r8, asr #8
9001d710:	4356      	muls	r6, r2
9001d712:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d716:	1c72      	adds	r2, r6, #1
9001d718:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001d71c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d720:	b2ed      	uxtb	r5, r5
9001d722:	1212      	asrs	r2, r2, #8
9001d724:	fa1f f982 	uxth.w	r9, r2
9001d728:	43d2      	mvns	r2, r2
9001d72a:	fb16 f609 	smulbb	r6, r6, r9
9001d72e:	b2d2      	uxtb	r2, r2
9001d730:	fb15 f509 	smulbb	r5, r5, r9
9001d734:	fb07 6702 	mla	r7, r7, r2, r6
9001d738:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001d73c:	fb1a fa09 	smulbb	sl, sl, r9
9001d740:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001d744:	b2bf      	uxth	r7, r7
9001d746:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d74a:	fa5f f888 	uxtb.w	r8, r8
9001d74e:	fb06 a602 	mla	r6, r6, r2, sl
9001d752:	fb08 5502 	mla	r5, r8, r2, r5
9001d756:	1c7a      	adds	r2, r7, #1
9001d758:	b2b6      	uxth	r6, r6
9001d75a:	b2ad      	uxth	r5, r5
9001d75c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d760:	9a03      	ldr	r2, [sp, #12]
9001d762:	f105 0a01 	add.w	sl, r5, #1
9001d766:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d76a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d76e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d772:	ea4a 0707 	orr.w	r7, sl, r7
9001d776:	f106 0a01 	add.w	sl, r6, #1
9001d77a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d77e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d782:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d786:	ea47 070a 	orr.w	r7, r7, sl
9001d78a:	52a7      	strh	r7, [r4, r2]
9001d78c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d78e:	f10e 3eff 	add.w	lr, lr, #4294967295
9001d792:	4410      	add	r0, r2
9001d794:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d796:	4411      	add	r1, r2
9001d798:	e755      	b.n	9001d646 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001d79a:	f04f 0800 	mov.w	r8, #0
9001d79e:	eba3 0208 	sub.w	r2, r3, r8
9001d7a2:	2a00      	cmp	r2, #0
9001d7a4:	f77f af53 	ble.w	9001d64e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001d7a8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001d7ac:	140a      	asrs	r2, r1, #16
9001d7ae:	9f01      	ldr	r7, [sp, #4]
9001d7b0:	1405      	asrs	r5, r0, #16
9001d7b2:	fb06 7202 	mla	r2, r6, r2, r7
9001d7b6:	5d52      	ldrb	r2, [r2, r5]
9001d7b8:	9d02      	ldr	r5, [sp, #8]
9001d7ba:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001d7be:	0e2e      	lsrs	r6, r5, #24
9001d7c0:	d044      	beq.n	9001d84c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001d7c2:	9a05      	ldr	r2, [sp, #20]
9001d7c4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001d7c8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001d7cc:	4356      	muls	r6, r2
9001d7ce:	ea4f 272e 	mov.w	r7, lr, asr #8
9001d7d2:	1c72      	adds	r2, r6, #1
9001d7d4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001d7d8:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001d7dc:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001d7e0:	b2ed      	uxtb	r5, r5
9001d7e2:	1212      	asrs	r2, r2, #8
9001d7e4:	fa1f f982 	uxth.w	r9, r2
9001d7e8:	43d2      	mvns	r2, r2
9001d7ea:	fb16 f609 	smulbb	r6, r6, r9
9001d7ee:	b2d2      	uxtb	r2, r2
9001d7f0:	fb15 f509 	smulbb	r5, r5, r9
9001d7f4:	fb07 6702 	mla	r7, r7, r2, r6
9001d7f8:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d7fc:	fb1a fa09 	smulbb	sl, sl, r9
9001d800:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d804:	b2bf      	uxth	r7, r7
9001d806:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001d80a:	fa5f fe8e 	uxtb.w	lr, lr
9001d80e:	fb06 a602 	mla	r6, r6, r2, sl
9001d812:	fb0e 5502 	mla	r5, lr, r2, r5
9001d816:	1c7a      	adds	r2, r7, #1
9001d818:	b2b6      	uxth	r6, r6
9001d81a:	b2ad      	uxth	r5, r5
9001d81c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001d820:	f105 0a01 	add.w	sl, r5, #1
9001d824:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001d828:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001d82c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001d830:	ea4a 0707 	orr.w	r7, sl, r7
9001d834:	f106 0a01 	add.w	sl, r6, #1
9001d838:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001d83c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001d840:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001d844:	ea47 070a 	orr.w	r7, r7, sl
9001d848:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001d84c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001d84e:	f108 0801 	add.w	r8, r8, #1
9001d852:	4410      	add	r0, r2
9001d854:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d856:	4411      	add	r1, r2
9001d858:	e7a1      	b.n	9001d79e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001d85a:	b007      	add	sp, #28
9001d85c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001d860 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001d860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d864:	b085      	sub	sp, #20
9001d866:	468b      	mov	fp, r1
9001d868:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001d86c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001d86e:	9203      	str	r2, [sp, #12]
9001d870:	6841      	ldr	r1, [r0, #4]
9001d872:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001d876:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001d87a:	fb01 2404 	mla	r4, r1, r4, r2
9001d87e:	6802      	ldr	r2, [r0, #0]
9001d880:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001d884:	f8de 2000 	ldr.w	r2, [lr]
9001d888:	9200      	str	r2, [sp, #0]
9001d88a:	f8de 2004 	ldr.w	r2, [lr, #4]
9001d88e:	3204      	adds	r2, #4
9001d890:	9201      	str	r2, [sp, #4]
9001d892:	f1bb 0f00 	cmp.w	fp, #0
9001d896:	dc03      	bgt.n	9001d8a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001d898:	9a03      	ldr	r2, [sp, #12]
9001d89a:	2a00      	cmp	r2, #0
9001d89c:	f340 8153 	ble.w	9001db46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001d8a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001d8a2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001d8a6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001d8aa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001d8ac:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001d8b0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001d8b4:	2b00      	cmp	r3, #0
9001d8b6:	dd0e      	ble.n	9001d8d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001d8b8:	1408      	asrs	r0, r1, #16
9001d8ba:	d405      	bmi.n	9001d8c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d8bc:	42b8      	cmp	r0, r7
9001d8be:	da03      	bge.n	9001d8c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d8c0:	1410      	asrs	r0, r2, #16
9001d8c2:	d401      	bmi.n	9001d8c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001d8c4:	42b0      	cmp	r0, r6
9001d8c6:	db07      	blt.n	9001d8d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001d8c8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d8ca:	3b01      	subs	r3, #1
9001d8cc:	3402      	adds	r4, #2
9001d8ce:	4401      	add	r1, r0
9001d8d0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d8d2:	4402      	add	r2, r0
9001d8d4:	e7ee      	b.n	9001d8b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001d8d6:	d017      	beq.n	9001d908 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001d8d8:	1e58      	subs	r0, r3, #1
9001d8da:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001d8dc:	fb05 1500 	mla	r5, r5, r0, r1
9001d8e0:	142d      	asrs	r5, r5, #16
9001d8e2:	d409      	bmi.n	9001d8f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d8e4:	42bd      	cmp	r5, r7
9001d8e6:	da07      	bge.n	9001d8f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d8e8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001d8ea:	fb05 2000 	mla	r0, r5, r0, r2
9001d8ee:	1400      	asrs	r0, r0, #16
9001d8f0:	d402      	bmi.n	9001d8f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001d8f2:	42b0      	cmp	r0, r6
9001d8f4:	f2c0 80bc 	blt.w	9001da70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001d8f8:	2600      	movs	r6, #0
9001d8fa:	1998      	adds	r0, r3, r6
9001d8fc:	2800      	cmp	r0, #0
9001d8fe:	dc3e      	bgt.n	9001d97e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001d900:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001d904:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001d908:	f1bb 0f00 	cmp.w	fp, #0
9001d90c:	f340 811b 	ble.w	9001db46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001d910:	ee30 0a04 	vadd.f32	s0, s0, s8
9001d914:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d916:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001d91a:	f1bb 0b01 	subs.w	fp, fp, #1
9001d91e:	eeb0 6a62 	vmov.f32	s12, s5
9001d922:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001d926:	ee31 1a05 	vadd.f32	s2, s2, s10
9001d92a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d92e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001d932:	eeb0 6a43 	vmov.f32	s12, s6
9001d936:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001d93a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001d93e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001d942:	ee61 7a27 	vmul.f32	s15, s2, s15
9001d946:	ee77 2a62 	vsub.f32	s5, s14, s5
9001d94a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001d94e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001d952:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001d956:	ee12 2a90 	vmov	r2, s5
9001d95a:	eef0 2a47 	vmov.f32	s5, s14
9001d95e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d962:	ee13 2a10 	vmov	r2, s6
9001d966:	9311      	str	r3, [sp, #68]	@ 0x44
9001d968:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d96a:	eeb0 3a67 	vmov.f32	s6, s15
9001d96e:	fb92 f3f3 	sdiv	r3, r2, r3
9001d972:	9a03      	ldr	r2, [sp, #12]
9001d974:	9312      	str	r3, [sp, #72]	@ 0x48
9001d976:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001d978:	bf08      	it	eq
9001d97a:	4613      	moveq	r3, r2
9001d97c:	e789      	b.n	9001d892 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001d97e:	140f      	asrs	r7, r1, #16
9001d980:	d426      	bmi.n	9001d9d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d982:	f8de 5008 	ldr.w	r5, [lr, #8]
9001d986:	42bd      	cmp	r5, r7
9001d988:	dd22      	ble.n	9001d9d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d98a:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001d98e:	d41f      	bmi.n	9001d9d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d990:	f8de 000c 	ldr.w	r0, [lr, #12]
9001d994:	4560      	cmp	r0, ip
9001d996:	dd1b      	ble.n	9001d9d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d998:	9800      	ldr	r0, [sp, #0]
9001d99a:	b22d      	sxth	r5, r5
9001d99c:	fb0c 0505 	mla	r5, ip, r5, r0
9001d9a0:	5de8      	ldrb	r0, [r5, r7]
9001d9a2:	9d01      	ldr	r5, [sp, #4]
9001d9a4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001d9a8:	0e07      	lsrs	r7, r0, #24
9001d9aa:	2fff      	cmp	r7, #255	@ 0xff
9001d9ac:	d116      	bne.n	9001d9dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001d9ae:	f06f 0501 	mvn.w	r5, #1
9001d9b2:	fb05 f706 	mul.w	r7, r5, r6
9001d9b6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001d9ba:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001d9be:	0945      	lsrs	r5, r0, #5
9001d9c0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001d9c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d9c8:	ea4c 0505 	orr.w	r5, ip, r5
9001d9cc:	4305      	orrs	r5, r0
9001d9ce:	53e5      	strh	r5, [r4, r7]
9001d9d0:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001d9d2:	3e01      	subs	r6, #1
9001d9d4:	4401      	add	r1, r0
9001d9d6:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001d9d8:	4402      	add	r2, r0
9001d9da:	e78e      	b.n	9001d8fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001d9dc:	b2fd      	uxtb	r5, r7
9001d9de:	2f00      	cmp	r7, #0
9001d9e0:	d0f6      	beq.n	9001d9d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001d9e2:	f06f 0701 	mvn.w	r7, #1
9001d9e6:	fa1f f985 	uxth.w	r9, r5
9001d9ea:	43ed      	mvns	r5, r5
9001d9ec:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001d9f0:	4377      	muls	r7, r6
9001d9f2:	fb1a fa09 	smulbb	sl, sl, r9
9001d9f6:	b2ed      	uxtb	r5, r5
9001d9f8:	f834 8007 	ldrh.w	r8, [r4, r7]
9001d9fc:	9702      	str	r7, [sp, #8]
9001d9fe:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001da02:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001da06:	fb17 f709 	smulbb	r7, r7, r9
9001da0a:	b2c0      	uxtb	r0, r0
9001da0c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001da10:	fb10 f009 	smulbb	r0, r0, r9
9001da14:	fb0c 7c05 	mla	ip, ip, r5, r7
9001da18:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001da1c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001da20:	fa1f fc8c 	uxth.w	ip, ip
9001da24:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001da28:	fa5f f888 	uxtb.w	r8, r8
9001da2c:	fb07 a705 	mla	r7, r7, r5, sl
9001da30:	fb08 0005 	mla	r0, r8, r5, r0
9001da34:	f10c 0501 	add.w	r5, ip, #1
9001da38:	b2bf      	uxth	r7, r7
9001da3a:	b280      	uxth	r0, r0
9001da3c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001da40:	f100 0a01 	add.w	sl, r0, #1
9001da44:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001da48:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001da4c:	9802      	ldr	r0, [sp, #8]
9001da4e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001da52:	ea4a 0c0c 	orr.w	ip, sl, ip
9001da56:	f107 0a01 	add.w	sl, r7, #1
9001da5a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001da5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001da62:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001da66:	ea4c 0c0a 	orr.w	ip, ip, sl
9001da6a:	f824 c000 	strh.w	ip, [r4, r0]
9001da6e:	e7af      	b.n	9001d9d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001da70:	f04f 0800 	mov.w	r8, #0
9001da74:	eba3 0008 	sub.w	r0, r3, r8
9001da78:	2800      	cmp	r0, #0
9001da7a:	f77f af41 	ble.w	9001d900 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001da7e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001da82:	1410      	asrs	r0, r2, #16
9001da84:	9f00      	ldr	r7, [sp, #0]
9001da86:	140d      	asrs	r5, r1, #16
9001da88:	fb06 7000 	mla	r0, r6, r0, r7
9001da8c:	5d40      	ldrb	r0, [r0, r5]
9001da8e:	9d01      	ldr	r5, [sp, #4]
9001da90:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001da94:	0e2e      	lsrs	r6, r5, #24
9001da96:	2eff      	cmp	r6, #255	@ 0xff
9001da98:	d112      	bne.n	9001dac0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001da9a:	482c      	ldr	r0, [pc, #176]	@ (9001db4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001da9c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001daa0:	0968      	lsrs	r0, r5, #5
9001daa2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001daa6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001daaa:	4330      	orrs	r0, r6
9001daac:	4328      	orrs	r0, r5
9001daae:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001dab2:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001dab4:	f108 0801 	add.w	r8, r8, #1
9001dab8:	4401      	add	r1, r0
9001daba:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001dabc:	4402      	add	r2, r0
9001dabe:	e7d9      	b.n	9001da74 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001dac0:	b2f0      	uxtb	r0, r6
9001dac2:	2e00      	cmp	r6, #0
9001dac4:	d0f5      	beq.n	9001dab2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001dac6:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001daca:	fa1f f980 	uxth.w	r9, r0
9001dace:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001dad2:	43c0      	mvns	r0, r0
9001dad4:	ea4f 272c 	mov.w	r7, ip, asr #8
9001dad8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001dadc:	fb16 f609 	smulbb	r6, r6, r9
9001dae0:	b2c0      	uxtb	r0, r0
9001dae2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001dae6:	b2ed      	uxtb	r5, r5
9001dae8:	fb1a fa09 	smulbb	sl, sl, r9
9001daec:	fb07 6700 	mla	r7, r7, r0, r6
9001daf0:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001daf4:	fb15 f509 	smulbb	r5, r5, r9
9001daf8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001dafc:	b2bf      	uxth	r7, r7
9001dafe:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001db02:	fa5f fc8c 	uxtb.w	ip, ip
9001db06:	fb06 a600 	mla	r6, r6, r0, sl
9001db0a:	fb0c 5500 	mla	r5, ip, r0, r5
9001db0e:	1c78      	adds	r0, r7, #1
9001db10:	b2b6      	uxth	r6, r6
9001db12:	b2ad      	uxth	r5, r5
9001db14:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001db18:	f105 0a01 	add.w	sl, r5, #1
9001db1c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001db20:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001db24:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001db28:	ea4a 0707 	orr.w	r7, sl, r7
9001db2c:	f106 0a01 	add.w	sl, r6, #1
9001db30:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001db34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001db38:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001db3c:	ea47 070a 	orr.w	r7, r7, sl
9001db40:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001db44:	e7b5      	b.n	9001dab2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001db46:	b005      	add	sp, #20
9001db48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001db4c:	fffff800 	.word	0xfffff800

9001db50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001db50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001db54:	b087      	sub	sp, #28
9001db56:	468b      	mov	fp, r1
9001db58:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001db5c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001db5e:	9204      	str	r2, [sp, #16]
9001db60:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001db64:	6861      	ldr	r1, [r4, #4]
9001db66:	9205      	str	r2, [sp, #20]
9001db68:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001db6c:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001db70:	fb01 2000 	mla	r0, r1, r0, r2
9001db74:	6822      	ldr	r2, [r4, #0]
9001db76:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001db7a:	f8de 2000 	ldr.w	r2, [lr]
9001db7e:	9201      	str	r2, [sp, #4]
9001db80:	f8de 2004 	ldr.w	r2, [lr, #4]
9001db84:	9202      	str	r2, [sp, #8]
9001db86:	f1bb 0f00 	cmp.w	fp, #0
9001db8a:	dc03      	bgt.n	9001db94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001db8c:	9a04      	ldr	r2, [sp, #16]
9001db8e:	2a00      	cmp	r2, #0
9001db90:	f340 8142 	ble.w	9001de18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001db94:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001db96:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001db9a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001db9e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001dba0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001dba4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001dba8:	2b00      	cmp	r3, #0
9001dbaa:	dd0e      	ble.n	9001dbca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001dbac:	140c      	asrs	r4, r1, #16
9001dbae:	d405      	bmi.n	9001dbbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001dbb0:	42bc      	cmp	r4, r7
9001dbb2:	da03      	bge.n	9001dbbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001dbb4:	1414      	asrs	r4, r2, #16
9001dbb6:	d401      	bmi.n	9001dbbc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001dbb8:	42b4      	cmp	r4, r6
9001dbba:	db07      	blt.n	9001dbcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001dbbc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001dbbe:	3b01      	subs	r3, #1
9001dbc0:	3002      	adds	r0, #2
9001dbc2:	4421      	add	r1, r4
9001dbc4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001dbc6:	4422      	add	r2, r4
9001dbc8:	e7ee      	b.n	9001dba8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001dbca:	d019      	beq.n	9001dc00 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001dbcc:	1e5c      	subs	r4, r3, #1
9001dbce:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001dbd0:	fb05 1504 	mla	r5, r5, r4, r1
9001dbd4:	142d      	asrs	r5, r5, #16
9001dbd6:	d409      	bmi.n	9001dbec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001dbd8:	42bd      	cmp	r5, r7
9001dbda:	da07      	bge.n	9001dbec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001dbdc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001dbde:	fb05 2404 	mla	r4, r5, r4, r2
9001dbe2:	1424      	asrs	r4, r4, #16
9001dbe4:	d402      	bmi.n	9001dbec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001dbe6:	42b4      	cmp	r4, r6
9001dbe8:	f2c0 80b1 	blt.w	9001dd4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001dbec:	f04f 0800 	mov.w	r8, #0
9001dbf0:	eb03 0408 	add.w	r4, r3, r8
9001dbf4:	2c00      	cmp	r4, #0
9001dbf6:	dc3e      	bgt.n	9001dc76 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001dbf8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001dbfc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001dc00:	f1bb 0f00 	cmp.w	fp, #0
9001dc04:	f340 8108 	ble.w	9001de18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001dc08:	ee30 0a04 	vadd.f32	s0, s0, s8
9001dc0c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dc0e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001dc12:	f1bb 0b01 	subs.w	fp, fp, #1
9001dc16:	eeb0 6a62 	vmov.f32	s12, s5
9001dc1a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001dc1e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001dc22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dc26:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001dc2a:	eeb0 6a43 	vmov.f32	s12, s6
9001dc2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001dc32:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001dc36:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001dc3a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001dc3e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001dc42:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001dc46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001dc4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001dc4e:	ee12 2a90 	vmov	r2, s5
9001dc52:	eef0 2a47 	vmov.f32	s5, s14
9001dc56:	fb92 f3f3 	sdiv	r3, r2, r3
9001dc5a:	ee13 2a10 	vmov	r2, s6
9001dc5e:	9313      	str	r3, [sp, #76]	@ 0x4c
9001dc60:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dc62:	eeb0 3a67 	vmov.f32	s6, s15
9001dc66:	fb92 f3f3 	sdiv	r3, r2, r3
9001dc6a:	9a04      	ldr	r2, [sp, #16]
9001dc6c:	9314      	str	r3, [sp, #80]	@ 0x50
9001dc6e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001dc70:	bf08      	it	eq
9001dc72:	4613      	moveq	r3, r2
9001dc74:	e787      	b.n	9001db86 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001dc76:	140e      	asrs	r6, r1, #16
9001dc78:	d462      	bmi.n	9001dd40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dc7a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001dc7e:	42b5      	cmp	r5, r6
9001dc80:	dd5e      	ble.n	9001dd40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dc82:	1417      	asrs	r7, r2, #16
9001dc84:	d45c      	bmi.n	9001dd40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dc86:	f8de 400c 	ldr.w	r4, [lr, #12]
9001dc8a:	42bc      	cmp	r4, r7
9001dc8c:	dd58      	ble.n	9001dd40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dc8e:	b22d      	sxth	r5, r5
9001dc90:	9c02      	ldr	r4, [sp, #8]
9001dc92:	fb07 6505 	mla	r5, r7, r5, r6
9001dc96:	5d66      	ldrb	r6, [r4, r5]
9001dc98:	2e00      	cmp	r6, #0
9001dc9a:	d051      	beq.n	9001dd40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001dc9c:	9c01      	ldr	r4, [sp, #4]
9001dc9e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001dca2:	f06f 0401 	mvn.w	r4, #1
9001dca6:	fb04 f408 	mul.w	r4, r4, r8
9001dcaa:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001dcae:	5b05      	ldrh	r5, [r0, r4]
9001dcb0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001dcb4:	9403      	str	r4, [sp, #12]
9001dcb6:	9c05      	ldr	r4, [sp, #20]
9001dcb8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001dcbc:	4366      	muls	r6, r4
9001dcbe:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001dcc2:	1c74      	adds	r4, r6, #1
9001dcc4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001dcc8:	122e      	asrs	r6, r5, #8
9001dcca:	1224      	asrs	r4, r4, #8
9001dccc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001dcd0:	00ed      	lsls	r5, r5, #3
9001dcd2:	b2a7      	uxth	r7, r4
9001dcd4:	43e4      	mvns	r4, r4
9001dcd6:	b2ed      	uxtb	r5, r5
9001dcd8:	b2e4      	uxtb	r4, r4
9001dcda:	fb16 f604 	smulbb	r6, r6, r4
9001dcde:	fb15 f504 	smulbb	r5, r5, r4
9001dce2:	fb0c 6c07 	mla	ip, ip, r7, r6
9001dce6:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001dcea:	fb1a fa04 	smulbb	sl, sl, r4
9001dcee:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001dcf2:	fa1f fc8c 	uxth.w	ip, ip
9001dcf6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001dcfa:	fa5f f989 	uxtb.w	r9, r9
9001dcfe:	fb06 a607 	mla	r6, r6, r7, sl
9001dd02:	f10c 0401 	add.w	r4, ip, #1
9001dd06:	fb09 5507 	mla	r5, r9, r7, r5
9001dd0a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001dd0e:	9c03      	ldr	r4, [sp, #12]
9001dd10:	b2ad      	uxth	r5, r5
9001dd12:	b2b6      	uxth	r6, r6
9001dd14:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001dd18:	f105 0a01 	add.w	sl, r5, #1
9001dd1c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001dd20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001dd24:	ea4a 0c0c 	orr.w	ip, sl, ip
9001dd28:	f106 0a01 	add.w	sl, r6, #1
9001dd2c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001dd30:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001dd34:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001dd38:	ea4c 0c0a 	orr.w	ip, ip, sl
9001dd3c:	f820 c004 	strh.w	ip, [r0, r4]
9001dd40:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001dd42:	f108 38ff 	add.w	r8, r8, #4294967295
9001dd46:	4421      	add	r1, r4
9001dd48:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001dd4a:	4422      	add	r2, r4
9001dd4c:	e750      	b.n	9001dbf0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001dd4e:	f04f 0900 	mov.w	r9, #0
9001dd52:	eba3 0409 	sub.w	r4, r3, r9
9001dd56:	2c00      	cmp	r4, #0
9001dd58:	f77f af4e 	ble.w	9001dbf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001dd5c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001dd60:	140d      	asrs	r5, r1, #16
9001dd62:	1414      	asrs	r4, r2, #16
9001dd64:	fb06 5404 	mla	r4, r6, r4, r5
9001dd68:	9d02      	ldr	r5, [sp, #8]
9001dd6a:	5d2e      	ldrb	r6, [r5, r4]
9001dd6c:	2e00      	cmp	r6, #0
9001dd6e:	d04c      	beq.n	9001de0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001dd70:	9d01      	ldr	r5, [sp, #4]
9001dd72:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001dd76:	9c05      	ldr	r4, [sp, #20]
9001dd78:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001dd7c:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001dd80:	4366      	muls	r6, r4
9001dd82:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001dd86:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001dd8a:	1c74      	adds	r4, r6, #1
9001dd8c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001dd90:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001dd94:	122e      	asrs	r6, r5, #8
9001dd96:	1224      	asrs	r4, r4, #8
9001dd98:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001dd9c:	00ed      	lsls	r5, r5, #3
9001dd9e:	b2a7      	uxth	r7, r4
9001dda0:	43e4      	mvns	r4, r4
9001dda2:	b2ed      	uxtb	r5, r5
9001dda4:	b2e4      	uxtb	r4, r4
9001dda6:	fb16 f604 	smulbb	r6, r6, r4
9001ddaa:	fb15 f504 	smulbb	r5, r5, r4
9001ddae:	fb0c 6c07 	mla	ip, ip, r7, r6
9001ddb2:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001ddb6:	fb1a fa04 	smulbb	sl, sl, r4
9001ddba:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ddbe:	fa1f fc8c 	uxth.w	ip, ip
9001ddc2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ddc6:	fa5f f888 	uxtb.w	r8, r8
9001ddca:	fb06 a607 	mla	r6, r6, r7, sl
9001ddce:	f10c 0401 	add.w	r4, ip, #1
9001ddd2:	fb08 5507 	mla	r5, r8, r7, r5
9001ddd6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001ddda:	b2ad      	uxth	r5, r5
9001dddc:	b2b6      	uxth	r6, r6
9001ddde:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001dde2:	f105 0a01 	add.w	sl, r5, #1
9001dde6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ddea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ddee:	ea4a 0c0c 	orr.w	ip, sl, ip
9001ddf2:	f106 0a01 	add.w	sl, r6, #1
9001ddf6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ddfa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ddfe:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001de02:	ea4c 0c0a 	orr.w	ip, ip, sl
9001de06:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001de0a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001de0c:	f109 0901 	add.w	r9, r9, #1
9001de10:	4421      	add	r1, r4
9001de12:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001de14:	4422      	add	r2, r4
9001de16:	e79c      	b.n	9001dd52 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001de18:	b007      	add	sp, #28
9001de1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001de1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001de1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001de22:	b085      	sub	sp, #20
9001de24:	468b      	mov	fp, r1
9001de26:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001de2a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001de2c:	9203      	str	r2, [sp, #12]
9001de2e:	6861      	ldr	r1, [r4, #4]
9001de30:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001de34:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001de38:	fb01 2000 	mla	r0, r1, r0, r2
9001de3c:	6822      	ldr	r2, [r4, #0]
9001de3e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001de42:	f8d8 2000 	ldr.w	r2, [r8]
9001de46:	9200      	str	r2, [sp, #0]
9001de48:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001de4c:	9201      	str	r2, [sp, #4]
9001de4e:	f1bb 0f00 	cmp.w	fp, #0
9001de52:	dc03      	bgt.n	9001de5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001de54:	9a03      	ldr	r2, [sp, #12]
9001de56:	2a00      	cmp	r2, #0
9001de58:	f340 8146 	ble.w	9001e0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001de5c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001de5e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001de62:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001de66:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001de68:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001de6c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001de70:	2b00      	cmp	r3, #0
9001de72:	dd0e      	ble.n	9001de92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001de74:	140c      	asrs	r4, r1, #16
9001de76:	d405      	bmi.n	9001de84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001de78:	42bc      	cmp	r4, r7
9001de7a:	da03      	bge.n	9001de84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001de7c:	1414      	asrs	r4, r2, #16
9001de7e:	d401      	bmi.n	9001de84 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001de80:	42b4      	cmp	r4, r6
9001de82:	db07      	blt.n	9001de94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001de84:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001de86:	3b01      	subs	r3, #1
9001de88:	3002      	adds	r0, #2
9001de8a:	4421      	add	r1, r4
9001de8c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001de8e:	4422      	add	r2, r4
9001de90:	e7ee      	b.n	9001de70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001de92:	d017      	beq.n	9001dec4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001de94:	1e5c      	subs	r4, r3, #1
9001de96:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001de98:	fb05 1504 	mla	r5, r5, r4, r1
9001de9c:	142d      	asrs	r5, r5, #16
9001de9e:	d409      	bmi.n	9001deb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001dea0:	42bd      	cmp	r5, r7
9001dea2:	da07      	bge.n	9001deb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001dea4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001dea6:	fb05 2404 	mla	r4, r5, r4, r2
9001deaa:	1424      	asrs	r4, r4, #16
9001deac:	d402      	bmi.n	9001deb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001deae:	42b4      	cmp	r4, r6
9001deb0:	f2c0 80b3 	blt.w	9001e01a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001deb4:	2600      	movs	r6, #0
9001deb6:	199c      	adds	r4, r3, r6
9001deb8:	2c00      	cmp	r4, #0
9001deba:	dc3e      	bgt.n	9001df3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001debc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001dec0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001dec4:	f1bb 0f00 	cmp.w	fp, #0
9001dec8:	f340 810e 	ble.w	9001e0e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001decc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ded0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ded2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ded6:	f1bb 0b01 	subs.w	fp, fp, #1
9001deda:	eeb0 6a62 	vmov.f32	s12, s5
9001dede:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001dee2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001dee6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001deea:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001deee:	eeb0 6a43 	vmov.f32	s12, s6
9001def2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001def6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001defa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001defe:	ee61 7a27 	vmul.f32	s15, s2, s15
9001df02:	ee77 2a62 	vsub.f32	s5, s14, s5
9001df06:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001df0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001df0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001df12:	ee12 2a90 	vmov	r2, s5
9001df16:	eef0 2a47 	vmov.f32	s5, s14
9001df1a:	fb92 f3f3 	sdiv	r3, r2, r3
9001df1e:	ee13 2a10 	vmov	r2, s6
9001df22:	9311      	str	r3, [sp, #68]	@ 0x44
9001df24:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001df26:	eeb0 3a67 	vmov.f32	s6, s15
9001df2a:	fb92 f3f3 	sdiv	r3, r2, r3
9001df2e:	9a03      	ldr	r2, [sp, #12]
9001df30:	9312      	str	r3, [sp, #72]	@ 0x48
9001df32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001df34:	bf08      	it	eq
9001df36:	4613      	moveq	r3, r2
9001df38:	e789      	b.n	9001de4e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001df3a:	140f      	asrs	r7, r1, #16
9001df3c:	d418      	bmi.n	9001df70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001df3e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001df42:	42bd      	cmp	r5, r7
9001df44:	dd14      	ble.n	9001df70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001df46:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001df4a:	d411      	bmi.n	9001df70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001df4c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001df50:	4564      	cmp	r4, ip
9001df52:	dd0d      	ble.n	9001df70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001df54:	b22d      	sxth	r5, r5
9001df56:	9c01      	ldr	r4, [sp, #4]
9001df58:	fb0c 7505 	mla	r5, ip, r5, r7
9001df5c:	5d64      	ldrb	r4, [r4, r5]
9001df5e:	2cff      	cmp	r4, #255	@ 0xff
9001df60:	d10c      	bne.n	9001df7c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001df62:	9c00      	ldr	r4, [sp, #0]
9001df64:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001df68:	f06f 0401 	mvn.w	r4, #1
9001df6c:	4374      	muls	r4, r6
9001df6e:	5305      	strh	r5, [r0, r4]
9001df70:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001df72:	3e01      	subs	r6, #1
9001df74:	4421      	add	r1, r4
9001df76:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001df78:	4422      	add	r2, r4
9001df7a:	e79c      	b.n	9001deb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001df7c:	2c00      	cmp	r4, #0
9001df7e:	d0f7      	beq.n	9001df70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001df80:	9f00      	ldr	r7, [sp, #0]
9001df82:	fa1f fc84 	uxth.w	ip, r4
9001df86:	43e4      	mvns	r4, r4
9001df88:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001df8c:	f06f 0501 	mvn.w	r5, #1
9001df90:	b2e4      	uxtb	r4, r4
9001df92:	4375      	muls	r5, r6
9001df94:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001df98:	9502      	str	r5, [sp, #8]
9001df9a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001df9e:	5b45      	ldrh	r5, [r0, r5]
9001dfa0:	122f      	asrs	r7, r5, #8
9001dfa2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001dfa6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001dfaa:	00ed      	lsls	r5, r5, #3
9001dfac:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001dfb0:	fb17 f704 	smulbb	r7, r7, r4
9001dfb4:	b2ed      	uxtb	r5, r5
9001dfb6:	fb1a fa04 	smulbb	sl, sl, r4
9001dfba:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001dfbe:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001dfc2:	fb15 f504 	smulbb	r5, r5, r4
9001dfc6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001dfca:	fa1f fe8e 	uxth.w	lr, lr
9001dfce:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001dfd2:	fa5f f989 	uxtb.w	r9, r9
9001dfd6:	fb07 a70c 	mla	r7, r7, ip, sl
9001dfda:	f10e 0401 	add.w	r4, lr, #1
9001dfde:	fb09 550c 	mla	r5, r9, ip, r5
9001dfe2:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001dfe6:	9c02      	ldr	r4, [sp, #8]
9001dfe8:	b2ad      	uxth	r5, r5
9001dfea:	b2bf      	uxth	r7, r7
9001dfec:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001dff0:	f105 0a01 	add.w	sl, r5, #1
9001dff4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001dff8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001dffc:	ea4a 0e0e 	orr.w	lr, sl, lr
9001e000:	f107 0a01 	add.w	sl, r7, #1
9001e004:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001e008:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e00c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e010:	ea4e 0e0a 	orr.w	lr, lr, sl
9001e014:	f820 e004 	strh.w	lr, [r0, r4]
9001e018:	e7aa      	b.n	9001df70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001e01a:	f04f 0900 	mov.w	r9, #0
9001e01e:	eba3 0409 	sub.w	r4, r3, r9
9001e022:	2c00      	cmp	r4, #0
9001e024:	f77f af4a 	ble.w	9001debc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e028:	1414      	asrs	r4, r2, #16
9001e02a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001e02e:	140d      	asrs	r5, r1, #16
9001e030:	fb06 5504 	mla	r5, r6, r4, r5
9001e034:	9c01      	ldr	r4, [sp, #4]
9001e036:	5d64      	ldrb	r4, [r4, r5]
9001e038:	2cff      	cmp	r4, #255	@ 0xff
9001e03a:	d10b      	bne.n	9001e054 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001e03c:	9c00      	ldr	r4, [sp, #0]
9001e03e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001e042:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001e046:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001e048:	f109 0901 	add.w	r9, r9, #1
9001e04c:	4421      	add	r1, r4
9001e04e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001e050:	4422      	add	r2, r4
9001e052:	e7e4      	b.n	9001e01e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001e054:	2c00      	cmp	r4, #0
9001e056:	d0f6      	beq.n	9001e046 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e058:	9e00      	ldr	r6, [sp, #0]
9001e05a:	b2a7      	uxth	r7, r4
9001e05c:	43e4      	mvns	r4, r4
9001e05e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001e062:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001e066:	b2e4      	uxtb	r4, r4
9001e068:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e06c:	122e      	asrs	r6, r5, #8
9001e06e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001e072:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e076:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e07a:	00ed      	lsls	r5, r5, #3
9001e07c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001e080:	fb16 f604 	smulbb	r6, r6, r4
9001e084:	b2ed      	uxtb	r5, r5
9001e086:	fb1a fa04 	smulbb	sl, sl, r4
9001e08a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001e08e:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001e092:	fb15 f504 	smulbb	r5, r5, r4
9001e096:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e09a:	fa1f fc8c 	uxth.w	ip, ip
9001e09e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001e0a2:	fa5f fe8e 	uxtb.w	lr, lr
9001e0a6:	fb06 a607 	mla	r6, r6, r7, sl
9001e0aa:	f10c 0401 	add.w	r4, ip, #1
9001e0ae:	fb0e 5507 	mla	r5, lr, r7, r5
9001e0b2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001e0b6:	b2ad      	uxth	r5, r5
9001e0b8:	b2b6      	uxth	r6, r6
9001e0ba:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e0be:	f105 0a01 	add.w	sl, r5, #1
9001e0c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001e0c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e0ca:	ea4a 0c0c 	orr.w	ip, sl, ip
9001e0ce:	f106 0a01 	add.w	sl, r6, #1
9001e0d2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001e0d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e0da:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e0de:	ea4c 0c0a 	orr.w	ip, ip, sl
9001e0e2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001e0e6:	e7ae      	b.n	9001e046 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e0e8:	b005      	add	sp, #20
9001e0ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e0ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e0ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e0f2:	b085      	sub	sp, #20
9001e0f4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e0f6:	9203      	str	r2, [sp, #12]
9001e0f8:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001e0fc:	9100      	str	r1, [sp, #0]
9001e0fe:	9201      	str	r2, [sp, #4]
9001e100:	6841      	ldr	r1, [r0, #4]
9001e102:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001e106:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001e10a:	fb01 2404 	mla	r4, r1, r4, r2
9001e10e:	6802      	ldr	r2, [r0, #0]
9001e110:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e114:	f8de 2000 	ldr.w	r2, [lr]
9001e118:	9202      	str	r2, [sp, #8]
9001e11a:	9a01      	ldr	r2, [sp, #4]
9001e11c:	43d6      	mvns	r6, r2
9001e11e:	b2f6      	uxtb	r6, r6
9001e120:	9a00      	ldr	r2, [sp, #0]
9001e122:	2a00      	cmp	r2, #0
9001e124:	dc03      	bgt.n	9001e12e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001e126:	9a03      	ldr	r2, [sp, #12]
9001e128:	2a00      	cmp	r2, #0
9001e12a:	f340 8124 	ble.w	9001e376 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001e12e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e130:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001e134:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e138:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e13a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001e13e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e142:	2b00      	cmp	r3, #0
9001e144:	dd0e      	ble.n	9001e164 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e146:	1408      	asrs	r0, r1, #16
9001e148:	d405      	bmi.n	9001e156 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001e14a:	4560      	cmp	r0, ip
9001e14c:	da03      	bge.n	9001e156 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001e14e:	1410      	asrs	r0, r2, #16
9001e150:	d401      	bmi.n	9001e156 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001e152:	42b8      	cmp	r0, r7
9001e154:	db07      	blt.n	9001e166 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001e156:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e158:	3b01      	subs	r3, #1
9001e15a:	3402      	adds	r4, #2
9001e15c:	4401      	add	r1, r0
9001e15e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e160:	4402      	add	r2, r0
9001e162:	e7ee      	b.n	9001e142 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001e164:	d06e      	beq.n	9001e244 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001e166:	1e58      	subs	r0, r3, #1
9001e168:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001e16a:	fb05 1500 	mla	r5, r5, r0, r1
9001e16e:	142d      	asrs	r5, r5, #16
9001e170:	d45c      	bmi.n	9001e22c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e172:	4565      	cmp	r5, ip
9001e174:	da5a      	bge.n	9001e22c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e176:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001e178:	fb05 2000 	mla	r0, r5, r0, r2
9001e17c:	1400      	asrs	r0, r0, #16
9001e17e:	d455      	bmi.n	9001e22c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e180:	42b8      	cmp	r0, r7
9001e182:	da53      	bge.n	9001e22c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001e184:	4699      	mov	r9, r3
9001e186:	46a2      	mov	sl, r4
9001e188:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001e18c:	f1b9 0f00 	cmp.w	r9, #0
9001e190:	dd54      	ble.n	9001e23c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001e192:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001e196:	140d      	asrs	r5, r1, #16
9001e198:	1410      	asrs	r0, r2, #16
9001e19a:	f109 39ff 	add.w	r9, r9, #4294967295
9001e19e:	fb07 5000 	mla	r0, r7, r0, r5
9001e1a2:	9d02      	ldr	r5, [sp, #8]
9001e1a4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001e1a8:	f8ba 5000 	ldrh.w	r5, [sl]
9001e1ac:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001e1b0:	122f      	asrs	r7, r5, #8
9001e1b2:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001e1b6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e1ba:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e1be:	00ed      	lsls	r5, r5, #3
9001e1c0:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001e1c4:	fb17 f706 	smulbb	r7, r7, r6
9001e1c8:	b2ed      	uxtb	r5, r5
9001e1ca:	fb18 f806 	smulbb	r8, r8, r6
9001e1ce:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001e1d2:	10c7      	asrs	r7, r0, #3
9001e1d4:	fb15 f506 	smulbb	r5, r5, r6
9001e1d8:	00c0      	lsls	r0, r0, #3
9001e1da:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e1de:	fa1f fc8c 	uxth.w	ip, ip
9001e1e2:	b2c0      	uxtb	r0, r0
9001e1e4:	fb07 870b 	mla	r7, r7, fp, r8
9001e1e8:	fb00 500b 	mla	r0, r0, fp, r5
9001e1ec:	f10c 0501 	add.w	r5, ip, #1
9001e1f0:	b2bf      	uxth	r7, r7
9001e1f2:	b280      	uxth	r0, r0
9001e1f4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e1f8:	f107 0801 	add.w	r8, r7, #1
9001e1fc:	1c45      	adds	r5, r0, #1
9001e1fe:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001e202:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e206:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e20a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e20c:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001e210:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e214:	4401      	add	r1, r0
9001e216:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001e21a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e21c:	ea45 0c0c 	orr.w	ip, r5, ip
9001e220:	4402      	add	r2, r0
9001e222:	ea4c 0c08 	orr.w	ip, ip, r8
9001e226:	f82a cb02 	strh.w	ip, [sl], #2
9001e22a:	e7af      	b.n	9001e18c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e22c:	f04f 0800 	mov.w	r8, #0
9001e230:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001e234:	eb03 0008 	add.w	r0, r3, r8
9001e238:	2800      	cmp	r0, #0
9001e23a:	dc41      	bgt.n	9001e2c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001e23c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e240:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e244:	9b00      	ldr	r3, [sp, #0]
9001e246:	2b00      	cmp	r3, #0
9001e248:	f340 8095 	ble.w	9001e376 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001e24c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001e250:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e252:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e256:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e25a:	eef0 6a62 	vmov.f32	s13, s5
9001e25e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001e262:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e266:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e26a:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001e26e:	eef0 6a43 	vmov.f32	s13, s6
9001e272:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e276:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001e27a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e27e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e282:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e286:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e28a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e28e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e292:	ee12 2a90 	vmov	r2, s5
9001e296:	eef0 2a47 	vmov.f32	s5, s14
9001e29a:	fb92 f3f3 	sdiv	r3, r2, r3
9001e29e:	ee13 2a10 	vmov	r2, s6
9001e2a2:	9311      	str	r3, [sp, #68]	@ 0x44
9001e2a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e2a6:	eeb0 3a67 	vmov.f32	s6, s15
9001e2aa:	fb92 f3f3 	sdiv	r3, r2, r3
9001e2ae:	9312      	str	r3, [sp, #72]	@ 0x48
9001e2b0:	9b00      	ldr	r3, [sp, #0]
9001e2b2:	9a03      	ldr	r2, [sp, #12]
9001e2b4:	3b01      	subs	r3, #1
9001e2b6:	9300      	str	r3, [sp, #0]
9001e2b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e2ba:	bf08      	it	eq
9001e2bc:	4613      	moveq	r3, r2
9001e2be:	e72f      	b.n	9001e120 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001e2c0:	140f      	asrs	r7, r1, #16
9001e2c2:	d451      	bmi.n	9001e368 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e2c4:	f8de 5008 	ldr.w	r5, [lr, #8]
9001e2c8:	42bd      	cmp	r5, r7
9001e2ca:	dd4d      	ble.n	9001e368 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e2cc:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001e2d0:	d44a      	bmi.n	9001e368 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e2d2:	f8de 000c 	ldr.w	r0, [lr, #12]
9001e2d6:	4560      	cmp	r0, ip
9001e2d8:	dd46      	ble.n	9001e368 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001e2da:	b22d      	sxth	r5, r5
9001e2dc:	9802      	ldr	r0, [sp, #8]
9001e2de:	fb0c 7505 	mla	r5, ip, r5, r7
9001e2e2:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001e2e6:	f06f 0501 	mvn.w	r5, #1
9001e2ea:	fb05 fb08 	mul.w	fp, r5, r8
9001e2ee:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001e2f2:	f834 500b 	ldrh.w	r5, [r4, fp]
9001e2f6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e2fa:	122f      	asrs	r7, r5, #8
9001e2fc:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001e300:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e304:	00ed      	lsls	r5, r5, #3
9001e306:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001e30a:	fb17 f706 	smulbb	r7, r7, r6
9001e30e:	b2ed      	uxtb	r5, r5
9001e310:	fb19 f906 	smulbb	r9, r9, r6
9001e314:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001e318:	10c7      	asrs	r7, r0, #3
9001e31a:	fb15 f506 	smulbb	r5, r5, r6
9001e31e:	00c0      	lsls	r0, r0, #3
9001e320:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e324:	fa1f fc8c 	uxth.w	ip, ip
9001e328:	b2c0      	uxtb	r0, r0
9001e32a:	fb07 970a 	mla	r7, r7, sl, r9
9001e32e:	fb00 500a 	mla	r0, r0, sl, r5
9001e332:	f10c 0501 	add.w	r5, ip, #1
9001e336:	b2bf      	uxth	r7, r7
9001e338:	b280      	uxth	r0, r0
9001e33a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e33e:	f107 0901 	add.w	r9, r7, #1
9001e342:	1c45      	adds	r5, r0, #1
9001e344:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001e348:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e34c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e350:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001e354:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e358:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001e35c:	ea45 0c0c 	orr.w	ip, r5, ip
9001e360:	ea4c 0c09 	orr.w	ip, ip, r9
9001e364:	f824 c00b 	strh.w	ip, [r4, fp]
9001e368:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e36a:	f108 38ff 	add.w	r8, r8, #4294967295
9001e36e:	4401      	add	r1, r0
9001e370:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e372:	4402      	add	r2, r0
9001e374:	e75e      	b.n	9001e234 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001e376:	b005      	add	sp, #20
9001e378:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e37c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e37c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e380:	b085      	sub	sp, #20
9001e382:	4693      	mov	fp, r2
9001e384:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e388:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001e38a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001e38c:	6870      	ldr	r0, [r6, #4]
9001e38e:	9101      	str	r1, [sp, #4]
9001e390:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001e394:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001e398:	fb00 2404 	mla	r4, r0, r4, r2
9001e39c:	6832      	ldr	r2, [r6, #0]
9001e39e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e3a2:	682a      	ldr	r2, [r5, #0]
9001e3a4:	9202      	str	r2, [sp, #8]
9001e3a6:	9a01      	ldr	r2, [sp, #4]
9001e3a8:	2a00      	cmp	r2, #0
9001e3aa:	dc03      	bgt.n	9001e3b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001e3ac:	f1bb 0f00 	cmp.w	fp, #0
9001e3b0:	f340 809a 	ble.w	9001e4e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001e3b4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e3b6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001e3ba:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001e3be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e3c0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001e3c4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e3c8:	2b00      	cmp	r3, #0
9001e3ca:	dd0c      	ble.n	9001e3e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001e3cc:	1406      	asrs	r6, r0, #16
9001e3ce:	d405      	bmi.n	9001e3dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e3d0:	454e      	cmp	r6, r9
9001e3d2:	da03      	bge.n	9001e3dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e3d4:	1416      	asrs	r6, r2, #16
9001e3d6:	d401      	bmi.n	9001e3dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e3d8:	4546      	cmp	r6, r8
9001e3da:	db05      	blt.n	9001e3e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001e3dc:	4470      	add	r0, lr
9001e3de:	4462      	add	r2, ip
9001e3e0:	3b01      	subs	r3, #1
9001e3e2:	3402      	adds	r4, #2
9001e3e4:	e7f0      	b.n	9001e3c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e3e6:	d00f      	beq.n	9001e408 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001e3e8:	1e5e      	subs	r6, r3, #1
9001e3ea:	fb0e 0706 	mla	r7, lr, r6, r0
9001e3ee:	143f      	asrs	r7, r7, #16
9001e3f0:	d541      	bpl.n	9001e476 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001e3f2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001e3f6:	4698      	mov	r8, r3
9001e3f8:	9603      	str	r6, [sp, #12]
9001e3fa:	f1b8 0f00 	cmp.w	r8, #0
9001e3fe:	dc56      	bgt.n	9001e4ae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001e400:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e404:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e408:	9b01      	ldr	r3, [sp, #4]
9001e40a:	2b00      	cmp	r3, #0
9001e40c:	dd6c      	ble.n	9001e4e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001e40e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e412:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e414:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e418:	eeb0 6a62 	vmov.f32	s12, s5
9001e41c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e420:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e424:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e428:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001e42c:	eeb0 6a43 	vmov.f32	s12, s6
9001e430:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e434:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001e438:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e43c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e440:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e444:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e448:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e44c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e450:	ee12 2a90 	vmov	r2, s5
9001e454:	eef0 2a47 	vmov.f32	s5, s14
9001e458:	fb92 fef3 	sdiv	lr, r2, r3
9001e45c:	ee13 2a10 	vmov	r2, s6
9001e460:	eeb0 3a67 	vmov.f32	s6, s15
9001e464:	fb92 fcf3 	sdiv	ip, r2, r3
9001e468:	9b01      	ldr	r3, [sp, #4]
9001e46a:	3b01      	subs	r3, #1
9001e46c:	9301      	str	r3, [sp, #4]
9001e46e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e470:	bf08      	it	eq
9001e472:	465b      	moveq	r3, fp
9001e474:	e797      	b.n	9001e3a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001e476:	454f      	cmp	r7, r9
9001e478:	dabb      	bge.n	9001e3f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e47a:	fb0c 2606 	mla	r6, ip, r6, r2
9001e47e:	1436      	asrs	r6, r6, #16
9001e480:	d4b7      	bmi.n	9001e3f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e482:	4546      	cmp	r6, r8
9001e484:	dab5      	bge.n	9001e3f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e486:	461e      	mov	r6, r3
9001e488:	46a0      	mov	r8, r4
9001e48a:	2e00      	cmp	r6, #0
9001e48c:	ddb8      	ble.n	9001e400 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001e48e:	1417      	asrs	r7, r2, #16
9001e490:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001e494:	ea4f 4920 	mov.w	r9, r0, asr #16
9001e498:	9902      	ldr	r1, [sp, #8]
9001e49a:	4470      	add	r0, lr
9001e49c:	4462      	add	r2, ip
9001e49e:	fb0a 9707 	mla	r7, sl, r7, r9
9001e4a2:	3e01      	subs	r6, #1
9001e4a4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001e4a8:	f828 7b02 	strh.w	r7, [r8], #2
9001e4ac:	e7ed      	b.n	9001e48a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001e4ae:	ea5f 4920 	movs.w	r9, r0, asr #16
9001e4b2:	d414      	bmi.n	9001e4de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e4b4:	68ae      	ldr	r6, [r5, #8]
9001e4b6:	454e      	cmp	r6, r9
9001e4b8:	dd11      	ble.n	9001e4de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e4ba:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001e4be:	d40e      	bmi.n	9001e4de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e4c0:	68ef      	ldr	r7, [r5, #12]
9001e4c2:	4557      	cmp	r7, sl
9001e4c4:	dd0b      	ble.n	9001e4de <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001e4c6:	b236      	sxth	r6, r6
9001e4c8:	f06f 0101 	mvn.w	r1, #1
9001e4cc:	9f02      	ldr	r7, [sp, #8]
9001e4ce:	fb0a 9606 	mla	r6, sl, r6, r9
9001e4d2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001e4d6:	fb01 f608 	mul.w	r6, r1, r8
9001e4da:	9903      	ldr	r1, [sp, #12]
9001e4dc:	538f      	strh	r7, [r1, r6]
9001e4de:	4470      	add	r0, lr
9001e4e0:	4462      	add	r2, ip
9001e4e2:	f108 38ff 	add.w	r8, r8, #4294967295
9001e4e6:	e788      	b.n	9001e3fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001e4e8:	b005      	add	sp, #20
9001e4ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e4ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e4ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e4f2:	b087      	sub	sp, #28
9001e4f4:	468b      	mov	fp, r1
9001e4f6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e4fa:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001e4fc:	9203      	str	r2, [sp, #12]
9001e4fe:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001e502:	6841      	ldr	r1, [r0, #4]
9001e504:	9204      	str	r2, [sp, #16]
9001e506:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001e50a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001e50e:	fb01 2505 	mla	r5, r1, r5, r2
9001e512:	6802      	ldr	r2, [r0, #0]
9001e514:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001e518:	f8d9 2000 	ldr.w	r2, [r9]
9001e51c:	9201      	str	r2, [sp, #4]
9001e51e:	f1bb 0f00 	cmp.w	fp, #0
9001e522:	dc03      	bgt.n	9001e52c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001e524:	9a03      	ldr	r2, [sp, #12]
9001e526:	2a00      	cmp	r2, #0
9001e528:	f340 8158 	ble.w	9001e7dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001e52c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001e52e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001e532:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001e536:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e538:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001e53c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e540:	2b00      	cmp	r3, #0
9001e542:	dd0e      	ble.n	9001e562 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001e544:	1402      	asrs	r2, r0, #16
9001e546:	d405      	bmi.n	9001e554 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e548:	42ba      	cmp	r2, r7
9001e54a:	da03      	bge.n	9001e554 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e54c:	140a      	asrs	r2, r1, #16
9001e54e:	d401      	bmi.n	9001e554 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001e550:	42b2      	cmp	r2, r6
9001e552:	db07      	blt.n	9001e564 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001e554:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e556:	3b01      	subs	r3, #1
9001e558:	3502      	adds	r5, #2
9001e55a:	4410      	add	r0, r2
9001e55c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e55e:	4411      	add	r1, r2
9001e560:	e7ee      	b.n	9001e540 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001e562:	d017      	beq.n	9001e594 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001e564:	1e5a      	subs	r2, r3, #1
9001e566:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001e568:	fb04 0402 	mla	r4, r4, r2, r0
9001e56c:	1424      	asrs	r4, r4, #16
9001e56e:	d409      	bmi.n	9001e584 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001e570:	42bc      	cmp	r4, r7
9001e572:	da07      	bge.n	9001e584 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001e574:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001e576:	fb04 1202 	mla	r2, r4, r2, r1
9001e57a:	1412      	asrs	r2, r2, #16
9001e57c:	d402      	bmi.n	9001e584 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001e57e:	42b2      	cmp	r2, r6
9001e580:	f2c0 80bf 	blt.w	9001e702 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e584:	2700      	movs	r7, #0
9001e586:	19da      	adds	r2, r3, r7
9001e588:	2a00      	cmp	r2, #0
9001e58a:	dc3e      	bgt.n	9001e60a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001e58c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e590:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001e594:	f1bb 0f00 	cmp.w	fp, #0
9001e598:	f340 8120 	ble.w	9001e7dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001e59c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e5a0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e5a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e5a6:	f1bb 0b01 	subs.w	fp, fp, #1
9001e5aa:	eeb0 6a62 	vmov.f32	s12, s5
9001e5ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e5b2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e5b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e5ba:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001e5be:	eeb0 6a43 	vmov.f32	s12, s6
9001e5c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e5c6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001e5ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e5ce:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e5d2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e5d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e5da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e5de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e5e2:	ee12 2a90 	vmov	r2, s5
9001e5e6:	eef0 2a47 	vmov.f32	s5, s14
9001e5ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001e5ee:	ee13 2a10 	vmov	r2, s6
9001e5f2:	9313      	str	r3, [sp, #76]	@ 0x4c
9001e5f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e5f6:	eeb0 3a67 	vmov.f32	s6, s15
9001e5fa:	fb92 f3f3 	sdiv	r3, r2, r3
9001e5fe:	9a03      	ldr	r2, [sp, #12]
9001e600:	9314      	str	r3, [sp, #80]	@ 0x50
9001e602:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001e604:	bf08      	it	eq
9001e606:	4613      	moveq	r3, r2
9001e608:	e789      	b.n	9001e51e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001e60a:	1406      	asrs	r6, r0, #16
9001e60c:	d42d      	bmi.n	9001e66a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e60e:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001e612:	42b4      	cmp	r4, r6
9001e614:	dd29      	ble.n	9001e66a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e616:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001e61a:	d426      	bmi.n	9001e66a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e61c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001e620:	4562      	cmp	r2, ip
9001e622:	dd22      	ble.n	9001e66a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e624:	b224      	sxth	r4, r4
9001e626:	9a01      	ldr	r2, [sp, #4]
9001e628:	fb0c 6404 	mla	r4, ip, r4, r6
9001e62c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001e630:	0e22      	lsrs	r2, r4, #24
9001e632:	d01a      	beq.n	9001e66a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e634:	9e04      	ldr	r6, [sp, #16]
9001e636:	4372      	muls	r2, r6
9001e638:	1c56      	adds	r6, r2, #1
9001e63a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001e63e:	0a26      	lsrs	r6, r4, #8
9001e640:	1212      	asrs	r2, r2, #8
9001e642:	9605      	str	r6, [sp, #20]
9001e644:	2aff      	cmp	r2, #255	@ 0xff
9001e646:	d116      	bne.n	9001e676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001e648:	f06f 0201 	mvn.w	r2, #1
9001e64c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001e650:	fb02 fc07 	mul.w	ip, r2, r7
9001e654:	0962      	lsrs	r2, r4, #5
9001e656:	f026 0607 	bic.w	r6, r6, #7
9001e65a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001e65e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e662:	4316      	orrs	r6, r2
9001e664:	4326      	orrs	r6, r4
9001e666:	f825 600c 	strh.w	r6, [r5, ip]
9001e66a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e66c:	3f01      	subs	r7, #1
9001e66e:	4410      	add	r0, r2
9001e670:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e672:	4411      	add	r1, r2
9001e674:	e787      	b.n	9001e586 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001e676:	f06f 0601 	mvn.w	r6, #1
9001e67a:	fa1f fa82 	uxth.w	sl, r2
9001e67e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001e682:	43d2      	mvns	r2, r2
9001e684:	437e      	muls	r6, r7
9001e686:	b2e4      	uxtb	r4, r4
9001e688:	fb1c fc0a 	smulbb	ip, ip, sl
9001e68c:	b2d2      	uxtb	r2, r2
9001e68e:	f835 8006 	ldrh.w	r8, [r5, r6]
9001e692:	fb14 f40a 	smulbb	r4, r4, sl
9001e696:	9602      	str	r6, [sp, #8]
9001e698:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001e69c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001e6a0:	fb16 f60a 	smulbb	r6, r6, sl
9001e6a4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001e6a8:	fb0e ce02 	mla	lr, lr, r2, ip
9001e6ac:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001e6b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001e6b4:	fa1f fe8e 	uxth.w	lr, lr
9001e6b8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001e6bc:	fa5f f888 	uxtb.w	r8, r8
9001e6c0:	fb0c 6c02 	mla	ip, ip, r2, r6
9001e6c4:	fb08 4402 	mla	r4, r8, r2, r4
9001e6c8:	f10e 0201 	add.w	r2, lr, #1
9001e6cc:	fa1f fc8c 	uxth.w	ip, ip
9001e6d0:	b2a4      	uxth	r4, r4
9001e6d2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001e6d6:	9a02      	ldr	r2, [sp, #8]
9001e6d8:	1c66      	adds	r6, r4, #1
9001e6da:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001e6de:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001e6e2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e6e6:	ea46 0e0e 	orr.w	lr, r6, lr
9001e6ea:	f10c 0601 	add.w	r6, ip, #1
9001e6ee:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001e6f2:	0976      	lsrs	r6, r6, #5
9001e6f4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e6f8:	ea4e 0e06 	orr.w	lr, lr, r6
9001e6fc:	f825 e002 	strh.w	lr, [r5, r2]
9001e700:	e7b3      	b.n	9001e66a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001e702:	f04f 0800 	mov.w	r8, #0
9001e706:	eba3 0208 	sub.w	r2, r3, r8
9001e70a:	2a00      	cmp	r2, #0
9001e70c:	f77f af3e 	ble.w	9001e58c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001e710:	1404      	asrs	r4, r0, #16
9001e712:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001e716:	140a      	asrs	r2, r1, #16
9001e718:	fb06 4202 	mla	r2, r6, r2, r4
9001e71c:	9c01      	ldr	r4, [sp, #4]
9001e71e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001e722:	0e22      	lsrs	r2, r4, #24
9001e724:	d015      	beq.n	9001e752 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001e726:	9e04      	ldr	r6, [sp, #16]
9001e728:	4372      	muls	r2, r6
9001e72a:	1c56      	adds	r6, r2, #1
9001e72c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001e730:	0a26      	lsrs	r6, r4, #8
9001e732:	1212      	asrs	r2, r2, #8
9001e734:	2aff      	cmp	r2, #255	@ 0xff
9001e736:	d113      	bne.n	9001e760 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001e738:	0962      	lsrs	r2, r4, #5
9001e73a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001e73e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001e742:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e746:	f026 0607 	bic.w	r6, r6, #7
9001e74a:	4316      	orrs	r6, r2
9001e74c:	4326      	orrs	r6, r4
9001e74e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001e752:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e754:	f108 0801 	add.w	r8, r8, #1
9001e758:	4410      	add	r0, r2
9001e75a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e75c:	4411      	add	r1, r2
9001e75e:	e7d2      	b.n	9001e706 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001e760:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001e764:	fa1f fa82 	uxth.w	sl, r2
9001e768:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001e76c:	43d2      	mvns	r2, r2
9001e76e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e772:	fb17 f70a 	smulbb	r7, r7, sl
9001e776:	b2d2      	uxtb	r2, r2
9001e778:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e77c:	b2e4      	uxtb	r4, r4
9001e77e:	b2f6      	uxtb	r6, r6
9001e780:	fb0c 7c02 	mla	ip, ip, r2, r7
9001e784:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001e788:	fb14 f40a 	smulbb	r4, r4, sl
9001e78c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e790:	fa1f fc8c 	uxth.w	ip, ip
9001e794:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e798:	fb16 f60a 	smulbb	r6, r6, sl
9001e79c:	fa5f fe8e 	uxtb.w	lr, lr
9001e7a0:	fb0e 4402 	mla	r4, lr, r2, r4
9001e7a4:	fb07 6702 	mla	r7, r7, r2, r6
9001e7a8:	f10c 0201 	add.w	r2, ip, #1
9001e7ac:	b2a4      	uxth	r4, r4
9001e7ae:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001e7b2:	1c66      	adds	r6, r4, #1
9001e7b4:	b2bf      	uxth	r7, r7
9001e7b6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e7ba:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001e7be:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001e7c2:	ea46 0c0c 	orr.w	ip, r6, ip
9001e7c6:	1c7e      	adds	r6, r7, #1
9001e7c8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001e7cc:	0976      	lsrs	r6, r6, #5
9001e7ce:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001e7d2:	ea4c 0c06 	orr.w	ip, ip, r6
9001e7d6:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001e7da:	e7ba      	b.n	9001e752 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001e7dc:	b007      	add	sp, #28
9001e7de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001e7e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e7e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e7e8:	b085      	sub	sp, #20
9001e7ea:	468b      	mov	fp, r1
9001e7ec:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001e7f0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e7f2:	9203      	str	r2, [sp, #12]
9001e7f4:	6841      	ldr	r1, [r0, #4]
9001e7f6:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001e7fa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001e7fe:	fb01 2404 	mla	r4, r1, r4, r2
9001e802:	6802      	ldr	r2, [r0, #0]
9001e804:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001e808:	f8d8 2000 	ldr.w	r2, [r8]
9001e80c:	9201      	str	r2, [sp, #4]
9001e80e:	f1bb 0f00 	cmp.w	fp, #0
9001e812:	dc03      	bgt.n	9001e81c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001e814:	9a03      	ldr	r2, [sp, #12]
9001e816:	2a00      	cmp	r2, #0
9001e818:	f340 814f 	ble.w	9001eaba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001e81c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e81e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001e822:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001e826:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e828:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001e82c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001e830:	2b00      	cmp	r3, #0
9001e832:	dd0e      	ble.n	9001e852 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001e834:	1408      	asrs	r0, r1, #16
9001e836:	d405      	bmi.n	9001e844 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e838:	42b8      	cmp	r0, r7
9001e83a:	da03      	bge.n	9001e844 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e83c:	1410      	asrs	r0, r2, #16
9001e83e:	d401      	bmi.n	9001e844 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001e840:	42b0      	cmp	r0, r6
9001e842:	db07      	blt.n	9001e854 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001e844:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e846:	3b01      	subs	r3, #1
9001e848:	3402      	adds	r4, #2
9001e84a:	4401      	add	r1, r0
9001e84c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e84e:	4402      	add	r2, r0
9001e850:	e7ee      	b.n	9001e830 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e852:	d017      	beq.n	9001e884 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001e854:	1e58      	subs	r0, r3, #1
9001e856:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001e858:	fb05 1500 	mla	r5, r5, r0, r1
9001e85c:	142d      	asrs	r5, r5, #16
9001e85e:	d409      	bmi.n	9001e874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001e860:	42bd      	cmp	r5, r7
9001e862:	da07      	bge.n	9001e874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001e864:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001e866:	fb05 2000 	mla	r0, r5, r0, r2
9001e86a:	1400      	asrs	r0, r0, #16
9001e86c:	d402      	bmi.n	9001e874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001e86e:	42b0      	cmp	r0, r6
9001e870:	f2c0 80ba 	blt.w	9001e9e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e874:	2600      	movs	r6, #0
9001e876:	1998      	adds	r0, r3, r6
9001e878:	2800      	cmp	r0, #0
9001e87a:	dc3e      	bgt.n	9001e8fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e87c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001e880:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001e884:	f1bb 0f00 	cmp.w	fp, #0
9001e888:	f340 8117 	ble.w	9001eaba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001e88c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e890:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e892:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e896:	f1bb 0b01 	subs.w	fp, fp, #1
9001e89a:	eeb0 6a62 	vmov.f32	s12, s5
9001e89e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001e8a2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e8a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e8aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001e8ae:	eeb0 6a43 	vmov.f32	s12, s6
9001e8b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001e8b6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001e8ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e8be:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e8c2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e8c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e8ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e8ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e8d2:	ee12 2a90 	vmov	r2, s5
9001e8d6:	eef0 2a47 	vmov.f32	s5, s14
9001e8da:	fb92 f3f3 	sdiv	r3, r2, r3
9001e8de:	ee13 2a10 	vmov	r2, s6
9001e8e2:	9311      	str	r3, [sp, #68]	@ 0x44
9001e8e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e8e6:	eeb0 3a67 	vmov.f32	s6, s15
9001e8ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001e8ee:	9a03      	ldr	r2, [sp, #12]
9001e8f0:	9312      	str	r3, [sp, #72]	@ 0x48
9001e8f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001e8f4:	bf08      	it	eq
9001e8f6:	4613      	moveq	r3, r2
9001e8f8:	e789      	b.n	9001e80e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001e8fa:	140f      	asrs	r7, r1, #16
9001e8fc:	d424      	bmi.n	9001e948 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e8fe:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001e902:	42bd      	cmp	r5, r7
9001e904:	dd20      	ble.n	9001e948 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e906:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001e90a:	d41d      	bmi.n	9001e948 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e90c:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001e910:	4560      	cmp	r0, ip
9001e912:	dd19      	ble.n	9001e948 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e914:	b22d      	sxth	r5, r5
9001e916:	9801      	ldr	r0, [sp, #4]
9001e918:	fb0c 7505 	mla	r5, ip, r5, r7
9001e91c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001e920:	0e07      	lsrs	r7, r0, #24
9001e922:	2fff      	cmp	r7, #255	@ 0xff
9001e924:	d116      	bne.n	9001e954 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001e926:	f06f 0501 	mvn.w	r5, #1
9001e92a:	fb05 f706 	mul.w	r7, r5, r6
9001e92e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001e932:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001e936:	0945      	lsrs	r5, r0, #5
9001e938:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001e93c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e940:	ea4c 0505 	orr.w	r5, ip, r5
9001e944:	4305      	orrs	r5, r0
9001e946:	53e5      	strh	r5, [r4, r7]
9001e948:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e94a:	3e01      	subs	r6, #1
9001e94c:	4401      	add	r1, r0
9001e94e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e950:	4402      	add	r2, r0
9001e952:	e790      	b.n	9001e876 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001e954:	b2fd      	uxtb	r5, r7
9001e956:	2f00      	cmp	r7, #0
9001e958:	d0f6      	beq.n	9001e948 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e95a:	f06f 0701 	mvn.w	r7, #1
9001e95e:	fa1f f985 	uxth.w	r9, r5
9001e962:	43ed      	mvns	r5, r5
9001e964:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001e968:	4377      	muls	r7, r6
9001e96a:	fb1a fa09 	smulbb	sl, sl, r9
9001e96e:	b2ed      	uxtb	r5, r5
9001e970:	f834 e007 	ldrh.w	lr, [r4, r7]
9001e974:	9702      	str	r7, [sp, #8]
9001e976:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001e97a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001e97e:	fb17 f709 	smulbb	r7, r7, r9
9001e982:	b2c0      	uxtb	r0, r0
9001e984:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001e988:	fb10 f009 	smulbb	r0, r0, r9
9001e98c:	fb0c 7c05 	mla	ip, ip, r5, r7
9001e990:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001e994:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001e998:	fa1f fc8c 	uxth.w	ip, ip
9001e99c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001e9a0:	fa5f fe8e 	uxtb.w	lr, lr
9001e9a4:	fb07 a705 	mla	r7, r7, r5, sl
9001e9a8:	fb0e 0005 	mla	r0, lr, r5, r0
9001e9ac:	f10c 0501 	add.w	r5, ip, #1
9001e9b0:	b2bf      	uxth	r7, r7
9001e9b2:	b280      	uxth	r0, r0
9001e9b4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001e9b8:	f100 0a01 	add.w	sl, r0, #1
9001e9bc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001e9c0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001e9c4:	9802      	ldr	r0, [sp, #8]
9001e9c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001e9ca:	ea4a 0c0c 	orr.w	ip, sl, ip
9001e9ce:	f107 0a01 	add.w	sl, r7, #1
9001e9d2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001e9d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001e9da:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001e9de:	ea4c 0c0a 	orr.w	ip, ip, sl
9001e9e2:	f824 c000 	strh.w	ip, [r4, r0]
9001e9e6:	e7af      	b.n	9001e948 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001e9e8:	f04f 0e00 	mov.w	lr, #0
9001e9ec:	eba3 000e 	sub.w	r0, r3, lr
9001e9f0:	2800      	cmp	r0, #0
9001e9f2:	f77f af43 	ble.w	9001e87c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001e9f6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001e9fa:	140d      	asrs	r5, r1, #16
9001e9fc:	1410      	asrs	r0, r2, #16
9001e9fe:	fb06 5000 	mla	r0, r6, r0, r5
9001ea02:	9d01      	ldr	r5, [sp, #4]
9001ea04:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001ea08:	0e2e      	lsrs	r6, r5, #24
9001ea0a:	2eff      	cmp	r6, #255	@ 0xff
9001ea0c:	d112      	bne.n	9001ea34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001ea0e:	482c      	ldr	r0, [pc, #176]	@ (9001eac0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001ea10:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001ea14:	0968      	lsrs	r0, r5, #5
9001ea16:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ea1a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001ea1e:	4330      	orrs	r0, r6
9001ea20:	4328      	orrs	r0, r5
9001ea22:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001ea26:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ea28:	f10e 0e01 	add.w	lr, lr, #1
9001ea2c:	4401      	add	r1, r0
9001ea2e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ea30:	4402      	add	r2, r0
9001ea32:	e7db      	b.n	9001e9ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001ea34:	b2f0      	uxtb	r0, r6
9001ea36:	2e00      	cmp	r6, #0
9001ea38:	d0f5      	beq.n	9001ea26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001ea3a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001ea3e:	fa1f f980 	uxth.w	r9, r0
9001ea42:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ea46:	43c0      	mvns	r0, r0
9001ea48:	ea4f 272c 	mov.w	r7, ip, asr #8
9001ea4c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ea50:	fb16 f609 	smulbb	r6, r6, r9
9001ea54:	b2c0      	uxtb	r0, r0
9001ea56:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ea5a:	b2ed      	uxtb	r5, r5
9001ea5c:	fb1a fa09 	smulbb	sl, sl, r9
9001ea60:	fb07 6700 	mla	r7, r7, r0, r6
9001ea64:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001ea68:	fb15 f509 	smulbb	r5, r5, r9
9001ea6c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001ea70:	b2bf      	uxth	r7, r7
9001ea72:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ea76:	fa5f fc8c 	uxtb.w	ip, ip
9001ea7a:	fb06 a600 	mla	r6, r6, r0, sl
9001ea7e:	fb0c 5500 	mla	r5, ip, r0, r5
9001ea82:	1c78      	adds	r0, r7, #1
9001ea84:	b2b6      	uxth	r6, r6
9001ea86:	b2ad      	uxth	r5, r5
9001ea88:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001ea8c:	f105 0a01 	add.w	sl, r5, #1
9001ea90:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ea94:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ea98:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ea9c:	ea4a 0707 	orr.w	r7, sl, r7
9001eaa0:	f106 0a01 	add.w	sl, r6, #1
9001eaa4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001eaa8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001eaac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001eab0:	ea47 070a 	orr.w	r7, r7, sl
9001eab4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001eab8:	e7b5      	b.n	9001ea26 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001eaba:	b005      	add	sp, #20
9001eabc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eac0:	fffff800 	.word	0xfffff800

9001eac4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001eac4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eac8:	b087      	sub	sp, #28
9001eaca:	468b      	mov	fp, r1
9001eacc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ead0:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001ead2:	9203      	str	r2, [sp, #12]
9001ead4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ead8:	6841      	ldr	r1, [r0, #4]
9001eada:	9204      	str	r2, [sp, #16]
9001eadc:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001eae0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001eae4:	fb01 2404 	mla	r4, r1, r4, r2
9001eae8:	6802      	ldr	r2, [r0, #0]
9001eaea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001eaee:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001eaf2:	3201      	adds	r2, #1
9001eaf4:	f022 0201 	bic.w	r2, r2, #1
9001eaf8:	9200      	str	r2, [sp, #0]
9001eafa:	f8d9 2000 	ldr.w	r2, [r9]
9001eafe:	9201      	str	r2, [sp, #4]
9001eb00:	f1bb 0f00 	cmp.w	fp, #0
9001eb04:	dc03      	bgt.n	9001eb0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001eb06:	9a03      	ldr	r2, [sp, #12]
9001eb08:	2a00      	cmp	r2, #0
9001eb0a:	f340 816a 	ble.w	9001ede2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001eb0e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001eb10:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001eb14:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001eb18:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001eb1a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001eb1e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001eb22:	2b00      	cmp	r3, #0
9001eb24:	dd0e      	ble.n	9001eb44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001eb26:	1402      	asrs	r2, r0, #16
9001eb28:	d405      	bmi.n	9001eb36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001eb2a:	42ba      	cmp	r2, r7
9001eb2c:	da03      	bge.n	9001eb36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001eb2e:	140a      	asrs	r2, r1, #16
9001eb30:	d401      	bmi.n	9001eb36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001eb32:	42b2      	cmp	r2, r6
9001eb34:	db07      	blt.n	9001eb46 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001eb36:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001eb38:	3b01      	subs	r3, #1
9001eb3a:	3402      	adds	r4, #2
9001eb3c:	4410      	add	r0, r2
9001eb3e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001eb40:	4411      	add	r1, r2
9001eb42:	e7ee      	b.n	9001eb22 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001eb44:	d017      	beq.n	9001eb76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001eb46:	1e5a      	subs	r2, r3, #1
9001eb48:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001eb4a:	fb05 0502 	mla	r5, r5, r2, r0
9001eb4e:	142d      	asrs	r5, r5, #16
9001eb50:	d409      	bmi.n	9001eb66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001eb52:	42bd      	cmp	r5, r7
9001eb54:	da07      	bge.n	9001eb66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001eb56:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001eb58:	fb05 1202 	mla	r2, r5, r2, r1
9001eb5c:	1412      	asrs	r2, r2, #16
9001eb5e:	d402      	bmi.n	9001eb66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001eb60:	42b2      	cmp	r2, r6
9001eb62:	f2c0 80c8 	blt.w	9001ecf6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001eb66:	2700      	movs	r7, #0
9001eb68:	19da      	adds	r2, r3, r7
9001eb6a:	2a00      	cmp	r2, #0
9001eb6c:	dc3e      	bgt.n	9001ebec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001eb6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001eb72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001eb76:	f1bb 0f00 	cmp.w	fp, #0
9001eb7a:	f340 8132 	ble.w	9001ede2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001eb7e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001eb82:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001eb84:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001eb88:	f1bb 0b01 	subs.w	fp, fp, #1
9001eb8c:	eeb0 6a62 	vmov.f32	s12, s5
9001eb90:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001eb94:	ee31 1a05 	vadd.f32	s2, s2, s10
9001eb98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eb9c:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001eba0:	eeb0 6a43 	vmov.f32	s12, s6
9001eba4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eba8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001ebac:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ebb0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ebb4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ebb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ebbc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ebc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ebc4:	ee12 2a90 	vmov	r2, s5
9001ebc8:	eef0 2a47 	vmov.f32	s5, s14
9001ebcc:	fb92 f3f3 	sdiv	r3, r2, r3
9001ebd0:	ee13 2a10 	vmov	r2, s6
9001ebd4:	9313      	str	r3, [sp, #76]	@ 0x4c
9001ebd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ebd8:	eeb0 3a67 	vmov.f32	s6, s15
9001ebdc:	fb92 f3f3 	sdiv	r3, r2, r3
9001ebe0:	9a03      	ldr	r2, [sp, #12]
9001ebe2:	9314      	str	r3, [sp, #80]	@ 0x50
9001ebe4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ebe6:	bf08      	it	eq
9001ebe8:	4613      	moveq	r3, r2
9001ebea:	e789      	b.n	9001eb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001ebec:	1405      	asrs	r5, r0, #16
9001ebee:	d436      	bmi.n	9001ec5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ebf0:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001ebf4:	42aa      	cmp	r2, r5
9001ebf6:	dd32      	ble.n	9001ec5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ebf8:	140e      	asrs	r6, r1, #16
9001ebfa:	d430      	bmi.n	9001ec5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ebfc:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001ec00:	42b2      	cmp	r2, r6
9001ec02:	dd2c      	ble.n	9001ec5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ec04:	9a00      	ldr	r2, [sp, #0]
9001ec06:	fb06 5502 	mla	r5, r6, r2, r5
9001ec0a:	9e01      	ldr	r6, [sp, #4]
9001ec0c:	086a      	lsrs	r2, r5, #1
9001ec0e:	5cb2      	ldrb	r2, [r6, r2]
9001ec10:	07ee      	lsls	r6, r5, #31
9001ec12:	bf54      	ite	pl
9001ec14:	f002 020f 	andpl.w	r2, r2, #15
9001ec18:	1112      	asrmi	r2, r2, #4
9001ec1a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ec1e:	b2d2      	uxtb	r2, r2
9001ec20:	b1ea      	cbz	r2, 9001ec5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ec22:	9d04      	ldr	r5, [sp, #16]
9001ec24:	436a      	muls	r2, r5
9001ec26:	1c55      	adds	r5, r2, #1
9001ec28:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001ec2c:	4d6e      	ldr	r5, [pc, #440]	@ (9001ede8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001ec2e:	1212      	asrs	r2, r2, #8
9001ec30:	682d      	ldr	r5, [r5, #0]
9001ec32:	2aff      	cmp	r2, #255	@ 0xff
9001ec34:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001ec38:	9605      	str	r6, [sp, #20]
9001ec3a:	d116      	bne.n	9001ec6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001ec3c:	f06f 0201 	mvn.w	r2, #1
9001ec40:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001ec44:	fb02 fc07 	mul.w	ip, r2, r7
9001ec48:	096a      	lsrs	r2, r5, #5
9001ec4a:	f026 0607 	bic.w	r6, r6, #7
9001ec4e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001ec52:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ec56:	4316      	orrs	r6, r2
9001ec58:	432e      	orrs	r6, r5
9001ec5a:	f824 600c 	strh.w	r6, [r4, ip]
9001ec5e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ec60:	3f01      	subs	r7, #1
9001ec62:	4410      	add	r0, r2
9001ec64:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ec66:	4411      	add	r1, r2
9001ec68:	e77e      	b.n	9001eb68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001ec6a:	f06f 0601 	mvn.w	r6, #1
9001ec6e:	fa1f fa82 	uxth.w	sl, r2
9001ec72:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001ec76:	43d2      	mvns	r2, r2
9001ec78:	437e      	muls	r6, r7
9001ec7a:	b2ed      	uxtb	r5, r5
9001ec7c:	fb1c fc0a 	smulbb	ip, ip, sl
9001ec80:	b2d2      	uxtb	r2, r2
9001ec82:	f834 8006 	ldrh.w	r8, [r4, r6]
9001ec86:	fb15 f50a 	smulbb	r5, r5, sl
9001ec8a:	9602      	str	r6, [sp, #8]
9001ec8c:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001ec90:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001ec94:	fb16 f60a 	smulbb	r6, r6, sl
9001ec98:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001ec9c:	fb0e ce02 	mla	lr, lr, r2, ip
9001eca0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001eca4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001eca8:	fa1f fe8e 	uxth.w	lr, lr
9001ecac:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001ecb0:	fa5f f888 	uxtb.w	r8, r8
9001ecb4:	fb0c 6c02 	mla	ip, ip, r2, r6
9001ecb8:	fb08 5502 	mla	r5, r8, r2, r5
9001ecbc:	f10e 0201 	add.w	r2, lr, #1
9001ecc0:	fa1f fc8c 	uxth.w	ip, ip
9001ecc4:	b2ad      	uxth	r5, r5
9001ecc6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001ecca:	9a02      	ldr	r2, [sp, #8]
9001eccc:	1c6e      	adds	r6, r5, #1
9001ecce:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001ecd2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001ecd6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001ecda:	ea46 0e0e 	orr.w	lr, r6, lr
9001ecde:	f10c 0601 	add.w	r6, ip, #1
9001ece2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001ece6:	0976      	lsrs	r6, r6, #5
9001ece8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ecec:	ea4e 0e06 	orr.w	lr, lr, r6
9001ecf0:	f824 e002 	strh.w	lr, [r4, r2]
9001ecf4:	e7b3      	b.n	9001ec5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001ecf6:	f04f 0800 	mov.w	r8, #0
9001ecfa:	eba3 0208 	sub.w	r2, r3, r8
9001ecfe:	2a00      	cmp	r2, #0
9001ed00:	f77f af35 	ble.w	9001eb6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001ed04:	1402      	asrs	r2, r0, #16
9001ed06:	9e00      	ldr	r6, [sp, #0]
9001ed08:	140d      	asrs	r5, r1, #16
9001ed0a:	fb06 2505 	mla	r5, r6, r5, r2
9001ed0e:	9e01      	ldr	r6, [sp, #4]
9001ed10:	086a      	lsrs	r2, r5, #1
9001ed12:	07ed      	lsls	r5, r5, #31
9001ed14:	5cb2      	ldrb	r2, [r6, r2]
9001ed16:	bf54      	ite	pl
9001ed18:	f002 020f 	andpl.w	r2, r2, #15
9001ed1c:	1112      	asrmi	r2, r2, #4
9001ed1e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ed22:	b2d2      	uxtb	r2, r2
9001ed24:	b1c2      	cbz	r2, 9001ed58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001ed26:	9d04      	ldr	r5, [sp, #16]
9001ed28:	436a      	muls	r2, r5
9001ed2a:	1c55      	adds	r5, r2, #1
9001ed2c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001ed30:	4d2d      	ldr	r5, [pc, #180]	@ (9001ede8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001ed32:	1212      	asrs	r2, r2, #8
9001ed34:	682e      	ldr	r6, [r5, #0]
9001ed36:	2aff      	cmp	r2, #255	@ 0xff
9001ed38:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001ed3c:	d113      	bne.n	9001ed66 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001ed3e:	0972      	lsrs	r2, r6, #5
9001ed40:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001ed44:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001ed48:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001ed4c:	f025 0507 	bic.w	r5, r5, #7
9001ed50:	4315      	orrs	r5, r2
9001ed52:	4335      	orrs	r5, r6
9001ed54:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001ed58:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ed5a:	f108 0801 	add.w	r8, r8, #1
9001ed5e:	4410      	add	r0, r2
9001ed60:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ed62:	4411      	add	r1, r2
9001ed64:	e7c9      	b.n	9001ecfa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001ed66:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001ed6a:	fa1f fa82 	uxth.w	sl, r2
9001ed6e:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001ed72:	43d2      	mvns	r2, r2
9001ed74:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001ed78:	fb17 f70a 	smulbb	r7, r7, sl
9001ed7c:	b2d2      	uxtb	r2, r2
9001ed7e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001ed82:	b2f6      	uxtb	r6, r6
9001ed84:	b2ed      	uxtb	r5, r5
9001ed86:	fb0c 7c02 	mla	ip, ip, r2, r7
9001ed8a:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001ed8e:	fb16 f60a 	smulbb	r6, r6, sl
9001ed92:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ed96:	fa1f fc8c 	uxth.w	ip, ip
9001ed9a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001ed9e:	fb15 f50a 	smulbb	r5, r5, sl
9001eda2:	fa5f fe8e 	uxtb.w	lr, lr
9001eda6:	fb0e 6602 	mla	r6, lr, r2, r6
9001edaa:	fb07 5702 	mla	r7, r7, r2, r5
9001edae:	f10c 0201 	add.w	r2, ip, #1
9001edb2:	b2b6      	uxth	r6, r6
9001edb4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001edb8:	1c75      	adds	r5, r6, #1
9001edba:	b2bf      	uxth	r7, r7
9001edbc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001edc0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001edc4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001edc8:	ea45 0c0c 	orr.w	ip, r5, ip
9001edcc:	1c7d      	adds	r5, r7, #1
9001edce:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001edd2:	096d      	lsrs	r5, r5, #5
9001edd4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001edd8:	ea4c 0c05 	orr.w	ip, ip, r5
9001eddc:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001ede0:	e7ba      	b.n	9001ed58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001ede2:	b007      	add	sp, #28
9001ede4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ede8:	240245a8 	.word	0x240245a8

9001edec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001edec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001edf0:	b087      	sub	sp, #28
9001edf2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001edf6:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001f100 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001edfa:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001edfc:	9101      	str	r1, [sp, #4]
9001edfe:	9205      	str	r2, [sp, #20]
9001ee00:	6841      	ldr	r1, [r0, #4]
9001ee02:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001ee06:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001ee0a:	fb01 2404 	mla	r4, r1, r4, r2
9001ee0e:	6802      	ldr	r2, [r0, #0]
9001ee10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ee14:	f8db 2008 	ldr.w	r2, [fp, #8]
9001ee18:	3201      	adds	r2, #1
9001ee1a:	f022 0201 	bic.w	r2, r2, #1
9001ee1e:	9202      	str	r2, [sp, #8]
9001ee20:	f8db 2000 	ldr.w	r2, [fp]
9001ee24:	9203      	str	r2, [sp, #12]
9001ee26:	9a01      	ldr	r2, [sp, #4]
9001ee28:	2a00      	cmp	r2, #0
9001ee2a:	dc03      	bgt.n	9001ee34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001ee2c:	9a05      	ldr	r2, [sp, #20]
9001ee2e:	2a00      	cmp	r2, #0
9001ee30:	f340 8162 	ble.w	9001f0f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001ee34:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ee36:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001ee3a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ee3e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ee40:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001ee44:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ee48:	2b00      	cmp	r3, #0
9001ee4a:	dd0e      	ble.n	9001ee6a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ee4c:	1402      	asrs	r2, r0, #16
9001ee4e:	d405      	bmi.n	9001ee5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ee50:	42ba      	cmp	r2, r7
9001ee52:	da03      	bge.n	9001ee5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ee54:	140a      	asrs	r2, r1, #16
9001ee56:	d401      	bmi.n	9001ee5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001ee58:	42b2      	cmp	r2, r6
9001ee5a:	db07      	blt.n	9001ee6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001ee5c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ee5e:	3b01      	subs	r3, #1
9001ee60:	3402      	adds	r4, #2
9001ee62:	4410      	add	r0, r2
9001ee64:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ee66:	4411      	add	r1, r2
9001ee68:	e7ee      	b.n	9001ee48 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001ee6a:	d017      	beq.n	9001ee9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001ee6c:	1e5a      	subs	r2, r3, #1
9001ee6e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001ee70:	fb05 0502 	mla	r5, r5, r2, r0
9001ee74:	142d      	asrs	r5, r5, #16
9001ee76:	d409      	bmi.n	9001ee8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ee78:	42bd      	cmp	r5, r7
9001ee7a:	da07      	bge.n	9001ee8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ee7c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001ee7e:	fb05 1202 	mla	r2, r5, r2, r1
9001ee82:	1412      	asrs	r2, r2, #16
9001ee84:	d402      	bmi.n	9001ee8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001ee86:	42b2      	cmp	r2, r6
9001ee88:	f2c0 80c3 	blt.w	9001f012 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001ee8c:	2500      	movs	r5, #0
9001ee8e:	195a      	adds	r2, r3, r5
9001ee90:	2a00      	cmp	r2, #0
9001ee92:	dc3f      	bgt.n	9001ef14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001ee94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ee98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ee9c:	9b01      	ldr	r3, [sp, #4]
9001ee9e:	2b00      	cmp	r3, #0
9001eea0:	f340 812a 	ble.w	9001f0f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001eea4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001eea8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001eeaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001eeae:	eeb0 6a62 	vmov.f32	s12, s5
9001eeb2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001eeb6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001eeba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eebe:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001eec2:	eeb0 6a43 	vmov.f32	s12, s6
9001eec6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001eeca:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001eece:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001eed2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001eed6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001eeda:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001eede:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001eee2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001eee6:	ee12 2a90 	vmov	r2, s5
9001eeea:	eef0 2a47 	vmov.f32	s5, s14
9001eeee:	fb92 f3f3 	sdiv	r3, r2, r3
9001eef2:	ee13 2a10 	vmov	r2, s6
9001eef6:	9313      	str	r3, [sp, #76]	@ 0x4c
9001eef8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001eefa:	eeb0 3a67 	vmov.f32	s6, s15
9001eefe:	fb92 f3f3 	sdiv	r3, r2, r3
9001ef02:	9314      	str	r3, [sp, #80]	@ 0x50
9001ef04:	9b01      	ldr	r3, [sp, #4]
9001ef06:	9a05      	ldr	r2, [sp, #20]
9001ef08:	3b01      	subs	r3, #1
9001ef0a:	9301      	str	r3, [sp, #4]
9001ef0c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ef0e:	bf08      	it	eq
9001ef10:	4613      	moveq	r3, r2
9001ef12:	e788      	b.n	9001ee26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001ef14:	1406      	asrs	r6, r0, #16
9001ef16:	d42c      	bmi.n	9001ef72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef18:	f8db 2008 	ldr.w	r2, [fp, #8]
9001ef1c:	42b2      	cmp	r2, r6
9001ef1e:	dd28      	ble.n	9001ef72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef20:	140f      	asrs	r7, r1, #16
9001ef22:	d426      	bmi.n	9001ef72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef24:	f8db 200c 	ldr.w	r2, [fp, #12]
9001ef28:	42ba      	cmp	r2, r7
9001ef2a:	dd22      	ble.n	9001ef72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef2c:	9a02      	ldr	r2, [sp, #8]
9001ef2e:	fb07 6602 	mla	r6, r7, r2, r6
9001ef32:	9f03      	ldr	r7, [sp, #12]
9001ef34:	0872      	lsrs	r2, r6, #1
9001ef36:	07f6      	lsls	r6, r6, #31
9001ef38:	5cba      	ldrb	r2, [r7, r2]
9001ef3a:	bf54      	ite	pl
9001ef3c:	f002 020f 	andpl.w	r2, r2, #15
9001ef40:	1112      	asrmi	r2, r2, #4
9001ef42:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001ef46:	b2d2      	uxtb	r2, r2
9001ef48:	2aff      	cmp	r2, #255	@ 0xff
9001ef4a:	d118      	bne.n	9001ef7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001ef4c:	f06f 0601 	mvn.w	r6, #1
9001ef50:	f8d8 2000 	ldr.w	r2, [r8]
9001ef54:	fb06 f705 	mul.w	r7, r6, r5
9001ef58:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001ef5c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001ef60:	0956      	lsrs	r6, r2, #5
9001ef62:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001ef66:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ef6a:	ea4c 0606 	orr.w	r6, ip, r6
9001ef6e:	4316      	orrs	r6, r2
9001ef70:	53e6      	strh	r6, [r4, r7]
9001ef72:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ef74:	3d01      	subs	r5, #1
9001ef76:	4410      	add	r0, r2
9001ef78:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ef7a:	4411      	add	r1, r2
9001ef7c:	e787      	b.n	9001ee8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001ef7e:	2a00      	cmp	r2, #0
9001ef80:	d0f7      	beq.n	9001ef72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ef82:	f06f 0601 	mvn.w	r6, #1
9001ef86:	f8d8 c000 	ldr.w	ip, [r8]
9001ef8a:	fa1f f982 	uxth.w	r9, r2
9001ef8e:	43d2      	mvns	r2, r2
9001ef90:	436e      	muls	r6, r5
9001ef92:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001ef96:	b2d2      	uxtb	r2, r2
9001ef98:	f834 e006 	ldrh.w	lr, [r4, r6]
9001ef9c:	fb1a fa09 	smulbb	sl, sl, r9
9001efa0:	9604      	str	r6, [sp, #16]
9001efa2:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001efa6:	ea4f 272e 	mov.w	r7, lr, asr #8
9001efaa:	fb16 f609 	smulbb	r6, r6, r9
9001efae:	fa5f fc8c 	uxtb.w	ip, ip
9001efb2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001efb6:	fb1c fc09 	smulbb	ip, ip, r9
9001efba:	fb07 6702 	mla	r7, r7, r2, r6
9001efbe:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001efc2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001efc6:	b2bf      	uxth	r7, r7
9001efc8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001efcc:	fa5f fe8e 	uxtb.w	lr, lr
9001efd0:	fb06 a602 	mla	r6, r6, r2, sl
9001efd4:	fb0e cc02 	mla	ip, lr, r2, ip
9001efd8:	1c7a      	adds	r2, r7, #1
9001efda:	b2b6      	uxth	r6, r6
9001efdc:	fa1f fc8c 	uxth.w	ip, ip
9001efe0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001efe4:	9a04      	ldr	r2, [sp, #16]
9001efe6:	f10c 0a01 	add.w	sl, ip, #1
9001efea:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001efee:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001eff2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001eff6:	ea4a 0707 	orr.w	r7, sl, r7
9001effa:	f106 0a01 	add.w	sl, r6, #1
9001effe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001f002:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f006:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f00a:	ea47 070a 	orr.w	r7, r7, sl
9001f00e:	52a7      	strh	r7, [r4, r2]
9001f010:	e7af      	b.n	9001ef72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001f012:	f04f 0e00 	mov.w	lr, #0
9001f016:	eba3 020e 	sub.w	r2, r3, lr
9001f01a:	2a00      	cmp	r2, #0
9001f01c:	f77f af3a 	ble.w	9001ee94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001f020:	1402      	asrs	r2, r0, #16
9001f022:	9e02      	ldr	r6, [sp, #8]
9001f024:	140d      	asrs	r5, r1, #16
9001f026:	fb06 2505 	mla	r5, r6, r5, r2
9001f02a:	9e03      	ldr	r6, [sp, #12]
9001f02c:	086a      	lsrs	r2, r5, #1
9001f02e:	07ed      	lsls	r5, r5, #31
9001f030:	5cb2      	ldrb	r2, [r6, r2]
9001f032:	bf54      	ite	pl
9001f034:	f002 020f 	andpl.w	r2, r2, #15
9001f038:	1112      	asrmi	r2, r2, #4
9001f03a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001f03e:	b2d2      	uxtb	r2, r2
9001f040:	2aff      	cmp	r2, #255	@ 0xff
9001f042:	d115      	bne.n	9001f070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001f044:	f8d8 5000 	ldr.w	r5, [r8]
9001f048:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001f04c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001f050:	096a      	lsrs	r2, r5, #5
9001f052:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001f056:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001f05a:	4332      	orrs	r2, r6
9001f05c:	432a      	orrs	r2, r5
9001f05e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001f062:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001f064:	f10e 0e01 	add.w	lr, lr, #1
9001f068:	4410      	add	r0, r2
9001f06a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001f06c:	4411      	add	r1, r2
9001f06e:	e7d2      	b.n	9001f016 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001f070:	2a00      	cmp	r2, #0
9001f072:	d0f6      	beq.n	9001f062 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001f074:	f8d8 7000 	ldr.w	r7, [r8]
9001f078:	fa1f f982 	uxth.w	r9, r2
9001f07c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001f080:	43d2      	mvns	r2, r2
9001f082:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001f086:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001f08a:	ea4f 262c 	mov.w	r6, ip, asr #8
9001f08e:	fb15 f509 	smulbb	r5, r5, r9
9001f092:	b2d2      	uxtb	r2, r2
9001f094:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f098:	b2ff      	uxtb	r7, r7
9001f09a:	fb1a fa09 	smulbb	sl, sl, r9
9001f09e:	fb06 5602 	mla	r6, r6, r2, r5
9001f0a2:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001f0a6:	fb17 f709 	smulbb	r7, r7, r9
9001f0aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f0ae:	b2b6      	uxth	r6, r6
9001f0b0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f0b4:	fa5f fc8c 	uxtb.w	ip, ip
9001f0b8:	fb05 a502 	mla	r5, r5, r2, sl
9001f0bc:	fb0c 7702 	mla	r7, ip, r2, r7
9001f0c0:	1c72      	adds	r2, r6, #1
9001f0c2:	b2ad      	uxth	r5, r5
9001f0c4:	b2bf      	uxth	r7, r7
9001f0c6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001f0ca:	f107 0a01 	add.w	sl, r7, #1
9001f0ce:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001f0d2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001f0d6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001f0da:	ea4a 0606 	orr.w	r6, sl, r6
9001f0de:	f105 0a01 	add.w	sl, r5, #1
9001f0e2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001f0e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f0ea:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001f0ee:	ea46 060a 	orr.w	r6, r6, sl
9001f0f2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001f0f6:	e7b4      	b.n	9001f062 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001f0f8:	b007      	add	sp, #28
9001f0fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f0fe:	bf00      	nop
9001f100:	240245a8 	.word	0x240245a8

9001f104 <_ZN8touchgfx8LCD16bppD1Ev>:
9001f104:	4770      	bx	lr

9001f106 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001f106:	4770      	bx	lr

9001f108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001f108:	4770      	bx	lr

9001f10a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001f10a:	4770      	bx	lr

9001f10c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001f10c:	4770      	bx	lr

9001f10e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001f10e:	4770      	bx	lr

9001f110 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001f110:	4770      	bx	lr

9001f112 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001f112:	4770      	bx	lr

9001f114 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001f114:	4770      	bx	lr

9001f116 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001f116:	4770      	bx	lr

9001f118 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001f118:	4770      	bx	lr

9001f11a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001f11a:	4770      	bx	lr

9001f11c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001f11c:	4770      	bx	lr

9001f11e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001f11e:	4770      	bx	lr

9001f120 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001f120:	4770      	bx	lr

9001f122 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001f122:	4770      	bx	lr

9001f124 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001f124:	4770      	bx	lr

9001f126 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001f126:	4770      	bx	lr

9001f128 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001f128:	4770      	bx	lr

9001f12a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001f12a:	4770      	bx	lr

9001f12c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001f12c:	4770      	bx	lr

9001f12e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001f12e:	4770      	bx	lr

9001f130 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001f130:	4770      	bx	lr

9001f132 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001f132:	4770      	bx	lr

9001f134 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001f134:	4770      	bx	lr

9001f136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001f136:	4770      	bx	lr

9001f138 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001f138:	4770      	bx	lr

9001f13a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001f13a:	4770      	bx	lr

9001f13c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001f13c:	4770      	bx	lr

9001f13e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001f13e:	4770      	bx	lr

9001f140 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001f140:	4770      	bx	lr

9001f142 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001f142:	4770      	bx	lr

9001f144 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001f144:	4770      	bx	lr

9001f146 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001f146:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f14a:	b088      	sub	sp, #32
9001f14c:	4606      	mov	r6, r0
9001f14e:	4688      	mov	r8, r1
9001f150:	4691      	mov	r9, r2
9001f152:	ac08      	add	r4, sp, #32
9001f154:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001f158:	4620      	mov	r0, r4
9001f15a:	f7fd fc33 	bl	9001c9c4 <_ZNK8touchgfx6Bitmap7getDataEv>
9001f15e:	6833      	ldr	r3, [r6, #0]
9001f160:	4605      	mov	r5, r0
9001f162:	4620      	mov	r0, r4
9001f164:	699f      	ldr	r7, [r3, #24]
9001f166:	f7fd fb3b 	bl	9001c7e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001f16a:	4682      	mov	sl, r0
9001f16c:	4620      	mov	r0, r4
9001f16e:	f7fd fb6b 	bl	9001c848 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001f172:	9500      	str	r5, [sp, #0]
9001f174:	464b      	mov	r3, r9
9001f176:	4642      	mov	r2, r8
9001f178:	4631      	mov	r1, r6
9001f17a:	e9cd a001 	strd	sl, r0, [sp, #4]
9001f17e:	a806      	add	r0, sp, #24
9001f180:	47b8      	blx	r7
9001f182:	4628      	mov	r0, r5
9001f184:	b008      	add	sp, #32
9001f186:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001f18c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001f18c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001f190:	2300      	movs	r3, #0
9001f192:	9300      	str	r3, [sp, #0]
9001f194:	4b3d      	ldr	r3, [pc, #244]	@ (9001f28c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001f196:	781b      	ldrb	r3, [r3, #0]
9001f198:	2b00      	cmp	r3, #0
9001f19a:	d137      	bne.n	9001f20c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001f19c:	4a3c      	ldr	r2, [pc, #240]	@ (9001f290 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001f19e:	f9b2 2000 	ldrsh.w	r2, [r2]
9001f1a2:	f8ad 2004 	strh.w	r2, [sp, #4]
9001f1a6:	2b00      	cmp	r3, #0
9001f1a8:	d132      	bne.n	9001f210 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001f1aa:	4b3a      	ldr	r3, [pc, #232]	@ (9001f294 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001f1ac:	f9b3 3000 	ldrsh.w	r3, [r3]
9001f1b0:	ac02      	add	r4, sp, #8
9001f1b2:	6808      	ldr	r0, [r1, #0]
9001f1b4:	f8ad 3006 	strh.w	r3, [sp, #6]
9001f1b8:	ab02      	add	r3, sp, #8
9001f1ba:	6849      	ldr	r1, [r1, #4]
9001f1bc:	4d36      	ldr	r5, [pc, #216]	@ (9001f298 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001f1be:	c303      	stmia	r3!, {r0, r1}
9001f1c0:	4669      	mov	r1, sp
9001f1c2:	4620      	mov	r0, r4
9001f1c4:	f7fa f932 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f1c8:	4668      	mov	r0, sp
9001f1ca:	f7fa f907 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f1ce:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001f1d2:	f8bd 2000 	ldrh.w	r2, [sp]
9001f1d6:	462f      	mov	r7, r5
9001f1d8:	6828      	ldr	r0, [r5, #0]
9001f1da:	4413      	add	r3, r2
9001f1dc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001f1e0:	f8ad 3008 	strh.w	r3, [sp, #8]
9001f1e4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001f1e8:	4413      	add	r3, r2
9001f1ea:	f8ad 300a 	strh.w	r3, [sp, #10]
9001f1ee:	6803      	ldr	r3, [r0, #0]
9001f1f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f1f2:	4798      	blx	r3
9001f1f4:	f010 0f01 	tst.w	r0, #1
9001f1f8:	d00c      	beq.n	9001f214 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001f1fa:	6828      	ldr	r0, [r5, #0]
9001f1fc:	6803      	ldr	r3, [r0, #0]
9001f1fe:	e894 0006 	ldmia.w	r4, {r1, r2}
9001f202:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
9001f204:	4798      	blx	r3
9001f206:	b004      	add	sp, #16
9001f208:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f20c:	4a21      	ldr	r2, [pc, #132]	@ (9001f294 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001f20e:	e7c6      	b.n	9001f19e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001f210:	4b1f      	ldr	r3, [pc, #124]	@ (9001f290 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001f212:	e7cb      	b.n	9001f1ac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001f214:	6838      	ldr	r0, [r7, #0]
9001f216:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001f21a:	6803      	ldr	r3, [r0, #0]
9001f21c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001f220:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001f224:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f226:	4798      	blx	r3
9001f228:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001f22c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001f230:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001f234:	fb16 3602 	smlabb	r6, r6, r2, r3
9001f238:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001f23c:	6838      	ldr	r0, [r7, #0]
9001f23e:	6803      	ldr	r3, [r0, #0]
9001f240:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f242:	4798      	blx	r3
9001f244:	4a12      	ldr	r2, [pc, #72]	@ (9001f290 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001f246:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001f24a:	8813      	ldrh	r3, [r2, #0]
9001f24c:	4691      	mov	r9, r2
9001f24e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001f252:	435d      	muls	r5, r3
9001f254:	fb03 1404 	mla	r4, r3, r4, r1
9001f258:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001f25c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001f260:	6838      	ldr	r0, [r7, #0]
9001f262:	42ac      	cmp	r4, r5
9001f264:	6803      	ldr	r3, [r0, #0]
9001f266:	d20e      	bcs.n	9001f286 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001f268:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
9001f26c:	4632      	mov	r2, r6
9001f26e:	4643      	mov	r3, r8
9001f270:	4621      	mov	r1, r4
9001f272:	47d0      	blx	sl
9001f274:	f8b9 3000 	ldrh.w	r3, [r9]
9001f278:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f27c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001f280:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001f284:	e7ec      	b.n	9001f260 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001f286:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f288:	4798      	blx	r3
9001f28a:	e7bc      	b.n	9001f206 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001f28c:	2402458e 	.word	0x2402458e
9001f290:	24024590 	.word	0x24024590
9001f294:	24024592 	.word	0x24024592
9001f298:	24024598 	.word	0x24024598

9001f29c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001f29c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f2a0:	b08b      	sub	sp, #44	@ 0x2c
9001f2a2:	460f      	mov	r7, r1
9001f2a4:	4616      	mov	r6, r2
9001f2a6:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001f2aa:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001f2ae:	f1bb 0f00 	cmp.w	fp, #0
9001f2b2:	d04a      	beq.n	9001f34a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001f2b4:	6810      	ldr	r0, [r2, #0]
9001f2b6:	ad06      	add	r5, sp, #24
9001f2b8:	6851      	ldr	r1, [r2, #4]
9001f2ba:	c503      	stmia	r5!, {r0, r1}
9001f2bc:	6818      	ldr	r0, [r3, #0]
9001f2be:	ad08      	add	r5, sp, #32
9001f2c0:	6859      	ldr	r1, [r3, #4]
9001f2c2:	c503      	stmia	r5!, {r0, r1}
9001f2c4:	a806      	add	r0, sp, #24
9001f2c6:	f7fa f889 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f2ca:	4631      	mov	r1, r6
9001f2cc:	a808      	add	r0, sp, #32
9001f2ce:	f7fa f8ad 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f2d2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001f2d6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001f2da:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001f2de:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001f2e2:	fb16 2103 	smlabb	r1, r6, r3, r2
9001f2e6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001f2ea:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001f2ee:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001f2f2:	4f5f      	ldr	r7, [pc, #380]	@ (9001f470 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001f2f4:	440a      	add	r2, r1
9001f2f6:	6838      	ldr	r0, [r7, #0]
9001f2f8:	46b9      	mov	r9, r7
9001f2fa:	f8ad 2020 	strh.w	r2, [sp, #32]
9001f2fe:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001f302:	4413      	add	r3, r2
9001f304:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001f308:	6803      	ldr	r3, [r0, #0]
9001f30a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001f30c:	4798      	blx	r3
9001f30e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001f312:	d11d      	bne.n	9001f350 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001f314:	b9fc      	cbnz	r4, 9001f356 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001f316:	f010 0f01 	tst.w	r0, #1
9001f31a:	d01c      	beq.n	9001f356 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001f31c:	f8d9 0000 	ldr.w	r0, [r9]
9001f320:	2700      	movs	r7, #0
9001f322:	b2ad      	uxth	r5, r5
9001f324:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001f328:	6801      	ldr	r1, [r0, #0]
9001f32a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001f32e:	f8cd b00c 	str.w	fp, [sp, #12]
9001f332:	9501      	str	r5, [sp, #4]
9001f334:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001f338:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001f33c:	9402      	str	r4, [sp, #8]
9001f33e:	fa1f f488 	uxth.w	r4, r8
9001f342:	9400      	str	r4, [sp, #0]
9001f344:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
9001f346:	4631      	mov	r1, r6
9001f348:	47a0      	blx	r4
9001f34a:	b00b      	add	sp, #44	@ 0x2c
9001f34c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f350:	f010 0f04 	tst.w	r0, #4
9001f354:	e7e1      	b.n	9001f31a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001f356:	f8d9 0000 	ldr.w	r0, [r9]
9001f35a:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001f35e:	6803      	ldr	r3, [r0, #0]
9001f360:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f362:	4798      	blx	r3
9001f364:	4b43      	ldr	r3, [pc, #268]	@ (9001f474 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001f366:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001f36a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001f36e:	881a      	ldrh	r2, [r3, #0]
9001f370:	469a      	mov	sl, r3
9001f372:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001f376:	fb05 f502 	mul.w	r5, r5, r2
9001f37a:	fb02 1404 	mla	r4, r2, r4, r1
9001f37e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001f382:	d059      	beq.n	9001f438 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001f384:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001f388:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001f38c:	fa1f f28b 	uxth.w	r2, fp
9001f390:	469e      	mov	lr, r3
9001f392:	fa1f f989 	uxth.w	r9, r9
9001f396:	42ac      	cmp	r4, r5
9001f398:	d264      	bcs.n	9001f464 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001f39a:	eb04 0a07 	add.w	sl, r4, r7
9001f39e:	4554      	cmp	r4, sl
9001f3a0:	d23d      	bcs.n	9001f41e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001f3a2:	8821      	ldrh	r1, [r4, #0]
9001f3a4:	f836 3b02 	ldrh.w	r3, [r6], #2
9001f3a8:	1208      	asrs	r0, r1, #8
9001f3aa:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001f3ae:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001f3b2:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001f3b6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f3ba:	00c9      	lsls	r1, r1, #3
9001f3bc:	fb10 f009 	smulbb	r0, r0, r9
9001f3c0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001f3c4:	b2c9      	uxtb	r1, r1
9001f3c6:	fb0c 0c02 	mla	ip, ip, r2, r0
9001f3ca:	10d8      	asrs	r0, r3, #3
9001f3cc:	fb1b fb09 	smulbb	fp, fp, r9
9001f3d0:	00db      	lsls	r3, r3, #3
9001f3d2:	fa1f fc8c 	uxth.w	ip, ip
9001f3d6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001f3da:	fb11 f109 	smulbb	r1, r1, r9
9001f3de:	b2db      	uxtb	r3, r3
9001f3e0:	fb00 b002 	mla	r0, r0, r2, fp
9001f3e4:	f10c 0b01 	add.w	fp, ip, #1
9001f3e8:	fb03 1302 	mla	r3, r3, r2, r1
9001f3ec:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001f3f0:	b29b      	uxth	r3, r3
9001f3f2:	b280      	uxth	r0, r0
9001f3f4:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001f3f8:	f103 0c01 	add.w	ip, r3, #1
9001f3fc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001f400:	1c43      	adds	r3, r0, #1
9001f402:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001f406:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f40a:	0940      	lsrs	r0, r0, #5
9001f40c:	ea4c 0c0b 	orr.w	ip, ip, fp
9001f410:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001f414:	ea4c 0c00 	orr.w	ip, ip, r0
9001f418:	f824 cb02 	strh.w	ip, [r4], #2
9001f41c:	e7bf      	b.n	9001f39e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001f41e:	f8be 3000 	ldrh.w	r3, [lr]
9001f422:	eba3 0308 	sub.w	r3, r3, r8
9001f426:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f42a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001f42e:	eba3 0308 	sub.w	r3, r3, r8
9001f432:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001f436:	e7ae      	b.n	9001f396 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001f438:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001f43c:	f8d9 0000 	ldr.w	r0, [r9]
9001f440:	42ac      	cmp	r4, r5
9001f442:	6803      	ldr	r3, [r0, #0]
9001f444:	d20e      	bcs.n	9001f464 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001f446:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
9001f44a:	4632      	mov	r2, r6
9001f44c:	463b      	mov	r3, r7
9001f44e:	4621      	mov	r1, r4
9001f450:	47c0      	blx	r8
9001f452:	f8ba 3000 	ldrh.w	r3, [sl]
9001f456:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001f45a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001f45e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001f462:	e7eb      	b.n	9001f43c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001f464:	4b02      	ldr	r3, [pc, #8]	@ (9001f470 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001f466:	6818      	ldr	r0, [r3, #0]
9001f468:	6803      	ldr	r3, [r0, #0]
9001f46a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f46c:	4798      	blx	r3
9001f46e:	e76c      	b.n	9001f34a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001f470:	24024598 	.word	0x24024598
9001f474:	24024590 	.word	0x24024590

9001f478 <_ZN8touchgfx8LCD16bppD0Ev>:
9001f478:	b510      	push	{r4, lr}
9001f47a:	4604      	mov	r4, r0
9001f47c:	218c      	movs	r1, #140	@ 0x8c
9001f47e:	f00c fb6c 	bl	9002bb5a <_ZdlPvj>
9001f482:	4620      	mov	r0, r4
9001f484:	bd10      	pop	{r4, pc}

9001f486 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001f486:	b510      	push	{r4, lr}
9001f488:	4604      	mov	r4, r0
9001f48a:	2104      	movs	r1, #4
9001f48c:	f00c fb65 	bl	9002bb5a <_ZdlPvj>
9001f490:	4620      	mov	r0, r4
9001f492:	bd10      	pop	{r4, pc}

9001f494 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001f494:	b510      	push	{r4, lr}
9001f496:	4604      	mov	r4, r0
9001f498:	2104      	movs	r1, #4
9001f49a:	f00c fb5e 	bl	9002bb5a <_ZdlPvj>
9001f49e:	4620      	mov	r0, r4
9001f4a0:	bd10      	pop	{r4, pc}

9001f4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001f4a2:	b510      	push	{r4, lr}
9001f4a4:	4604      	mov	r4, r0
9001f4a6:	f640 0144 	movw	r1, #2116	@ 0x844
9001f4aa:	f00c fb56 	bl	9002bb5a <_ZdlPvj>
9001f4ae:	4620      	mov	r0, r4
9001f4b0:	bd10      	pop	{r4, pc}

9001f4b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001f4b2:	b510      	push	{r4, lr}
9001f4b4:	4604      	mov	r4, r0
9001f4b6:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001f4ba:	f00c fb4e 	bl	9002bb5a <_ZdlPvj>
9001f4be:	4620      	mov	r0, r4
9001f4c0:	bd10      	pop	{r4, pc}

9001f4c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001f4c2:	b510      	push	{r4, lr}
9001f4c4:	4604      	mov	r4, r0
9001f4c6:	2104      	movs	r1, #4
9001f4c8:	f00c fb47 	bl	9002bb5a <_ZdlPvj>
9001f4cc:	4620      	mov	r0, r4
9001f4ce:	bd10      	pop	{r4, pc}

9001f4d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001f4d0:	b510      	push	{r4, lr}
9001f4d2:	4604      	mov	r4, r0
9001f4d4:	2104      	movs	r1, #4
9001f4d6:	f00c fb40 	bl	9002bb5a <_ZdlPvj>
9001f4da:	4620      	mov	r0, r4
9001f4dc:	bd10      	pop	{r4, pc}

9001f4de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001f4de:	b510      	push	{r4, lr}
9001f4e0:	4604      	mov	r4, r0
9001f4e2:	2104      	movs	r1, #4
9001f4e4:	f00c fb39 	bl	9002bb5a <_ZdlPvj>
9001f4e8:	4620      	mov	r0, r4
9001f4ea:	bd10      	pop	{r4, pc}

9001f4ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001f4ec:	b510      	push	{r4, lr}
9001f4ee:	4604      	mov	r4, r0
9001f4f0:	2104      	movs	r1, #4
9001f4f2:	f00c fb32 	bl	9002bb5a <_ZdlPvj>
9001f4f6:	4620      	mov	r0, r4
9001f4f8:	bd10      	pop	{r4, pc}

9001f4fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001f4fa:	b510      	push	{r4, lr}
9001f4fc:	4604      	mov	r4, r0
9001f4fe:	2104      	movs	r1, #4
9001f500:	f00c fb2b 	bl	9002bb5a <_ZdlPvj>
9001f504:	4620      	mov	r0, r4
9001f506:	bd10      	pop	{r4, pc}

9001f508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001f508:	b510      	push	{r4, lr}
9001f50a:	4604      	mov	r4, r0
9001f50c:	2104      	movs	r1, #4
9001f50e:	f00c fb24 	bl	9002bb5a <_ZdlPvj>
9001f512:	4620      	mov	r0, r4
9001f514:	bd10      	pop	{r4, pc}

9001f516 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001f516:	b510      	push	{r4, lr}
9001f518:	4604      	mov	r4, r0
9001f51a:	2104      	movs	r1, #4
9001f51c:	f00c fb1d 	bl	9002bb5a <_ZdlPvj>
9001f520:	4620      	mov	r0, r4
9001f522:	bd10      	pop	{r4, pc}

9001f524 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001f524:	b510      	push	{r4, lr}
9001f526:	4604      	mov	r4, r0
9001f528:	2104      	movs	r1, #4
9001f52a:	f00c fb16 	bl	9002bb5a <_ZdlPvj>
9001f52e:	4620      	mov	r0, r4
9001f530:	bd10      	pop	{r4, pc}

9001f532 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001f532:	b510      	push	{r4, lr}
9001f534:	4604      	mov	r4, r0
9001f536:	2104      	movs	r1, #4
9001f538:	f00c fb0f 	bl	9002bb5a <_ZdlPvj>
9001f53c:	4620      	mov	r0, r4
9001f53e:	bd10      	pop	{r4, pc}

9001f540 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001f540:	b510      	push	{r4, lr}
9001f542:	4604      	mov	r4, r0
9001f544:	2104      	movs	r1, #4
9001f546:	f00c fb08 	bl	9002bb5a <_ZdlPvj>
9001f54a:	4620      	mov	r0, r4
9001f54c:	bd10      	pop	{r4, pc}

9001f54e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001f54e:	b510      	push	{r4, lr}
9001f550:	4604      	mov	r4, r0
9001f552:	2104      	movs	r1, #4
9001f554:	f00c fb01 	bl	9002bb5a <_ZdlPvj>
9001f558:	4620      	mov	r0, r4
9001f55a:	bd10      	pop	{r4, pc}

9001f55c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001f55c:	b510      	push	{r4, lr}
9001f55e:	4604      	mov	r4, r0
9001f560:	2104      	movs	r1, #4
9001f562:	f00c fafa 	bl	9002bb5a <_ZdlPvj>
9001f566:	4620      	mov	r0, r4
9001f568:	bd10      	pop	{r4, pc}

9001f56a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001f56a:	b510      	push	{r4, lr}
9001f56c:	4604      	mov	r4, r0
9001f56e:	2104      	movs	r1, #4
9001f570:	f00c faf3 	bl	9002bb5a <_ZdlPvj>
9001f574:	4620      	mov	r0, r4
9001f576:	bd10      	pop	{r4, pc}

9001f578 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001f578:	b510      	push	{r4, lr}
9001f57a:	4604      	mov	r4, r0
9001f57c:	2104      	movs	r1, #4
9001f57e:	f00c faec 	bl	9002bb5a <_ZdlPvj>
9001f582:	4620      	mov	r0, r4
9001f584:	bd10      	pop	{r4, pc}

9001f586 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001f586:	b510      	push	{r4, lr}
9001f588:	4604      	mov	r4, r0
9001f58a:	2104      	movs	r1, #4
9001f58c:	f00c fae5 	bl	9002bb5a <_ZdlPvj>
9001f590:	4620      	mov	r0, r4
9001f592:	bd10      	pop	{r4, pc}

9001f594 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001f594:	b510      	push	{r4, lr}
9001f596:	4604      	mov	r4, r0
9001f598:	2104      	movs	r1, #4
9001f59a:	f00c fade 	bl	9002bb5a <_ZdlPvj>
9001f59e:	4620      	mov	r0, r4
9001f5a0:	bd10      	pop	{r4, pc}

9001f5a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001f5a2:	b510      	push	{r4, lr}
9001f5a4:	4604      	mov	r4, r0
9001f5a6:	2104      	movs	r1, #4
9001f5a8:	f00c fad7 	bl	9002bb5a <_ZdlPvj>
9001f5ac:	4620      	mov	r0, r4
9001f5ae:	bd10      	pop	{r4, pc}

9001f5b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001f5b0:	b510      	push	{r4, lr}
9001f5b2:	4604      	mov	r4, r0
9001f5b4:	2104      	movs	r1, #4
9001f5b6:	f00c fad0 	bl	9002bb5a <_ZdlPvj>
9001f5ba:	4620      	mov	r0, r4
9001f5bc:	bd10      	pop	{r4, pc}

9001f5be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001f5be:	b510      	push	{r4, lr}
9001f5c0:	4604      	mov	r4, r0
9001f5c2:	2104      	movs	r1, #4
9001f5c4:	f00c fac9 	bl	9002bb5a <_ZdlPvj>
9001f5c8:	4620      	mov	r0, r4
9001f5ca:	bd10      	pop	{r4, pc}

9001f5cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001f5cc:	b510      	push	{r4, lr}
9001f5ce:	4604      	mov	r4, r0
9001f5d0:	2104      	movs	r1, #4
9001f5d2:	f00c fac2 	bl	9002bb5a <_ZdlPvj>
9001f5d6:	4620      	mov	r0, r4
9001f5d8:	bd10      	pop	{r4, pc}

9001f5da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001f5da:	b510      	push	{r4, lr}
9001f5dc:	4604      	mov	r4, r0
9001f5de:	2104      	movs	r1, #4
9001f5e0:	f00c fabb 	bl	9002bb5a <_ZdlPvj>
9001f5e4:	4620      	mov	r0, r4
9001f5e6:	bd10      	pop	{r4, pc}

9001f5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001f5e8:	b510      	push	{r4, lr}
9001f5ea:	4604      	mov	r4, r0
9001f5ec:	2104      	movs	r1, #4
9001f5ee:	f00c fab4 	bl	9002bb5a <_ZdlPvj>
9001f5f2:	4620      	mov	r0, r4
9001f5f4:	bd10      	pop	{r4, pc}

9001f5f6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001f5f6:	b510      	push	{r4, lr}
9001f5f8:	4604      	mov	r4, r0
9001f5fa:	2104      	movs	r1, #4
9001f5fc:	f00c faad 	bl	9002bb5a <_ZdlPvj>
9001f600:	4620      	mov	r0, r4
9001f602:	bd10      	pop	{r4, pc}

9001f604 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001f604:	b510      	push	{r4, lr}
9001f606:	4604      	mov	r4, r0
9001f608:	2104      	movs	r1, #4
9001f60a:	f00c faa6 	bl	9002bb5a <_ZdlPvj>
9001f60e:	4620      	mov	r0, r4
9001f610:	bd10      	pop	{r4, pc}

9001f612 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001f612:	b510      	push	{r4, lr}
9001f614:	4604      	mov	r4, r0
9001f616:	2104      	movs	r1, #4
9001f618:	f00c fa9f 	bl	9002bb5a <_ZdlPvj>
9001f61c:	4620      	mov	r0, r4
9001f61e:	bd10      	pop	{r4, pc}

9001f620 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001f620:	b510      	push	{r4, lr}
9001f622:	4604      	mov	r4, r0
9001f624:	2104      	movs	r1, #4
9001f626:	f00c fa98 	bl	9002bb5a <_ZdlPvj>
9001f62a:	4620      	mov	r0, r4
9001f62c:	bd10      	pop	{r4, pc}

9001f62e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001f62e:	b510      	push	{r4, lr}
9001f630:	4604      	mov	r4, r0
9001f632:	2104      	movs	r1, #4
9001f634:	f00c fa91 	bl	9002bb5a <_ZdlPvj>
9001f638:	4620      	mov	r0, r4
9001f63a:	bd10      	pop	{r4, pc}

9001f63c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001f63c:	b510      	push	{r4, lr}
9001f63e:	4604      	mov	r4, r0
9001f640:	2104      	movs	r1, #4
9001f642:	f00c fa8a 	bl	9002bb5a <_ZdlPvj>
9001f646:	4620      	mov	r0, r4
9001f648:	bd10      	pop	{r4, pc}
	...

9001f64c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001f64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f650:	b08f      	sub	sp, #60	@ 0x3c
9001f652:	4616      	mov	r6, r2
9001f654:	4682      	mov	sl, r0
9001f656:	460d      	mov	r5, r1
9001f658:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001f65c:	9205      	str	r2, [sp, #20]
9001f65e:	2a00      	cmp	r2, #0
9001f660:	f000 82b7 	beq.w	9001fbd2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001f664:	6830      	ldr	r0, [r6, #0]
9001f666:	ac0a      	add	r4, sp, #40	@ 0x28
9001f668:	6871      	ldr	r1, [r6, #4]
9001f66a:	c403      	stmia	r4!, {r0, r1}
9001f66c:	6818      	ldr	r0, [r3, #0]
9001f66e:	ac0c      	add	r4, sp, #48	@ 0x30
9001f670:	6859      	ldr	r1, [r3, #4]
9001f672:	c403      	stmia	r4!, {r0, r1}
9001f674:	a80a      	add	r0, sp, #40	@ 0x28
9001f676:	f7f9 feb1 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f67a:	4631      	mov	r1, r6
9001f67c:	a80c      	add	r0, sp, #48	@ 0x30
9001f67e:	f7f9 fed5 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f682:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001f686:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001f68a:	bfdb      	ittet	le
9001f68c:	b293      	uxthle	r3, r2
9001f68e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001f692:	2301      	movgt	r3, #1
9001f694:	fb91 f3f3 	sdivle	r3, r1, r3
9001f698:	9300      	str	r3, [sp, #0]
9001f69a:	f105 0308 	add.w	r3, r5, #8
9001f69e:	9900      	ldr	r1, [sp, #0]
9001f6a0:	9306      	str	r3, [sp, #24]
9001f6a2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001f6a6:	440b      	add	r3, r1
9001f6a8:	3b01      	subs	r3, #1
9001f6aa:	fb93 f3f1 	sdiv	r3, r3, r1
9001f6ae:	3b01      	subs	r3, #1
9001f6b0:	9906      	ldr	r1, [sp, #24]
9001f6b2:	b29b      	uxth	r3, r3
9001f6b4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001f6b8:	9900      	ldr	r1, [sp, #0]
9001f6ba:	9307      	str	r3, [sp, #28]
9001f6bc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001f6c0:	fb93 f0f1 	sdiv	r0, r3, r1
9001f6c4:	b284      	uxth	r4, r0
9001f6c6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001f6ca:	9402      	str	r4, [sp, #8]
9001f6cc:	9d02      	ldr	r5, [sp, #8]
9001f6ce:	9c00      	ldr	r4, [sp, #0]
9001f6d0:	fb05 3414 	mls	r4, r5, r4, r3
9001f6d4:	fb14 f402 	smulbb	r4, r4, r2
9001f6d8:	440c      	add	r4, r1
9001f6da:	b2a4      	uxth	r4, r4
9001f6dc:	2d00      	cmp	r5, #0
9001f6de:	d06c      	beq.n	9001f7ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001f6e0:	1e6a      	subs	r2, r5, #1
9001f6e2:	9806      	ldr	r0, [sp, #24]
9001f6e4:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001f6e8:	9a07      	ldr	r2, [sp, #28]
9001f6ea:	ba36      	rev	r6, r6
9001f6ec:	4416      	add	r6, r2
9001f6ee:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001f6f2:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001f6f6:	4411      	add	r1, r2
9001f6f8:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001f6fc:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001fa2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001f700:	4413      	add	r3, r2
9001f702:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001f706:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001f70a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001f70e:	9301      	str	r3, [sp, #4]
9001f710:	4bc4      	ldr	r3, [pc, #784]	@ (9001fa24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001f712:	6818      	ldr	r0, [r3, #0]
9001f714:	6803      	ldr	r3, [r0, #0]
9001f716:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001f718:	4798      	blx	r3
9001f71a:	4bc3      	ldr	r3, [pc, #780]	@ (9001fa28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001f71c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001f720:	881b      	ldrh	r3, [r3, #0]
9001f722:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001f726:	fb03 2808 	mla	r8, r3, r8, r2
9001f72a:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001f72e:	436b      	muls	r3, r5
9001f730:	2500      	movs	r5, #0
9001f732:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001f736:	4629      	mov	r1, r5
9001f738:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001f73c:	9309      	str	r3, [sp, #36]	@ 0x24
9001f73e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001f742:	fb94 f3f3 	sdiv	r3, r4, r3
9001f746:	9304      	str	r3, [sp, #16]
9001f748:	f10a 0304 	add.w	r3, sl, #4
9001f74c:	4618      	mov	r0, r3
9001f74e:	9308      	str	r3, [sp, #32]
9001f750:	f00d f816 	bl	9002c780 <memset>
9001f754:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001f756:	4543      	cmp	r3, r8
9001f758:	f240 8236 	bls.w	9001fbc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001f75c:	2203      	movs	r2, #3
9001f75e:	2107      	movs	r1, #7
9001f760:	200b      	movs	r0, #11
9001f762:	2c00      	cmp	r4, #0
9001f764:	f000 8131 	beq.w	9001f9ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001f768:	7833      	ldrb	r3, [r6, #0]
9001f76a:	b2db      	uxtb	r3, r3
9001f76c:	2bfe      	cmp	r3, #254	@ 0xfe
9001f76e:	d126      	bne.n	9001f7be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001f770:	f896 e001 	ldrb.w	lr, [r6, #1]
9001f774:	3c01      	subs	r4, #1
9001f776:	f896 c002 	ldrb.w	ip, [r6, #2]
9001f77a:	1d37      	adds	r7, r6, #4
9001f77c:	fa5f fe8e 	uxtb.w	lr, lr
9001f780:	f896 b003 	ldrb.w	fp, [r6, #3]
9001f784:	fa5f fc8c 	uxtb.w	ip, ip
9001f788:	f36e 0507 	bfi	r5, lr, #0, #8
9001f78c:	fa5f fb8b 	uxtb.w	fp, fp
9001f790:	b2a4      	uxth	r4, r4
9001f792:	f36c 250f 	bfi	r5, ip, #8, #8
9001f796:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001f79a:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001f79e:	f36b 4517 	bfi	r5, fp, #16, #8
9001f7a2:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001f7a6:	0e2b      	lsrs	r3, r5, #24
9001f7a8:	fb10 c303 	smlabb	r3, r0, r3, ip
9001f7ac:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f7b0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001f7b4:	605d      	str	r5, [r3, #4]
9001f7b6:	463e      	mov	r6, r7
9001f7b8:	e7d3      	b.n	9001f762 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001f7ba:	9e07      	ldr	r6, [sp, #28]
9001f7bc:	e797      	b.n	9001f6ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001f7be:	2bff      	cmp	r3, #255	@ 0xff
9001f7c0:	d127      	bne.n	9001f812 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001f7c2:	f896 c001 	ldrb.w	ip, [r6, #1]
9001f7c6:	3c01      	subs	r4, #1
9001f7c8:	78b3      	ldrb	r3, [r6, #2]
9001f7ca:	1d77      	adds	r7, r6, #5
9001f7cc:	fa5f fc8c 	uxtb.w	ip, ip
9001f7d0:	f896 e003 	ldrb.w	lr, [r6, #3]
9001f7d4:	b2db      	uxtb	r3, r3
9001f7d6:	f896 b004 	ldrb.w	fp, [r6, #4]
9001f7da:	f36c 0507 	bfi	r5, ip, #0, #8
9001f7de:	fa5f fe8e 	uxtb.w	lr, lr
9001f7e2:	fa5f fb8b 	uxtb.w	fp, fp
9001f7e6:	f363 250f 	bfi	r5, r3, #8, #8
9001f7ea:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001f7ee:	b2a4      	uxth	r4, r4
9001f7f0:	fb12 330e 	smlabb	r3, r2, lr, r3
9001f7f4:	f36e 4517 	bfi	r5, lr, #16, #8
9001f7f8:	fb11 330c 	smlabb	r3, r1, ip, r3
9001f7fc:	f36b 651f 	bfi	r5, fp, #24, #8
9001f800:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001f804:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001f808:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001f80c:	f8cb 5004 	str.w	r5, [fp, #4]
9001f810:	e7d1      	b.n	9001f7b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001f812:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001f816:	f106 0701 	add.w	r7, r6, #1
9001f81a:	d107      	bne.n	9001f82c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001f81c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f820:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001f824:	685d      	ldr	r5, [r3, #4]
9001f826:	3c01      	subs	r4, #1
9001f828:	b2a4      	uxth	r4, r4
9001f82a:	e7c4      	b.n	9001f7b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001f82c:	f1bc 0f01 	cmp.w	ip, #1
9001f830:	d12c      	bne.n	9001f88c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001f832:	f003 0e03 	and.w	lr, r3, #3
9001f836:	f003 0c0c 	and.w	ip, r3, #12
9001f83a:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001f83e:	f1ae 0e02 	sub.w	lr, lr, #2
9001f842:	f1ac 0c08 	sub.w	ip, ip, #8
9001f846:	3b02      	subs	r3, #2
9001f848:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001f84c:	fa5f fe8e 	uxtb.w	lr, lr
9001f850:	f36e 0507 	bfi	r5, lr, #0, #8
9001f854:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001f858:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001f85c:	f36c 250f 	bfi	r5, ip, #8, #8
9001f860:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001f864:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001f868:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001f86c:	b2db      	uxtb	r3, r3
9001f86e:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001f872:	f363 4517 	bfi	r5, r3, #16, #8
9001f876:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001f87a:	0e2e      	lsrs	r6, r5, #24
9001f87c:	fb10 c606 	smlabb	r6, r0, r6, ip
9001f880:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001f884:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001f888:	6075      	str	r5, [r6, #4]
9001f88a:	e7cc      	b.n	9001f826 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001f88c:	f1bc 0f02 	cmp.w	ip, #2
9001f890:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f894:	d12a      	bne.n	9001f8ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001f896:	1cb7      	adds	r7, r6, #2
9001f898:	7876      	ldrb	r6, [r6, #1]
9001f89a:	3b20      	subs	r3, #32
9001f89c:	b2f6      	uxtb	r6, r6
9001f89e:	f006 0c0f 	and.w	ip, r6, #15
9001f8a2:	1136      	asrs	r6, r6, #4
9001f8a4:	f1ac 0c08 	sub.w	ip, ip, #8
9001f8a8:	3e08      	subs	r6, #8
9001f8aa:	449c      	add	ip, r3
9001f8ac:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001f8b0:	fa5f fc8c 	uxtb.w	ip, ip
9001f8b4:	f36c 0507 	bfi	r5, ip, #0, #8
9001f8b8:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001f8bc:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001f8c0:	4433      	add	r3, r6
9001f8c2:	fa5f fe8e 	uxtb.w	lr, lr
9001f8c6:	f36e 250f 	bfi	r5, lr, #8, #8
9001f8ca:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001f8ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001f8d2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001f8d6:	b2db      	uxtb	r3, r3
9001f8d8:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001f8dc:	f363 4517 	bfi	r5, r3, #16, #8
9001f8e0:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001f8e4:	0e2e      	lsrs	r6, r5, #24
9001f8e6:	fb10 e606 	smlabb	r6, r0, r6, lr
9001f8ea:	e7c9      	b.n	9001f880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001f8ec:	1c5e      	adds	r6, r3, #1
9001f8ee:	42a6      	cmp	r6, r4
9001f8f0:	dd4e      	ble.n	9001f990 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001f8f2:	1b36      	subs	r6, r6, r4
9001f8f4:	2e00      	cmp	r6, #0
9001f8f6:	dc4e      	bgt.n	9001f996 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001f8f8:	f8dd b004 	ldr.w	fp, [sp, #4]
9001f8fc:	2400      	movs	r4, #0
9001f8fe:	f1bb 0f00 	cmp.w	fp, #0
9001f902:	f340 8122 	ble.w	9001fb4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001f906:	1c7b      	adds	r3, r7, #1
9001f908:	9303      	str	r3, [sp, #12]
9001f90a:	783b      	ldrb	r3, [r7, #0]
9001f90c:	b2db      	uxtb	r3, r3
9001f90e:	2bfe      	cmp	r3, #254	@ 0xfe
9001f910:	d160      	bne.n	9001f9d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001f912:	7879      	ldrb	r1, [r7, #1]
9001f914:	1d3b      	adds	r3, r7, #4
9001f916:	78ba      	ldrb	r2, [r7, #2]
9001f918:	b2c9      	uxtb	r1, r1
9001f91a:	78f8      	ldrb	r0, [r7, #3]
9001f91c:	b2d2      	uxtb	r2, r2
9001f91e:	9303      	str	r3, [sp, #12]
9001f920:	f361 0507 	bfi	r5, r1, #0, #8
9001f924:	b2c0      	uxtb	r0, r0
9001f926:	2303      	movs	r3, #3
9001f928:	f362 250f 	bfi	r5, r2, #8, #8
9001f92c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001f930:	fb13 2200 	smlabb	r2, r3, r0, r2
9001f934:	f360 4517 	bfi	r5, r0, #16, #8
9001f938:	2307      	movs	r3, #7
9001f93a:	0e2e      	lsrs	r6, r5, #24
9001f93c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001f940:	230b      	movs	r3, #11
9001f942:	fb13 1306 	smlabb	r3, r3, r6, r1
9001f946:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001f94a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001f94e:	605d      	str	r5, [r3, #4]
9001f950:	2601      	movs	r6, #1
9001f952:	4637      	mov	r7, r6
9001f954:	0e2b      	lsrs	r3, r5, #24
9001f956:	ebab 0b07 	sub.w	fp, fp, r7
9001f95a:	eba6 0607 	sub.w	r6, r6, r7
9001f95e:	f040 80d3 	bne.w	9001fb08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001f962:	b18c      	cbz	r4, 9001f988 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001f964:	4648      	mov	r0, r9
9001f966:	00a1      	lsls	r1, r4, #2
9001f968:	f7e2 ffda 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
9001f96c:	9b05      	ldr	r3, [sp, #20]
9001f96e:	4622      	mov	r2, r4
9001f970:	4649      	mov	r1, r9
9001f972:	4640      	mov	r0, r8
9001f974:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001f978:	f7e3 f840 	bl	900029fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001f97c:	4b2b      	ldr	r3, [pc, #172]	@ (9001fa2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001f97e:	4a2c      	ldr	r2, [pc, #176]	@ (9001fa30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001f980:	4599      	cmp	r9, r3
9001f982:	bf08      	it	eq
9001f984:	4613      	moveq	r3, r2
9001f986:	4699      	mov	r9, r3
9001f988:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001f98c:	2400      	movs	r4, #0
9001f98e:	e0da      	b.n	9001fb46 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001f990:	1ba6      	subs	r6, r4, r6
9001f992:	b2b4      	uxth	r4, r6
9001f994:	e70f      	b.n	9001f7b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001f996:	9b01      	ldr	r3, [sp, #4]
9001f998:	9a01      	ldr	r2, [sp, #4]
9001f99a:	42b3      	cmp	r3, r6
9001f99c:	bfa8      	it	ge
9001f99e:	4633      	movge	r3, r6
9001f9a0:	0e2c      	lsrs	r4, r5, #24
9001f9a2:	eba2 0b03 	sub.w	fp, r2, r3
9001f9a6:	eba6 0603 	sub.w	r6, r6, r3
9001f9aa:	d00b      	beq.n	9001f9c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001f9ac:	f1a9 0104 	sub.w	r1, r9, #4
9001f9b0:	461a      	mov	r2, r3
9001f9b2:	2a00      	cmp	r2, #0
9001f9b4:	dc02      	bgt.n	9001f9bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001f9b6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001f9ba:	e7a0      	b.n	9001f8fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001f9bc:	f841 5f04 	str.w	r5, [r1, #4]!
9001f9c0:	3a01      	subs	r2, #1
9001f9c2:	e7f6      	b.n	9001f9b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001f9c4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001f9c8:	e799      	b.n	9001f8fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001f9ca:	4637      	mov	r7, r6
9001f9cc:	f8dd b004 	ldr.w	fp, [sp, #4]
9001f9d0:	4626      	mov	r6, r4
9001f9d2:	e794      	b.n	9001f8fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001f9d4:	2bff      	cmp	r3, #255	@ 0xff
9001f9d6:	d11d      	bne.n	9001fa14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001f9d8:	7878      	ldrb	r0, [r7, #1]
9001f9da:	1d7b      	adds	r3, r7, #5
9001f9dc:	78ba      	ldrb	r2, [r7, #2]
9001f9de:	b2c0      	uxtb	r0, r0
9001f9e0:	78fe      	ldrb	r6, [r7, #3]
9001f9e2:	b2d2      	uxtb	r2, r2
9001f9e4:	9303      	str	r3, [sp, #12]
9001f9e6:	f360 0507 	bfi	r5, r0, #0, #8
9001f9ea:	793b      	ldrb	r3, [r7, #4]
9001f9ec:	b2f6      	uxtb	r6, r6
9001f9ee:	b2d9      	uxtb	r1, r3
9001f9f0:	f362 250f 	bfi	r5, r2, #8, #8
9001f9f4:	2303      	movs	r3, #3
9001f9f6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001f9fa:	f366 4517 	bfi	r5, r6, #16, #8
9001f9fe:	fb13 2206 	smlabb	r2, r3, r6, r2
9001fa02:	2307      	movs	r3, #7
9001fa04:	f361 651f 	bfi	r5, r1, #24, #8
9001fa08:	fb13 2000 	smlabb	r0, r3, r0, r2
9001fa0c:	230b      	movs	r3, #11
9001fa0e:	fb13 0301 	smlabb	r3, r3, r1, r0
9001fa12:	e798      	b.n	9001f946 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001fa14:	119e      	asrs	r6, r3, #6
9001fa16:	d10d      	bne.n	9001fa34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001fa18:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fa1c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001fa20:	685d      	ldr	r5, [r3, #4]
9001fa22:	e795      	b.n	9001f950 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001fa24:	24024598 	.word	0x24024598
9001fa28:	24024590 	.word	0x24024590
9001fa2c:	240003a0 	.word	0x240003a0
9001fa30:	240004a0 	.word	0x240004a0
9001fa34:	2e01      	cmp	r6, #1
9001fa36:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001fa3a:	d12b      	bne.n	9001fa94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001fa3c:	f003 0003 	and.w	r0, r3, #3
9001fa40:	f003 020c 	and.w	r2, r3, #12
9001fa44:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001fa48:	3802      	subs	r0, #2
9001fa4a:	3a08      	subs	r2, #8
9001fa4c:	1e9f      	subs	r7, r3, #2
9001fa4e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001fa52:	b2c0      	uxtb	r0, r0
9001fa54:	f360 0507 	bfi	r5, r0, #0, #8
9001fa58:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001fa5c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001fa60:	f362 250f 	bfi	r5, r2, #8, #8
9001fa64:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001fa68:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001fa6c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001fa70:	2703      	movs	r7, #3
9001fa72:	b2db      	uxtb	r3, r3
9001fa74:	fb17 2203 	smlabb	r2, r7, r3, r2
9001fa78:	2707      	movs	r7, #7
9001fa7a:	f363 4517 	bfi	r5, r3, #16, #8
9001fa7e:	230b      	movs	r3, #11
9001fa80:	fb17 2000 	smlabb	r0, r7, r0, r2
9001fa84:	fb13 0101 	smlabb	r1, r3, r1, r0
9001fa88:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001fa8c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001fa90:	604d      	str	r5, [r1, #4]
9001fa92:	e75e      	b.n	9001f952 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001fa94:	2e02      	cmp	r6, #2
9001fa96:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001fa9a:	d12f      	bne.n	9001fafc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001fa9c:	7878      	ldrb	r0, [r7, #1]
9001fa9e:	1cba      	adds	r2, r7, #2
9001faa0:	3b20      	subs	r3, #32
9001faa2:	b2c0      	uxtb	r0, r0
9001faa4:	9203      	str	r2, [sp, #12]
9001faa6:	f000 020f 	and.w	r2, r0, #15
9001faaa:	1100      	asrs	r0, r0, #4
9001faac:	3a08      	subs	r2, #8
9001faae:	3808      	subs	r0, #8
9001fab0:	441a      	add	r2, r3
9001fab2:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001fab6:	b2d2      	uxtb	r2, r2
9001fab8:	f362 0507 	bfi	r5, r2, #0, #8
9001fabc:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001fac0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001fac4:	4403      	add	r3, r0
9001fac6:	b2f6      	uxtb	r6, r6
9001fac8:	f366 250f 	bfi	r5, r6, #8, #8
9001facc:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001fad0:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001fad4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001fad8:	2003      	movs	r0, #3
9001fada:	b2db      	uxtb	r3, r3
9001fadc:	fb10 6603 	smlabb	r6, r0, r3, r6
9001fae0:	2007      	movs	r0, #7
9001fae2:	f363 4517 	bfi	r5, r3, #16, #8
9001fae6:	230b      	movs	r3, #11
9001fae8:	fb10 6202 	smlabb	r2, r0, r2, r6
9001faec:	fb13 2101 	smlabb	r1, r3, r1, r2
9001faf0:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001faf4:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001faf8:	604d      	str	r5, [r1, #4]
9001fafa:	e729      	b.n	9001f950 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001fafc:	1c5e      	adds	r6, r3, #1
9001fafe:	465f      	mov	r7, fp
9001fb00:	45b3      	cmp	fp, r6
9001fb02:	bfa8      	it	ge
9001fb04:	4637      	movge	r7, r6
9001fb06:	e725      	b.n	9001f954 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001fb08:	193b      	adds	r3, r7, r4
9001fb0a:	2b40      	cmp	r3, #64	@ 0x40
9001fb0c:	dd13      	ble.n	9001fb36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001fb0e:	4648      	mov	r0, r9
9001fb10:	00a1      	lsls	r1, r4, #2
9001fb12:	f7e2 ff05 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
9001fb16:	4649      	mov	r1, r9
9001fb18:	9b05      	ldr	r3, [sp, #20]
9001fb1a:	4622      	mov	r2, r4
9001fb1c:	4640      	mov	r0, r8
9001fb1e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001fb22:	f7e2 ff6b 	bl	900029fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001fb26:	4b2c      	ldr	r3, [pc, #176]	@ (9001fbd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001fb28:	2400      	movs	r4, #0
9001fb2a:	4599      	cmp	r9, r3
9001fb2c:	bf0c      	ite	eq
9001fb2e:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001fbe4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001fb32:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001fbd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001fb36:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001fb3a:	463b      	mov	r3, r7
9001fb3c:	3b01      	subs	r3, #1
9001fb3e:	f842 5b04 	str.w	r5, [r2], #4
9001fb42:	d1fb      	bne.n	9001fb3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001fb44:	443c      	add	r4, r7
9001fb46:	9f03      	ldr	r7, [sp, #12]
9001fb48:	e6d9      	b.n	9001f8fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001fb4a:	b15c      	cbz	r4, 9001fb64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001fb4c:	00a1      	lsls	r1, r4, #2
9001fb4e:	4648      	mov	r0, r9
9001fb50:	f7e2 fee6 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
9001fb54:	4640      	mov	r0, r8
9001fb56:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001fb5a:	9b05      	ldr	r3, [sp, #20]
9001fb5c:	4622      	mov	r2, r4
9001fb5e:	4649      	mov	r1, r9
9001fb60:	f7e2 ff4c 	bl	900029fc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001fb64:	4b1d      	ldr	r3, [pc, #116]	@ (9001fbdc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001fb66:	9a01      	ldr	r2, [sp, #4]
9001fb68:	881b      	ldrh	r3, [r3, #0]
9001fb6a:	1a9b      	subs	r3, r3, r2
9001fb6c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001fb70:	9b04      	ldr	r3, [sp, #16]
9001fb72:	3301      	adds	r3, #1
9001fb74:	9304      	str	r3, [sp, #16]
9001fb76:	9a04      	ldr	r2, [sp, #16]
9001fb78:	9b00      	ldr	r3, [sp, #0]
9001fb7a:	4293      	cmp	r3, r2
9001fb7c:	d11d      	bne.n	9001fbba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001fb7e:	9b02      	ldr	r3, [sp, #8]
9001fb80:	2500      	movs	r5, #0
9001fb82:	9a02      	ldr	r2, [sp, #8]
9001fb84:	f103 0b01 	add.w	fp, r3, #1
9001fb88:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001fb8c:	9b06      	ldr	r3, [sp, #24]
9001fb8e:	4629      	mov	r1, r5
9001fb90:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001fb94:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001fb98:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001fb9c:	1ba4      	subs	r4, r4, r6
9001fb9e:	9b07      	ldr	r3, [sp, #28]
9001fba0:	ba3f      	rev	r7, r7
9001fba2:	9808      	ldr	r0, [sp, #32]
9001fba4:	b2a4      	uxth	r4, r4
9001fba6:	441f      	add	r7, r3
9001fba8:	f00c fdea 	bl	9002c780 <memset>
9001fbac:	f8cd b008 	str.w	fp, [sp, #8]
9001fbb0:	9504      	str	r5, [sp, #16]
9001fbb2:	f7e2 feab 	bl	9000290c <_ZN8touchgfx5paint8tearDownEv>
9001fbb6:	463e      	mov	r6, r7
9001fbb8:	e5cc      	b.n	9001f754 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001fbba:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001fbbe:	9b01      	ldr	r3, [sp, #4]
9001fbc0:	1ae4      	subs	r4, r4, r3
9001fbc2:	1ba4      	subs	r4, r4, r6
9001fbc4:	b2a4      	uxth	r4, r4
9001fbc6:	e7f4      	b.n	9001fbb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001fbc8:	4b05      	ldr	r3, [pc, #20]	@ (9001fbe0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001fbca:	6818      	ldr	r0, [r3, #0]
9001fbcc:	6803      	ldr	r3, [r0, #0]
9001fbce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fbd0:	4798      	blx	r3
9001fbd2:	b00f      	add	sp, #60	@ 0x3c
9001fbd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fbd8:	240003a0 	.word	0x240003a0
9001fbdc:	24024590 	.word	0x24024590
9001fbe0:	24024598 	.word	0x24024598
9001fbe4:	240004a0 	.word	0x240004a0

9001fbe8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001fbe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fbec:	b08f      	sub	sp, #60	@ 0x3c
9001fbee:	461c      	mov	r4, r3
9001fbf0:	9205      	str	r2, [sp, #20]
9001fbf2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001fbf6:	9100      	str	r1, [sp, #0]
9001fbf8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001fbfa:	9201      	str	r2, [sp, #4]
9001fbfc:	2a00      	cmp	r2, #0
9001fbfe:	f000 8116 	beq.w	9001fe2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001fc02:	6820      	ldr	r0, [r4, #0]
9001fc04:	aa0a      	add	r2, sp, #40	@ 0x28
9001fc06:	6861      	ldr	r1, [r4, #4]
9001fc08:	c203      	stmia	r2!, {r0, r1}
9001fc0a:	6818      	ldr	r0, [r3, #0]
9001fc0c:	aa0c      	add	r2, sp, #48	@ 0x30
9001fc0e:	6859      	ldr	r1, [r3, #4]
9001fc10:	c203      	stmia	r2!, {r0, r1}
9001fc12:	a80a      	add	r0, sp, #40	@ 0x28
9001fc14:	f7f9 fbe2 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fc18:	4621      	mov	r1, r4
9001fc1a:	a80c      	add	r0, sp, #48	@ 0x30
9001fc1c:	f7f9 fc06 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fc20:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001fc24:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001fc28:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001fc2c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001fc30:	bfdb      	ittet	le
9001fc32:	b2b3      	uxthle	r3, r6
9001fc34:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001fc38:	2301      	movgt	r3, #1
9001fc3a:	fb92 f3f3 	sdivle	r3, r2, r3
9001fc3e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001fc42:	441d      	add	r5, r3
9001fc44:	fb92 f1f3 	sdiv	r1, r2, r3
9001fc48:	fa1f fc81 	uxth.w	ip, r1
9001fc4c:	3d01      	subs	r5, #1
9001fc4e:	fb0c 2413 	mls	r4, ip, r3, r2
9001fc52:	4661      	mov	r1, ip
9001fc54:	fb14 f406 	smulbb	r4, r4, r6
9001fc58:	4404      	add	r4, r0
9001fc5a:	fb95 f5f3 	sdiv	r5, r5, r3
9001fc5e:	b2a4      	uxth	r4, r4
9001fc60:	b131      	cbz	r1, 9001fc70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001fc62:	9b05      	ldr	r3, [sp, #20]
9001fc64:	9900      	ldr	r1, [sp, #0]
9001fc66:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001fc6a:	ba1b      	rev	r3, r3
9001fc6c:	4419      	add	r1, r3
9001fc6e:	9100      	str	r1, [sp, #0]
9001fc70:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001fc74:	b2ad      	uxth	r5, r5
9001fc76:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001fc7a:	4418      	add	r0, r3
9001fc7c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001fc80:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001fc84:	00ad      	lsls	r5, r5, #2
9001fc86:	441a      	add	r2, r3
9001fc88:	4b6a      	ldr	r3, [pc, #424]	@ (9001fe34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001fc8a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001fc8e:	6818      	ldr	r0, [r3, #0]
9001fc90:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001fc94:	6803      	ldr	r3, [r0, #0]
9001fc96:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001fc98:	4798      	blx	r3
9001fc9a:	4967      	ldr	r1, [pc, #412]	@ (9001fe38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001fc9c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001fca0:	2c00      	cmp	r4, #0
9001fca2:	880b      	ldrh	r3, [r1, #0]
9001fca4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001fca8:	bf0c      	ite	eq
9001fcaa:	46c6      	moveq	lr, r8
9001fcac:	f04f 0e00 	movne.w	lr, #0
9001fcb0:	9109      	str	r1, [sp, #36]	@ 0x24
9001fcb2:	fb03 c202 	mla	r2, r3, r2, ip
9001fcb6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001fcba:	4373      	muls	r3, r6
9001fcbc:	fa1f fe8e 	uxth.w	lr, lr
9001fcc0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001fcc4:	9103      	str	r1, [sp, #12]
9001fcc6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001fcca:	9306      	str	r3, [sp, #24]
9001fccc:	1d2b      	adds	r3, r5, #4
9001fcce:	9307      	str	r3, [sp, #28]
9001fcd0:	9b01      	ldr	r3, [sp, #4]
9001fcd2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001fcd6:	2300      	movs	r3, #0
9001fcd8:	b292      	uxth	r2, r2
9001fcda:	9302      	str	r3, [sp, #8]
9001fcdc:	9204      	str	r2, [sp, #16]
9001fcde:	9a06      	ldr	r2, [sp, #24]
9001fce0:	4282      	cmp	r2, r0
9001fce2:	f240 809f 	bls.w	9001fe24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001fce6:	b963      	cbnz	r3, 9001fd02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001fce8:	9b00      	ldr	r3, [sp, #0]
9001fcea:	781a      	ldrb	r2, [r3, #0]
9001fcec:	0993      	lsrs	r3, r2, #6
9001fcee:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001fcf2:	9202      	str	r2, [sp, #8]
9001fcf4:	1e5a      	subs	r2, r3, #1
9001fcf6:	2a02      	cmp	r2, #2
9001fcf8:	d815      	bhi.n	9001fd26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001fcfa:	9a00      	ldr	r2, [sp, #0]
9001fcfc:	b29b      	uxth	r3, r3
9001fcfe:	3201      	adds	r2, #1
9001fd00:	9200      	str	r2, [sp, #0]
9001fd02:	b1b4      	cbz	r4, 9001fd32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001fd04:	429c      	cmp	r4, r3
9001fd06:	bf91      	iteee	ls
9001fd08:	1b1c      	subls	r4, r3, r4
9001fd0a:	1ae4      	subhi	r4, r4, r3
9001fd0c:	4671      	movhi	r1, lr
9001fd0e:	f04f 0a00 	movhi.w	sl, #0
9001fd12:	bf9b      	ittet	ls
9001fd14:	fa1f fa84 	uxthls.w	sl, r4
9001fd18:	2400      	movls	r4, #0
9001fd1a:	b2a4      	uxthhi	r4, r4
9001fd1c:	fa1f f188 	uxthls.w	r1, r8
9001fd20:	4653      	mov	r3, sl
9001fd22:	468e      	mov	lr, r1
9001fd24:	e7db      	b.n	9001fcde <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001fd26:	9a00      	ldr	r2, [sp, #0]
9001fd28:	9b00      	ldr	r3, [sp, #0]
9001fd2a:	3202      	adds	r2, #2
9001fd2c:	785b      	ldrb	r3, [r3, #1]
9001fd2e:	9200      	str	r2, [sp, #0]
9001fd30:	e7e7      	b.n	9001fd02 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001fd32:	2202      	movs	r2, #2
9001fd34:	9907      	ldr	r1, [sp, #28]
9001fd36:	4573      	cmp	r3, lr
9001fd38:	4615      	mov	r5, r2
9001fd3a:	9a02      	ldr	r2, [sp, #8]
9001fd3c:	bf24      	itt	cs
9001fd3e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001fd42:	46f1      	movcs	r9, lr
9001fd44:	fb15 1202 	smlabb	r2, r5, r2, r1
9001fd48:	9905      	ldr	r1, [sp, #20]
9001fd4a:	bf34      	ite	cc
9001fd4c:	4699      	movcc	r9, r3
9001fd4e:	fa1f fa8a 	uxthcs.w	sl, sl
9001fd52:	f831 c002 	ldrh.w	ip, [r1, r2]
9001fd56:	bf38      	it	cc
9001fd58:	ebae 0103 	subcc.w	r1, lr, r3
9001fd5c:	9a01      	ldr	r2, [sp, #4]
9001fd5e:	bf2e      	itee	cs
9001fd60:	4621      	movcs	r1, r4
9001fd62:	b289      	uxthcc	r1, r1
9001fd64:	46a2      	movcc	sl, r4
9001fd66:	2aff      	cmp	r2, #255	@ 0xff
9001fd68:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001fd6c:	d105      	bne.n	9001fd7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001fd6e:	4481      	add	r9, r0
9001fd70:	4581      	cmp	r9, r0
9001fd72:	d045      	beq.n	9001fe00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001fd74:	f820 cb02 	strh.w	ip, [r0], #2
9001fd78:	e7fa      	b.n	9001fd70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001fd7a:	ea4f 222c 	mov.w	r2, ip, asr #8
9001fd7e:	9d03      	ldr	r5, [sp, #12]
9001fd80:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001fd84:	4481      	add	r9, r0
9001fd86:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001fd8a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001fd8e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001fd92:	fa5f fc8c 	uxtb.w	ip, ip
9001fd96:	436a      	muls	r2, r5
9001fd98:	fb0b fb05 	mul.w	fp, fp, r5
9001fd9c:	fb0c fc05 	mul.w	ip, ip, r5
9001fda0:	9208      	str	r2, [sp, #32]
9001fda2:	4581      	cmp	r9, r0
9001fda4:	d02c      	beq.n	9001fe00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001fda6:	8802      	ldrh	r2, [r0, #0]
9001fda8:	9d04      	ldr	r5, [sp, #16]
9001fdaa:	1216      	asrs	r6, r2, #8
9001fdac:	9f04      	ldr	r7, [sp, #16]
9001fdae:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001fdb2:	fb16 f605 	smulbb	r6, r6, r5
9001fdb6:	9d08      	ldr	r5, [sp, #32]
9001fdb8:	442e      	add	r6, r5
9001fdba:	10d5      	asrs	r5, r2, #3
9001fdbc:	00d2      	lsls	r2, r2, #3
9001fdbe:	b2b6      	uxth	r6, r6
9001fdc0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001fdc4:	b2d2      	uxtb	r2, r2
9001fdc6:	fb15 f507 	smulbb	r5, r5, r7
9001fdca:	fb12 f207 	smulbb	r2, r2, r7
9001fdce:	1c77      	adds	r7, r6, #1
9001fdd0:	445d      	add	r5, fp
9001fdd2:	4462      	add	r2, ip
9001fdd4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001fdd8:	b2ad      	uxth	r5, r5
9001fdda:	b292      	uxth	r2, r2
9001fddc:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001fde0:	1c57      	adds	r7, r2, #1
9001fde2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001fde6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001fdea:	4316      	orrs	r6, r2
9001fdec:	1c6a      	adds	r2, r5, #1
9001fdee:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001fdf2:	096d      	lsrs	r5, r5, #5
9001fdf4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001fdf8:	432e      	orrs	r6, r5
9001fdfa:	f820 6b02 	strh.w	r6, [r0], #2
9001fdfe:	e7d0      	b.n	9001fda2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001fe00:	4573      	cmp	r3, lr
9001fe02:	d38d      	bcc.n	9001fd20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001fe04:	fa1f f188 	uxth.w	r1, r8
9001fe08:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001fe0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001fe0e:	1a64      	subs	r4, r4, r1
9001fe10:	881b      	ldrh	r3, [r3, #0]
9001fe12:	b2a4      	uxth	r4, r4
9001fe14:	eba3 0308 	sub.w	r3, r3, r8
9001fe18:	2c00      	cmp	r4, #0
9001fe1a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fe1e:	bf18      	it	ne
9001fe20:	2100      	movne	r1, #0
9001fe22:	e77d      	b.n	9001fd20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001fe24:	4b03      	ldr	r3, [pc, #12]	@ (9001fe34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001fe26:	6818      	ldr	r0, [r3, #0]
9001fe28:	6803      	ldr	r3, [r0, #0]
9001fe2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fe2c:	4798      	blx	r3
9001fe2e:	b00f      	add	sp, #60	@ 0x3c
9001fe30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fe34:	24024598 	.word	0x24024598
9001fe38:	24024590 	.word	0x24024590

9001fe3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001fe3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fe40:	b09f      	sub	sp, #124	@ 0x7c
9001fe42:	461d      	mov	r5, r3
9001fe44:	4604      	mov	r4, r0
9001fe46:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001fe48:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001fe4c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001fe50:	9209      	str	r2, [sp, #36]	@ 0x24
9001fe52:	2a00      	cmp	r2, #0
9001fe54:	f000 81ed 	beq.w	90020232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001fe58:	6828      	ldr	r0, [r5, #0]
9001fe5a:	aa1a      	add	r2, sp, #104	@ 0x68
9001fe5c:	6869      	ldr	r1, [r5, #4]
9001fe5e:	c203      	stmia	r2!, {r0, r1}
9001fe60:	6818      	ldr	r0, [r3, #0]
9001fe62:	aa1c      	add	r2, sp, #112	@ 0x70
9001fe64:	6859      	ldr	r1, [r3, #4]
9001fe66:	c203      	stmia	r2!, {r0, r1}
9001fe68:	a81a      	add	r0, sp, #104	@ 0x68
9001fe6a:	f7f9 fab7 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001fe6e:	4629      	mov	r1, r5
9001fe70:	a81c      	add	r0, sp, #112	@ 0x70
9001fe72:	f7f9 fadb 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fe76:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001fe7a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001fe7e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001fe82:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001fe86:	bfdb      	ittet	le
9001fe88:	b29a      	uxthle	r2, r3
9001fe8a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001fe8e:	2201      	movgt	r2, #1
9001fe90:	fb91 f2f2 	sdivle	r2, r1, r2
9001fe94:	9202      	str	r2, [sp, #8]
9001fe96:	9802      	ldr	r0, [sp, #8]
9001fe98:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001fe9c:	9902      	ldr	r1, [sp, #8]
9001fe9e:	fb92 f0f0 	sdiv	r0, r2, r0
9001fea2:	b280      	uxth	r0, r0
9001fea4:	4488      	add	r8, r1
9001fea6:	9010      	str	r0, [sp, #64]	@ 0x40
9001fea8:	f108 38ff 	add.w	r8, r8, #4294967295
9001feac:	9802      	ldr	r0, [sp, #8]
9001feae:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001feb0:	fb05 2510 	mls	r5, r5, r0, r2
9001feb4:	fb98 f8f1 	sdiv	r8, r8, r1
9001feb8:	fb15 f503 	smulbb	r5, r5, r3
9001febc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001fec0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001fec4:	f108 0801 	add.w	r8, r8, #1
9001fec8:	440d      	add	r5, r1
9001feca:	4419      	add	r1, r3
9001fecc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001fed0:	fa1f f888 	uxth.w	r8, r8
9001fed4:	441a      	add	r2, r3
9001fed6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001feda:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001fede:	b2ad      	uxth	r5, r5
9001fee0:	9304      	str	r3, [sp, #16]
9001fee2:	4b94      	ldr	r3, [pc, #592]	@ (90020134 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001fee4:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001fee8:	6818      	ldr	r0, [r3, #0]
9001feea:	6803      	ldr	r3, [r0, #0]
9001feec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001feee:	4798      	blx	r3
9001fef0:	4b91      	ldr	r3, [pc, #580]	@ (90020138 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001fef2:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001fef6:	2d00      	cmp	r5, #0
9001fef8:	881a      	ldrh	r2, [r3, #0]
9001fefa:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001fefe:	fb02 f606 	mul.w	r6, r2, r6
9001ff02:	fb02 7101 	mla	r1, r2, r1, r7
9001ff06:	9318      	str	r3, [sp, #96]	@ 0x60
9001ff08:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ff0c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001ff10:	f04f 0100 	mov.w	r1, #0
9001ff14:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001ff18:	930f      	str	r3, [sp, #60]	@ 0x3c
9001ff1a:	4b88      	ldr	r3, [pc, #544]	@ (9002013c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001ff1c:	920a      	str	r2, [sp, #40]	@ 0x28
9001ff1e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ff20:	eba3 0304 	sub.w	r3, r3, r4
9001ff24:	910d      	str	r1, [sp, #52]	@ 0x34
9001ff26:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001ff2a:	9319      	str	r3, [sp, #100]	@ 0x64
9001ff2c:	f108 0204 	add.w	r2, r8, #4
9001ff30:	9211      	str	r2, [sp, #68]	@ 0x44
9001ff32:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001ff34:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001ff38:	9215      	str	r2, [sp, #84]	@ 0x54
9001ff3a:	9a04      	ldr	r2, [sp, #16]
9001ff3c:	bf18      	it	ne
9001ff3e:	2200      	movne	r2, #0
9001ff40:	b292      	uxth	r2, r2
9001ff42:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001ff44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001ff46:	fa11 f383 	uxtah	r3, r1, r3
9001ff4a:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001ff4c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001ff50:	3304      	adds	r3, #4
9001ff52:	9306      	str	r3, [sp, #24]
9001ff54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ff56:	4283      	cmp	r3, r0
9001ff58:	f240 8166 	bls.w	90020228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001ff5c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001ff60:	f04f 0a01 	mov.w	sl, #1
9001ff64:	9902      	ldr	r1, [sp, #8]
9001ff66:	9e06      	ldr	r6, [sp, #24]
9001ff68:	46d3      	mov	fp, sl
9001ff6a:	4657      	mov	r7, sl
9001ff6c:	7836      	ldrb	r6, [r6, #0]
9001ff6e:	fbb5 f3f3 	udiv	r3, r5, r3
9001ff72:	1acb      	subs	r3, r1, r3
9001ff74:	9612      	str	r6, [sp, #72]	@ 0x48
9001ff76:	3601      	adds	r6, #1
9001ff78:	b29b      	uxth	r3, r3
9001ff7a:	9605      	str	r6, [sp, #20]
9001ff7c:	9316      	str	r3, [sp, #88]	@ 0x58
9001ff7e:	9b06      	ldr	r3, [sp, #24]
9001ff80:	7859      	ldrb	r1, [r3, #1]
9001ff82:	789b      	ldrb	r3, [r3, #2]
9001ff84:	021b      	lsls	r3, r3, #8
9001ff86:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001ff8a:	9906      	ldr	r1, [sp, #24]
9001ff8c:	78c9      	ldrb	r1, [r1, #3]
9001ff8e:	430b      	orrs	r3, r1
9001ff90:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001ff92:	4419      	add	r1, r3
9001ff94:	1c4e      	adds	r6, r1, #1
9001ff96:	7849      	ldrb	r1, [r1, #1]
9001ff98:	9603      	str	r6, [sp, #12]
9001ff9a:	0209      	lsls	r1, r1, #8
9001ff9c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001ff9e:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001ffa2:	5cf3      	ldrb	r3, [r6, r3]
9001ffa4:	4319      	orrs	r1, r3
9001ffa6:	b28b      	uxth	r3, r1
9001ffa8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001ffac:	930c      	str	r3, [sp, #48]	@ 0x30
9001ffae:	2300      	movs	r3, #0
9001ffb0:	9307      	str	r3, [sp, #28]
9001ffb2:	469c      	mov	ip, r3
9001ffb4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001ffb8:	930e      	str	r3, [sp, #56]	@ 0x38
9001ffba:	2d00      	cmp	r5, #0
9001ffbc:	d07e      	beq.n	900200bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001ffbe:	42af      	cmp	r7, r5
9001ffc0:	d26e      	bcs.n	900200a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001ffc2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001ffc4:	1bed      	subs	r5, r5, r7
9001ffc6:	9201      	str	r2, [sp, #4]
9001ffc8:	4283      	cmp	r3, r0
9001ffca:	b2ad      	uxth	r5, r5
9001ffcc:	d802      	bhi.n	9001ffd4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001ffce:	e073      	b.n	900200b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001ffd0:	2b00      	cmp	r3, #0
9001ffd2:	d15f      	bne.n	90020094 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001ffd4:	9b03      	ldr	r3, [sp, #12]
9001ffd6:	f1cb 0207 	rsb	r2, fp, #7
9001ffda:	785b      	ldrb	r3, [r3, #1]
9001ffdc:	4093      	lsls	r3, r2
9001ffde:	005b      	lsls	r3, r3, #1
9001ffe0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001ffe4:	9b03      	ldr	r3, [sp, #12]
9001ffe6:	781b      	ldrb	r3, [r3, #0]
9001ffe8:	fa43 f30b 	asr.w	r3, r3, fp
9001ffec:	b2db      	uxtb	r3, r3
9001ffee:	4313      	orrs	r3, r2
9001fff0:	f10b 0201 	add.w	r2, fp, #1
9001fff4:	fa5f fb82 	uxtb.w	fp, r2
9001fff8:	9a03      	ldr	r2, [sp, #12]
9001fffa:	b29f      	uxth	r7, r3
9001fffc:	f1bb 0f08 	cmp.w	fp, #8
90020000:	bf13      	iteet	ne
90020002:	3201      	addne	r2, #1
90020004:	3202      	addeq	r2, #2
90020006:	f04f 0b00 	moveq.w	fp, #0
9002000a:	9203      	strne	r2, [sp, #12]
9002000c:	bf08      	it	eq
9002000e:	9203      	streq	r2, [sp, #12]
90020010:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90020012:	42ba      	cmp	r2, r7
90020014:	d309      	bcc.n	9002002a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
90020016:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9002001a:	2301      	movs	r3, #1
9002001c:	9a05      	ldr	r2, [sp, #20]
9002001e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
90020022:	d30e      	bcc.n	90020042 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90020024:	469a      	mov	sl, r3
90020026:	2600      	movs	r6, #0
90020028:	e035      	b.n	90020096 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9002002a:	9b05      	ldr	r3, [sp, #20]
9002002c:	429f      	cmp	r7, r3
9002002e:	d318      	bcc.n	90020062 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
90020030:	eb04 030a 	add.w	r3, r4, sl
90020034:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
90020038:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9002003c:	f10a 0301 	add.w	r3, sl, #1
90020040:	b29b      	uxth	r3, r3
90020042:	9a05      	ldr	r2, [sp, #20]
90020044:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
90020048:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9002004c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002004e:	7116      	strb	r6, [r2, #4]
90020050:	f10a 0601 	add.w	r6, sl, #1
90020054:	80d1      	strh	r1, [r2, #6]
90020056:	7156      	strb	r6, [r2, #5]
90020058:	9a05      	ldr	r2, [sp, #20]
9002005a:	3201      	adds	r2, #1
9002005c:	b292      	uxth	r2, r2
9002005e:	9205      	str	r2, [sp, #20]
90020060:	e7e0      	b.n	90020024 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
90020062:	eb04 0387 	add.w	r3, r4, r7, lsl #2
90020066:	463a      	mov	r2, r7
90020068:	795b      	ldrb	r3, [r3, #5]
9002006a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9002006e:	4426      	add	r6, r4
90020070:	9919      	ldr	r1, [sp, #100]	@ 0x64
90020072:	eb01 0c06 	add.w	ip, r1, r6
90020076:	f1bc 0f00 	cmp.w	ip, #0
9002007a:	dd07      	ble.n	9002008c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9002007c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
90020080:	f892 c004 	ldrb.w	ip, [r2, #4]
90020084:	f806 cd01 	strb.w	ip, [r6, #-1]!
90020088:	88d2      	ldrh	r2, [r2, #6]
9002008a:	e7f1      	b.n	90020070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9002008c:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
90020090:	b29b      	uxth	r3, r3
90020092:	e7c3      	b.n	9002001c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
90020094:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
90020096:	970c      	str	r7, [sp, #48]	@ 0x30
90020098:	46b4      	mov	ip, r6
9002009a:	9a01      	ldr	r2, [sp, #4]
9002009c:	461f      	mov	r7, r3
9002009e:	e78c      	b.n	9001ffba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
900200a0:	1b7b      	subs	r3, r7, r5
900200a2:	eb0c 0605 	add.w	r6, ip, r5
900200a6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900200aa:	b29b      	uxth	r3, r3
900200ac:	b2b6      	uxth	r6, r6
900200ae:	9201      	str	r2, [sp, #4]
900200b0:	2500      	movs	r5, #0
900200b2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900200b4:	4282      	cmp	r2, r0
900200b6:	d88b      	bhi.n	9001ffd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
900200b8:	9a01      	ldr	r2, [sp, #4]
900200ba:	e74b      	b.n	9001ff54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
900200bc:	4297      	cmp	r7, r2
900200be:	d332      	bcc.n	90020126 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
900200c0:	1abb      	subs	r3, r7, r2
900200c2:	9208      	str	r2, [sp, #32]
900200c4:	9501      	str	r5, [sp, #4]
900200c6:	b29b      	uxth	r3, r3
900200c8:	9909      	ldr	r1, [sp, #36]	@ 0x24
900200ca:	29ff      	cmp	r1, #255	@ 0xff
900200cc:	9908      	ldr	r1, [sp, #32]
900200ce:	eb0c 0601 	add.w	r6, ip, r1
900200d2:	d135      	bne.n	90020140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
900200d4:	f1a0 0e02 	sub.w	lr, r0, #2
900200d8:	b2b6      	uxth	r6, r6
900200da:	45b4      	cmp	ip, r6
900200dc:	f040 808c 	bne.w	900201f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
900200e0:	9908      	ldr	r1, [sp, #32]
900200e2:	4297      	cmp	r7, r2
900200e4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900200e8:	d3e2      	bcc.n	900200b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
900200ea:	9a18      	ldr	r2, [sp, #96]	@ 0x60
900200ec:	9904      	ldr	r1, [sp, #16]
900200ee:	8812      	ldrh	r2, [r2, #0]
900200f0:	1a52      	subs	r2, r2, r1
900200f2:	9916      	ldr	r1, [sp, #88]	@ 0x58
900200f4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
900200f8:	9a07      	ldr	r2, [sp, #28]
900200fa:	3201      	adds	r2, #1
900200fc:	428a      	cmp	r2, r1
900200fe:	9207      	str	r2, [sp, #28]
90020100:	f040 8087 	bne.w	90020212 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
90020104:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
90020108:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9002010c:	9b04      	ldr	r3, [sp, #16]
9002010e:	1bed      	subs	r5, r5, r7
90020110:	b2ad      	uxth	r5, r5
90020112:	2d00      	cmp	r5, #0
90020114:	bf08      	it	eq
90020116:	461a      	moveq	r2, r3
90020118:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002011a:	bf18      	it	ne
9002011c:	2200      	movne	r2, #0
9002011e:	3301      	adds	r3, #1
90020120:	b292      	uxth	r2, r2
90020122:	930d      	str	r3, [sp, #52]	@ 0x34
90020124:	e70d      	b.n	9001ff42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
90020126:	1bd1      	subs	r1, r2, r7
90020128:	9708      	str	r7, [sp, #32]
9002012a:	b28b      	uxth	r3, r1
9002012c:	9301      	str	r3, [sp, #4]
9002012e:	462b      	mov	r3, r5
90020130:	e7ca      	b.n	900200c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
90020132:	bf00      	nop
90020134:	24024598 	.word	0x24024598
90020138:	24024590 	.word	0x24024590
9002013c:	fffff7fb 	.word	0xfffff7fb
90020140:	b2b6      	uxth	r6, r6
90020142:	900b      	str	r0, [sp, #44]	@ 0x2c
90020144:	45b4      	cmp	ip, r6
90020146:	d0cb      	beq.n	900200e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
90020148:	f10c 0101 	add.w	r1, ip, #1
9002014c:	44a4      	add	ip, r4
9002014e:	9117      	str	r1, [sp, #92]	@ 0x5c
90020150:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
90020154:	9911      	ldr	r1, [sp, #68]	@ 0x44
90020156:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9002015a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9002015c:	ea4f 2825 	mov.w	r8, r5, asr #8
90020160:	f8b1 c000 	ldrh.w	ip, [r1]
90020164:	990e      	ldr	r1, [sp, #56]	@ 0x38
90020166:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9002016a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9002016e:	ea4f 09ec 	mov.w	r9, ip, asr #3
90020172:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90020176:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002017a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9002017e:	fb1e fe01 	smulbb	lr, lr, r1
90020182:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90020184:	fa5f fc8c 	uxtb.w	ip, ip
90020188:	fb08 e801 	mla	r8, r8, r1, lr
9002018c:	ea4f 0ee5 	mov.w	lr, r5, asr #3
90020190:	990e      	ldr	r1, [sp, #56]	@ 0x38
90020192:	00ed      	lsls	r5, r5, #3
90020194:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90020198:	fa1f f888 	uxth.w	r8, r8
9002019c:	fb19 f901 	smulbb	r9, r9, r1
900201a0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900201a2:	b2ed      	uxtb	r5, r5
900201a4:	fb0e 9e01 	mla	lr, lr, r1, r9
900201a8:	990e      	ldr	r1, [sp, #56]	@ 0x38
900201aa:	fb1c fc01 	smulbb	ip, ip, r1
900201ae:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900201b0:	fa1f fe8e 	uxth.w	lr, lr
900201b4:	fb05 c501 	mla	r5, r5, r1, ip
900201b8:	f108 0c01 	add.w	ip, r8, #1
900201bc:	f10e 0901 	add.w	r9, lr, #1
900201c0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
900201c2:	b2ad      	uxth	r5, r5
900201c4:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
900201c8:	f105 0c01 	add.w	ip, r5, #1
900201cc:	eb09 291e 	add.w	r9, r9, lr, lsr #8
900201d0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
900201d4:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
900201d8:	ea4f 1959 	mov.w	r9, r9, lsr #5
900201dc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900201e0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900201e4:	ea4c 0808 	orr.w	r8, ip, r8
900201e8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
900201ec:	ea48 0809 	orr.w	r8, r8, r9
900201f0:	f821 8b02 	strh.w	r8, [r1], #2
900201f4:	910b      	str	r1, [sp, #44]	@ 0x2c
900201f6:	e7a5      	b.n	90020144 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
900201f8:	f10c 0801 	add.w	r8, ip, #1
900201fc:	44a4      	add	ip, r4
900201fe:	9911      	ldr	r1, [sp, #68]	@ 0x44
90020200:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
90020204:	fa1f fc88 	uxth.w	ip, r8
90020208:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9002020c:	f82e 5f02 	strh.w	r5, [lr, #2]!
90020210:	e763      	b.n	900200da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
90020212:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90020216:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9002021a:	1aad      	subs	r5, r5, r2
9002021c:	b2ad      	uxth	r5, r5
9002021e:	2d00      	cmp	r5, #0
90020220:	bf18      	it	ne
90020222:	2200      	movne	r2, #0
90020224:	9201      	str	r2, [sp, #4]
90020226:	e744      	b.n	900200b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
90020228:	4b03      	ldr	r3, [pc, #12]	@ (90020238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9002022a:	6818      	ldr	r0, [r3, #0]
9002022c:	6803      	ldr	r3, [r0, #0]
9002022e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020230:	4798      	blx	r3
90020232:	b01f      	add	sp, #124	@ 0x7c
90020234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020238:	24024598 	.word	0x24024598

9002023c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9002023c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020240:	b093      	sub	sp, #76	@ 0x4c
90020242:	4616      	mov	r6, r2
90020244:	460d      	mov	r5, r1
90020246:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9002024a:	9003      	str	r0, [sp, #12]
9002024c:	9201      	str	r2, [sp, #4]
9002024e:	2a00      	cmp	r2, #0
90020250:	f000 8303 	beq.w	9002085a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
90020254:	6830      	ldr	r0, [r6, #0]
90020256:	ac0e      	add	r4, sp, #56	@ 0x38
90020258:	6871      	ldr	r1, [r6, #4]
9002025a:	c403      	stmia	r4!, {r0, r1}
9002025c:	6818      	ldr	r0, [r3, #0]
9002025e:	ac10      	add	r4, sp, #64	@ 0x40
90020260:	6859      	ldr	r1, [r3, #4]
90020262:	c403      	stmia	r4!, {r0, r1}
90020264:	a80e      	add	r0, sp, #56	@ 0x38
90020266:	f7f9 f8b9 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002026a:	4631      	mov	r1, r6
9002026c:	a810      	add	r0, sp, #64	@ 0x40
9002026e:	f7f9 f8dd 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020272:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
90020276:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9002027a:	bfdb      	ittet	le
9002027c:	b293      	uxthle	r3, r2
9002027e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
90020282:	2301      	movgt	r3, #1
90020284:	fb91 f3f3 	sdivle	r3, r1, r3
90020288:	9304      	str	r3, [sp, #16]
9002028a:	f105 0308 	add.w	r3, r5, #8
9002028e:	9904      	ldr	r1, [sp, #16]
90020290:	9308      	str	r3, [sp, #32]
90020292:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
90020296:	440b      	add	r3, r1
90020298:	3b01      	subs	r3, #1
9002029a:	fb93 f3f1 	sdiv	r3, r3, r1
9002029e:	3b01      	subs	r3, #1
900202a0:	9908      	ldr	r1, [sp, #32]
900202a2:	b29b      	uxth	r3, r3
900202a4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
900202a8:	9904      	ldr	r1, [sp, #16]
900202aa:	9309      	str	r3, [sp, #36]	@ 0x24
900202ac:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
900202b0:	fb93 f0f1 	sdiv	r0, r3, r1
900202b4:	b284      	uxth	r4, r0
900202b6:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
900202ba:	9405      	str	r4, [sp, #20]
900202bc:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
900202c0:	fb05 3914 	mls	r9, r5, r4, r3
900202c4:	fb19 f902 	smulbb	r9, r9, r2
900202c8:	4489      	add	r9, r1
900202ca:	fa1f f989 	uxth.w	r9, r9
900202ce:	2d00      	cmp	r5, #0
900202d0:	d05d      	beq.n	9002038e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
900202d2:	1e6a      	subs	r2, r5, #1
900202d4:	9808      	ldr	r0, [sp, #32]
900202d6:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
900202da:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900202dc:	fa9a fa8a 	rev.w	sl, sl
900202e0:	4492      	add	sl, r2
900202e2:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
900202e6:	f04f 0600 	mov.w	r6, #0
900202ea:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
900202ee:	4411      	add	r1, r2
900202f0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
900202f4:	4413      	add	r3, r2
900202f6:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
900202fa:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
900202fe:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
90020302:	9302      	str	r3, [sp, #8]
90020304:	4bca      	ldr	r3, [pc, #808]	@ (90020630 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
90020306:	6818      	ldr	r0, [r3, #0]
90020308:	6803      	ldr	r3, [r0, #0]
9002030a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002030c:	4798      	blx	r3
9002030e:	4bc9      	ldr	r3, [pc, #804]	@ (90020634 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
90020310:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
90020314:	2100      	movs	r1, #0
90020316:	881b      	ldrh	r3, [r3, #0]
90020318:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9002031c:	fb03 2404 	mla	r4, r3, r4, r2
90020320:	2280      	movs	r2, #128	@ 0x80
90020322:	436b      	muls	r3, r5
90020324:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90020328:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002032c:	930d      	str	r3, [sp, #52]	@ 0x34
9002032e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
90020332:	fb99 f3f3 	sdiv	r3, r9, r3
90020336:	9306      	str	r3, [sp, #24]
90020338:	9b01      	ldr	r3, [sp, #4]
9002033a:	43db      	mvns	r3, r3
9002033c:	b2db      	uxtb	r3, r3
9002033e:	930a      	str	r3, [sp, #40]	@ 0x28
90020340:	9b03      	ldr	r3, [sp, #12]
90020342:	3304      	adds	r3, #4
90020344:	4618      	mov	r0, r3
90020346:	930b      	str	r3, [sp, #44]	@ 0x2c
90020348:	f00c fa1a 	bl	9002c780 <memset>
9002034c:	4bba      	ldr	r3, [pc, #744]	@ (90020638 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9002034e:	9300      	str	r3, [sp, #0]
90020350:	2300      	movs	r3, #0
90020352:	9307      	str	r3, [sp, #28]
90020354:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020356:	42a3      	cmp	r3, r4
90020358:	f240 827a 	bls.w	90020850 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9002035c:	f04f 0e07 	mov.w	lr, #7
90020360:	f1b9 0f00 	cmp.w	r9, #0
90020364:	f000 8159 	beq.w	9002061a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
90020368:	f89a 5000 	ldrb.w	r5, [sl]
9002036c:	f10a 0701 	add.w	r7, sl, #1
90020370:	b2ed      	uxtb	r5, r5
90020372:	11aa      	asrs	r2, r5, #6
90020374:	d10e      	bne.n	90020394 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
90020376:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9002037a:	9b03      	ldr	r3, [sp, #12]
9002037c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
90020380:	88ae      	ldrh	r6, [r5, #4]
90020382:	f109 39ff 	add.w	r9, r9, #4294967295
90020386:	fa1f f989 	uxth.w	r9, r9
9002038a:	46ba      	mov	sl, r7
9002038c:	e7e8      	b.n	90020360 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9002038e:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
90020392:	e7a6      	b.n	900202e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
90020394:	2a01      	cmp	r2, #1
90020396:	d129      	bne.n	900203ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
90020398:	f3c6 0304 	ubfx	r3, r6, #0, #5
9002039c:	f005 0203 	and.w	r2, r5, #3
900203a0:	2103      	movs	r1, #3
900203a2:	3b02      	subs	r3, #2
900203a4:	4413      	add	r3, r2
900203a6:	f3c5 0281 	ubfx	r2, r5, #2, #2
900203aa:	f3c5 1501 	ubfx	r5, r5, #4, #2
900203ae:	f003 031f 	and.w	r3, r3, #31
900203b2:	3a02      	subs	r2, #2
900203b4:	3d02      	subs	r5, #2
900203b6:	f363 0604 	bfi	r6, r3, #0, #5
900203ba:	eb02 1256 	add.w	r2, r2, r6, lsr #5
900203be:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
900203c2:	f362 164a 	bfi	r6, r2, #5, #6
900203c6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
900203ca:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
900203ce:	f005 051f 	and.w	r5, r5, #31
900203d2:	fb11 2205 	smlabb	r2, r1, r5, r2
900203d6:	f365 26cf 	bfi	r6, r5, #11, #5
900203da:	fb1e 2303 	smlabb	r3, lr, r3, r2
900203de:	9a03      	ldr	r2, [sp, #12]
900203e0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
900203e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900203e8:	809e      	strh	r6, [r3, #4]
900203ea:	e7ca      	b.n	90020382 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
900203ec:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
900203f0:	2a02      	cmp	r2, #2
900203f2:	b2ab      	uxth	r3, r5
900203f4:	d136      	bne.n	90020464 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
900203f6:	2101      	movs	r1, #1
900203f8:	fb12 1205 	smlabb	r2, r2, r5, r1
900203fc:	4492      	add	sl, r2
900203fe:	463a      	mov	r2, r7
90020400:	4552      	cmp	r2, sl
90020402:	d01c      	beq.n	9002043e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
90020404:	4694      	mov	ip, r2
90020406:	f04f 0b03 	mov.w	fp, #3
9002040a:	f81c 1b02 	ldrb.w	r1, [ip], #2
9002040e:	7852      	ldrb	r2, [r2, #1]
90020410:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
90020414:	f3c1 1045 	ubfx	r0, r1, #5, #6
90020418:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9002041c:	f001 021f 	and.w	r2, r1, #31
90020420:	460e      	mov	r6, r1
90020422:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90020426:	fb1b 0008 	smlabb	r0, fp, r8, r0
9002042a:	fb1e 0002 	smlabb	r0, lr, r2, r0
9002042e:	9a03      	ldr	r2, [sp, #12]
90020430:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
90020434:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90020438:	4662      	mov	r2, ip
9002043a:	8081      	strh	r1, [r0, #4]
9002043c:	e7e0      	b.n	90020400 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9002043e:	4599      	cmp	r9, r3
90020440:	d20b      	bcs.n	9002045a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
90020442:	eba5 0509 	sub.w	r5, r5, r9
90020446:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9002044a:	2d00      	cmp	r5, #0
9002044c:	f300 8208 	bgt.w	90020860 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
90020450:	f8dd 8008 	ldr.w	r8, [sp, #8]
90020454:	2301      	movs	r3, #1
90020456:	9307      	str	r3, [sp, #28]
90020458:	e00c      	b.n	90020474 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9002045a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9002045e:	eba9 0903 	sub.w	r9, r9, r3
90020462:	e790      	b.n	90020386 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
90020464:	4599      	cmp	r9, r3
90020466:	d2fa      	bcs.n	9002045e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
90020468:	eba5 0509 	sub.w	r5, r5, r9
9002046c:	2d00      	cmp	r5, #0
9002046e:	dc1d      	bgt.n	900204ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
90020470:	f8dd 8008 	ldr.w	r8, [sp, #8]
90020474:	f04f 0b00 	mov.w	fp, #0
90020478:	f1b8 0f00 	cmp.w	r8, #0
9002047c:	f340 81a0 	ble.w	900207c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
90020480:	783b      	ldrb	r3, [r7, #0]
90020482:	f107 0a01 	add.w	sl, r7, #1
90020486:	b2db      	uxtb	r3, r3
90020488:	119a      	asrs	r2, r3, #6
9002048a:	f040 80d7 	bne.w	9002063c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9002048e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
90020492:	9a03      	ldr	r2, [sp, #12]
90020494:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020498:	889e      	ldrh	r6, [r3, #4]
9002049a:	9b01      	ldr	r3, [sp, #4]
9002049c:	2bff      	cmp	r3, #255	@ 0xff
9002049e:	f040 81e8 	bne.w	90020872 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
900204a2:	8026      	strh	r6, [r4, #0]
900204a4:	f108 38ff 	add.w	r8, r8, #4294967295
900204a8:	3402      	adds	r4, #2
900204aa:	e0be      	b.n	9002062a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
900204ac:	9b02      	ldr	r3, [sp, #8]
900204ae:	9a02      	ldr	r2, [sp, #8]
900204b0:	42ab      	cmp	r3, r5
900204b2:	bfa8      	it	ge
900204b4:	462b      	movge	r3, r5
900204b6:	eba2 0803 	sub.w	r8, r2, r3
900204ba:	9a07      	ldr	r2, [sp, #28]
900204bc:	1aed      	subs	r5, r5, r3
900204be:	2a00      	cmp	r2, #0
900204c0:	d05a      	beq.n	90020578 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
900204c2:	9a01      	ldr	r2, [sp, #4]
900204c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900204c8:	2aff      	cmp	r2, #255	@ 0xff
900204ca:	d049      	beq.n	90020560 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
900204cc:	f8bd e004 	ldrh.w	lr, [sp, #4]
900204d0:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
900204d4:	42a3      	cmp	r3, r4
900204d6:	f240 80a5 	bls.w	90020624 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
900204da:	46bc      	mov	ip, r7
900204dc:	8820      	ldrh	r0, [r4, #0]
900204de:	f81c 2b02 	ldrb.w	r2, [ip], #2
900204e2:	ea4f 2a20 	mov.w	sl, r0, asr #8
900204e6:	7879      	ldrb	r1, [r7, #1]
900204e8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
900204ec:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
900204f0:	fb1a fa09 	smulbb	sl, sl, r9
900204f4:	b212      	sxth	r2, r2
900204f6:	b291      	uxth	r1, r2
900204f8:	00d2      	lsls	r2, r2, #3
900204fa:	120f      	asrs	r7, r1, #8
900204fc:	10c9      	asrs	r1, r1, #3
900204fe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90020502:	b2d2      	uxtb	r2, r2
90020504:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90020508:	fb07 a70e 	mla	r7, r7, lr, sl
9002050c:	ea4f 0ae0 	mov.w	sl, r0, asr #3
90020510:	00c0      	lsls	r0, r0, #3
90020512:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90020516:	b2bf      	uxth	r7, r7
90020518:	b2c0      	uxtb	r0, r0
9002051a:	fb1a fa09 	smulbb	sl, sl, r9
9002051e:	fb10 f009 	smulbb	r0, r0, r9
90020522:	fb01 a10e 	mla	r1, r1, lr, sl
90020526:	fb02 020e 	mla	r2, r2, lr, r0
9002052a:	1c78      	adds	r0, r7, #1
9002052c:	b289      	uxth	r1, r1
9002052e:	b292      	uxth	r2, r2
90020530:	eb00 2717 	add.w	r7, r0, r7, lsr #8
90020534:	f101 0a01 	add.w	sl, r1, #1
90020538:	1c50      	adds	r0, r2, #1
9002053a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9002053e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
90020542:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90020546:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9002054a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002054e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90020552:	4307      	orrs	r7, r0
90020554:	ea47 070a 	orr.w	r7, r7, sl
90020558:	f824 7b02 	strh.w	r7, [r4], #2
9002055c:	4667      	mov	r7, ip
9002055e:	e7b9      	b.n	900204d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
90020560:	42a3      	cmp	r3, r4
90020562:	d95f      	bls.n	90020624 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
90020564:	463a      	mov	r2, r7
90020566:	f812 1b02 	ldrb.w	r1, [r2], #2
9002056a:	7878      	ldrb	r0, [r7, #1]
9002056c:	4617      	mov	r7, r2
9002056e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
90020572:	f824 1b02 	strh.w	r1, [r4], #2
90020576:	e7f3      	b.n	90020560 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
90020578:	9901      	ldr	r1, [sp, #4]
9002057a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002057e:	b2b2      	uxth	r2, r6
90020580:	29ff      	cmp	r1, #255	@ 0xff
90020582:	d044      	beq.n	9002060e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
90020584:	ea4f 2922 	mov.w	r9, r2, asr #8
90020588:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9002058c:	ea4f 0ee2 	mov.w	lr, r2, asr #3
90020590:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
90020594:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
90020598:	4608      	mov	r0, r1
9002059a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9002059e:	fb09 f901 	mul.w	r9, r9, r1
900205a2:	fb0e fe01 	mul.w	lr, lr, r1
900205a6:	00d1      	lsls	r1, r2, #3
900205a8:	b2c9      	uxtb	r1, r1
900205aa:	4341      	muls	r1, r0
900205ac:	429c      	cmp	r4, r3
900205ae:	f4bf af61 	bcs.w	90020474 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
900205b2:	8822      	ldrh	r2, [r4, #0]
900205b4:	1210      	asrs	r0, r2, #8
900205b6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
900205ba:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900205be:	00d2      	lsls	r2, r2, #3
900205c0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
900205c4:	fb00 900a 	mla	r0, r0, sl, r9
900205c8:	b2d2      	uxtb	r2, r2
900205ca:	fb0c ec0a 	mla	ip, ip, sl, lr
900205ce:	b280      	uxth	r0, r0
900205d0:	fb02 120a 	mla	r2, r2, sl, r1
900205d4:	fa1f fc8c 	uxth.w	ip, ip
900205d8:	b292      	uxth	r2, r2
900205da:	f100 0b01 	add.w	fp, r0, #1
900205de:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
900205e2:	1c50      	adds	r0, r2, #1
900205e4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900205e8:	f10c 0201 	add.w	r2, ip, #1
900205ec:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
900205f0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
900205f4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900205f8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900205fc:	ea40 0b0b 	orr.w	fp, r0, fp
90020600:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90020604:	ea4b 0b0c 	orr.w	fp, fp, ip
90020608:	f824 bb02 	strh.w	fp, [r4], #2
9002060c:	e7ce      	b.n	900205ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9002060e:	429c      	cmp	r4, r3
90020610:	f4bf af30 	bcs.w	90020474 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
90020614:	f824 2b02 	strh.w	r2, [r4], #2
90020618:	e7f9      	b.n	9002060e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9002061a:	f8dd 8008 	ldr.w	r8, [sp, #8]
9002061e:	4657      	mov	r7, sl
90020620:	464d      	mov	r5, r9
90020622:	e727      	b.n	90020474 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
90020624:	2300      	movs	r3, #0
90020626:	e716      	b.n	90020456 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
90020628:	44bb      	add	fp, r7
9002062a:	4657      	mov	r7, sl
9002062c:	e724      	b.n	90020478 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9002062e:	bf00      	nop
90020630:	24024598 	.word	0x24024598
90020634:	24024590 	.word	0x24024590
90020638:	240003a0 	.word	0x240003a0
9002063c:	2a01      	cmp	r2, #1
9002063e:	d12a      	bne.n	90020696 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
90020640:	f3c6 0104 	ubfx	r1, r6, #0, #5
90020644:	f003 0203 	and.w	r2, r3, #3
90020648:	f3c3 0081 	ubfx	r0, r3, #2, #2
9002064c:	f3c3 1301 	ubfx	r3, r3, #4, #2
90020650:	3902      	subs	r1, #2
90020652:	3802      	subs	r0, #2
90020654:	3b02      	subs	r3, #2
90020656:	4411      	add	r1, r2
90020658:	f001 011f 	and.w	r1, r1, #31
9002065c:	f361 0604 	bfi	r6, r1, #0, #5
90020660:	eb00 1056 	add.w	r0, r0, r6, lsr #5
90020664:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
90020668:	f360 164a 	bfi	r6, r0, #5, #6
9002066c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
90020670:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
90020674:	f002 031f 	and.w	r3, r2, #31
90020678:	2203      	movs	r2, #3
9002067a:	f363 26cf 	bfi	r6, r3, #11, #5
9002067e:	fb12 0303 	smlabb	r3, r2, r3, r0
90020682:	2207      	movs	r2, #7
90020684:	fb12 3301 	smlabb	r3, r2, r1, r3
90020688:	9a03      	ldr	r2, [sp, #12]
9002068a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9002068e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90020692:	809e      	strh	r6, [r3, #4]
90020694:	e701      	b.n	9002049a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
90020696:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9002069a:	4647      	mov	r7, r8
9002069c:	45a8      	cmp	r8, r5
9002069e:	bfa8      	it	ge
900206a0:	462f      	movge	r7, r5
900206a2:	2a02      	cmp	r2, #2
900206a4:	d154      	bne.n	90020750 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
900206a6:	9b01      	ldr	r3, [sp, #4]
900206a8:	2bff      	cmp	r3, #255	@ 0xff
900206aa:	d01a      	beq.n	900206e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
900206ac:	eb0b 0307 	add.w	r3, fp, r7
900206b0:	2b40      	cmp	r3, #64	@ 0x40
900206b2:	dd16      	ble.n	900206e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
900206b4:	ea4f 094b 	mov.w	r9, fp, lsl #1
900206b8:	9800      	ldr	r0, [sp, #0]
900206ba:	4649      	mov	r1, r9
900206bc:	f7e2 f930 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
900206c0:	465a      	mov	r2, fp
900206c2:	9b01      	ldr	r3, [sp, #4]
900206c4:	4620      	mov	r0, r4
900206c6:	9900      	ldr	r1, [sp, #0]
900206c8:	444c      	add	r4, r9
900206ca:	f7e2 f96f 	bl	900029ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
900206ce:	9b00      	ldr	r3, [sp, #0]
900206d0:	f04f 0b00 	mov.w	fp, #0
900206d4:	461a      	mov	r2, r3
900206d6:	4b6a      	ldr	r3, [pc, #424]	@ (90020880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
900206d8:	429a      	cmp	r2, r3
900206da:	bf0c      	ite	eq
900206dc:	4b69      	ldreq	r3, [pc, #420]	@ (90020884 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
900206de:	4b68      	ldrne	r3, [pc, #416]	@ (90020880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
900206e0:	9300      	str	r3, [sp, #0]
900206e2:	4652      	mov	r2, sl
900206e4:	2100      	movs	r1, #0
900206e6:	42a9      	cmp	r1, r5
900206e8:	da2c      	bge.n	90020744 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
900206ea:	4694      	mov	ip, r2
900206ec:	f04f 0903 	mov.w	r9, #3
900206f0:	42b9      	cmp	r1, r7
900206f2:	f81c 3b02 	ldrb.w	r3, [ip], #2
900206f6:	7852      	ldrb	r2, [r2, #1]
900206f8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
900206fc:	f3c3 1045 	ubfx	r0, r3, #5, #6
90020700:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
90020704:	f003 021f 	and.w	r2, r3, #31
90020708:	461e      	mov	r6, r3
9002070a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9002070e:	fb19 000e 	smlabb	r0, r9, lr, r0
90020712:	f04f 0e07 	mov.w	lr, #7
90020716:	fb1e 0002 	smlabb	r0, lr, r2, r0
9002071a:	9a03      	ldr	r2, [sp, #12]
9002071c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
90020720:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90020724:	8083      	strh	r3, [r0, #4]
90020726:	da0a      	bge.n	9002073e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
90020728:	9a01      	ldr	r2, [sp, #4]
9002072a:	2aff      	cmp	r2, #255	@ 0xff
9002072c:	bf13      	iteet	ne
9002072e:	9a00      	ldrne	r2, [sp, #0]
90020730:	8023      	strheq	r3, [r4, #0]
90020732:	3402      	addeq	r4, #2
90020734:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
90020738:	bf18      	it	ne
9002073a:	f10b 0b01 	addne.w	fp, fp, #1
9002073e:	3101      	adds	r1, #1
90020740:	4662      	mov	r2, ip
90020742:	e7d0      	b.n	900206e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
90020744:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
90020748:	eba8 0807 	sub.w	r8, r8, r7
9002074c:	1bed      	subs	r5, r5, r7
9002074e:	e76c      	b.n	9002062a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
90020750:	9b01      	ldr	r3, [sp, #4]
90020752:	eba8 0807 	sub.w	r8, r8, r7
90020756:	1bed      	subs	r5, r5, r7
90020758:	fa1f f986 	uxth.w	r9, r6
9002075c:	2bff      	cmp	r3, #255	@ 0xff
9002075e:	d027      	beq.n	900207b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
90020760:	eb0b 0307 	add.w	r3, fp, r7
90020764:	2b40      	cmp	r3, #64	@ 0x40
90020766:	dd18      	ble.n	9002079a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
90020768:	ea4f 034b 	mov.w	r3, fp, lsl #1
9002076c:	9800      	ldr	r0, [sp, #0]
9002076e:	4619      	mov	r1, r3
90020770:	930c      	str	r3, [sp, #48]	@ 0x30
90020772:	f7e2 f8d5 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
90020776:	465a      	mov	r2, fp
90020778:	9b01      	ldr	r3, [sp, #4]
9002077a:	4620      	mov	r0, r4
9002077c:	9900      	ldr	r1, [sp, #0]
9002077e:	f04f 0b00 	mov.w	fp, #0
90020782:	f7e2 f913 	bl	900029ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
90020786:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020788:	441c      	add	r4, r3
9002078a:	9b00      	ldr	r3, [sp, #0]
9002078c:	461a      	mov	r2, r3
9002078e:	4b3c      	ldr	r3, [pc, #240]	@ (90020880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
90020790:	429a      	cmp	r2, r3
90020792:	bf0c      	ite	eq
90020794:	4b3b      	ldreq	r3, [pc, #236]	@ (90020884 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
90020796:	4b3a      	ldrne	r3, [pc, #232]	@ (90020880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
90020798:	9300      	str	r3, [sp, #0]
9002079a:	9b00      	ldr	r3, [sp, #0]
9002079c:	eb03 024b 	add.w	r2, r3, fp, lsl #1
900207a0:	463b      	mov	r3, r7
900207a2:	2b00      	cmp	r3, #0
900207a4:	f43f af40 	beq.w	90020628 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
900207a8:	f822 9b02 	strh.w	r9, [r2], #2
900207ac:	3b01      	subs	r3, #1
900207ae:	e7f8      	b.n	900207a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
900207b0:	eb04 0747 	add.w	r7, r4, r7, lsl #1
900207b4:	42a7      	cmp	r7, r4
900207b6:	f67f af38 	bls.w	9002062a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
900207ba:	f824 9b02 	strh.w	r9, [r4], #2
900207be:	e7f9      	b.n	900207b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
900207c0:	f1bb 0f00 	cmp.w	fp, #0
900207c4:	d00c      	beq.n	900207e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
900207c6:	ea4f 084b 	mov.w	r8, fp, lsl #1
900207ca:	9800      	ldr	r0, [sp, #0]
900207cc:	4641      	mov	r1, r8
900207ce:	f7e2 f8a7 	bl	90002920 <_ZN8touchgfx5paint9flushLineEPmi>
900207d2:	4620      	mov	r0, r4
900207d4:	4444      	add	r4, r8
900207d6:	9b01      	ldr	r3, [sp, #4]
900207d8:	465a      	mov	r2, fp
900207da:	9900      	ldr	r1, [sp, #0]
900207dc:	f7e2 f8e6 	bl	900029ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
900207e0:	4b29      	ldr	r3, [pc, #164]	@ (90020888 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
900207e2:	9a02      	ldr	r2, [sp, #8]
900207e4:	881b      	ldrh	r3, [r3, #0]
900207e6:	1a9b      	subs	r3, r3, r2
900207e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900207ec:	9b06      	ldr	r3, [sp, #24]
900207ee:	3301      	adds	r3, #1
900207f0:	9306      	str	r3, [sp, #24]
900207f2:	9a06      	ldr	r2, [sp, #24]
900207f4:	9b04      	ldr	r3, [sp, #16]
900207f6:	4293      	cmp	r3, r2
900207f8:	d120      	bne.n	9002083c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
900207fa:	9b05      	ldr	r3, [sp, #20]
900207fc:	2100      	movs	r1, #0
900207fe:	9a05      	ldr	r2, [sp, #20]
90020800:	f04f 0600 	mov.w	r6, #0
90020804:	f103 0801 	add.w	r8, r3, #1
90020808:	9b08      	ldr	r3, [sp, #32]
9002080a:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9002080e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
90020812:	2280      	movs	r2, #128	@ 0x80
90020814:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90020818:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002081a:	ba3f      	rev	r7, r7
9002081c:	eba9 0905 	sub.w	r9, r9, r5
90020820:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020822:	441f      	add	r7, r3
90020824:	f00b ffac 	bl	9002c780 <memset>
90020828:	fa1f f989 	uxth.w	r9, r9
9002082c:	2300      	movs	r3, #0
9002082e:	f8cd 8014 	str.w	r8, [sp, #20]
90020832:	9306      	str	r3, [sp, #24]
90020834:	f7e2 f86a 	bl	9000290c <_ZN8touchgfx5paint8tearDownEv>
90020838:	46ba      	mov	sl, r7
9002083a:	e58b      	b.n	90020354 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9002083c:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
90020840:	9b02      	ldr	r3, [sp, #8]
90020842:	eba9 0903 	sub.w	r9, r9, r3
90020846:	eba9 0505 	sub.w	r5, r9, r5
9002084a:	fa1f f985 	uxth.w	r9, r5
9002084e:	e7f1      	b.n	90020834 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
90020850:	4b0e      	ldr	r3, [pc, #56]	@ (9002088c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
90020852:	6818      	ldr	r0, [r3, #0]
90020854:	6803      	ldr	r3, [r0, #0]
90020856:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020858:	4798      	blx	r3
9002085a:	b013      	add	sp, #76	@ 0x4c
9002085c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020860:	9b02      	ldr	r3, [sp, #8]
90020862:	9a02      	ldr	r2, [sp, #8]
90020864:	42ab      	cmp	r3, r5
90020866:	bfa8      	it	ge
90020868:	462b      	movge	r3, r5
9002086a:	eba2 0803 	sub.w	r8, r2, r3
9002086e:	1aed      	subs	r5, r5, r3
90020870:	e627      	b.n	900204c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
90020872:	f108 38ff 	add.w	r8, r8, #4294967295
90020876:	fa1f f986 	uxth.w	r9, r6
9002087a:	2500      	movs	r5, #0
9002087c:	2701      	movs	r7, #1
9002087e:	e76f      	b.n	90020760 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
90020880:	240003a0 	.word	0x240003a0
90020884:	240004a0 	.word	0x240004a0
90020888:	24024590 	.word	0x24024590
9002088c:	24024598 	.word	0x24024598

90020890 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90020890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020894:	b08f      	sub	sp, #60	@ 0x3c
90020896:	461c      	mov	r4, r3
90020898:	460f      	mov	r7, r1
9002089a:	9203      	str	r2, [sp, #12]
9002089c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
900208a0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900208a2:	9202      	str	r2, [sp, #8]
900208a4:	2a00      	cmp	r2, #0
900208a6:	f000 8128 	beq.w	90020afa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
900208aa:	6820      	ldr	r0, [r4, #0]
900208ac:	aa0a      	add	r2, sp, #40	@ 0x28
900208ae:	6861      	ldr	r1, [r4, #4]
900208b0:	c203      	stmia	r2!, {r0, r1}
900208b2:	6818      	ldr	r0, [r3, #0]
900208b4:	aa0c      	add	r2, sp, #48	@ 0x30
900208b6:	6859      	ldr	r1, [r3, #4]
900208b8:	c203      	stmia	r2!, {r0, r1}
900208ba:	a80a      	add	r0, sp, #40	@ 0x28
900208bc:	f7f8 fd8e 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900208c0:	4621      	mov	r1, r4
900208c2:	a80c      	add	r0, sp, #48	@ 0x30
900208c4:	f7f8 fdb2 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900208c8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
900208cc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
900208d0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
900208d4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
900208d8:	bfdb      	ittet	le
900208da:	b2b3      	uxthle	r3, r6
900208dc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
900208e0:	2301      	movgt	r3, #1
900208e2:	fb92 f3f3 	sdivle	r3, r2, r3
900208e6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
900208ea:	441d      	add	r5, r3
900208ec:	fb92 f1f3 	sdiv	r1, r2, r3
900208f0:	fa1f fc81 	uxth.w	ip, r1
900208f4:	3d01      	subs	r5, #1
900208f6:	fb0c 2413 	mls	r4, ip, r3, r2
900208fa:	4661      	mov	r1, ip
900208fc:	fb14 f406 	smulbb	r4, r4, r6
90020900:	4404      	add	r4, r0
90020902:	fb95 f5f3 	sdiv	r5, r5, r3
90020906:	b2a4      	uxth	r4, r4
90020908:	b121      	cbz	r1, 90020914 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9002090a:	9b03      	ldr	r3, [sp, #12]
9002090c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
90020910:	ba1b      	rev	r3, r3
90020912:	441f      	add	r7, r3
90020914:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90020918:	b2ad      	uxth	r5, r5
9002091a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9002091e:	4418      	add	r0, r3
90020920:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90020924:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90020928:	00ad      	lsls	r5, r5, #2
9002092a:	441a      	add	r2, r3
9002092c:	4b74      	ldr	r3, [pc, #464]	@ (90020b00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9002092e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90020932:	6818      	ldr	r0, [r3, #0]
90020934:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90020938:	6803      	ldr	r3, [r0, #0]
9002093a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002093c:	4798      	blx	r3
9002093e:	4a71      	ldr	r2, [pc, #452]	@ (90020b04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
90020940:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90020944:	2c00      	cmp	r4, #0
90020946:	8813      	ldrh	r3, [r2, #0]
90020948:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9002094c:	bf0c      	ite	eq
9002094e:	46c8      	moveq	r8, r9
90020950:	f04f 0800 	movne.w	r8, #0
90020954:	9209      	str	r2, [sp, #36]	@ 0x24
90020956:	fb03 c101 	mla	r1, r3, r1, ip
9002095a:	4373      	muls	r3, r6
9002095c:	fa1f f888 	uxth.w	r8, r8
90020960:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90020964:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020968:	9304      	str	r3, [sp, #16]
9002096a:	1d2b      	adds	r3, r5, #4
9002096c:	9305      	str	r3, [sp, #20]
9002096e:	2300      	movs	r3, #0
90020970:	9301      	str	r3, [sp, #4]
90020972:	9a04      	ldr	r2, [sp, #16]
90020974:	4282      	cmp	r2, r0
90020976:	f240 80bb 	bls.w	90020af0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9002097a:	b95b      	cbnz	r3, 90020994 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9002097c:	783a      	ldrb	r2, [r7, #0]
9002097e:	0993      	lsrs	r3, r2, #6
90020980:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
90020984:	9201      	str	r2, [sp, #4]
90020986:	1e5a      	subs	r2, r3, #1
90020988:	2a02      	cmp	r2, #2
9002098a:	bf8d      	iteet	hi
9002098c:	787b      	ldrbhi	r3, [r7, #1]
9002098e:	3701      	addls	r7, #1
90020990:	b29b      	uxthls	r3, r3
90020992:	3702      	addhi	r7, #2
90020994:	b184      	cbz	r4, 900209b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
90020996:	429c      	cmp	r4, r3
90020998:	bf91      	iteee	ls
9002099a:	1b1c      	subls	r4, r3, r4
9002099c:	1ae4      	subhi	r4, r4, r3
9002099e:	46c4      	movhi	ip, r8
900209a0:	f04f 0a00 	movhi.w	sl, #0
900209a4:	bf9b      	ittet	ls
900209a6:	fa1f fa84 	uxthls.w	sl, r4
900209aa:	2400      	movls	r4, #0
900209ac:	b2a4      	uxthhi	r4, r4
900209ae:	fa1f fc89 	uxthls.w	ip, r9
900209b2:	4653      	mov	r3, sl
900209b4:	46e0      	mov	r8, ip
900209b6:	e7dc      	b.n	90020972 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
900209b8:	2204      	movs	r2, #4
900209ba:	9905      	ldr	r1, [sp, #20]
900209bc:	4543      	cmp	r3, r8
900209be:	4615      	mov	r5, r2
900209c0:	9a01      	ldr	r2, [sp, #4]
900209c2:	bf24      	itt	cs
900209c4:	eba3 0a08 	subcs.w	sl, r3, r8
900209c8:	46c6      	movcs	lr, r8
900209ca:	fb15 1202 	smlabb	r2, r5, r2, r1
900209ce:	9903      	ldr	r1, [sp, #12]
900209d0:	bf3c      	itt	cc
900209d2:	eba8 0c03 	subcc.w	ip, r8, r3
900209d6:	469e      	movcc	lr, r3
900209d8:	588a      	ldr	r2, [r1, r2]
900209da:	bf26      	itte	cs
900209dc:	fa1f fa8a 	uxthcs.w	sl, sl
900209e0:	46a4      	movcs	ip, r4
900209e2:	fa1f fc8c 	uxthcc.w	ip, ip
900209e6:	ea4f 6112 	mov.w	r1, r2, lsr #24
900209ea:	bf38      	it	cc
900209ec:	46a2      	movcc	sl, r4
900209ee:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
900209f2:	2900      	cmp	r1, #0
900209f4:	d066      	beq.n	90020ac4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
900209f6:	29ff      	cmp	r1, #255	@ 0xff
900209f8:	ea4f 2612 	mov.w	r6, r2, lsr #8
900209fc:	d114      	bne.n	90020a28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
900209fe:	9d02      	ldr	r5, [sp, #8]
90020a00:	2dff      	cmp	r5, #255	@ 0xff
90020a02:	d111      	bne.n	90020a28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
90020a04:	0951      	lsrs	r1, r2, #5
90020a06:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
90020a0a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90020a0e:	4486      	add	lr, r0
90020a10:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90020a14:	f026 0607 	bic.w	r6, r6, #7
90020a18:	430e      	orrs	r6, r1
90020a1a:	4316      	orrs	r6, r2
90020a1c:	b2b6      	uxth	r6, r6
90020a1e:	4586      	cmp	lr, r0
90020a20:	d051      	beq.n	90020ac6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
90020a22:	f820 6b02 	strh.w	r6, [r0], #2
90020a26:	e7fa      	b.n	90020a1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
90020a28:	9d02      	ldr	r5, [sp, #8]
90020a2a:	b2f6      	uxtb	r6, r6
90020a2c:	4486      	add	lr, r0
90020a2e:	4369      	muls	r1, r5
90020a30:	1c4d      	adds	r5, r1, #1
90020a32:	eb05 2521 	add.w	r5, r5, r1, asr #8
90020a36:	f3c2 4107 	ubfx	r1, r2, #16, #8
90020a3a:	b2d2      	uxtb	r2, r2
90020a3c:	122d      	asrs	r5, r5, #8
90020a3e:	ea6f 0b05 	mvn.w	fp, r5
90020a42:	b2ad      	uxth	r5, r5
90020a44:	fb11 f105 	smulbb	r1, r1, r5
90020a48:	fa5f fb8b 	uxtb.w	fp, fp
90020a4c:	fb16 f605 	smulbb	r6, r6, r5
90020a50:	fb12 f205 	smulbb	r2, r2, r5
90020a54:	b289      	uxth	r1, r1
90020a56:	b2b6      	uxth	r6, r6
90020a58:	b292      	uxth	r2, r2
90020a5a:	9106      	str	r1, [sp, #24]
90020a5c:	9607      	str	r6, [sp, #28]
90020a5e:	9208      	str	r2, [sp, #32]
90020a60:	4586      	cmp	lr, r0
90020a62:	d030      	beq.n	90020ac6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
90020a64:	8802      	ldrh	r2, [r0, #0]
90020a66:	9906      	ldr	r1, [sp, #24]
90020a68:	1216      	asrs	r6, r2, #8
90020a6a:	10d5      	asrs	r5, r2, #3
90020a6c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90020a70:	00d2      	lsls	r2, r2, #3
90020a72:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90020a76:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90020a7a:	b2d2      	uxtb	r2, r2
90020a7c:	fb06 160b 	mla	r6, r6, fp, r1
90020a80:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90020a84:	9907      	ldr	r1, [sp, #28]
90020a86:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020a8a:	b2b6      	uxth	r6, r6
90020a8c:	fb05 150b 	mla	r5, r5, fp, r1
90020a90:	9908      	ldr	r1, [sp, #32]
90020a92:	fb02 120b 	mla	r2, r2, fp, r1
90020a96:	1c71      	adds	r1, r6, #1
90020a98:	b2ad      	uxth	r5, r5
90020a9a:	b292      	uxth	r2, r2
90020a9c:	eb01 2616 	add.w	r6, r1, r6, lsr #8
90020aa0:	1c51      	adds	r1, r2, #1
90020aa2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90020aa6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90020aaa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020aae:	4316      	orrs	r6, r2
90020ab0:	1c6a      	adds	r2, r5, #1
90020ab2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
90020ab6:	096d      	lsrs	r5, r5, #5
90020ab8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90020abc:	432e      	orrs	r6, r5
90020abe:	f820 6b02 	strh.w	r6, [r0], #2
90020ac2:	e7cd      	b.n	90020a60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
90020ac4:	4470      	add	r0, lr
90020ac6:	4543      	cmp	r3, r8
90020ac8:	f4ff af73 	bcc.w	900209b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90020acc:	fa1f fc89 	uxth.w	ip, r9
90020ad0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
90020ad4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020ad6:	eba4 040c 	sub.w	r4, r4, ip
90020ada:	881b      	ldrh	r3, [r3, #0]
90020adc:	b2a4      	uxth	r4, r4
90020ade:	eba3 0309 	sub.w	r3, r3, r9
90020ae2:	2c00      	cmp	r4, #0
90020ae4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020ae8:	bf18      	it	ne
90020aea:	f04f 0c00 	movne.w	ip, #0
90020aee:	e760      	b.n	900209b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90020af0:	4b03      	ldr	r3, [pc, #12]	@ (90020b00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
90020af2:	6818      	ldr	r0, [r3, #0]
90020af4:	6803      	ldr	r3, [r0, #0]
90020af6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020af8:	4798      	blx	r3
90020afa:	b00f      	add	sp, #60	@ 0x3c
90020afc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020b00:	24024598 	.word	0x24024598
90020b04:	24024590 	.word	0x24024590

90020b08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90020b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020b0c:	b093      	sub	sp, #76	@ 0x4c
90020b0e:	461c      	mov	r4, r3
90020b10:	9205      	str	r2, [sp, #20]
90020b12:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
90020b16:	9101      	str	r1, [sp, #4]
90020b18:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90020b1a:	9202      	str	r2, [sp, #8]
90020b1c:	2a00      	cmp	r2, #0
90020b1e:	f000 812e 	beq.w	90020d7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90020b22:	6820      	ldr	r0, [r4, #0]
90020b24:	aa0e      	add	r2, sp, #56	@ 0x38
90020b26:	6861      	ldr	r1, [r4, #4]
90020b28:	c203      	stmia	r2!, {r0, r1}
90020b2a:	6818      	ldr	r0, [r3, #0]
90020b2c:	aa10      	add	r2, sp, #64	@ 0x40
90020b2e:	6859      	ldr	r1, [r3, #4]
90020b30:	c203      	stmia	r2!, {r0, r1}
90020b32:	a80e      	add	r0, sp, #56	@ 0x38
90020b34:	f7f8 fc52 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020b38:	4621      	mov	r1, r4
90020b3a:	a810      	add	r0, sp, #64	@ 0x40
90020b3c:	f7f8 fc76 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020b40:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
90020b44:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
90020b48:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
90020b4c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
90020b50:	bfdb      	ittet	le
90020b52:	b2b3      	uxthle	r3, r6
90020b54:	f44f 6280 	movle.w	r2, #1024	@ 0x400
90020b58:	2301      	movgt	r3, #1
90020b5a:	fb92 f3f3 	sdivle	r3, r2, r3
90020b5e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90020b62:	441d      	add	r5, r3
90020b64:	fb92 f1f3 	sdiv	r1, r2, r3
90020b68:	fa1f fc81 	uxth.w	ip, r1
90020b6c:	3d01      	subs	r5, #1
90020b6e:	fb0c 2413 	mls	r4, ip, r3, r2
90020b72:	4661      	mov	r1, ip
90020b74:	fb14 f406 	smulbb	r4, r4, r6
90020b78:	4404      	add	r4, r0
90020b7a:	fb95 f5f3 	sdiv	r5, r5, r3
90020b7e:	b2a4      	uxth	r4, r4
90020b80:	b131      	cbz	r1, 90020b90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
90020b82:	9b05      	ldr	r3, [sp, #20]
90020b84:	9901      	ldr	r1, [sp, #4]
90020b86:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
90020b8a:	ba1b      	rev	r3, r3
90020b8c:	4419      	add	r1, r3
90020b8e:	9101      	str	r1, [sp, #4]
90020b90:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90020b94:	b2ad      	uxth	r5, r5
90020b96:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
90020b9a:	4418      	add	r0, r3
90020b9c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
90020ba0:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
90020ba4:	00ad      	lsls	r5, r5, #2
90020ba6:	441a      	add	r2, r3
90020ba8:	4b76      	ldr	r3, [pc, #472]	@ (90020d84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
90020baa:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
90020bae:	6818      	ldr	r0, [r3, #0]
90020bb0:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
90020bb4:	6803      	ldr	r3, [r0, #0]
90020bb6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020bb8:	4798      	blx	r3
90020bba:	4973      	ldr	r1, [pc, #460]	@ (90020d88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
90020bbc:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
90020bc0:	2c00      	cmp	r4, #0
90020bc2:	880b      	ldrh	r3, [r1, #0]
90020bc4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90020bc8:	910d      	str	r1, [sp, #52]	@ 0x34
90020bca:	fb03 c202 	mla	r2, r3, r2, ip
90020bce:	bf08      	it	eq
90020bd0:	46dc      	moveq	ip, fp
90020bd2:	fb03 f306 	mul.w	r3, r3, r6
90020bd6:	bf18      	it	ne
90020bd8:	f04f 0c00 	movne.w	ip, #0
90020bdc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90020be0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90020be4:	fa1f fc8c 	uxth.w	ip, ip
90020be8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90020bec:	9106      	str	r1, [sp, #24]
90020bee:	9308      	str	r3, [sp, #32]
90020bf0:	1d2b      	adds	r3, r5, #4
90020bf2:	9309      	str	r3, [sp, #36]	@ 0x24
90020bf4:	9b02      	ldr	r3, [sp, #8]
90020bf6:	43da      	mvns	r2, r3
90020bf8:	2300      	movs	r3, #0
90020bfa:	b2d2      	uxtb	r2, r2
90020bfc:	9303      	str	r3, [sp, #12]
90020bfe:	9207      	str	r2, [sp, #28]
90020c00:	9a08      	ldr	r2, [sp, #32]
90020c02:	4282      	cmp	r2, r0
90020c04:	f240 80b6 	bls.w	90020d74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
90020c08:	b963      	cbnz	r3, 90020c24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
90020c0a:	9b01      	ldr	r3, [sp, #4]
90020c0c:	781a      	ldrb	r2, [r3, #0]
90020c0e:	0993      	lsrs	r3, r2, #6
90020c10:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
90020c14:	9203      	str	r2, [sp, #12]
90020c16:	1e5a      	subs	r2, r3, #1
90020c18:	2a02      	cmp	r2, #2
90020c1a:	d815      	bhi.n	90020c48 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
90020c1c:	9a01      	ldr	r2, [sp, #4]
90020c1e:	b29b      	uxth	r3, r3
90020c20:	3201      	adds	r2, #1
90020c22:	9201      	str	r2, [sp, #4]
90020c24:	b1b4      	cbz	r4, 90020c54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
90020c26:	429c      	cmp	r4, r3
90020c28:	bf91      	iteee	ls
90020c2a:	1b1c      	subls	r4, r3, r4
90020c2c:	1ae4      	subhi	r4, r4, r3
90020c2e:	4666      	movhi	r6, ip
90020c30:	f04f 0800 	movhi.w	r8, #0
90020c34:	bf9b      	ittet	ls
90020c36:	fa1f f884 	uxthls.w	r8, r4
90020c3a:	2400      	movls	r4, #0
90020c3c:	b2a4      	uxthhi	r4, r4
90020c3e:	fa1f f68b 	uxthls.w	r6, fp
90020c42:	4643      	mov	r3, r8
90020c44:	46b4      	mov	ip, r6
90020c46:	e7db      	b.n	90020c00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
90020c48:	9a01      	ldr	r2, [sp, #4]
90020c4a:	9b01      	ldr	r3, [sp, #4]
90020c4c:	3202      	adds	r2, #2
90020c4e:	785b      	ldrb	r3, [r3, #1]
90020c50:	9201      	str	r2, [sp, #4]
90020c52:	e7e7      	b.n	90020c24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
90020c54:	2203      	movs	r2, #3
90020c56:	9909      	ldr	r1, [sp, #36]	@ 0x24
90020c58:	4563      	cmp	r3, ip
90020c5a:	4615      	mov	r5, r2
90020c5c:	9a03      	ldr	r2, [sp, #12]
90020c5e:	bf2c      	ite	cs
90020c60:	eba3 080c 	subcs.w	r8, r3, ip
90020c64:	ebac 0603 	subcc.w	r6, ip, r3
90020c68:	fb15 1202 	smlabb	r2, r5, r2, r1
90020c6c:	9905      	ldr	r1, [sp, #20]
90020c6e:	bf24      	itt	cs
90020c70:	fa1f f888 	uxthcs.w	r8, r8
90020c74:	46e1      	movcs	r9, ip
90020c76:	eb01 0502 	add.w	r5, r1, r2
90020c7a:	9902      	ldr	r1, [sp, #8]
90020c7c:	bf2f      	iteee	cs
90020c7e:	4626      	movcs	r6, r4
90020c80:	b2b6      	uxthcc	r6, r6
90020c82:	4699      	movcc	r9, r3
90020c84:	46a0      	movcc	r8, r4
90020c86:	29ff      	cmp	r1, #255	@ 0xff
90020c88:	d04a      	beq.n	90020d20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
90020c8a:	9f06      	ldr	r7, [sp, #24]
90020c8c:	46ca      	mov	sl, r9
90020c8e:	78a9      	ldrb	r1, [r5, #2]
90020c90:	9004      	str	r0, [sp, #16]
90020c92:	4379      	muls	r1, r7
90020c94:	910a      	str	r1, [sp, #40]	@ 0x28
90020c96:	7869      	ldrb	r1, [r5, #1]
90020c98:	4379      	muls	r1, r7
90020c9a:	910b      	str	r1, [sp, #44]	@ 0x2c
90020c9c:	9905      	ldr	r1, [sp, #20]
90020c9e:	5c8a      	ldrb	r2, [r1, r2]
90020ca0:	437a      	muls	r2, r7
90020ca2:	920c      	str	r2, [sp, #48]	@ 0x30
90020ca4:	f1ba 0f00 	cmp.w	sl, #0
90020ca8:	d03d      	beq.n	90020d26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
90020caa:	9a04      	ldr	r2, [sp, #16]
90020cac:	f10a 3aff 	add.w	sl, sl, #4294967295
90020cb0:	9f07      	ldr	r7, [sp, #28]
90020cb2:	8812      	ldrh	r2, [r2, #0]
90020cb4:	fa1f fa8a 	uxth.w	sl, sl
90020cb8:	46be      	mov	lr, r7
90020cba:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90020cbc:	1215      	asrs	r5, r2, #8
90020cbe:	10d1      	asrs	r1, r2, #3
90020cc0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020cc4:	00d2      	lsls	r2, r2, #3
90020cc6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90020cca:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90020cce:	b2d2      	uxtb	r2, r2
90020cd0:	fb05 750e 	mla	r5, r5, lr, r7
90020cd4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90020cd8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90020cda:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90020cde:	b2ad      	uxth	r5, r5
90020ce0:	fb01 710e 	mla	r1, r1, lr, r7
90020ce4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
90020ce6:	fb02 720e 	mla	r2, r2, lr, r7
90020cea:	f105 0e01 	add.w	lr, r5, #1
90020cee:	b289      	uxth	r1, r1
90020cf0:	b292      	uxth	r2, r2
90020cf2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
90020cf6:	f102 0e01 	add.w	lr, r2, #1
90020cfa:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90020cfe:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
90020d02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020d06:	4315      	orrs	r5, r2
90020d08:	1c4a      	adds	r2, r1, #1
90020d0a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020d0e:	9a04      	ldr	r2, [sp, #16]
90020d10:	0949      	lsrs	r1, r1, #5
90020d12:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90020d16:	430d      	orrs	r5, r1
90020d18:	f822 5b02 	strh.w	r5, [r2], #2
90020d1c:	9204      	str	r2, [sp, #16]
90020d1e:	e7c1      	b.n	90020ca4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
90020d20:	4649      	mov	r1, r9
90020d22:	4686      	mov	lr, r0
90020d24:	b999      	cbnz	r1, 90020d4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
90020d26:	4563      	cmp	r3, ip
90020d28:	eb00 0049 	add.w	r0, r0, r9, lsl #1
90020d2c:	d389      	bcc.n	90020c42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
90020d2e:	fa1f f68b 	uxth.w	r6, fp
90020d32:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
90020d36:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020d38:	1ba4      	subs	r4, r4, r6
90020d3a:	881b      	ldrh	r3, [r3, #0]
90020d3c:	b2a4      	uxth	r4, r4
90020d3e:	eba3 030b 	sub.w	r3, r3, fp
90020d42:	2c00      	cmp	r4, #0
90020d44:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90020d48:	bf18      	it	ne
90020d4a:	2600      	movne	r6, #0
90020d4c:	e779      	b.n	90020c42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
90020d4e:	78aa      	ldrb	r2, [r5, #2]
90020d50:	3901      	subs	r1, #1
90020d52:	4f0e      	ldr	r7, [pc, #56]	@ (90020d8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
90020d54:	b289      	uxth	r1, r1
90020d56:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
90020d5a:	786a      	ldrb	r2, [r5, #1]
90020d5c:	00d2      	lsls	r2, r2, #3
90020d5e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90020d62:	ea4a 0202 	orr.w	r2, sl, r2
90020d66:	f895 a000 	ldrb.w	sl, [r5]
90020d6a:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
90020d6e:	f82e 2b02 	strh.w	r2, [lr], #2
90020d72:	e7d7      	b.n	90020d24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
90020d74:	4b03      	ldr	r3, [pc, #12]	@ (90020d84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
90020d76:	6818      	ldr	r0, [r3, #0]
90020d78:	6803      	ldr	r3, [r0, #0]
90020d7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90020d7c:	4798      	blx	r3
90020d7e:	b013      	add	sp, #76	@ 0x4c
90020d80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020d84:	24024598 	.word	0x24024598
90020d88:	24024590 	.word	0x24024590
90020d8c:	fffff800 	.word	0xfffff800

90020d90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90020d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020d94:	b09d      	sub	sp, #116	@ 0x74
90020d96:	461c      	mov	r4, r3
90020d98:	4683      	mov	fp, r0
90020d9a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90020d9c:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
90020da0:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
90020da4:	920e      	str	r2, [sp, #56]	@ 0x38
90020da6:	2a00      	cmp	r2, #0
90020da8:	f000 81e4 	beq.w	90021174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
90020dac:	6820      	ldr	r0, [r4, #0]
90020dae:	aa18      	add	r2, sp, #96	@ 0x60
90020db0:	6861      	ldr	r1, [r4, #4]
90020db2:	c203      	stmia	r2!, {r0, r1}
90020db4:	6818      	ldr	r0, [r3, #0]
90020db6:	aa1a      	add	r2, sp, #104	@ 0x68
90020db8:	6859      	ldr	r1, [r3, #4]
90020dba:	c203      	stmia	r2!, {r0, r1}
90020dbc:	a818      	add	r0, sp, #96	@ 0x60
90020dbe:	f7f8 fb0d 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90020dc2:	4621      	mov	r1, r4
90020dc4:	a81a      	add	r0, sp, #104	@ 0x68
90020dc6:	f7f8 fb31 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90020dca:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
90020dce:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
90020dd2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
90020dd6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
90020dda:	bfdb      	ittet	le
90020ddc:	b29a      	uxthle	r2, r3
90020dde:	f44f 6180 	movle.w	r1, #1024	@ 0x400
90020de2:	2201      	movgt	r2, #1
90020de4:	fb91 f2f2 	sdivle	r2, r1, r2
90020de8:	9202      	str	r2, [sp, #8]
90020dea:	9802      	ldr	r0, [sp, #8]
90020dec:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
90020df0:	9902      	ldr	r1, [sp, #8]
90020df2:	fb92 f0f0 	sdiv	r0, r2, r0
90020df6:	b280      	uxth	r0, r0
90020df8:	440c      	add	r4, r1
90020dfa:	900f      	str	r0, [sp, #60]	@ 0x3c
90020dfc:	3c01      	subs	r4, #1
90020dfe:	9802      	ldr	r0, [sp, #8]
90020e00:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90020e02:	fb05 2510 	mls	r5, r5, r0, r2
90020e06:	fb94 f4f1 	sdiv	r4, r4, r1
90020e0a:	fb15 f503 	smulbb	r5, r5, r3
90020e0e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
90020e12:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
90020e16:	3401      	adds	r4, #1
90020e18:	440d      	add	r5, r1
90020e1a:	4419      	add	r1, r3
90020e1c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
90020e20:	b2a4      	uxth	r4, r4
90020e22:	441a      	add	r2, r3
90020e24:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
90020e28:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
90020e2c:	00a4      	lsls	r4, r4, #2
90020e2e:	9306      	str	r3, [sp, #24]
90020e30:	b2ad      	uxth	r5, r5
90020e32:	4bb3      	ldr	r3, [pc, #716]	@ (90021100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
90020e34:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
90020e38:	6818      	ldr	r0, [r3, #0]
90020e3a:	6803      	ldr	r3, [r0, #0]
90020e3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90020e3e:	4798      	blx	r3
90020e40:	4bb0      	ldr	r3, [pc, #704]	@ (90021104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
90020e42:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
90020e46:	2d00      	cmp	r5, #0
90020e48:	881a      	ldrh	r2, [r3, #0]
90020e4a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
90020e4e:	fb02 f606 	mul.w	r6, r2, r6
90020e52:	fb02 7101 	mla	r1, r2, r1, r7
90020e56:	9316      	str	r3, [sp, #88]	@ 0x58
90020e58:	eb00 0841 	add.w	r8, r0, r1, lsl #1
90020e5c:	4baa      	ldr	r3, [pc, #680]	@ (90021108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
90020e5e:	bf18      	it	ne
90020e60:	2100      	movne	r1, #0
90020e62:	eb08 0246 	add.w	r2, r8, r6, lsl #1
90020e66:	eba3 030b 	sub.w	r3, r3, fp
90020e6a:	920a      	str	r2, [sp, #40]	@ 0x28
90020e6c:	f104 0204 	add.w	r2, r4, #4
90020e70:	9317      	str	r3, [sp, #92]	@ 0x5c
90020e72:	9213      	str	r2, [sp, #76]	@ 0x4c
90020e74:	9a06      	ldr	r2, [sp, #24]
90020e76:	bf08      	it	eq
90020e78:	4611      	moveq	r1, r2
90020e7a:	2200      	movs	r2, #0
90020e7c:	b289      	uxth	r1, r1
90020e7e:	920d      	str	r2, [sp, #52]	@ 0x34
90020e80:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90020e82:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020e84:	fa12 f383 	uxtah	r3, r2, r3
90020e88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90020e8a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
90020e8e:	3304      	adds	r3, #4
90020e90:	9308      	str	r3, [sp, #32]
90020e92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020e94:	4543      	cmp	r3, r8
90020e96:	f240 8168 	bls.w	9002116a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
90020e9a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
90020e9e:	f04f 0e01 	mov.w	lr, #1
90020ea2:	9a02      	ldr	r2, [sp, #8]
90020ea4:	9808      	ldr	r0, [sp, #32]
90020ea6:	fbb5 f3f3 	udiv	r3, r5, r3
90020eaa:	1ad3      	subs	r3, r2, r3
90020eac:	7800      	ldrb	r0, [r0, #0]
90020eae:	b29b      	uxth	r3, r3
90020eb0:	9010      	str	r0, [sp, #64]	@ 0x40
90020eb2:	3001      	adds	r0, #1
90020eb4:	9314      	str	r3, [sp, #80]	@ 0x50
90020eb6:	9b08      	ldr	r3, [sp, #32]
90020eb8:	9007      	str	r0, [sp, #28]
90020eba:	785a      	ldrb	r2, [r3, #1]
90020ebc:	789b      	ldrb	r3, [r3, #2]
90020ebe:	021b      	lsls	r3, r3, #8
90020ec0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90020ec4:	9a08      	ldr	r2, [sp, #32]
90020ec6:	78d2      	ldrb	r2, [r2, #3]
90020ec8:	4313      	orrs	r3, r2
90020eca:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90020ecc:	441a      	add	r2, r3
90020ece:	1c50      	adds	r0, r2, #1
90020ed0:	7852      	ldrb	r2, [r2, #1]
90020ed2:	9005      	str	r0, [sp, #20]
90020ed4:	0212      	lsls	r2, r2, #8
90020ed6:	9811      	ldr	r0, [sp, #68]	@ 0x44
90020ed8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
90020edc:	5cc3      	ldrb	r3, [r0, r3]
90020ede:	431a      	orrs	r2, r3
90020ee0:	b293      	uxth	r3, r2
90020ee2:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
90020ee6:	930b      	str	r3, [sp, #44]	@ 0x2c
90020ee8:	2300      	movs	r3, #0
90020eea:	9309      	str	r3, [sp, #36]	@ 0x24
90020eec:	2301      	movs	r3, #1
90020eee:	9301      	str	r3, [sp, #4]
90020ef0:	9304      	str	r3, [sp, #16]
90020ef2:	2300      	movs	r3, #0
90020ef4:	9303      	str	r3, [sp, #12]
90020ef6:	2d00      	cmp	r5, #0
90020ef8:	d07d      	beq.n	90020ff6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
90020efa:	45ae      	cmp	lr, r5
90020efc:	d26c      	bcs.n	90020fd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
90020efe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020f00:	eba5 050e 	sub.w	r5, r5, lr
90020f04:	460c      	mov	r4, r1
90020f06:	4543      	cmp	r3, r8
90020f08:	b2ad      	uxth	r5, r5
90020f0a:	d802      	bhi.n	90020f12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
90020f0c:	e071      	b.n	90020ff2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
90020f0e:	2b00      	cmp	r3, #0
90020f10:	d15d      	bne.n	90020fce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
90020f12:	9b05      	ldr	r3, [sp, #20]
90020f14:	9a04      	ldr	r2, [sp, #16]
90020f16:	785b      	ldrb	r3, [r3, #1]
90020f18:	f1c2 0207 	rsb	r2, r2, #7
90020f1c:	9904      	ldr	r1, [sp, #16]
90020f1e:	4093      	lsls	r3, r2
90020f20:	005b      	lsls	r3, r3, #1
90020f22:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
90020f26:	9b05      	ldr	r3, [sp, #20]
90020f28:	781b      	ldrb	r3, [r3, #0]
90020f2a:	410b      	asrs	r3, r1
90020f2c:	3101      	adds	r1, #1
90020f2e:	b2c9      	uxtb	r1, r1
90020f30:	b2db      	uxtb	r3, r3
90020f32:	2908      	cmp	r1, #8
90020f34:	9104      	str	r1, [sp, #16]
90020f36:	9905      	ldr	r1, [sp, #20]
90020f38:	ea43 0302 	orr.w	r3, r3, r2
90020f3c:	bf0c      	ite	eq
90020f3e:	3102      	addeq	r1, #2
90020f40:	3101      	addne	r1, #1
90020f42:	b29a      	uxth	r2, r3
90020f44:	bf05      	ittet	eq
90020f46:	9105      	streq	r1, [sp, #20]
90020f48:	2100      	moveq	r1, #0
90020f4a:	9105      	strne	r1, [sp, #20]
90020f4c:	9104      	streq	r1, [sp, #16]
90020f4e:	9910      	ldr	r1, [sp, #64]	@ 0x40
90020f50:	4291      	cmp	r1, r2
90020f52:	d30a      	bcc.n	90020f6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
90020f54:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
90020f58:	2301      	movs	r3, #1
90020f5a:	9907      	ldr	r1, [sp, #28]
90020f5c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
90020f60:	d30f      	bcc.n	90020f82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
90020f62:	2100      	movs	r1, #0
90020f64:	9301      	str	r3, [sp, #4]
90020f66:	9103      	str	r1, [sp, #12]
90020f68:	e032      	b.n	90020fd0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
90020f6a:	9b07      	ldr	r3, [sp, #28]
90020f6c:	429a      	cmp	r2, r3
90020f6e:	d318      	bcc.n	90020fa2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
90020f70:	9b01      	ldr	r3, [sp, #4]
90020f72:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
90020f76:	445b      	add	r3, fp
90020f78:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
90020f7c:	9b01      	ldr	r3, [sp, #4]
90020f7e:	3301      	adds	r3, #1
90020f80:	b29b      	uxth	r3, r3
90020f82:	9907      	ldr	r1, [sp, #28]
90020f84:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
90020f88:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
90020f8c:	7108      	strb	r0, [r1, #4]
90020f8e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020f90:	80c8      	strh	r0, [r1, #6]
90020f92:	9801      	ldr	r0, [sp, #4]
90020f94:	3001      	adds	r0, #1
90020f96:	7148      	strb	r0, [r1, #5]
90020f98:	9907      	ldr	r1, [sp, #28]
90020f9a:	3101      	adds	r1, #1
90020f9c:	b289      	uxth	r1, r1
90020f9e:	9107      	str	r1, [sp, #28]
90020fa0:	e7df      	b.n	90020f62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
90020fa2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
90020fa6:	4611      	mov	r1, r2
90020fa8:	795b      	ldrb	r3, [r3, #5]
90020faa:	f603 0004 	addw	r0, r3, #2052	@ 0x804
90020fae:	4458      	add	r0, fp
90020fb0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
90020fb2:	4406      	add	r6, r0
90020fb4:	2e00      	cmp	r6, #0
90020fb6:	dd06      	ble.n	90020fc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
90020fb8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
90020fbc:	790e      	ldrb	r6, [r1, #4]
90020fbe:	f800 6d01 	strb.w	r6, [r0, #-1]!
90020fc2:	88c9      	ldrh	r1, [r1, #6]
90020fc4:	e7f4      	b.n	90020fb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
90020fc6:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
90020fca:	b29b      	uxth	r3, r3
90020fcc:	e7c5      	b.n	90020f5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
90020fce:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90020fd0:	4621      	mov	r1, r4
90020fd2:	920b      	str	r2, [sp, #44]	@ 0x2c
90020fd4:	469e      	mov	lr, r3
90020fd6:	e78e      	b.n	90020ef6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
90020fd8:	9a03      	ldr	r2, [sp, #12]
90020fda:	ebae 0305 	sub.w	r3, lr, r5
90020fde:	f8bd 4018 	ldrh.w	r4, [sp, #24]
90020fe2:	442a      	add	r2, r5
90020fe4:	b29b      	uxth	r3, r3
90020fe6:	b292      	uxth	r2, r2
90020fe8:	9203      	str	r2, [sp, #12]
90020fea:	2500      	movs	r5, #0
90020fec:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020fee:	4542      	cmp	r2, r8
90020ff0:	d88d      	bhi.n	90020f0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
90020ff2:	4621      	mov	r1, r4
90020ff4:	e74d      	b.n	90020e92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
90020ff6:	458e      	cmp	lr, r1
90020ff8:	f04f 0900 	mov.w	r9, #0
90020ffc:	bf2b      	itete	cs
90020ffe:	ebae 0301 	subcs.w	r3, lr, r1
90021002:	eba1 040e 	subcc.w	r4, r1, lr
90021006:	462c      	movcs	r4, r5
90021008:	462b      	movcc	r3, r5
9002100a:	bf27      	ittee	cs
9002100c:	b29b      	uxthcs	r3, r3
9002100e:	910c      	strcs	r1, [sp, #48]	@ 0x30
90021010:	b2a4      	uxthcc	r4, r4
90021012:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
90021016:	9a03      	ldr	r2, [sp, #12]
90021018:	980c      	ldr	r0, [sp, #48]	@ 0x30
9002101a:	444a      	add	r2, r9
9002101c:	4548      	cmp	r0, r9
9002101e:	b292      	uxth	r2, r2
90021020:	d074      	beq.n	9002110c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
90021022:	2004      	movs	r0, #4
90021024:	445a      	add	r2, fp
90021026:	4605      	mov	r5, r0
90021028:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9002102c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9002102e:	fb15 0202 	smlabb	r2, r5, r2, r0
90021032:	9812      	ldr	r0, [sp, #72]	@ 0x48
90021034:	5880      	ldr	r0, [r0, r2]
90021036:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9002103a:	d014      	beq.n	90021066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9002103c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90021040:	ea4f 2510 	mov.w	r5, r0, lsr #8
90021044:	d112      	bne.n	9002106c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
90021046:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90021048:	2aff      	cmp	r2, #255	@ 0xff
9002104a:	d10f      	bne.n	9002106c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9002104c:	0942      	lsrs	r2, r0, #5
9002104e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
90021052:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90021056:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002105a:	f025 0507 	bic.w	r5, r5, #7
9002105e:	4315      	orrs	r5, r2
90021060:	4305      	orrs	r5, r0
90021062:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
90021066:	f109 0901 	add.w	r9, r9, #1
9002106a:	e7d4      	b.n	90021016 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9002106c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
90021070:	b2ed      	uxtb	r5, r5
90021072:	ea4f 06ec 	mov.w	r6, ip, asr #3
90021076:	ea4f 272c 	mov.w	r7, ip, asr #8
9002107a:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9002107e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90021082:	f3c0 4607 	ubfx	r6, r0, #16, #8
90021086:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9002108a:	9215      	str	r2, [sp, #84]	@ 0x54
9002108c:	fa5f fc8c 	uxtb.w	ip, ip
90021090:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90021092:	b2c0      	uxtb	r0, r0
90021094:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
90021098:	fb02 fa0a 	mul.w	sl, r2, sl
9002109c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
900210a0:	f10a 0201 	add.w	r2, sl, #1
900210a4:	eb02 222a 	add.w	r2, r2, sl, asr #8
900210a8:	1212      	asrs	r2, r2, #8
900210aa:	fa1f fa82 	uxth.w	sl, r2
900210ae:	43d2      	mvns	r2, r2
900210b0:	fb16 f60a 	smulbb	r6, r6, sl
900210b4:	b2d2      	uxtb	r2, r2
900210b6:	fb10 f00a 	smulbb	r0, r0, sl
900210ba:	fb07 6702 	mla	r7, r7, r2, r6
900210be:	9e15      	ldr	r6, [sp, #84]	@ 0x54
900210c0:	fb0c 0002 	mla	r0, ip, r2, r0
900210c4:	fb15 f50a 	smulbb	r5, r5, sl
900210c8:	b2bf      	uxth	r7, r7
900210ca:	b280      	uxth	r0, r0
900210cc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900210d0:	fb06 5602 	mla	r6, r6, r2, r5
900210d4:	1c7a      	adds	r2, r7, #1
900210d6:	1c45      	adds	r5, r0, #1
900210d8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
900210dc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900210e0:	b2b6      	uxth	r6, r6
900210e2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
900210e6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900210ea:	432f      	orrs	r7, r5
900210ec:	1c75      	adds	r5, r6, #1
900210ee:	eb05 2516 	add.w	r5, r5, r6, lsr #8
900210f2:	096d      	lsrs	r5, r5, #5
900210f4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900210f8:	432f      	orrs	r7, r5
900210fa:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
900210fe:	e7b2      	b.n	90021066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
90021100:	24024598 	.word	0x24024598
90021104:	24024590 	.word	0x24024590
90021108:	fffff7fb 	.word	0xfffff7fb
9002110c:	9203      	str	r2, [sp, #12]
9002110e:	458e      	cmp	lr, r1
90021110:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90021112:	eb08 0842 	add.w	r8, r8, r2, lsl #1
90021116:	f4ff af68 	bcc.w	90020fea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9002111a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9002111c:	9906      	ldr	r1, [sp, #24]
9002111e:	8812      	ldrh	r2, [r2, #0]
90021120:	1a52      	subs	r2, r2, r1
90021122:	9914      	ldr	r1, [sp, #80]	@ 0x50
90021124:	eb08 0842 	add.w	r8, r8, r2, lsl #1
90021128:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002112a:	3201      	adds	r2, #1
9002112c:	428a      	cmp	r2, r1
9002112e:	9209      	str	r2, [sp, #36]	@ 0x24
90021130:	d111      	bne.n	90021156 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
90021132:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
90021136:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9002113a:	9b06      	ldr	r3, [sp, #24]
9002113c:	eba5 0509 	sub.w	r5, r5, r9
90021140:	b2ad      	uxth	r5, r5
90021142:	2d00      	cmp	r5, #0
90021144:	bf08      	it	eq
90021146:	4619      	moveq	r1, r3
90021148:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9002114a:	bf18      	it	ne
9002114c:	2100      	movne	r1, #0
9002114e:	3301      	adds	r3, #1
90021150:	b289      	uxth	r1, r1
90021152:	930d      	str	r3, [sp, #52]	@ 0x34
90021154:	e694      	b.n	90020e80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
90021156:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9002115a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9002115e:	1b2d      	subs	r5, r5, r4
90021160:	b2ad      	uxth	r5, r5
90021162:	2d00      	cmp	r5, #0
90021164:	bf18      	it	ne
90021166:	2400      	movne	r4, #0
90021168:	e740      	b.n	90020fec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9002116a:	4b04      	ldr	r3, [pc, #16]	@ (9002117c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9002116c:	6818      	ldr	r0, [r3, #0]
9002116e:	6803      	ldr	r3, [r0, #0]
90021170:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021172:	4798      	blx	r3
90021174:	b01d      	add	sp, #116	@ 0x74
90021176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002117a:	bf00      	nop
9002117c:	24024598 	.word	0x24024598

90021180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90021180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021184:	b09f      	sub	sp, #124	@ 0x7c
90021186:	461d      	mov	r5, r3
90021188:	4604      	mov	r4, r0
9002118a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002118c:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
90021190:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
90021194:	920a      	str	r2, [sp, #40]	@ 0x28
90021196:	2a00      	cmp	r2, #0
90021198:	f000 81fe 	beq.w	90021598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9002119c:	6828      	ldr	r0, [r5, #0]
9002119e:	aa1a      	add	r2, sp, #104	@ 0x68
900211a0:	6869      	ldr	r1, [r5, #4]
900211a2:	c203      	stmia	r2!, {r0, r1}
900211a4:	6818      	ldr	r0, [r3, #0]
900211a6:	aa1c      	add	r2, sp, #112	@ 0x70
900211a8:	6859      	ldr	r1, [r3, #4]
900211aa:	c203      	stmia	r2!, {r0, r1}
900211ac:	a81a      	add	r0, sp, #104	@ 0x68
900211ae:	f7f8 f915 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900211b2:	4629      	mov	r1, r5
900211b4:	a81c      	add	r0, sp, #112	@ 0x70
900211b6:	f7f8 f939 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900211ba:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
900211be:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
900211c2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
900211c6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
900211ca:	bfdb      	ittet	le
900211cc:	b29a      	uxthle	r2, r3
900211ce:	f44f 6180 	movle.w	r1, #1024	@ 0x400
900211d2:	2201      	movgt	r2, #1
900211d4:	fb91 f2f2 	sdivle	r2, r1, r2
900211d8:	9201      	str	r2, [sp, #4]
900211da:	9801      	ldr	r0, [sp, #4]
900211dc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
900211e0:	9901      	ldr	r1, [sp, #4]
900211e2:	fb92 f0f0 	sdiv	r0, r2, r0
900211e6:	b280      	uxth	r0, r0
900211e8:	440e      	add	r6, r1
900211ea:	9010      	str	r0, [sp, #64]	@ 0x40
900211ec:	3e01      	subs	r6, #1
900211ee:	9801      	ldr	r0, [sp, #4]
900211f0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900211f2:	fb05 2510 	mls	r5, r5, r0, r2
900211f6:	fb96 f6f1 	sdiv	r6, r6, r1
900211fa:	fb15 f503 	smulbb	r5, r5, r3
900211fe:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
90021202:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90021206:	3601      	adds	r6, #1
90021208:	440d      	add	r5, r1
9002120a:	4419      	add	r1, r3
9002120c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
90021210:	b2b6      	uxth	r6, r6
90021212:	441a      	add	r2, r3
90021214:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
90021218:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9002121c:	b2ad      	uxth	r5, r5
9002121e:	9304      	str	r3, [sp, #16]
90021220:	4b96      	ldr	r3, [pc, #600]	@ (9002147c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
90021222:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
90021226:	6818      	ldr	r0, [r3, #0]
90021228:	6803      	ldr	r3, [r0, #0]
9002122a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002122c:	4798      	blx	r3
9002122e:	4b94      	ldr	r3, [pc, #592]	@ (90021480 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
90021230:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
90021234:	2d00      	cmp	r5, #0
90021236:	881a      	ldrh	r2, [r3, #0]
90021238:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9002123c:	fb02 f707 	mul.w	r7, r2, r7
90021240:	fb02 c101 	mla	r1, r2, r1, ip
90021244:	9318      	str	r3, [sp, #96]	@ 0x60
90021246:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9002124a:	4b8e      	ldr	r3, [pc, #568]	@ (90021484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9002124c:	bf18      	it	ne
9002124e:	2100      	movne	r1, #0
90021250:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
90021254:	eba3 0304 	sub.w	r3, r3, r4
90021258:	920b      	str	r2, [sp, #44]	@ 0x2c
9002125a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002125c:	9319      	str	r3, [sp, #100]	@ 0x64
9002125e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
90021262:	f106 0204 	add.w	r2, r6, #4
90021266:	9206      	str	r2, [sp, #24]
90021268:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9002126a:	ea6f 0202 	mvn.w	r2, r2
9002126e:	b2d2      	uxtb	r2, r2
90021270:	9215      	str	r2, [sp, #84]	@ 0x54
90021272:	9a04      	ldr	r2, [sp, #16]
90021274:	bf08      	it	eq
90021276:	4611      	moveq	r1, r2
90021278:	2200      	movs	r2, #0
9002127a:	b289      	uxth	r1, r1
9002127c:	920d      	str	r2, [sp, #52]	@ 0x34
9002127e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90021280:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021282:	fa12 f383 	uxtah	r3, r2, r3
90021286:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90021288:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9002128c:	3304      	adds	r3, #4
9002128e:	9307      	str	r3, [sp, #28]
90021290:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021292:	455b      	cmp	r3, fp
90021294:	f240 817b 	bls.w	9002158e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
90021298:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9002129c:	f04f 0801 	mov.w	r8, #1
900212a0:	9a01      	ldr	r2, [sp, #4]
900212a2:	9807      	ldr	r0, [sp, #28]
900212a4:	46c4      	mov	ip, r8
900212a6:	f8cd 8008 	str.w	r8, [sp, #8]
900212aa:	7800      	ldrb	r0, [r0, #0]
900212ac:	fbb5 f3f3 	udiv	r3, r5, r3
900212b0:	1ad3      	subs	r3, r2, r3
900212b2:	9011      	str	r0, [sp, #68]	@ 0x44
900212b4:	3001      	adds	r0, #1
900212b6:	b29b      	uxth	r3, r3
900212b8:	9005      	str	r0, [sp, #20]
900212ba:	9316      	str	r3, [sp, #88]	@ 0x58
900212bc:	9b07      	ldr	r3, [sp, #28]
900212be:	785a      	ldrb	r2, [r3, #1]
900212c0:	789b      	ldrb	r3, [r3, #2]
900212c2:	021b      	lsls	r3, r3, #8
900212c4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900212c8:	9a07      	ldr	r2, [sp, #28]
900212ca:	78d2      	ldrb	r2, [r2, #3]
900212cc:	4313      	orrs	r3, r2
900212ce:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900212d0:	441a      	add	r2, r3
900212d2:	1c50      	adds	r0, r2, #1
900212d4:	7852      	ldrb	r2, [r2, #1]
900212d6:	9003      	str	r0, [sp, #12]
900212d8:	0212      	lsls	r2, r2, #8
900212da:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900212dc:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
900212e0:	5cc3      	ldrb	r3, [r0, r3]
900212e2:	431a      	orrs	r2, r3
900212e4:	b293      	uxth	r3, r2
900212e6:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
900212ea:	930c      	str	r3, [sp, #48]	@ 0x30
900212ec:	2300      	movs	r3, #0
900212ee:	9308      	str	r3, [sp, #32]
900212f0:	461a      	mov	r2, r3
900212f2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
900212f6:	930e      	str	r3, [sp, #56]	@ 0x38
900212f8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
900212fc:	930f      	str	r3, [sp, #60]	@ 0x3c
900212fe:	2d00      	cmp	r5, #0
90021300:	d07d      	beq.n	900213fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
90021302:	45ac      	cmp	ip, r5
90021304:	d26d      	bcs.n	900213e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
90021306:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021308:	eba5 050c 	sub.w	r5, r5, ip
9002130c:	4608      	mov	r0, r1
9002130e:	455b      	cmp	r3, fp
90021310:	b2ad      	uxth	r5, r5
90021312:	d802      	bhi.n	9002131a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
90021314:	e071      	b.n	900213fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
90021316:	2b00      	cmp	r3, #0
90021318:	d15d      	bne.n	900213d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9002131a:	9b03      	ldr	r3, [sp, #12]
9002131c:	9a02      	ldr	r2, [sp, #8]
9002131e:	785b      	ldrb	r3, [r3, #1]
90021320:	f1c2 0207 	rsb	r2, r2, #7
90021324:	9902      	ldr	r1, [sp, #8]
90021326:	4093      	lsls	r3, r2
90021328:	005b      	lsls	r3, r3, #1
9002132a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9002132e:	9b03      	ldr	r3, [sp, #12]
90021330:	781b      	ldrb	r3, [r3, #0]
90021332:	410b      	asrs	r3, r1
90021334:	3101      	adds	r1, #1
90021336:	b2c9      	uxtb	r1, r1
90021338:	b2db      	uxtb	r3, r3
9002133a:	2908      	cmp	r1, #8
9002133c:	9102      	str	r1, [sp, #8]
9002133e:	9903      	ldr	r1, [sp, #12]
90021340:	ea43 0302 	orr.w	r3, r3, r2
90021344:	bf0c      	ite	eq
90021346:	3102      	addeq	r1, #2
90021348:	3101      	addne	r1, #1
9002134a:	b29a      	uxth	r2, r3
9002134c:	bf05      	ittet	eq
9002134e:	9103      	streq	r1, [sp, #12]
90021350:	2100      	moveq	r1, #0
90021352:	9103      	strne	r1, [sp, #12]
90021354:	9102      	streq	r1, [sp, #8]
90021356:	9911      	ldr	r1, [sp, #68]	@ 0x44
90021358:	4291      	cmp	r1, r2
9002135a:	d30a      	bcc.n	90021372 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9002135c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
90021360:	2301      	movs	r3, #1
90021362:	9905      	ldr	r1, [sp, #20]
90021364:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
90021368:	d30f      	bcc.n	9002138a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9002136a:	2100      	movs	r1, #0
9002136c:	4698      	mov	r8, r3
9002136e:	9100      	str	r1, [sp, #0]
90021370:	e032      	b.n	900213d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
90021372:	9b05      	ldr	r3, [sp, #20]
90021374:	429a      	cmp	r2, r3
90021376:	d318      	bcc.n	900213aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
90021378:	eb04 0308 	add.w	r3, r4, r8
9002137c:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
90021380:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
90021384:	f108 0301 	add.w	r3, r8, #1
90021388:	b29b      	uxth	r3, r3
9002138a:	9905      	ldr	r1, [sp, #20]
9002138c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
90021390:	eb04 0181 	add.w	r1, r4, r1, lsl #2
90021394:	710e      	strb	r6, [r1, #4]
90021396:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90021398:	80ce      	strh	r6, [r1, #6]
9002139a:	f108 0601 	add.w	r6, r8, #1
9002139e:	714e      	strb	r6, [r1, #5]
900213a0:	9905      	ldr	r1, [sp, #20]
900213a2:	3101      	adds	r1, #1
900213a4:	b289      	uxth	r1, r1
900213a6:	9105      	str	r1, [sp, #20]
900213a8:	e7df      	b.n	9002136a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
900213aa:	eb04 0382 	add.w	r3, r4, r2, lsl #2
900213ae:	4611      	mov	r1, r2
900213b0:	795b      	ldrb	r3, [r3, #5]
900213b2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
900213b6:	4426      	add	r6, r4
900213b8:	9f19      	ldr	r7, [sp, #100]	@ 0x64
900213ba:	4437      	add	r7, r6
900213bc:	2f00      	cmp	r7, #0
900213be:	dd06      	ble.n	900213ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
900213c0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
900213c4:	790f      	ldrb	r7, [r1, #4]
900213c6:	f806 7d01 	strb.w	r7, [r6, #-1]!
900213ca:	88c9      	ldrh	r1, [r1, #6]
900213cc:	e7f4      	b.n	900213b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
900213ce:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
900213d2:	b29b      	uxth	r3, r3
900213d4:	e7c5      	b.n	90021362 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
900213d6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900213d8:	920c      	str	r2, [sp, #48]	@ 0x30
900213da:	4601      	mov	r1, r0
900213dc:	9a00      	ldr	r2, [sp, #0]
900213de:	469c      	mov	ip, r3
900213e0:	e78d      	b.n	900212fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
900213e2:	ebac 0305 	sub.w	r3, ip, r5
900213e6:	1957      	adds	r7, r2, r5
900213e8:	f8bd 0010 	ldrh.w	r0, [sp, #16]
900213ec:	b2ba      	uxth	r2, r7
900213ee:	b29b      	uxth	r3, r3
900213f0:	9200      	str	r2, [sp, #0]
900213f2:	2500      	movs	r5, #0
900213f4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900213f6:	455a      	cmp	r2, fp
900213f8:	d88d      	bhi.n	90021316 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
900213fa:	4601      	mov	r1, r0
900213fc:	e748      	b.n	90021290 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
900213fe:	458c      	cmp	ip, r1
90021400:	bf27      	ittee	cs
90021402:	ebac 0301 	subcs.w	r3, ip, r1
90021406:	4628      	movcs	r0, r5
90021408:	eba1 000c 	subcc.w	r0, r1, ip
9002140c:	462b      	movcc	r3, r5
9002140e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90021410:	bf27      	ittee	cs
90021412:	b29b      	uxthcs	r3, r3
90021414:	9109      	strcs	r1, [sp, #36]	@ 0x24
90021416:	b280      	uxthcc	r0, r0
90021418:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9002141c:	2dff      	cmp	r5, #255	@ 0xff
9002141e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90021420:	eb02 0705 	add.w	r7, r2, r5
90021424:	b2bd      	uxth	r5, r7
90021426:	9500      	str	r5, [sp, #0]
90021428:	d12e      	bne.n	90021488 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9002142a:	465e      	mov	r6, fp
9002142c:	9d00      	ldr	r5, [sp, #0]
9002142e:	42aa      	cmp	r2, r5
90021430:	f040 8083 	bne.w	9002153a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
90021434:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90021436:	458c      	cmp	ip, r1
90021438:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9002143c:	d3d9      	bcc.n	900213f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9002143e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90021440:	9904      	ldr	r1, [sp, #16]
90021442:	8812      	ldrh	r2, [r2, #0]
90021444:	1a52      	subs	r2, r2, r1
90021446:	9916      	ldr	r1, [sp, #88]	@ 0x58
90021448:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9002144c:	9a08      	ldr	r2, [sp, #32]
9002144e:	3201      	adds	r2, #1
90021450:	428a      	cmp	r2, r1
90021452:	9208      	str	r2, [sp, #32]
90021454:	f040 8091 	bne.w	9002157a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
90021458:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9002145c:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
90021460:	9b04      	ldr	r3, [sp, #16]
90021462:	eba5 050c 	sub.w	r5, r5, ip
90021466:	b2ad      	uxth	r5, r5
90021468:	2d00      	cmp	r5, #0
9002146a:	bf08      	it	eq
9002146c:	4619      	moveq	r1, r3
9002146e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021470:	bf18      	it	ne
90021472:	2100      	movne	r1, #0
90021474:	3301      	adds	r3, #1
90021476:	b289      	uxth	r1, r1
90021478:	930d      	str	r3, [sp, #52]	@ 0x34
9002147a:	e700      	b.n	9002127e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9002147c:	24024598 	.word	0x24024598
90021480:	24024590 	.word	0x24024590
90021484:	fffff7fb 	.word	0xfffff7fb
90021488:	46d9      	mov	r9, fp
9002148a:	9d00      	ldr	r5, [sp, #0]
9002148c:	42aa      	cmp	r2, r5
9002148e:	d0d1      	beq.n	90021434 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
90021490:	1c55      	adds	r5, r2, #1
90021492:	4422      	add	r2, r4
90021494:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
90021498:	9a06      	ldr	r2, [sp, #24]
9002149a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9002149e:	9517      	str	r5, [sp, #92]	@ 0x5c
900214a0:	4472      	add	r2, lr
900214a2:	9212      	str	r2, [sp, #72]	@ 0x48
900214a4:	f8b9 2000 	ldrh.w	r2, [r9]
900214a8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
900214aa:	1216      	asrs	r6, r2, #8
900214ac:	f897 a002 	ldrb.w	sl, [r7, #2]
900214b0:	10d5      	asrs	r5, r2, #3
900214b2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
900214b4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900214b8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900214bc:	00d2      	lsls	r2, r2, #3
900214be:	fb1a fa07 	smulbb	sl, sl, r7
900214c2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
900214c6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900214c8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
900214cc:	b2d2      	uxtb	r2, r2
900214ce:	fb06 a607 	mla	r6, r6, r7, sl
900214d2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
900214d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900214d8:	f897 a001 	ldrb.w	sl, [r7, #1]
900214dc:	b2b6      	uxth	r6, r6
900214de:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
900214e0:	fb1a fa07 	smulbb	sl, sl, r7
900214e4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900214e6:	fb05 a507 	mla	r5, r5, r7, sl
900214ea:	9f06      	ldr	r7, [sp, #24]
900214ec:	f106 0a01 	add.w	sl, r6, #1
900214f0:	f817 e00e 	ldrb.w	lr, [r7, lr]
900214f4:	b2ad      	uxth	r5, r5
900214f6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
900214f8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
900214fc:	f105 0a01 	add.w	sl, r5, #1
90021500:	fb1e fe07 	smulbb	lr, lr, r7
90021504:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90021506:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9002150a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9002150e:	fb02 e207 	mla	r2, r2, r7, lr
90021512:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90021516:	b292      	uxth	r2, r2
90021518:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9002151c:	f102 0e01 	add.w	lr, r2, #1
90021520:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
90021524:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90021528:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9002152c:	ea4e 0606 	orr.w	r6, lr, r6
90021530:	ea46 060a 	orr.w	r6, r6, sl
90021534:	f829 6b02 	strh.w	r6, [r9], #2
90021538:	e7a7      	b.n	9002148a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9002153a:	f102 0e01 	add.w	lr, r2, #1
9002153e:	4422      	add	r2, r4
90021540:	9f06      	ldr	r7, [sp, #24]
90021542:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
90021546:	9a06      	ldr	r2, [sp, #24]
90021548:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9002154c:	eb02 0a05 	add.w	sl, r2, r5
90021550:	4a13      	ldr	r2, [pc, #76]	@ (900215a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
90021552:	f89a 9002 	ldrb.w	r9, [sl, #2]
90021556:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9002155a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002155e:	00d2      	lsls	r2, r2, #3
90021560:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90021564:	ea49 0202 	orr.w	r2, r9, r2
90021568:	f817 9005 	ldrb.w	r9, [r7, r5]
9002156c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90021570:	f826 2b02 	strh.w	r2, [r6], #2
90021574:	fa1f f28e 	uxth.w	r2, lr
90021578:	e758      	b.n	9002142c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9002157a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9002157e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
90021582:	1a2d      	subs	r5, r5, r0
90021584:	b2ad      	uxth	r5, r5
90021586:	2d00      	cmp	r5, #0
90021588:	bf18      	it	ne
9002158a:	2000      	movne	r0, #0
9002158c:	e732      	b.n	900213f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9002158e:	4b05      	ldr	r3, [pc, #20]	@ (900215a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
90021590:	6818      	ldr	r0, [r3, #0]
90021592:	6803      	ldr	r3, [r0, #0]
90021594:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021596:	4798      	blx	r3
90021598:	b01f      	add	sp, #124	@ 0x7c
9002159a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002159e:	bf00      	nop
900215a0:	fffff800 	.word	0xfffff800
900215a4:	24024598 	.word	0x24024598

900215a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
900215a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900215ac:	b091      	sub	sp, #68	@ 0x44
900215ae:	469b      	mov	fp, r3
900215b0:	4616      	mov	r6, r2
900215b2:	f9b3 2000 	ldrsh.w	r2, [r3]
900215b6:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
900215ba:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900215be:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
900215c2:	4604      	mov	r4, r0
900215c4:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
900215c8:	4640      	mov	r0, r8
900215ca:	460d      	mov	r5, r1
900215cc:	4659      	mov	r1, fp
900215ce:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900215d2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900215d6:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
900215da:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
900215de:	f7f1 ff81 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
900215e2:	4631      	mov	r1, r6
900215e4:	4640      	mov	r0, r8
900215e6:	f7f1 ff7d 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
900215ea:	4b74      	ldr	r3, [pc, #464]	@ (900217bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
900215ec:	8818      	ldrh	r0, [r3, #0]
900215ee:	4b74      	ldr	r3, [pc, #464]	@ (900217c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
900215f0:	b202      	sxth	r2, r0
900215f2:	8819      	ldrh	r1, [r3, #0]
900215f4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
900215f8:	b20e      	sxth	r6, r1
900215fa:	2b00      	cmp	r3, #0
900215fc:	da07      	bge.n	9002160e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
900215fe:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90021602:	4463      	add	r3, ip
90021604:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90021608:	2300      	movs	r3, #0
9002160a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9002160e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90021612:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90021616:	1ad2      	subs	r2, r2, r3
90021618:	4594      	cmp	ip, r2
9002161a:	bfc4      	itt	gt
9002161c:	1ac2      	subgt	r2, r0, r3
9002161e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
90021622:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021626:	2a00      	cmp	r2, #0
90021628:	da07      	bge.n	9002163a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9002162a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9002162e:	4462      	add	r2, ip
90021630:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90021634:	2200      	movs	r2, #0
90021636:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9002163a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9002163e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
90021642:	eba6 060a 	sub.w	r6, r6, sl
90021646:	42b2      	cmp	r2, r6
90021648:	bfc4      	itt	gt
9002164a:	eba1 020a 	subgt.w	r2, r1, sl
9002164e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
90021652:	4a5c      	ldr	r2, [pc, #368]	@ (900217c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
90021654:	7812      	ldrb	r2, [r2, #0]
90021656:	b9a2      	cbnz	r2, 90021682 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
90021658:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9002165c:	4286      	cmp	r6, r0
9002165e:	4640      	mov	r0, r8
90021660:	9303      	str	r3, [sp, #12]
90021662:	bf14      	ite	ne
90021664:	2600      	movne	r6, #0
90021666:	2601      	moveq	r6, #1
90021668:	f7f1 ff7f 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
9002166c:	9b03      	ldr	r3, [sp, #12]
9002166e:	b160      	cbz	r0, 9002168a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
90021670:	2300      	movs	r3, #0
90021672:	8023      	strh	r3, [r4, #0]
90021674:	8063      	strh	r3, [r4, #2]
90021676:	80a3      	strh	r3, [r4, #4]
90021678:	4620      	mov	r0, r4
9002167a:	80e3      	strh	r3, [r4, #6]
9002167c:	b011      	add	sp, #68	@ 0x44
9002167e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021682:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90021686:	428e      	cmp	r6, r1
90021688:	e7e9      	b.n	9002165e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9002168a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9002168e:	a90e      	add	r1, sp, #56	@ 0x38
90021690:	900e      	str	r0, [sp, #56]	@ 0x38
90021692:	a80c      	add	r0, sp, #48	@ 0x30
90021694:	9205      	str	r2, [sp, #20]
90021696:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9002169a:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9002169e:	9206      	str	r2, [sp, #24]
900216a0:	f8bb 2000 	ldrh.w	r2, [fp]
900216a4:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
900216a8:	1a9b      	subs	r3, r3, r2
900216aa:	b21b      	sxth	r3, r3
900216ac:	9303      	str	r3, [sp, #12]
900216ae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900216b2:	f8df b118 	ldr.w	fp, [pc, #280]	@ 900217cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
900216b6:	ebaa 0a03 	sub.w	sl, sl, r3
900216ba:	fa0f f38a 	sxth.w	r3, sl
900216be:	9304      	str	r3, [sp, #16]
900216c0:	9b03      	ldr	r3, [sp, #12]
900216c2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
900216c6:	9b04      	ldr	r3, [sp, #16]
900216c8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900216cc:	9b05      	ldr	r3, [sp, #20]
900216ce:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
900216d2:	9b06      	ldr	r3, [sp, #24]
900216d4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900216d8:	f7f7 fea8 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900216dc:	4640      	mov	r0, r8
900216de:	f7f7 fe7d 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900216e2:	a80e      	add	r0, sp, #56	@ 0x38
900216e4:	f7f7 fe7a 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900216e8:	4b37      	ldr	r3, [pc, #220]	@ (900217c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
900216ea:	4628      	mov	r0, r5
900216ec:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
900216f0:	881b      	ldrh	r3, [r3, #0]
900216f2:	9307      	str	r3, [sp, #28]
900216f4:	682b      	ldr	r3, [r5, #0]
900216f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900216f8:	4798      	blx	r3
900216fa:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
900216fe:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
90021702:	4681      	mov	r9, r0
90021704:	f8db 0000 	ldr.w	r0, [fp]
90021708:	fb1a 3305 	smlabb	r3, sl, r5, r3
9002170c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9002170e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
90021712:	6803      	ldr	r3, [r0, #0]
90021714:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90021716:	4798      	blx	r3
90021718:	4607      	mov	r7, r0
9002171a:	f8db 0000 	ldr.w	r0, [fp]
9002171e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
90021722:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021726:	6803      	ldr	r3, [r0, #0]
90021728:	9109      	str	r1, [sp, #36]	@ 0x24
9002172a:	9208      	str	r2, [sp, #32]
9002172c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002172e:	4798      	blx	r3
90021730:	f010 0f01 	tst.w	r0, #1
90021734:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90021738:	d012      	beq.n	90021760 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9002173a:	f8db 0000 	ldr.w	r0, [fp]
9002173e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
90021742:	6803      	ldr	r3, [r0, #0]
90021744:	9200      	str	r2, [sp, #0]
90021746:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
90021748:	462b      	mov	r3, r5
9002174a:	e898 0006 	ldmia.w	r8, {r1, r2}
9002174e:	47b0      	blx	r6
90021750:	9b03      	ldr	r3, [sp, #12]
90021752:	8023      	strh	r3, [r4, #0]
90021754:	9b04      	ldr	r3, [sp, #16]
90021756:	8063      	strh	r3, [r4, #2]
90021758:	9b05      	ldr	r3, [sp, #20]
9002175a:	80a3      	strh	r3, [r4, #4]
9002175c:	9b06      	ldr	r3, [sp, #24]
9002175e:	e78b      	b.n	90021678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
90021760:	fb09 f202 	mul.w	r2, r9, r2
90021764:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
90021768:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9002176c:	440f      	add	r7, r1
9002176e:	b166      	cbz	r6, 9002178a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
90021770:	9a07      	ldr	r2, [sp, #28]
90021772:	4592      	cmp	sl, r2
90021774:	d109      	bne.n	9002178a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
90021776:	f8db 0000 	ldr.w	r0, [fp]
9002177a:	fb09 f303 	mul.w	r3, r9, r3
9002177e:	4629      	mov	r1, r5
90021780:	6802      	ldr	r2, [r0, #0]
90021782:	6b56      	ldr	r6, [r2, #52]	@ 0x34
90021784:	463a      	mov	r2, r7
90021786:	47b0      	blx	r6
90021788:	e7e2      	b.n	90021750 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9002178a:	fb0a f303 	mul.w	r3, sl, r3
9002178e:	ea4f 064a 	mov.w	r6, sl, lsl #1
90021792:	f8df b038 	ldr.w	fp, [pc, #56]	@ 900217cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
90021796:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9002179a:	4545      	cmp	r5, r8
9002179c:	d2d8      	bcs.n	90021750 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9002179e:	f8db 0000 	ldr.w	r0, [fp]
900217a2:	4629      	mov	r1, r5
900217a4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
900217a8:	4435      	add	r5, r6
900217aa:	6802      	ldr	r2, [r0, #0]
900217ac:	005b      	lsls	r3, r3, #1
900217ae:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
900217b2:	463a      	mov	r2, r7
900217b4:	47d0      	blx	sl
900217b6:	444f      	add	r7, r9
900217b8:	e7ef      	b.n	9002179a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
900217ba:	bf00      	nop
900217bc:	2402458a 	.word	0x2402458a
900217c0:	2402458c 	.word	0x2402458c
900217c4:	2402458e 	.word	0x2402458e
900217c8:	24024590 	.word	0x24024590
900217cc:	24024598 	.word	0x24024598

900217d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
900217d0:	b5f0      	push	{r4, r5, r6, r7, lr}
900217d2:	4606      	mov	r6, r0
900217d4:	b087      	sub	sp, #28
900217d6:	460c      	mov	r4, r1
900217d8:	4617      	mov	r7, r2
900217da:	461d      	mov	r5, r3
900217dc:	b333      	cbz	r3, 9002182c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
900217de:	4608      	mov	r0, r1
900217e0:	f7f1 fec3 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
900217e4:	bb10      	cbnz	r0, 9002182c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
900217e6:	6820      	ldr	r0, [r4, #0]
900217e8:	ab04      	add	r3, sp, #16
900217ea:	6861      	ldr	r1, [r4, #4]
900217ec:	4c1b      	ldr	r4, [pc, #108]	@ (9002185c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
900217ee:	c303      	stmia	r3!, {r0, r1}
900217f0:	a804      	add	r0, sp, #16
900217f2:	f7f7 fdf3 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900217f6:	6820      	ldr	r0, [r4, #0]
900217f8:	6803      	ldr	r3, [r0, #0]
900217fa:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900217fc:	4798      	blx	r3
900217fe:	2dff      	cmp	r5, #255	@ 0xff
90021800:	d016      	beq.n	90021830 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
90021802:	f010 0f08 	tst.w	r0, #8
90021806:	6820      	ldr	r0, [r4, #0]
90021808:	d015      	beq.n	90021836 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9002180a:	2400      	movs	r4, #0
9002180c:	6801      	ldr	r1, [r0, #0]
9002180e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90021812:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90021816:	e9cd 5402 	strd	r5, r4, [sp, #8]
9002181a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9002181e:	9401      	str	r4, [sp, #4]
90021820:	f8bd 4014 	ldrh.w	r4, [sp, #20]
90021824:	9400      	str	r4, [sp, #0]
90021826:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
90021828:	4639      	mov	r1, r7
9002182a:	47a0      	blx	r4
9002182c:	b007      	add	sp, #28
9002182e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90021830:	f010 0f02 	tst.w	r0, #2
90021834:	e7e7      	b.n	90021806 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
90021836:	6803      	ldr	r3, [r0, #0]
90021838:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002183a:	4798      	blx	r3
9002183c:	4b08      	ldr	r3, [pc, #32]	@ (90021860 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9002183e:	4601      	mov	r1, r0
90021840:	4630      	mov	r0, r6
90021842:	881a      	ldrh	r2, [r3, #0]
90021844:	6833      	ldr	r3, [r6, #0]
90021846:	e9cd 7500 	strd	r7, r5, [sp]
9002184a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9002184c:	ab04      	add	r3, sp, #16
9002184e:	47a8      	blx	r5
90021850:	6820      	ldr	r0, [r4, #0]
90021852:	6803      	ldr	r3, [r0, #0]
90021854:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021856:	4798      	blx	r3
90021858:	e7e8      	b.n	9002182c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9002185a:	bf00      	nop
9002185c:	24024598 	.word	0x24024598
90021860:	24024590 	.word	0x24024590

90021864 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
90021864:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021868:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9002186c:	4688      	mov	r8, r1
9002186e:	4614      	mov	r4, r2
90021870:	461d      	mov	r5, r3
90021872:	9e08      	ldr	r6, [sp, #32]
90021874:	2f00      	cmp	r7, #0
90021876:	f000 80ab 	beq.w	900219d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9002187a:	4618      	mov	r0, r3
9002187c:	f7f1 fe75 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
90021880:	2800      	cmp	r0, #0
90021882:	f040 80a5 	bne.w	900219d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
90021886:	f9b5 1000 	ldrsh.w	r1, [r5]
9002188a:	2fff      	cmp	r7, #255	@ 0xff
9002188c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90021890:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
90021894:	fb04 1303 	mla	r3, r4, r3, r1
90021898:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9002189c:	eba4 0200 	sub.w	r2, r4, r0
900218a0:	eb08 0143 	add.w	r1, r8, r3, lsl #1
900218a4:	fb04 f505 	mul.w	r5, r4, r5
900218a8:	ea4f 2816 	mov.w	r8, r6, lsr #8
900218ac:	eb01 0545 	add.w	r5, r1, r5, lsl #1
900218b0:	d04a      	beq.n	90021948 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
900218b2:	b2bc      	uxth	r4, r7
900218b4:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
900218b8:	f3c6 4e07 	ubfx	lr, r6, #16, #8
900218bc:	fa5f f788 	uxtb.w	r7, r8
900218c0:	b2f3      	uxtb	r3, r6
900218c2:	0040      	lsls	r0, r0, #1
900218c4:	fb0e fe04 	mul.w	lr, lr, r4
900218c8:	4367      	muls	r7, r4
900218ca:	ea4f 0842 	mov.w	r8, r2, lsl #1
900218ce:	4363      	muls	r3, r4
900218d0:	fa1f fc8c 	uxth.w	ip, ip
900218d4:	42a9      	cmp	r1, r5
900218d6:	d27b      	bcs.n	900219d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900218d8:	eb01 0900 	add.w	r9, r1, r0
900218dc:	4549      	cmp	r1, r9
900218de:	d231      	bcs.n	90021944 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
900218e0:	880a      	ldrh	r2, [r1, #0]
900218e2:	1214      	asrs	r4, r2, #8
900218e4:	10d6      	asrs	r6, r2, #3
900218e6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900218ea:	00d2      	lsls	r2, r2, #3
900218ec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
900218f0:	b2d2      	uxtb	r2, r2
900218f2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900218f6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900218fa:	fb14 f40c 	smulbb	r4, r4, ip
900218fe:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90021902:	fb12 f20c 	smulbb	r2, r2, ip
90021906:	fb16 f60c 	smulbb	r6, r6, ip
9002190a:	4474      	add	r4, lr
9002190c:	441a      	add	r2, r3
9002190e:	b2a4      	uxth	r4, r4
90021910:	443e      	add	r6, r7
90021912:	b292      	uxth	r2, r2
90021914:	f104 0a01 	add.w	sl, r4, #1
90021918:	b2b6      	uxth	r6, r6
9002191a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9002191e:	f102 0a01 	add.w	sl, r2, #1
90021922:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
90021926:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002192a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002192e:	4322      	orrs	r2, r4
90021930:	1c74      	adds	r4, r6, #1
90021932:	eb04 2616 	add.w	r6, r4, r6, lsr #8
90021936:	0976      	lsrs	r6, r6, #5
90021938:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9002193c:	4332      	orrs	r2, r6
9002193e:	f821 2b02 	strh.w	r2, [r1], #2
90021942:	e7cb      	b.n	900218dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
90021944:	4441      	add	r1, r8
90021946:	e7c5      	b.n	900218d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
90021948:	0973      	lsrs	r3, r6, #5
9002194a:	4f22      	ldr	r7, [pc, #136]	@ (900219d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9002194c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
90021950:	ea08 0707 	and.w	r7, r8, r7
90021954:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021958:	433b      	orrs	r3, r7
9002195a:	07e7      	lsls	r7, r4, #31
9002195c:	ea43 0306 	orr.w	r3, r3, r6
90021960:	b29b      	uxth	r3, r3
90021962:	d50b      	bpl.n	9002197c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
90021964:	0040      	lsls	r0, r0, #1
90021966:	0052      	lsls	r2, r2, #1
90021968:	42a9      	cmp	r1, r5
9002196a:	d231      	bcs.n	900219d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9002196c:	180c      	adds	r4, r1, r0
9002196e:	42a1      	cmp	r1, r4
90021970:	d202      	bcs.n	90021978 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
90021972:	f821 3b02 	strh.w	r3, [r1], #2
90021976:	e7fa      	b.n	9002196e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
90021978:	4411      	add	r1, r2
9002197a:	e7f5      	b.n	90021968 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9002197c:	078e      	lsls	r6, r1, #30
9002197e:	d008      	beq.n	90021992 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
90021980:	0066      	lsls	r6, r4, #1
90021982:	460a      	mov	r2, r1
90021984:	42aa      	cmp	r2, r5
90021986:	d202      	bcs.n	9002198e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
90021988:	8013      	strh	r3, [r2, #0]
9002198a:	4432      	add	r2, r6
9002198c:	e7fa      	b.n	90021984 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9002198e:	3102      	adds	r1, #2
90021990:	3801      	subs	r0, #1
90021992:	07c2      	lsls	r2, r0, #31
90021994:	d50b      	bpl.n	900219ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
90021996:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9002199a:	0066      	lsls	r6, r4, #1
9002199c:	3a01      	subs	r2, #1
9002199e:	eb01 0242 	add.w	r2, r1, r2, lsl #1
900219a2:	42aa      	cmp	r2, r5
900219a4:	d202      	bcs.n	900219ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
900219a6:	8013      	strh	r3, [r2, #0]
900219a8:	4432      	add	r2, r6
900219aa:	e7fa      	b.n	900219a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
900219ac:	3801      	subs	r0, #1
900219ae:	b178      	cbz	r0, 900219d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900219b0:	1040      	asrs	r0, r0, #1
900219b2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
900219b6:	0080      	lsls	r0, r0, #2
900219b8:	0064      	lsls	r4, r4, #1
900219ba:	42a9      	cmp	r1, r5
900219bc:	d208      	bcs.n	900219d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
900219be:	180e      	adds	r6, r1, r0
900219c0:	460a      	mov	r2, r1
900219c2:	42b2      	cmp	r2, r6
900219c4:	d202      	bcs.n	900219cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
900219c6:	f842 3b04 	str.w	r3, [r2], #4
900219ca:	e7fa      	b.n	900219c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
900219cc:	4421      	add	r1, r4
900219ce:	e7f4      	b.n	900219ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
900219d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900219d4:	00fff800 	.word	0x00fff800

900219d8 <_ZN8touchgfx8LCD16bppC1Ev>:
900219d8:	2200      	movs	r2, #0
900219da:	4912      	ldr	r1, [pc, #72]	@ (90021a24 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
900219dc:	e9c0 2201 	strd	r2, r2, [r0, #4]
900219e0:	6001      	str	r1, [r0, #0]
900219e2:	e9c0 2203 	strd	r2, r2, [r0, #12]
900219e6:	e9c0 2205 	strd	r2, r2, [r0, #20]
900219ea:	e9c0 2207 	strd	r2, r2, [r0, #28]
900219ee:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
900219f2:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
900219f6:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
900219fa:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
900219fe:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
90021a02:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
90021a06:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
90021a0a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
90021a0e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
90021a12:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
90021a16:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
90021a1a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
90021a1e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
90021a22:	4770      	bx	lr
90021a24:	900308fc 	.word	0x900308fc

90021a28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
90021a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021a2c:	b08d      	sub	sp, #52	@ 0x34
90021a2e:	460d      	mov	r5, r1
90021a30:	4604      	mov	r4, r0
90021a32:	4699      	mov	r9, r3
90021a34:	6808      	ldr	r0, [r1, #0]
90021a36:	ab08      	add	r3, sp, #32
90021a38:	6849      	ldr	r1, [r1, #4]
90021a3a:	c303      	stmia	r3!, {r0, r1}
90021a3c:	6810      	ldr	r0, [r2, #0]
90021a3e:	ab0a      	add	r3, sp, #40	@ 0x28
90021a40:	6851      	ldr	r1, [r2, #4]
90021a42:	c303      	stmia	r3!, {r0, r1}
90021a44:	a808      	add	r0, sp, #32
90021a46:	f7f7 fcc9 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021a4a:	4629      	mov	r1, r5
90021a4c:	a80a      	add	r0, sp, #40	@ 0x28
90021a4e:	4d67      	ldr	r5, [pc, #412]	@ (90021bec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90021a50:	f7f7 fcec 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021a54:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90021a58:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
90021a5c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
90021a60:	6828      	ldr	r0, [r5, #0]
90021a62:	fb11 2103 	smlabb	r1, r1, r3, r2
90021a66:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
90021a6a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
90021a6e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90021a72:	f8bd 1020 	ldrh.w	r1, [sp, #32]
90021a76:	440a      	add	r2, r1
90021a78:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90021a7c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
90021a80:	4413      	add	r3, r2
90021a82:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
90021a86:	6803      	ldr	r3, [r0, #0]
90021a88:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021a8a:	4798      	blx	r3
90021a8c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90021a90:	d119      	bne.n	90021ac6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
90021a92:	f010 0f20 	tst.w	r0, #32
90021a96:	6828      	ldr	r0, [r5, #0]
90021a98:	d018      	beq.n	90021acc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
90021a9a:	2500      	movs	r5, #0
90021a9c:	6801      	ldr	r1, [r0, #0]
90021a9e:	b2b6      	uxth	r6, r6
90021aa0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90021aa4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
90021aa8:	9601      	str	r6, [sp, #4]
90021aaa:	e9cd 9503 	strd	r9, r5, [sp, #12]
90021aae:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
90021ab2:	9502      	str	r5, [sp, #8]
90021ab4:	fa1f f588 	uxth.w	r5, r8
90021ab8:	9500      	str	r5, [sp, #0]
90021aba:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
90021abc:	4621      	mov	r1, r4
90021abe:	47a8      	blx	r5
90021ac0:	b00d      	add	sp, #52	@ 0x34
90021ac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021ac6:	f010 0f40 	tst.w	r0, #64	@ 0x40
90021aca:	e7e4      	b.n	90021a96 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
90021acc:	6803      	ldr	r3, [r0, #0]
90021ace:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021ad0:	4798      	blx	r3
90021ad2:	4947      	ldr	r1, [pc, #284]	@ (90021bf0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
90021ad4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
90021ad8:	880b      	ldrh	r3, [r1, #0]
90021ada:	468a      	mov	sl, r1
90021adc:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
90021ae0:	fb03 5202 	mla	r2, r3, r2, r5
90021ae4:	4373      	muls	r3, r6
90021ae6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021aea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90021aee:	9307      	str	r3, [sp, #28]
90021af0:	ea4f 0348 	mov.w	r3, r8, lsl #1
90021af4:	9306      	str	r3, [sp, #24]
90021af6:	9b07      	ldr	r3, [sp, #28]
90021af8:	4298      	cmp	r0, r3
90021afa:	d270      	bcs.n	90021bde <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
90021afc:	9b06      	ldr	r3, [sp, #24]
90021afe:	4621      	mov	r1, r4
90021b00:	eb00 0b03 	add.w	fp, r0, r3
90021b04:	4558      	cmp	r0, fp
90021b06:	d25d      	bcs.n	90021bc4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
90021b08:	f851 4b04 	ldr.w	r4, [r1], #4
90021b0c:	0e23      	lsrs	r3, r4, #24
90021b0e:	d014      	beq.n	90021b3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90021b10:	2bff      	cmp	r3, #255	@ 0xff
90021b12:	ea4f 2c14 	mov.w	ip, r4, lsr #8
90021b16:	d112      	bne.n	90021b3e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90021b18:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90021b1c:	d10f      	bne.n	90021b3e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
90021b1e:	0963      	lsrs	r3, r4, #5
90021b20:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90021b24:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90021b28:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021b2c:	f02c 0c07 	bic.w	ip, ip, #7
90021b30:	ea43 0c0c 	orr.w	ip, r3, ip
90021b34:	ea4c 0404 	orr.w	r4, ip, r4
90021b38:	8004      	strh	r4, [r0, #0]
90021b3a:	3002      	adds	r0, #2
90021b3c:	e7e2      	b.n	90021b04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
90021b3e:	fb09 f303 	mul.w	r3, r9, r3
90021b42:	8807      	ldrh	r7, [r0, #0]
90021b44:	f3c4 4e07 	ubfx	lr, r4, #16, #8
90021b48:	fa5f fc8c 	uxtb.w	ip, ip
90021b4c:	1c5a      	adds	r2, r3, #1
90021b4e:	123e      	asrs	r6, r7, #8
90021b50:	10fd      	asrs	r5, r7, #3
90021b52:	eb02 2223 	add.w	r2, r2, r3, asr #8
90021b56:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90021b5a:	00ff      	lsls	r7, r7, #3
90021b5c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90021b60:	1212      	asrs	r2, r2, #8
90021b62:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90021b66:	b293      	uxth	r3, r2
90021b68:	43d2      	mvns	r2, r2
90021b6a:	b2ff      	uxtb	r7, r7
90021b6c:	fb1e fe03 	smulbb	lr, lr, r3
90021b70:	b2d2      	uxtb	r2, r2
90021b72:	fb1c fc03 	smulbb	ip, ip, r3
90021b76:	b2e4      	uxtb	r4, r4
90021b78:	fb06 e602 	mla	r6, r6, r2, lr
90021b7c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90021b80:	fb14 f403 	smulbb	r4, r4, r3
90021b84:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
90021b88:	b2b6      	uxth	r6, r6
90021b8a:	fb05 c502 	mla	r5, r5, r2, ip
90021b8e:	fb07 4702 	mla	r7, r7, r2, r4
90021b92:	f106 0e01 	add.w	lr, r6, #1
90021b96:	b2ad      	uxth	r5, r5
90021b98:	b2bf      	uxth	r7, r7
90021b9a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
90021b9e:	f105 0c01 	add.w	ip, r5, #1
90021ba2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
90021ba6:	1c7e      	adds	r6, r7, #1
90021ba8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90021bac:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90021bb0:	096d      	lsrs	r5, r5, #5
90021bb2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90021bb6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021bba:	ea46 060e 	orr.w	r6, r6, lr
90021bbe:	432e      	orrs	r6, r5
90021bc0:	8006      	strh	r6, [r0, #0]
90021bc2:	e7ba      	b.n	90021b3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
90021bc4:	f8ba 3000 	ldrh.w	r3, [sl]
90021bc8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
90021bcc:	eba3 0308 	sub.w	r3, r3, r8
90021bd0:	eba4 0408 	sub.w	r4, r4, r8
90021bd4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90021bd8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
90021bdc:	e78b      	b.n	90021af6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
90021bde:	4b03      	ldr	r3, [pc, #12]	@ (90021bec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
90021be0:	6818      	ldr	r0, [r3, #0]
90021be2:	6803      	ldr	r3, [r0, #0]
90021be4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021be6:	4798      	blx	r3
90021be8:	e76a      	b.n	90021ac0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
90021bea:	bf00      	nop
90021bec:	24024598 	.word	0x24024598
90021bf0:	24024590 	.word	0x24024590

90021bf4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
90021bf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90021bf8:	b085      	sub	sp, #20
90021bfa:	6810      	ldr	r0, [r2, #0]
90021bfc:	460c      	mov	r4, r1
90021bfe:	6851      	ldr	r1, [r2, #4]
90021c00:	466d      	mov	r5, sp
90021c02:	4616      	mov	r6, r2
90021c04:	c503      	stmia	r5!, {r0, r1}
90021c06:	6818      	ldr	r0, [r3, #0]
90021c08:	6859      	ldr	r1, [r3, #4]
90021c0a:	c503      	stmia	r5!, {r0, r1}
90021c0c:	4668      	mov	r0, sp
90021c0e:	4d2e      	ldr	r5, [pc, #184]	@ (90021cc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
90021c10:	f7f7 fbe4 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021c14:	4631      	mov	r1, r6
90021c16:	a802      	add	r0, sp, #8
90021c18:	4e2c      	ldr	r6, [pc, #176]	@ (90021ccc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
90021c1a:	f7f7 fc07 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021c1e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
90021c22:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
90021c26:	f8bd 1004 	ldrh.w	r1, [sp, #4]
90021c2a:	6828      	ldr	r0, [r5, #0]
90021c2c:	fb11 2103 	smlabb	r1, r1, r3, r2
90021c30:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90021c34:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
90021c38:	eb04 0481 	add.w	r4, r4, r1, lsl #2
90021c3c:	f8bd 1000 	ldrh.w	r1, [sp]
90021c40:	440a      	add	r2, r1
90021c42:	f8ad 2008 	strh.w	r2, [sp, #8]
90021c46:	f8bd 2002 	ldrh.w	r2, [sp, #2]
90021c4a:	4413      	add	r3, r2
90021c4c:	f8ad 300a 	strh.w	r3, [sp, #10]
90021c50:	6803      	ldr	r3, [r0, #0]
90021c52:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021c54:	4798      	blx	r3
90021c56:	8833      	ldrh	r3, [r6, #0]
90021c58:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
90021c5c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
90021c60:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90021c64:	f8df e068 	ldr.w	lr, [pc, #104]	@ 90021cd0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
90021c68:	fb03 1202 	mla	r2, r3, r2, r1
90021c6c:	fb08 f303 	mul.w	r3, r8, r3
90021c70:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021c74:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90021c78:	4298      	cmp	r0, r3
90021c7a:	d21d      	bcs.n	90021cb8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
90021c7c:	eb00 080c 	add.w	r8, r0, ip
90021c80:	4540      	cmp	r0, r8
90021c82:	d20f      	bcs.n	90021ca4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
90021c84:	f854 1b04 	ldr.w	r1, [r4], #4
90021c88:	ea4f 1951 	mov.w	r9, r1, lsr #5
90021c8c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
90021c90:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90021c94:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90021c98:	ea42 0209 	orr.w	r2, r2, r9
90021c9c:	430a      	orrs	r2, r1
90021c9e:	f820 2b02 	strh.w	r2, [r0], #2
90021ca2:	e7ed      	b.n	90021c80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
90021ca4:	8832      	ldrh	r2, [r6, #0]
90021ca6:	1bd2      	subs	r2, r2, r7
90021ca8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021cac:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
90021cb0:	1bd2      	subs	r2, r2, r7
90021cb2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
90021cb6:	e7df      	b.n	90021c78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
90021cb8:	6828      	ldr	r0, [r5, #0]
90021cba:	6803      	ldr	r3, [r0, #0]
90021cbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021cbe:	4798      	blx	r3
90021cc0:	b005      	add	sp, #20
90021cc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90021cc6:	bf00      	nop
90021cc8:	24024598 	.word	0x24024598
90021ccc:	24024590 	.word	0x24024590
90021cd0:	fffff800 	.word	0xfffff800

90021cd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
90021cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021cd8:	b08e      	sub	sp, #56	@ 0x38
90021cda:	460e      	mov	r6, r1
90021cdc:	4604      	mov	r4, r0
90021cde:	461d      	mov	r5, r3
90021ce0:	6808      	ldr	r0, [r1, #0]
90021ce2:	ab0a      	add	r3, sp, #40	@ 0x28
90021ce4:	6849      	ldr	r1, [r1, #4]
90021ce6:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 90021ebc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
90021cea:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 90021ec0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
90021cee:	c303      	stmia	r3!, {r0, r1}
90021cf0:	6810      	ldr	r0, [r2, #0]
90021cf2:	ab0c      	add	r3, sp, #48	@ 0x30
90021cf4:	6851      	ldr	r1, [r2, #4]
90021cf6:	c303      	stmia	r3!, {r0, r1}
90021cf8:	a80a      	add	r0, sp, #40	@ 0x28
90021cfa:	f7f7 fb6f 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021cfe:	4631      	mov	r1, r6
90021d00:	a80c      	add	r0, sp, #48	@ 0x30
90021d02:	f7f7 fb93 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021d06:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90021d0a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90021d0e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90021d12:	f8d8 0000 	ldr.w	r0, [r8]
90021d16:	fb11 2103 	smlabb	r1, r1, r3, r2
90021d1a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
90021d1e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
90021d22:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90021d26:	440c      	add	r4, r1
90021d28:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
90021d2c:	440a      	add	r2, r1
90021d2e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90021d32:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
90021d36:	4413      	add	r3, r2
90021d38:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90021d3c:	6803      	ldr	r3, [r0, #0]
90021d3e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021d40:	4798      	blx	r3
90021d42:	2dff      	cmp	r5, #255	@ 0xff
90021d44:	d124      	bne.n	90021d90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
90021d46:	f010 0f01 	tst.w	r0, #1
90021d4a:	f8d8 0000 	ldr.w	r0, [r8]
90021d4e:	d022      	beq.n	90021d96 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
90021d50:	2100      	movs	r1, #0
90021d52:	f04f 0e01 	mov.w	lr, #1
90021d56:	f8d0 c000 	ldr.w	ip, [r0]
90021d5a:	b2b6      	uxth	r6, r6
90021d5c:	f8cd e018 	str.w	lr, [sp, #24]
90021d60:	b2bf      	uxth	r7, r7
90021d62:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90021d66:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90021d6a:	e9cd 1107 	strd	r1, r1, [sp, #28]
90021d6e:	f8b9 e000 	ldrh.w	lr, [r9]
90021d72:	9503      	str	r5, [sp, #12]
90021d74:	9601      	str	r6, [sp, #4]
90021d76:	9700      	str	r7, [sp, #0]
90021d78:	e9cd 1e04 	strd	r1, lr, [sp, #16]
90021d7c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
90021d80:	9102      	str	r1, [sp, #8]
90021d82:	4621      	mov	r1, r4
90021d84:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
90021d88:	47a8      	blx	r5
90021d8a:	b00e      	add	sp, #56	@ 0x38
90021d8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021d90:	f010 0f04 	tst.w	r0, #4
90021d94:	e7d9      	b.n	90021d4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
90021d96:	6803      	ldr	r3, [r0, #0]
90021d98:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021d9a:	4798      	blx	r3
90021d9c:	f8b9 3000 	ldrh.w	r3, [r9]
90021da0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
90021da4:	ea4f 0e47 	mov.w	lr, r7, lsl #1
90021da8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
90021dac:	435e      	muls	r6, r3
90021dae:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90021db2:	2dff      	cmp	r5, #255	@ 0xff
90021db4:	fb03 1202 	mla	r2, r3, r2, r1
90021db8:	ebac 0c07 	sub.w	ip, ip, r7
90021dbc:	eba3 0707 	sub.w	r7, r3, r7
90021dc0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021dc4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90021dc8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90021dcc:	ea4f 0747 	mov.w	r7, r7, lsl #1
90021dd0:	d049      	beq.n	90021e66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
90021dd2:	43eb      	mvns	r3, r5
90021dd4:	fa1f f985 	uxth.w	r9, r5
90021dd8:	b2db      	uxtb	r3, r3
90021dda:	42b0      	cmp	r0, r6
90021ddc:	d266      	bcs.n	90021eac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90021dde:	eb00 0a0e 	add.w	sl, r0, lr
90021de2:	4550      	cmp	r0, sl
90021de4:	4621      	mov	r1, r4
90021de6:	f104 0403 	add.w	r4, r4, #3
90021dea:	d25b      	bcs.n	90021ea4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
90021dec:	8802      	ldrh	r2, [r0, #0]
90021dee:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90021df2:	ea4f 2822 	mov.w	r8, r2, asr #8
90021df6:	fb11 f109 	smulbb	r1, r1, r9
90021dfa:	10d5      	asrs	r5, r2, #3
90021dfc:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
90021e00:	00d2      	lsls	r2, r2, #3
90021e02:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90021e06:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
90021e0a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
90021e0e:	fb08 1803 	mla	r8, r8, r3, r1
90021e12:	f814 1c02 	ldrb.w	r1, [r4, #-2]
90021e16:	b2d2      	uxtb	r2, r2
90021e18:	fb11 f109 	smulbb	r1, r1, r9
90021e1c:	fa1f f888 	uxth.w	r8, r8
90021e20:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90021e24:	fb05 1503 	mla	r5, r5, r3, r1
90021e28:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90021e2c:	fb11 f109 	smulbb	r1, r1, r9
90021e30:	b2ad      	uxth	r5, r5
90021e32:	fb02 1203 	mla	r2, r2, r3, r1
90021e36:	f108 0101 	add.w	r1, r8, #1
90021e3a:	b292      	uxth	r2, r2
90021e3c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
90021e40:	1c51      	adds	r1, r2, #1
90021e42:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
90021e46:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90021e4a:	1c69      	adds	r1, r5, #1
90021e4c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90021e50:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021e54:	096d      	lsrs	r5, r5, #5
90021e56:	ea42 0208 	orr.w	r2, r2, r8
90021e5a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021e5e:	432a      	orrs	r2, r5
90021e60:	f820 2b02 	strh.w	r2, [r0], #2
90021e64:	e7bd      	b.n	90021de2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
90021e66:	4a14      	ldr	r2, [pc, #80]	@ (90021eb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
90021e68:	42b0      	cmp	r0, r6
90021e6a:	d21f      	bcs.n	90021eac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
90021e6c:	eb00 050e 	add.w	r5, r0, lr
90021e70:	42a8      	cmp	r0, r5
90021e72:	4621      	mov	r1, r4
90021e74:	f104 0403 	add.w	r4, r4, #3
90021e78:	d210      	bcs.n	90021e9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
90021e7a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
90021e7e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
90021e82:	00db      	lsls	r3, r3, #3
90021e84:	ea02 2101 	and.w	r1, r2, r1, lsl #8
90021e88:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021e8c:	430b      	orrs	r3, r1
90021e8e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
90021e92:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
90021e96:	f820 3b02 	strh.w	r3, [r0], #2
90021e9a:	e7e9      	b.n	90021e70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
90021e9c:	4438      	add	r0, r7
90021e9e:	eb01 040c 	add.w	r4, r1, ip
90021ea2:	e7e1      	b.n	90021e68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
90021ea4:	4438      	add	r0, r7
90021ea6:	eb01 040c 	add.w	r4, r1, ip
90021eaa:	e796      	b.n	90021dda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
90021eac:	4b03      	ldr	r3, [pc, #12]	@ (90021ebc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
90021eae:	6818      	ldr	r0, [r3, #0]
90021eb0:	6803      	ldr	r3, [r0, #0]
90021eb2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90021eb4:	4798      	blx	r3
90021eb6:	e768      	b.n	90021d8a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
90021eb8:	fffff800 	.word	0xfffff800
90021ebc:	24024598 	.word	0x24024598
90021ec0:	24024590 	.word	0x24024590

90021ec4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
90021ec4:	b4f0      	push	{r4, r5, r6, r7}
90021ec6:	4616      	mov	r6, r2
90021ec8:	461c      	mov	r4, r3
90021eca:	460d      	mov	r5, r1
90021ecc:	9a04      	ldr	r2, [sp, #16]
90021ece:	2e01      	cmp	r6, #1
90021ed0:	f89d 3014 	ldrb.w	r3, [sp, #20]
90021ed4:	f89d 7018 	ldrb.w	r7, [sp, #24]
90021ed8:	d012      	beq.n	90021f00 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
90021eda:	d303      	bcc.n	90021ee4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
90021edc:	2e02      	cmp	r6, #2
90021ede:	d00a      	beq.n	90021ef6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
90021ee0:	bcf0      	pop	{r4, r5, r6, r7}
90021ee2:	4770      	bx	lr
90021ee4:	6805      	ldr	r5, [r0, #0]
90021ee6:	e9cd 3704 	strd	r3, r7, [sp, #16]
90021eea:	68ed      	ldr	r5, [r5, #12]
90021eec:	4613      	mov	r3, r2
90021eee:	4622      	mov	r2, r4
90021ef0:	46ac      	mov	ip, r5
90021ef2:	bcf0      	pop	{r4, r5, r6, r7}
90021ef4:	4760      	bx	ip
90021ef6:	4621      	mov	r1, r4
90021ef8:	4628      	mov	r0, r5
90021efa:	bcf0      	pop	{r4, r5, r6, r7}
90021efc:	f7ff bd94 	b.w	90021a28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90021f00:	4621      	mov	r1, r4
90021f02:	4628      	mov	r0, r5
90021f04:	bcf0      	pop	{r4, r5, r6, r7}
90021f06:	f7ff bee5 	b.w	90021cd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

90021f0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
90021f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f10:	b093      	sub	sp, #76	@ 0x4c
90021f12:	4681      	mov	r9, r0
90021f14:	4688      	mov	r8, r1
90021f16:	6810      	ldr	r0, [r2, #0]
90021f18:	6851      	ldr	r1, [r2, #4]
90021f1a:	ac0e      	add	r4, sp, #56	@ 0x38
90021f1c:	4616      	mov	r6, r2
90021f1e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
90021f22:	4f6b      	ldr	r7, [pc, #428]	@ (900220d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
90021f24:	c403      	stmia	r4!, {r0, r1}
90021f26:	6818      	ldr	r0, [r3, #0]
90021f28:	ac10      	add	r4, sp, #64	@ 0x40
90021f2a:	6859      	ldr	r1, [r3, #4]
90021f2c:	c403      	stmia	r4!, {r0, r1}
90021f2e:	a80e      	add	r0, sp, #56	@ 0x38
90021f30:	f7f7 fa54 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90021f34:	4631      	mov	r1, r6
90021f36:	a810      	add	r0, sp, #64	@ 0x40
90021f38:	4e66      	ldr	r6, [pc, #408]	@ (900220d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
90021f3a:	f7f7 fa77 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90021f3e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
90021f42:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
90021f46:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
90021f4a:	6830      	ldr	r0, [r6, #0]
90021f4c:	fb11 2103 	smlabb	r1, r1, r3, r2
90021f50:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
90021f54:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
90021f58:	4489      	add	r9, r1
90021f5a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
90021f5e:	440a      	add	r2, r1
90021f60:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
90021f64:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
90021f68:	4413      	add	r3, r2
90021f6a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
90021f6e:	6803      	ldr	r3, [r0, #0]
90021f70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90021f72:	4798      	blx	r3
90021f74:	f010 0f80 	tst.w	r0, #128	@ 0x80
90021f78:	6830      	ldr	r0, [r6, #0]
90021f7a:	d01d      	beq.n	90021fb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
90021f7c:	2200      	movs	r2, #0
90021f7e:	6801      	ldr	r1, [r0, #0]
90021f80:	b2a4      	uxth	r4, r4
90021f82:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90021f86:	b2ad      	uxth	r5, r5
90021f88:	e9cd 2208 	strd	r2, r2, [sp, #32]
90021f8c:	220b      	movs	r2, #11
90021f8e:	9207      	str	r2, [sp, #28]
90021f90:	883a      	ldrh	r2, [r7, #0]
90021f92:	9502      	str	r5, [sp, #8]
90021f94:	9206      	str	r2, [sp, #24]
90021f96:	2201      	movs	r2, #1
90021f98:	9401      	str	r4, [sp, #4]
90021f9a:	e9cd a204 	strd	sl, r2, [sp, #16]
90021f9e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
90021fa2:	9203      	str	r2, [sp, #12]
90021fa4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
90021fa8:	9200      	str	r2, [sp, #0]
90021faa:	4642      	mov	r2, r8
90021fac:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
90021fae:	4649      	mov	r1, r9
90021fb0:	47a0      	blx	r4
90021fb2:	b013      	add	sp, #76	@ 0x4c
90021fb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021fb8:	6803      	ldr	r3, [r0, #0]
90021fba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90021fbc:	4798      	blx	r3
90021fbe:	883b      	ldrh	r3, [r7, #0]
90021fc0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
90021fc4:	f04f 0e04 	mov.w	lr, #4
90021fc8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
90021fcc:	435d      	muls	r5, r3
90021fce:	fb03 1202 	mla	r2, r3, r2, r1
90021fd2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
90021fd6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
90021fda:	920c      	str	r2, [sp, #48]	@ 0x30
90021fdc:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
90021fe0:	1b12      	subs	r2, r2, r4
90021fe2:	920d      	str	r2, [sp, #52]	@ 0x34
90021fe4:	0062      	lsls	r2, r4, #1
90021fe6:	1b1c      	subs	r4, r3, r4
90021fe8:	920a      	str	r2, [sp, #40]	@ 0x28
90021fea:	0063      	lsls	r3, r4, #1
90021fec:	930b      	str	r3, [sp, #44]	@ 0x2c
90021fee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021ff0:	4298      	cmp	r0, r3
90021ff2:	d266      	bcs.n	900220c2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
90021ff4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021ff6:	eb00 0b03 	add.w	fp, r0, r3
90021ffa:	4558      	cmp	r0, fp
90021ffc:	d25c      	bcs.n	900220b8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
90021ffe:	f819 3b01 	ldrb.w	r3, [r9], #1
90022002:	fb1e e303 	smlabb	r3, lr, r3, lr
90022006:	f858 2003 	ldr.w	r2, [r8, r3]
9002200a:	0e11      	lsrs	r1, r2, #24
9002200c:	d012      	beq.n	90022034 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9002200e:	29ff      	cmp	r1, #255	@ 0xff
90022010:	ea4f 2712 	mov.w	r7, r2, lsr #8
90022014:	d110      	bne.n	90022038 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
90022016:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9002201a:	d10d      	bne.n	90022038 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9002201c:	0953      	lsrs	r3, r2, #5
9002201e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
90022022:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90022026:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002202a:	f027 0707 	bic.w	r7, r7, #7
9002202e:	431f      	orrs	r7, r3
90022030:	433a      	orrs	r2, r7
90022032:	8002      	strh	r2, [r0, #0]
90022034:	3002      	adds	r0, #2
90022036:	e7e0      	b.n	90021ffa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
90022038:	fb0a f101 	mul.w	r1, sl, r1
9002203c:	8806      	ldrh	r6, [r0, #0]
9002203e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
90022042:	b2d2      	uxtb	r2, r2
90022044:	1c4b      	adds	r3, r1, #1
90022046:	1235      	asrs	r5, r6, #8
90022048:	10f4      	asrs	r4, r6, #3
9002204a:	eb03 2321 	add.w	r3, r3, r1, asr #8
9002204e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022052:	00f6      	lsls	r6, r6, #3
90022054:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90022058:	121b      	asrs	r3, r3, #8
9002205a:	b2f6      	uxtb	r6, r6
9002205c:	b299      	uxth	r1, r3
9002205e:	43db      	mvns	r3, r3
90022060:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
90022064:	fb1c fc01 	smulbb	ip, ip, r1
90022068:	b2db      	uxtb	r3, r3
9002206a:	fb12 f201 	smulbb	r2, r2, r1
9002206e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
90022072:	fb05 c503 	mla	r5, r5, r3, ip
90022076:	b2ff      	uxtb	r7, r7
90022078:	fb06 2203 	mla	r2, r6, r3, r2
9002207c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
90022080:	fb17 f701 	smulbb	r7, r7, r1
90022084:	b2ad      	uxth	r5, r5
90022086:	b292      	uxth	r2, r2
90022088:	fb04 7403 	mla	r4, r4, r3, r7
9002208c:	f105 0c01 	add.w	ip, r5, #1
90022090:	1c57      	adds	r7, r2, #1
90022092:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90022096:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002209a:	b2a4      	uxth	r4, r4
9002209c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900220a0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900220a4:	433d      	orrs	r5, r7
900220a6:	1c67      	adds	r7, r4, #1
900220a8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
900220ac:	0964      	lsrs	r4, r4, #5
900220ae:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900220b2:	4325      	orrs	r5, r4
900220b4:	8005      	strh	r5, [r0, #0]
900220b6:	e7bd      	b.n	90022034 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
900220b8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900220ba:	4418      	add	r0, r3
900220bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900220be:	4499      	add	r9, r3
900220c0:	e795      	b.n	90021fee <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
900220c2:	4b04      	ldr	r3, [pc, #16]	@ (900220d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
900220c4:	6818      	ldr	r0, [r3, #0]
900220c6:	6803      	ldr	r3, [r0, #0]
900220c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900220ca:	4798      	blx	r3
900220cc:	e771      	b.n	90021fb2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
900220ce:	bf00      	nop
900220d0:	24024590 	.word	0x24024590
900220d4:	24024598 	.word	0x24024598

900220d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
900220d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900220dc:	b087      	sub	sp, #28
900220de:	4680      	mov	r8, r0
900220e0:	460d      	mov	r5, r1
900220e2:	4614      	mov	r4, r2
900220e4:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
900220e8:	2e00      	cmp	r6, #0
900220ea:	f000 80b9 	beq.w	90022260 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
900220ee:	6810      	ldr	r0, [r2, #0]
900220f0:	af02      	add	r7, sp, #8
900220f2:	6851      	ldr	r1, [r2, #4]
900220f4:	c703      	stmia	r7!, {r0, r1}
900220f6:	6818      	ldr	r0, [r3, #0]
900220f8:	af04      	add	r7, sp, #16
900220fa:	6859      	ldr	r1, [r3, #4]
900220fc:	c703      	stmia	r7!, {r0, r1}
900220fe:	a802      	add	r0, sp, #8
90022100:	f7f7 f96c 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90022104:	4621      	mov	r1, r4
90022106:	a804      	add	r0, sp, #16
90022108:	f7f7 f990 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002210c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90022110:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
90022114:	f8bd 400c 	ldrh.w	r4, [sp, #12]
90022118:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9002211c:	fb14 2103 	smlabb	r1, r4, r3, r2
90022120:	eb08 0401 	add.w	r4, r8, r1
90022124:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90022128:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9002212c:	440a      	add	r2, r1
9002212e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
90022132:	f8ad 2010 	strh.w	r2, [sp, #16]
90022136:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9002213a:	4413      	add	r3, r2
9002213c:	f8ad 3012 	strh.w	r3, [sp, #18]
90022140:	4b49      	ldr	r3, [pc, #292]	@ (90022268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90022142:	6818      	ldr	r0, [r3, #0]
90022144:	6803      	ldr	r3, [r0, #0]
90022146:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90022148:	4798      	blx	r3
9002214a:	4b48      	ldr	r3, [pc, #288]	@ (9002226c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9002214c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
90022150:	2eff      	cmp	r6, #255	@ 0xff
90022152:	881a      	ldrh	r2, [r3, #0]
90022154:	f9bd c010 	ldrsh.w	ip, [sp, #16]
90022158:	fb02 c101 	mla	r1, r2, r1, ip
9002215c:	fb02 f207 	mul.w	r2, r2, r7
90022160:	eb00 0041 	add.w	r0, r0, r1, lsl #1
90022164:	f105 0104 	add.w	r1, r5, #4
90022168:	461d      	mov	r5, r3
9002216a:	d05a      	beq.n	90022222 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9002216c:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
90022170:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90022174:	b2b6      	uxth	r6, r6
90022176:	9301      	str	r3, [sp, #4]
90022178:	fa1f fe8e 	uxth.w	lr, lr
9002217c:	4282      	cmp	r2, r0
9002217e:	d96a      	bls.n	90022256 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
90022180:	eb00 0b0a 	add.w	fp, r0, sl
90022184:	4583      	cmp	fp, r0
90022186:	d940      	bls.n	9002220a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
90022188:	8805      	ldrh	r5, [r0, #0]
9002218a:	f814 3b01 	ldrb.w	r3, [r4], #1
9002218e:	122f      	asrs	r7, r5, #8
90022190:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
90022194:	ea4f 09e5 	mov.w	r9, r5, asr #3
90022198:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9002219c:	00ed      	lsls	r5, r5, #3
9002219e:	ea4f 2c23 	mov.w	ip, r3, asr #8
900221a2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
900221a6:	fb17 f70e 	smulbb	r7, r7, lr
900221aa:	b2ed      	uxtb	r5, r5
900221ac:	fb19 f90e 	smulbb	r9, r9, lr
900221b0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900221b4:	fb15 f50e 	smulbb	r5, r5, lr
900221b8:	fb0c 7c06 	mla	ip, ip, r6, r7
900221bc:	10df      	asrs	r7, r3, #3
900221be:	00db      	lsls	r3, r3, #3
900221c0:	fa1f fc8c 	uxth.w	ip, ip
900221c4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900221c8:	b2db      	uxtb	r3, r3
900221ca:	fb07 9706 	mla	r7, r7, r6, r9
900221ce:	f10c 0901 	add.w	r9, ip, #1
900221d2:	fb03 5306 	mla	r3, r3, r6, r5
900221d6:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
900221da:	b29b      	uxth	r3, r3
900221dc:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
900221e0:	b2bf      	uxth	r7, r7
900221e2:	f103 0c01 	add.w	ip, r3, #1
900221e6:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900221ea:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900221ee:	ea4c 0c09 	orr.w	ip, ip, r9
900221f2:	f107 0901 	add.w	r9, r7, #1
900221f6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
900221fa:	097f      	lsrs	r7, r7, #5
900221fc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90022200:	ea4c 0c07 	orr.w	ip, ip, r7
90022204:	f820 cb02 	strh.w	ip, [r0], #2
90022208:	e7bc      	b.n	90022184 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9002220a:	9b01      	ldr	r3, [sp, #4]
9002220c:	881b      	ldrh	r3, [r3, #0]
9002220e:	eba3 0308 	sub.w	r3, r3, r8
90022212:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022216:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002221a:	eba3 0308 	sub.w	r3, r3, r8
9002221e:	441c      	add	r4, r3
90022220:	e7ac      	b.n	9002217c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
90022222:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90022226:	4282      	cmp	r2, r0
90022228:	d915      	bls.n	90022256 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9002222a:	eb00 060a 	add.w	r6, r0, sl
9002222e:	4286      	cmp	r6, r0
90022230:	d906      	bls.n	90022240 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
90022232:	f814 3b01 	ldrb.w	r3, [r4], #1
90022236:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9002223a:	f820 3b02 	strh.w	r3, [r0], #2
9002223e:	e7f6      	b.n	9002222e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
90022240:	882b      	ldrh	r3, [r5, #0]
90022242:	eba3 0308 	sub.w	r3, r3, r8
90022246:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002224a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9002224e:	eba3 0308 	sub.w	r3, r3, r8
90022252:	441c      	add	r4, r3
90022254:	e7e7      	b.n	90022226 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
90022256:	4b04      	ldr	r3, [pc, #16]	@ (90022268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
90022258:	6818      	ldr	r0, [r3, #0]
9002225a:	6803      	ldr	r3, [r0, #0]
9002225c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002225e:	4798      	blx	r3
90022260:	b007      	add	sp, #28
90022262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022266:	bf00      	nop
90022268:	24024598 	.word	0x24024598
9002226c:	24024590 	.word	0x24024590

90022270 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
90022270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022274:	b091      	sub	sp, #68	@ 0x44
90022276:	4680      	mov	r8, r0
90022278:	460f      	mov	r7, r1
9002227a:	4614      	mov	r4, r2
9002227c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
90022280:	2d00      	cmp	r5, #0
90022282:	d051      	beq.n	90022328 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90022284:	6810      	ldr	r0, [r2, #0]
90022286:	ae0c      	add	r6, sp, #48	@ 0x30
90022288:	6851      	ldr	r1, [r2, #4]
9002228a:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 9002248c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9002228e:	c603      	stmia	r6!, {r0, r1}
90022290:	6818      	ldr	r0, [r3, #0]
90022292:	ae0e      	add	r6, sp, #56	@ 0x38
90022294:	6859      	ldr	r1, [r3, #4]
90022296:	c603      	stmia	r6!, {r0, r1}
90022298:	a80c      	add	r0, sp, #48	@ 0x30
9002229a:	f7f7 f89f 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002229e:	4621      	mov	r1, r4
900222a0:	a80e      	add	r0, sp, #56	@ 0x38
900222a2:	f7f7 f8c3 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900222a6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
900222aa:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
900222ae:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
900222b2:	f8d9 0000 	ldr.w	r0, [r9]
900222b6:	fb11 2103 	smlabb	r1, r1, r3, r2
900222ba:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
900222be:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
900222c2:	eb08 0401 	add.w	r4, r8, r1
900222c6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
900222ca:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 90022490 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
900222ce:	440a      	add	r2, r1
900222d0:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
900222d4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
900222d8:	4413      	add	r3, r2
900222da:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
900222de:	6803      	ldr	r3, [r0, #0]
900222e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900222e2:	4798      	blx	r3
900222e4:	f010 0f80 	tst.w	r0, #128	@ 0x80
900222e8:	f8d9 0000 	ldr.w	r0, [r9]
900222ec:	d01f      	beq.n	9002232e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
900222ee:	2200      	movs	r2, #0
900222f0:	6801      	ldr	r1, [r0, #0]
900222f2:	b2b6      	uxth	r6, r6
900222f4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
900222f8:	e9cd 2208 	strd	r2, r2, [sp, #32]
900222fc:	220b      	movs	r2, #11
900222fe:	9207      	str	r2, [sp, #28]
90022300:	f8b8 2000 	ldrh.w	r2, [r8]
90022304:	9601      	str	r6, [sp, #4]
90022306:	9206      	str	r2, [sp, #24]
90022308:	2201      	movs	r2, #1
9002230a:	e9cd 5204 	strd	r5, r2, [sp, #16]
9002230e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
90022312:	9203      	str	r2, [sp, #12]
90022314:	fa1f f28a 	uxth.w	r2, sl
90022318:	9202      	str	r2, [sp, #8]
9002231a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9002231e:	9200      	str	r2, [sp, #0]
90022320:	463a      	mov	r2, r7
90022322:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
90022324:	4621      	mov	r1, r4
90022326:	47a8      	blx	r5
90022328:	b011      	add	sp, #68	@ 0x44
9002232a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002232e:	6803      	ldr	r3, [r0, #0]
90022330:	ea4f 0946 	mov.w	r9, r6, lsl #1
90022334:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90022336:	4798      	blx	r3
90022338:	f8b8 2000 	ldrh.w	r2, [r8]
9002233c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
90022340:	2dff      	cmp	r5, #255	@ 0xff
90022342:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
90022346:	fb0a fa02 	mul.w	sl, sl, r2
9002234a:	fb02 1303 	mla	r3, r2, r3, r1
9002234e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022352:	d062      	beq.n	9002241a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
90022354:	ea6f 0c05 	mvn.w	ip, r5
90022358:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9002235c:	b2ad      	uxth	r5, r5
9002235e:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
90022362:	fa5f fc8c 	uxtb.w	ip, ip
90022366:	930a      	str	r3, [sp, #40]	@ 0x28
90022368:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002236a:	4298      	cmp	r0, r3
9002236c:	f080 8085 	bcs.w	9002247a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90022370:	eb00 0b09 	add.w	fp, r0, r9
90022374:	4558      	cmp	r0, fp
90022376:	d246      	bcs.n	90022406 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
90022378:	f814 eb01 	ldrb.w	lr, [r4], #1
9002237c:	2303      	movs	r3, #3
9002237e:	2204      	movs	r2, #4
90022380:	fb13 2e0e 	smlabb	lr, r3, lr, r2
90022384:	8803      	ldrh	r3, [r0, #0]
90022386:	eb07 0a0e 	add.w	sl, r7, lr
9002238a:	1219      	asrs	r1, r3, #8
9002238c:	10da      	asrs	r2, r3, #3
9002238e:	f817 e00e 	ldrb.w	lr, [r7, lr]
90022392:	f89a 8002 	ldrb.w	r8, [sl, #2]
90022396:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002239a:	00db      	lsls	r3, r3, #3
9002239c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900223a0:	fb18 f805 	smulbb	r8, r8, r5
900223a4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
900223a8:	fb1e fe05 	smulbb	lr, lr, r5
900223ac:	b2db      	uxtb	r3, r3
900223ae:	fb01 810c 	mla	r1, r1, ip, r8
900223b2:	f89a 8001 	ldrb.w	r8, [sl, #1]
900223b6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
900223ba:	fb18 f805 	smulbb	r8, r8, r5
900223be:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
900223c2:	b289      	uxth	r1, r1
900223c4:	fb02 820c 	mla	r2, r2, ip, r8
900223c8:	fb03 e30c 	mla	r3, r3, ip, lr
900223cc:	f101 0801 	add.w	r8, r1, #1
900223d0:	b292      	uxth	r2, r2
900223d2:	b29b      	uxth	r3, r3
900223d4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
900223d8:	f102 0801 	add.w	r8, r2, #1
900223dc:	f103 0e01 	add.w	lr, r3, #1
900223e0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
900223e4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900223e8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
900223ec:	ea4f 1858 	mov.w	r8, r8, lsr #5
900223f0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900223f4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
900223f8:	ea4e 0101 	orr.w	r1, lr, r1
900223fc:	ea41 0108 	orr.w	r1, r1, r8
90022400:	f820 1b02 	strh.w	r1, [r0], #2
90022404:	e7b6      	b.n	90022374 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
90022406:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022408:	881b      	ldrh	r3, [r3, #0]
9002240a:	1b9b      	subs	r3, r3, r6
9002240c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022410:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90022414:	1b9b      	subs	r3, r3, r6
90022416:	441c      	add	r4, r3
90022418:	e7a6      	b.n	90022368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9002241a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9002241e:	2203      	movs	r2, #3
90022420:	2504      	movs	r5, #4
90022422:	4919      	ldr	r1, [pc, #100]	@ (90022488 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
90022424:	4550      	cmp	r0, sl
90022426:	d228      	bcs.n	9002247a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
90022428:	eb00 0c09 	add.w	ip, r0, r9
9002242c:	4560      	cmp	r0, ip
9002242e:	4623      	mov	r3, r4
90022430:	d219      	bcs.n	90022466 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
90022432:	f893 e000 	ldrb.w	lr, [r3]
90022436:	3401      	adds	r4, #1
90022438:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9002243c:	eb07 0b0e 	add.w	fp, r7, lr
90022440:	f817 e00e 	ldrb.w	lr, [r7, lr]
90022444:	f89b 3002 	ldrb.w	r3, [fp, #2]
90022448:	f89b b001 	ldrb.w	fp, [fp, #1]
9002244c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
90022450:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
90022454:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90022458:	ea43 030b 	orr.w	r3, r3, fp
9002245c:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
90022460:	f820 3b02 	strh.w	r3, [r0], #2
90022464:	e7e2      	b.n	9002242c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
90022466:	f8b8 3000 	ldrh.w	r3, [r8]
9002246a:	1b9b      	subs	r3, r3, r6
9002246c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90022470:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90022474:	1b9b      	subs	r3, r3, r6
90022476:	441c      	add	r4, r3
90022478:	e7d4      	b.n	90022424 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9002247a:	4b04      	ldr	r3, [pc, #16]	@ (9002248c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9002247c:	6818      	ldr	r0, [r3, #0]
9002247e:	6803      	ldr	r3, [r0, #0]
90022480:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022482:	4798      	blx	r3
90022484:	e750      	b.n	90022328 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
90022486:	bf00      	nop
90022488:	fffff800 	.word	0xfffff800
9002248c:	24024598 	.word	0x24024598
90022490:	24024590 	.word	0x24024590

90022494 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
90022494:	b4f0      	push	{r4, r5, r6, r7}
90022496:	460c      	mov	r4, r1
90022498:	4611      	mov	r1, r2
9002249a:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002249e:	461a      	mov	r2, r3
900224a0:	780f      	ldrb	r7, [r1, #0]
900224a2:	9b04      	ldr	r3, [sp, #16]
900224a4:	2f01      	cmp	r7, #1
900224a6:	784e      	ldrb	r6, [r1, #1]
900224a8:	d038      	beq.n	9002251c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
900224aa:	d31f      	bcc.n	900224ec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
900224ac:	2f02      	cmp	r7, #2
900224ae:	d14d      	bne.n	9002254c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900224b0:	2e03      	cmp	r6, #3
900224b2:	d84b      	bhi.n	9002254c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900224b4:	e8df f006 	tbb	[pc, r6]
900224b8:	17140702 	.word	0x17140702
900224bc:	9504      	str	r5, [sp, #16]
900224be:	4620      	mov	r0, r4
900224c0:	bcf0      	pop	{r4, r5, r6, r7}
900224c2:	f7ff be09 	b.w	900220d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
900224c6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
900224c8:	2800      	cmp	r0, #0
900224ca:	d03f      	beq.n	9002254c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900224cc:	6806      	ldr	r6, [r0, #0]
900224ce:	e9cd 3504 	strd	r3, r5, [sp, #16]
900224d2:	68b5      	ldr	r5, [r6, #8]
900224d4:	4613      	mov	r3, r2
900224d6:	46ac      	mov	ip, r5
900224d8:	460a      	mov	r2, r1
900224da:	4621      	mov	r1, r4
900224dc:	bcf0      	pop	{r4, r5, r6, r7}
900224de:	4760      	bx	ip
900224e0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
900224e4:	e7f0      	b.n	900224c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900224e6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
900224ea:	e7ed      	b.n	900224c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
900224ec:	2e03      	cmp	r6, #3
900224ee:	d82d      	bhi.n	9002254c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
900224f0:	e8df f006 	tbb	[pc, r6]
900224f4:	110e0702 	.word	0x110e0702
900224f8:	9504      	str	r5, [sp, #16]
900224fa:	4620      	mov	r0, r4
900224fc:	bcf0      	pop	{r4, r5, r6, r7}
900224fe:	f7ff bd05 	b.w	90021f0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
90022502:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90022504:	b310      	cbz	r0, 9002254c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90022506:	6806      	ldr	r6, [r0, #0]
90022508:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002250c:	68f5      	ldr	r5, [r6, #12]
9002250e:	e7e1      	b.n	900224d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90022510:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90022514:	e7f6      	b.n	90022504 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
90022516:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002251a:	e7f3      	b.n	90022504 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9002251c:	2e03      	cmp	r6, #3
9002251e:	d815      	bhi.n	9002254c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90022520:	e8df f006 	tbb	[pc, r6]
90022524:	110e0702 	.word	0x110e0702
90022528:	9504      	str	r5, [sp, #16]
9002252a:	4620      	mov	r0, r4
9002252c:	bcf0      	pop	{r4, r5, r6, r7}
9002252e:	f7ff be9f 	b.w	90022270 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
90022532:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
90022534:	b150      	cbz	r0, 9002254c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
90022536:	6806      	ldr	r6, [r0, #0]
90022538:	e9cd 3504 	strd	r3, r5, [sp, #16]
9002253c:	6935      	ldr	r5, [r6, #16]
9002253e:	e7c9      	b.n	900224d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
90022540:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
90022544:	e7f6      	b.n	90022534 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
90022546:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9002254a:	e7f3      	b.n	90022534 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9002254c:	bcf0      	pop	{r4, r5, r6, r7}
9002254e:	4770      	bx	lr

90022550 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
90022550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022554:	b087      	sub	sp, #28
90022556:	4604      	mov	r4, r0
90022558:	460e      	mov	r6, r1
9002255a:	6810      	ldr	r0, [r2, #0]
9002255c:	6851      	ldr	r1, [r2, #4]
9002255e:	ad02      	add	r5, sp, #8
90022560:	4617      	mov	r7, r2
90022562:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
90022566:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 90022798 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9002256a:	c503      	stmia	r5!, {r0, r1}
9002256c:	6818      	ldr	r0, [r3, #0]
9002256e:	ad04      	add	r5, sp, #16
90022570:	6859      	ldr	r1, [r3, #4]
90022572:	c503      	stmia	r5!, {r0, r1}
90022574:	a802      	add	r0, sp, #8
90022576:	f7f6 ff31 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002257a:	4639      	mov	r1, r7
9002257c:	a804      	add	r0, sp, #16
9002257e:	f7f6 ff55 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90022582:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90022586:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002258a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9002258e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
90022592:	fb11 2103 	smlabb	r1, r1, r3, r2
90022596:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9002259a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9002259e:	440e      	add	r6, r1
900225a0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900225a4:	440a      	add	r2, r1
900225a6:	f8ad 2010 	strh.w	r2, [sp, #16]
900225aa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900225ae:	4413      	add	r3, r2
900225b0:	f8ad 3012 	strh.w	r3, [sp, #18]
900225b4:	4b77      	ldr	r3, [pc, #476]	@ (90022794 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
900225b6:	6818      	ldr	r0, [r3, #0]
900225b8:	6803      	ldr	r3, [r0, #0]
900225ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900225bc:	4798      	blx	r3
900225be:	f8b9 b000 	ldrh.w	fp, [r9]
900225c2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900225c6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900225ca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900225ce:	fb05 f50b 	mul.w	r5, r5, fp
900225d2:	fb0b 2303 	mla	r3, fp, r3, r2
900225d6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900225da:	ea4f 0348 	mov.w	r3, r8, lsl #1
900225de:	9300      	str	r3, [sp, #0]
900225e0:	d069      	beq.n	900226b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
900225e2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
900225e6:	4558      	cmp	r0, fp
900225e8:	f080 80cc 	bcs.w	90022784 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900225ec:	9b00      	ldr	r3, [sp, #0]
900225ee:	4631      	mov	r1, r6
900225f0:	18c3      	adds	r3, r0, r3
900225f2:	9301      	str	r3, [sp, #4]
900225f4:	9b01      	ldr	r3, [sp, #4]
900225f6:	4298      	cmp	r0, r3
900225f8:	d24f      	bcs.n	9002269a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
900225fa:	f811 2b01 	ldrb.w	r2, [r1], #1
900225fe:	2a00      	cmp	r2, #0
90022600:	d048      	beq.n	90022694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90022602:	fb0a f202 	mul.w	r2, sl, r2
90022606:	1c53      	adds	r3, r2, #1
90022608:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002260c:	121b      	asrs	r3, r3, #8
9002260e:	d041      	beq.n	90022694 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
90022610:	8802      	ldrh	r2, [r0, #0]
90022612:	b29e      	uxth	r6, r3
90022614:	f8b4 c000 	ldrh.w	ip, [r4]
90022618:	43db      	mvns	r3, r3
9002261a:	1215      	asrs	r5, r2, #8
9002261c:	b2db      	uxtb	r3, r3
9002261e:	ea4f 272c 	mov.w	r7, ip, asr #8
90022622:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90022626:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9002262a:	fb15 f503 	smulbb	r5, r5, r3
9002262e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
90022632:	00d2      	lsls	r2, r2, #3
90022634:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90022638:	fb07 5706 	mla	r7, r7, r6, r5
9002263c:	ea4f 05ec 	mov.w	r5, ip, asr #3
90022640:	b2d2      	uxtb	r2, r2
90022642:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90022646:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9002264a:	fb1e fe03 	smulbb	lr, lr, r3
9002264e:	b2bf      	uxth	r7, r7
90022650:	fb12 f203 	smulbb	r2, r2, r3
90022654:	fa5f fc8c 	uxtb.w	ip, ip
90022658:	fb05 e506 	mla	r5, r5, r6, lr
9002265c:	f107 0e01 	add.w	lr, r7, #1
90022660:	fb0c 2c06 	mla	ip, ip, r6, r2
90022664:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
90022668:	fa1f fc8c 	uxth.w	ip, ip
9002266c:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
90022670:	b2ad      	uxth	r5, r5
90022672:	f10c 0701 	add.w	r7, ip, #1
90022676:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002267a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9002267e:	ea47 070e 	orr.w	r7, r7, lr
90022682:	f105 0e01 	add.w	lr, r5, #1
90022686:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9002268a:	096d      	lsrs	r5, r5, #5
9002268c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90022690:	432f      	orrs	r7, r5
90022692:	8007      	strh	r7, [r0, #0]
90022694:	3002      	adds	r0, #2
90022696:	3402      	adds	r4, #2
90022698:	e7ac      	b.n	900225f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9002269a:	f8b9 3000 	ldrh.w	r3, [r9]
9002269e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
900226a2:	eba3 0308 	sub.w	r3, r3, r8
900226a6:	eba6 0608 	sub.w	r6, r6, r8
900226aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900226ae:	eb04 0446 	add.w	r4, r4, r6, lsl #1
900226b2:	440e      	add	r6, r1
900226b4:	e797      	b.n	900225e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
900226b6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900226ba:	42a8      	cmp	r0, r5
900226bc:	d262      	bcs.n	90022784 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
900226be:	9b00      	ldr	r3, [sp, #0]
900226c0:	4631      	mov	r1, r6
900226c2:	eb00 0b03 	add.w	fp, r0, r3
900226c6:	4558      	cmp	r0, fp
900226c8:	d24e      	bcs.n	90022768 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
900226ca:	f811 3b01 	ldrb.w	r3, [r1], #1
900226ce:	b12b      	cbz	r3, 900226dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
900226d0:	2bff      	cmp	r3, #255	@ 0xff
900226d2:	f8b4 e000 	ldrh.w	lr, [r4]
900226d6:	d104      	bne.n	900226e2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
900226d8:	f8a0 e000 	strh.w	lr, [r0]
900226dc:	3002      	adds	r0, #2
900226de:	3402      	adds	r4, #2
900226e0:	e7f1      	b.n	900226c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
900226e2:	8802      	ldrh	r2, [r0, #0]
900226e4:	b29f      	uxth	r7, r3
900226e6:	43db      	mvns	r3, r3
900226e8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
900226ec:	1216      	asrs	r6, r2, #8
900226ee:	b2db      	uxtb	r3, r3
900226f0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
900226f4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900226f8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
900226fc:	00d2      	lsls	r2, r2, #3
900226fe:	fb16 f603 	smulbb	r6, r6, r3
90022702:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
90022706:	b2d2      	uxtb	r2, r2
90022708:	fb0c 6c07 	mla	ip, ip, r7, r6
9002270c:	ea4f 06ee 	mov.w	r6, lr, asr #3
90022710:	fb1a fa03 	smulbb	sl, sl, r3
90022714:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90022718:	fa1f fc8c 	uxth.w	ip, ip
9002271c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90022720:	fb12 f303 	smulbb	r3, r2, r3
90022724:	fa5f fe8e 	uxtb.w	lr, lr
90022728:	fb06 a607 	mla	r6, r6, r7, sl
9002272c:	f10c 0201 	add.w	r2, ip, #1
90022730:	fb0e 3307 	mla	r3, lr, r7, r3
90022734:	b2b6      	uxth	r6, r6
90022736:	b29b      	uxth	r3, r3
90022738:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9002273c:	f106 0a01 	add.w	sl, r6, #1
90022740:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
90022744:	f103 0c01 	add.w	ip, r3, #1
90022748:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9002274c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90022750:	0976      	lsrs	r6, r6, #5
90022752:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90022756:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9002275a:	ea4c 0c02 	orr.w	ip, ip, r2
9002275e:	ea4c 0c06 	orr.w	ip, ip, r6
90022762:	f8a0 c000 	strh.w	ip, [r0]
90022766:	e7b9      	b.n	900226dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
90022768:	f8b9 3000 	ldrh.w	r3, [r9]
9002276c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
90022770:	eba3 0308 	sub.w	r3, r3, r8
90022774:	eba6 0608 	sub.w	r6, r6, r8
90022778:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9002277c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
90022780:	440e      	add	r6, r1
90022782:	e79a      	b.n	900226ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
90022784:	4b03      	ldr	r3, [pc, #12]	@ (90022794 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
90022786:	6818      	ldr	r0, [r3, #0]
90022788:	6803      	ldr	r3, [r0, #0]
9002278a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002278c:	4798      	blx	r3
9002278e:	b007      	add	sp, #28
90022790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022794:	24024598 	.word	0x24024598
90022798:	24024590 	.word	0x24024590

9002279c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9002279c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900227a0:	b089      	sub	sp, #36	@ 0x24
900227a2:	4607      	mov	r7, r0
900227a4:	4688      	mov	r8, r1
900227a6:	4692      	mov	sl, r2
900227a8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
900227ac:	4699      	mov	r9, r3
900227ae:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900227b0:	2e00      	cmp	r6, #0
900227b2:	d048      	beq.n	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900227b4:	4608      	mov	r0, r1
900227b6:	f7fa f813 	bl	9001c7e0 <_ZNK8touchgfx6Bitmap8getWidthEv>
900227ba:	4605      	mov	r5, r0
900227bc:	4640      	mov	r0, r8
900227be:	f7fa f843 	bl	9001c848 <_ZNK8touchgfx6Bitmap9getHeightEv>
900227c2:	f8ad 000e 	strh.w	r0, [sp, #14]
900227c6:	4640      	mov	r0, r8
900227c8:	f8ad a008 	strh.w	sl, [sp, #8]
900227cc:	f8ad 500c 	strh.w	r5, [sp, #12]
900227d0:	f8ad 900a 	strh.w	r9, [sp, #10]
900227d4:	f7fa f8f6 	bl	9001c9c4 <_ZNK8touchgfx6Bitmap7getDataEv>
900227d8:	4605      	mov	r5, r0
900227da:	4640      	mov	r0, r8
900227dc:	f7fa f922 	bl	9001ca24 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
900227e0:	4682      	mov	sl, r0
900227e2:	4640      	mov	r0, r8
900227e4:	f7fa f972 	bl	9001cacc <_ZNK8touchgfx6Bitmap9getFormatEv>
900227e8:	2810      	cmp	r0, #16
900227ea:	d82c      	bhi.n	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900227ec:	e8df f010 	tbh	[pc, r0, lsl #1]
900227f0:	00ba00ca 	.word	0x00ba00ca
900227f4:	002b0011 	.word	0x002b0011
900227f8:	002b002b 	.word	0x002b002b
900227fc:	002b002b 	.word	0x002b002b
90022800:	002b002b 	.word	0x002b002b
90022804:	00c1002b 	.word	0x00c1002b
90022808:	002b002b 	.word	0x002b002b
9002280c:	002b0180 	.word	0x002b0180
90022810:	0173      	.short	0x0173
90022812:	4bbc      	ldr	r3, [pc, #752]	@ (90022b04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
90022814:	6818      	ldr	r0, [r3, #0]
90022816:	6803      	ldr	r3, [r0, #0]
90022818:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002281a:	4798      	blx	r3
9002281c:	2eff      	cmp	r6, #255	@ 0xff
9002281e:	d101      	bne.n	90022824 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90022820:	0683      	lsls	r3, r0, #26
90022822:	d506      	bpl.n	90022832 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
90022824:	4633      	mov	r3, r6
90022826:	4622      	mov	r2, r4
90022828:	a902      	add	r1, sp, #8
9002282a:	4628      	mov	r0, r5
9002282c:	f7ff f8fc 	bl	90021a28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022830:	e009      	b.n	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022832:	4640      	mov	r0, r8
90022834:	f7fa f88e 	bl	9001c954 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90022838:	b940      	cbnz	r0, 9002284c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
9002283a:	4623      	mov	r3, r4
9002283c:	aa02      	add	r2, sp, #8
9002283e:	4629      	mov	r1, r5
90022840:	4638      	mov	r0, r7
90022842:	f7ff f9d7 	bl	90021bf4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
90022846:	b009      	add	sp, #36	@ 0x24
90022848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002284c:	f10d 0918 	add.w	r9, sp, #24
90022850:	4641      	mov	r1, r8
90022852:	f10d 0810 	add.w	r8, sp, #16
90022856:	4648      	mov	r0, r9
90022858:	f7fa f82a 	bl	9001c8b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9002285c:	e899 0003 	ldmia.w	r9, {r0, r1}
90022860:	e888 0003 	stmia.w	r8, {r0, r1}
90022864:	4640      	mov	r0, r8
90022866:	4621      	mov	r1, r4
90022868:	f7f0 fe3c 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
9002286c:	4640      	mov	r0, r8
9002286e:	f7f0 fe7c 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
90022872:	2800      	cmp	r0, #0
90022874:	d1d6      	bne.n	90022824 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
90022876:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9002287a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9002287e:	4293      	cmp	r3, r2
90022880:	dd12      	ble.n	900228a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
90022882:	1a9b      	subs	r3, r3, r2
90022884:	f9b4 0000 	ldrsh.w	r0, [r4]
90022888:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002288c:	f8ad 0018 	strh.w	r0, [sp, #24]
90022890:	4628      	mov	r0, r5
90022892:	f8ad 201a 	strh.w	r2, [sp, #26]
90022896:	464a      	mov	r2, r9
90022898:	f8ad 101c 	strh.w	r1, [sp, #28]
9002289c:	a902      	add	r1, sp, #8
9002289e:	f8ad 301e 	strh.w	r3, [sp, #30]
900228a2:	4633      	mov	r3, r6
900228a4:	f7ff f8c0 	bl	90021a28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900228a8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
900228ac:	f9b4 2000 	ldrsh.w	r2, [r4]
900228b0:	4293      	cmp	r3, r2
900228b2:	dd12      	ble.n	900228da <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
900228b4:	1a9b      	subs	r3, r3, r2
900228b6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
900228ba:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
900228be:	f8ad 2018 	strh.w	r2, [sp, #24]
900228c2:	464a      	mov	r2, r9
900228c4:	f8ad 001a 	strh.w	r0, [sp, #26]
900228c8:	4628      	mov	r0, r5
900228ca:	f8ad 301c 	strh.w	r3, [sp, #28]
900228ce:	23ff      	movs	r3, #255	@ 0xff
900228d0:	f8ad 101e 	strh.w	r1, [sp, #30]
900228d4:	a902      	add	r1, sp, #8
900228d6:	f7ff f8a7 	bl	90021a28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
900228da:	4643      	mov	r3, r8
900228dc:	aa02      	add	r2, sp, #8
900228de:	4629      	mov	r1, r5
900228e0:	4638      	mov	r0, r7
900228e2:	f7ff f987 	bl	90021bf4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
900228e6:	88a2      	ldrh	r2, [r4, #4]
900228e8:	8823      	ldrh	r3, [r4, #0]
900228ea:	f8bd 1014 	ldrh.w	r1, [sp, #20]
900228ee:	4413      	add	r3, r2
900228f0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
900228f4:	440a      	add	r2, r1
900228f6:	b29b      	uxth	r3, r3
900228f8:	b292      	uxth	r2, r2
900228fa:	b218      	sxth	r0, r3
900228fc:	b211      	sxth	r1, r2
900228fe:	4288      	cmp	r0, r1
90022900:	dd12      	ble.n	90022928 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
90022902:	1a9b      	subs	r3, r3, r2
90022904:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90022908:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9002290c:	464a      	mov	r2, r9
9002290e:	f8ad 1018 	strh.w	r1, [sp, #24]
90022912:	a902      	add	r1, sp, #8
90022914:	f8ad 301c 	strh.w	r3, [sp, #28]
90022918:	23ff      	movs	r3, #255	@ 0xff
9002291a:	f8ad 001e 	strh.w	r0, [sp, #30]
9002291e:	4628      	mov	r0, r5
90022920:	f8ad 601a 	strh.w	r6, [sp, #26]
90022924:	f7ff f880 	bl	90021a28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
90022928:	88e2      	ldrh	r2, [r4, #6]
9002292a:	8863      	ldrh	r3, [r4, #2]
9002292c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90022930:	4413      	add	r3, r2
90022932:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90022936:	440a      	add	r2, r1
90022938:	b29b      	uxth	r3, r3
9002293a:	b292      	uxth	r2, r2
9002293c:	b218      	sxth	r0, r3
9002293e:	b211      	sxth	r1, r2
90022940:	4288      	cmp	r0, r1
90022942:	dd80      	ble.n	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022944:	1a9b      	subs	r3, r3, r2
90022946:	f9b4 6000 	ldrsh.w	r6, [r4]
9002294a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002294e:	464a      	mov	r2, r9
90022950:	f8ad 301e 	strh.w	r3, [sp, #30]
90022954:	23ff      	movs	r3, #255	@ 0xff
90022956:	f8ad 6018 	strh.w	r6, [sp, #24]
9002295a:	f8ad 101a 	strh.w	r1, [sp, #26]
9002295e:	f8ad 001c 	strh.w	r0, [sp, #28]
90022962:	e761      	b.n	90022828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
90022964:	4633      	mov	r3, r6
90022966:	4622      	mov	r2, r4
90022968:	a902      	add	r1, sp, #8
9002296a:	4628      	mov	r0, r5
9002296c:	f7ff f9b2 	bl	90021cd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
90022970:	e769      	b.n	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022972:	e9cd 4600 	strd	r4, r6, [sp]
90022976:	ab02      	add	r3, sp, #8
90022978:	4652      	mov	r2, sl
9002297a:	4629      	mov	r1, r5
9002297c:	4638      	mov	r0, r7
9002297e:	f7ff fd89 	bl	90022494 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
90022982:	e760      	b.n	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022984:	4640      	mov	r0, r8
90022986:	f7f9 ffe5 	bl	9001c954 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9002298a:	b948      	cbnz	r0, 900229a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
9002298c:	683b      	ldr	r3, [r7, #0]
9002298e:	aa02      	add	r2, sp, #8
90022990:	4629      	mov	r1, r5
90022992:	e9cd 6000 	strd	r6, r0, [sp]
90022996:	4638      	mov	r0, r7
90022998:	68de      	ldr	r6, [r3, #12]
9002299a:	4623      	mov	r3, r4
9002299c:	47b0      	blx	r6
9002299e:	e752      	b.n	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900229a0:	f10d 0918 	add.w	r9, sp, #24
900229a4:	4641      	mov	r1, r8
900229a6:	f10d 0810 	add.w	r8, sp, #16
900229aa:	4648      	mov	r0, r9
900229ac:	f7f9 ff80 	bl	9001c8b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900229b0:	e899 0003 	ldmia.w	r9, {r0, r1}
900229b4:	e888 0003 	stmia.w	r8, {r0, r1}
900229b8:	4640      	mov	r0, r8
900229ba:	4621      	mov	r1, r4
900229bc:	f7f0 fd92 	bl	900134e4 <_ZN8touchgfx4RectaNERKS0_>
900229c0:	4640      	mov	r0, r8
900229c2:	f7f0 fdd2 	bl	9001356a <_ZNK8touchgfx4Rect7isEmptyEv>
900229c6:	b138      	cbz	r0, 900229d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
900229c8:	4623      	mov	r3, r4
900229ca:	9600      	str	r6, [sp, #0]
900229cc:	aa02      	add	r2, sp, #8
900229ce:	4651      	mov	r1, sl
900229d0:	4628      	mov	r0, r5
900229d2:	f7ff fdbd 	bl	90022550 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
900229d6:	e736      	b.n	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
900229d8:	683b      	ldr	r3, [r7, #0]
900229da:	aa02      	add	r2, sp, #8
900229dc:	4629      	mov	r1, r5
900229de:	e9cd 6000 	strd	r6, r0, [sp]
900229e2:	4638      	mov	r0, r7
900229e4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
900229e8:	4643      	mov	r3, r8
900229ea:	47d8      	blx	fp
900229ec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900229f0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900229f4:	4293      	cmp	r3, r2
900229f6:	dd13      	ble.n	90022a20 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
900229f8:	f9b4 0000 	ldrsh.w	r0, [r4]
900229fc:	1a9b      	subs	r3, r3, r2
900229fe:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90022a02:	f8ad 0018 	strh.w	r0, [sp, #24]
90022a06:	4628      	mov	r0, r5
90022a08:	f8ad 201a 	strh.w	r2, [sp, #26]
90022a0c:	aa02      	add	r2, sp, #8
90022a0e:	f8ad 101c 	strh.w	r1, [sp, #28]
90022a12:	4651      	mov	r1, sl
90022a14:	f8ad 301e 	strh.w	r3, [sp, #30]
90022a18:	464b      	mov	r3, r9
90022a1a:	9600      	str	r6, [sp, #0]
90022a1c:	f7ff fd98 	bl	90022550 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022a20:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
90022a24:	f9b4 2000 	ldrsh.w	r2, [r4]
90022a28:	4293      	cmp	r3, r2
90022a2a:	dd13      	ble.n	90022a54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
90022a2c:	1a9b      	subs	r3, r3, r2
90022a2e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
90022a32:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
90022a36:	f8ad 2018 	strh.w	r2, [sp, #24]
90022a3a:	aa02      	add	r2, sp, #8
90022a3c:	f8ad 001a 	strh.w	r0, [sp, #26]
90022a40:	4628      	mov	r0, r5
90022a42:	f8ad 301c 	strh.w	r3, [sp, #28]
90022a46:	464b      	mov	r3, r9
90022a48:	f8ad 101e 	strh.w	r1, [sp, #30]
90022a4c:	4651      	mov	r1, sl
90022a4e:	9600      	str	r6, [sp, #0]
90022a50:	f7ff fd7e 	bl	90022550 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022a54:	88a2      	ldrh	r2, [r4, #4]
90022a56:	8823      	ldrh	r3, [r4, #0]
90022a58:	f8bd 1014 	ldrh.w	r1, [sp, #20]
90022a5c:	4413      	add	r3, r2
90022a5e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90022a62:	440a      	add	r2, r1
90022a64:	b29b      	uxth	r3, r3
90022a66:	b292      	uxth	r2, r2
90022a68:	b218      	sxth	r0, r3
90022a6a:	b211      	sxth	r1, r2
90022a6c:	4288      	cmp	r0, r1
90022a6e:	dd13      	ble.n	90022a98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
90022a70:	1a9b      	subs	r3, r3, r2
90022a72:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
90022a76:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
90022a7a:	aa02      	add	r2, sp, #8
90022a7c:	f8ad 1018 	strh.w	r1, [sp, #24]
90022a80:	4651      	mov	r1, sl
90022a82:	f8ad 301c 	strh.w	r3, [sp, #28]
90022a86:	464b      	mov	r3, r9
90022a88:	f8ad 001e 	strh.w	r0, [sp, #30]
90022a8c:	4628      	mov	r0, r5
90022a8e:	9600      	str	r6, [sp, #0]
90022a90:	f8ad 701a 	strh.w	r7, [sp, #26]
90022a94:	f7ff fd5c 	bl	90022550 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
90022a98:	88e2      	ldrh	r2, [r4, #6]
90022a9a:	8863      	ldrh	r3, [r4, #2]
90022a9c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
90022aa0:	4413      	add	r3, r2
90022aa2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
90022aa6:	440a      	add	r2, r1
90022aa8:	b29b      	uxth	r3, r3
90022aaa:	b292      	uxth	r2, r2
90022aac:	b218      	sxth	r0, r3
90022aae:	b211      	sxth	r1, r2
90022ab0:	4288      	cmp	r0, r1
90022ab2:	f77f aec8 	ble.w	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022ab6:	f9b4 7000 	ldrsh.w	r7, [r4]
90022aba:	1a9b      	subs	r3, r3, r2
90022abc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90022ac0:	f8ad 301e 	strh.w	r3, [sp, #30]
90022ac4:	464b      	mov	r3, r9
90022ac6:	f8ad 7018 	strh.w	r7, [sp, #24]
90022aca:	f8ad 101a 	strh.w	r1, [sp, #26]
90022ace:	f8ad 001c 	strh.w	r0, [sp, #28]
90022ad2:	9600      	str	r6, [sp, #0]
90022ad4:	e77a      	b.n	900229cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
90022ad6:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90022ada:	2800      	cmp	r0, #0
90022adc:	f43f aeb3 	beq.w	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022ae0:	6803      	ldr	r3, [r0, #0]
90022ae2:	9600      	str	r6, [sp, #0]
90022ae4:	68de      	ldr	r6, [r3, #12]
90022ae6:	4623      	mov	r3, r4
90022ae8:	aa02      	add	r2, sp, #8
90022aea:	4629      	mov	r1, r5
90022aec:	47b0      	blx	r6
90022aee:	e6aa      	b.n	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022af0:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90022af4:	2800      	cmp	r0, #0
90022af6:	f43f aea6 	beq.w	90022846 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90022afa:	6803      	ldr	r3, [r0, #0]
90022afc:	9600      	str	r6, [sp, #0]
90022afe:	689e      	ldr	r6, [r3, #8]
90022b00:	e7f1      	b.n	90022ae6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
90022b02:	bf00      	nop
90022b04:	24024598 	.word	0x24024598

90022b08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90022b08:	b180      	cbz	r0, 90022b2c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
90022b0a:	2903      	cmp	r1, #3
90022b0c:	d81c      	bhi.n	90022b48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90022b0e:	e8df f001 	tbb	[pc, r1]
90022b12:	1d02      	.short	0x1d02
90022b14:	1f08      	.short	0x1f08
90022b16:	4b10      	ldr	r3, [pc, #64]	@ (90022b58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90022b18:	8818      	ldrh	r0, [r3, #0]
90022b1a:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022b1e:	4240      	negs	r0, r0
90022b20:	4770      	bx	lr
90022b22:	4b0d      	ldr	r3, [pc, #52]	@ (90022b58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90022b24:	8818      	ldrh	r0, [r3, #0]
90022b26:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022b2a:	4770      	bx	lr
90022b2c:	2903      	cmp	r1, #3
90022b2e:	d80b      	bhi.n	90022b48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90022b30:	a301      	add	r3, pc, #4	@ (adr r3, 90022b38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90022b32:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90022b36:	bf00      	nop
90022b38:	90022b4d 	.word	0x90022b4d
90022b3c:	90022b23 	.word	0x90022b23
90022b40:	90022b51 	.word	0x90022b51
90022b44:	90022b17 	.word	0x90022b17
90022b48:	2000      	movs	r0, #0
90022b4a:	4770      	bx	lr
90022b4c:	2001      	movs	r0, #1
90022b4e:	4770      	bx	lr
90022b50:	f04f 30ff 	mov.w	r0, #4294967295
90022b54:	4770      	bx	lr
90022b56:	bf00      	nop
90022b58:	24024590 	.word	0x24024590

90022b5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
90022b5c:	b180      	cbz	r0, 90022b80 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
90022b5e:	2903      	cmp	r1, #3
90022b60:	d81c      	bhi.n	90022b9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90022b62:	e8df f001 	tbb	[pc, r1]
90022b66:	021d      	.short	0x021d
90022b68:	071f      	.short	0x071f
90022b6a:	4b10      	ldr	r3, [pc, #64]	@ (90022bac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90022b6c:	8818      	ldrh	r0, [r3, #0]
90022b6e:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022b72:	4770      	bx	lr
90022b74:	4b0d      	ldr	r3, [pc, #52]	@ (90022bac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
90022b76:	8818      	ldrh	r0, [r3, #0]
90022b78:	f3c0 000e 	ubfx	r0, r0, #0, #15
90022b7c:	4240      	negs	r0, r0
90022b7e:	4770      	bx	lr
90022b80:	2903      	cmp	r1, #3
90022b82:	d80b      	bhi.n	90022b9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
90022b84:	a301      	add	r3, pc, #4	@ (adr r3, 90022b8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
90022b86:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90022b8a:	bf00      	nop
90022b8c:	90022b6b 	.word	0x90022b6b
90022b90:	90022ba5 	.word	0x90022ba5
90022b94:	90022b75 	.word	0x90022b75
90022b98:	90022ba1 	.word	0x90022ba1
90022b9c:	2000      	movs	r0, #0
90022b9e:	4770      	bx	lr
90022ba0:	2001      	movs	r0, #1
90022ba2:	4770      	bx	lr
90022ba4:	f04f 30ff 	mov.w	r0, #4294967295
90022ba8:	4770      	bx	lr
90022baa:	bf00      	nop
90022bac:	24024590 	.word	0x24024590

90022bb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
90022bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022bb4:	b099      	sub	sp, #100	@ 0x64
90022bb6:	910b      	str	r1, [sp, #44]	@ 0x2c
90022bb8:	a914      	add	r1, sp, #80	@ 0x50
90022bba:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
90022bbe:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
90022bc2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
90022bc6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
90022bca:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
90022bce:	e881 000c 	stmia.w	r1, {r2, r3}
90022bd2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
90022bd6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
90022bda:	9309      	str	r3, [sp, #36]	@ 0x24
90022bdc:	f891 900d 	ldrb.w	r9, [r1, #13]
90022be0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90022be4:	ea4f 1749 	mov.w	r7, r9, lsl #5
90022be8:	9310      	str	r3, [sp, #64]	@ 0x40
90022bea:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
90022bee:	930c      	str	r3, [sp, #48]	@ 0x30
90022bf0:	f407 7380 	and.w	r3, r7, #256	@ 0x100
90022bf4:	798f      	ldrb	r7, [r1, #6]
90022bf6:	431f      	orrs	r7, r3
90022bf8:	f000 8195 	beq.w	90022f26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022bfc:	ea4f 1909 	mov.w	r9, r9, lsl #4
90022c00:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90022c04:	f891 9007 	ldrb.w	r9, [r1, #7]
90022c08:	ea59 0903 	orrs.w	r9, r9, r3
90022c0c:	f000 818b 	beq.w	90022f26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022c10:	f991 3009 	ldrsb.w	r3, [r1, #9]
90022c14:	b29b      	uxth	r3, r3
90022c16:	2d00      	cmp	r5, #0
90022c18:	f000 812e 	beq.w	90022e78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
90022c1c:	1aed      	subs	r5, r5, r3
90022c1e:	b2ad      	uxth	r5, r5
90022c20:	042b      	lsls	r3, r5, #16
90022c22:	d502      	bpl.n	90022c2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90022c24:	1b64      	subs	r4, r4, r5
90022c26:	2500      	movs	r5, #0
90022c28:	b224      	sxth	r4, r4
90022c2a:	f9b2 1000 	ldrsh.w	r1, [r2]
90022c2e:	a814      	add	r0, sp, #80	@ 0x50
90022c30:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
90022c34:	428c      	cmp	r4, r1
90022c36:	b28b      	uxth	r3, r1
90022c38:	bfbf      	itttt	lt
90022c3a:	18ed      	addlt	r5, r5, r3
90022c3c:	1b2c      	sublt	r4, r5, r4
90022c3e:	b2a5      	uxthlt	r5, r4
90022c40:	460c      	movlt	r4, r1
90022c42:	8891      	ldrh	r1, [r2, #4]
90022c44:	440b      	add	r3, r1
90022c46:	4621      	mov	r1, r4
90022c48:	b21b      	sxth	r3, r3
90022c4a:	930f      	str	r3, [sp, #60]	@ 0x3c
90022c4c:	88d3      	ldrh	r3, [r2, #6]
90022c4e:	8852      	ldrh	r2, [r2, #2]
90022c50:	4413      	add	r3, r2
90022c52:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90022c54:	b21b      	sxth	r3, r3
90022c56:	930d      	str	r3, [sp, #52]	@ 0x34
90022c58:	4bbd      	ldr	r3, [pc, #756]	@ (90022f50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
90022c5a:	f893 b000 	ldrb.w	fp, [r3]
90022c5e:	f10b 3cff 	add.w	ip, fp, #4294967295
90022c62:	f1dc 0300 	rsbs	r3, ip, #0
90022c66:	eb43 030c 	adc.w	r3, r3, ip
90022c6a:	930e      	str	r3, [sp, #56]	@ 0x38
90022c6c:	4653      	mov	r3, sl
90022c6e:	f7f6 fa2a 	bl	900190c6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
90022c72:	4621      	mov	r1, r4
90022c74:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
90022c78:	4653      	mov	r3, sl
90022c7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90022c7c:	a814      	add	r0, sp, #80	@ 0x50
90022c7e:	f7f6 fa3f 	bl	90019100 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
90022c82:	a918      	add	r1, sp, #96	@ 0x60
90022c84:	f821 0d02 	strh.w	r0, [r1, #-2]!
90022c88:	a817      	add	r0, sp, #92	@ 0x5c
90022c8a:	f7f6 fb65 	bl	90019358 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
90022c8e:	f1ba 0f00 	cmp.w	sl, #0
90022c92:	f040 80f4 	bne.w	90022e7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
90022c96:	f1bb 0f01 	cmp.w	fp, #1
90022c9a:	f040 80f8 	bne.w	90022e8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
90022c9e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022ca0:	2b00      	cmp	r3, #0
90022ca2:	f040 8145 	bne.w	90022f30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
90022ca6:	b2ba      	uxth	r2, r7
90022ca8:	b905      	cbnz	r5, 90022cac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
90022caa:	b16e      	cbz	r6, 90022cc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
90022cac:	fb06 5302 	mla	r3, r6, r2, r5
90022cb0:	9828      	ldr	r0, [sp, #160]	@ 0xa0
90022cb2:	4631      	mov	r1, r6
90022cb4:	fb08 f303 	mul.w	r3, r8, r3
90022cb8:	f003 0607 	and.w	r6, r3, #7
90022cbc:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
90022cc0:	9328      	str	r3, [sp, #160]	@ 0xa0
90022cc2:	eba9 0301 	sub.w	r3, r9, r1
90022cc6:	930a      	str	r3, [sp, #40]	@ 0x28
90022cc8:	4651      	mov	r1, sl
90022cca:	980e      	ldr	r0, [sp, #56]	@ 0x38
90022ccc:	f7ff ff1c 	bl	90022b08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90022cd0:	4681      	mov	r9, r0
90022cd2:	980e      	ldr	r0, [sp, #56]	@ 0x38
90022cd4:	f7ff ff42 	bl	90022b5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90022cd8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022cda:	9909      	ldr	r1, [sp, #36]	@ 0x24
90022cdc:	4683      	mov	fp, r0
90022cde:	eba3 0a01 	sub.w	sl, r3, r1
90022ce2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022ce4:	459a      	cmp	sl, r3
90022ce6:	bfa8      	it	ge
90022ce8:	469a      	movge	sl, r3
90022cea:	f1ba 0f00 	cmp.w	sl, #0
90022cee:	f340 811a 	ble.w	90022f26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022cf2:	1b64      	subs	r4, r4, r5
90022cf4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022cf6:	1b1c      	subs	r4, r3, r4
90022cf8:	42bc      	cmp	r4, r7
90022cfa:	bfd4      	ite	le
90022cfc:	ebc5 0504 	rsble	r5, r5, r4
90022d00:	ebc5 0507 	rsbgt	r5, r5, r7
90022d04:	2d00      	cmp	r5, #0
90022d06:	f340 810e 	ble.w	90022f26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022d0a:	1b52      	subs	r2, r2, r5
90022d0c:	fb08 f302 	mul.w	r3, r8, r2
90022d10:	930f      	str	r3, [sp, #60]	@ 0x3c
90022d12:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022d14:	2b00      	cmp	r3, #0
90022d16:	f040 8116 	bne.w	90022f46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
90022d1a:	4b8e      	ldr	r3, [pc, #568]	@ (90022f54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
90022d1c:	6818      	ldr	r0, [r3, #0]
90022d1e:	6803      	ldr	r3, [r0, #0]
90022d20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90022d22:	4798      	blx	r3
90022d24:	2301      	movs	r3, #1
90022d26:	4a8c      	ldr	r2, [pc, #560]	@ (90022f58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
90022d28:	fa03 f308 	lsl.w	r3, r3, r8
90022d2c:	8811      	ldrh	r1, [r2, #0]
90022d2e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
90022d32:	3b01      	subs	r3, #1
90022d34:	b2db      	uxtb	r3, r3
90022d36:	930e      	str	r3, [sp, #56]	@ 0x38
90022d38:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
90022d3c:	fb01 2303 	mla	r3, r1, r3, r2
90022d40:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90022d44:	930a      	str	r3, [sp, #40]	@ 0x28
90022d46:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022d48:	f3c3 4307 	ubfx	r3, r3, #16, #8
90022d4c:	9313      	str	r3, [sp, #76]	@ 0x4c
90022d4e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022d50:	0a19      	lsrs	r1, r3, #8
90022d52:	b2cb      	uxtb	r3, r1
90022d54:	9312      	str	r3, [sp, #72]	@ 0x48
90022d56:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022d58:	b2db      	uxtb	r3, r3
90022d5a:	9311      	str	r3, [sp, #68]	@ 0x44
90022d5c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90022d5e:	095a      	lsrs	r2, r3, #5
90022d60:	4b7e      	ldr	r3, [pc, #504]	@ (90022f5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
90022d62:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022d66:	400b      	ands	r3, r1
90022d68:	4313      	orrs	r3, r2
90022d6a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90022d6c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90022d70:	4313      	orrs	r3, r2
90022d72:	b29b      	uxth	r3, r3
90022d74:	9310      	str	r3, [sp, #64]	@ 0x40
90022d76:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022d78:	781a      	ldrb	r2, [r3, #0]
90022d7a:	ea4f 0349 	mov.w	r3, r9, lsl #1
90022d7e:	fb05 b919 	mls	r9, r5, r9, fp
90022d82:	4132      	asrs	r2, r6
90022d84:	fb03 fb05 	mul.w	fp, r3, r5
90022d88:	930d      	str	r3, [sp, #52]	@ 0x34
90022d8a:	b2d2      	uxtb	r2, r2
90022d8c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
90022d90:	f11a 3aff 	adds.w	sl, sl, #4294967295
90022d94:	f0c0 80f5 	bcc.w	90022f82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
90022d98:	46ae      	mov	lr, r5
90022d9a:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
90022d9e:	f11e 3eff 	adds.w	lr, lr, #4294967295
90022da2:	f0c0 80dd 	bcc.w	90022f60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
90022da6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90022da8:	4013      	ands	r3, r2
90022daa:	d055      	beq.n	90022e58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
90022dac:	20ff      	movs	r0, #255	@ 0xff
90022dae:	990e      	ldr	r1, [sp, #56]	@ 0x38
90022db0:	fb90 f1f1 	sdiv	r1, r0, r1
90022db4:	434b      	muls	r3, r1
90022db6:	2bfe      	cmp	r3, #254	@ 0xfe
90022db8:	dd03      	ble.n	90022dc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
90022dba:	990c      	ldr	r1, [sp, #48]	@ 0x30
90022dbc:	4281      	cmp	r1, r0
90022dbe:	f000 80c4 	beq.w	90022f4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
90022dc2:	990c      	ldr	r1, [sp, #48]	@ 0x30
90022dc4:	f8bc 4000 	ldrh.w	r4, [ip]
90022dc8:	fb11 f303 	smulbb	r3, r1, r3
90022dcc:	1220      	asrs	r0, r4, #8
90022dce:	b29b      	uxth	r3, r3
90022dd0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90022dd4:	1c59      	adds	r1, r3, #1
90022dd6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
90022dda:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90022dde:	10e1      	asrs	r1, r4, #3
90022de0:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022de4:	00e4      	lsls	r4, r4, #3
90022de6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90022dea:	b29f      	uxth	r7, r3
90022dec:	43db      	mvns	r3, r3
90022dee:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
90022df2:	b2db      	uxtb	r3, r3
90022df4:	b2e4      	uxtb	r4, r4
90022df6:	9309      	str	r3, [sp, #36]	@ 0x24
90022df8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90022dfa:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90022dfe:	fb13 f907 	smulbb	r9, r3, r7
90022e02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022e04:	fb00 9003 	mla	r0, r0, r3, r9
90022e08:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90022e0a:	fb13 f907 	smulbb	r9, r3, r7
90022e0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022e10:	b280      	uxth	r0, r0
90022e12:	fb01 9103 	mla	r1, r1, r3, r9
90022e16:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90022e18:	fb13 f707 	smulbb	r7, r3, r7
90022e1c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022e1e:	b289      	uxth	r1, r1
90022e20:	fb04 7403 	mla	r4, r4, r3, r7
90022e24:	1c43      	adds	r3, r0, #1
90022e26:	b2a4      	uxth	r4, r4
90022e28:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90022e2c:	f104 0901 	add.w	r9, r4, #1
90022e30:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90022e34:	eb09 2914 	add.w	r9, r9, r4, lsr #8
90022e38:	f3c9 29c4 	ubfx	r9, r9, #11, #5
90022e3c:	ea49 0000 	orr.w	r0, r9, r0
90022e40:	f101 0901 	add.w	r9, r1, #1
90022e44:	eb09 2911 	add.w	r9, r9, r1, lsr #8
90022e48:	ea4f 1959 	mov.w	r9, r9, lsr #5
90022e4c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90022e50:	ea40 0009 	orr.w	r0, r0, r9
90022e54:	f8ac 0000 	strh.w	r0, [ip]
90022e58:	4446      	add	r6, r8
90022e5a:	b2b6      	uxth	r6, r6
90022e5c:	2e07      	cmp	r6, #7
90022e5e:	bf89      	itett	hi
90022e60:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
90022e62:	fa42 f208 	asrls.w	r2, r2, r8
90022e66:	2600      	movhi	r6, #0
90022e68:	785a      	ldrbhi	r2, [r3, #1]
90022e6a:	bf8a      	itet	hi
90022e6c:	3301      	addhi	r3, #1
90022e6e:	b2d2      	uxtbls	r2, r2
90022e70:	9328      	strhi	r3, [sp, #160]	@ 0xa0
90022e72:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022e74:	449c      	add	ip, r3
90022e76:	e792      	b.n	90022d9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
90022e78:	441c      	add	r4, r3
90022e7a:	b224      	sxth	r4, r4
90022e7c:	e6d5      	b.n	90022c2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
90022e7e:	f1ba 0f01 	cmp.w	sl, #1
90022e82:	f47f af0c 	bne.w	90022c9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022e86:	f1bb 0f01 	cmp.w	fp, #1
90022e8a:	f47f af08 	bne.w	90022c9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022e8e:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 90022f54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
90022e92:	f8db 0000 	ldr.w	r0, [fp]
90022e96:	6803      	ldr	r3, [r0, #0]
90022e98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90022e9a:	4798      	blx	r3
90022e9c:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
90022ea0:	465a      	mov	r2, fp
90022ea2:	d006      	beq.n	90022eb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90022ea4:	f1b8 0f04 	cmp.w	r8, #4
90022ea8:	d140      	bne.n	90022f2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
90022eaa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90022eac:	3300      	adds	r3, #0
90022eae:	bf18      	it	ne
90022eb0:	2301      	movne	r3, #1
90022eb2:	0580      	lsls	r0, r0, #22
90022eb4:	d56e      	bpl.n	90022f94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90022eb6:	f1b8 0f08 	cmp.w	r8, #8
90022eba:	d16b      	bne.n	90022f94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
90022ebc:	2b00      	cmp	r3, #0
90022ebe:	bf0c      	ite	eq
90022ec0:	f44f 7100 	moveq.w	r1, #512	@ 0x200
90022ec4:	f44f 7180 	movne.w	r1, #256	@ 0x100
90022ec8:	2d00      	cmp	r5, #0
90022eca:	f47f aee8 	bne.w	90022c9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022ece:	2e00      	cmp	r6, #0
90022ed0:	f47f aee5 	bne.w	90022c9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022ed4:	19e3      	adds	r3, r4, r7
90022ed6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90022ed8:	4283      	cmp	r3, r0
90022eda:	f73f aee0 	bgt.w	90022c9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022ede:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022ee0:	980d      	ldr	r0, [sp, #52]	@ 0x34
90022ee2:	444b      	add	r3, r9
90022ee4:	4283      	cmp	r3, r0
90022ee6:	f73f aeda 	bgt.w	90022c9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022eea:	b2bf      	uxth	r7, r7
90022eec:	f1b8 0f08 	cmp.w	r8, #8
90022ef0:	6810      	ldr	r0, [r2, #0]
90022ef2:	f04f 0500 	mov.w	r5, #0
90022ef6:	bf18      	it	ne
90022ef8:	3701      	addne	r7, #1
90022efa:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
90022efe:	6804      	ldr	r4, [r0, #0]
90022f00:	bf18      	it	ne
90022f02:	f027 0701 	bicne.w	r7, r7, #1
90022f06:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90022f0a:	e9cd 1505 	strd	r1, r5, [sp, #20]
90022f0e:	990c      	ldr	r1, [sp, #48]	@ 0x30
90022f10:	bf18      	it	ne
90022f12:	b2bf      	uxthne	r7, r7
90022f14:	9104      	str	r1, [sp, #16]
90022f16:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90022f18:	e9cd 7900 	strd	r7, r9, [sp]
90022f1c:	e9cd 7102 	strd	r7, r1, [sp, #8]
90022f20:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90022f22:	6d64      	ldr	r4, [r4, #84]	@ 0x54
90022f24:	47a0      	blx	r4
90022f26:	b019      	add	sp, #100	@ 0x64
90022f28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022f2c:	2300      	movs	r3, #0
90022f2e:	e7c0      	b.n	90022eb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
90022f30:	2208      	movs	r2, #8
90022f32:	fb92 f3f8 	sdiv	r3, r2, r8
90022f36:	1e5a      	subs	r2, r3, #1
90022f38:	443a      	add	r2, r7
90022f3a:	fb92 f2f3 	sdiv	r2, r2, r3
90022f3e:	fb12 f203 	smulbb	r2, r2, r3
90022f42:	b292      	uxth	r2, r2
90022f44:	e6b0      	b.n	90022ca8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
90022f46:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90022f48:	e6ec      	b.n	90022d24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
90022f4a:	9810      	ldr	r0, [sp, #64]	@ 0x40
90022f4c:	e782      	b.n	90022e54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
90022f4e:	bf00      	nop
90022f50:	2402458e 	.word	0x2402458e
90022f54:	24024598 	.word	0x24024598
90022f58:	24024590 	.word	0x24024590
90022f5c:	00fff800 	.word	0x00fff800
90022f60:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90022f62:	b153      	cbz	r3, 90022f7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
90022f64:	441e      	add	r6, r3
90022f66:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022f68:	b2b6      	uxth	r6, r6
90022f6a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
90022f6e:	f006 0607 	and.w	r6, r6, #7
90022f72:	781a      	ldrb	r2, [r3, #0]
90022f74:	9328      	str	r3, [sp, #160]	@ 0xa0
90022f76:	4132      	asrs	r2, r6
90022f78:	b2d2      	uxtb	r2, r2
90022f7a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022f7c:	445b      	add	r3, fp
90022f7e:	930a      	str	r3, [sp, #40]	@ 0x28
90022f80:	e706      	b.n	90022d90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
90022f82:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022f84:	2b00      	cmp	r3, #0
90022f86:	d1ce      	bne.n	90022f26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022f88:	4b05      	ldr	r3, [pc, #20]	@ (90022fa0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
90022f8a:	6818      	ldr	r0, [r3, #0]
90022f8c:	6803      	ldr	r3, [r0, #0]
90022f8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90022f90:	4798      	blx	r3
90022f92:	e7c8      	b.n	90022f26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90022f94:	2b00      	cmp	r3, #0
90022f96:	f43f ae82 	beq.w	90022c9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
90022f9a:	f44f 7180 	mov.w	r1, #256	@ 0x100
90022f9e:	e793      	b.n	90022ec8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
90022fa0:	24024598 	.word	0x24024598

90022fa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90022fa4:	b538      	push	{r3, r4, r5, lr}
90022fa6:	4c15      	ldr	r4, [pc, #84]	@ (90022ffc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90022fa8:	4605      	mov	r5, r0
90022faa:	7823      	ldrb	r3, [r4, #0]
90022fac:	f3bf 8f5b 	dmb	ish
90022fb0:	07da      	lsls	r2, r3, #31
90022fb2:	d40b      	bmi.n	90022fcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90022fb4:	4620      	mov	r0, r4
90022fb6:	f008 fdd2 	bl	9002bb5e <__cxa_guard_acquire>
90022fba:	b138      	cbz	r0, 90022fcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
90022fbc:	4620      	mov	r0, r4
90022fbe:	f008 fdda 	bl	9002bb76 <__cxa_guard_release>
90022fc2:	4a0f      	ldr	r2, [pc, #60]	@ (90023000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90022fc4:	490f      	ldr	r1, [pc, #60]	@ (90023004 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
90022fc6:	4810      	ldr	r0, [pc, #64]	@ (90023008 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90022fc8:	f008 fdc2 	bl	9002bb50 <__aeabi_atexit>
90022fcc:	4c0f      	ldr	r4, [pc, #60]	@ (9002300c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
90022fce:	7823      	ldrb	r3, [r4, #0]
90022fd0:	f3bf 8f5b 	dmb	ish
90022fd4:	07db      	lsls	r3, r3, #31
90022fd6:	d40b      	bmi.n	90022ff0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90022fd8:	4620      	mov	r0, r4
90022fda:	f008 fdc0 	bl	9002bb5e <__cxa_guard_acquire>
90022fde:	b138      	cbz	r0, 90022ff0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
90022fe0:	4620      	mov	r0, r4
90022fe2:	f008 fdc8 	bl	9002bb76 <__cxa_guard_release>
90022fe6:	4a06      	ldr	r2, [pc, #24]	@ (90023000 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
90022fe8:	4909      	ldr	r1, [pc, #36]	@ (90023010 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
90022fea:	480a      	ldr	r0, [pc, #40]	@ (90023014 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90022fec:	f008 fdb0 	bl	9002bb50 <__aeabi_atexit>
90022ff0:	4b05      	ldr	r3, [pc, #20]	@ (90023008 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
90022ff2:	616b      	str	r3, [r5, #20]
90022ff4:	4b07      	ldr	r3, [pc, #28]	@ (90023014 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
90022ff6:	61ab      	str	r3, [r5, #24]
90022ff8:	bd38      	pop	{r3, r4, r5, pc}
90022ffa:	bf00      	nop
90022ffc:	2402467c 	.word	0x2402467c
90023000:	24000000 	.word	0x24000000
90023004:	9001f141 	.word	0x9001f141
90023008:	240002f4 	.word	0x240002f4
9002300c:	24024680 	.word	0x24024680
90023010:	9001f13f 	.word	0x9001f13f
90023014:	240002f8 	.word	0x240002f8

90023018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90023018:	b538      	push	{r3, r4, r5, lr}
9002301a:	4c15      	ldr	r4, [pc, #84]	@ (90023070 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9002301c:	4605      	mov	r5, r0
9002301e:	7823      	ldrb	r3, [r4, #0]
90023020:	f3bf 8f5b 	dmb	ish
90023024:	07da      	lsls	r2, r3, #31
90023026:	d40b      	bmi.n	90023040 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90023028:	4620      	mov	r0, r4
9002302a:	f008 fd98 	bl	9002bb5e <__cxa_guard_acquire>
9002302e:	b138      	cbz	r0, 90023040 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90023030:	4620      	mov	r0, r4
90023032:	f008 fda0 	bl	9002bb76 <__cxa_guard_release>
90023036:	4a0f      	ldr	r2, [pc, #60]	@ (90023074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90023038:	490f      	ldr	r1, [pc, #60]	@ (90023078 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9002303a:	4810      	ldr	r0, [pc, #64]	@ (9002307c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002303c:	f008 fd88 	bl	9002bb50 <__aeabi_atexit>
90023040:	4c0f      	ldr	r4, [pc, #60]	@ (90023080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90023042:	7823      	ldrb	r3, [r4, #0]
90023044:	f3bf 8f5b 	dmb	ish
90023048:	07db      	lsls	r3, r3, #31
9002304a:	d40b      	bmi.n	90023064 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9002304c:	4620      	mov	r0, r4
9002304e:	f008 fd86 	bl	9002bb5e <__cxa_guard_acquire>
90023052:	b138      	cbz	r0, 90023064 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90023054:	4620      	mov	r0, r4
90023056:	f008 fd8e 	bl	9002bb76 <__cxa_guard_release>
9002305a:	4a06      	ldr	r2, [pc, #24]	@ (90023074 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9002305c:	4909      	ldr	r1, [pc, #36]	@ (90023084 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9002305e:	480a      	ldr	r0, [pc, #40]	@ (90023088 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90023060:	f008 fd76 	bl	9002bb50 <__aeabi_atexit>
90023064:	4b05      	ldr	r3, [pc, #20]	@ (9002307c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90023066:	60eb      	str	r3, [r5, #12]
90023068:	4b07      	ldr	r3, [pc, #28]	@ (90023088 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002306a:	612b      	str	r3, [r5, #16]
9002306c:	bd38      	pop	{r3, r4, r5, pc}
9002306e:	bf00      	nop
90023070:	24024654 	.word	0x24024654
90023074:	24000000 	.word	0x24000000
90023078:	9001f145 	.word	0x9001f145
9002307c:	240002cc 	.word	0x240002cc
90023080:	24024658 	.word	0x24024658
90023084:	9001f143 	.word	0x9001f143
90023088:	240002d0 	.word	0x240002d0

9002308c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9002308c:	b510      	push	{r4, lr}
9002308e:	4604      	mov	r4, r0
90023090:	f7ff ff88 	bl	90022fa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90023094:	4620      	mov	r0, r4
90023096:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002309a:	f7ff bfbd 	b.w	90023018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

900230a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
900230a0:	b538      	push	{r3, r4, r5, lr}
900230a2:	4c15      	ldr	r4, [pc, #84]	@ (900230f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
900230a4:	4605      	mov	r5, r0
900230a6:	7823      	ldrb	r3, [r4, #0]
900230a8:	f3bf 8f5b 	dmb	ish
900230ac:	07da      	lsls	r2, r3, #31
900230ae:	d40b      	bmi.n	900230c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900230b0:	4620      	mov	r0, r4
900230b2:	f008 fd54 	bl	9002bb5e <__cxa_guard_acquire>
900230b6:	b138      	cbz	r0, 900230c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900230b8:	4620      	mov	r0, r4
900230ba:	f008 fd5c 	bl	9002bb76 <__cxa_guard_release>
900230be:	4a0f      	ldr	r2, [pc, #60]	@ (900230fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900230c0:	490f      	ldr	r1, [pc, #60]	@ (90023100 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
900230c2:	4810      	ldr	r0, [pc, #64]	@ (90023104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900230c4:	f008 fd44 	bl	9002bb50 <__aeabi_atexit>
900230c8:	4c0f      	ldr	r4, [pc, #60]	@ (90023108 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
900230ca:	7823      	ldrb	r3, [r4, #0]
900230cc:	f3bf 8f5b 	dmb	ish
900230d0:	07db      	lsls	r3, r3, #31
900230d2:	d40b      	bmi.n	900230ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900230d4:	4620      	mov	r0, r4
900230d6:	f008 fd42 	bl	9002bb5e <__cxa_guard_acquire>
900230da:	b138      	cbz	r0, 900230ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900230dc:	4620      	mov	r0, r4
900230de:	f008 fd4a 	bl	9002bb76 <__cxa_guard_release>
900230e2:	4a06      	ldr	r2, [pc, #24]	@ (900230fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900230e4:	4909      	ldr	r1, [pc, #36]	@ (9002310c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
900230e6:	480a      	ldr	r0, [pc, #40]	@ (90023110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900230e8:	f008 fd32 	bl	9002bb50 <__aeabi_atexit>
900230ec:	4b05      	ldr	r3, [pc, #20]	@ (90023104 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900230ee:	626b      	str	r3, [r5, #36]	@ 0x24
900230f0:	4b07      	ldr	r3, [pc, #28]	@ (90023110 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900230f2:	62ab      	str	r3, [r5, #40]	@ 0x28
900230f4:	bd38      	pop	{r3, r4, r5, pc}
900230f6:	bf00      	nop
900230f8:	24024684 	.word	0x24024684
900230fc:	24000000 	.word	0x24000000
90023100:	9001f139 	.word	0x9001f139
90023104:	240002fc 	.word	0x240002fc
90023108:	24024688 	.word	0x24024688
9002310c:	9001f137 	.word	0x9001f137
90023110:	24000300 	.word	0x24000300

90023114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90023114:	b538      	push	{r3, r4, r5, lr}
90023116:	4c15      	ldr	r4, [pc, #84]	@ (9002316c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90023118:	4605      	mov	r5, r0
9002311a:	7823      	ldrb	r3, [r4, #0]
9002311c:	f3bf 8f5b 	dmb	ish
90023120:	07da      	lsls	r2, r3, #31
90023122:	d40b      	bmi.n	9002313c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90023124:	4620      	mov	r0, r4
90023126:	f008 fd1a 	bl	9002bb5e <__cxa_guard_acquire>
9002312a:	b138      	cbz	r0, 9002313c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9002312c:	4620      	mov	r0, r4
9002312e:	f008 fd22 	bl	9002bb76 <__cxa_guard_release>
90023132:	4a0f      	ldr	r2, [pc, #60]	@ (90023170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90023134:	490f      	ldr	r1, [pc, #60]	@ (90023174 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90023136:	4810      	ldr	r0, [pc, #64]	@ (90023178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90023138:	f008 fd0a 	bl	9002bb50 <__aeabi_atexit>
9002313c:	4c0f      	ldr	r4, [pc, #60]	@ (9002317c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9002313e:	7823      	ldrb	r3, [r4, #0]
90023140:	f3bf 8f5b 	dmb	ish
90023144:	07db      	lsls	r3, r3, #31
90023146:	d40b      	bmi.n	90023160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90023148:	4620      	mov	r0, r4
9002314a:	f008 fd08 	bl	9002bb5e <__cxa_guard_acquire>
9002314e:	b138      	cbz	r0, 90023160 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90023150:	4620      	mov	r0, r4
90023152:	f008 fd10 	bl	9002bb76 <__cxa_guard_release>
90023156:	4a06      	ldr	r2, [pc, #24]	@ (90023170 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90023158:	4909      	ldr	r1, [pc, #36]	@ (90023180 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9002315a:	480a      	ldr	r0, [pc, #40]	@ (90023184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002315c:	f008 fcf8 	bl	9002bb50 <__aeabi_atexit>
90023160:	4b05      	ldr	r3, [pc, #20]	@ (90023178 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90023162:	61eb      	str	r3, [r5, #28]
90023164:	4b07      	ldr	r3, [pc, #28]	@ (90023184 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90023166:	622b      	str	r3, [r5, #32]
90023168:	bd38      	pop	{r3, r4, r5, pc}
9002316a:	bf00      	nop
9002316c:	2402465c 	.word	0x2402465c
90023170:	24000000 	.word	0x24000000
90023174:	9001f13d 	.word	0x9001f13d
90023178:	240002d4 	.word	0x240002d4
9002317c:	24024660 	.word	0x24024660
90023180:	9001f13b 	.word	0x9001f13b
90023184:	240002d8 	.word	0x240002d8

90023188 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90023188:	b510      	push	{r4, lr}
9002318a:	4604      	mov	r4, r0
9002318c:	f7ff ff88 	bl	900230a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90023190:	4620      	mov	r0, r4
90023192:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023196:	f7ff bfbd 	b.w	90023114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9002319c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9002319c:	b538      	push	{r3, r4, r5, lr}
9002319e:	4c15      	ldr	r4, [pc, #84]	@ (900231f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
900231a0:	4605      	mov	r5, r0
900231a2:	7823      	ldrb	r3, [r4, #0]
900231a4:	f3bf 8f5b 	dmb	ish
900231a8:	07da      	lsls	r2, r3, #31
900231aa:	d40b      	bmi.n	900231c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900231ac:	4620      	mov	r0, r4
900231ae:	f008 fcd6 	bl	9002bb5e <__cxa_guard_acquire>
900231b2:	b138      	cbz	r0, 900231c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900231b4:	4620      	mov	r0, r4
900231b6:	f008 fcde 	bl	9002bb76 <__cxa_guard_release>
900231ba:	4a0f      	ldr	r2, [pc, #60]	@ (900231f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900231bc:	490f      	ldr	r1, [pc, #60]	@ (900231fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
900231be:	4810      	ldr	r0, [pc, #64]	@ (90023200 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900231c0:	f008 fcc6 	bl	9002bb50 <__aeabi_atexit>
900231c4:	4c0f      	ldr	r4, [pc, #60]	@ (90023204 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
900231c6:	7823      	ldrb	r3, [r4, #0]
900231c8:	f3bf 8f5b 	dmb	ish
900231cc:	07db      	lsls	r3, r3, #31
900231ce:	d40b      	bmi.n	900231e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900231d0:	4620      	mov	r0, r4
900231d2:	f008 fcc4 	bl	9002bb5e <__cxa_guard_acquire>
900231d6:	b138      	cbz	r0, 900231e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900231d8:	4620      	mov	r0, r4
900231da:	f008 fccc 	bl	9002bb76 <__cxa_guard_release>
900231de:	4a06      	ldr	r2, [pc, #24]	@ (900231f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900231e0:	4909      	ldr	r1, [pc, #36]	@ (90023208 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
900231e2:	480a      	ldr	r0, [pc, #40]	@ (9002320c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900231e4:	f008 fcb4 	bl	9002bb50 <__aeabi_atexit>
900231e8:	4b05      	ldr	r3, [pc, #20]	@ (90023200 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900231ea:	636b      	str	r3, [r5, #52]	@ 0x34
900231ec:	4b07      	ldr	r3, [pc, #28]	@ (9002320c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900231ee:	63ab      	str	r3, [r5, #56]	@ 0x38
900231f0:	bd38      	pop	{r3, r4, r5, pc}
900231f2:	bf00      	nop
900231f4:	24024694 	.word	0x24024694
900231f8:	24000000 	.word	0x24000000
900231fc:	9001f131 	.word	0x9001f131
90023200:	2400030c 	.word	0x2400030c
90023204:	24024698 	.word	0x24024698
90023208:	9001f12f 	.word	0x9001f12f
9002320c:	24000310 	.word	0x24000310

90023210 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90023210:	b538      	push	{r3, r4, r5, lr}
90023212:	4c15      	ldr	r4, [pc, #84]	@ (90023268 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90023214:	4605      	mov	r5, r0
90023216:	7823      	ldrb	r3, [r4, #0]
90023218:	f3bf 8f5b 	dmb	ish
9002321c:	07da      	lsls	r2, r3, #31
9002321e:	d40b      	bmi.n	90023238 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90023220:	4620      	mov	r0, r4
90023222:	f008 fc9c 	bl	9002bb5e <__cxa_guard_acquire>
90023226:	b138      	cbz	r0, 90023238 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90023228:	4620      	mov	r0, r4
9002322a:	f008 fca4 	bl	9002bb76 <__cxa_guard_release>
9002322e:	4a0f      	ldr	r2, [pc, #60]	@ (9002326c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90023230:	490f      	ldr	r1, [pc, #60]	@ (90023270 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90023232:	4810      	ldr	r0, [pc, #64]	@ (90023274 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90023234:	f008 fc8c 	bl	9002bb50 <__aeabi_atexit>
90023238:	4c0f      	ldr	r4, [pc, #60]	@ (90023278 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9002323a:	7823      	ldrb	r3, [r4, #0]
9002323c:	f3bf 8f5b 	dmb	ish
90023240:	07db      	lsls	r3, r3, #31
90023242:	d40b      	bmi.n	9002325c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90023244:	4620      	mov	r0, r4
90023246:	f008 fc8a 	bl	9002bb5e <__cxa_guard_acquire>
9002324a:	b138      	cbz	r0, 9002325c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9002324c:	4620      	mov	r0, r4
9002324e:	f008 fc92 	bl	9002bb76 <__cxa_guard_release>
90023252:	4a06      	ldr	r2, [pc, #24]	@ (9002326c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90023254:	4909      	ldr	r1, [pc, #36]	@ (9002327c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90023256:	480a      	ldr	r0, [pc, #40]	@ (90023280 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90023258:	f008 fc7a 	bl	9002bb50 <__aeabi_atexit>
9002325c:	4b05      	ldr	r3, [pc, #20]	@ (90023274 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9002325e:	62eb      	str	r3, [r5, #44]	@ 0x2c
90023260:	4b07      	ldr	r3, [pc, #28]	@ (90023280 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90023262:	632b      	str	r3, [r5, #48]	@ 0x30
90023264:	bd38      	pop	{r3, r4, r5, pc}
90023266:	bf00      	nop
90023268:	24024664 	.word	0x24024664
9002326c:	24000000 	.word	0x24000000
90023270:	9001f135 	.word	0x9001f135
90023274:	240002dc 	.word	0x240002dc
90023278:	24024668 	.word	0x24024668
9002327c:	9001f133 	.word	0x9001f133
90023280:	240002e0 	.word	0x240002e0

90023284 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90023284:	b510      	push	{r4, lr}
90023286:	4604      	mov	r4, r0
90023288:	f7ff ff88 	bl	9002319c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9002328c:	4620      	mov	r0, r4
9002328e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023292:	f7ff bfbd 	b.w	90023210 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90023298 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90023298:	b538      	push	{r3, r4, r5, lr}
9002329a:	4c15      	ldr	r4, [pc, #84]	@ (900232f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9002329c:	4605      	mov	r5, r0
9002329e:	7823      	ldrb	r3, [r4, #0]
900232a0:	f3bf 8f5b 	dmb	ish
900232a4:	07da      	lsls	r2, r3, #31
900232a6:	d40b      	bmi.n	900232c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900232a8:	4620      	mov	r0, r4
900232aa:	f008 fc58 	bl	9002bb5e <__cxa_guard_acquire>
900232ae:	b138      	cbz	r0, 900232c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900232b0:	4620      	mov	r0, r4
900232b2:	f008 fc60 	bl	9002bb76 <__cxa_guard_release>
900232b6:	4a0f      	ldr	r2, [pc, #60]	@ (900232f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900232b8:	490f      	ldr	r1, [pc, #60]	@ (900232f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
900232ba:	4810      	ldr	r0, [pc, #64]	@ (900232fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900232bc:	f008 fc48 	bl	9002bb50 <__aeabi_atexit>
900232c0:	4c0f      	ldr	r4, [pc, #60]	@ (90023300 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
900232c2:	7823      	ldrb	r3, [r4, #0]
900232c4:	f3bf 8f5b 	dmb	ish
900232c8:	07db      	lsls	r3, r3, #31
900232ca:	d40b      	bmi.n	900232e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900232cc:	4620      	mov	r0, r4
900232ce:	f008 fc46 	bl	9002bb5e <__cxa_guard_acquire>
900232d2:	b138      	cbz	r0, 900232e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900232d4:	4620      	mov	r0, r4
900232d6:	f008 fc4e 	bl	9002bb76 <__cxa_guard_release>
900232da:	4a06      	ldr	r2, [pc, #24]	@ (900232f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900232dc:	4909      	ldr	r1, [pc, #36]	@ (90023304 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
900232de:	480a      	ldr	r0, [pc, #40]	@ (90023308 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900232e0:	f008 fc36 	bl	9002bb50 <__aeabi_atexit>
900232e4:	4b05      	ldr	r3, [pc, #20]	@ (900232fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900232e6:	656b      	str	r3, [r5, #84]	@ 0x54
900232e8:	4b07      	ldr	r3, [pc, #28]	@ (90023308 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900232ea:	65ab      	str	r3, [r5, #88]	@ 0x58
900232ec:	bd38      	pop	{r3, r4, r5, pc}
900232ee:	bf00      	nop
900232f0:	2402469c 	.word	0x2402469c
900232f4:	24000000 	.word	0x24000000
900232f8:	9001f121 	.word	0x9001f121
900232fc:	24000314 	.word	0x24000314
90023300:	240246a0 	.word	0x240246a0
90023304:	9001f11f 	.word	0x9001f11f
90023308:	24000318 	.word	0x24000318

9002330c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9002330c:	b538      	push	{r3, r4, r5, lr}
9002330e:	4c15      	ldr	r4, [pc, #84]	@ (90023364 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90023310:	4605      	mov	r5, r0
90023312:	7823      	ldrb	r3, [r4, #0]
90023314:	f3bf 8f5b 	dmb	ish
90023318:	07da      	lsls	r2, r3, #31
9002331a:	d40b      	bmi.n	90023334 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9002331c:	4620      	mov	r0, r4
9002331e:	f008 fc1e 	bl	9002bb5e <__cxa_guard_acquire>
90023322:	b138      	cbz	r0, 90023334 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90023324:	4620      	mov	r0, r4
90023326:	f008 fc26 	bl	9002bb76 <__cxa_guard_release>
9002332a:	4a0f      	ldr	r2, [pc, #60]	@ (90023368 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9002332c:	490f      	ldr	r1, [pc, #60]	@ (9002336c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9002332e:	4810      	ldr	r0, [pc, #64]	@ (90023370 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90023330:	f008 fc0e 	bl	9002bb50 <__aeabi_atexit>
90023334:	4c0f      	ldr	r4, [pc, #60]	@ (90023374 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90023336:	7823      	ldrb	r3, [r4, #0]
90023338:	f3bf 8f5b 	dmb	ish
9002333c:	07db      	lsls	r3, r3, #31
9002333e:	d40b      	bmi.n	90023358 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90023340:	4620      	mov	r0, r4
90023342:	f008 fc0c 	bl	9002bb5e <__cxa_guard_acquire>
90023346:	b138      	cbz	r0, 90023358 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90023348:	4620      	mov	r0, r4
9002334a:	f008 fc14 	bl	9002bb76 <__cxa_guard_release>
9002334e:	4a06      	ldr	r2, [pc, #24]	@ (90023368 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90023350:	4909      	ldr	r1, [pc, #36]	@ (90023378 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90023352:	480a      	ldr	r0, [pc, #40]	@ (9002337c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90023354:	f008 fbfc 	bl	9002bb50 <__aeabi_atexit>
90023358:	4b05      	ldr	r3, [pc, #20]	@ (90023370 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9002335a:	64eb      	str	r3, [r5, #76]	@ 0x4c
9002335c:	4b07      	ldr	r3, [pc, #28]	@ (9002337c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9002335e:	652b      	str	r3, [r5, #80]	@ 0x50
90023360:	bd38      	pop	{r3, r4, r5, pc}
90023362:	bf00      	nop
90023364:	240246a4 	.word	0x240246a4
90023368:	24000000 	.word	0x24000000
9002336c:	9001f125 	.word	0x9001f125
90023370:	2400031c 	.word	0x2400031c
90023374:	240246a8 	.word	0x240246a8
90023378:	9001f123 	.word	0x9001f123
9002337c:	24000320 	.word	0x24000320

90023380 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90023380:	b538      	push	{r3, r4, r5, lr}
90023382:	4c15      	ldr	r4, [pc, #84]	@ (900233d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90023384:	4605      	mov	r5, r0
90023386:	7823      	ldrb	r3, [r4, #0]
90023388:	f3bf 8f5b 	dmb	ish
9002338c:	07da      	lsls	r2, r3, #31
9002338e:	d40b      	bmi.n	900233a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90023390:	4620      	mov	r0, r4
90023392:	f008 fbe4 	bl	9002bb5e <__cxa_guard_acquire>
90023396:	b138      	cbz	r0, 900233a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90023398:	4620      	mov	r0, r4
9002339a:	f008 fbec 	bl	9002bb76 <__cxa_guard_release>
9002339e:	4a0f      	ldr	r2, [pc, #60]	@ (900233dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900233a0:	490f      	ldr	r1, [pc, #60]	@ (900233e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
900233a2:	4810      	ldr	r0, [pc, #64]	@ (900233e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900233a4:	f008 fbd4 	bl	9002bb50 <__aeabi_atexit>
900233a8:	4c0f      	ldr	r4, [pc, #60]	@ (900233e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
900233aa:	7823      	ldrb	r3, [r4, #0]
900233ac:	f3bf 8f5b 	dmb	ish
900233b0:	07db      	lsls	r3, r3, #31
900233b2:	d40b      	bmi.n	900233cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900233b4:	4620      	mov	r0, r4
900233b6:	f008 fbd2 	bl	9002bb5e <__cxa_guard_acquire>
900233ba:	b138      	cbz	r0, 900233cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900233bc:	4620      	mov	r0, r4
900233be:	f008 fbda 	bl	9002bb76 <__cxa_guard_release>
900233c2:	4a06      	ldr	r2, [pc, #24]	@ (900233dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900233c4:	4909      	ldr	r1, [pc, #36]	@ (900233ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
900233c6:	480a      	ldr	r0, [pc, #40]	@ (900233f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900233c8:	f008 fbc2 	bl	9002bb50 <__aeabi_atexit>
900233cc:	4b05      	ldr	r3, [pc, #20]	@ (900233e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900233ce:	646b      	str	r3, [r5, #68]	@ 0x44
900233d0:	4b07      	ldr	r3, [pc, #28]	@ (900233f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900233d2:	64ab      	str	r3, [r5, #72]	@ 0x48
900233d4:	bd38      	pop	{r3, r4, r5, pc}
900233d6:	bf00      	nop
900233d8:	2402466c 	.word	0x2402466c
900233dc:	24000000 	.word	0x24000000
900233e0:	9001f129 	.word	0x9001f129
900233e4:	240002e4 	.word	0x240002e4
900233e8:	24024670 	.word	0x24024670
900233ec:	9001f127 	.word	0x9001f127
900233f0:	240002e8 	.word	0x240002e8

900233f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
900233f4:	b538      	push	{r3, r4, r5, lr}
900233f6:	4c15      	ldr	r4, [pc, #84]	@ (9002344c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
900233f8:	4605      	mov	r5, r0
900233fa:	7823      	ldrb	r3, [r4, #0]
900233fc:	f3bf 8f5b 	dmb	ish
90023400:	07da      	lsls	r2, r3, #31
90023402:	d40b      	bmi.n	9002341c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
90023404:	4620      	mov	r0, r4
90023406:	f008 fbaa 	bl	9002bb5e <__cxa_guard_acquire>
9002340a:	b138      	cbz	r0, 9002341c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9002340c:	4620      	mov	r0, r4
9002340e:	f008 fbb2 	bl	9002bb76 <__cxa_guard_release>
90023412:	4a0f      	ldr	r2, [pc, #60]	@ (90023450 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90023414:	490f      	ldr	r1, [pc, #60]	@ (90023454 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90023416:	4810      	ldr	r0, [pc, #64]	@ (90023458 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90023418:	f008 fb9a 	bl	9002bb50 <__aeabi_atexit>
9002341c:	4c0f      	ldr	r4, [pc, #60]	@ (9002345c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9002341e:	7823      	ldrb	r3, [r4, #0]
90023420:	f3bf 8f5b 	dmb	ish
90023424:	07db      	lsls	r3, r3, #31
90023426:	d40b      	bmi.n	90023440 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90023428:	4620      	mov	r0, r4
9002342a:	f008 fb98 	bl	9002bb5e <__cxa_guard_acquire>
9002342e:	b138      	cbz	r0, 90023440 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90023430:	4620      	mov	r0, r4
90023432:	f008 fba0 	bl	9002bb76 <__cxa_guard_release>
90023436:	4a06      	ldr	r2, [pc, #24]	@ (90023450 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90023438:	4909      	ldr	r1, [pc, #36]	@ (90023460 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9002343a:	480a      	ldr	r0, [pc, #40]	@ (90023464 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9002343c:	f008 fb88 	bl	9002bb50 <__aeabi_atexit>
90023440:	4b05      	ldr	r3, [pc, #20]	@ (90023458 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90023442:	63eb      	str	r3, [r5, #60]	@ 0x3c
90023444:	4b07      	ldr	r3, [pc, #28]	@ (90023464 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90023446:	642b      	str	r3, [r5, #64]	@ 0x40
90023448:	bd38      	pop	{r3, r4, r5, pc}
9002344a:	bf00      	nop
9002344c:	2402468c 	.word	0x2402468c
90023450:	24000000 	.word	0x24000000
90023454:	9001f12d 	.word	0x9001f12d
90023458:	24000304 	.word	0x24000304
9002345c:	24024690 	.word	0x24024690
90023460:	9001f12b 	.word	0x9001f12b
90023464:	24000308 	.word	0x24000308

90023468 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90023468:	b510      	push	{r4, lr}
9002346a:	4604      	mov	r4, r0
9002346c:	f7ff ff14 	bl	90023298 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90023470:	4620      	mov	r0, r4
90023472:	f7ff ff85 	bl	90023380 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90023476:	4620      	mov	r0, r4
90023478:	f7ff ff48 	bl	9002330c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9002347c:	4620      	mov	r0, r4
9002347e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023482:	f7ff bfb7 	b.w	900233f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90023488 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90023488:	b538      	push	{r3, r4, r5, lr}
9002348a:	4c15      	ldr	r4, [pc, #84]	@ (900234e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9002348c:	4605      	mov	r5, r0
9002348e:	7823      	ldrb	r3, [r4, #0]
90023490:	f3bf 8f5b 	dmb	ish
90023494:	07da      	lsls	r2, r3, #31
90023496:	d40b      	bmi.n	900234b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90023498:	4620      	mov	r0, r4
9002349a:	f008 fb60 	bl	9002bb5e <__cxa_guard_acquire>
9002349e:	b138      	cbz	r0, 900234b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
900234a0:	4620      	mov	r0, r4
900234a2:	f008 fb68 	bl	9002bb76 <__cxa_guard_release>
900234a6:	4a0f      	ldr	r2, [pc, #60]	@ (900234e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900234a8:	490f      	ldr	r1, [pc, #60]	@ (900234e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
900234aa:	4810      	ldr	r0, [pc, #64]	@ (900234ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900234ac:	f008 fb50 	bl	9002bb50 <__aeabi_atexit>
900234b0:	4c0f      	ldr	r4, [pc, #60]	@ (900234f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
900234b2:	7823      	ldrb	r3, [r4, #0]
900234b4:	f3bf 8f5b 	dmb	ish
900234b8:	07db      	lsls	r3, r3, #31
900234ba:	d40b      	bmi.n	900234d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
900234bc:	4620      	mov	r0, r4
900234be:	f008 fb4e 	bl	9002bb5e <__cxa_guard_acquire>
900234c2:	b138      	cbz	r0, 900234d4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
900234c4:	4620      	mov	r0, r4
900234c6:	f008 fb56 	bl	9002bb76 <__cxa_guard_release>
900234ca:	4a06      	ldr	r2, [pc, #24]	@ (900234e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
900234cc:	4909      	ldr	r1, [pc, #36]	@ (900234f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
900234ce:	480a      	ldr	r0, [pc, #40]	@ (900234f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900234d0:	f008 fb3e 	bl	9002bb50 <__aeabi_atexit>
900234d4:	4b05      	ldr	r3, [pc, #20]	@ (900234ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
900234d6:	666b      	str	r3, [r5, #100]	@ 0x64
900234d8:	4b07      	ldr	r3, [pc, #28]	@ (900234f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
900234da:	66ab      	str	r3, [r5, #104]	@ 0x68
900234dc:	bd38      	pop	{r3, r4, r5, pc}
900234de:	bf00      	nop
900234e0:	24024674 	.word	0x24024674
900234e4:	24000000 	.word	0x24000000
900234e8:	9001f119 	.word	0x9001f119
900234ec:	240002ec 	.word	0x240002ec
900234f0:	24024678 	.word	0x24024678
900234f4:	9001f117 	.word	0x9001f117
900234f8:	240002f0 	.word	0x240002f0

900234fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
900234fc:	b538      	push	{r3, r4, r5, lr}
900234fe:	4c15      	ldr	r4, [pc, #84]	@ (90023554 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90023500:	4605      	mov	r5, r0
90023502:	7823      	ldrb	r3, [r4, #0]
90023504:	f3bf 8f5b 	dmb	ish
90023508:	07da      	lsls	r2, r3, #31
9002350a:	d40b      	bmi.n	90023524 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9002350c:	4620      	mov	r0, r4
9002350e:	f008 fb26 	bl	9002bb5e <__cxa_guard_acquire>
90023512:	b138      	cbz	r0, 90023524 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90023514:	4620      	mov	r0, r4
90023516:	f008 fb2e 	bl	9002bb76 <__cxa_guard_release>
9002351a:	4a0f      	ldr	r2, [pc, #60]	@ (90023558 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9002351c:	490f      	ldr	r1, [pc, #60]	@ (9002355c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9002351e:	4810      	ldr	r0, [pc, #64]	@ (90023560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90023520:	f008 fb16 	bl	9002bb50 <__aeabi_atexit>
90023524:	4c0f      	ldr	r4, [pc, #60]	@ (90023564 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90023526:	7823      	ldrb	r3, [r4, #0]
90023528:	f3bf 8f5b 	dmb	ish
9002352c:	07db      	lsls	r3, r3, #31
9002352e:	d40b      	bmi.n	90023548 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90023530:	4620      	mov	r0, r4
90023532:	f008 fb14 	bl	9002bb5e <__cxa_guard_acquire>
90023536:	b138      	cbz	r0, 90023548 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90023538:	4620      	mov	r0, r4
9002353a:	f008 fb1c 	bl	9002bb76 <__cxa_guard_release>
9002353e:	4a06      	ldr	r2, [pc, #24]	@ (90023558 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90023540:	4909      	ldr	r1, [pc, #36]	@ (90023568 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90023542:	480a      	ldr	r0, [pc, #40]	@ (9002356c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90023544:	f008 fb04 	bl	9002bb50 <__aeabi_atexit>
90023548:	4b05      	ldr	r3, [pc, #20]	@ (90023560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9002354a:	65eb      	str	r3, [r5, #92]	@ 0x5c
9002354c:	4b07      	ldr	r3, [pc, #28]	@ (9002356c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9002354e:	662b      	str	r3, [r5, #96]	@ 0x60
90023550:	bd38      	pop	{r3, r4, r5, pc}
90023552:	bf00      	nop
90023554:	2402464c 	.word	0x2402464c
90023558:	24000000 	.word	0x24000000
9002355c:	9001f11d 	.word	0x9001f11d
90023560:	240002c4 	.word	0x240002c4
90023564:	24024650 	.word	0x24024650
90023568:	9001f11b 	.word	0x9001f11b
9002356c:	240002c8 	.word	0x240002c8

90023570 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90023570:	b510      	push	{r4, lr}
90023572:	4604      	mov	r4, r0
90023574:	f7ff ff88 	bl	90023488 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90023578:	4620      	mov	r0, r4
9002357a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002357e:	f7ff bfbd 	b.w	900234fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90023584 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90023584:	b538      	push	{r3, r4, r5, lr}
90023586:	4c15      	ldr	r4, [pc, #84]	@ (900235dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90023588:	4605      	mov	r5, r0
9002358a:	7823      	ldrb	r3, [r4, #0]
9002358c:	f3bf 8f5b 	dmb	ish
90023590:	07da      	lsls	r2, r3, #31
90023592:	d40b      	bmi.n	900235ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90023594:	4620      	mov	r0, r4
90023596:	f008 fae2 	bl	9002bb5e <__cxa_guard_acquire>
9002359a:	b138      	cbz	r0, 900235ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9002359c:	4620      	mov	r0, r4
9002359e:	f008 faea 	bl	9002bb76 <__cxa_guard_release>
900235a2:	4a0f      	ldr	r2, [pc, #60]	@ (900235e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900235a4:	490f      	ldr	r1, [pc, #60]	@ (900235e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
900235a6:	4810      	ldr	r0, [pc, #64]	@ (900235e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900235a8:	f008 fad2 	bl	9002bb50 <__aeabi_atexit>
900235ac:	4c0f      	ldr	r4, [pc, #60]	@ (900235ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
900235ae:	7823      	ldrb	r3, [r4, #0]
900235b0:	f3bf 8f5b 	dmb	ish
900235b4:	07db      	lsls	r3, r3, #31
900235b6:	d40b      	bmi.n	900235d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900235b8:	4620      	mov	r0, r4
900235ba:	f008 fad0 	bl	9002bb5e <__cxa_guard_acquire>
900235be:	b138      	cbz	r0, 900235d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
900235c0:	4620      	mov	r0, r4
900235c2:	f008 fad8 	bl	9002bb76 <__cxa_guard_release>
900235c6:	4a06      	ldr	r2, [pc, #24]	@ (900235e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
900235c8:	4909      	ldr	r1, [pc, #36]	@ (900235f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
900235ca:	480a      	ldr	r0, [pc, #40]	@ (900235f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900235cc:	f008 fac0 	bl	9002bb50 <__aeabi_atexit>
900235d0:	4b05      	ldr	r3, [pc, #20]	@ (900235e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
900235d2:	676b      	str	r3, [r5, #116]	@ 0x74
900235d4:	4b07      	ldr	r3, [pc, #28]	@ (900235f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
900235d6:	67ab      	str	r3, [r5, #120]	@ 0x78
900235d8:	bd38      	pop	{r3, r4, r5, pc}
900235da:	bf00      	nop
900235dc:	24024644 	.word	0x24024644
900235e0:	24000000 	.word	0x24000000
900235e4:	9001f111 	.word	0x9001f111
900235e8:	240002bc 	.word	0x240002bc
900235ec:	24024648 	.word	0x24024648
900235f0:	9001f10f 	.word	0x9001f10f
900235f4:	240002c0 	.word	0x240002c0

900235f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
900235f8:	b538      	push	{r3, r4, r5, lr}
900235fa:	4c15      	ldr	r4, [pc, #84]	@ (90023650 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
900235fc:	4605      	mov	r5, r0
900235fe:	7823      	ldrb	r3, [r4, #0]
90023600:	f3bf 8f5b 	dmb	ish
90023604:	07da      	lsls	r2, r3, #31
90023606:	d40b      	bmi.n	90023620 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90023608:	4620      	mov	r0, r4
9002360a:	f008 faa8 	bl	9002bb5e <__cxa_guard_acquire>
9002360e:	b138      	cbz	r0, 90023620 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90023610:	4620      	mov	r0, r4
90023612:	f008 fab0 	bl	9002bb76 <__cxa_guard_release>
90023616:	4a0f      	ldr	r2, [pc, #60]	@ (90023654 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90023618:	490f      	ldr	r1, [pc, #60]	@ (90023658 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9002361a:	4810      	ldr	r0, [pc, #64]	@ (9002365c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9002361c:	f008 fa98 	bl	9002bb50 <__aeabi_atexit>
90023620:	4c0f      	ldr	r4, [pc, #60]	@ (90023660 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90023622:	7823      	ldrb	r3, [r4, #0]
90023624:	f3bf 8f5b 	dmb	ish
90023628:	07db      	lsls	r3, r3, #31
9002362a:	d40b      	bmi.n	90023644 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9002362c:	4620      	mov	r0, r4
9002362e:	f008 fa96 	bl	9002bb5e <__cxa_guard_acquire>
90023632:	b138      	cbz	r0, 90023644 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90023634:	4620      	mov	r0, r4
90023636:	f008 fa9e 	bl	9002bb76 <__cxa_guard_release>
9002363a:	4a06      	ldr	r2, [pc, #24]	@ (90023654 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9002363c:	4909      	ldr	r1, [pc, #36]	@ (90023664 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9002363e:	480a      	ldr	r0, [pc, #40]	@ (90023668 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90023640:	f008 fa86 	bl	9002bb50 <__aeabi_atexit>
90023644:	4b05      	ldr	r3, [pc, #20]	@ (9002365c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90023646:	66eb      	str	r3, [r5, #108]	@ 0x6c
90023648:	4b07      	ldr	r3, [pc, #28]	@ (90023668 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9002364a:	672b      	str	r3, [r5, #112]	@ 0x70
9002364c:	bd38      	pop	{r3, r4, r5, pc}
9002364e:	bf00      	nop
90023650:	2402463c 	.word	0x2402463c
90023654:	24000000 	.word	0x24000000
90023658:	9001f115 	.word	0x9001f115
9002365c:	240002b4 	.word	0x240002b4
90023660:	24024640 	.word	0x24024640
90023664:	9001f113 	.word	0x9001f113
90023668:	240002b8 	.word	0x240002b8

9002366c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9002366c:	b510      	push	{r4, lr}
9002366e:	4604      	mov	r4, r0
90023670:	f7ff ff88 	bl	90023584 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90023674:	4620      	mov	r0, r4
90023676:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002367a:	f7ff bfbd 	b.w	900235f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9002367e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9002367e:	b510      	push	{r4, lr}
90023680:	4604      	mov	r4, r0
90023682:	f7ff fff3 	bl	9002366c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90023686:	4620      	mov	r0, r4
90023688:	f7ff ff72 	bl	90023570 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9002368c:	4620      	mov	r0, r4
9002368e:	f7ff fdf9 	bl	90023284 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90023692:	4620      	mov	r0, r4
90023694:	f7ff fcfa 	bl	9002308c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90023698:	4620      	mov	r0, r4
9002369a:	f7ff fd75 	bl	90023188 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9002369e:	4620      	mov	r0, r4
900236a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900236a4:	f7ff bee0 	b.w	90023468 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

900236a8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
900236a8:	b538      	push	{r3, r4, r5, lr}
900236aa:	4c0b      	ldr	r4, [pc, #44]	@ (900236d8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
900236ac:	4605      	mov	r5, r0
900236ae:	7823      	ldrb	r3, [r4, #0]
900236b0:	f3bf 8f5b 	dmb	ish
900236b4:	07db      	lsls	r3, r3, #31
900236b6:	d40b      	bmi.n	900236d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
900236b8:	4620      	mov	r0, r4
900236ba:	f008 fa50 	bl	9002bb5e <__cxa_guard_acquire>
900236be:	b138      	cbz	r0, 900236d0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
900236c0:	4620      	mov	r0, r4
900236c2:	f008 fa58 	bl	9002bb76 <__cxa_guard_release>
900236c6:	4a05      	ldr	r2, [pc, #20]	@ (900236dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
900236c8:	4905      	ldr	r1, [pc, #20]	@ (900236e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
900236ca:	4806      	ldr	r0, [pc, #24]	@ (900236e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
900236cc:	f008 fa40 	bl	9002bb50 <__aeabi_atexit>
900236d0:	4b04      	ldr	r3, [pc, #16]	@ (900236e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
900236d2:	67eb      	str	r3, [r5, #124]	@ 0x7c
900236d4:	bd38      	pop	{r3, r4, r5, pc}
900236d6:	bf00      	nop
900236d8:	24024630 	.word	0x24024630
900236dc:	24000000 	.word	0x24000000
900236e0:	9001f10d 	.word	0x9001f10d
900236e4:	240002ac 	.word	0x240002ac

900236e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
900236e8:	b538      	push	{r3, r4, r5, lr}
900236ea:	4c0b      	ldr	r4, [pc, #44]	@ (90023718 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
900236ec:	4605      	mov	r5, r0
900236ee:	7823      	ldrb	r3, [r4, #0]
900236f0:	f3bf 8f5b 	dmb	ish
900236f4:	07db      	lsls	r3, r3, #31
900236f6:	d40b      	bmi.n	90023710 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
900236f8:	4620      	mov	r0, r4
900236fa:	f008 fa30 	bl	9002bb5e <__cxa_guard_acquire>
900236fe:	b138      	cbz	r0, 90023710 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90023700:	4620      	mov	r0, r4
90023702:	f008 fa38 	bl	9002bb76 <__cxa_guard_release>
90023706:	4a05      	ldr	r2, [pc, #20]	@ (9002371c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90023708:	4905      	ldr	r1, [pc, #20]	@ (90023720 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9002370a:	4806      	ldr	r0, [pc, #24]	@ (90023724 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9002370c:	f008 fa20 	bl	9002bb50 <__aeabi_atexit>
90023710:	4b04      	ldr	r3, [pc, #16]	@ (90023724 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90023712:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90023716:	bd38      	pop	{r3, r4, r5, pc}
90023718:	24024634 	.word	0x24024634
9002371c:	24000000 	.word	0x24000000
90023720:	9001f10b 	.word	0x9001f10b
90023724:	240002b0 	.word	0x240002b0

90023728 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90023728:	b570      	push	{r4, r5, r6, lr}
9002372a:	4d0d      	ldr	r5, [pc, #52]	@ (90023760 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9002372c:	4606      	mov	r6, r0
9002372e:	4c0d      	ldr	r4, [pc, #52]	@ (90023764 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90023730:	782b      	ldrb	r3, [r5, #0]
90023732:	f3bf 8f5b 	dmb	ish
90023736:	f013 0f01 	tst.w	r3, #1
9002373a:	d10d      	bne.n	90023758 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9002373c:	4628      	mov	r0, r5
9002373e:	f008 fa0e 	bl	9002bb5e <__cxa_guard_acquire>
90023742:	b148      	cbz	r0, 90023758 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90023744:	4b08      	ldr	r3, [pc, #32]	@ (90023768 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90023746:	4628      	mov	r0, r5
90023748:	6023      	str	r3, [r4, #0]
9002374a:	f008 fa14 	bl	9002bb76 <__cxa_guard_release>
9002374e:	4a07      	ldr	r2, [pc, #28]	@ (9002376c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90023750:	4620      	mov	r0, r4
90023752:	4907      	ldr	r1, [pc, #28]	@ (90023770 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90023754:	f008 f9fc 	bl	9002bb50 <__aeabi_atexit>
90023758:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
9002375c:	bd70      	pop	{r4, r5, r6, pc}
9002375e:	bf00      	nop
90023760:	24024638 	.word	0x24024638
90023764:	240247b0 	.word	0x240247b0
90023768:	90030698 	.word	0x90030698
9002376c:	24000000 	.word	0x24000000
90023770:	9001f109 	.word	0x9001f109

90023774 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90023774:	b510      	push	{r4, lr}
90023776:	4604      	mov	r4, r0
90023778:	f7ff ff96 	bl	900236a8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9002377c:	4620      	mov	r0, r4
9002377e:	f7ff ffb3 	bl	900236e8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90023782:	4620      	mov	r0, r4
90023784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90023788:	f7ff bfce 	b.w	90023728 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9002378c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
9002378c:	b570      	push	{r4, r5, r6, lr}
9002378e:	4d0d      	ldr	r5, [pc, #52]	@ (900237c4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90023790:	4606      	mov	r6, r0
90023792:	4c0d      	ldr	r4, [pc, #52]	@ (900237c8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
90023794:	782b      	ldrb	r3, [r5, #0]
90023796:	f3bf 8f5b 	dmb	ish
9002379a:	f013 0f01 	tst.w	r3, #1
9002379e:	d10d      	bne.n	900237bc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
900237a0:	4628      	mov	r0, r5
900237a2:	f008 f9dc 	bl	9002bb5e <__cxa_guard_acquire>
900237a6:	b148      	cbz	r0, 900237bc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
900237a8:	4b08      	ldr	r3, [pc, #32]	@ (900237cc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
900237aa:	4628      	mov	r0, r5
900237ac:	6023      	str	r3, [r4, #0]
900237ae:	f008 f9e2 	bl	9002bb76 <__cxa_guard_release>
900237b2:	4a07      	ldr	r2, [pc, #28]	@ (900237d0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
900237b4:	4620      	mov	r0, r4
900237b6:	4907      	ldr	r1, [pc, #28]	@ (900237d4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
900237b8:	f008 f9ca 	bl	9002bb50 <__aeabi_atexit>
900237bc:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
900237c0:	bd70      	pop	{r4, r5, r6, pc}
900237c2:	bf00      	nop
900237c4:	2402462c 	.word	0x2402462c
900237c8:	240246ac 	.word	0x240246ac
900237cc:	900306b4 	.word	0x900306b4
900237d0:	24000000 	.word	0x24000000
900237d4:	9001f107 	.word	0x9001f107

900237d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
900237d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900237dc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
900237e0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
900237e4:	2d00      	cmp	r5, #0
900237e6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
900237ea:	fb05 4c0e 	mla	ip, r5, lr, r4
900237ee:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
900237f2:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
900237f6:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
900237fa:	eb02 0a0c 	add.w	sl, r2, ip
900237fe:	8808      	ldrh	r0, [r1, #0]
90023800:	f2c0 80b0 	blt.w	90023964 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90023804:	45ab      	cmp	fp, r5
90023806:	f340 80ad 	ble.w	90023964 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9002380a:	2c00      	cmp	r4, #0
9002380c:	f2c0 80a8 	blt.w	90023960 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90023810:	45a6      	cmp	lr, r4
90023812:	f340 80a5 	ble.w	90023960 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90023816:	f812 200c 	ldrb.w	r2, [r2, ip]
9002381a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9002381e:	1c62      	adds	r2, r4, #1
90023820:	f100 80a3 	bmi.w	9002396a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90023824:	4596      	cmp	lr, r2
90023826:	f340 80a0 	ble.w	9002396a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9002382a:	f1b9 0f00 	cmp.w	r9, #0
9002382e:	f000 809c 	beq.w	9002396a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90023832:	f89a 2001 	ldrb.w	r2, [sl, #1]
90023836:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9002383a:	3501      	adds	r5, #1
9002383c:	f100 8099 	bmi.w	90023972 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90023840:	45ab      	cmp	fp, r5
90023842:	f340 8096 	ble.w	90023972 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90023846:	2f00      	cmp	r7, #0
90023848:	f000 8093 	beq.w	90023972 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9002384c:	2c00      	cmp	r4, #0
9002384e:	f2c0 808e 	blt.w	9002396e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90023852:	45a6      	cmp	lr, r4
90023854:	f340 808b 	ble.w	9002396e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90023858:	f81a 200e 	ldrb.w	r2, [sl, lr]
9002385c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90023860:	3401      	adds	r4, #1
90023862:	f100 8089 	bmi.w	90023978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90023866:	45a6      	cmp	lr, r4
90023868:	f340 8086 	ble.w	90023978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9002386c:	f1b9 0f00 	cmp.w	r9, #0
90023870:	f000 8082 	beq.w	90023978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90023874:	44d6      	add	lr, sl
90023876:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002387a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9002387e:	ea4f 4408 	mov.w	r4, r8, lsl #16
90023882:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90023886:	fb19 fe07 	smulbb	lr, r9, r7
9002388a:	f1c7 0210 	rsb	r2, r7, #16
9002388e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023892:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90023896:	eba2 0209 	sub.w	r2, r2, r9
9002389a:	ea44 0808 	orr.w	r8, r4, r8
9002389e:	ea4f 440c 	mov.w	r4, ip, lsl #16
900238a2:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900238a6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
900238aa:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900238ae:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900238b2:	ea44 0c0c 	orr.w	ip, r4, ip
900238b6:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900238ba:	fb04 f40c 	mul.w	r4, r4, ip
900238be:	fb02 4808 	mla	r8, r2, r8, r4
900238c2:	041a      	lsls	r2, r3, #16
900238c4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900238c8:	b2b4      	uxth	r4, r6
900238ca:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900238ce:	43f6      	mvns	r6, r6
900238d0:	4313      	orrs	r3, r2
900238d2:	042a      	lsls	r2, r5, #16
900238d4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900238d8:	b2f6      	uxtb	r6, r6
900238da:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900238de:	fb0e 8303 	mla	r3, lr, r3, r8
900238e2:	432a      	orrs	r2, r5
900238e4:	fb07 3202 	mla	r2, r7, r2, r3
900238e8:	10c7      	asrs	r7, r0, #3
900238ea:	0d53      	lsrs	r3, r2, #21
900238ec:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900238f0:	0952      	lsrs	r2, r2, #5
900238f2:	fb17 f706 	smulbb	r7, r7, r6
900238f6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900238fa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900238fe:	431a      	orrs	r2, r3
90023900:	b293      	uxth	r3, r2
90023902:	1202      	asrs	r2, r0, #8
90023904:	121d      	asrs	r5, r3, #8
90023906:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9002390a:	00c0      	lsls	r0, r0, #3
9002390c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023910:	fb12 f206 	smulbb	r2, r2, r6
90023914:	b2c0      	uxtb	r0, r0
90023916:	fb05 2504 	mla	r5, r5, r4, r2
9002391a:	10da      	asrs	r2, r3, #3
9002391c:	fb10 f006 	smulbb	r0, r0, r6
90023920:	00db      	lsls	r3, r3, #3
90023922:	b2ad      	uxth	r5, r5
90023924:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90023928:	b2db      	uxtb	r3, r3
9002392a:	fb02 7204 	mla	r2, r2, r4, r7
9002392e:	fb03 0004 	mla	r0, r3, r4, r0
90023932:	1c6b      	adds	r3, r5, #1
90023934:	b292      	uxth	r2, r2
90023936:	b280      	uxth	r0, r0
90023938:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002393c:	1c43      	adds	r3, r0, #1
9002393e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023942:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023946:	1c50      	adds	r0, r2, #1
90023948:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002394c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023950:	0952      	lsrs	r2, r2, #5
90023952:	432b      	orrs	r3, r5
90023954:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023958:	4313      	orrs	r3, r2
9002395a:	800b      	strh	r3, [r1, #0]
9002395c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023960:	4680      	mov	r8, r0
90023962:	e75c      	b.n	9002381e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90023964:	4684      	mov	ip, r0
90023966:	4680      	mov	r8, r0
90023968:	e767      	b.n	9002383a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002396a:	4684      	mov	ip, r0
9002396c:	e765      	b.n	9002383a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9002396e:	4605      	mov	r5, r0
90023970:	e776      	b.n	90023860 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90023972:	4603      	mov	r3, r0
90023974:	4605      	mov	r5, r0
90023976:	e782      	b.n	9002387e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90023978:	4603      	mov	r3, r0
9002397a:	e780      	b.n	9002387e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9002397c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002397c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023980:	b099      	sub	sp, #100	@ 0x64
90023982:	9215      	str	r2, [sp, #84]	@ 0x54
90023984:	9309      	str	r3, [sp, #36]	@ 0x24
90023986:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90023988:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
9002398c:	9016      	str	r0, [sp, #88]	@ 0x58
9002398e:	930d      	str	r3, [sp, #52]	@ 0x34
90023990:	6850      	ldr	r0, [r2, #4]
90023992:	910c      	str	r1, [sp, #48]	@ 0x30
90023994:	6812      	ldr	r2, [r2, #0]
90023996:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
9002399a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
9002399e:	fb00 1303 	mla	r3, r0, r3, r1
900239a2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
900239a6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900239a8:	681b      	ldr	r3, [r3, #0]
900239aa:	930b      	str	r3, [sp, #44]	@ 0x2c
900239ac:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900239ae:	685e      	ldr	r6, [r3, #4]
900239b0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900239b2:	3604      	adds	r6, #4
900239b4:	43db      	mvns	r3, r3
900239b6:	b2db      	uxtb	r3, r3
900239b8:	930a      	str	r3, [sp, #40]	@ 0x28
900239ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900239bc:	2b00      	cmp	r3, #0
900239be:	dc03      	bgt.n	900239c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900239c0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
900239c2:	2b00      	cmp	r3, #0
900239c4:	f340 8225 	ble.w	90023e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900239c8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900239ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900239ce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900239d2:	1e48      	subs	r0, r1, #1
900239d4:	1e57      	subs	r7, r2, #1
900239d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900239d8:	2b00      	cmp	r3, #0
900239da:	f340 80e3 	ble.w	90023ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
900239de:	ea5f 4c2a 	movs.w	ip, sl, asr #16
900239e2:	ea4f 4325 	mov.w	r3, r5, asr #16
900239e6:	d406      	bmi.n	900239f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900239e8:	4584      	cmp	ip, r0
900239ea:	da04      	bge.n	900239f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900239ec:	2b00      	cmp	r3, #0
900239ee:	db02      	blt.n	900239f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900239f0:	42bb      	cmp	r3, r7
900239f2:	f2c0 80d8 	blt.w	90023ba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900239f6:	f11c 0c01 	adds.w	ip, ip, #1
900239fa:	f100 80c9 	bmi.w	90023b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900239fe:	4561      	cmp	r1, ip
90023a00:	f2c0 80c6 	blt.w	90023b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023a04:	3301      	adds	r3, #1
90023a06:	f100 80c3 	bmi.w	90023b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023a0a:	429a      	cmp	r2, r3
90023a0c:	f2c0 80c0 	blt.w	90023b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90023a10:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90023a14:	4647      	mov	r7, r8
90023a16:	f1bb 0f00 	cmp.w	fp, #0
90023a1a:	f340 80e3 	ble.w	90023be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
90023a1e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90023a20:	ea4f 4c25 	mov.w	ip, r5, asr #16
90023a24:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023a26:	f3ca 3003 	ubfx	r0, sl, #12, #4
90023a2a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023a2e:	ea5f 422a 	movs.w	r2, sl, asr #16
90023a32:	f3c5 3103 	ubfx	r1, r5, #12, #4
90023a36:	689b      	ldr	r3, [r3, #8]
90023a38:	f100 8121 	bmi.w	90023c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023a3c:	f103 39ff 	add.w	r9, r3, #4294967295
90023a40:	454a      	cmp	r2, r9
90023a42:	f280 811c 	bge.w	90023c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023a46:	f1bc 0f00 	cmp.w	ip, #0
90023a4a:	f2c0 8118 	blt.w	90023c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023a4e:	f10e 39ff 	add.w	r9, lr, #4294967295
90023a52:	45cc      	cmp	ip, r9
90023a54:	f280 8113 	bge.w	90023c7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90023a58:	b21b      	sxth	r3, r3
90023a5a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023a5c:	fb0c 2203 	mla	r2, ip, r3, r2
90023a60:	eb04 0902 	add.w	r9, r4, r2
90023a64:	5ca2      	ldrb	r2, [r4, r2]
90023a66:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
90023a6a:	2800      	cmp	r0, #0
90023a6c:	f000 80fe 	beq.w	90023c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90023a70:	f899 2001 	ldrb.w	r2, [r9, #1]
90023a74:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90023a78:	9211      	str	r2, [sp, #68]	@ 0x44
90023a7a:	b151      	cbz	r1, 90023a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023a7c:	eb09 0203 	add.w	r2, r9, r3
90023a80:	f819 3003 	ldrb.w	r3, [r9, r3]
90023a84:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023a88:	930f      	str	r3, [sp, #60]	@ 0x3c
90023a8a:	7853      	ldrb	r3, [r2, #1]
90023a8c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023a90:	9312      	str	r3, [sp, #72]	@ 0x48
90023a92:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023a94:	fb10 f201 	smulbb	r2, r0, r1
90023a98:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90023a9a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90023a9e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023aa2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90023aa6:	10d2      	asrs	r2, r2, #3
90023aa8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023aac:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
90023ab0:	ea4c 0c03 	orr.w	ip, ip, r3
90023ab4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90023ab6:	041b      	lsls	r3, r3, #16
90023ab8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023abc:	4323      	orrs	r3, r4
90023abe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023ac0:	4353      	muls	r3, r2
90023ac2:	fb09 330c 	mla	r3, r9, ip, r3
90023ac6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90023aca:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023ace:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023ad2:	ea4c 0e0e 	orr.w	lr, ip, lr
90023ad6:	f1c1 0c10 	rsb	ip, r1, #16
90023ada:	ebac 0c00 	sub.w	ip, ip, r0
90023ade:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90023ae2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90023ae6:	fb0c 3c0e 	mla	ip, ip, lr, r3
90023aea:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023aec:	0418      	lsls	r0, r3, #16
90023aee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023af2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90023af6:	4318      	orrs	r0, r3
90023af8:	fb02 c200 	mla	r2, r2, r0, ip
90023afc:	8838      	ldrh	r0, [r7, #0]
90023afe:	0d53      	lsrs	r3, r2, #21
90023b00:	0952      	lsrs	r2, r2, #5
90023b02:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023b06:	1201      	asrs	r1, r0, #8
90023b08:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023b0c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90023b10:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023b14:	00c0      	lsls	r0, r0, #3
90023b16:	431a      	orrs	r2, r3
90023b18:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
90023b1c:	fb11 f104 	smulbb	r1, r1, r4
90023b20:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90023b24:	b292      	uxth	r2, r2
90023b26:	fb1e fe04 	smulbb	lr, lr, r4
90023b2a:	b2c0      	uxtb	r0, r0
90023b2c:	ea4f 2c22 	mov.w	ip, r2, asr #8
90023b30:	fb10 f004 	smulbb	r0, r0, r4
90023b34:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90023b38:	fb0c 1c03 	mla	ip, ip, r3, r1
90023b3c:	10d1      	asrs	r1, r2, #3
90023b3e:	00d2      	lsls	r2, r2, #3
90023b40:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023b44:	fa1f fc8c 	uxth.w	ip, ip
90023b48:	b2d2      	uxtb	r2, r2
90023b4a:	fb01 e103 	mla	r1, r1, r3, lr
90023b4e:	fb02 0303 	mla	r3, r2, r3, r0
90023b52:	b289      	uxth	r1, r1
90023b54:	b29a      	uxth	r2, r3
90023b56:	f10c 0301 	add.w	r3, ip, #1
90023b5a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90023b5e:	1c53      	adds	r3, r2, #1
90023b60:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023b64:	1c4a      	adds	r2, r1, #1
90023b66:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90023b6a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023b6e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023b72:	0949      	lsrs	r1, r1, #5
90023b74:	ea43 030c 	orr.w	r3, r3, ip
90023b78:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023b7c:	430b      	orrs	r3, r1
90023b7e:	803b      	strh	r3, [r7, #0]
90023b80:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023b82:	3702      	adds	r7, #2
90023b84:	f10b 3bff 	add.w	fp, fp, #4294967295
90023b88:	449a      	add	sl, r3
90023b8a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023b8c:	441d      	add	r5, r3
90023b8e:	e742      	b.n	90023a16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90023b90:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023b92:	f108 0802 	add.w	r8, r8, #2
90023b96:	449a      	add	sl, r3
90023b98:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023b9a:	441d      	add	r5, r3
90023b9c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023b9e:	3b01      	subs	r3, #1
90023ba0:	9309      	str	r3, [sp, #36]	@ 0x24
90023ba2:	e718      	b.n	900239d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90023ba4:	d023      	beq.n	90023bee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90023ba6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023ba8:	9825      	ldr	r0, [sp, #148]	@ 0x94
90023baa:	3b01      	subs	r3, #1
90023bac:	fb00 a003 	mla	r0, r0, r3, sl
90023bb0:	1400      	asrs	r0, r0, #16
90023bb2:	f53f af2d 	bmi.w	90023a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023bb6:	3901      	subs	r1, #1
90023bb8:	4288      	cmp	r0, r1
90023bba:	f6bf af29 	bge.w	90023a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023bbe:	9926      	ldr	r1, [sp, #152]	@ 0x98
90023bc0:	fb01 5303 	mla	r3, r1, r3, r5
90023bc4:	141b      	asrs	r3, r3, #16
90023bc6:	f53f af23 	bmi.w	90023a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023bca:	3a01      	subs	r2, #1
90023bcc:	4293      	cmp	r3, r2
90023bce:	f6bf af1f 	bge.w	90023a10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023bd2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90023bd6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
90023bda:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
90023bde:	f1be 0f00 	cmp.w	lr, #0
90023be2:	dc6c      	bgt.n	90023cbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90023be4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023be6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023bea:	eb08 0844 	add.w	r8, r8, r4, lsl #1
90023bee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023bf0:	2b00      	cmp	r3, #0
90023bf2:	f340 810e 	ble.w	90023e12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90023bf6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023bfa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023bfc:	ee30 0a04 	vadd.f32	s0, s0, s8
90023c00:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023c04:	eef0 6a62 	vmov.f32	s13, s5
90023c08:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023c0c:	ee31 1a05 	vadd.f32	s2, s2, s10
90023c10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023c14:	ee16 aa90 	vmov	sl, s13
90023c18:	eef0 6a43 	vmov.f32	s13, s6
90023c1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023c20:	ee16 5a90 	vmov	r5, s13
90023c24:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023c28:	ee61 7a27 	vmul.f32	s15, s2, s15
90023c2c:	ee77 2a62 	vsub.f32	s5, s14, s5
90023c30:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023c34:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023c38:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023c3c:	ee12 2a90 	vmov	r2, s5
90023c40:	eef0 2a47 	vmov.f32	s5, s14
90023c44:	fb92 f3f3 	sdiv	r3, r2, r3
90023c48:	ee13 2a10 	vmov	r2, s6
90023c4c:	9325      	str	r3, [sp, #148]	@ 0x94
90023c4e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023c50:	eeb0 3a67 	vmov.f32	s6, s15
90023c54:	fb92 f3f3 	sdiv	r3, r2, r3
90023c58:	9326      	str	r3, [sp, #152]	@ 0x98
90023c5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023c5c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
90023c5e:	3b01      	subs	r3, #1
90023c60:	930c      	str	r3, [sp, #48]	@ 0x30
90023c62:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023c64:	bf08      	it	eq
90023c66:	4613      	moveq	r3, r2
90023c68:	9309      	str	r3, [sp, #36]	@ 0x24
90023c6a:	e6a6      	b.n	900239ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90023c6c:	2900      	cmp	r1, #0
90023c6e:	f43f af10 	beq.w	90023a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023c72:	f819 3003 	ldrb.w	r3, [r9, r3]
90023c76:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023c7a:	930f      	str	r3, [sp, #60]	@ 0x3c
90023c7c:	e709      	b.n	90023a92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90023c7e:	f112 0901 	adds.w	r9, r2, #1
90023c82:	f53f af7d 	bmi.w	90023b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023c86:	454b      	cmp	r3, r9
90023c88:	f6ff af7a 	blt.w	90023b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023c8c:	f11c 0901 	adds.w	r9, ip, #1
90023c90:	f53f af76 	bmi.w	90023b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023c94:	45ce      	cmp	lr, r9
90023c96:	f6ff af73 	blt.w	90023b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023c9a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023c9c:	b21b      	sxth	r3, r3
90023c9e:	9202      	str	r2, [sp, #8]
90023ca0:	fa0f f28e 	sxth.w	r2, lr
90023ca4:	9300      	str	r3, [sp, #0]
90023ca6:	4633      	mov	r3, r6
90023ca8:	9201      	str	r2, [sp, #4]
90023caa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023cac:	e9cd 1405 	strd	r1, r4, [sp, #20]
90023cb0:	e9cd c003 	strd	ip, r0, [sp, #12]
90023cb4:	4639      	mov	r1, r7
90023cb6:	9816      	ldr	r0, [sp, #88]	@ 0x58
90023cb8:	f7ff fd8e 	bl	900237d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
90023cbc:	e760      	b.n	90023b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90023cbe:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90023cc0:	ea4f 422a 	mov.w	r2, sl, asr #16
90023cc4:	1429      	asrs	r1, r5, #16
90023cc6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023cc8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90023ccc:	f3ca 3c03 	ubfx	ip, sl, #12, #4
90023cd0:	f3c5 3003 	ubfx	r0, r5, #12, #4
90023cd4:	fb03 2101 	mla	r1, r3, r1, r2
90023cd8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90023cda:	440a      	add	r2, r1
90023cdc:	5c61      	ldrb	r1, [r4, r1]
90023cde:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
90023ce2:	f1bc 0f00 	cmp.w	ip, #0
90023ce6:	f000 808c 	beq.w	90023e02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
90023cea:	7857      	ldrb	r7, [r2, #1]
90023cec:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
90023cf0:	9413      	str	r4, [sp, #76]	@ 0x4c
90023cf2:	b140      	cbz	r0, 90023d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023cf4:	18d7      	adds	r7, r2, r3
90023cf6:	5cd3      	ldrb	r3, [r2, r3]
90023cf8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023cfc:	9310      	str	r3, [sp, #64]	@ 0x40
90023cfe:	787b      	ldrb	r3, [r7, #1]
90023d00:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023d04:	9314      	str	r3, [sp, #80]	@ 0x50
90023d06:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90023d08:	fb1c f200 	smulbb	r2, ip, r0
90023d0c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90023d0e:	f10e 3eff 	add.w	lr, lr, #4294967295
90023d12:	041f      	lsls	r7, r3, #16
90023d14:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90023d18:	10d2      	asrs	r2, r2, #3
90023d1a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
90023d1e:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
90023d22:	431f      	orrs	r7, r3
90023d24:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90023d28:	9317      	str	r3, [sp, #92]	@ 0x5c
90023d2a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90023d2c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90023d2e:	041b      	lsls	r3, r3, #16
90023d30:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023d34:	ea43 030b 	orr.w	r3, r3, fp
90023d38:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90023d3c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90023d40:	4353      	muls	r3, r2
90023d42:	fb04 3707 	mla	r7, r4, r7, r3
90023d46:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
90023d4a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023d4c:	ea43 0b01 	orr.w	fp, r3, r1
90023d50:	f1c0 0110 	rsb	r1, r0, #16
90023d54:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90023d56:	eba1 0c0c 	sub.w	ip, r1, ip
90023d5a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
90023d5e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90023d62:	fb0c 770b 	mla	r7, ip, fp, r7
90023d66:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90023d6a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
90023d6e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90023d72:	ea4c 0c0b 	orr.w	ip, ip, fp
90023d76:	fb02 770c 	mla	r7, r2, ip, r7
90023d7a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90023d7c:	0d79      	lsrs	r1, r7, #21
90023d7e:	8812      	ldrh	r2, [r2, #0]
90023d80:	097f      	lsrs	r7, r7, #5
90023d82:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023d86:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90023d8a:	430f      	orrs	r7, r1
90023d8c:	1211      	asrs	r1, r2, #8
90023d8e:	b2bb      	uxth	r3, r7
90023d90:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90023d94:	10d7      	asrs	r7, r2, #3
90023d96:	fb11 f104 	smulbb	r1, r1, r4
90023d9a:	1218      	asrs	r0, r3, #8
90023d9c:	00d2      	lsls	r2, r2, #3
90023d9e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90023da2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90023da6:	fb17 f704 	smulbb	r7, r7, r4
90023daa:	b2d2      	uxtb	r2, r2
90023dac:	fb00 1009 	mla	r0, r0, r9, r1
90023db0:	10d9      	asrs	r1, r3, #3
90023db2:	fb12 f204 	smulbb	r2, r2, r4
90023db6:	00db      	lsls	r3, r3, #3
90023db8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023dbc:	b280      	uxth	r0, r0
90023dbe:	b2db      	uxtb	r3, r3
90023dc0:	fb01 7109 	mla	r1, r1, r9, r7
90023dc4:	fb03 2309 	mla	r3, r3, r9, r2
90023dc8:	1c42      	adds	r2, r0, #1
90023dca:	b289      	uxth	r1, r1
90023dcc:	b29b      	uxth	r3, r3
90023dce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023dd2:	1c4f      	adds	r7, r1, #1
90023dd4:	1c5a      	adds	r2, r3, #1
90023dd6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90023dda:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90023dde:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023de2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90023de4:	0949      	lsrs	r1, r1, #5
90023de6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90023dea:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023dee:	4310      	orrs	r0, r2
90023df0:	4308      	orrs	r0, r1
90023df2:	f823 0b02 	strh.w	r0, [r3], #2
90023df6:	930e      	str	r3, [sp, #56]	@ 0x38
90023df8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90023dfa:	449a      	add	sl, r3
90023dfc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90023dfe:	441d      	add	r5, r3
90023e00:	e6ed      	b.n	90023bde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
90023e02:	2800      	cmp	r0, #0
90023e04:	f43f af7f 	beq.w	90023d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023e08:	5cd3      	ldrb	r3, [r2, r3]
90023e0a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90023e0e:	9310      	str	r3, [sp, #64]	@ 0x40
90023e10:	e779      	b.n	90023d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023e12:	b019      	add	sp, #100	@ 0x64
90023e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90023e18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90023e18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90023e1c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
90023e20:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90023e24:	f1b8 0f00 	cmp.w	r8, #0
90023e28:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
90023e2c:	fb08 470e 	mla	r7, r8, lr, r4
90023e30:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90023e34:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90023e38:	eb02 0907 	add.w	r9, r2, r7
90023e3c:	8808      	ldrh	r0, [r1, #0]
90023e3e:	db67      	blt.n	90023f10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90023e40:	45c2      	cmp	sl, r8
90023e42:	dd65      	ble.n	90023f10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90023e44:	2c00      	cmp	r4, #0
90023e46:	db61      	blt.n	90023f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90023e48:	45a6      	cmp	lr, r4
90023e4a:	dd5f      	ble.n	90023f0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90023e4c:	5dd2      	ldrb	r2, [r2, r7]
90023e4e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90023e52:	1c62      	adds	r2, r4, #1
90023e54:	d45f      	bmi.n	90023f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90023e56:	4596      	cmp	lr, r2
90023e58:	dd5d      	ble.n	90023f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90023e5a:	2d00      	cmp	r5, #0
90023e5c:	d05b      	beq.n	90023f16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90023e5e:	f899 2001 	ldrb.w	r2, [r9, #1]
90023e62:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90023e66:	f118 0801 	adds.w	r8, r8, #1
90023e6a:	d458      	bmi.n	90023f1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023e6c:	45c2      	cmp	sl, r8
90023e6e:	dd56      	ble.n	90023f1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023e70:	2e00      	cmp	r6, #0
90023e72:	d054      	beq.n	90023f1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90023e74:	2c00      	cmp	r4, #0
90023e76:	db50      	blt.n	90023f1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90023e78:	45a6      	cmp	lr, r4
90023e7a:	dd4e      	ble.n	90023f1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90023e7c:	f819 200e 	ldrb.w	r2, [r9, lr]
90023e80:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90023e84:	3401      	adds	r4, #1
90023e86:	d407      	bmi.n	90023e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90023e88:	45a6      	cmp	lr, r4
90023e8a:	dd05      	ble.n	90023e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90023e8c:	b125      	cbz	r5, 90023e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90023e8e:	44ce      	add	lr, r9
90023e90:	f89e 0001 	ldrb.w	r0, [lr, #1]
90023e94:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90023e98:	fb15 f406 	smulbb	r4, r5, r6
90023e9c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90023ea0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90023ea4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90023ea8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023eac:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90023eb0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90023eb4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90023eb8:	ea43 0c0c 	orr.w	ip, r3, ip
90023ebc:	f1c6 0310 	rsb	r3, r6, #16
90023ec0:	ea4e 0707 	orr.w	r7, lr, r7
90023ec4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90023ec8:	1b5b      	subs	r3, r3, r5
90023eca:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90023ece:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90023ed2:	437d      	muls	r5, r7
90023ed4:	fb03 5c0c 	mla	ip, r3, ip, r5
90023ed8:	0403      	lsls	r3, r0, #16
90023eda:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023ede:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023ee2:	4318      	orrs	r0, r3
90023ee4:	0413      	lsls	r3, r2, #16
90023ee6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023eea:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90023eee:	fb04 c000 	mla	r0, r4, r0, ip
90023ef2:	4313      	orrs	r3, r2
90023ef4:	fb06 0003 	mla	r0, r6, r3, r0
90023ef8:	0d43      	lsrs	r3, r0, #21
90023efa:	0940      	lsrs	r0, r0, #5
90023efc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90023f00:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023f04:	4318      	orrs	r0, r3
90023f06:	8008      	strh	r0, [r1, #0]
90023f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90023f0c:	4684      	mov	ip, r0
90023f0e:	e7a0      	b.n	90023e52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90023f10:	4607      	mov	r7, r0
90023f12:	4684      	mov	ip, r0
90023f14:	e7a7      	b.n	90023e66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90023f16:	4607      	mov	r7, r0
90023f18:	e7a5      	b.n	90023e66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90023f1a:	4602      	mov	r2, r0
90023f1c:	e7b2      	b.n	90023e84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
90023f1e:	4602      	mov	r2, r0
90023f20:	e7ba      	b.n	90023e98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90023f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023f22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023f26:	b093      	sub	sp, #76	@ 0x4c
90023f28:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
90023f2c:	920f      	str	r2, [sp, #60]	@ 0x3c
90023f2e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90023f30:	9010      	str	r0, [sp, #64]	@ 0x40
90023f32:	9108      	str	r1, [sp, #32]
90023f34:	6850      	ldr	r0, [r2, #4]
90023f36:	9306      	str	r3, [sp, #24]
90023f38:	6812      	ldr	r2, [r2, #0]
90023f3a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90023f3e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90023f42:	fb00 1303 	mla	r3, r0, r3, r1
90023f46:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90023f4a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023f4c:	681b      	ldr	r3, [r3, #0]
90023f4e:	9307      	str	r3, [sp, #28]
90023f50:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023f52:	685f      	ldr	r7, [r3, #4]
90023f54:	3704      	adds	r7, #4
90023f56:	9b08      	ldr	r3, [sp, #32]
90023f58:	2b00      	cmp	r3, #0
90023f5a:	dc03      	bgt.n	90023f64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90023f5c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90023f5e:	2b00      	cmp	r3, #0
90023f60:	f340 81b2 	ble.w	900242c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90023f64:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023f66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023f6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023f6e:	1e48      	subs	r0, r1, #1
90023f70:	f102 3cff 	add.w	ip, r2, #4294967295
90023f74:	9b06      	ldr	r3, [sp, #24]
90023f76:	2b00      	cmp	r3, #0
90023f78:	f340 80a9 	ble.w	900240ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90023f7c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90023f80:	ea4f 4326 	mov.w	r3, r6, asr #16
90023f84:	d406      	bmi.n	90023f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90023f86:	4586      	cmp	lr, r0
90023f88:	da04      	bge.n	90023f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90023f8a:	2b00      	cmp	r3, #0
90023f8c:	db02      	blt.n	90023f94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90023f8e:	4563      	cmp	r3, ip
90023f90:	f2c0 809e 	blt.w	900240d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90023f94:	f11e 0e01 	adds.w	lr, lr, #1
90023f98:	f100 808f 	bmi.w	900240ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023f9c:	4571      	cmp	r1, lr
90023f9e:	f2c0 808c 	blt.w	900240ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023fa2:	3301      	adds	r3, #1
90023fa4:	f100 8089 	bmi.w	900240ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023fa8:	429a      	cmp	r2, r3
90023faa:	f2c0 8086 	blt.w	900240ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90023fae:	f8dd b018 	ldr.w	fp, [sp, #24]
90023fb2:	46c8      	mov	r8, r9
90023fb4:	f1bb 0f00 	cmp.w	fp, #0
90023fb8:	f340 80a6 	ble.w	90024108 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90023fbc:	9a24      	ldr	r2, [sp, #144]	@ 0x90
90023fbe:	ea4f 4c26 	mov.w	ip, r6, asr #16
90023fc2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023fc4:	f3c4 3003 	ubfx	r0, r4, #12, #4
90023fc8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023fcc:	1422      	asrs	r2, r4, #16
90023fce:	f3c6 3103 	ubfx	r1, r6, #12, #4
90023fd2:	689b      	ldr	r3, [r3, #8]
90023fd4:	f100 80e3 	bmi.w	9002419e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90023fd8:	f103 3aff 	add.w	sl, r3, #4294967295
90023fdc:	4552      	cmp	r2, sl
90023fde:	f280 80de 	bge.w	9002419e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90023fe2:	f1bc 0f00 	cmp.w	ip, #0
90023fe6:	f2c0 80da 	blt.w	9002419e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90023fea:	f10e 3aff 	add.w	sl, lr, #4294967295
90023fee:	45d4      	cmp	ip, sl
90023ff0:	f280 80d5 	bge.w	9002419e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
90023ff4:	b21b      	sxth	r3, r3
90023ff6:	9d07      	ldr	r5, [sp, #28]
90023ff8:	fb0c 2203 	mla	r2, ip, r3, r2
90023ffc:	eb05 0a02 	add.w	sl, r5, r2
90024000:	5caa      	ldrb	r2, [r5, r2]
90024002:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
90024006:	2800      	cmp	r0, #0
90024008:	f000 80c0 	beq.w	9002418c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9002400c:	f89a 2001 	ldrb.w	r2, [sl, #1]
90024010:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90024014:	920b      	str	r2, [sp, #44]	@ 0x2c
90024016:	b151      	cbz	r1, 9002402e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90024018:	eb0a 0203 	add.w	r2, sl, r3
9002401c:	f81a 3003 	ldrb.w	r3, [sl, r3]
90024020:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90024024:	9309      	str	r3, [sp, #36]	@ 0x24
90024026:	7853      	ldrb	r3, [r2, #1]
90024028:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002402c:	930c      	str	r3, [sp, #48]	@ 0x30
9002402e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024030:	fb10 f201 	smulbb	r2, r0, r1
90024034:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90024036:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002403a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002403e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90024042:	10d2      	asrs	r2, r2, #3
90024044:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024048:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9002404c:	ea4c 0c03 	orr.w	ip, ip, r3
90024050:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024052:	041b      	lsls	r3, r3, #16
90024054:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90024058:	432b      	orrs	r3, r5
9002405a:	4353      	muls	r3, r2
9002405c:	fb0a 330c 	mla	r3, sl, ip, r3
90024060:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90024064:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024068:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002406c:	ea4c 0e0e 	orr.w	lr, ip, lr
90024070:	f1c1 0c10 	rsb	ip, r1, #16
90024074:	ebac 0c00 	sub.w	ip, ip, r0
90024078:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002407c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90024080:	fb0c 3c0e 	mla	ip, ip, lr, r3
90024084:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024086:	0418      	lsls	r0, r3, #16
90024088:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002408c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90024090:	4318      	orrs	r0, r3
90024092:	fb02 c200 	mla	r2, r2, r0, ip
90024096:	0d53      	lsrs	r3, r2, #21
90024098:	0952      	lsrs	r2, r2, #5
9002409a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002409e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900240a2:	431a      	orrs	r2, r3
900240a4:	f8a8 2000 	strh.w	r2, [r8]
900240a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900240aa:	f108 0802 	add.w	r8, r8, #2
900240ae:	f10b 3bff 	add.w	fp, fp, #4294967295
900240b2:	441c      	add	r4, r3
900240b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900240b6:	441e      	add	r6, r3
900240b8:	e77c      	b.n	90023fb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900240ba:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900240bc:	f109 0902 	add.w	r9, r9, #2
900240c0:	441c      	add	r4, r3
900240c2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900240c4:	441e      	add	r6, r3
900240c6:	9b06      	ldr	r3, [sp, #24]
900240c8:	3b01      	subs	r3, #1
900240ca:	9306      	str	r3, [sp, #24]
900240cc:	e752      	b.n	90023f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900240ce:	d020      	beq.n	90024112 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900240d0:	9b06      	ldr	r3, [sp, #24]
900240d2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900240d4:	3b01      	subs	r3, #1
900240d6:	fb00 4003 	mla	r0, r0, r3, r4
900240da:	1400      	asrs	r0, r0, #16
900240dc:	f53f af67 	bmi.w	90023fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900240e0:	3901      	subs	r1, #1
900240e2:	4288      	cmp	r0, r1
900240e4:	f6bf af63 	bge.w	90023fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900240e8:	9920      	ldr	r1, [sp, #128]	@ 0x80
900240ea:	fb01 6303 	mla	r3, r1, r3, r6
900240ee:	141b      	asrs	r3, r3, #16
900240f0:	f53f af5d 	bmi.w	90023fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900240f4:	3a01      	subs	r2, #1
900240f6:	4293      	cmp	r3, r2
900240f8:	f6bf af59 	bge.w	90023fae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900240fc:	f8dd 8018 	ldr.w	r8, [sp, #24]
90024100:	46ca      	mov	sl, r9
90024102:	f1b8 0f00 	cmp.w	r8, #0
90024106:	dc67      	bgt.n	900241d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90024108:	9b06      	ldr	r3, [sp, #24]
9002410a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9002410e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90024112:	9b08      	ldr	r3, [sp, #32]
90024114:	2b00      	cmp	r3, #0
90024116:	f340 80d7 	ble.w	900242c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002411a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002411e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024120:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024124:	eeb0 6a62 	vmov.f32	s12, s5
90024128:	eec6 7a80 	vdiv.f32	s15, s13, s0
9002412c:	ee31 1a05 	vadd.f32	s2, s2, s10
90024130:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90024134:	ee16 4a10 	vmov	r4, s12
90024138:	eeb0 6a43 	vmov.f32	s12, s6
9002413c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90024140:	ee16 6a10 	vmov	r6, s12
90024144:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024148:	ee61 7a27 	vmul.f32	s15, s2, s15
9002414c:	ee77 2a62 	vsub.f32	s5, s14, s5
90024150:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024154:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024158:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002415c:	ee12 2a90 	vmov	r2, s5
90024160:	eef0 2a47 	vmov.f32	s5, s14
90024164:	fb92 f3f3 	sdiv	r3, r2, r3
90024168:	ee13 2a10 	vmov	r2, s6
9002416c:	931f      	str	r3, [sp, #124]	@ 0x7c
9002416e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024170:	eeb0 3a67 	vmov.f32	s6, s15
90024174:	fb92 f3f3 	sdiv	r3, r2, r3
90024178:	9320      	str	r3, [sp, #128]	@ 0x80
9002417a:	9b08      	ldr	r3, [sp, #32]
9002417c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002417e:	3b01      	subs	r3, #1
90024180:	9308      	str	r3, [sp, #32]
90024182:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024184:	bf08      	it	eq
90024186:	4613      	moveq	r3, r2
90024188:	9306      	str	r3, [sp, #24]
9002418a:	e6e4      	b.n	90023f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002418c:	2900      	cmp	r1, #0
9002418e:	f43f af4e 	beq.w	9002402e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90024192:	f81a 3003 	ldrb.w	r3, [sl, r3]
90024196:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002419a:	9309      	str	r3, [sp, #36]	@ 0x24
9002419c:	e747      	b.n	9002402e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002419e:	f112 0a01 	adds.w	sl, r2, #1
900241a2:	d481      	bmi.n	900240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900241a4:	4553      	cmp	r3, sl
900241a6:	f6ff af7f 	blt.w	900240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900241aa:	f11c 0a01 	adds.w	sl, ip, #1
900241ae:	f53f af7b 	bmi.w	900240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900241b2:	45d6      	cmp	lr, sl
900241b4:	f6ff af78 	blt.w	900240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900241b8:	b21b      	sxth	r3, r3
900241ba:	e9cd 2c02 	strd	r2, ip, [sp, #8]
900241be:	fa0f f28e 	sxth.w	r2, lr
900241c2:	9300      	str	r3, [sp, #0]
900241c4:	463b      	mov	r3, r7
900241c6:	9201      	str	r2, [sp, #4]
900241c8:	9a07      	ldr	r2, [sp, #28]
900241ca:	e9cd 0104 	strd	r0, r1, [sp, #16]
900241ce:	4641      	mov	r1, r8
900241d0:	9810      	ldr	r0, [sp, #64]	@ 0x40
900241d2:	f7ff fe21 	bl	90023e18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900241d6:	e767      	b.n	900240a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900241d8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900241da:	1422      	asrs	r2, r4, #16
900241dc:	1431      	asrs	r1, r6, #16
900241de:	9d07      	ldr	r5, [sp, #28]
900241e0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900241e4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900241e8:	f3c6 3003 	ubfx	r0, r6, #12, #4
900241ec:	fb03 2101 	mla	r1, r3, r1, r2
900241f0:	9a07      	ldr	r2, [sp, #28]
900241f2:	440a      	add	r2, r1
900241f4:	5c69      	ldrb	r1, [r5, r1]
900241f6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
900241fa:	f1be 0f00 	cmp.w	lr, #0
900241fe:	d05c      	beq.n	900242ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
90024200:	f892 c001 	ldrb.w	ip, [r2, #1]
90024204:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
90024208:	950d      	str	r5, [sp, #52]	@ 0x34
9002420a:	b150      	cbz	r0, 90024222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9002420c:	eb02 0c03 	add.w	ip, r2, r3
90024210:	5cd3      	ldrb	r3, [r2, r3]
90024212:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90024216:	930a      	str	r3, [sp, #40]	@ 0x28
90024218:	f89c 3001 	ldrb.w	r3, [ip, #1]
9002421c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90024220:	930e      	str	r3, [sp, #56]	@ 0x38
90024222:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90024224:	fb1e f200 	smulbb	r2, lr, r0
90024228:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002422a:	f108 38ff 	add.w	r8, r8, #4294967295
9002422e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90024232:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90024236:	10d2      	asrs	r2, r2, #3
90024238:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
9002423c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024240:	ea4c 0c03 	orr.w	ip, ip, r3
90024244:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90024248:	9311      	str	r3, [sp, #68]	@ 0x44
9002424a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002424c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002424e:	041b      	lsls	r3, r3, #16
90024250:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90024254:	ea43 030b 	orr.w	r3, r3, fp
90024258:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002425c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024260:	4353      	muls	r3, r2
90024262:	fb05 3c0c 	mla	ip, r5, ip, r3
90024266:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002426a:	ea43 0b01 	orr.w	fp, r3, r1
9002426e:	f1c0 0110 	rsb	r1, r0, #16
90024272:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024274:	eba1 0e0e 	sub.w	lr, r1, lr
90024278:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9002427c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90024280:	fb0e cc0b 	mla	ip, lr, fp, ip
90024284:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90024288:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
9002428c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024290:	ea4b 0e0e 	orr.w	lr, fp, lr
90024294:	fb02 cc0e 	mla	ip, r2, lr, ip
90024298:	ea4f 535c 	mov.w	r3, ip, lsr #21
9002429c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900242a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900242a4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900242a8:	ea43 0c0c 	orr.w	ip, r3, ip
900242ac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900242ae:	441c      	add	r4, r3
900242b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900242b2:	f82a cb02 	strh.w	ip, [sl], #2
900242b6:	441e      	add	r6, r3
900242b8:	e723      	b.n	90024102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900242ba:	2800      	cmp	r0, #0
900242bc:	d0b1      	beq.n	90024222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900242be:	5cd3      	ldrb	r3, [r2, r3]
900242c0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900242c4:	930a      	str	r3, [sp, #40]	@ 0x28
900242c6:	e7ac      	b.n	90024222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900242c8:	b013      	add	sp, #76	@ 0x4c
900242ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900242ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900242ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900242d2:	880d      	ldrh	r5, [r1, #0]
900242d4:	b087      	sub	sp, #28
900242d6:	10ef      	asrs	r7, r5, #3
900242d8:	9103      	str	r1, [sp, #12]
900242da:	ea4f 2a25 	mov.w	sl, r5, asr #8
900242de:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
900242e2:	00ed      	lsls	r5, r5, #3
900242e4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900242e8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
900242ec:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
900242f0:	b2ed      	uxtb	r5, r5
900242f2:	9701      	str	r7, [sp, #4]
900242f4:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
900242f8:	9502      	str	r5, [sp, #8]
900242fa:	9d01      	ldr	r5, [sp, #4]
900242fc:	9902      	ldr	r1, [sp, #8]
900242fe:	022d      	lsls	r5, r5, #8
90024300:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
90024304:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
90024308:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
9002430c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90024310:	430d      	orrs	r5, r1
90024312:	fb06 0709 	mla	r7, r6, r9, r0
90024316:	2e00      	cmp	r6, #0
90024318:	9505      	str	r5, [sp, #20]
9002431a:	eb02 0c07 	add.w	ip, r2, r7
9002431e:	f2c0 80b6 	blt.w	9002448e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90024322:	45b3      	cmp	fp, r6
90024324:	f340 80b3 	ble.w	9002448e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90024328:	2800      	cmp	r0, #0
9002432a:	f2c0 80ae 	blt.w	9002448a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002432e:	4581      	cmp	r9, r0
90024330:	f340 80ab 	ble.w	9002448a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90024334:	5dd7      	ldrb	r7, [r2, r7]
90024336:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002433a:	441f      	add	r7, r3
9002433c:	1c42      	adds	r2, r0, #1
9002433e:	f100 80a9 	bmi.w	90024494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90024342:	4591      	cmp	r9, r2
90024344:	f340 80a6 	ble.w	90024494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90024348:	2c00      	cmp	r4, #0
9002434a:	f000 80a3 	beq.w	90024494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002434e:	f89c 5001 	ldrb.w	r5, [ip, #1]
90024352:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90024356:	441d      	add	r5, r3
90024358:	3601      	adds	r6, #1
9002435a:	f100 809f 	bmi.w	9002449c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002435e:	45b3      	cmp	fp, r6
90024360:	f340 809c 	ble.w	9002449c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90024364:	f1be 0f00 	cmp.w	lr, #0
90024368:	f000 8098 	beq.w	9002449c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002436c:	2800      	cmp	r0, #0
9002436e:	f2c0 8093 	blt.w	90024498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90024372:	4581      	cmp	r9, r0
90024374:	f340 8090 	ble.w	90024498 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90024378:	f81c 6009 	ldrb.w	r6, [ip, r9]
9002437c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90024380:	441e      	add	r6, r3
90024382:	3001      	adds	r0, #1
90024384:	f100 808d 	bmi.w	900244a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90024388:	4581      	cmp	r9, r0
9002438a:	f340 808a 	ble.w	900244a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002438e:	2c00      	cmp	r4, #0
90024390:	f000 8087 	beq.w	900244a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90024394:	44e1      	add	r9, ip
90024396:	f899 2001 	ldrb.w	r2, [r9, #1]
9002439a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002439e:	4413      	add	r3, r2
900243a0:	b2a4      	uxth	r4, r4
900243a2:	f897 c002 	ldrb.w	ip, [r7, #2]
900243a6:	fa1f fe8e 	uxth.w	lr, lr
900243aa:	9901      	ldr	r1, [sp, #4]
900243ac:	fb04 fb0e 	mul.w	fp, r4, lr
900243b0:	0124      	lsls	r4, r4, #4
900243b2:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
900243b6:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
900243ba:	eba4 040b 	sub.w	r4, r4, fp
900243be:	fa1f f08e 	uxth.w	r0, lr
900243c2:	b2a2      	uxth	r2, r4
900243c4:	78ac      	ldrb	r4, [r5, #2]
900243c6:	eba9 0900 	sub.w	r9, r9, r0
900243ca:	fa1f fe88 	uxth.w	lr, r8
900243ce:	4354      	muls	r4, r2
900243d0:	ea6f 0808 	mvn.w	r8, r8
900243d4:	fa1f f989 	uxth.w	r9, r9
900243d8:	fa5f f888 	uxtb.w	r8, r8
900243dc:	fb09 440c 	mla	r4, r9, ip, r4
900243e0:	f896 c002 	ldrb.w	ip, [r6, #2]
900243e4:	fb1a fa08 	smulbb	sl, sl, r8
900243e8:	fb00 440c 	mla	r4, r0, ip, r4
900243ec:	f893 c002 	ldrb.w	ip, [r3, #2]
900243f0:	fb0b 4c0c 	mla	ip, fp, ip, r4
900243f4:	787c      	ldrb	r4, [r7, #1]
900243f6:	783f      	ldrb	r7, [r7, #0]
900243f8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900243fc:	fb0c ac0e 	mla	ip, ip, lr, sl
90024400:	f895 a001 	ldrb.w	sl, [r5, #1]
90024404:	782d      	ldrb	r5, [r5, #0]
90024406:	fb02 fa0a 	mul.w	sl, r2, sl
9002440a:	fa1f fc8c 	uxth.w	ip, ip
9002440e:	436a      	muls	r2, r5
90024410:	7835      	ldrb	r5, [r6, #0]
90024412:	fb09 aa04 	mla	sl, r9, r4, sl
90024416:	7874      	ldrb	r4, [r6, #1]
90024418:	fb09 2207 	mla	r2, r9, r7, r2
9002441c:	fb00 aa04 	mla	sl, r0, r4, sl
90024420:	785c      	ldrb	r4, [r3, #1]
90024422:	fb00 2005 	mla	r0, r0, r5, r2
90024426:	781b      	ldrb	r3, [r3, #0]
90024428:	fb0b a404 	mla	r4, fp, r4, sl
9002442c:	fb11 fa08 	smulbb	sl, r1, r8
90024430:	fb0b 0b03 	mla	fp, fp, r3, r0
90024434:	9b02      	ldr	r3, [sp, #8]
90024436:	f3c4 2407 	ubfx	r4, r4, #8, #8
9002443a:	fb13 f808 	smulbb	r8, r3, r8
9002443e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90024442:	fb04 a40e 	mla	r4, r4, lr, sl
90024446:	f10c 0301 	add.w	r3, ip, #1
9002444a:	fb0b 8e0e 	mla	lr, fp, lr, r8
9002444e:	b2a4      	uxth	r4, r4
90024450:	fa1f fe8e 	uxth.w	lr, lr
90024454:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90024458:	f104 0a01 	add.w	sl, r4, #1
9002445c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90024460:	f10e 0c01 	add.w	ip, lr, #1
90024464:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90024468:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002446c:	0964      	lsrs	r4, r4, #5
9002446e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90024472:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90024476:	ea4c 0c03 	orr.w	ip, ip, r3
9002447a:	9b03      	ldr	r3, [sp, #12]
9002447c:	ea4c 0c04 	orr.w	ip, ip, r4
90024480:	f8a3 c000 	strh.w	ip, [r3]
90024484:	b007      	add	sp, #28
90024486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002448a:	af05      	add	r7, sp, #20
9002448c:	e756      	b.n	9002433c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9002448e:	ad05      	add	r5, sp, #20
90024490:	462f      	mov	r7, r5
90024492:	e761      	b.n	90024358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90024494:	ad05      	add	r5, sp, #20
90024496:	e75f      	b.n	90024358 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90024498:	ae05      	add	r6, sp, #20
9002449a:	e772      	b.n	90024382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
9002449c:	ab05      	add	r3, sp, #20
9002449e:	461e      	mov	r6, r3
900244a0:	e77e      	b.n	900243a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
900244a2:	ab05      	add	r3, sp, #20
900244a4:	e77c      	b.n	900243a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

900244a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900244a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900244aa:	b095      	sub	sp, #84	@ 0x54
900244ac:	9212      	str	r2, [sp, #72]	@ 0x48
900244ae:	9309      	str	r3, [sp, #36]	@ 0x24
900244b0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
900244b2:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
900244b6:	9013      	str	r0, [sp, #76]	@ 0x4c
900244b8:	930f      	str	r3, [sp, #60]	@ 0x3c
900244ba:	6850      	ldr	r0, [r2, #4]
900244bc:	910e      	str	r1, [sp, #56]	@ 0x38
900244be:	6812      	ldr	r2, [r2, #0]
900244c0:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
900244c4:	fb00 1303 	mla	r3, r0, r3, r1
900244c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900244cc:	930a      	str	r3, [sp, #40]	@ 0x28
900244ce:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900244d0:	681b      	ldr	r3, [r3, #0]
900244d2:	930d      	str	r3, [sp, #52]	@ 0x34
900244d4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900244d6:	685c      	ldr	r4, [r3, #4]
900244d8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900244da:	3404      	adds	r4, #4
900244dc:	43db      	mvns	r3, r3
900244de:	b2db      	uxtb	r3, r3
900244e0:	930b      	str	r3, [sp, #44]	@ 0x2c
900244e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900244e4:	2b00      	cmp	r3, #0
900244e6:	dc03      	bgt.n	900244f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900244e8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900244ea:	2b00      	cmp	r3, #0
900244ec:	f340 8255 	ble.w	9002499a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
900244f0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900244f2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900244f6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900244fa:	1e48      	subs	r0, r1, #1
900244fc:	1e55      	subs	r5, r2, #1
900244fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024500:	2b00      	cmp	r3, #0
90024502:	f340 80f9 	ble.w	900246f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90024506:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90024508:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002450a:	1436      	asrs	r6, r6, #16
9002450c:	ea4f 4323 	mov.w	r3, r3, asr #16
90024510:	d406      	bmi.n	90024520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90024512:	4286      	cmp	r6, r0
90024514:	da04      	bge.n	90024520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90024516:	2b00      	cmp	r3, #0
90024518:	db02      	blt.n	90024520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9002451a:	42ab      	cmp	r3, r5
9002451c:	f2c0 80ed 	blt.w	900246fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90024520:	3601      	adds	r6, #1
90024522:	f100 80da 	bmi.w	900246da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024526:	42b1      	cmp	r1, r6
90024528:	f2c0 80d7 	blt.w	900246da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9002452c:	3301      	adds	r3, #1
9002452e:	f100 80d4 	bmi.w	900246da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024532:	429a      	cmp	r2, r3
90024534:	f2c0 80d1 	blt.w	900246da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90024538:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002453a:	9311      	str	r3, [sp, #68]	@ 0x44
9002453c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002453e:	930c      	str	r3, [sp, #48]	@ 0x30
90024540:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024542:	2b00      	cmp	r3, #0
90024544:	f340 80fa 	ble.w	9002473c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90024548:	9826      	ldr	r0, [sp, #152]	@ 0x98
9002454a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002454c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
9002454e:	68c6      	ldr	r6, [r0, #12]
90024550:	141d      	asrs	r5, r3, #16
90024552:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90024554:	f3c2 3103 	ubfx	r1, r2, #12, #4
90024558:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002455a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9002455c:	1400      	asrs	r0, r0, #16
9002455e:	f3c3 3303 	ubfx	r3, r3, #12, #4
90024562:	6892      	ldr	r2, [r2, #8]
90024564:	f100 813e 	bmi.w	900247e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90024568:	1e57      	subs	r7, r2, #1
9002456a:	42b8      	cmp	r0, r7
9002456c:	f280 813a 	bge.w	900247e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90024570:	2d00      	cmp	r5, #0
90024572:	f2c0 8137 	blt.w	900247e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90024576:	1e77      	subs	r7, r6, #1
90024578:	42bd      	cmp	r5, r7
9002457a:	f280 8133 	bge.w	900247e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9002457e:	b212      	sxth	r2, r2
90024580:	fb05 0002 	mla	r0, r5, r2, r0
90024584:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90024586:	f815 a000 	ldrb.w	sl, [r5, r0]
9002458a:	182e      	adds	r6, r5, r0
9002458c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90024590:	eb04 050a 	add.w	r5, r4, sl
90024594:	2b00      	cmp	r3, #0
90024596:	f000 8117 	beq.w	900247c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9002459a:	f896 c001 	ldrb.w	ip, [r6, #1]
9002459e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
900245a2:	44a4      	add	ip, r4
900245a4:	2900      	cmp	r1, #0
900245a6:	f000 8117 	beq.w	900247d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
900245aa:	18b0      	adds	r0, r6, r2
900245ac:	5cb2      	ldrb	r2, [r6, r2]
900245ae:	7840      	ldrb	r0, [r0, #1]
900245b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900245b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900245b8:	4422      	add	r2, r4
900245ba:	4420      	add	r0, r4
900245bc:	b29b      	uxth	r3, r3
900245be:	f89c 7002 	ldrb.w	r7, [ip, #2]
900245c2:	b289      	uxth	r1, r1
900245c4:	f895 b002 	ldrb.w	fp, [r5, #2]
900245c8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
900245ca:	fb03 f901 	mul.w	r9, r3, r1
900245ce:	011b      	lsls	r3, r3, #4
900245d0:	f8b6 e000 	ldrh.w	lr, [r6]
900245d4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900245d8:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
900245dc:	eba3 0309 	sub.w	r3, r3, r9
900245e0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
900245e4:	b289      	uxth	r1, r1
900245e6:	f814 a00a 	ldrb.w	sl, [r4, sl]
900245ea:	b29b      	uxth	r3, r3
900245ec:	eba8 0801 	sub.w	r8, r8, r1
900245f0:	435f      	muls	r7, r3
900245f2:	fa1f f888 	uxth.w	r8, r8
900245f6:	9310      	str	r3, [sp, #64]	@ 0x40
900245f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900245fa:	fb08 770b 	mla	r7, r8, fp, r7
900245fe:	f892 b002 	ldrb.w	fp, [r2, #2]
90024602:	fb01 770b 	mla	r7, r1, fp, r7
90024606:	f890 b002 	ldrb.w	fp, [r0, #2]
9002460a:	fb09 770b 	mla	r7, r9, fp, r7
9002460e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90024612:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90024616:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002461a:	fb1b fb03 	smulbb	fp, fp, r3
9002461e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024620:	fb07 b706 	mla	r7, r7, r6, fp
90024624:	f895 b001 	ldrb.w	fp, [r5, #1]
90024628:	f89c 5001 	ldrb.w	r5, [ip, #1]
9002462c:	f89c c000 	ldrb.w	ip, [ip]
90024630:	b2bf      	uxth	r7, r7
90024632:	435d      	muls	r5, r3
90024634:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024636:	fb08 550b 	mla	r5, r8, fp, r5
9002463a:	f892 b001 	ldrb.w	fp, [r2, #1]
9002463e:	fb01 550b 	mla	r5, r1, fp, r5
90024642:	f890 b001 	ldrb.w	fp, [r0, #1]
90024646:	fb09 550b 	mla	r5, r9, fp, r5
9002464a:	ea4f 0bee 	mov.w	fp, lr, asr #3
9002464e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90024652:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90024656:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002465a:	fa5f fe8e 	uxtb.w	lr, lr
9002465e:	fb1b fb03 	smulbb	fp, fp, r3
90024662:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024664:	fb03 f30c 	mul.w	r3, r3, ip
90024668:	f892 c000 	ldrb.w	ip, [r2]
9002466c:	fb05 b506 	mla	r5, r5, r6, fp
90024670:	fb08 330a 	mla	r3, r8, sl, r3
90024674:	b2ad      	uxth	r5, r5
90024676:	fb01 330c 	mla	r3, r1, ip, r3
9002467a:	f890 c000 	ldrb.w	ip, [r0]
9002467e:	f105 0b01 	add.w	fp, r5, #1
90024682:	fb09 3c0c 	mla	ip, r9, ip, r3
90024686:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024688:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9002468c:	fb1e fe03 	smulbb	lr, lr, r3
90024690:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90024694:	1c7b      	adds	r3, r7, #1
90024696:	096d      	lsrs	r5, r5, #5
90024698:	fb0c e606 	mla	r6, ip, r6, lr
9002469c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900246a0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900246a4:	b2b6      	uxth	r6, r6
900246a6:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
900246aa:	1c77      	adds	r7, r6, #1
900246ac:	eb07 2716 	add.w	r7, r7, r6, lsr #8
900246b0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900246b4:	431f      	orrs	r7, r3
900246b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900246b8:	433d      	orrs	r5, r7
900246ba:	801d      	strh	r5, [r3, #0]
900246bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900246be:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900246c0:	3302      	adds	r3, #2
900246c2:	930c      	str	r3, [sp, #48]	@ 0x30
900246c4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900246c6:	4413      	add	r3, r2
900246c8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
900246ca:	931f      	str	r3, [sp, #124]	@ 0x7c
900246cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900246ce:	4413      	add	r3, r2
900246d0:	9320      	str	r3, [sp, #128]	@ 0x80
900246d2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900246d4:	3b01      	subs	r3, #1
900246d6:	9311      	str	r3, [sp, #68]	@ 0x44
900246d8:	e732      	b.n	90024540 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900246da:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900246dc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
900246de:	4433      	add	r3, r6
900246e0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
900246e2:	931f      	str	r3, [sp, #124]	@ 0x7c
900246e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900246e6:	4433      	add	r3, r6
900246e8:	9320      	str	r3, [sp, #128]	@ 0x80
900246ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900246ec:	3b01      	subs	r3, #1
900246ee:	9309      	str	r3, [sp, #36]	@ 0x24
900246f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900246f2:	3302      	adds	r3, #2
900246f4:	930a      	str	r3, [sp, #40]	@ 0x28
900246f6:	e702      	b.n	900244fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900246f8:	d027      	beq.n	9002474a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
900246fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900246fc:	9821      	ldr	r0, [sp, #132]	@ 0x84
900246fe:	3b01      	subs	r3, #1
90024700:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90024702:	fb00 5003 	mla	r0, r0, r3, r5
90024706:	1400      	asrs	r0, r0, #16
90024708:	f53f af16 	bmi.w	90024538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002470c:	3901      	subs	r1, #1
9002470e:	4288      	cmp	r0, r1
90024710:	f6bf af12 	bge.w	90024538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024714:	9922      	ldr	r1, [sp, #136]	@ 0x88
90024716:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024718:	fb01 0303 	mla	r3, r1, r3, r0
9002471c:	141b      	asrs	r3, r3, #16
9002471e:	f53f af0b 	bmi.w	90024538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024722:	3a01      	subs	r2, #1
90024724:	4293      	cmp	r3, r2
90024726:	f6bf af07 	bge.w	90024538 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002472a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002472c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90024730:	9311      	str	r3, [sp, #68]	@ 0x44
90024732:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024734:	930c      	str	r3, [sp, #48]	@ 0x30
90024736:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024738:	2b00      	cmp	r3, #0
9002473a:	dc70      	bgt.n	9002481e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9002473c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002473e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90024740:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90024744:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024748:	930a      	str	r3, [sp, #40]	@ 0x28
9002474a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002474c:	2b00      	cmp	r3, #0
9002474e:	f340 8124 	ble.w	9002499a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90024752:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024756:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024758:	ee30 0a04 	vadd.f32	s0, s0, s8
9002475c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024760:	eef0 6a62 	vmov.f32	s13, s5
90024764:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024768:	ee31 1a05 	vadd.f32	s2, s2, s10
9002476c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024770:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90024774:	eef0 6a43 	vmov.f32	s13, s6
90024778:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002477c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90024780:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024784:	ee61 7a27 	vmul.f32	s15, s2, s15
90024788:	ee77 2a62 	vsub.f32	s5, s14, s5
9002478c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024790:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024794:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024798:	ee12 2a90 	vmov	r2, s5
9002479c:	eef0 2a47 	vmov.f32	s5, s14
900247a0:	fb92 f3f3 	sdiv	r3, r2, r3
900247a4:	ee13 2a10 	vmov	r2, s6
900247a8:	9321      	str	r3, [sp, #132]	@ 0x84
900247aa:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900247ac:	eeb0 3a67 	vmov.f32	s6, s15
900247b0:	fb92 f3f3 	sdiv	r3, r2, r3
900247b4:	9322      	str	r3, [sp, #136]	@ 0x88
900247b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900247b8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
900247ba:	3b01      	subs	r3, #1
900247bc:	930e      	str	r3, [sp, #56]	@ 0x38
900247be:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900247c0:	bf08      	it	eq
900247c2:	4613      	moveq	r3, r2
900247c4:	9309      	str	r3, [sp, #36]	@ 0x24
900247c6:	e68c      	b.n	900244e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900247c8:	b149      	cbz	r1, 900247de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
900247ca:	5cb2      	ldrb	r2, [r6, r2]
900247cc:	4628      	mov	r0, r5
900247ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900247d2:	4422      	add	r2, r4
900247d4:	46ac      	mov	ip, r5
900247d6:	e6f1      	b.n	900245bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900247d8:	4628      	mov	r0, r5
900247da:	462a      	mov	r2, r5
900247dc:	e6ee      	b.n	900245bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
900247de:	4628      	mov	r0, r5
900247e0:	462a      	mov	r2, r5
900247e2:	e7f7      	b.n	900247d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
900247e4:	1c47      	adds	r7, r0, #1
900247e6:	f53f af69 	bmi.w	900246bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900247ea:	42ba      	cmp	r2, r7
900247ec:	f6ff af66 	blt.w	900246bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900247f0:	1c6f      	adds	r7, r5, #1
900247f2:	f53f af63 	bmi.w	900246bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900247f6:	42be      	cmp	r6, r7
900247f8:	f6ff af60 	blt.w	900246bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
900247fc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900247fe:	b236      	sxth	r6, r6
90024800:	b212      	sxth	r2, r2
90024802:	9002      	str	r0, [sp, #8]
90024804:	9601      	str	r6, [sp, #4]
90024806:	9200      	str	r2, [sp, #0]
90024808:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9002480a:	e9cd 1705 	strd	r1, r7, [sp, #20]
9002480e:	e9cd 5303 	strd	r5, r3, [sp, #12]
90024812:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90024816:	4623      	mov	r3, r4
90024818:	f7ff fd59 	bl	900242ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
9002481c:	e74e      	b.n	900246bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9002481e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024820:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024822:	f3c2 3103 	ubfx	r1, r2, #12, #4
90024826:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90024828:	9a26      	ldr	r2, [sp, #152]	@ 0x98
9002482a:	1400      	asrs	r0, r0, #16
9002482c:	142d      	asrs	r5, r5, #16
9002482e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90024830:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90024834:	f3c3 3303 	ubfx	r3, r3, #12, #4
90024838:	fb02 5000 	mla	r0, r2, r0, r5
9002483c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
9002483e:	f815 9000 	ldrb.w	r9, [r5, r0]
90024842:	182e      	adds	r6, r5, r0
90024844:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90024848:	eb04 0509 	add.w	r5, r4, r9
9002484c:	2b00      	cmp	r3, #0
9002484e:	f000 8096 	beq.w	9002497e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90024852:	7877      	ldrb	r7, [r6, #1]
90024854:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90024858:	4427      	add	r7, r4
9002485a:	2900      	cmp	r1, #0
9002485c:	f000 8097 	beq.w	9002498e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90024860:	18b0      	adds	r0, r6, r2
90024862:	5cb2      	ldrb	r2, [r6, r2]
90024864:	7840      	ldrb	r0, [r0, #1]
90024866:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002486a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002486e:	4422      	add	r2, r4
90024870:	4420      	add	r0, r4
90024872:	b29b      	uxth	r3, r3
90024874:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90024876:	b289      	uxth	r1, r1
90024878:	f895 b002 	ldrb.w	fp, [r5, #2]
9002487c:	f8b6 c000 	ldrh.w	ip, [r6]
90024880:	fb03 f801 	mul.w	r8, r3, r1
90024884:	011b      	lsls	r3, r3, #4
90024886:	78be      	ldrb	r6, [r7, #2]
90024888:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
9002488c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90024890:	eba3 0308 	sub.w	r3, r3, r8
90024894:	f814 9009 	ldrb.w	r9, [r4, r9]
90024898:	b289      	uxth	r1, r1
9002489a:	b29b      	uxth	r3, r3
9002489c:	ebae 0e01 	sub.w	lr, lr, r1
900248a0:	435e      	muls	r6, r3
900248a2:	fa1f fe8e 	uxth.w	lr, lr
900248a6:	9310      	str	r3, [sp, #64]	@ 0x40
900248a8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900248aa:	fb0e 660b 	mla	r6, lr, fp, r6
900248ae:	f892 b002 	ldrb.w	fp, [r2, #2]
900248b2:	fb01 660b 	mla	r6, r1, fp, r6
900248b6:	f890 b002 	ldrb.w	fp, [r0, #2]
900248ba:	fb08 660b 	mla	r6, r8, fp, r6
900248be:	ea4f 2b2c 	mov.w	fp, ip, asr #8
900248c2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
900248c6:	f3c6 2607 	ubfx	r6, r6, #8, #8
900248ca:	fb1b fb03 	smulbb	fp, fp, r3
900248ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900248d0:	fb06 b60a 	mla	r6, r6, sl, fp
900248d4:	f895 b001 	ldrb.w	fp, [r5, #1]
900248d8:	787d      	ldrb	r5, [r7, #1]
900248da:	783f      	ldrb	r7, [r7, #0]
900248dc:	b2b6      	uxth	r6, r6
900248de:	435d      	muls	r5, r3
900248e0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900248e2:	fb0e 550b 	mla	r5, lr, fp, r5
900248e6:	f892 b001 	ldrb.w	fp, [r2, #1]
900248ea:	fb01 550b 	mla	r5, r1, fp, r5
900248ee:	f890 b001 	ldrb.w	fp, [r0, #1]
900248f2:	fb08 550b 	mla	r5, r8, fp, r5
900248f6:	ea4f 0bec 	mov.w	fp, ip, asr #3
900248fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900248fe:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90024902:	f3c5 2507 	ubfx	r5, r5, #8, #8
90024906:	fa5f fc8c 	uxtb.w	ip, ip
9002490a:	fb1b fb03 	smulbb	fp, fp, r3
9002490e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024910:	437b      	muls	r3, r7
90024912:	7817      	ldrb	r7, [r2, #0]
90024914:	fb05 b50a 	mla	r5, r5, sl, fp
90024918:	fb0e 3309 	mla	r3, lr, r9, r3
9002491c:	b2ad      	uxth	r5, r5
9002491e:	fb01 3307 	mla	r3, r1, r7, r3
90024922:	7807      	ldrb	r7, [r0, #0]
90024924:	f105 0b01 	add.w	fp, r5, #1
90024928:	fb08 3707 	mla	r7, r8, r7, r3
9002492c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002492e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90024932:	fb1c fc03 	smulbb	ip, ip, r3
90024936:	f3c7 2707 	ubfx	r7, r7, #8, #8
9002493a:	1c73      	adds	r3, r6, #1
9002493c:	096d      	lsrs	r5, r5, #5
9002493e:	fb07 c70a 	mla	r7, r7, sl, ip
90024942:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90024946:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002494a:	b2bf      	uxth	r7, r7
9002494c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002494e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90024952:	1c7a      	adds	r2, r7, #1
90024954:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90024958:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002495c:	4316      	orrs	r6, r2
9002495e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024960:	432e      	orrs	r6, r5
90024962:	f823 6b02 	strh.w	r6, [r3], #2
90024966:	930c      	str	r3, [sp, #48]	@ 0x30
90024968:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002496a:	4413      	add	r3, r2
9002496c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002496e:	931f      	str	r3, [sp, #124]	@ 0x7c
90024970:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024972:	4413      	add	r3, r2
90024974:	9320      	str	r3, [sp, #128]	@ 0x80
90024976:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90024978:	3b01      	subs	r3, #1
9002497a:	9311      	str	r3, [sp, #68]	@ 0x44
9002497c:	e6db      	b.n	90024736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9002497e:	b149      	cbz	r1, 90024994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90024980:	5cb2      	ldrb	r2, [r6, r2]
90024982:	4628      	mov	r0, r5
90024984:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024988:	4422      	add	r2, r4
9002498a:	462f      	mov	r7, r5
9002498c:	e771      	b.n	90024872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9002498e:	4628      	mov	r0, r5
90024990:	462a      	mov	r2, r5
90024992:	e76e      	b.n	90024872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90024994:	4628      	mov	r0, r5
90024996:	462a      	mov	r2, r5
90024998:	e7f7      	b.n	9002498a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002499a:	b015      	add	sp, #84	@ 0x54
9002499c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900249a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
900249a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900249a4:	880f      	ldrh	r7, [r1, #0]
900249a6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
900249aa:	023c      	lsls	r4, r7, #8
900249ac:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
900249b0:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
900249b4:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
900249b8:	017c      	lsls	r4, r7, #5
900249ba:	00ff      	lsls	r7, r7, #3
900249bc:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900249c0:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
900249c4:	b2ff      	uxtb	r7, r7
900249c6:	ea4b 0404 	orr.w	r4, fp, r4
900249ca:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
900249ce:	4327      	orrs	r7, r4
900249d0:	fb05 ca0e 	mla	sl, r5, lr, ip
900249d4:	2d00      	cmp	r5, #0
900249d6:	9701      	str	r7, [sp, #4]
900249d8:	eb02 080a 	add.w	r8, r2, sl
900249dc:	db7e      	blt.n	90024adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900249de:	45a9      	cmp	r9, r5
900249e0:	dd7c      	ble.n	90024adc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
900249e2:	f1bc 0f00 	cmp.w	ip, #0
900249e6:	db77      	blt.n	90024ad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900249e8:	45e6      	cmp	lr, ip
900249ea:	dd75      	ble.n	90024ad8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
900249ec:	f812 700a 	ldrb.w	r7, [r2, sl]
900249f0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900249f4:	441f      	add	r7, r3
900249f6:	f11c 0201 	adds.w	r2, ip, #1
900249fa:	d472      	bmi.n	90024ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
900249fc:	4596      	cmp	lr, r2
900249fe:	dd70      	ble.n	90024ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024a00:	2800      	cmp	r0, #0
90024a02:	d06e      	beq.n	90024ae2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90024a04:	f898 4001 	ldrb.w	r4, [r8, #1]
90024a08:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90024a0c:	441c      	add	r4, r3
90024a0e:	3501      	adds	r5, #1
90024a10:	d46b      	bmi.n	90024aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024a12:	45a9      	cmp	r9, r5
90024a14:	dd69      	ble.n	90024aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024a16:	2e00      	cmp	r6, #0
90024a18:	d067      	beq.n	90024aea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90024a1a:	f1bc 0f00 	cmp.w	ip, #0
90024a1e:	db62      	blt.n	90024ae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024a20:	45e6      	cmp	lr, ip
90024a22:	dd60      	ble.n	90024ae6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90024a24:	f818 500e 	ldrb.w	r5, [r8, lr]
90024a28:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90024a2c:	441d      	add	r5, r3
90024a2e:	f11c 0201 	adds.w	r2, ip, #1
90024a32:	d45d      	bmi.n	90024af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024a34:	4596      	cmp	lr, r2
90024a36:	dd5b      	ble.n	90024af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024a38:	2800      	cmp	r0, #0
90024a3a:	d059      	beq.n	90024af0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90024a3c:	44c6      	add	lr, r8
90024a3e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024a42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024a46:	4413      	add	r3, r2
90024a48:	b280      	uxth	r0, r0
90024a4a:	f897 e002 	ldrb.w	lr, [r7, #2]
90024a4e:	b2b2      	uxth	r2, r6
90024a50:	f897 9000 	ldrb.w	r9, [r7]
90024a54:	787f      	ldrb	r7, [r7, #1]
90024a56:	fb00 f602 	mul.w	r6, r0, r2
90024a5a:	0100      	lsls	r0, r0, #4
90024a5c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90024a60:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90024a64:	1b80      	subs	r0, r0, r6
90024a66:	fa1f fc82 	uxth.w	ip, r2
90024a6a:	b282      	uxth	r2, r0
90024a6c:	78a0      	ldrb	r0, [r4, #2]
90024a6e:	eba8 080c 	sub.w	r8, r8, ip
90024a72:	4350      	muls	r0, r2
90024a74:	fa1f f888 	uxth.w	r8, r8
90024a78:	fb08 0e0e 	mla	lr, r8, lr, r0
90024a7c:	78a8      	ldrb	r0, [r5, #2]
90024a7e:	fb0c e000 	mla	r0, ip, r0, lr
90024a82:	f893 e002 	ldrb.w	lr, [r3, #2]
90024a86:	fb06 0e0e 	mla	lr, r6, lr, r0
90024a8a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
90024a8e:	f894 e000 	ldrb.w	lr, [r4]
90024a92:	fb02 fe0e 	mul.w	lr, r2, lr
90024a96:	fb08 e909 	mla	r9, r8, r9, lr
90024a9a:	f895 e000 	ldrb.w	lr, [r5]
90024a9e:	fb0c 990e 	mla	r9, ip, lr, r9
90024aa2:	f893 e000 	ldrb.w	lr, [r3]
90024aa6:	785b      	ldrb	r3, [r3, #1]
90024aa8:	fb06 9e0e 	mla	lr, r6, lr, r9
90024aac:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
90024ab0:	ea4e 0e00 	orr.w	lr, lr, r0
90024ab4:	7860      	ldrb	r0, [r4, #1]
90024ab6:	4350      	muls	r0, r2
90024ab8:	786a      	ldrb	r2, [r5, #1]
90024aba:	fb08 0007 	mla	r0, r8, r7, r0
90024abe:	fb0c 0202 	mla	r2, ip, r2, r0
90024ac2:	fb06 2303 	mla	r3, r6, r3, r2
90024ac6:	095b      	lsrs	r3, r3, #5
90024ac8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024acc:	ea4e 0303 	orr.w	r3, lr, r3
90024ad0:	800b      	strh	r3, [r1, #0]
90024ad2:	b003      	add	sp, #12
90024ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024ad8:	af01      	add	r7, sp, #4
90024ada:	e78c      	b.n	900249f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
90024adc:	ac01      	add	r4, sp, #4
90024ade:	4627      	mov	r7, r4
90024ae0:	e795      	b.n	90024a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90024ae2:	ac01      	add	r4, sp, #4
90024ae4:	e793      	b.n	90024a0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
90024ae6:	ad01      	add	r5, sp, #4
90024ae8:	e7a1      	b.n	90024a2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
90024aea:	ab01      	add	r3, sp, #4
90024aec:	461d      	mov	r5, r3
90024aee:	e7ab      	b.n	90024a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
90024af0:	ab01      	add	r3, sp, #4
90024af2:	e7a9      	b.n	90024a48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

90024af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024af8:	b08f      	sub	sp, #60	@ 0x3c
90024afa:	920c      	str	r2, [sp, #48]	@ 0x30
90024afc:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
90024afe:	900d      	str	r0, [sp, #52]	@ 0x34
90024b00:	910a      	str	r1, [sp, #40]	@ 0x28
90024b02:	6850      	ldr	r0, [r2, #4]
90024b04:	9306      	str	r3, [sp, #24]
90024b06:	6812      	ldr	r2, [r2, #0]
90024b08:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
90024b0c:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
90024b10:	fb00 1303 	mla	r3, r0, r3, r1
90024b14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024b18:	9307      	str	r3, [sp, #28]
90024b1a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024b1c:	681b      	ldr	r3, [r3, #0]
90024b1e:	9308      	str	r3, [sp, #32]
90024b20:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024b22:	685c      	ldr	r4, [r3, #4]
90024b24:	3404      	adds	r4, #4
90024b26:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024b28:	2b00      	cmp	r3, #0
90024b2a:	dc03      	bgt.n	90024b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90024b2c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90024b2e:	2b00      	cmp	r3, #0
90024b30:	f340 81d5 	ble.w	90024ede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90024b34:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024b36:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024b3a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024b3e:	1e48      	subs	r0, r1, #1
90024b40:	1e56      	subs	r6, r2, #1
90024b42:	9b06      	ldr	r3, [sp, #24]
90024b44:	2b00      	cmp	r3, #0
90024b46:	f340 80b6 	ble.w	90024cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024b4a:	ea5f 472b 	movs.w	r7, fp, asr #16
90024b4e:	ea4f 4325 	mov.w	r3, r5, asr #16
90024b52:	d406      	bmi.n	90024b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024b54:	4287      	cmp	r7, r0
90024b56:	da04      	bge.n	90024b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024b58:	2b00      	cmp	r3, #0
90024b5a:	db02      	blt.n	90024b62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90024b5c:	42b3      	cmp	r3, r6
90024b5e:	f2c0 80ab 	blt.w	90024cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90024b62:	3701      	adds	r7, #1
90024b64:	f100 809c 	bmi.w	90024ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024b68:	42b9      	cmp	r1, r7
90024b6a:	f2c0 8099 	blt.w	90024ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024b6e:	3301      	adds	r3, #1
90024b70:	f100 8096 	bmi.w	90024ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024b74:	429a      	cmp	r2, r3
90024b76:	f2c0 8093 	blt.w	90024ca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90024b7a:	9b06      	ldr	r3, [sp, #24]
90024b7c:	930b      	str	r3, [sp, #44]	@ 0x2c
90024b7e:	9b07      	ldr	r3, [sp, #28]
90024b80:	9309      	str	r3, [sp, #36]	@ 0x24
90024b82:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024b84:	2b00      	cmp	r3, #0
90024b86:	f340 80b4 	ble.w	90024cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90024b8a:	9820      	ldr	r0, [sp, #128]	@ 0x80
90024b8c:	142e      	asrs	r6, r5, #16
90024b8e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024b90:	f3cb 3303 	ubfx	r3, fp, #12, #4
90024b94:	68c7      	ldr	r7, [r0, #12]
90024b96:	ea5f 402b 	movs.w	r0, fp, asr #16
90024b9a:	f3c5 3103 	ubfx	r1, r5, #12, #4
90024b9e:	6892      	ldr	r2, [r2, #8]
90024ba0:	f100 80fb 	bmi.w	90024d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024ba4:	f102 3cff 	add.w	ip, r2, #4294967295
90024ba8:	4560      	cmp	r0, ip
90024baa:	f280 80f6 	bge.w	90024d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024bae:	2e00      	cmp	r6, #0
90024bb0:	f2c0 80f3 	blt.w	90024d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024bb4:	f107 3cff 	add.w	ip, r7, #4294967295
90024bb8:	4566      	cmp	r6, ip
90024bba:	f280 80ee 	bge.w	90024d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90024bbe:	b212      	sxth	r2, r2
90024bc0:	fb06 0002 	mla	r0, r6, r2, r0
90024bc4:	9e08      	ldr	r6, [sp, #32]
90024bc6:	1837      	adds	r7, r6, r0
90024bc8:	5c30      	ldrb	r0, [r6, r0]
90024bca:	eb00 0840 	add.w	r8, r0, r0, lsl #1
90024bce:	eb04 0c08 	add.w	ip, r4, r8
90024bd2:	2b00      	cmp	r3, #0
90024bd4:	f000 80d3 	beq.w	90024d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
90024bd8:	787e      	ldrb	r6, [r7, #1]
90024bda:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90024bde:	4426      	add	r6, r4
90024be0:	2900      	cmp	r1, #0
90024be2:	f000 80d4 	beq.w	90024d8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
90024be6:	18b8      	adds	r0, r7, r2
90024be8:	5cba      	ldrb	r2, [r7, r2]
90024bea:	7840      	ldrb	r0, [r0, #1]
90024bec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024bf0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90024bf4:	4422      	add	r2, r4
90024bf6:	4420      	add	r0, r4
90024bf8:	b29b      	uxth	r3, r3
90024bfa:	78b7      	ldrb	r7, [r6, #2]
90024bfc:	b289      	uxth	r1, r1
90024bfe:	f89c a002 	ldrb.w	sl, [ip, #2]
90024c02:	f89c c001 	ldrb.w	ip, [ip, #1]
90024c06:	fb03 f901 	mul.w	r9, r3, r1
90024c0a:	011b      	lsls	r3, r3, #4
90024c0c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024c10:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90024c14:	eba3 0309 	sub.w	r3, r3, r9
90024c18:	b289      	uxth	r1, r1
90024c1a:	b29b      	uxth	r3, r3
90024c1c:	ebae 0e01 	sub.w	lr, lr, r1
90024c20:	435f      	muls	r7, r3
90024c22:	fa1f fe8e 	uxth.w	lr, lr
90024c26:	fb0e 770a 	mla	r7, lr, sl, r7
90024c2a:	f892 a002 	ldrb.w	sl, [r2, #2]
90024c2e:	fb01 770a 	mla	r7, r1, sl, r7
90024c32:	f890 a002 	ldrb.w	sl, [r0, #2]
90024c36:	fb09 7a0a 	mla	sl, r9, sl, r7
90024c3a:	f814 7008 	ldrb.w	r7, [r4, r8]
90024c3e:	f896 8000 	ldrb.w	r8, [r6]
90024c42:	7876      	ldrb	r6, [r6, #1]
90024c44:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90024c48:	fb03 f808 	mul.w	r8, r3, r8
90024c4c:	4373      	muls	r3, r6
90024c4e:	fb0e 8807 	mla	r8, lr, r7, r8
90024c52:	7817      	ldrb	r7, [r2, #0]
90024c54:	fb0e 330c 	mla	r3, lr, ip, r3
90024c58:	fb01 8807 	mla	r8, r1, r7, r8
90024c5c:	7807      	ldrb	r7, [r0, #0]
90024c5e:	fb09 8707 	mla	r7, r9, r7, r8
90024c62:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024c66:	ea47 070a 	orr.w	r7, r7, sl
90024c6a:	f892 a001 	ldrb.w	sl, [r2, #1]
90024c6e:	fb01 310a 	mla	r1, r1, sl, r3
90024c72:	f890 a001 	ldrb.w	sl, [r0, #1]
90024c76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024c78:	fb09 1a0a 	mla	sl, r9, sl, r1
90024c7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90024c80:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90024c84:	ea47 070a 	orr.w	r7, r7, sl
90024c88:	801f      	strh	r7, [r3, #0]
90024c8a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024c8c:	3302      	adds	r3, #2
90024c8e:	9309      	str	r3, [sp, #36]	@ 0x24
90024c90:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024c92:	449b      	add	fp, r3
90024c94:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024c96:	441d      	add	r5, r3
90024c98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024c9a:	3b01      	subs	r3, #1
90024c9c:	930b      	str	r3, [sp, #44]	@ 0x2c
90024c9e:	e770      	b.n	90024b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024ca0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024ca2:	449b      	add	fp, r3
90024ca4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024ca6:	441d      	add	r5, r3
90024ca8:	9b06      	ldr	r3, [sp, #24]
90024caa:	3b01      	subs	r3, #1
90024cac:	9306      	str	r3, [sp, #24]
90024cae:	9b07      	ldr	r3, [sp, #28]
90024cb0:	3302      	adds	r3, #2
90024cb2:	9307      	str	r3, [sp, #28]
90024cb4:	e745      	b.n	90024b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
90024cb6:	d023      	beq.n	90024d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90024cb8:	9b06      	ldr	r3, [sp, #24]
90024cba:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90024cbc:	3b01      	subs	r3, #1
90024cbe:	fb00 b003 	mla	r0, r0, r3, fp
90024cc2:	1400      	asrs	r0, r0, #16
90024cc4:	f53f af59 	bmi.w	90024b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024cc8:	3901      	subs	r1, #1
90024cca:	4288      	cmp	r0, r1
90024ccc:	f6bf af55 	bge.w	90024b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024cd0:	991c      	ldr	r1, [sp, #112]	@ 0x70
90024cd2:	fb01 5303 	mla	r3, r1, r3, r5
90024cd6:	141b      	asrs	r3, r3, #16
90024cd8:	f53f af4f 	bmi.w	90024b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024cdc:	3a01      	subs	r2, #1
90024cde:	4293      	cmp	r3, r2
90024ce0:	f6bf af4b 	bge.w	90024b7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90024ce4:	9b06      	ldr	r3, [sp, #24]
90024ce6:	9309      	str	r3, [sp, #36]	@ 0x24
90024ce8:	9b07      	ldr	r3, [sp, #28]
90024cea:	930b      	str	r3, [sp, #44]	@ 0x2c
90024cec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024cee:	2b00      	cmp	r3, #0
90024cf0:	dc70      	bgt.n	90024dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
90024cf2:	9b06      	ldr	r3, [sp, #24]
90024cf4:	9a07      	ldr	r2, [sp, #28]
90024cf6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90024cfa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024cfe:	9307      	str	r3, [sp, #28]
90024d00:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024d02:	2b00      	cmp	r3, #0
90024d04:	f340 80eb 	ble.w	90024ede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90024d08:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90024d0c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024d0e:	ee30 0a04 	vadd.f32	s0, s0, s8
90024d12:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024d16:	eef0 6a62 	vmov.f32	s13, s5
90024d1a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024d1e:	ee31 1a05 	vadd.f32	s2, s2, s10
90024d22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d26:	ee16 ba90 	vmov	fp, s13
90024d2a:	eef0 6a43 	vmov.f32	s13, s6
90024d2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d32:	ee16 5a90 	vmov	r5, s13
90024d36:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024d3a:	ee61 7a27 	vmul.f32	s15, s2, s15
90024d3e:	ee77 2a62 	vsub.f32	s5, s14, s5
90024d42:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024d46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024d4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024d4e:	ee12 2a90 	vmov	r2, s5
90024d52:	eef0 2a47 	vmov.f32	s5, s14
90024d56:	fb92 f3f3 	sdiv	r3, r2, r3
90024d5a:	ee13 2a10 	vmov	r2, s6
90024d5e:	931b      	str	r3, [sp, #108]	@ 0x6c
90024d60:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024d62:	eeb0 3a67 	vmov.f32	s6, s15
90024d66:	fb92 f3f3 	sdiv	r3, r2, r3
90024d6a:	931c      	str	r3, [sp, #112]	@ 0x70
90024d6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024d6e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90024d70:	3b01      	subs	r3, #1
90024d72:	930a      	str	r3, [sp, #40]	@ 0x28
90024d74:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90024d76:	bf08      	it	eq
90024d78:	4613      	moveq	r3, r2
90024d7a:	9306      	str	r3, [sp, #24]
90024d7c:	e6d3      	b.n	90024b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90024d7e:	b149      	cbz	r1, 90024d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90024d80:	5cba      	ldrb	r2, [r7, r2]
90024d82:	4660      	mov	r0, ip
90024d84:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024d88:	4422      	add	r2, r4
90024d8a:	4666      	mov	r6, ip
90024d8c:	e734      	b.n	90024bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90024d8e:	4660      	mov	r0, ip
90024d90:	4662      	mov	r2, ip
90024d92:	e731      	b.n	90024bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90024d94:	4660      	mov	r0, ip
90024d96:	4662      	mov	r2, ip
90024d98:	e7f7      	b.n	90024d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90024d9a:	f110 0c01 	adds.w	ip, r0, #1
90024d9e:	f53f af74 	bmi.w	90024c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024da2:	4562      	cmp	r2, ip
90024da4:	f6ff af71 	blt.w	90024c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024da8:	f116 0c01 	adds.w	ip, r6, #1
90024dac:	f53f af6d 	bmi.w	90024c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024db0:	4567      	cmp	r7, ip
90024db2:	f6ff af6a 	blt.w	90024c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024db6:	b23f      	sxth	r7, r7
90024db8:	b212      	sxth	r2, r2
90024dba:	9701      	str	r7, [sp, #4]
90024dbc:	9200      	str	r2, [sp, #0]
90024dbe:	e9cd 3104 	strd	r3, r1, [sp, #16]
90024dc2:	e9cd 0602 	strd	r0, r6, [sp, #8]
90024dc6:	4623      	mov	r3, r4
90024dc8:	980d      	ldr	r0, [sp, #52]	@ 0x34
90024dca:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90024dce:	f7ff fde7 	bl	900249a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
90024dd2:	e75a      	b.n	90024c8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024dd4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90024dd6:	ea4f 462b 	mov.w	r6, fp, asr #16
90024dda:	1428      	asrs	r0, r5, #16
90024ddc:	f3cb 3303 	ubfx	r3, fp, #12, #4
90024de0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90024de4:	f3c5 3103 	ubfx	r1, r5, #12, #4
90024de8:	fb02 6000 	mla	r0, r2, r0, r6
90024dec:	9e08      	ldr	r6, [sp, #32]
90024dee:	f816 8000 	ldrb.w	r8, [r6, r0]
90024df2:	1837      	adds	r7, r6, r0
90024df4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90024df8:	eb04 0c08 	add.w	ip, r4, r8
90024dfc:	2b00      	cmp	r3, #0
90024dfe:	d060      	beq.n	90024ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
90024e00:	787e      	ldrb	r6, [r7, #1]
90024e02:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90024e06:	4426      	add	r6, r4
90024e08:	2900      	cmp	r1, #0
90024e0a:	d062      	beq.n	90024ed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
90024e0c:	18b8      	adds	r0, r7, r2
90024e0e:	5cba      	ldrb	r2, [r7, r2]
90024e10:	7840      	ldrb	r0, [r0, #1]
90024e12:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024e16:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90024e1a:	4422      	add	r2, r4
90024e1c:	4420      	add	r0, r4
90024e1e:	b29b      	uxth	r3, r3
90024e20:	78b7      	ldrb	r7, [r6, #2]
90024e22:	b289      	uxth	r1, r1
90024e24:	f89c a002 	ldrb.w	sl, [ip, #2]
90024e28:	f89c c001 	ldrb.w	ip, [ip, #1]
90024e2c:	fb03 f901 	mul.w	r9, r3, r1
90024e30:	011b      	lsls	r3, r3, #4
90024e32:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90024e36:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90024e3a:	eba3 0309 	sub.w	r3, r3, r9
90024e3e:	b289      	uxth	r1, r1
90024e40:	b29b      	uxth	r3, r3
90024e42:	ebae 0e01 	sub.w	lr, lr, r1
90024e46:	435f      	muls	r7, r3
90024e48:	fa1f fe8e 	uxth.w	lr, lr
90024e4c:	fb0e 770a 	mla	r7, lr, sl, r7
90024e50:	f892 a002 	ldrb.w	sl, [r2, #2]
90024e54:	fb01 770a 	mla	r7, r1, sl, r7
90024e58:	f890 a002 	ldrb.w	sl, [r0, #2]
90024e5c:	fb09 7a0a 	mla	sl, r9, sl, r7
90024e60:	f814 7008 	ldrb.w	r7, [r4, r8]
90024e64:	f896 8000 	ldrb.w	r8, [r6]
90024e68:	7876      	ldrb	r6, [r6, #1]
90024e6a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90024e6e:	fb03 f808 	mul.w	r8, r3, r8
90024e72:	4373      	muls	r3, r6
90024e74:	7856      	ldrb	r6, [r2, #1]
90024e76:	fb0e 8807 	mla	r8, lr, r7, r8
90024e7a:	7817      	ldrb	r7, [r2, #0]
90024e7c:	fb0e 330c 	mla	r3, lr, ip, r3
90024e80:	fb01 8807 	mla	r8, r1, r7, r8
90024e84:	7807      	ldrb	r7, [r0, #0]
90024e86:	fb01 3306 	mla	r3, r1, r6, r3
90024e8a:	fb09 8707 	mla	r7, r9, r7, r8
90024e8e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90024e92:	ea47 070a 	orr.w	r7, r7, sl
90024e96:	f890 a001 	ldrb.w	sl, [r0, #1]
90024e9a:	fb09 3a0a 	mla	sl, r9, sl, r3
90024e9e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024ea0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90024ea4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90024ea8:	ea47 070a 	orr.w	r7, r7, sl
90024eac:	f823 7b02 	strh.w	r7, [r3], #2
90024eb0:	930b      	str	r3, [sp, #44]	@ 0x2c
90024eb2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90024eb4:	449b      	add	fp, r3
90024eb6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024eb8:	441d      	add	r5, r3
90024eba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024ebc:	3b01      	subs	r3, #1
90024ebe:	9309      	str	r3, [sp, #36]	@ 0x24
90024ec0:	e714      	b.n	90024cec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
90024ec2:	b149      	cbz	r1, 90024ed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
90024ec4:	5cba      	ldrb	r2, [r7, r2]
90024ec6:	4660      	mov	r0, ip
90024ec8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90024ecc:	4422      	add	r2, r4
90024ece:	4666      	mov	r6, ip
90024ed0:	e7a5      	b.n	90024e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90024ed2:	4660      	mov	r0, ip
90024ed4:	4662      	mov	r2, ip
90024ed6:	e7a2      	b.n	90024e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
90024ed8:	4660      	mov	r0, ip
90024eda:	4662      	mov	r2, ip
90024edc:	e7f7      	b.n	90024ece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
90024ede:	b00f      	add	sp, #60	@ 0x3c
90024ee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024ee4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
90024ee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024ee8:	b085      	sub	sp, #20
90024eea:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
90024eee:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
90024ef2:	9102      	str	r1, [sp, #8]
90024ef4:	2c00      	cmp	r4, #0
90024ef6:	fb04 710c 	mla	r1, r4, ip, r7
90024efa:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
90024efe:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
90024f02:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90024f06:	eb02 0e01 	add.w	lr, r2, r1
90024f0a:	f2c0 8122 	blt.w	90025152 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90024f0e:	45a0      	cmp	r8, r4
90024f10:	f340 811f 	ble.w	90025152 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90024f14:	2f00      	cmp	r7, #0
90024f16:	f2c0 811a 	blt.w	9002514e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90024f1a:	45bc      	cmp	ip, r7
90024f1c:	f340 8117 	ble.w	9002514e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90024f20:	5c52      	ldrb	r2, [r2, r1]
90024f22:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90024f26:	1c7a      	adds	r2, r7, #1
90024f28:	f100 8116 	bmi.w	90025158 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90024f2c:	4594      	cmp	ip, r2
90024f2e:	f340 8113 	ble.w	90025158 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90024f32:	2e00      	cmp	r6, #0
90024f34:	f000 8112 	beq.w	9002515c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90024f38:	f89e 2001 	ldrb.w	r2, [lr, #1]
90024f3c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90024f40:	3401      	adds	r4, #1
90024f42:	f100 810f 	bmi.w	90025164 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90024f46:	45a0      	cmp	r8, r4
90024f48:	f340 810c 	ble.w	90025164 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90024f4c:	2800      	cmp	r0, #0
90024f4e:	f000 810c 	beq.w	9002516a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90024f52:	2f00      	cmp	r7, #0
90024f54:	f2c0 8104 	blt.w	90025160 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90024f58:	45bc      	cmp	ip, r7
90024f5a:	f340 8101 	ble.w	90025160 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90024f5e:	f81e 200c 	ldrb.w	r2, [lr, ip]
90024f62:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90024f66:	3701      	adds	r7, #1
90024f68:	f100 8102 	bmi.w	90025170 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90024f6c:	45bc      	cmp	ip, r7
90024f6e:	f340 80ff 	ble.w	90025170 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90024f72:	2e00      	cmp	r6, #0
90024f74:	f000 80fe 	beq.w	90025174 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90024f78:	44f4      	add	ip, lr
90024f7a:	f89c 2001 	ldrb.w	r2, [ip, #1]
90024f7e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90024f82:	b2b6      	uxth	r6, r6
90024f84:	b280      	uxth	r0, r0
90024f86:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90024f8a:	fb00 fe06 	mul.w	lr, r0, r6
90024f8e:	0136      	lsls	r6, r6, #4
90024f90:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90024f94:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90024f98:	eba6 070e 	sub.w	r7, r6, lr
90024f9c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90024fa0:	ea4f 6914 	mov.w	r9, r4, lsr #24
90024fa4:	b280      	uxth	r0, r0
90024fa6:	b2bf      	uxth	r7, r7
90024fa8:	1a1b      	subs	r3, r3, r0
90024faa:	ea4f 6812 	mov.w	r8, r2, lsr #24
90024fae:	fb0a f607 	mul.w	r6, sl, r7
90024fb2:	b29b      	uxth	r3, r3
90024fb4:	fb0b 6603 	mla	r6, fp, r3, r6
90024fb8:	fb00 6609 	mla	r6, r0, r9, r6
90024fbc:	fb0e 6608 	mla	r6, lr, r8, r6
90024fc0:	f3c6 2607 	ubfx	r6, r6, #8, #8
90024fc4:	9600      	str	r6, [sp, #0]
90024fc6:	2e00      	cmp	r6, #0
90024fc8:	f000 80be 	beq.w	90025148 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
90024fcc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90024fd0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90024fd4:	9e02      	ldr	r6, [sp, #8]
90024fd6:	fb0b fc0c 	mul.w	ip, fp, ip
90024fda:	fb0b f505 	mul.w	r5, fp, r5
90024fde:	8836      	ldrh	r6, [r6, #0]
90024fe0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90024fe4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90024fe8:	9501      	str	r5, [sp, #4]
90024fea:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90024fee:	44dc      	add	ip, fp
90024ff0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024ff4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90024ff8:	9503      	str	r5, [sp, #12]
90024ffa:	9d01      	ldr	r5, [sp, #4]
90024ffc:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90025000:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90025004:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90025008:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002500c:	fb0a fc0c 	mul.w	ip, sl, ip
90025010:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90025014:	fb0a fa01 	mul.w	sl, sl, r1
90025018:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002501c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025020:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90025024:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025028:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002502c:	4465      	add	r5, ip
9002502e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025032:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90025036:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002503a:	fb09 fc0c 	mul.w	ip, r9, ip
9002503e:	0a2d      	lsrs	r5, r5, #8
90025040:	fb09 f904 	mul.w	r9, r9, r4
90025044:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025048:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002504c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025050:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90025054:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025058:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002505c:	437d      	muls	r5, r7
9002505e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90025062:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90025066:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002506a:	4461      	add	r1, ip
9002506c:	fb08 f404 	mul.w	r4, r8, r4
90025070:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025074:	fb08 f802 	mul.w	r8, r8, r2
90025078:	0a09      	lsrs	r1, r1, #8
9002507a:	0a22      	lsrs	r2, r4, #8
9002507c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90025080:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90025084:	fb07 f70a 	mul.w	r7, r7, sl
90025088:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002508c:	4414      	add	r4, r2
9002508e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90025092:	0a24      	lsrs	r4, r4, #8
90025094:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90025098:	9a03      	ldr	r2, [sp, #12]
9002509a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002509e:	fb02 5503 	mla	r5, r2, r3, r5
900250a2:	ea4f 2818 	mov.w	r8, r8, lsr #8
900250a6:	9a00      	ldr	r2, [sp, #0]
900250a8:	fb04 540e 	mla	r4, r4, lr, r5
900250ac:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900250b0:	1235      	asrs	r5, r6, #8
900250b2:	fb01 4100 	mla	r1, r1, r0, r4
900250b6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900250ba:	0a09      	lsrs	r1, r1, #8
900250bc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900250c0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900250c4:	fb03 7101 	mla	r1, r3, r1, r7
900250c8:	fb0e 1e08 	mla	lr, lr, r8, r1
900250cc:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900250d0:	fb00 e101 	mla	r1, r0, r1, lr
900250d4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900250d8:	b287      	uxth	r7, r0
900250da:	0a09      	lsrs	r1, r1, #8
900250dc:	437a      	muls	r2, r7
900250de:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900250e2:	1c53      	adds	r3, r2, #1
900250e4:	4321      	orrs	r1, r4
900250e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900250ea:	0c0a      	lsrs	r2, r1, #16
900250ec:	f3c1 2407 	ubfx	r4, r1, #8, #8
900250f0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900250f4:	b2c8      	uxtb	r0, r1
900250f6:	fb12 f207 	smulbb	r2, r2, r7
900250fa:	fb14 f407 	smulbb	r4, r4, r7
900250fe:	b2db      	uxtb	r3, r3
90025100:	fb10 f007 	smulbb	r0, r0, r7
90025104:	fb05 2503 	mla	r5, r5, r3, r2
90025108:	10f2      	asrs	r2, r6, #3
9002510a:	00f6      	lsls	r6, r6, #3
9002510c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025110:	b2ad      	uxth	r5, r5
90025112:	b2f6      	uxtb	r6, r6
90025114:	fb02 4203 	mla	r2, r2, r3, r4
90025118:	fb06 0303 	mla	r3, r6, r3, r0
9002511c:	b294      	uxth	r4, r2
9002511e:	b299      	uxth	r1, r3
90025120:	1c6b      	adds	r3, r5, #1
90025122:	1c62      	adds	r2, r4, #1
90025124:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025128:	1c4b      	adds	r3, r1, #1
9002512a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002512e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90025132:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025136:	0952      	lsrs	r2, r2, #5
90025138:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002513c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025140:	432b      	orrs	r3, r5
90025142:	4313      	orrs	r3, r2
90025144:	9a02      	ldr	r2, [sp, #8]
90025146:	8013      	strh	r3, [r2, #0]
90025148:	b005      	add	sp, #20
9002514a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002514e:	2500      	movs	r5, #0
90025150:	e6e9      	b.n	90024f26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90025152:	2100      	movs	r1, #0
90025154:	460d      	mov	r5, r1
90025156:	e6f3      	b.n	90024f40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90025158:	2100      	movs	r1, #0
9002515a:	e6f1      	b.n	90024f40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002515c:	4631      	mov	r1, r6
9002515e:	e6ef      	b.n	90024f40 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90025160:	2400      	movs	r4, #0
90025162:	e700      	b.n	90024f66 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90025164:	2200      	movs	r2, #0
90025166:	4614      	mov	r4, r2
90025168:	e70b      	b.n	90024f82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002516a:	4602      	mov	r2, r0
9002516c:	4604      	mov	r4, r0
9002516e:	e708      	b.n	90024f82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90025170:	2200      	movs	r2, #0
90025172:	e706      	b.n	90024f82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90025174:	4632      	mov	r2, r6
90025176:	e704      	b.n	90024f82 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90025178 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002517c:	b09f      	sub	sp, #124	@ 0x7c
9002517e:	921b      	str	r2, [sp, #108]	@ 0x6c
90025180:	9309      	str	r3, [sp, #36]	@ 0x24
90025182:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90025184:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90025188:	901d      	str	r0, [sp, #116]	@ 0x74
9002518a:	931c      	str	r3, [sp, #112]	@ 0x70
9002518c:	6850      	ldr	r0, [r2, #4]
9002518e:	9119      	str	r1, [sp, #100]	@ 0x64
90025190:	6812      	ldr	r2, [r2, #0]
90025192:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90025194:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90025198:	fb00 1303 	mla	r3, r0, r3, r1
9002519c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900251a0:	930c      	str	r3, [sp, #48]	@ 0x30
900251a2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900251a4:	681b      	ldr	r3, [r3, #0]
900251a6:	9312      	str	r3, [sp, #72]	@ 0x48
900251a8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900251aa:	685e      	ldr	r6, [r3, #4]
900251ac:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
900251b0:	3604      	adds	r6, #4
900251b2:	930d      	str	r3, [sp, #52]	@ 0x34
900251b4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900251b6:	2b00      	cmp	r3, #0
900251b8:	dc03      	bgt.n	900251c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900251ba:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900251bc:	2b00      	cmp	r3, #0
900251be:	f340 8387 	ble.w	900258d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900251c2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900251c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900251c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900251cc:	1e48      	subs	r0, r1, #1
900251ce:	1e57      	subs	r7, r2, #1
900251d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900251d2:	2b00      	cmp	r3, #0
900251d4:	f340 8194 	ble.w	90025500 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900251d8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900251da:	142b      	asrs	r3, r5, #16
900251dc:	ea5f 4c24 	movs.w	ip, r4, asr #16
900251e0:	d406      	bmi.n	900251f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900251e2:	4584      	cmp	ip, r0
900251e4:	da04      	bge.n	900251f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900251e6:	2b00      	cmp	r3, #0
900251e8:	db02      	blt.n	900251f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900251ea:	42bb      	cmp	r3, r7
900251ec:	f2c0 8189 	blt.w	90025502 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900251f0:	f11c 0c01 	adds.w	ip, ip, #1
900251f4:	f100 8177 	bmi.w	900254e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900251f8:	4561      	cmp	r1, ip
900251fa:	f2c0 8174 	blt.w	900254e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900251fe:	3301      	adds	r3, #1
90025200:	f100 8171 	bmi.w	900254e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
90025204:	429a      	cmp	r2, r3
90025206:	f2c0 816e 	blt.w	900254e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9002520a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002520c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9002520e:	931a      	str	r3, [sp, #104]	@ 0x68
90025210:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90025212:	2b00      	cmp	r3, #0
90025214:	f340 8193 	ble.w	9002553e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90025218:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002521a:	ea4f 4c25 	mov.w	ip, r5, asr #16
9002521e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90025222:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025226:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90025228:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
9002522c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002522e:	141b      	asrs	r3, r3, #16
90025230:	f100 81d6 	bmi.w	900255e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90025234:	f100 38ff 	add.w	r8, r0, #4294967295
90025238:	4543      	cmp	r3, r8
9002523a:	f280 81d1 	bge.w	900255e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002523e:	f1bc 0f00 	cmp.w	ip, #0
90025242:	f2c0 81cd 	blt.w	900255e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90025246:	f10e 38ff 	add.w	r8, lr, #4294967295
9002524a:	45c4      	cmp	ip, r8
9002524c:	f280 81c8 	bge.w	900255e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90025250:	b200      	sxth	r0, r0
90025252:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025254:	fb0c 3300 	mla	r3, ip, r0, r3
90025258:	eb04 0803 	add.w	r8, r4, r3
9002525c:	5ce3      	ldrb	r3, [r4, r3]
9002525e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025262:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90025266:	2a00      	cmp	r2, #0
90025268:	f000 81af 	beq.w	900255ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002526c:	f898 c001 	ldrb.w	ip, [r8, #1]
90025270:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90025274:	940e      	str	r4, [sp, #56]	@ 0x38
90025276:	0e24      	lsrs	r4, r4, #24
90025278:	9415      	str	r4, [sp, #84]	@ 0x54
9002527a:	b179      	cbz	r1, 9002529c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9002527c:	eb08 0c00 	add.w	ip, r8, r0
90025280:	f818 0000 	ldrb.w	r0, [r8, r0]
90025284:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90025288:	900a      	str	r0, [sp, #40]	@ 0x28
9002528a:	0e00      	lsrs	r0, r0, #24
9002528c:	9013      	str	r0, [sp, #76]	@ 0x4c
9002528e:	f89c 0001 	ldrb.w	r0, [ip, #1]
90025292:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90025296:	900f      	str	r0, [sp, #60]	@ 0x3c
90025298:	0e00      	lsrs	r0, r0, #24
9002529a:	9016      	str	r0, [sp, #88]	@ 0x58
9002529c:	b292      	uxth	r2, r2
9002529e:	9815      	ldr	r0, [sp, #84]	@ 0x54
900252a0:	b289      	uxth	r1, r1
900252a2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
900252a4:	fb02 f901 	mul.w	r9, r2, r1
900252a8:	0112      	lsls	r2, r2, #4
900252aa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900252ae:	eba2 0809 	sub.w	r8, r2, r9
900252b2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900252b6:	b289      	uxth	r1, r1
900252b8:	fa1f f888 	uxth.w	r8, r8
900252bc:	1a52      	subs	r2, r2, r1
900252be:	fb08 f000 	mul.w	r0, r8, r0
900252c2:	b292      	uxth	r2, r2
900252c4:	fb02 000e 	mla	r0, r2, lr, r0
900252c8:	fb01 0004 	mla	r0, r1, r4, r0
900252cc:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900252ce:	fb09 0004 	mla	r0, r9, r4, r0
900252d2:	f3c0 2007 	ubfx	r0, r0, #8, #8
900252d6:	2800      	cmp	r0, #0
900252d8:	f000 80fa 	beq.w	900254d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900252dc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900252e0:	d01b      	beq.n	9002531a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900252e2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900252e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900252ea:	fb0e fa0a 	mul.w	sl, lr, sl
900252ee:	fb0e fe03 	mul.w	lr, lr, r3
900252f2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900252f6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900252fa:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900252fe:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025302:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90025306:	4453      	add	r3, sl
90025308:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002530c:	0a1b      	lsrs	r3, r3, #8
9002530e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025312:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025316:	ea43 030c 	orr.w	r3, r3, ip
9002531a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002531c:	2cff      	cmp	r4, #255	@ 0xff
9002531e:	d021      	beq.n	90025364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90025320:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025322:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025326:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025328:	fb04 fb0b 	mul.w	fp, r4, fp
9002532c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002532e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025332:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90025334:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025338:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002533c:	fb04 fa0a 	mul.w	sl, r4, sl
90025340:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025344:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025348:	44de      	add	lr, fp
9002534a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002534e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025352:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025356:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002535a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002535e:	ea4e 040a 	orr.w	r4, lr, sl
90025362:	940e      	str	r4, [sp, #56]	@ 0x38
90025364:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025366:	2cff      	cmp	r4, #255	@ 0xff
90025368:	d021      	beq.n	900253ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002536a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002536c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025370:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025372:	fb04 fb0b 	mul.w	fp, r4, fp
90025376:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025378:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002537c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002537e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025382:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025386:	fb04 fa0a 	mul.w	sl, r4, sl
9002538a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002538e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025392:	44de      	add	lr, fp
90025394:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025398:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002539c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900253a0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900253a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900253a8:	ea4e 040a 	orr.w	r4, lr, sl
900253ac:	940a      	str	r4, [sp, #40]	@ 0x28
900253ae:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900253b0:	2cff      	cmp	r4, #255	@ 0xff
900253b2:	d021      	beq.n	900253f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
900253b4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900253b6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900253ba:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900253bc:	fb04 fb0b 	mul.w	fp, r4, fp
900253c0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900253c2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900253c6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900253c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900253cc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900253d0:	fb04 fa0a 	mul.w	sl, r4, sl
900253d4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900253d8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900253dc:	44de      	add	lr, fp
900253de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900253e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900253e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900253ea:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900253ee:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900253f2:	ea4e 040a 	orr.w	r4, lr, sl
900253f6:	940f      	str	r4, [sp, #60]	@ 0x3c
900253f8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900253fa:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900253fe:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025402:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025406:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90025408:	fb08 fc0c 	mul.w	ip, r8, ip
9002540c:	fb02 cc0e 	mla	ip, r2, lr, ip
90025410:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90025414:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025416:	fb01 cc0e 	mla	ip, r1, lr, ip
9002541a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
9002541e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90025420:	fb09 cc0e 	mla	ip, r9, lr, ip
90025424:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90025428:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002542a:	fb08 f80e 	mul.w	r8, r8, lr
9002542e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025432:	fb02 8303 	mla	r3, r2, r3, r8
90025436:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90025438:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002543c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90025440:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90025442:	fb01 330a 	mla	r3, r1, sl, r3
90025446:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
9002544a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002544c:	fb09 3901 	mla	r9, r9, r1, r3
90025450:	883b      	ldrh	r3, [r7, #0]
90025452:	4342      	muls	r2, r0
90025454:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025458:	1c50      	adds	r0, r2, #1
9002545a:	1219      	asrs	r1, r3, #8
9002545c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90025460:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90025464:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025468:	ea4c 0c09 	orr.w	ip, ip, r9
9002546c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90025470:	ea4f 421c 	mov.w	r2, ip, lsr #16
90025474:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90025478:	b2c0      	uxtb	r0, r0
9002547a:	fb12 f204 	smulbb	r2, r2, r4
9002547e:	fa5f fc8c 	uxtb.w	ip, ip
90025482:	fb1e fe04 	smulbb	lr, lr, r4
90025486:	fb01 2100 	mla	r1, r1, r0, r2
9002548a:	10da      	asrs	r2, r3, #3
9002548c:	fb1c fc04 	smulbb	ip, ip, r4
90025490:	00db      	lsls	r3, r3, #3
90025492:	b289      	uxth	r1, r1
90025494:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025498:	b2db      	uxtb	r3, r3
9002549a:	fb02 e200 	mla	r2, r2, r0, lr
9002549e:	fb03 c300 	mla	r3, r3, r0, ip
900254a2:	b292      	uxth	r2, r2
900254a4:	fa1f fc83 	uxth.w	ip, r3
900254a8:	1c4b      	adds	r3, r1, #1
900254aa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900254ae:	f10c 0301 	add.w	r3, ip, #1
900254b2:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900254b6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900254ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900254be:	430b      	orrs	r3, r1
900254c0:	1c51      	adds	r1, r2, #1
900254c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900254c6:	0952      	lsrs	r2, r2, #5
900254c8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900254cc:	4313      	orrs	r3, r2
900254ce:	803b      	strh	r3, [r7, #0]
900254d0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900254d2:	3702      	adds	r7, #2
900254d4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900254d6:	441a      	add	r2, r3
900254d8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900254da:	441d      	add	r5, r3
900254dc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900254de:	9229      	str	r2, [sp, #164]	@ 0xa4
900254e0:	3b01      	subs	r3, #1
900254e2:	931a      	str	r3, [sp, #104]	@ 0x68
900254e4:	e694      	b.n	90025210 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900254e6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900254e8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900254ea:	441c      	add	r4, r3
900254ec:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900254ee:	441d      	add	r5, r3
900254f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900254f2:	9429      	str	r4, [sp, #164]	@ 0xa4
900254f4:	3b01      	subs	r3, #1
900254f6:	9309      	str	r3, [sp, #36]	@ 0x24
900254f8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900254fa:	3302      	adds	r3, #2
900254fc:	930c      	str	r3, [sp, #48]	@ 0x30
900254fe:	e667      	b.n	900251d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90025500:	d024      	beq.n	9002554c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90025502:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025504:	982b      	ldr	r0, [sp, #172]	@ 0xac
90025506:	3b01      	subs	r3, #1
90025508:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
9002550a:	fb00 4003 	mla	r0, r0, r3, r4
9002550e:	1400      	asrs	r0, r0, #16
90025510:	f53f ae7b 	bmi.w	9002520a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025514:	3901      	subs	r1, #1
90025516:	4288      	cmp	r0, r1
90025518:	f6bf ae77 	bge.w	9002520a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002551c:	992c      	ldr	r1, [sp, #176]	@ 0xb0
9002551e:	fb01 5303 	mla	r3, r1, r3, r5
90025522:	141b      	asrs	r3, r3, #16
90025524:	f53f ae71 	bmi.w	9002520a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025528:	3a01      	subs	r2, #1
9002552a:	4293      	cmp	r3, r2
9002552c:	f6bf ae6d 	bge.w	9002520a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90025530:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90025534:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90025538:	f1bb 0f00 	cmp.w	fp, #0
9002553c:	dc70      	bgt.n	90025620 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
9002553e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90025540:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025544:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90025546:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002554a:	930c      	str	r3, [sp, #48]	@ 0x30
9002554c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
9002554e:	2b00      	cmp	r3, #0
90025550:	f340 81be 	ble.w	900258d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90025554:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025558:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002555a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002555e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025562:	eef0 6a62 	vmov.f32	s13, s5
90025566:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002556a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002556e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025572:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90025576:	eef0 6a43 	vmov.f32	s13, s6
9002557a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002557e:	ee16 5a90 	vmov	r5, s13
90025582:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025586:	ee61 7a27 	vmul.f32	s15, s2, s15
9002558a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002558e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025592:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025596:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002559a:	ee12 2a90 	vmov	r2, s5
9002559e:	eef0 2a47 	vmov.f32	s5, s14
900255a2:	fb92 f3f3 	sdiv	r3, r2, r3
900255a6:	ee13 2a10 	vmov	r2, s6
900255aa:	932b      	str	r3, [sp, #172]	@ 0xac
900255ac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900255ae:	eeb0 3a67 	vmov.f32	s6, s15
900255b2:	fb92 f3f3 	sdiv	r3, r2, r3
900255b6:	932c      	str	r3, [sp, #176]	@ 0xb0
900255b8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900255ba:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
900255bc:	3b01      	subs	r3, #1
900255be:	9319      	str	r3, [sp, #100]	@ 0x64
900255c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900255c2:	bf08      	it	eq
900255c4:	4613      	moveq	r3, r2
900255c6:	9309      	str	r3, [sp, #36]	@ 0x24
900255c8:	e5f4      	b.n	900251b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
900255ca:	2900      	cmp	r1, #0
900255cc:	f43f ae66 	beq.w	9002529c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900255d0:	f818 0000 	ldrb.w	r0, [r8, r0]
900255d4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
900255d8:	900a      	str	r0, [sp, #40]	@ 0x28
900255da:	0e00      	lsrs	r0, r0, #24
900255dc:	9013      	str	r0, [sp, #76]	@ 0x4c
900255de:	e65d      	b.n	9002529c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
900255e0:	f113 0801 	adds.w	r8, r3, #1
900255e4:	f53f af74 	bmi.w	900254d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900255e8:	4540      	cmp	r0, r8
900255ea:	f6ff af71 	blt.w	900254d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900255ee:	f11c 0801 	adds.w	r8, ip, #1
900255f2:	f53f af6d 	bmi.w	900254d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900255f6:	45c6      	cmp	lr, r8
900255f8:	f6ff af6a 	blt.w	900254d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900255fc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
900255fe:	b200      	sxth	r0, r0
90025600:	9302      	str	r3, [sp, #8]
90025602:	fa0f f38e 	sxth.w	r3, lr
90025606:	9000      	str	r0, [sp, #0]
90025608:	9301      	str	r3, [sp, #4]
9002560a:	4633      	mov	r3, r6
9002560c:	981d      	ldr	r0, [sp, #116]	@ 0x74
9002560e:	e9cd 1405 	strd	r1, r4, [sp, #20]
90025612:	e9cd c203 	strd	ip, r2, [sp, #12]
90025616:	4639      	mov	r1, r7
90025618:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9002561a:	f7ff fc63 	bl	90024ee4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
9002561e:	e757      	b.n	900254d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025620:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90025622:	f3c5 3003 	ubfx	r0, r5, #12, #4
90025626:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90025628:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002562c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002562e:	1427      	asrs	r7, r4, #16
90025630:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025632:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025636:	142b      	asrs	r3, r5, #16
90025638:	fb01 7303 	mla	r3, r1, r3, r7
9002563c:	18e7      	adds	r7, r4, r3
9002563e:	5ce3      	ldrb	r3, [r4, r3]
90025640:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025644:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025648:	2a00      	cmp	r2, #0
9002564a:	f000 8137 	beq.w	900258bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
9002564e:	f897 e001 	ldrb.w	lr, [r7, #1]
90025652:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90025656:	9410      	str	r4, [sp, #64]	@ 0x40
90025658:	0e24      	lsrs	r4, r4, #24
9002565a:	9417      	str	r4, [sp, #92]	@ 0x5c
9002565c:	b170      	cbz	r0, 9002567c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002565e:	eb07 0e01 	add.w	lr, r7, r1
90025662:	5c79      	ldrb	r1, [r7, r1]
90025664:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025668:	910b      	str	r1, [sp, #44]	@ 0x2c
9002566a:	0e09      	lsrs	r1, r1, #24
9002566c:	9114      	str	r1, [sp, #80]	@ 0x50
9002566e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90025672:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025676:	9111      	str	r1, [sp, #68]	@ 0x44
90025678:	0e09      	lsrs	r1, r1, #24
9002567a:	9118      	str	r1, [sp, #96]	@ 0x60
9002567c:	b292      	uxth	r2, r2
9002567e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90025680:	b280      	uxth	r0, r0
90025682:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025684:	fb02 f800 	mul.w	r8, r2, r0
90025688:	0112      	lsls	r2, r2, #4
9002568a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002568e:	eba2 0e08 	sub.w	lr, r2, r8
90025692:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90025696:	b280      	uxth	r0, r0
90025698:	fa1f fe8e 	uxth.w	lr, lr
9002569c:	1a12      	subs	r2, r2, r0
9002569e:	fb0e f101 	mul.w	r1, lr, r1
900256a2:	b292      	uxth	r2, r2
900256a4:	fb02 110c 	mla	r1, r2, ip, r1
900256a8:	fb00 1104 	mla	r1, r0, r4, r1
900256ac:	9c18      	ldr	r4, [sp, #96]	@ 0x60
900256ae:	fb08 1104 	mla	r1, r8, r4, r1
900256b2:	f3c1 2107 	ubfx	r1, r1, #8, #8
900256b6:	2900      	cmp	r1, #0
900256b8:	f000 80f5 	beq.w	900258a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
900256bc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900256c0:	d019      	beq.n	900256f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
900256c2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900256c6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900256ca:	fb0c fa0a 	mul.w	sl, ip, sl
900256ce:	fb0c fc03 	mul.w	ip, ip, r3
900256d2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900256d6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900256da:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900256de:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900256e2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900256e6:	4453      	add	r3, sl
900256e8:	0a3f      	lsrs	r7, r7, #8
900256ea:	0a1b      	lsrs	r3, r3, #8
900256ec:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900256f0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900256f4:	433b      	orrs	r3, r7
900256f6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
900256f8:	2cff      	cmp	r4, #255	@ 0xff
900256fa:	d020      	beq.n	9002573e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900256fc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900256fe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025702:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90025704:	4367      	muls	r7, r4
90025706:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025708:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002570c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025710:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90025712:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025716:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002571a:	fb04 fa0a 	mul.w	sl, r4, sl
9002571e:	44bc      	add	ip, r7
90025720:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90025724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025728:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002572c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025730:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025734:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025738:	ea4c 040a 	orr.w	r4, ip, sl
9002573c:	9410      	str	r4, [sp, #64]	@ 0x40
9002573e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90025740:	2cff      	cmp	r4, #255	@ 0xff
90025742:	d020      	beq.n	90025786 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90025744:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025746:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002574a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002574c:	4367      	muls	r7, r4
9002574e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025750:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025754:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025758:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9002575a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002575e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025762:	fb04 fa0a 	mul.w	sl, r4, sl
90025766:	44bc      	add	ip, r7
90025768:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002576c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025770:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90025774:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025778:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002577c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025780:	ea4c 040a 	orr.w	r4, ip, sl
90025784:	940b      	str	r4, [sp, #44]	@ 0x2c
90025786:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90025788:	2cff      	cmp	r4, #255	@ 0xff
9002578a:	d020      	beq.n	900257ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
9002578c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9002578e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90025792:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90025794:	4367      	muls	r7, r4
90025796:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90025798:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002579c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900257a0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
900257a2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900257a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900257aa:	fb04 fa0a 	mul.w	sl, r4, sl
900257ae:	44bc      	add	ip, r7
900257b0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900257b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900257b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900257bc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900257c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900257c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900257c8:	ea4c 040a 	orr.w	r4, ip, sl
900257cc:	9411      	str	r4, [sp, #68]	@ 0x44
900257ce:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900257d0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900257d4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900257d8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900257dc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900257de:	fb0e f707 	mul.w	r7, lr, r7
900257e2:	fb02 770c 	mla	r7, r2, ip, r7
900257e6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900257ea:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900257ec:	fb00 770c 	mla	r7, r0, ip, r7
900257f0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900257f4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900257f6:	fb08 770c 	mla	r7, r8, ip, r7
900257fa:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900257fe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90025800:	fb0e fe0c 	mul.w	lr, lr, ip
90025804:	0a3f      	lsrs	r7, r7, #8
90025806:	fb02 e303 	mla	r3, r2, r3, lr
9002580a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002580c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90025810:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90025814:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90025816:	fb00 330a 	mla	r3, r0, sl, r3
9002581a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
9002581e:	f8b9 0000 	ldrh.w	r0, [r9]
90025822:	fb08 3c0c 	mla	ip, r8, ip, r3
90025826:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025828:	1202      	asrs	r2, r0, #8
9002582a:	434b      	muls	r3, r1
9002582c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025830:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025834:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025838:	1c59      	adds	r1, r3, #1
9002583a:	ea47 070c 	orr.w	r7, r7, ip
9002583e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90025842:	0c3b      	lsrs	r3, r7, #16
90025844:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90025848:	f3c7 2c07 	ubfx	ip, r7, #8, #8
9002584c:	b2ff      	uxtb	r7, r7
9002584e:	fb13 f304 	smulbb	r3, r3, r4
90025852:	b2c9      	uxtb	r1, r1
90025854:	fb1c fc04 	smulbb	ip, ip, r4
90025858:	fb02 3201 	mla	r2, r2, r1, r3
9002585c:	10c3      	asrs	r3, r0, #3
9002585e:	fb17 f704 	smulbb	r7, r7, r4
90025862:	00c0      	lsls	r0, r0, #3
90025864:	b292      	uxth	r2, r2
90025866:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002586a:	b2c0      	uxtb	r0, r0
9002586c:	fb03 c301 	mla	r3, r3, r1, ip
90025870:	f102 0c01 	add.w	ip, r2, #1
90025874:	fb00 7001 	mla	r0, r0, r1, r7
90025878:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
9002587c:	b280      	uxth	r0, r0
9002587e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90025882:	b29b      	uxth	r3, r3
90025884:	1c42      	adds	r2, r0, #1
90025886:	eb02 2210 	add.w	r2, r2, r0, lsr #8
9002588a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002588e:	ea42 020c 	orr.w	r2, r2, ip
90025892:	f103 0c01 	add.w	ip, r3, #1
90025896:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
9002589a:	095b      	lsrs	r3, r3, #5
9002589c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900258a0:	431a      	orrs	r2, r3
900258a2:	f8a9 2000 	strh.w	r2, [r9]
900258a6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
900258a8:	f109 0902 	add.w	r9, r9, #2
900258ac:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
900258ae:	f10b 3bff 	add.w	fp, fp, #4294967295
900258b2:	441a      	add	r2, r3
900258b4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900258b6:	9229      	str	r2, [sp, #164]	@ 0xa4
900258b8:	441d      	add	r5, r3
900258ba:	e63d      	b.n	90025538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
900258bc:	2800      	cmp	r0, #0
900258be:	f43f aedd 	beq.w	9002567c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900258c2:	5c79      	ldrb	r1, [r7, r1]
900258c4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900258c8:	910b      	str	r1, [sp, #44]	@ 0x2c
900258ca:	0e09      	lsrs	r1, r1, #24
900258cc:	9114      	str	r1, [sp, #80]	@ 0x50
900258ce:	e6d5      	b.n	9002567c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900258d0:	b01f      	add	sp, #124	@ 0x7c
900258d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900258d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
900258d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900258da:	b089      	sub	sp, #36	@ 0x24
900258dc:	9101      	str	r1, [sp, #4]
900258de:	9801      	ldr	r0, [sp, #4]
900258e0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
900258e4:	8800      	ldrh	r0, [r0, #0]
900258e6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
900258ea:	1206      	asrs	r6, r0, #8
900258ec:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900258f0:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
900258f4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
900258f8:	9602      	str	r6, [sp, #8]
900258fa:	10c6      	asrs	r6, r0, #3
900258fc:	00c0      	lsls	r0, r0, #3
900258fe:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90025902:	b2c0      	uxtb	r0, r0
90025904:	9603      	str	r6, [sp, #12]
90025906:	9004      	str	r0, [sp, #16]
90025908:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
9002590c:	fb07 100c 	mla	r0, r7, ip, r1
90025910:	2f00      	cmp	r7, #0
90025912:	eb02 0e00 	add.w	lr, r2, r0
90025916:	f2c0 810a 	blt.w	90025b2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
9002591a:	45b8      	cmp	r8, r7
9002591c:	f340 8107 	ble.w	90025b2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90025920:	2900      	cmp	r1, #0
90025922:	f2c0 8102 	blt.w	90025b2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90025926:	458c      	cmp	ip, r1
90025928:	f340 80ff 	ble.w	90025b2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002592c:	5c12      	ldrb	r2, [r2, r0]
9002592e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90025932:	1c4a      	adds	r2, r1, #1
90025934:	f100 80fe 	bmi.w	90025b34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90025938:	4594      	cmp	ip, r2
9002593a:	f340 80fb 	ble.w	90025b34 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
9002593e:	2d00      	cmp	r5, #0
90025940:	f000 80fa 	beq.w	90025b38 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90025944:	f89e 2001 	ldrb.w	r2, [lr, #1]
90025948:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9002594c:	3701      	adds	r7, #1
9002594e:	f100 80f7 	bmi.w	90025b40 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90025952:	45b8      	cmp	r8, r7
90025954:	f340 80f4 	ble.w	90025b40 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90025958:	2c00      	cmp	r4, #0
9002595a:	f000 80f4 	beq.w	90025b46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
9002595e:	2900      	cmp	r1, #0
90025960:	eb0e 020c 	add.w	r2, lr, ip
90025964:	f2c0 80ea 	blt.w	90025b3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90025968:	458c      	cmp	ip, r1
9002596a:	f340 80e7 	ble.w	90025b3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
9002596e:	f81e 700c 	ldrb.w	r7, [lr, ip]
90025972:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90025976:	3101      	adds	r1, #1
90025978:	f100 80e8 	bmi.w	90025b4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
9002597c:	458c      	cmp	ip, r1
9002597e:	f340 80e5 	ble.w	90025b4c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90025982:	2d00      	cmp	r5, #0
90025984:	f000 80e4 	beq.w	90025b50 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90025988:	7852      	ldrb	r2, [r2, #1]
9002598a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9002598e:	0e0b      	lsrs	r3, r1, #24
90025990:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90025994:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90025998:	9300      	str	r3, [sp, #0]
9002599a:	b2a4      	uxth	r4, r4
9002599c:	b2ab      	uxth	r3, r5
9002599e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
900259a2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
900259a6:	fb03 f904 	mul.w	r9, r3, r4
900259aa:	011b      	lsls	r3, r3, #4
900259ac:	fb0a f505 	mul.w	r5, sl, r5
900259b0:	ea4f 6817 	mov.w	r8, r7, lsr #24
900259b4:	eba3 0e09 	sub.w	lr, r3, r9
900259b8:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
900259bc:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
900259c0:	0a28      	lsrs	r0, r5, #8
900259c2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
900259c6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900259ca:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
900259ce:	fb0a f303 	mul.w	r3, sl, r3
900259d2:	fb08 f707 	mul.w	r7, r8, r7
900259d6:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
900259da:	4405      	add	r5, r0
900259dc:	fb08 fc0c 	mul.w	ip, r8, ip
900259e0:	b2a4      	uxth	r4, r4
900259e2:	0a2d      	lsrs	r5, r5, #8
900259e4:	fa1f fe8e 	uxth.w	lr, lr
900259e8:	1b12      	subs	r2, r2, r4
900259ea:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
900259ee:	b292      	uxth	r2, r2
900259f0:	9005      	str	r0, [sp, #20]
900259f2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
900259f6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900259fa:	ea4f 201c 	mov.w	r0, ip, lsr #8
900259fe:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025a02:	0a1b      	lsrs	r3, r3, #8
90025a04:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90025a08:	9306      	str	r3, [sp, #24]
90025a0a:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
90025a0e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90025a12:	4460      	add	r0, ip
90025a14:	fb0b f303 	mul.w	r3, fp, r3
90025a18:	fb0b f606 	mul.w	r6, fp, r6
90025a1c:	0a00      	lsrs	r0, r0, #8
90025a1e:	0a1d      	lsrs	r5, r3, #8
90025a20:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90025a24:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90025a28:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025a2c:	441d      	add	r5, r3
90025a2e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90025a32:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90025a36:	f507 7380 	add.w	r3, r7, #256	@ 0x100
90025a3a:	0a2d      	lsrs	r5, r5, #8
90025a3c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90025a40:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90025a44:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025a48:	0a36      	lsrs	r6, r6, #8
90025a4a:	0a1b      	lsrs	r3, r3, #8
90025a4c:	fb05 f50e 	mul.w	r5, r5, lr
90025a50:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90025a54:	9307      	str	r3, [sp, #28]
90025a56:	0e0b      	lsrs	r3, r1, #24
90025a58:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025a5c:	fb0e f606 	mul.w	r6, lr, r6
90025a60:	435f      	muls	r7, r3
90025a62:	4359      	muls	r1, r3
90025a64:	9b05      	ldr	r3, [sp, #20]
90025a66:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90025a6a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90025a6e:	fb03 5502 	mla	r5, r3, r2, r5
90025a72:	9b06      	ldr	r3, [sp, #24]
90025a74:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025a78:	fb0e fe0b 	mul.w	lr, lr, fp
90025a7c:	44bc      	add	ip, r7
90025a7e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90025a82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025a86:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90025a8a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025a8e:	0a09      	lsrs	r1, r1, #8
90025a90:	fb0c 5509 	mla	r5, ip, r9, r5
90025a94:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025a98:	fb00 5504 	mla	r5, r0, r4, r5
90025a9c:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90025aa0:	9b07      	ldr	r3, [sp, #28]
90025aa2:	fb02 6000 	mla	r0, r2, r0, r6
90025aa6:	0a2d      	lsrs	r5, r5, #8
90025aa8:	fb02 e20a 	mla	r2, r2, sl, lr
90025aac:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025ab0:	fb09 0001 	mla	r0, r9, r1, r0
90025ab4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025ab8:	fb04 0003 	mla	r0, r4, r3, r0
90025abc:	9b00      	ldr	r3, [sp, #0]
90025abe:	fb04 2408 	mla	r4, r4, r8, r2
90025ac2:	9a04      	ldr	r2, [sp, #16]
90025ac4:	0a00      	lsrs	r0, r0, #8
90025ac6:	fb09 4903 	mla	r9, r9, r3, r4
90025aca:	9b02      	ldr	r3, [sp, #8]
90025acc:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
90025ad0:	ea6f 2929 	mvn.w	r9, r9, asr #8
90025ad4:	4305      	orrs	r5, r0
90025ad6:	fa5f f989 	uxtb.w	r9, r9
90025ada:	fb03 f109 	mul.w	r1, r3, r9
90025ade:	9b03      	ldr	r3, [sp, #12]
90025ae0:	fb03 f309 	mul.w	r3, r3, r9
90025ae4:	fb02 f909 	mul.w	r9, r2, r9
90025ae8:	1c4a      	adds	r2, r1, #1
90025aea:	1c58      	adds	r0, r3, #1
90025aec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025af0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025af4:	0c2a      	lsrs	r2, r5, #16
90025af6:	0a2b      	lsrs	r3, r5, #8
90025af8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90025afc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025b00:	0212      	lsls	r2, r2, #8
90025b02:	00db      	lsls	r3, r3, #3
90025b04:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90025b08:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025b0c:	4313      	orrs	r3, r2
90025b0e:	f109 0201 	add.w	r2, r9, #1
90025b12:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90025b16:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90025b1a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90025b1e:	431d      	orrs	r5, r3
90025b20:	9b01      	ldr	r3, [sp, #4]
90025b22:	801d      	strh	r5, [r3, #0]
90025b24:	b009      	add	sp, #36	@ 0x24
90025b26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025b2a:	2000      	movs	r0, #0
90025b2c:	e701      	b.n	90025932 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90025b2e:	2600      	movs	r6, #0
90025b30:	4630      	mov	r0, r6
90025b32:	e70b      	b.n	9002594c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025b34:	2600      	movs	r6, #0
90025b36:	e709      	b.n	9002594c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025b38:	462e      	mov	r6, r5
90025b3a:	e707      	b.n	9002594c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90025b3c:	2700      	movs	r7, #0
90025b3e:	e71a      	b.n	90025976 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90025b40:	2100      	movs	r1, #0
90025b42:	460f      	mov	r7, r1
90025b44:	e723      	b.n	9002598e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025b46:	4621      	mov	r1, r4
90025b48:	4627      	mov	r7, r4
90025b4a:	e720      	b.n	9002598e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025b4c:	2100      	movs	r1, #0
90025b4e:	e71e      	b.n	9002598e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90025b50:	4629      	mov	r1, r5
90025b52:	e71c      	b.n	9002598e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90025b54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025b58:	b09b      	sub	sp, #108	@ 0x6c
90025b5a:	9218      	str	r2, [sp, #96]	@ 0x60
90025b5c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90025b5e:	9019      	str	r0, [sp, #100]	@ 0x64
90025b60:	9116      	str	r1, [sp, #88]	@ 0x58
90025b62:	6850      	ldr	r0, [r2, #4]
90025b64:	9307      	str	r3, [sp, #28]
90025b66:	6812      	ldr	r2, [r2, #0]
90025b68:	9d26      	ldr	r5, [sp, #152]	@ 0x98
90025b6a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90025b6e:	fb00 1303 	mla	r3, r0, r3, r1
90025b72:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025b76:	930a      	str	r3, [sp, #40]	@ 0x28
90025b78:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025b7a:	681b      	ldr	r3, [r3, #0]
90025b7c:	930f      	str	r3, [sp, #60]	@ 0x3c
90025b7e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025b80:	685e      	ldr	r6, [r3, #4]
90025b82:	3604      	adds	r6, #4
90025b84:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025b86:	2b00      	cmp	r3, #0
90025b88:	dc03      	bgt.n	90025b92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90025b8a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025b8c:	2b00      	cmp	r3, #0
90025b8e:	f340 8373 	ble.w	90026278 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90025b92:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025b94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025b98:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025b9c:	1e48      	subs	r0, r1, #1
90025b9e:	1e57      	subs	r7, r2, #1
90025ba0:	9b07      	ldr	r3, [sp, #28]
90025ba2:	2b00      	cmp	r3, #0
90025ba4:	f340 818f 	ble.w	90025ec6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90025ba8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90025baa:	142b      	asrs	r3, r5, #16
90025bac:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025bb0:	d406      	bmi.n	90025bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025bb2:	4584      	cmp	ip, r0
90025bb4:	da04      	bge.n	90025bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025bb6:	2b00      	cmp	r3, #0
90025bb8:	db02      	blt.n	90025bc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90025bba:	42bb      	cmp	r3, r7
90025bbc:	f2c0 8184 	blt.w	90025ec8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90025bc0:	f11c 0c01 	adds.w	ip, ip, #1
90025bc4:	f100 8172 	bmi.w	90025eac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025bc8:	4561      	cmp	r1, ip
90025bca:	f2c0 816f 	blt.w	90025eac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025bce:	3301      	adds	r3, #1
90025bd0:	f100 816c 	bmi.w	90025eac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025bd4:	429a      	cmp	r2, r3
90025bd6:	f2c0 8169 	blt.w	90025eac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90025bda:	9b07      	ldr	r3, [sp, #28]
90025bdc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90025bde:	9317      	str	r3, [sp, #92]	@ 0x5c
90025be0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025be2:	2b00      	cmp	r3, #0
90025be4:	f340 818e 	ble.w	90025f04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90025be8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90025bea:	ea4f 4c25 	mov.w	ip, r5, asr #16
90025bee:	f3c5 3003 	ubfx	r0, r5, #12, #4
90025bf2:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025bf6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025bf8:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90025bfc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90025bfe:	141b      	asrs	r3, r3, #16
90025c00:	f100 81d1 	bmi.w	90025fa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c04:	f101 38ff 	add.w	r8, r1, #4294967295
90025c08:	4543      	cmp	r3, r8
90025c0a:	f280 81cc 	bge.w	90025fa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c0e:	f1bc 0f00 	cmp.w	ip, #0
90025c12:	f2c0 81c8 	blt.w	90025fa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c16:	f10e 38ff 	add.w	r8, lr, #4294967295
90025c1a:	45c4      	cmp	ip, r8
90025c1c:	f280 81c3 	bge.w	90025fa6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025c20:	b209      	sxth	r1, r1
90025c22:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025c24:	fb0c 3301 	mla	r3, ip, r1, r3
90025c28:	eb04 0803 	add.w	r8, r4, r3
90025c2c:	5ce3      	ldrb	r3, [r4, r3]
90025c2e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90025c32:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90025c36:	2a00      	cmp	r2, #0
90025c38:	f000 81aa 	beq.w	90025f90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90025c3c:	f898 c001 	ldrb.w	ip, [r8, #1]
90025c40:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90025c44:	940b      	str	r4, [sp, #44]	@ 0x2c
90025c46:	0e24      	lsrs	r4, r4, #24
90025c48:	9412      	str	r4, [sp, #72]	@ 0x48
90025c4a:	b178      	cbz	r0, 90025c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025c4c:	eb08 0c01 	add.w	ip, r8, r1
90025c50:	f818 1001 	ldrb.w	r1, [r8, r1]
90025c54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025c58:	9108      	str	r1, [sp, #32]
90025c5a:	0e09      	lsrs	r1, r1, #24
90025c5c:	9110      	str	r1, [sp, #64]	@ 0x40
90025c5e:	f89c 1001 	ldrb.w	r1, [ip, #1]
90025c62:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025c66:	910c      	str	r1, [sp, #48]	@ 0x30
90025c68:	0e09      	lsrs	r1, r1, #24
90025c6a:	9113      	str	r1, [sp, #76]	@ 0x4c
90025c6c:	b292      	uxth	r2, r2
90025c6e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90025c70:	b280      	uxth	r0, r0
90025c72:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025c74:	fb02 f900 	mul.w	r9, r2, r0
90025c78:	0112      	lsls	r2, r2, #4
90025c7a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90025c7e:	eba2 0809 	sub.w	r8, r2, r9
90025c82:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90025c86:	b280      	uxth	r0, r0
90025c88:	fa1f f888 	uxth.w	r8, r8
90025c8c:	1a12      	subs	r2, r2, r0
90025c8e:	fb08 f101 	mul.w	r1, r8, r1
90025c92:	b292      	uxth	r2, r2
90025c94:	fb02 110e 	mla	r1, r2, lr, r1
90025c98:	fb00 1104 	mla	r1, r0, r4, r1
90025c9c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025c9e:	fb09 1104 	mla	r1, r9, r4, r1
90025ca2:	f3c1 2107 	ubfx	r1, r1, #8, #8
90025ca6:	2900      	cmp	r1, #0
90025ca8:	f000 80f5 	beq.w	90025e96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025cac:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90025cb0:	d01b      	beq.n	90025cea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90025cb2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025cb6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025cba:	fb0e fa0a 	mul.w	sl, lr, sl
90025cbe:	fb0e fe03 	mul.w	lr, lr, r3
90025cc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025cc6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025cca:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90025cce:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025cd2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90025cd6:	4453      	add	r3, sl
90025cd8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025cdc:	0a1b      	lsrs	r3, r3, #8
90025cde:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025ce2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025ce6:	ea43 030c 	orr.w	r3, r3, ip
90025cea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025cec:	2cff      	cmp	r4, #255	@ 0xff
90025cee:	d021      	beq.n	90025d34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90025cf0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025cf2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025cf6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025cf8:	fb04 fb0b 	mul.w	fp, r4, fp
90025cfc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025cfe:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025d02:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90025d04:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025d08:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025d0c:	fb04 fa0a 	mul.w	sl, r4, sl
90025d10:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d14:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025d18:	44de      	add	lr, fp
90025d1a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025d1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025d22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025d26:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d2a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025d2e:	ea4e 040a 	orr.w	r4, lr, sl
90025d32:	940b      	str	r4, [sp, #44]	@ 0x2c
90025d34:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025d36:	2cff      	cmp	r4, #255	@ 0xff
90025d38:	d021      	beq.n	90025d7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90025d3a:	9c08      	ldr	r4, [sp, #32]
90025d3c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025d40:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025d42:	fb04 fb0b 	mul.w	fp, r4, fp
90025d46:	9c08      	ldr	r4, [sp, #32]
90025d48:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025d4c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90025d4e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025d52:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025d56:	fb04 fa0a 	mul.w	sl, r4, sl
90025d5a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d5e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025d62:	44de      	add	lr, fp
90025d64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025d68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025d6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025d70:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d74:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025d78:	ea4e 040a 	orr.w	r4, lr, sl
90025d7c:	9408      	str	r4, [sp, #32]
90025d7e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025d80:	2cff      	cmp	r4, #255	@ 0xff
90025d82:	d021      	beq.n	90025dc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90025d84:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025d86:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90025d8a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025d8c:	fb04 fb0b 	mul.w	fp, r4, fp
90025d90:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025d92:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90025d96:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90025d98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025d9c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025da0:	fb04 fa0a 	mul.w	sl, r4, sl
90025da4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025da8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025dac:	44de      	add	lr, fp
90025dae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025db2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025db6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025dba:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025dbe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025dc2:	ea4e 040a 	orr.w	r4, lr, sl
90025dc6:	940c      	str	r4, [sp, #48]	@ 0x30
90025dc8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025dca:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
90025dce:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025dd2:	43c9      	mvns	r1, r1
90025dd4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025dd8:	9c08      	ldr	r4, [sp, #32]
90025dda:	fb08 fc0c 	mul.w	ip, r8, ip
90025dde:	fb02 cc0e 	mla	ip, r2, lr, ip
90025de2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90025de6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90025de8:	fb00 cc0e 	mla	ip, r0, lr, ip
90025dec:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90025df0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90025df2:	fb09 cc0e 	mla	ip, r9, lr, ip
90025df6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90025dfa:	fb08 f80e 	mul.w	r8, r8, lr
90025dfe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025e02:	fa5f fe81 	uxtb.w	lr, r1
90025e06:	fb02 8303 	mla	r3, r2, r3, r8
90025e0a:	9a08      	ldr	r2, [sp, #32]
90025e0c:	f8b7 8000 	ldrh.w	r8, [r7]
90025e10:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025e14:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90025e18:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90025e1a:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90025e1e:	fb00 330a 	mla	r3, r0, sl, r3
90025e22:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90025e26:	ea4f 2228 	mov.w	r2, r8, asr #8
90025e2a:	fb09 3900 	mla	r9, r9, r0, r3
90025e2e:	ea4f 00e8 	mov.w	r0, r8, asr #3
90025e32:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90025e36:	b2c9      	uxtb	r1, r1
90025e38:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025e3c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90025e40:	fb02 f20e 	mul.w	r2, r2, lr
90025e44:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90025e48:	fb00 f00e 	mul.w	r0, r0, lr
90025e4c:	1c53      	adds	r3, r2, #1
90025e4e:	fb01 f10e 	mul.w	r1, r1, lr
90025e52:	ea4c 0c09 	orr.w	ip, ip, r9
90025e56:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90025e5a:	ea4f 431c 	mov.w	r3, ip, lsr #16
90025e5e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025e62:	4a60      	ldr	r2, [pc, #384]	@ (90025fe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90025e64:	b2db      	uxtb	r3, r3
90025e66:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90025e6a:	1c43      	adds	r3, r0, #1
90025e6c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90025e70:	ea4f 231c 	mov.w	r3, ip, lsr #8
90025e74:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90025e78:	00db      	lsls	r3, r3, #3
90025e7a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025e7e:	4313      	orrs	r3, r2
90025e80:	1c4a      	adds	r2, r1, #1
90025e82:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025e86:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90025e8a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90025e8e:	ea4c 0c03 	orr.w	ip, ip, r3
90025e92:	f8a7 c000 	strh.w	ip, [r7]
90025e96:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90025e98:	3702      	adds	r7, #2
90025e9a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90025e9c:	441a      	add	r2, r3
90025e9e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025ea0:	441d      	add	r5, r3
90025ea2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025ea4:	9225      	str	r2, [sp, #148]	@ 0x94
90025ea6:	3b01      	subs	r3, #1
90025ea8:	9317      	str	r3, [sp, #92]	@ 0x5c
90025eaa:	e699      	b.n	90025be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90025eac:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90025eae:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90025eb0:	441c      	add	r4, r3
90025eb2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90025eb4:	441d      	add	r5, r3
90025eb6:	9b07      	ldr	r3, [sp, #28]
90025eb8:	9425      	str	r4, [sp, #148]	@ 0x94
90025eba:	3b01      	subs	r3, #1
90025ebc:	9307      	str	r3, [sp, #28]
90025ebe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025ec0:	3302      	adds	r3, #2
90025ec2:	930a      	str	r3, [sp, #40]	@ 0x28
90025ec4:	e66c      	b.n	90025ba0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90025ec6:	d024      	beq.n	90025f12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90025ec8:	9b07      	ldr	r3, [sp, #28]
90025eca:	9827      	ldr	r0, [sp, #156]	@ 0x9c
90025ecc:	3b01      	subs	r3, #1
90025ece:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90025ed0:	fb00 4003 	mla	r0, r0, r3, r4
90025ed4:	1400      	asrs	r0, r0, #16
90025ed6:	f53f ae80 	bmi.w	90025bda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025eda:	3901      	subs	r1, #1
90025edc:	4288      	cmp	r0, r1
90025ede:	f6bf ae7c 	bge.w	90025bda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025ee2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90025ee4:	fb01 5303 	mla	r3, r1, r3, r5
90025ee8:	141b      	asrs	r3, r3, #16
90025eea:	f53f ae76 	bmi.w	90025bda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025eee:	3a01      	subs	r2, #1
90025ef0:	4293      	cmp	r3, r2
90025ef2:	f6bf ae72 	bge.w	90025bda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90025ef6:	f8dd b01c 	ldr.w	fp, [sp, #28]
90025efa:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90025efe:	f1bb 0f00 	cmp.w	fp, #0
90025f02:	dc71      	bgt.n	90025fe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90025f04:	9b07      	ldr	r3, [sp, #28]
90025f06:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90025f0a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025f0c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90025f10:	930a      	str	r3, [sp, #40]	@ 0x28
90025f12:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025f14:	2b00      	cmp	r3, #0
90025f16:	f340 81af 	ble.w	90026278 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90025f1a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025f1e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025f20:	ee30 0a04 	vadd.f32	s0, s0, s8
90025f24:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025f28:	eef0 6a62 	vmov.f32	s13, s5
90025f2c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025f30:	ee31 1a05 	vadd.f32	s2, s2, s10
90025f34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f38:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
90025f3c:	eef0 6a43 	vmov.f32	s13, s6
90025f40:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025f44:	ee16 5a90 	vmov	r5, s13
90025f48:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025f4c:	ee61 7a27 	vmul.f32	s15, s2, s15
90025f50:	ee77 2a62 	vsub.f32	s5, s14, s5
90025f54:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025f58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025f5c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025f60:	ee12 2a90 	vmov	r2, s5
90025f64:	eef0 2a47 	vmov.f32	s5, s14
90025f68:	fb92 f3f3 	sdiv	r3, r2, r3
90025f6c:	ee13 2a10 	vmov	r2, s6
90025f70:	9327      	str	r3, [sp, #156]	@ 0x9c
90025f72:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025f74:	eeb0 3a67 	vmov.f32	s6, s15
90025f78:	fb92 f3f3 	sdiv	r3, r2, r3
90025f7c:	9328      	str	r3, [sp, #160]	@ 0xa0
90025f7e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90025f80:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90025f82:	3b01      	subs	r3, #1
90025f84:	9316      	str	r3, [sp, #88]	@ 0x58
90025f86:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90025f88:	bf08      	it	eq
90025f8a:	4613      	moveq	r3, r2
90025f8c:	9307      	str	r3, [sp, #28]
90025f8e:	e5f9      	b.n	90025b84 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90025f90:	2800      	cmp	r0, #0
90025f92:	f43f ae6b 	beq.w	90025c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025f96:	f818 1001 	ldrb.w	r1, [r8, r1]
90025f9a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90025f9e:	9108      	str	r1, [sp, #32]
90025fa0:	0e09      	lsrs	r1, r1, #24
90025fa2:	9110      	str	r1, [sp, #64]	@ 0x40
90025fa4:	e662      	b.n	90025c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90025fa6:	f113 0801 	adds.w	r8, r3, #1
90025faa:	f53f af74 	bmi.w	90025e96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025fae:	4541      	cmp	r1, r8
90025fb0:	f6ff af71 	blt.w	90025e96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025fb4:	f11c 0801 	adds.w	r8, ip, #1
90025fb8:	f53f af6d 	bmi.w	90025e96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025fbc:	45c6      	cmp	lr, r8
90025fbe:	f6ff af6a 	blt.w	90025e96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025fc2:	b209      	sxth	r1, r1
90025fc4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90025fc8:	fa0f f38e 	sxth.w	r3, lr
90025fcc:	9100      	str	r1, [sp, #0]
90025fce:	4639      	mov	r1, r7
90025fd0:	9301      	str	r3, [sp, #4]
90025fd2:	4633      	mov	r3, r6
90025fd4:	e9cd 2004 	strd	r2, r0, [sp, #16]
90025fd8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90025fda:	9819      	ldr	r0, [sp, #100]	@ 0x64
90025fdc:	f7ff fc7b 	bl	900258d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90025fe0:	e759      	b.n	90025e96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90025fe2:	bf00      	nop
90025fe4:	fffff800 	.word	0xfffff800
90025fe8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90025fea:	f3c5 3003 	ubfx	r0, r5, #12, #4
90025fee:	9c25      	ldr	r4, [sp, #148]	@ 0x94
90025ff0:	f3c3 3203 	ubfx	r2, r3, #12, #4
90025ff4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90025ff6:	1427      	asrs	r7, r4, #16
90025ff8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90025ffa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025ffe:	142b      	asrs	r3, r5, #16
90026000:	fb01 7303 	mla	r3, r1, r3, r7
90026004:	18e7      	adds	r7, r4, r3
90026006:	5ce3      	ldrb	r3, [r4, r3]
90026008:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002600c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90026010:	2a00      	cmp	r2, #0
90026012:	f000 8127 	beq.w	90026264 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90026016:	f897 e001 	ldrb.w	lr, [r7, #1]
9002601a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002601e:	940d      	str	r4, [sp, #52]	@ 0x34
90026020:	0e24      	lsrs	r4, r4, #24
90026022:	9414      	str	r4, [sp, #80]	@ 0x50
90026024:	b170      	cbz	r0, 90026044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90026026:	eb07 0e01 	add.w	lr, r7, r1
9002602a:	5c79      	ldrb	r1, [r7, r1]
9002602c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90026030:	9109      	str	r1, [sp, #36]	@ 0x24
90026032:	0e09      	lsrs	r1, r1, #24
90026034:	9111      	str	r1, [sp, #68]	@ 0x44
90026036:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002603a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002603e:	910e      	str	r1, [sp, #56]	@ 0x38
90026040:	0e09      	lsrs	r1, r1, #24
90026042:	9115      	str	r1, [sp, #84]	@ 0x54
90026044:	b292      	uxth	r2, r2
90026046:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90026048:	b280      	uxth	r0, r0
9002604a:	fb02 f800 	mul.w	r8, r2, r0
9002604e:	0112      	lsls	r2, r2, #4
90026050:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90026054:	eba2 0e08 	sub.w	lr, r2, r8
90026058:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
9002605c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002605e:	b280      	uxth	r0, r0
90026060:	fa1f fe8e 	uxth.w	lr, lr
90026064:	1a09      	subs	r1, r1, r0
90026066:	fb0e f202 	mul.w	r2, lr, r2
9002606a:	b289      	uxth	r1, r1
9002606c:	fb01 220c 	mla	r2, r1, ip, r2
90026070:	fb00 2204 	mla	r2, r0, r4, r2
90026074:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90026076:	fb08 2204 	mla	r2, r8, r4, r2
9002607a:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002607e:	2a00      	cmp	r2, #0
90026080:	f000 80e5 	beq.w	9002624e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90026084:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90026088:	d019      	beq.n	900260be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
9002608a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002608e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026092:	fb0c fa0a 	mul.w	sl, ip, sl
90026096:	fb0c fc03 	mul.w	ip, ip, r3
9002609a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002609e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900260a2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
900260a6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900260aa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900260ae:	4453      	add	r3, sl
900260b0:	0a3f      	lsrs	r7, r7, #8
900260b2:	0a1b      	lsrs	r3, r3, #8
900260b4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900260b8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900260bc:	433b      	orrs	r3, r7
900260be:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900260c0:	2cff      	cmp	r4, #255	@ 0xff
900260c2:	d020      	beq.n	90026106 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
900260c4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900260c6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900260ca:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900260cc:	4367      	muls	r7, r4
900260ce:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900260d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900260d4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900260d8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900260da:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900260de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900260e2:	fb04 fa0a 	mul.w	sl, r4, sl
900260e6:	44bc      	add	ip, r7
900260e8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900260ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900260f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900260f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900260f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900260fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026100:	ea4c 040a 	orr.w	r4, ip, sl
90026104:	940d      	str	r4, [sp, #52]	@ 0x34
90026106:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90026108:	2cff      	cmp	r4, #255	@ 0xff
9002610a:	d020      	beq.n	9002614e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
9002610c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
9002610e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90026112:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90026114:	4367      	muls	r7, r4
90026116:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90026118:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002611c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90026120:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90026122:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026126:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002612a:	fb04 fa0a 	mul.w	sl, r4, sl
9002612e:	44bc      	add	ip, r7
90026130:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026134:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026138:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002613c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026140:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026144:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026148:	ea4c 040a 	orr.w	r4, ip, sl
9002614c:	9409      	str	r4, [sp, #36]	@ 0x24
9002614e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90026150:	2cff      	cmp	r4, #255	@ 0xff
90026152:	d020      	beq.n	90026196 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90026154:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90026156:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002615a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002615c:	4367      	muls	r7, r4
9002615e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90026160:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026164:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90026168:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002616a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002616e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026172:	fb04 fa0a 	mul.w	sl, r4, sl
90026176:	44bc      	add	ip, r7
90026178:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002617c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026180:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026184:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026188:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002618c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026190:	ea4c 040a 	orr.w	r4, ip, sl
90026194:	940e      	str	r4, [sp, #56]	@ 0x38
90026196:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026198:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002619c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900261a0:	43d2      	mvns	r2, r2
900261a2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900261a6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900261a8:	b2d2      	uxtb	r2, r2
900261aa:	fb0e f707 	mul.w	r7, lr, r7
900261ae:	fb01 770c 	mla	r7, r1, ip, r7
900261b2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900261b6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900261b8:	fb00 770c 	mla	r7, r0, ip, r7
900261bc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900261c0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900261c2:	fb08 770c 	mla	r7, r8, ip, r7
900261c6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900261ca:	fb0e fe0c 	mul.w	lr, lr, ip
900261ce:	0a3f      	lsrs	r7, r7, #8
900261d0:	fb01 e303 	mla	r3, r1, r3, lr
900261d4:	9909      	ldr	r1, [sp, #36]	@ 0x24
900261d6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900261da:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900261de:	990e      	ldr	r1, [sp, #56]	@ 0x38
900261e0:	fb00 330a 	mla	r3, r0, sl, r3
900261e4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900261e8:	fb08 3c0c 	mla	ip, r8, ip, r3
900261ec:	f8b9 3000 	ldrh.w	r3, [r9]
900261f0:	1218      	asrs	r0, r3, #8
900261f2:	10d9      	asrs	r1, r3, #3
900261f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900261f8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900261fc:	00db      	lsls	r3, r3, #3
900261fe:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90026202:	4350      	muls	r0, r2
90026204:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026208:	b2db      	uxtb	r3, r3
9002620a:	4351      	muls	r1, r2
9002620c:	ea47 070c 	orr.w	r7, r7, ip
90026210:	4353      	muls	r3, r2
90026212:	1c42      	adds	r2, r0, #1
90026214:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026218:	0c3a      	lsrs	r2, r7, #16
9002621a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002621e:	4a18      	ldr	r2, [pc, #96]	@ (90026280 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90026220:	b2c0      	uxtb	r0, r0
90026222:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90026226:	1c4a      	adds	r2, r1, #1
90026228:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002622c:	0a3a      	lsrs	r2, r7, #8
9002622e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90026232:	00c9      	lsls	r1, r1, #3
90026234:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026238:	4301      	orrs	r1, r0
9002623a:	1c58      	adds	r0, r3, #1
9002623c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90026240:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90026244:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90026248:	4308      	orrs	r0, r1
9002624a:	f8a9 0000 	strh.w	r0, [r9]
9002624e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026250:	f109 0902 	add.w	r9, r9, #2
90026254:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90026256:	f10b 3bff 	add.w	fp, fp, #4294967295
9002625a:	441a      	add	r2, r3
9002625c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002625e:	9225      	str	r2, [sp, #148]	@ 0x94
90026260:	441d      	add	r5, r3
90026262:	e64c      	b.n	90025efe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90026264:	2800      	cmp	r0, #0
90026266:	f43f aeed 	beq.w	90026044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002626a:	5c79      	ldrb	r1, [r7, r1]
9002626c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90026270:	9109      	str	r1, [sp, #36]	@ 0x24
90026272:	0e09      	lsrs	r1, r1, #24
90026274:	9111      	str	r1, [sp, #68]	@ 0x44
90026276:	e6e5      	b.n	90026044 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90026278:	b01b      	add	sp, #108	@ 0x6c
9002627a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002627e:	bf00      	nop
90026280:	fffff800 	.word	0xfffff800

90026284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90026284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026288:	b085      	sub	sp, #20
9002628a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002628e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90026292:	2800      	cmp	r0, #0
90026294:	9103      	str	r1, [sp, #12]
90026296:	fb00 7406 	mla	r4, r0, r6, r7
9002629a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002629e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
900262a2:	eb02 0544 	add.w	r5, r2, r4, lsl #1
900262a6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
900262aa:	eb03 0904 	add.w	r9, r3, r4
900262ae:	9501      	str	r5, [sp, #4]
900262b0:	f2c0 8150 	blt.w	90026554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900262b4:	4583      	cmp	fp, r0
900262b6:	f340 814d 	ble.w	90026554 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900262ba:	2f00      	cmp	r7, #0
900262bc:	f2c0 8146 	blt.w	9002654c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900262c0:	42be      	cmp	r6, r7
900262c2:	f340 8143 	ble.w	9002654c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900262c6:	f813 c004 	ldrb.w	ip, [r3, r4]
900262ca:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900262ce:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900262d2:	ea4f 02ec 	mov.w	r2, ip, asr #3
900262d6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900262da:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900262de:	4355      	muls	r5, r2
900262e0:	fb0c f203 	mul.w	r2, ip, r3
900262e4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900262e8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900262ec:	441d      	add	r5, r3
900262ee:	f102 0320 	add.w	r3, r2, #32
900262f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900262f6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900262fa:	0a1b      	lsrs	r3, r3, #8
900262fc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026300:	431c      	orrs	r4, r3
90026302:	1c7b      	adds	r3, r7, #1
90026304:	f100 812b 	bmi.w	9002655e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90026308:	429e      	cmp	r6, r3
9002630a:	f340 8128 	ble.w	9002655e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
9002630e:	2900      	cmp	r1, #0
90026310:	f000 8128 	beq.w	90026564 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90026314:	9a01      	ldr	r2, [sp, #4]
90026316:	f899 3001 	ldrb.w	r3, [r9, #1]
9002631a:	8855      	ldrh	r5, [r2, #2]
9002631c:	ea4f 08e3 	mov.w	r8, r3, asr #3
90026320:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90026324:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026328:	fb08 f802 	mul.w	r8, r8, r2
9002632c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90026330:	435d      	muls	r5, r3
90026332:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90026336:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002633a:	44d0      	add	r8, sl
9002633c:	f105 0a20 	add.w	sl, r5, #32
90026340:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90026344:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90026348:	0a2d      	lsrs	r5, r5, #8
9002634a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002634e:	432a      	orrs	r2, r5
90026350:	3001      	adds	r0, #1
90026352:	f100 810d 	bmi.w	90026570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90026356:	4583      	cmp	fp, r0
90026358:	f340 810a 	ble.w	90026570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
9002635c:	f1be 0f00 	cmp.w	lr, #0
90026360:	f000 810b 	beq.w	9002657a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90026364:	2f00      	cmp	r7, #0
90026366:	f2c0 8100 	blt.w	9002656a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002636a:	42be      	cmp	r6, r7
9002636c:	f340 80fd 	ble.w	9002656a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90026370:	9801      	ldr	r0, [sp, #4]
90026372:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90026376:	f819 5006 	ldrb.w	r5, [r9, r6]
9002637a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002637e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90026382:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90026386:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002638a:	fb0a fa00 	mul.w	sl, sl, r0
9002638e:	fb05 f808 	mul.w	r8, r5, r8
90026392:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90026396:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002639a:	4482      	add	sl, r0
9002639c:	f108 0020 	add.w	r0, r8, #32
900263a0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900263a4:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900263a8:	0a00      	lsrs	r0, r0, #8
900263aa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900263ae:	ea4b 0b00 	orr.w	fp, fp, r0
900263b2:	3701      	adds	r7, #1
900263b4:	f100 80e6 	bmi.w	90026584 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900263b8:	42be      	cmp	r6, r7
900263ba:	f340 80e3 	ble.w	90026584 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900263be:	2900      	cmp	r1, #0
900263c0:	f000 80e3 	beq.w	9002658a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
900263c4:	3601      	adds	r6, #1
900263c6:	9801      	ldr	r0, [sp, #4]
900263c8:	f819 7006 	ldrb.w	r7, [r9, r6]
900263cc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900263d0:	ea4f 09e7 	mov.w	r9, r7, asr #3
900263d4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900263d8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900263dc:	fb09 f906 	mul.w	r9, r9, r6
900263e0:	fb07 f800 	mul.w	r8, r7, r0
900263e4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900263e8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900263ec:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900263f0:	44d1      	add	r9, sl
900263f2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900263f6:	f108 0020 	add.w	r0, r8, #32
900263fa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900263fe:	0a00      	lsrs	r0, r0, #8
90026400:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026404:	4330      	orrs	r0, r6
90026406:	b28e      	uxth	r6, r1
90026408:	fa1f f98e 	uxth.w	r9, lr
9002640c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90026410:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90026414:	fb06 f809 	mul.w	r8, r6, r9
90026418:	0136      	lsls	r6, r6, #4
9002641a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002641e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90026422:	9601      	str	r6, [sp, #4]
90026424:	ea4a 0404 	orr.w	r4, sl, r4
90026428:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002642c:	fa1f f689 	uxth.w	r6, r9
90026430:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026434:	fb11 f90e 	smulbb	r9, r1, lr
90026438:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002643c:	9602      	str	r6, [sp, #8]
9002643e:	4626      	mov	r6, r4
90026440:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90026444:	f1ce 0410 	rsb	r4, lr, #16
90026448:	ea4a 0202 	orr.w	r2, sl, r2
9002644c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026450:	1a64      	subs	r4, r4, r1
90026452:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90026456:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002645a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002645e:	434a      	muls	r2, r1
90026460:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90026464:	ea4a 0000 	orr.w	r0, sl, r0
90026468:	9903      	ldr	r1, [sp, #12]
9002646a:	fb04 2406 	mla	r4, r4, r6, r2
9002646e:	9e02      	ldr	r6, [sp, #8]
90026470:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90026474:	fb09 4200 	mla	r2, r9, r0, r4
90026478:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002647c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90026480:	8808      	ldrh	r0, [r1, #0]
90026482:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90026486:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
9002648a:	ea44 0b0b 	orr.w	fp, r4, fp
9002648e:	9c01      	ldr	r4, [sp, #4]
90026490:	b289      	uxth	r1, r1
90026492:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90026496:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002649a:	1ba4      	subs	r4, r4, r6
9002649c:	9e01      	ldr	r6, [sp, #4]
9002649e:	ea4f 525e 	mov.w	r2, lr, lsr #21
900264a2:	eba6 0608 	sub.w	r6, r6, r8
900264a6:	b2a4      	uxth	r4, r4
900264a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900264ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900264b0:	b2b6      	uxth	r6, r6
900264b2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900264b6:	4373      	muls	r3, r6
900264b8:	ea42 0e0e 	orr.w	lr, r2, lr
900264bc:	fb0c 3304 	mla	r3, ip, r4, r3
900264c0:	9c02      	ldr	r4, [sp, #8]
900264c2:	fa1f f28e 	uxth.w	r2, lr
900264c6:	fb04 3505 	mla	r5, r4, r5, r3
900264ca:	10d4      	asrs	r4, r2, #3
900264cc:	fb08 5707 	mla	r7, r8, r7, r5
900264d0:	1215      	asrs	r5, r2, #8
900264d2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900264d6:	00d2      	lsls	r2, r2, #3
900264d8:	f3c7 2707 	ubfx	r7, r7, #8, #8
900264dc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900264e0:	b2d2      	uxtb	r2, r2
900264e2:	434f      	muls	r7, r1
900264e4:	1c7b      	adds	r3, r7, #1
900264e6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900264ea:	1203      	asrs	r3, r0, #8
900264ec:	ea6f 2717 	mvn.w	r7, r7, lsr #8
900264f0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900264f4:	b2ff      	uxtb	r7, r7
900264f6:	fb13 f307 	smulbb	r3, r3, r7
900264fa:	fb05 3501 	mla	r5, r5, r1, r3
900264fe:	10c3      	asrs	r3, r0, #3
90026500:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90026504:	b2ad      	uxth	r5, r5
90026506:	fb13 f307 	smulbb	r3, r3, r7
9002650a:	fb04 3401 	mla	r4, r4, r1, r3
9002650e:	00c3      	lsls	r3, r0, #3
90026510:	b2db      	uxtb	r3, r3
90026512:	b2a4      	uxth	r4, r4
90026514:	fb13 f307 	smulbb	r3, r3, r7
90026518:	fb02 3101 	mla	r1, r2, r1, r3
9002651c:	1c6b      	adds	r3, r5, #1
9002651e:	1c62      	adds	r2, r4, #1
90026520:	b289      	uxth	r1, r1
90026522:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026526:	1c4b      	adds	r3, r1, #1
90026528:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002652c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026530:	9a03      	ldr	r2, [sp, #12]
90026532:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026536:	0964      	lsrs	r4, r4, #5
90026538:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002653c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90026540:	432b      	orrs	r3, r5
90026542:	4323      	orrs	r3, r4
90026544:	8013      	strh	r3, [r2, #0]
90026546:	b005      	add	sp, #20
90026548:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002654c:	f04f 0c00 	mov.w	ip, #0
90026550:	4664      	mov	r4, ip
90026552:	e6d6      	b.n	90026302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90026554:	2300      	movs	r3, #0
90026556:	469c      	mov	ip, r3
90026558:	461a      	mov	r2, r3
9002655a:	461c      	mov	r4, r3
9002655c:	e6f8      	b.n	90026350 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002655e:	2300      	movs	r3, #0
90026560:	461a      	mov	r2, r3
90026562:	e6f5      	b.n	90026350 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90026564:	460b      	mov	r3, r1
90026566:	460a      	mov	r2, r1
90026568:	e6f2      	b.n	90026350 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002656a:	2500      	movs	r5, #0
9002656c:	46ab      	mov	fp, r5
9002656e:	e720      	b.n	900263b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90026570:	2700      	movs	r7, #0
90026572:	463d      	mov	r5, r7
90026574:	4638      	mov	r0, r7
90026576:	46bb      	mov	fp, r7
90026578:	e745      	b.n	90026406 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002657a:	4677      	mov	r7, lr
9002657c:	4675      	mov	r5, lr
9002657e:	4670      	mov	r0, lr
90026580:	46f3      	mov	fp, lr
90026582:	e740      	b.n	90026406 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90026584:	2700      	movs	r7, #0
90026586:	4638      	mov	r0, r7
90026588:	e73d      	b.n	90026406 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002658a:	460f      	mov	r7, r1
9002658c:	4608      	mov	r0, r1
9002658e:	e73a      	b.n	90026406 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90026590 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026594:	b097      	sub	sp, #92	@ 0x5c
90026596:	9214      	str	r2, [sp, #80]	@ 0x50
90026598:	9308      	str	r3, [sp, #32]
9002659a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002659c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
900265a0:	9015      	str	r0, [sp, #84]	@ 0x54
900265a2:	9312      	str	r3, [sp, #72]	@ 0x48
900265a4:	6850      	ldr	r0, [r2, #4]
900265a6:	9111      	str	r1, [sp, #68]	@ 0x44
900265a8:	6812      	ldr	r2, [r2, #0]
900265aa:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
900265ae:	fb00 1303 	mla	r3, r0, r3, r1
900265b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900265b6:	9309      	str	r3, [sp, #36]	@ 0x24
900265b8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900265ba:	681b      	ldr	r3, [r3, #0]
900265bc:	930b      	str	r3, [sp, #44]	@ 0x2c
900265be:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900265c0:	685b      	ldr	r3, [r3, #4]
900265c2:	930c      	str	r3, [sp, #48]	@ 0x30
900265c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
900265c8:	930a      	str	r3, [sp, #40]	@ 0x28
900265ca:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900265cc:	2b00      	cmp	r3, #0
900265ce:	dc03      	bgt.n	900265d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900265d0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900265d2:	2b00      	cmp	r3, #0
900265d4:	f340 83cd 	ble.w	90026d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900265d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900265da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900265de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900265e2:	1e48      	subs	r0, r1, #1
900265e4:	1e55      	subs	r5, r2, #1
900265e6:	9b08      	ldr	r3, [sp, #32]
900265e8:	2b00      	cmp	r3, #0
900265ea:	f340 81a5 	ble.w	90026938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
900265ee:	9e21      	ldr	r6, [sp, #132]	@ 0x84
900265f0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900265f2:	1436      	asrs	r6, r6, #16
900265f4:	ea4f 4323 	mov.w	r3, r3, asr #16
900265f8:	d406      	bmi.n	90026608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900265fa:	4286      	cmp	r6, r0
900265fc:	da04      	bge.n	90026608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900265fe:	2b00      	cmp	r3, #0
90026600:	db02      	blt.n	90026608 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026602:	42ab      	cmp	r3, r5
90026604:	f2c0 8199 	blt.w	9002693a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90026608:	3601      	adds	r6, #1
9002660a:	f100 8186 	bmi.w	9002691a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002660e:	42b1      	cmp	r1, r6
90026610:	f2c0 8183 	blt.w	9002691a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90026614:	3301      	adds	r3, #1
90026616:	f100 8180 	bmi.w	9002691a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002661a:	429a      	cmp	r2, r3
9002661c:	f2c0 817d 	blt.w	9002691a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90026620:	9b08      	ldr	r3, [sp, #32]
90026622:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90026626:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90026628:	9313      	str	r3, [sp, #76]	@ 0x4c
9002662a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
9002662c:	2b00      	cmp	r3, #0
9002662e:	f340 81a6 	ble.w	9002697e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90026632:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026634:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90026636:	1418      	asrs	r0, r3, #16
90026638:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002663a:	142d      	asrs	r5, r5, #16
9002663c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90026640:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026642:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90026646:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026648:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
9002664c:	f100 81fa 	bmi.w	90026a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026650:	f102 3eff 	add.w	lr, r2, #4294967295
90026654:	4575      	cmp	r5, lr
90026656:	f280 81f5 	bge.w	90026a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002665a:	2800      	cmp	r0, #0
9002665c:	f2c0 81f2 	blt.w	90026a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90026660:	f103 3eff 	add.w	lr, r3, #4294967295
90026664:	4570      	cmp	r0, lr
90026666:	f280 81ed 	bge.w	90026a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
9002666a:	b212      	sxth	r2, r2
9002666c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002666e:	fa1f fe81 	uxth.w	lr, r1
90026672:	fb00 5002 	mla	r0, r0, r2, r5
90026676:	ea4f 150e 	mov.w	r5, lr, lsl #4
9002667a:	eb03 0a00 	add.w	sl, r3, r0
9002667e:	f813 9000 	ldrb.w	r9, [r3, r0]
90026682:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90026686:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002668a:	b29b      	uxth	r3, r3
9002668c:	f1bc 0f00 	cmp.w	ip, #0
90026690:	f000 81bb 	beq.w	90026a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90026694:	f81a 4002 	ldrb.w	r4, [sl, r2]
90026698:	eb0a 0b02 	add.w	fp, sl, r2
9002669c:	fa1f fa8c 	uxth.w	sl, ip
900266a0:	940d      	str	r4, [sp, #52]	@ 0x34
900266a2:	fb0a fe0e 	mul.w	lr, sl, lr
900266a6:	f89b 4001 	ldrb.w	r4, [fp, #1]
900266aa:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900266ae:	eba5 050e 	sub.w	r5, r5, lr
900266b2:	940e      	str	r4, [sp, #56]	@ 0x38
900266b4:	fa1f fa8a 	uxth.w	sl, sl
900266b8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900266ba:	b2ad      	uxth	r5, r5
900266bc:	eba3 030a 	sub.w	r3, r3, sl
900266c0:	fb08 f505 	mul.w	r5, r8, r5
900266c4:	b29b      	uxth	r3, r3
900266c6:	fb09 5303 	mla	r3, r9, r3, r5
900266ca:	fb0a 3304 	mla	r3, sl, r4, r3
900266ce:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900266d0:	fb0e 3304 	mla	r3, lr, r4, r3
900266d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900266d8:	2b00      	cmp	r3, #0
900266da:	f000 8111 	beq.w	90026900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900266de:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900266e0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900266e4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900266e8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900266ec:	f000 8192 	beq.w	90026a14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
900266f0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900266f4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900266f8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900266fc:	fb0a fe0e 	mul.w	lr, sl, lr
90026700:	fb09 f000 	mul.w	r0, r9, r0
90026704:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90026708:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
9002670c:	f100 0b20 	add.w	fp, r0, #32
90026710:	44ce      	add	lr, r9
90026712:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90026716:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
9002671a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002671e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026722:	ea4e 0909 	orr.w	r9, lr, r9
90026726:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002672a:	8868      	ldrh	r0, [r5, #2]
9002672c:	d019      	beq.n	90026762 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9002672e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90026732:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026736:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002673a:	fb0a fe0e 	mul.w	lr, sl, lr
9002673e:	fb08 f800 	mul.w	r8, r8, r0
90026742:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90026746:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
9002674a:	f108 0b20 	add.w	fp, r8, #32
9002674e:	4486      	add	lr, r0
90026750:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90026754:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90026758:	0a00      	lsrs	r0, r0, #8
9002675a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002675e:	ea4e 0000 	orr.w	r0, lr, r0
90026762:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90026766:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002676a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002676e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026772:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90026776:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002677a:	ea4e 0909 	orr.w	r9, lr, r9
9002677e:	ea4a 0000 	orr.w	r0, sl, r0
90026782:	f1bc 0f00 	cmp.w	ip, #0
90026786:	f000 8147 	beq.w	90026a18 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
9002678a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
9002678e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90026790:	3a01      	subs	r2, #1
90026792:	2cff      	cmp	r4, #255	@ 0xff
90026794:	ea4f 0242 	mov.w	r2, r2, lsl #1
90026798:	f102 0202 	add.w	r2, r2, #2
9002679c:	eb05 0e02 	add.w	lr, r5, r2
900267a0:	5aaa      	ldrh	r2, [r5, r2]
900267a2:	d018      	beq.n	900267d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
900267a4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
900267a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900267ac:	ea4f 08e4 	mov.w	r8, r4, asr #3
900267b0:	fb04 fa02 	mul.w	sl, r4, r2
900267b4:	fb08 f805 	mul.w	r8, r8, r5
900267b8:	f10a 0520 	add.w	r5, sl, #32
900267bc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
900267c0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900267c4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
900267c8:	4442      	add	r2, r8
900267ca:	0a2d      	lsrs	r5, r5, #8
900267cc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
900267d0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900267d4:	432a      	orrs	r2, r5
900267d6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900267d8:	f8be 5002 	ldrh.w	r5, [lr, #2]
900267dc:	2cff      	cmp	r4, #255	@ 0xff
900267de:	d01a      	beq.n	90026816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
900267e0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
900267e4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900267e8:	ea4f 08e4 	mov.w	r8, r4, asr #3
900267ec:	fb04 fa05 	mul.w	sl, r4, r5
900267f0:	fb08 f80e 	mul.w	r8, r8, lr
900267f4:	f10a 0e20 	add.w	lr, sl, #32
900267f8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900267fc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026800:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90026804:	4445      	add	r5, r8
90026806:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002680a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
9002680e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90026812:	ea45 050e 	orr.w	r5, r5, lr
90026816:	fb1c fe01 	smulbb	lr, ip, r1
9002681a:	f1cc 0810 	rsb	r8, ip, #16
9002681e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026822:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026826:	ea4f 0eee 	mov.w	lr, lr, asr #3
9002682a:	eba8 0801 	sub.w	r8, r8, r1
9002682e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90026832:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026836:	ebce 0141 	rsb	r1, lr, r1, lsl #1
9002683a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002683e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90026842:	ea4a 0202 	orr.w	r2, sl, r2
90026846:	4341      	muls	r1, r0
90026848:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
9002684c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026850:	fb09 1108 	mla	r1, r9, r8, r1
90026854:	ea4b 0505 	orr.w	r5, fp, r5
90026858:	fb0c 1102 	mla	r1, ip, r2, r1
9002685c:	fb0e 1e05 	mla	lr, lr, r5, r1
90026860:	ea4f 525e 	mov.w	r2, lr, lsr #21
90026864:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026868:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002686c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90026870:	ea42 0e0e 	orr.w	lr, r2, lr
90026874:	fa1f f28e 	uxth.w	r2, lr
90026878:	2bff      	cmp	r3, #255	@ 0xff
9002687a:	d103      	bne.n	90026884 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
9002687c:	9912      	ldr	r1, [sp, #72]	@ 0x48
9002687e:	29ff      	cmp	r1, #255	@ 0xff
90026880:	f000 80de 	beq.w	90026a40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90026884:	990a      	ldr	r1, [sp, #40]	@ 0x28
90026886:	1215      	asrs	r5, r2, #8
90026888:	8838      	ldrh	r0, [r7, #0]
9002688a:	434b      	muls	r3, r1
9002688c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026890:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90026892:	f103 0c01 	add.w	ip, r3, #1
90026896:	eb0c 2323 	add.w	r3, ip, r3, asr #8
9002689a:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002689e:	fa5f fc83 	uxtb.w	ip, r3
900268a2:	1203      	asrs	r3, r0, #8
900268a4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900268a8:	fb13 f30c 	smulbb	r3, r3, ip
900268ac:	fb05 3501 	mla	r5, r5, r1, r3
900268b0:	10c3      	asrs	r3, r0, #3
900268b2:	10d1      	asrs	r1, r2, #3
900268b4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900268b8:	00d2      	lsls	r2, r2, #3
900268ba:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900268be:	b2ad      	uxth	r5, r5
900268c0:	fb13 f30c 	smulbb	r3, r3, ip
900268c4:	b2d2      	uxtb	r2, r2
900268c6:	fb01 3104 	mla	r1, r1, r4, r3
900268ca:	00c3      	lsls	r3, r0, #3
900268cc:	b2db      	uxtb	r3, r3
900268ce:	b289      	uxth	r1, r1
900268d0:	fb13 f30c 	smulbb	r3, r3, ip
900268d4:	fb02 3304 	mla	r3, r2, r4, r3
900268d8:	b29a      	uxth	r2, r3
900268da:	1c6b      	adds	r3, r5, #1
900268dc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900268e0:	1c53      	adds	r3, r2, #1
900268e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900268e6:	1c4a      	adds	r2, r1, #1
900268e8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900268ec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900268f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900268f4:	0949      	lsrs	r1, r1, #5
900268f6:	432b      	orrs	r3, r5
900268f8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900268fc:	430b      	orrs	r3, r1
900268fe:	803b      	strh	r3, [r7, #0]
90026900:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026902:	3702      	adds	r7, #2
90026904:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90026906:	4413      	add	r3, r2
90026908:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002690a:	9321      	str	r3, [sp, #132]	@ 0x84
9002690c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002690e:	441a      	add	r2, r3
90026910:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026912:	3b01      	subs	r3, #1
90026914:	9222      	str	r2, [sp, #136]	@ 0x88
90026916:	9313      	str	r3, [sp, #76]	@ 0x4c
90026918:	e687      	b.n	9002662a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9002691a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
9002691c:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
9002691e:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90026920:	4433      	add	r3, r6
90026922:	9321      	str	r3, [sp, #132]	@ 0x84
90026924:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026926:	441c      	add	r4, r3
90026928:	9b08      	ldr	r3, [sp, #32]
9002692a:	3b01      	subs	r3, #1
9002692c:	9422      	str	r4, [sp, #136]	@ 0x88
9002692e:	9308      	str	r3, [sp, #32]
90026930:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026932:	3302      	adds	r3, #2
90026934:	9309      	str	r3, [sp, #36]	@ 0x24
90026936:	e656      	b.n	900265e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90026938:	d028      	beq.n	9002698c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
9002693a:	9b08      	ldr	r3, [sp, #32]
9002693c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002693e:	3b01      	subs	r3, #1
90026940:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90026942:	fb00 5003 	mla	r0, r0, r3, r5
90026946:	1400      	asrs	r0, r0, #16
90026948:	f53f ae6a 	bmi.w	90026620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002694c:	3901      	subs	r1, #1
9002694e:	4288      	cmp	r0, r1
90026950:	f6bf ae66 	bge.w	90026620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026954:	9924      	ldr	r1, [sp, #144]	@ 0x90
90026956:	9822      	ldr	r0, [sp, #136]	@ 0x88
90026958:	fb01 0303 	mla	r3, r1, r3, r0
9002695c:	141b      	asrs	r3, r3, #16
9002695e:	f53f ae5f 	bmi.w	90026620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90026962:	3a01      	subs	r2, #1
90026964:	4293      	cmp	r3, r2
90026966:	f6bf ae5b 	bge.w	90026620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002696a:	9b08      	ldr	r3, [sp, #32]
9002696c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90026970:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90026974:	9313      	str	r3, [sp, #76]	@ 0x4c
90026976:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026978:	2b00      	cmp	r3, #0
9002697a:	f300 8082 	bgt.w	90026a82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
9002697e:	9b08      	ldr	r3, [sp, #32]
90026980:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90026984:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026986:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002698a:	9309      	str	r3, [sp, #36]	@ 0x24
9002698c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9002698e:	2b00      	cmp	r3, #0
90026990:	f340 81ef 	ble.w	90026d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90026994:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026998:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002699a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002699e:	ee70 0aa4 	vadd.f32	s1, s1, s9
900269a2:	eef0 6a62 	vmov.f32	s13, s5
900269a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900269aa:	ee31 1a05 	vadd.f32	s2, s2, s10
900269ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900269b2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
900269b6:	eef0 6a43 	vmov.f32	s13, s6
900269ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900269be:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
900269c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900269c6:	ee61 7a27 	vmul.f32	s15, s2, s15
900269ca:	ee77 2a62 	vsub.f32	s5, s14, s5
900269ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
900269d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900269d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900269da:	ee12 2a90 	vmov	r2, s5
900269de:	eef0 2a47 	vmov.f32	s5, s14
900269e2:	fb92 f3f3 	sdiv	r3, r2, r3
900269e6:	ee13 2a10 	vmov	r2, s6
900269ea:	9323      	str	r3, [sp, #140]	@ 0x8c
900269ec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900269ee:	eeb0 3a67 	vmov.f32	s6, s15
900269f2:	fb92 f3f3 	sdiv	r3, r2, r3
900269f6:	9324      	str	r3, [sp, #144]	@ 0x90
900269f8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
900269fa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
900269fc:	3b01      	subs	r3, #1
900269fe:	9311      	str	r3, [sp, #68]	@ 0x44
90026a00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026a02:	bf08      	it	eq
90026a04:	4613      	moveq	r3, r2
90026a06:	9308      	str	r3, [sp, #32]
90026a08:	e5df      	b.n	900265ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90026a0a:	fb08 f505 	mul.w	r5, r8, r5
90026a0e:	fb09 5303 	mla	r3, r9, r3, r5
90026a12:	e65f      	b.n	900266d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90026a14:	4681      	mov	r9, r0
90026a16:	e686      	b.n	90026726 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90026a18:	f1c1 0210 	rsb	r2, r1, #16
90026a1c:	4341      	muls	r1, r0
90026a1e:	fb09 1902 	mla	r9, r9, r2, r1
90026a22:	ea4f 0949 	mov.w	r9, r9, lsl #1
90026a26:	ea4f 5259 	mov.w	r2, r9, lsr #21
90026a2a:	ea4f 1959 	mov.w	r9, r9, lsr #5
90026a2e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026a32:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026a36:	ea42 0909 	orr.w	r9, r2, r9
90026a3a:	fa1f f289 	uxth.w	r2, r9
90026a3e:	e71b      	b.n	90026878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90026a40:	803a      	strh	r2, [r7, #0]
90026a42:	e75d      	b.n	90026900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a44:	f115 0e01 	adds.w	lr, r5, #1
90026a48:	f53f af5a 	bmi.w	90026900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a4c:	4572      	cmp	r2, lr
90026a4e:	f6ff af57 	blt.w	90026900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a52:	f110 0e01 	adds.w	lr, r0, #1
90026a56:	f53f af53 	bmi.w	90026900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a5a:	4573      	cmp	r3, lr
90026a5c:	f6ff af50 	blt.w	90026900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a60:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90026a62:	b21b      	sxth	r3, r3
90026a64:	b212      	sxth	r2, r2
90026a66:	9502      	str	r5, [sp, #8]
90026a68:	9301      	str	r3, [sp, #4]
90026a6a:	9200      	str	r2, [sp, #0]
90026a6c:	e9cd 0103 	strd	r0, r1, [sp, #12]
90026a70:	e9cd c405 	strd	ip, r4, [sp, #20]
90026a74:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90026a78:	4639      	mov	r1, r7
90026a7a:	9815      	ldr	r0, [sp, #84]	@ 0x54
90026a7c:	f7ff fc02 	bl	90026284 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90026a80:	e73e      	b.n	90026900 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90026a82:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026a84:	f3c3 3203 	ubfx	r2, r3, #12, #4
90026a88:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026a8a:	f3c3 3503 	ubfx	r5, r3, #12, #4
90026a8e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026a90:	fa1f fc82 	uxth.w	ip, r2
90026a94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026a98:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90026a9a:	ea4f 100c 	mov.w	r0, ip, lsl #4
90026a9e:	141f      	asrs	r7, r3, #16
90026aa0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026aa2:	141b      	asrs	r3, r3, #16
90026aa4:	fb01 3707 	mla	r7, r1, r7, r3
90026aa8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90026aaa:	eb03 0a07 	add.w	sl, r3, r7
90026aae:	f813 9007 	ldrb.w	r9, [r3, r7]
90026ab2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90026ab6:	f89a 8001 	ldrb.w	r8, [sl, #1]
90026aba:	b29b      	uxth	r3, r3
90026abc:	2d00      	cmp	r5, #0
90026abe:	f000 813d 	beq.w	90026d3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
90026ac2:	f81a 4001 	ldrb.w	r4, [sl, r1]
90026ac6:	eb0a 0b01 	add.w	fp, sl, r1
90026aca:	fa1f fa85 	uxth.w	sl, r5
90026ace:	940f      	str	r4, [sp, #60]	@ 0x3c
90026ad0:	fb0a fc0c 	mul.w	ip, sl, ip
90026ad4:	f89b 4001 	ldrb.w	r4, [fp, #1]
90026ad8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90026adc:	eba0 000c 	sub.w	r0, r0, ip
90026ae0:	9410      	str	r4, [sp, #64]	@ 0x40
90026ae2:	fa1f fa8a 	uxth.w	sl, sl
90026ae6:	b280      	uxth	r0, r0
90026ae8:	eba3 030a 	sub.w	r3, r3, sl
90026aec:	fb08 f000 	mul.w	r0, r8, r0
90026af0:	b29b      	uxth	r3, r3
90026af2:	fb09 0303 	mla	r3, r9, r3, r0
90026af6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90026af8:	fb0a 3300 	mla	r3, sl, r0, r3
90026afc:	fb0c 3304 	mla	r3, ip, r4, r3
90026b00:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026b04:	2b00      	cmp	r3, #0
90026b06:	f000 810b 	beq.w	90026d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90026b0a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90026b0c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90026b10:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90026b12:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90026b16:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90026b1a:	f000 8114 	beq.w	90026d46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90026b1e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026b22:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90026b26:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026b2a:	fb0a fc0c 	mul.w	ip, sl, ip
90026b2e:	fb09 f707 	mul.w	r7, r9, r7
90026b32:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90026b36:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90026b3a:	f107 0b20 	add.w	fp, r7, #32
90026b3e:	44cc      	add	ip, r9
90026b40:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90026b44:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90026b48:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026b4c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90026b50:	ea4c 0909 	orr.w	r9, ip, r9
90026b54:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90026b58:	8847      	ldrh	r7, [r0, #2]
90026b5a:	d019      	beq.n	90026b90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90026b5c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90026b60:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90026b64:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026b68:	fb0a fc0c 	mul.w	ip, sl, ip
90026b6c:	fb08 f807 	mul.w	r8, r8, r7
90026b70:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90026b74:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90026b78:	f108 0b20 	add.w	fp, r8, #32
90026b7c:	44bc      	add	ip, r7
90026b7e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90026b82:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90026b86:	0a3f      	lsrs	r7, r7, #8
90026b88:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026b8c:	ea4c 0707 	orr.w	r7, ip, r7
90026b90:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90026b94:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90026b98:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90026b9c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90026ba0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90026ba4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026ba8:	ea4c 0909 	orr.w	r9, ip, r9
90026bac:	ea4a 0707 	orr.w	r7, sl, r7
90026bb0:	2d00      	cmp	r5, #0
90026bb2:	f000 80ca 	beq.w	90026d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
90026bb6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90026bba:	3901      	subs	r1, #1
90026bbc:	0049      	lsls	r1, r1, #1
90026bbe:	3102      	adds	r1, #2
90026bc0:	eb00 0c01 	add.w	ip, r0, r1
90026bc4:	5a41      	ldrh	r1, [r0, r1]
90026bc6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90026bc8:	28ff      	cmp	r0, #255	@ 0xff
90026bca:	d019      	beq.n	90026c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90026bcc:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90026bd0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90026bd2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90026bd6:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026bda:	fb04 fa01 	mul.w	sl, r4, r1
90026bde:	fb08 f800 	mul.w	r8, r8, r0
90026be2:	f10a 0020 	add.w	r0, sl, #32
90026be6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90026bea:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026bee:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90026bf2:	4441      	add	r1, r8
90026bf4:	0a00      	lsrs	r0, r0, #8
90026bf6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90026bfa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026bfe:	4301      	orrs	r1, r0
90026c00:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90026c02:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90026c06:	2cff      	cmp	r4, #255	@ 0xff
90026c08:	d01a      	beq.n	90026c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90026c0a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90026c0e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026c12:	ea4f 08e4 	mov.w	r8, r4, asr #3
90026c16:	fb04 fa00 	mul.w	sl, r4, r0
90026c1a:	fb08 f80c 	mul.w	r8, r8, ip
90026c1e:	f10a 0c20 	add.w	ip, sl, #32
90026c22:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90026c26:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026c2a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90026c2e:	4440      	add	r0, r8
90026c30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026c34:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90026c38:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90026c3c:	ea40 000c 	orr.w	r0, r0, ip
90026c40:	fb15 fc02 	smulbb	ip, r5, r2
90026c44:	f1c5 0810 	rsb	r8, r5, #16
90026c48:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90026c4c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90026c50:	ea4f 0cec 	mov.w	ip, ip, asr #3
90026c54:	eba8 0802 	sub.w	r8, r8, r2
90026c58:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90026c5c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026c60:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90026c64:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026c68:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90026c6c:	ea4a 0101 	orr.w	r1, sl, r1
90026c70:	437a      	muls	r2, r7
90026c72:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90026c76:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90026c7a:	fb09 2208 	mla	r2, r9, r8, r2
90026c7e:	ea4b 0000 	orr.w	r0, fp, r0
90026c82:	fb05 2201 	mla	r2, r5, r1, r2
90026c86:	fb0c 2200 	mla	r2, ip, r0, r2
90026c8a:	0d57      	lsrs	r7, r2, #21
90026c8c:	0952      	lsrs	r2, r2, #5
90026c8e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026c92:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026c96:	433a      	orrs	r2, r7
90026c98:	2bff      	cmp	r3, #255	@ 0xff
90026c9a:	b292      	uxth	r2, r2
90026c9c:	d102      	bne.n	90026ca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90026c9e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90026ca0:	29ff      	cmp	r1, #255	@ 0xff
90026ca2:	d063      	beq.n	90026d6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90026ca4:	980a      	ldr	r0, [sp, #40]	@ 0x28
90026ca6:	1215      	asrs	r5, r2, #8
90026ca8:	f8be 1000 	ldrh.w	r1, [lr]
90026cac:	4343      	muls	r3, r0
90026cae:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90026cb0:	10cf      	asrs	r7, r1, #3
90026cb2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90026cb6:	1c58      	adds	r0, r3, #1
90026cb8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90026cbc:	eb00 2323 	add.w	r3, r0, r3, asr #8
90026cc0:	1208      	asrs	r0, r1, #8
90026cc2:	ea6f 2323 	mvn.w	r3, r3, asr #8
90026cc6:	00c9      	lsls	r1, r1, #3
90026cc8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90026ccc:	b2db      	uxtb	r3, r3
90026cce:	b2c9      	uxtb	r1, r1
90026cd0:	fb10 f003 	smulbb	r0, r0, r3
90026cd4:	fb11 f103 	smulbb	r1, r1, r3
90026cd8:	fb05 0504 	mla	r5, r5, r4, r0
90026cdc:	10d0      	asrs	r0, r2, #3
90026cde:	fb17 f703 	smulbb	r7, r7, r3
90026ce2:	00d2      	lsls	r2, r2, #3
90026ce4:	b2ad      	uxth	r5, r5
90026ce6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026cea:	b2d2      	uxtb	r2, r2
90026cec:	fb00 7004 	mla	r0, r0, r4, r7
90026cf0:	1c6b      	adds	r3, r5, #1
90026cf2:	fb02 1204 	mla	r2, r2, r4, r1
90026cf6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90026cfa:	b292      	uxth	r2, r2
90026cfc:	b280      	uxth	r0, r0
90026cfe:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90026d02:	1c57      	adds	r7, r2, #1
90026d04:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90026d08:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90026d0c:	433d      	orrs	r5, r7
90026d0e:	1c47      	adds	r7, r0, #1
90026d10:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90026d14:	097f      	lsrs	r7, r7, #5
90026d16:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90026d1a:	433d      	orrs	r5, r7
90026d1c:	f8ae 5000 	strh.w	r5, [lr]
90026d20:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90026d22:	f10e 0e02 	add.w	lr, lr, #2
90026d26:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90026d28:	4413      	add	r3, r2
90026d2a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90026d2c:	9321      	str	r3, [sp, #132]	@ 0x84
90026d2e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026d30:	441a      	add	r2, r3
90026d32:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90026d34:	3b01      	subs	r3, #1
90026d36:	9222      	str	r2, [sp, #136]	@ 0x88
90026d38:	9313      	str	r3, [sp, #76]	@ 0x4c
90026d3a:	e61c      	b.n	90026976 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90026d3c:	fb08 f000 	mul.w	r0, r8, r0
90026d40:	fb09 0303 	mla	r3, r9, r3, r0
90026d44:	e6dc      	b.n	90026b00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90026d46:	46b9      	mov	r9, r7
90026d48:	e704      	b.n	90026b54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90026d4a:	f1c2 0110 	rsb	r1, r2, #16
90026d4e:	437a      	muls	r2, r7
90026d50:	fb09 2901 	mla	r9, r9, r1, r2
90026d54:	ea4f 0949 	mov.w	r9, r9, lsl #1
90026d58:	ea4f 5059 	mov.w	r0, r9, lsr #21
90026d5c:	ea4f 1259 	mov.w	r2, r9, lsr #5
90026d60:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026d64:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026d68:	4302      	orrs	r2, r0
90026d6a:	e795      	b.n	90026c98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90026d6c:	f8ae 2000 	strh.w	r2, [lr]
90026d70:	e7d6      	b.n	90026d20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90026d72:	b017      	add	sp, #92	@ 0x5c
90026d74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90026d78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90026d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026d7c:	b085      	sub	sp, #20
90026d7e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90026d82:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90026d86:	2800      	cmp	r0, #0
90026d88:	9103      	str	r1, [sp, #12]
90026d8a:	fb00 7406 	mla	r4, r0, r6, r7
90026d8e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90026d92:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90026d96:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90026d9a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
90026d9e:	eb02 0904 	add.w	r9, r2, r4
90026da2:	9501      	str	r5, [sp, #4]
90026da4:	f2c0 8141 	blt.w	9002702a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90026da8:	4583      	cmp	fp, r0
90026daa:	f340 813e 	ble.w	9002702a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90026dae:	2f00      	cmp	r7, #0
90026db0:	f2c0 8137 	blt.w	90027022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90026db4:	42be      	cmp	r6, r7
90026db6:	f340 8134 	ble.w	90027022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90026dba:	f812 c004 	ldrb.w	ip, [r2, r4]
90026dbe:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90026dc2:	f64f 041f 	movw	r4, #63519	@ 0xf81f
90026dc6:	ea4f 02ec 	mov.w	r2, ip, asr #3
90026dca:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
90026dce:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026dd2:	4355      	muls	r5, r2
90026dd4:	fb0c f203 	mul.w	r2, ip, r3
90026dd8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90026ddc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
90026de0:	441d      	add	r5, r3
90026de2:	f102 0320 	add.w	r3, r2, #32
90026de6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026dea:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90026dee:	0a1b      	lsrs	r3, r3, #8
90026df0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026df4:	431c      	orrs	r4, r3
90026df6:	1c7b      	adds	r3, r7, #1
90026df8:	f100 811c 	bmi.w	90027034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90026dfc:	429e      	cmp	r6, r3
90026dfe:	f340 8119 	ble.w	90027034 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90026e02:	2900      	cmp	r1, #0
90026e04:	f000 8119 	beq.w	9002703a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90026e08:	9a01      	ldr	r2, [sp, #4]
90026e0a:	f899 3001 	ldrb.w	r3, [r9, #1]
90026e0e:	8855      	ldrh	r5, [r2, #2]
90026e10:	ea4f 08e3 	mov.w	r8, r3, asr #3
90026e14:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90026e18:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026e1c:	fb08 f802 	mul.w	r8, r8, r2
90026e20:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90026e24:	435d      	muls	r5, r3
90026e26:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90026e2a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90026e2e:	44d0      	add	r8, sl
90026e30:	f105 0a20 	add.w	sl, r5, #32
90026e34:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90026e38:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90026e3c:	0a2d      	lsrs	r5, r5, #8
90026e3e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90026e42:	432a      	orrs	r2, r5
90026e44:	3001      	adds	r0, #1
90026e46:	f100 80fe 	bmi.w	90027046 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90026e4a:	4583      	cmp	fp, r0
90026e4c:	f340 80fb 	ble.w	90027046 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90026e50:	f1be 0f00 	cmp.w	lr, #0
90026e54:	f000 80fc 	beq.w	90027050 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90026e58:	2f00      	cmp	r7, #0
90026e5a:	f2c0 80f1 	blt.w	90027040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90026e5e:	42be      	cmp	r6, r7
90026e60:	f340 80ee 	ble.w	90027040 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90026e64:	9801      	ldr	r0, [sp, #4]
90026e66:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90026e6a:	f819 5006 	ldrb.w	r5, [r9, r6]
90026e6e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90026e72:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90026e76:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90026e7a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90026e7e:	fb0a fa00 	mul.w	sl, sl, r0
90026e82:	fb05 f808 	mul.w	r8, r5, r8
90026e86:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90026e8a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
90026e8e:	4482      	add	sl, r0
90026e90:	f108 0020 	add.w	r0, r8, #32
90026e94:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90026e98:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90026e9c:	0a00      	lsrs	r0, r0, #8
90026e9e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026ea2:	ea4b 0b00 	orr.w	fp, fp, r0
90026ea6:	3701      	adds	r7, #1
90026ea8:	f100 80d7 	bmi.w	9002705a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90026eac:	42be      	cmp	r6, r7
90026eae:	f340 80d4 	ble.w	9002705a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90026eb2:	2900      	cmp	r1, #0
90026eb4:	f000 80d4 	beq.w	90027060 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90026eb8:	3601      	adds	r6, #1
90026eba:	9801      	ldr	r0, [sp, #4]
90026ebc:	f819 7006 	ldrb.w	r7, [r9, r6]
90026ec0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90026ec4:	ea4f 09e7 	mov.w	r9, r7, asr #3
90026ec8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
90026ecc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026ed0:	fb09 f906 	mul.w	r9, r9, r6
90026ed4:	fb07 f800 	mul.w	r8, r7, r0
90026ed8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
90026edc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90026ee0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
90026ee4:	44d1      	add	r9, sl
90026ee6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90026eea:	f108 0020 	add.w	r0, r8, #32
90026eee:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90026ef2:	0a00      	lsrs	r0, r0, #8
90026ef4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026ef8:	4330      	orrs	r0, r6
90026efa:	b28e      	uxth	r6, r1
90026efc:	fa1f f98e 	uxth.w	r9, lr
90026f00:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90026f04:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90026f08:	fb06 f809 	mul.w	r8, r6, r9
90026f0c:	0136      	lsls	r6, r6, #4
90026f0e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026f12:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90026f16:	9601      	str	r6, [sp, #4]
90026f18:	ea4a 0404 	orr.w	r4, sl, r4
90026f1c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90026f20:	fa1f f689 	uxth.w	r6, r9
90026f24:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90026f28:	fb11 f90e 	smulbb	r9, r1, lr
90026f2c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026f30:	9602      	str	r6, [sp, #8]
90026f32:	4626      	mov	r6, r4
90026f34:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90026f38:	f1ce 0410 	rsb	r4, lr, #16
90026f3c:	ea4a 0202 	orr.w	r2, sl, r2
90026f40:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90026f44:	1a64      	subs	r4, r4, r1
90026f46:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90026f4a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90026f4e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90026f52:	434a      	muls	r2, r1
90026f54:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90026f58:	ea4a 0000 	orr.w	r0, sl, r0
90026f5c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90026f60:	fb04 2406 	mla	r4, r4, r6, r2
90026f64:	9903      	ldr	r1, [sp, #12]
90026f66:	fb09 4200 	mla	r2, r9, r0, r4
90026f6a:	ea4f 440b 	mov.w	r4, fp, lsl #16
90026f6e:	9801      	ldr	r0, [sp, #4]
90026f70:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90026f74:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90026f78:	8809      	ldrh	r1, [r1, #0]
90026f7a:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
90026f7e:	ea44 0b0b 	orr.w	fp, r4, fp
90026f82:	9c02      	ldr	r4, [sp, #8]
90026f84:	1b00      	subs	r0, r0, r4
90026f86:	9c01      	ldr	r4, [sp, #4]
90026f88:	fb0e 2e0b 	mla	lr, lr, fp, r2
90026f8c:	eba4 0608 	sub.w	r6, r4, r8
90026f90:	b280      	uxth	r0, r0
90026f92:	ea4f 525e 	mov.w	r2, lr, lsr #21
90026f96:	b2b6      	uxth	r6, r6
90026f98:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90026f9c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026fa0:	4373      	muls	r3, r6
90026fa2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90026fa6:	fb0c 3300 	mla	r3, ip, r0, r3
90026faa:	9802      	ldr	r0, [sp, #8]
90026fac:	ea42 0e0e 	orr.w	lr, r2, lr
90026fb0:	fb00 3505 	mla	r5, r0, r5, r3
90026fb4:	120b      	asrs	r3, r1, #8
90026fb6:	10c8      	asrs	r0, r1, #3
90026fb8:	fb08 5707 	mla	r7, r8, r7, r5
90026fbc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90026fc0:	00c9      	lsls	r1, r1, #3
90026fc2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026fc6:	ea6f 2727 	mvn.w	r7, r7, asr #8
90026fca:	fa1f f28e 	uxth.w	r2, lr
90026fce:	b2c9      	uxtb	r1, r1
90026fd0:	b2ff      	uxtb	r7, r7
90026fd2:	437b      	muls	r3, r7
90026fd4:	4378      	muls	r0, r7
90026fd6:	434f      	muls	r7, r1
90026fd8:	1c59      	adds	r1, r3, #1
90026fda:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90026fde:	1213      	asrs	r3, r2, #8
90026fe0:	f023 0307 	bic.w	r3, r3, #7
90026fe4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90026fe8:	1c41      	adds	r1, r0, #1
90026fea:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90026fee:	10d1      	asrs	r1, r2, #3
90026ff0:	021b      	lsls	r3, r3, #8
90026ff2:	f021 0103 	bic.w	r1, r1, #3
90026ff6:	00d2      	lsls	r2, r2, #3
90026ff8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90026ffc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90027000:	00c9      	lsls	r1, r1, #3
90027002:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027006:	430b      	orrs	r3, r1
90027008:	1c79      	adds	r1, r7, #1
9002700a:	eb01 2717 	add.w	r7, r1, r7, lsr #8
9002700e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90027012:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90027016:	431a      	orrs	r2, r3
90027018:	9b03      	ldr	r3, [sp, #12]
9002701a:	801a      	strh	r2, [r3, #0]
9002701c:	b005      	add	sp, #20
9002701e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027022:	f04f 0c00 	mov.w	ip, #0
90027026:	4664      	mov	r4, ip
90027028:	e6e5      	b.n	90026df6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
9002702a:	2300      	movs	r3, #0
9002702c:	469c      	mov	ip, r3
9002702e:	461a      	mov	r2, r3
90027030:	461c      	mov	r4, r3
90027032:	e707      	b.n	90026e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90027034:	2300      	movs	r3, #0
90027036:	461a      	mov	r2, r3
90027038:	e704      	b.n	90026e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002703a:	460b      	mov	r3, r1
9002703c:	460a      	mov	r2, r1
9002703e:	e701      	b.n	90026e44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90027040:	2500      	movs	r5, #0
90027042:	46ab      	mov	fp, r5
90027044:	e72f      	b.n	90026ea6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90027046:	2700      	movs	r7, #0
90027048:	463d      	mov	r5, r7
9002704a:	4638      	mov	r0, r7
9002704c:	46bb      	mov	fp, r7
9002704e:	e754      	b.n	90026efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90027050:	4677      	mov	r7, lr
90027052:	4675      	mov	r5, lr
90027054:	4670      	mov	r0, lr
90027056:	46f3      	mov	fp, lr
90027058:	e74f      	b.n	90026efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002705a:	2700      	movs	r7, #0
9002705c:	4638      	mov	r0, r7
9002705e:	e74c      	b.n	90026efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90027060:	460f      	mov	r7, r1
90027062:	4608      	mov	r0, r1
90027064:	e749      	b.n	90026efa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90027068 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002706c:	b093      	sub	sp, #76	@ 0x4c
9002706e:	9210      	str	r2, [sp, #64]	@ 0x40
90027070:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90027072:	9011      	str	r0, [sp, #68]	@ 0x44
90027074:	910e      	str	r1, [sp, #56]	@ 0x38
90027076:	6850      	ldr	r0, [r2, #4]
90027078:	9306      	str	r3, [sp, #24]
9002707a:	6812      	ldr	r2, [r2, #0]
9002707c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90027080:	fb00 1303 	mla	r3, r0, r3, r1
90027084:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90027088:	9307      	str	r3, [sp, #28]
9002708a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002708c:	681b      	ldr	r3, [r3, #0]
9002708e:	9308      	str	r3, [sp, #32]
90027090:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027092:	685b      	ldr	r3, [r3, #4]
90027094:	9309      	str	r3, [sp, #36]	@ 0x24
90027096:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027098:	2b00      	cmp	r3, #0
9002709a:	dc03      	bgt.n	900270a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002709c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002709e:	2b00      	cmp	r3, #0
900270a0:	f340 83b6 	ble.w	90027810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900270a4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900270a6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900270aa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900270ae:	1e48      	subs	r0, r1, #1
900270b0:	1e55      	subs	r5, r2, #1
900270b2:	9b06      	ldr	r3, [sp, #24]
900270b4:	2b00      	cmp	r3, #0
900270b6:	f340 8165 	ble.w	90027384 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900270ba:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
900270bc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900270be:	1436      	asrs	r6, r6, #16
900270c0:	ea4f 4323 	mov.w	r3, r3, asr #16
900270c4:	d406      	bmi.n	900270d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900270c6:	4286      	cmp	r6, r0
900270c8:	da04      	bge.n	900270d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900270ca:	2b00      	cmp	r3, #0
900270cc:	db02      	blt.n	900270d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900270ce:	42ab      	cmp	r3, r5
900270d0:	f2c0 8159 	blt.w	90027386 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900270d4:	3601      	adds	r6, #1
900270d6:	f100 8146 	bmi.w	90027366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900270da:	42b1      	cmp	r1, r6
900270dc:	f2c0 8143 	blt.w	90027366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900270e0:	3301      	adds	r3, #1
900270e2:	f100 8140 	bmi.w	90027366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900270e6:	429a      	cmp	r2, r3
900270e8:	f2c0 813d 	blt.w	90027366 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900270ec:	9b06      	ldr	r3, [sp, #24]
900270ee:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900270f2:	9f07      	ldr	r7, [sp, #28]
900270f4:	930f      	str	r3, [sp, #60]	@ 0x3c
900270f6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900270f8:	2b00      	cmp	r3, #0
900270fa:	f340 8166 	ble.w	900273ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900270fe:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90027100:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
90027102:	1418      	asrs	r0, r3, #16
90027104:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027106:	142d      	asrs	r5, r5, #16
90027108:	f3c3 3103 	ubfx	r1, r3, #12, #4
9002710c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002710e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90027112:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027114:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90027118:	f100 81f0 	bmi.w	900274fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002711c:	f102 3eff 	add.w	lr, r2, #4294967295
90027120:	4575      	cmp	r5, lr
90027122:	f280 81eb 	bge.w	900274fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90027126:	2800      	cmp	r0, #0
90027128:	f2c0 81e8 	blt.w	900274fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002712c:	f103 3eff 	add.w	lr, r3, #4294967295
90027130:	4570      	cmp	r0, lr
90027132:	f280 81e3 	bge.w	900274fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90027136:	b212      	sxth	r2, r2
90027138:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002713a:	fa1f fe81 	uxth.w	lr, r1
9002713e:	fb00 5002 	mla	r0, r0, r2, r5
90027142:	ea4f 150e 	mov.w	r5, lr, lsl #4
90027146:	eb03 0a00 	add.w	sl, r3, r0
9002714a:	f813 9000 	ldrb.w	r9, [r3, r0]
9002714e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90027152:	f89a 8001 	ldrb.w	r8, [sl, #1]
90027156:	b29b      	uxth	r3, r3
90027158:	f1bc 0f00 	cmp.w	ip, #0
9002715c:	f000 817b 	beq.w	90027456 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90027160:	f81a 4002 	ldrb.w	r4, [sl, r2]
90027164:	eb0a 0b02 	add.w	fp, sl, r2
90027168:	fa1f fa8c 	uxth.w	sl, ip
9002716c:	940a      	str	r4, [sp, #40]	@ 0x28
9002716e:	fb0a fe0e 	mul.w	lr, sl, lr
90027172:	f89b 4001 	ldrb.w	r4, [fp, #1]
90027176:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002717a:	eba5 050e 	sub.w	r5, r5, lr
9002717e:	940b      	str	r4, [sp, #44]	@ 0x2c
90027180:	fa1f fa8a 	uxth.w	sl, sl
90027184:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90027186:	b2ad      	uxth	r5, r5
90027188:	eba3 030a 	sub.w	r3, r3, sl
9002718c:	fb08 f505 	mul.w	r5, r8, r5
90027190:	b29b      	uxth	r3, r3
90027192:	fb09 5303 	mla	r3, r9, r3, r5
90027196:	fb0a 3304 	mla	r3, sl, r4, r3
9002719a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002719c:	fb0e 3304 	mla	r3, lr, r4, r3
900271a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900271a4:	2b00      	cmp	r3, #0
900271a6:	f000 80d1 	beq.w	9002734c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900271aa:	9c08      	ldr	r4, [sp, #32]
900271ac:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900271b0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900271b4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900271b8:	f000 8152 	beq.w	90027460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900271bc:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900271c0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900271c4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900271c8:	fb0a fe0e 	mul.w	lr, sl, lr
900271cc:	fb09 f000 	mul.w	r0, r9, r0
900271d0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900271d4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900271d8:	f100 0b20 	add.w	fp, r0, #32
900271dc:	44ce      	add	lr, r9
900271de:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900271e2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900271e6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900271ea:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900271ee:	ea4e 0909 	orr.w	r9, lr, r9
900271f2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900271f6:	8868      	ldrh	r0, [r5, #2]
900271f8:	d019      	beq.n	9002722e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900271fa:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900271fe:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90027202:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027206:	fb0a fe0e 	mul.w	lr, sl, lr
9002720a:	fb08 f800 	mul.w	r8, r8, r0
9002720e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90027212:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90027216:	f108 0b20 	add.w	fp, r8, #32
9002721a:	4486      	add	lr, r0
9002721c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90027220:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90027224:	0a00      	lsrs	r0, r0, #8
90027226:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002722a:	ea4e 0000 	orr.w	r0, lr, r0
9002722e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90027232:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90027236:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002723a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002723e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90027242:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027246:	ea4e 0909 	orr.w	r9, lr, r9
9002724a:	ea4a 0000 	orr.w	r0, sl, r0
9002724e:	f1bc 0f00 	cmp.w	ip, #0
90027252:	f000 8107 	beq.w	90027464 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90027256:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
9002725a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002725c:	3a01      	subs	r2, #1
9002725e:	2cff      	cmp	r4, #255	@ 0xff
90027260:	ea4f 0242 	mov.w	r2, r2, lsl #1
90027264:	f102 0202 	add.w	r2, r2, #2
90027268:	eb05 0e02 	add.w	lr, r5, r2
9002726c:	5aaa      	ldrh	r2, [r5, r2]
9002726e:	d018      	beq.n	900272a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90027270:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90027274:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027278:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002727c:	fb04 fa02 	mul.w	sl, r4, r2
90027280:	fb08 f805 	mul.w	r8, r8, r5
90027284:	f10a 0520 	add.w	r5, sl, #32
90027288:	ea06 1258 	and.w	r2, r6, r8, lsr #5
9002728c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90027290:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90027294:	4442      	add	r2, r8
90027296:	0a2d      	lsrs	r5, r5, #8
90027298:	ea06 1252 	and.w	r2, r6, r2, lsr #5
9002729c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900272a0:	432a      	orrs	r2, r5
900272a2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900272a4:	f8be 5002 	ldrh.w	r5, [lr, #2]
900272a8:	2cff      	cmp	r4, #255	@ 0xff
900272aa:	d01a      	beq.n	900272e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
900272ac:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
900272b0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900272b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
900272b8:	fb04 fa05 	mul.w	sl, r4, r5
900272bc:	fb08 f80e 	mul.w	r8, r8, lr
900272c0:	f10a 0e20 	add.w	lr, sl, #32
900272c4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900272c8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900272cc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900272d0:	4445      	add	r5, r8
900272d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900272d6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900272da:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900272de:	ea45 050e 	orr.w	r5, r5, lr
900272e2:	fb1c fe01 	smulbb	lr, ip, r1
900272e6:	f1cc 0810 	rsb	r8, ip, #16
900272ea:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900272ee:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900272f2:	ea4f 0eee 	mov.w	lr, lr, asr #3
900272f6:	eba8 0801 	sub.w	r8, r8, r1
900272fa:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900272fe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027302:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90027306:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
9002730a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002730e:	ea4a 0202 	orr.w	r2, sl, r2
90027312:	4341      	muls	r1, r0
90027314:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90027318:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002731c:	fb09 1108 	mla	r1, r9, r8, r1
90027320:	ea4b 0505 	orr.w	r5, fp, r5
90027324:	fb0c 1102 	mla	r1, ip, r2, r1
90027328:	fb0e 1e05 	mla	lr, lr, r5, r1
9002732c:	ea4f 525e 	mov.w	r2, lr, lsr #21
90027330:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90027334:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027338:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002733c:	ea42 0e0e 	orr.w	lr, r2, lr
90027340:	fa1f f28e 	uxth.w	r2, lr
90027344:	2bff      	cmp	r3, #255	@ 0xff
90027346:	f040 80a1 	bne.w	9002748c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
9002734a:	803a      	strh	r2, [r7, #0]
9002734c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002734e:	3702      	adds	r7, #2
90027350:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90027352:	4413      	add	r3, r2
90027354:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90027356:	931d      	str	r3, [sp, #116]	@ 0x74
90027358:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002735a:	441a      	add	r2, r3
9002735c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002735e:	3b01      	subs	r3, #1
90027360:	921e      	str	r2, [sp, #120]	@ 0x78
90027362:	930f      	str	r3, [sp, #60]	@ 0x3c
90027364:	e6c7      	b.n	900270f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90027366:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027368:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
9002736a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
9002736c:	4433      	add	r3, r6
9002736e:	931d      	str	r3, [sp, #116]	@ 0x74
90027370:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027372:	441c      	add	r4, r3
90027374:	9b06      	ldr	r3, [sp, #24]
90027376:	3b01      	subs	r3, #1
90027378:	941e      	str	r4, [sp, #120]	@ 0x78
9002737a:	9306      	str	r3, [sp, #24]
9002737c:	9b07      	ldr	r3, [sp, #28]
9002737e:	3302      	adds	r3, #2
90027380:	9307      	str	r3, [sp, #28]
90027382:	e696      	b.n	900270b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90027384:	d028      	beq.n	900273d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90027386:	9b06      	ldr	r3, [sp, #24]
90027388:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002738a:	3b01      	subs	r3, #1
9002738c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
9002738e:	fb00 5003 	mla	r0, r0, r3, r5
90027392:	1400      	asrs	r0, r0, #16
90027394:	f53f aeaa 	bmi.w	900270ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90027398:	3901      	subs	r1, #1
9002739a:	4288      	cmp	r0, r1
9002739c:	f6bf aea6 	bge.w	900270ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900273a0:	9920      	ldr	r1, [sp, #128]	@ 0x80
900273a2:	981e      	ldr	r0, [sp, #120]	@ 0x78
900273a4:	fb01 0303 	mla	r3, r1, r3, r0
900273a8:	141b      	asrs	r3, r3, #16
900273aa:	f53f ae9f 	bmi.w	900270ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900273ae:	3a01      	subs	r2, #1
900273b0:	4293      	cmp	r3, r2
900273b2:	f6bf ae9b 	bge.w	900270ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900273b6:	9b06      	ldr	r3, [sp, #24]
900273b8:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900273bc:	f8dd e01c 	ldr.w	lr, [sp, #28]
900273c0:	930f      	str	r3, [sp, #60]	@ 0x3c
900273c2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900273c4:	2b00      	cmp	r3, #0
900273c6:	f300 80b6 	bgt.w	90027536 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
900273ca:	9b06      	ldr	r3, [sp, #24]
900273cc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900273d0:	9b07      	ldr	r3, [sp, #28]
900273d2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900273d6:	9307      	str	r3, [sp, #28]
900273d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900273da:	2b00      	cmp	r3, #0
900273dc:	f340 8218 	ble.w	90027810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900273e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900273e4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900273e6:	ee30 0a04 	vadd.f32	s0, s0, s8
900273ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
900273ee:	eef0 6a62 	vmov.f32	s13, s5
900273f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900273f6:	ee31 1a05 	vadd.f32	s2, s2, s10
900273fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900273fe:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
90027402:	eef0 6a43 	vmov.f32	s13, s6
90027406:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002740a:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
9002740e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027412:	ee61 7a27 	vmul.f32	s15, s2, s15
90027416:	ee77 2a62 	vsub.f32	s5, s14, s5
9002741a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002741e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027422:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027426:	ee12 2a90 	vmov	r2, s5
9002742a:	eef0 2a47 	vmov.f32	s5, s14
9002742e:	fb92 f3f3 	sdiv	r3, r2, r3
90027432:	ee13 2a10 	vmov	r2, s6
90027436:	931f      	str	r3, [sp, #124]	@ 0x7c
90027438:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002743a:	eeb0 3a67 	vmov.f32	s6, s15
9002743e:	fb92 f3f3 	sdiv	r3, r2, r3
90027442:	9320      	str	r3, [sp, #128]	@ 0x80
90027444:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90027446:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027448:	3b01      	subs	r3, #1
9002744a:	930e      	str	r3, [sp, #56]	@ 0x38
9002744c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002744e:	bf08      	it	eq
90027450:	4613      	moveq	r3, r2
90027452:	9306      	str	r3, [sp, #24]
90027454:	e61f      	b.n	90027096 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90027456:	fb08 f505 	mul.w	r5, r8, r5
9002745a:	fb09 5303 	mla	r3, r9, r3, r5
9002745e:	e69f      	b.n	900271a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90027460:	4681      	mov	r9, r0
90027462:	e6c6      	b.n	900271f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90027464:	f1c1 0210 	rsb	r2, r1, #16
90027468:	4341      	muls	r1, r0
9002746a:	fb09 1902 	mla	r9, r9, r2, r1
9002746e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90027472:	ea4f 5259 	mov.w	r2, r9, lsr #21
90027476:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002747a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002747e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90027482:	ea42 0909 	orr.w	r9, r2, r9
90027486:	fa1f f289 	uxth.w	r2, r9
9002748a:	e75b      	b.n	90027344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
9002748c:	f8b7 c000 	ldrh.w	ip, [r7]
90027490:	43db      	mvns	r3, r3
90027492:	ea4f 202c 	mov.w	r0, ip, asr #8
90027496:	fa5f fe83 	uxtb.w	lr, r3
9002749a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002749e:	ea4f 05ec 	mov.w	r5, ip, asr #3
900274a2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
900274a6:	fb00 f00e 	mul.w	r0, r0, lr
900274aa:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900274ae:	b2db      	uxtb	r3, r3
900274b0:	1c41      	adds	r1, r0, #1
900274b2:	fb05 f50e 	mul.w	r5, r5, lr
900274b6:	fb03 f30e 	mul.w	r3, r3, lr
900274ba:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900274be:	1211      	asrs	r1, r2, #8
900274c0:	f021 0107 	bic.w	r1, r1, #7
900274c4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900274c8:	48d3      	ldr	r0, [pc, #844]	@ (90027818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900274ca:	b2c9      	uxtb	r1, r1
900274cc:	ea00 2001 	and.w	r0, r0, r1, lsl #8
900274d0:	1c69      	adds	r1, r5, #1
900274d2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
900274d6:	10d1      	asrs	r1, r2, #3
900274d8:	00d2      	lsls	r2, r2, #3
900274da:	f021 0103 	bic.w	r1, r1, #3
900274de:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900274e2:	00c9      	lsls	r1, r1, #3
900274e4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900274e8:	4301      	orrs	r1, r0
900274ea:	1c58      	adds	r0, r3, #1
900274ec:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900274f0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900274f4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900274f8:	430a      	orrs	r2, r1
900274fa:	e726      	b.n	9002734a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900274fc:	f115 0e01 	adds.w	lr, r5, #1
90027500:	f53f af24 	bmi.w	9002734c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027504:	4572      	cmp	r2, lr
90027506:	f6ff af21 	blt.w	9002734c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002750a:	f110 0e01 	adds.w	lr, r0, #1
9002750e:	f53f af1d 	bmi.w	9002734c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027512:	4573      	cmp	r3, lr
90027514:	f6ff af1a 	blt.w	9002734c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027518:	b21b      	sxth	r3, r3
9002751a:	b212      	sxth	r2, r2
9002751c:	9301      	str	r3, [sp, #4]
9002751e:	9200      	str	r2, [sp, #0]
90027520:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90027524:	e9cd 5002 	strd	r5, r0, [sp, #8]
90027528:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
9002752c:	4639      	mov	r1, r7
9002752e:	9811      	ldr	r0, [sp, #68]	@ 0x44
90027530:	f7ff fc22 	bl	90026d78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90027534:	e70a      	b.n	9002734c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90027536:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027538:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002753c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002753e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90027542:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027544:	fa1f fc82 	uxth.w	ip, r2
90027548:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002754c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
9002754e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90027552:	141f      	asrs	r7, r3, #16
90027554:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027556:	141b      	asrs	r3, r3, #16
90027558:	fb01 3707 	mla	r7, r1, r7, r3
9002755c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002755e:	eb03 0a07 	add.w	sl, r3, r7
90027562:	f813 9007 	ldrb.w	r9, [r3, r7]
90027566:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
9002756a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9002756e:	b29b      	uxth	r3, r3
90027570:	2d00      	cmp	r5, #0
90027572:	f000 80fe 	beq.w	90027772 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90027576:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002757a:	eb0a 0b01 	add.w	fp, sl, r1
9002757e:	fa1f fa85 	uxth.w	sl, r5
90027582:	940c      	str	r4, [sp, #48]	@ 0x30
90027584:	fb0a fc0c 	mul.w	ip, sl, ip
90027588:	f89b 4001 	ldrb.w	r4, [fp, #1]
9002758c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90027590:	eba0 000c 	sub.w	r0, r0, ip
90027594:	940d      	str	r4, [sp, #52]	@ 0x34
90027596:	fa1f fa8a 	uxth.w	sl, sl
9002759a:	b280      	uxth	r0, r0
9002759c:	eba3 030a 	sub.w	r3, r3, sl
900275a0:	fb08 f000 	mul.w	r0, r8, r0
900275a4:	b29b      	uxth	r3, r3
900275a6:	fb09 0303 	mla	r3, r9, r3, r0
900275aa:	980c      	ldr	r0, [sp, #48]	@ 0x30
900275ac:	fb0a 3300 	mla	r3, sl, r0, r3
900275b0:	fb0c 3304 	mla	r3, ip, r4, r3
900275b4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900275b8:	2b00      	cmp	r3, #0
900275ba:	f000 80cc 	beq.w	90027756 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900275be:	9808      	ldr	r0, [sp, #32]
900275c0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900275c4:	9c08      	ldr	r4, [sp, #32]
900275c6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900275ca:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900275ce:	f000 80d5 	beq.w	9002777c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900275d2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
900275d6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900275da:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
900275de:	fb0a fc0c 	mul.w	ip, sl, ip
900275e2:	fb09 f707 	mul.w	r7, r9, r7
900275e6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900275ea:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
900275ee:	f107 0b20 	add.w	fp, r7, #32
900275f2:	44cc      	add	ip, r9
900275f4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900275f8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900275fc:	ea4f 2919 	mov.w	r9, r9, lsr #8
90027600:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90027604:	ea4c 0909 	orr.w	r9, ip, r9
90027608:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
9002760c:	8847      	ldrh	r7, [r0, #2]
9002760e:	d019      	beq.n	90027644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90027610:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90027614:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90027618:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002761c:	fb0a fc0c 	mul.w	ip, sl, ip
90027620:	fb08 f807 	mul.w	r8, r8, r7
90027624:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90027628:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002762c:	f108 0b20 	add.w	fp, r8, #32
90027630:	44bc      	add	ip, r7
90027632:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90027636:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002763a:	0a3f      	lsrs	r7, r7, #8
9002763c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027640:	ea4c 0707 	orr.w	r7, ip, r7
90027644:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90027648:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
9002764c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90027650:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90027654:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90027658:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002765c:	ea4c 0909 	orr.w	r9, ip, r9
90027660:	ea4a 0707 	orr.w	r7, sl, r7
90027664:	2d00      	cmp	r5, #0
90027666:	f000 808b 	beq.w	90027780 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
9002766a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
9002766e:	3901      	subs	r1, #1
90027670:	0049      	lsls	r1, r1, #1
90027672:	3102      	adds	r1, #2
90027674:	eb00 0c01 	add.w	ip, r0, r1
90027678:	5a41      	ldrh	r1, [r0, r1]
9002767a:	980c      	ldr	r0, [sp, #48]	@ 0x30
9002767c:	28ff      	cmp	r0, #255	@ 0xff
9002767e:	d019      	beq.n	900276b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90027680:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90027684:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90027686:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002768a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002768e:	fb04 fa01 	mul.w	sl, r4, r1
90027692:	fb08 f800 	mul.w	r8, r8, r0
90027696:	f10a 0020 	add.w	r0, sl, #32
9002769a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
9002769e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900276a2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900276a6:	4441      	add	r1, r8
900276a8:	0a00      	lsrs	r0, r0, #8
900276aa:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900276ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900276b2:	4301      	orrs	r1, r0
900276b4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900276b6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900276ba:	2cff      	cmp	r4, #255	@ 0xff
900276bc:	d01a      	beq.n	900276f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
900276be:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900276c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900276c6:	ea4f 08e4 	mov.w	r8, r4, asr #3
900276ca:	fb04 fa00 	mul.w	sl, r4, r0
900276ce:	fb08 f80c 	mul.w	r8, r8, ip
900276d2:	f10a 0c20 	add.w	ip, sl, #32
900276d6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900276da:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900276de:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900276e2:	4440      	add	r0, r8
900276e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900276e8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900276ec:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900276f0:	ea40 000c 	orr.w	r0, r0, ip
900276f4:	fb15 fc02 	smulbb	ip, r5, r2
900276f8:	f1c5 0810 	rsb	r8, r5, #16
900276fc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90027700:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90027704:	ea4f 0cec 	mov.w	ip, ip, asr #3
90027708:	eba8 0802 	sub.w	r8, r8, r2
9002770c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90027710:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027714:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90027718:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002771c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90027720:	ea4a 0101 	orr.w	r1, sl, r1
90027724:	437a      	muls	r2, r7
90027726:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002772a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002772e:	fb09 2208 	mla	r2, r9, r8, r2
90027732:	ea4b 0000 	orr.w	r0, fp, r0
90027736:	fb05 2201 	mla	r2, r5, r1, r2
9002773a:	fb0c 2200 	mla	r2, ip, r0, r2
9002773e:	0d57      	lsrs	r7, r2, #21
90027740:	0952      	lsrs	r2, r2, #5
90027742:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90027746:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002774a:	433a      	orrs	r2, r7
9002774c:	2bff      	cmp	r3, #255	@ 0xff
9002774e:	b292      	uxth	r2, r2
90027750:	d127      	bne.n	900277a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90027752:	f8ae 2000 	strh.w	r2, [lr]
90027756:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027758:	f10e 0e02 	add.w	lr, lr, #2
9002775c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
9002775e:	4413      	add	r3, r2
90027760:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90027762:	931d      	str	r3, [sp, #116]	@ 0x74
90027764:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027766:	441a      	add	r2, r3
90027768:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002776a:	3b01      	subs	r3, #1
9002776c:	921e      	str	r2, [sp, #120]	@ 0x78
9002776e:	930f      	str	r3, [sp, #60]	@ 0x3c
90027770:	e627      	b.n	900273c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90027772:	fb08 f000 	mul.w	r0, r8, r0
90027776:	fb09 0303 	mla	r3, r9, r3, r0
9002777a:	e71b      	b.n	900275b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
9002777c:	46b9      	mov	r9, r7
9002777e:	e743      	b.n	90027608 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90027780:	f1c2 0110 	rsb	r1, r2, #16
90027784:	437a      	muls	r2, r7
90027786:	fb09 2901 	mla	r9, r9, r1, r2
9002778a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002778e:	ea4f 5059 	mov.w	r0, r9, lsr #21
90027792:	ea4f 1259 	mov.w	r2, r9, lsr #5
90027796:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002779a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002779e:	4302      	orrs	r2, r0
900277a0:	e7d4      	b.n	9002774c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
900277a2:	f8be 7000 	ldrh.w	r7, [lr]
900277a6:	43db      	mvns	r3, r3
900277a8:	4c1b      	ldr	r4, [pc, #108]	@ (90027818 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900277aa:	1238      	asrs	r0, r7, #8
900277ac:	fa5f fc83 	uxtb.w	ip, r3
900277b0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900277b4:	10fd      	asrs	r5, r7, #3
900277b6:	00fb      	lsls	r3, r7, #3
900277b8:	fb00 f00c 	mul.w	r0, r0, ip
900277bc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
900277c0:	b2db      	uxtb	r3, r3
900277c2:	fb05 f10c 	mul.w	r1, r5, ip
900277c6:	1c45      	adds	r5, r0, #1
900277c8:	fb03 f30c 	mul.w	r3, r3, ip
900277cc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900277d0:	1215      	asrs	r5, r2, #8
900277d2:	f025 0507 	bic.w	r5, r5, #7
900277d6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
900277da:	1c4d      	adds	r5, r1, #1
900277dc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900277e0:	10d1      	asrs	r1, r2, #3
900277e2:	b2c0      	uxtb	r0, r0
900277e4:	f021 0103 	bic.w	r1, r1, #3
900277e8:	00d2      	lsls	r2, r2, #3
900277ea:	ea04 2000 	and.w	r0, r4, r0, lsl #8
900277ee:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900277f2:	00c9      	lsls	r1, r1, #3
900277f4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900277f8:	4308      	orrs	r0, r1
900277fa:	1c59      	adds	r1, r3, #1
900277fc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90027800:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90027804:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90027808:	4318      	orrs	r0, r3
9002780a:	f8ae 0000 	strh.w	r0, [lr]
9002780e:	e7a2      	b.n	90027756 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90027810:	b013      	add	sp, #76	@ 0x4c
90027812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027816:	bf00      	nop
90027818:	fffff800 	.word	0xfffff800

9002781c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
9002781c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90027820:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90027824:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90027828:	fb05 4c03 	mla	ip, r5, r3, r4
9002782c:	2d00      	cmp	r5, #0
9002782e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90027832:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90027836:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
9002783a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
9002783e:	8808      	ldrh	r0, [r1, #0]
90027840:	f2c0 80a7 	blt.w	90027992 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90027844:	45aa      	cmp	sl, r5
90027846:	f340 80a4 	ble.w	90027992 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002784a:	2c00      	cmp	r4, #0
9002784c:	f2c0 809f 	blt.w	9002798e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90027850:	42a3      	cmp	r3, r4
90027852:	f340 809c 	ble.w	9002798e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90027856:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
9002785a:	1c62      	adds	r2, r4, #1
9002785c:	f100 809c 	bmi.w	90027998 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90027860:	4293      	cmp	r3, r2
90027862:	f340 8099 	ble.w	90027998 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90027866:	f1b9 0f00 	cmp.w	r9, #0
9002786a:	f000 8095 	beq.w	90027998 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002786e:	f8be c002 	ldrh.w	ip, [lr, #2]
90027872:	3501      	adds	r5, #1
90027874:	f100 8094 	bmi.w	900279a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90027878:	45aa      	cmp	sl, r5
9002787a:	f340 8091 	ble.w	900279a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002787e:	2f00      	cmp	r7, #0
90027880:	f000 808e 	beq.w	900279a0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90027884:	2c00      	cmp	r4, #0
90027886:	f2c0 8089 	blt.w	9002799c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
9002788a:	42a3      	cmp	r3, r4
9002788c:	f340 8086 	ble.w	9002799c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90027890:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90027894:	3401      	adds	r4, #1
90027896:	f100 8086 	bmi.w	900279a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002789a:	42a3      	cmp	r3, r4
9002789c:	f340 8083 	ble.w	900279a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900278a0:	f1b9 0f00 	cmp.w	r9, #0
900278a4:	d07f      	beq.n	900279a6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900278a6:	3301      	adds	r3, #1
900278a8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
900278ac:	ea4f 4408 	mov.w	r4, r8, lsl #16
900278b0:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
900278b4:	fb19 fe07 	smulbb	lr, r9, r7
900278b8:	f1c7 0210 	rsb	r2, r7, #16
900278bc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900278c0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
900278c4:	eba2 0209 	sub.w	r2, r2, r9
900278c8:	ea44 0808 	orr.w	r8, r4, r8
900278cc:	ea4f 440c 	mov.w	r4, ip, lsl #16
900278d0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900278d4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
900278d8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
900278dc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
900278e0:	ea44 0c0c 	orr.w	ip, r4, ip
900278e4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900278e8:	fb04 f40c 	mul.w	r4, r4, ip
900278ec:	fb02 4808 	mla	r8, r2, r8, r4
900278f0:	041a      	lsls	r2, r3, #16
900278f2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900278f6:	b2b4      	uxth	r4, r6
900278f8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900278fc:	43f6      	mvns	r6, r6
900278fe:	4313      	orrs	r3, r2
90027900:	042a      	lsls	r2, r5, #16
90027902:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90027906:	b2f6      	uxtb	r6, r6
90027908:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002790c:	fb0e 8303 	mla	r3, lr, r3, r8
90027910:	432a      	orrs	r2, r5
90027912:	fb07 3202 	mla	r2, r7, r2, r3
90027916:	10c7      	asrs	r7, r0, #3
90027918:	0d53      	lsrs	r3, r2, #21
9002791a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9002791e:	0952      	lsrs	r2, r2, #5
90027920:	fb17 f706 	smulbb	r7, r7, r6
90027924:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027928:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
9002792c:	431a      	orrs	r2, r3
9002792e:	b293      	uxth	r3, r2
90027930:	1202      	asrs	r2, r0, #8
90027932:	121d      	asrs	r5, r3, #8
90027934:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90027938:	00c0      	lsls	r0, r0, #3
9002793a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9002793e:	fb12 f206 	smulbb	r2, r2, r6
90027942:	b2c0      	uxtb	r0, r0
90027944:	fb05 2504 	mla	r5, r5, r4, r2
90027948:	10da      	asrs	r2, r3, #3
9002794a:	fb10 f006 	smulbb	r0, r0, r6
9002794e:	00db      	lsls	r3, r3, #3
90027950:	b2ad      	uxth	r5, r5
90027952:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027956:	b2db      	uxtb	r3, r3
90027958:	fb02 7204 	mla	r2, r2, r4, r7
9002795c:	fb03 0004 	mla	r0, r3, r4, r0
90027960:	1c6b      	adds	r3, r5, #1
90027962:	b292      	uxth	r2, r2
90027964:	b280      	uxth	r0, r0
90027966:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002796a:	1c43      	adds	r3, r0, #1
9002796c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90027970:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90027974:	1c50      	adds	r0, r2, #1
90027976:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9002797a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002797e:	0952      	lsrs	r2, r2, #5
90027980:	432b      	orrs	r3, r5
90027982:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027986:	4313      	orrs	r3, r2
90027988:	800b      	strh	r3, [r1, #0]
9002798a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002798e:	4680      	mov	r8, r0
90027990:	e763      	b.n	9002785a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90027992:	4684      	mov	ip, r0
90027994:	4680      	mov	r8, r0
90027996:	e76c      	b.n	90027872 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90027998:	4684      	mov	ip, r0
9002799a:	e76a      	b.n	90027872 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
9002799c:	4605      	mov	r5, r0
9002799e:	e779      	b.n	90027894 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
900279a0:	4603      	mov	r3, r0
900279a2:	4605      	mov	r5, r0
900279a4:	e782      	b.n	900278ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
900279a6:	4603      	mov	r3, r0
900279a8:	e780      	b.n	900278ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

900279aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900279aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900279ae:	b093      	sub	sp, #76	@ 0x4c
900279b0:	461d      	mov	r5, r3
900279b2:	9210      	str	r2, [sp, #64]	@ 0x40
900279b4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
900279b6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
900279ba:	910a      	str	r1, [sp, #40]	@ 0x28
900279bc:	920b      	str	r2, [sp, #44]	@ 0x2c
900279be:	6859      	ldr	r1, [r3, #4]
900279c0:	681b      	ldr	r3, [r3, #0]
900279c2:	9011      	str	r0, [sp, #68]	@ 0x44
900279c4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
900279c8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
900279cc:	fb01 2707 	mla	r7, r1, r7, r2
900279d0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
900279d4:	9307      	str	r3, [sp, #28]
900279d6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900279d8:	681b      	ldr	r3, [r3, #0]
900279da:	9309      	str	r3, [sp, #36]	@ 0x24
900279dc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900279de:	43db      	mvns	r3, r3
900279e0:	b2db      	uxtb	r3, r3
900279e2:	9308      	str	r3, [sp, #32]
900279e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900279e6:	2b00      	cmp	r3, #0
900279e8:	dc03      	bgt.n	900279f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900279ea:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900279ec:	2b00      	cmp	r3, #0
900279ee:	f340 8205 	ble.w	90027dfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900279f2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900279f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900279f8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900279fc:	1e48      	subs	r0, r1, #1
900279fe:	f102 3cff 	add.w	ip, r2, #4294967295
90027a02:	2d00      	cmp	r5, #0
90027a04:	f340 80da 	ble.w	90027bbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90027a08:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027a0c:	ea4f 4326 	mov.w	r3, r6, asr #16
90027a10:	d406      	bmi.n	90027a20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027a12:	4586      	cmp	lr, r0
90027a14:	da04      	bge.n	90027a20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027a16:	2b00      	cmp	r3, #0
90027a18:	db02      	blt.n	90027a20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90027a1a:	4563      	cmp	r3, ip
90027a1c:	f2c0 80cf 	blt.w	90027bbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90027a20:	f11e 0e01 	adds.w	lr, lr, #1
90027a24:	f100 80c1 	bmi.w	90027baa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027a28:	4571      	cmp	r1, lr
90027a2a:	f2c0 80be 	blt.w	90027baa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027a2e:	3301      	adds	r3, #1
90027a30:	f100 80bb 	bmi.w	90027baa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027a34:	429a      	cmp	r2, r3
90027a36:	f2c0 80b8 	blt.w	90027baa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90027a3a:	46a9      	mov	r9, r5
90027a3c:	f8dd 801c 	ldr.w	r8, [sp, #28]
90027a40:	f1b9 0f00 	cmp.w	r9, #0
90027a44:	f340 80d8 	ble.w	90027bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90027a48:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027a4a:	1421      	asrs	r1, r4, #16
90027a4c:	ea4f 4026 	mov.w	r0, r6, asr #16
90027a50:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027a54:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90027a58:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90027a5c:	f100 8112 	bmi.w	90027c84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027a60:	f10e 3aff 	add.w	sl, lr, #4294967295
90027a64:	4551      	cmp	r1, sl
90027a66:	f280 810d 	bge.w	90027c84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027a6a:	2800      	cmp	r0, #0
90027a6c:	f2c0 810a 	blt.w	90027c84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027a70:	f103 3aff 	add.w	sl, r3, #4294967295
90027a74:	4550      	cmp	r0, sl
90027a76:	f280 8105 	bge.w	90027c84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90027a7a:	fa0f f38e 	sxth.w	r3, lr
90027a7e:	fb00 1103 	mla	r1, r0, r3, r1
90027a82:	9809      	ldr	r0, [sp, #36]	@ 0x24
90027a84:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90027a88:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90027a8c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90027a90:	f1bc 0f00 	cmp.w	ip, #0
90027a94:	d007      	beq.n	90027aa6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90027a96:	005b      	lsls	r3, r3, #1
90027a98:	eb0a 0003 	add.w	r0, sl, r3
90027a9c:	f83a 3003 	ldrh.w	r3, [sl, r3]
90027aa0:	930c      	str	r3, [sp, #48]	@ 0x30
90027aa2:	8843      	ldrh	r3, [r0, #2]
90027aa4:	930d      	str	r3, [sp, #52]	@ 0x34
90027aa6:	ea4f 400e 	mov.w	r0, lr, lsl #16
90027aaa:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90027aae:	fb12 f30c 	smulbb	r3, r2, ip
90027ab2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90027ab6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90027aba:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90027abe:	10db      	asrs	r3, r3, #3
90027ac0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90027ac4:	ea40 000e 	orr.w	r0, r0, lr
90027ac8:	f1cc 0e10 	rsb	lr, ip, #16
90027acc:	ea4a 0101 	orr.w	r1, sl, r1
90027ad0:	9f08      	ldr	r7, [sp, #32]
90027ad2:	ebae 0e02 	sub.w	lr, lr, r2
90027ad6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90027ada:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90027ade:	4351      	muls	r1, r2
90027ae0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90027ae2:	fb0e 1e00 	mla	lr, lr, r0, r1
90027ae6:	990c      	ldr	r1, [sp, #48]	@ 0x30
90027ae8:	0410      	lsls	r0, r2, #16
90027aea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027aee:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90027af2:	4310      	orrs	r0, r2
90027af4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90027af6:	0412      	lsls	r2, r2, #16
90027af8:	fb03 e000 	mla	r0, r3, r0, lr
90027afc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
90027b00:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90027b04:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027b08:	ea42 020e 	orr.w	r2, r2, lr
90027b0c:	fb03 0302 	mla	r3, r3, r2, r0
90027b10:	f8b8 0000 	ldrh.w	r0, [r8]
90027b14:	0d5a      	lsrs	r2, r3, #21
90027b16:	095b      	lsrs	r3, r3, #5
90027b18:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027b1c:	1201      	asrs	r1, r0, #8
90027b1e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90027b22:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90027b26:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027b2a:	00c0      	lsls	r0, r0, #3
90027b2c:	4313      	orrs	r3, r2
90027b2e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90027b32:	fb11 f107 	smulbb	r1, r1, r7
90027b36:	b2c0      	uxtb	r0, r0
90027b38:	b29b      	uxth	r3, r3
90027b3a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90027b3e:	fb10 f007 	smulbb	r0, r0, r7
90027b42:	fb1e fe07 	smulbb	lr, lr, r7
90027b46:	ea4f 2c23 	mov.w	ip, r3, asr #8
90027b4a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90027b4e:	fb0c 1c02 	mla	ip, ip, r2, r1
90027b52:	10d9      	asrs	r1, r3, #3
90027b54:	00db      	lsls	r3, r3, #3
90027b56:	fa1f fc8c 	uxth.w	ip, ip
90027b5a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027b5e:	b2db      	uxtb	r3, r3
90027b60:	fb01 e102 	mla	r1, r1, r2, lr
90027b64:	fb03 0302 	mla	r3, r3, r2, r0
90027b68:	b289      	uxth	r1, r1
90027b6a:	b29a      	uxth	r2, r3
90027b6c:	f10c 0301 	add.w	r3, ip, #1
90027b70:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90027b74:	1c53      	adds	r3, r2, #1
90027b76:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90027b7a:	1c4a      	adds	r2, r1, #1
90027b7c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90027b80:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90027b84:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90027b88:	0949      	lsrs	r1, r1, #5
90027b8a:	ea43 030c 	orr.w	r3, r3, ip
90027b8e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027b92:	430b      	orrs	r3, r1
90027b94:	f8a8 3000 	strh.w	r3, [r8]
90027b98:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027b9a:	f108 0802 	add.w	r8, r8, #2
90027b9e:	f109 39ff 	add.w	r9, r9, #4294967295
90027ba2:	441c      	add	r4, r3
90027ba4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027ba6:	441e      	add	r6, r3
90027ba8:	e74a      	b.n	90027a40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90027baa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027bac:	3d01      	subs	r5, #1
90027bae:	441c      	add	r4, r3
90027bb0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027bb2:	441e      	add	r6, r3
90027bb4:	9b07      	ldr	r3, [sp, #28]
90027bb6:	3302      	adds	r3, #2
90027bb8:	9307      	str	r3, [sp, #28]
90027bba:	e722      	b.n	90027a02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90027bbc:	d022      	beq.n	90027c04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90027bbe:	1e6b      	subs	r3, r5, #1
90027bc0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90027bc2:	fb00 4003 	mla	r0, r0, r3, r4
90027bc6:	1400      	asrs	r0, r0, #16
90027bc8:	f53f af37 	bmi.w	90027a3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90027bcc:	3901      	subs	r1, #1
90027bce:	4288      	cmp	r0, r1
90027bd0:	f6bf af33 	bge.w	90027a3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90027bd4:	9920      	ldr	r1, [sp, #128]	@ 0x80
90027bd6:	fb01 6303 	mla	r3, r1, r3, r6
90027bda:	141b      	asrs	r3, r3, #16
90027bdc:	f53f af2d 	bmi.w	90027a3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90027be0:	3a01      	subs	r2, #1
90027be2:	4293      	cmp	r3, r2
90027be4:	f6bf af29 	bge.w	90027a3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90027be8:	46a8      	mov	r8, r5
90027bea:	f8dd 901c 	ldr.w	r9, [sp, #28]
90027bee:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
90027bf2:	f1b8 0f00 	cmp.w	r8, #0
90027bf6:	dc60      	bgt.n	90027cba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90027bf8:	9b07      	ldr	r3, [sp, #28]
90027bfa:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027bfe:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90027c02:	9307      	str	r3, [sp, #28]
90027c04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027c06:	2b00      	cmp	r3, #0
90027c08:	f340 80f8 	ble.w	90027dfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90027c0c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027c10:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027c12:	ee30 0a04 	vadd.f32	s0, s0, s8
90027c16:	ee70 0aa4 	vadd.f32	s1, s1, s9
90027c1a:	eef0 6a62 	vmov.f32	s13, s5
90027c1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90027c22:	ee31 1a05 	vadd.f32	s2, s2, s10
90027c26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027c2a:	ee16 4a90 	vmov	r4, s13
90027c2e:	eef0 6a43 	vmov.f32	s13, s6
90027c32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90027c36:	ee16 6a90 	vmov	r6, s13
90027c3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90027c3e:	ee61 7a27 	vmul.f32	s15, s2, s15
90027c42:	ee77 2a62 	vsub.f32	s5, s14, s5
90027c46:	ee37 3ac3 	vsub.f32	s6, s15, s6
90027c4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90027c4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90027c52:	ee12 2a90 	vmov	r2, s5
90027c56:	eef0 2a47 	vmov.f32	s5, s14
90027c5a:	fb92 f3f3 	sdiv	r3, r2, r3
90027c5e:	ee13 2a10 	vmov	r2, s6
90027c62:	931f      	str	r3, [sp, #124]	@ 0x7c
90027c64:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027c66:	eeb0 3a67 	vmov.f32	s6, s15
90027c6a:	fb92 f3f3 	sdiv	r3, r2, r3
90027c6e:	9320      	str	r3, [sp, #128]	@ 0x80
90027c70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90027c72:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90027c74:	3b01      	subs	r3, #1
90027c76:	930a      	str	r3, [sp, #40]	@ 0x28
90027c78:	bf08      	it	eq
90027c7a:	4615      	moveq	r5, r2
90027c7c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027c7e:	bf18      	it	ne
90027c80:	461d      	movne	r5, r3
90027c82:	e6af      	b.n	900279e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027c84:	f111 0a01 	adds.w	sl, r1, #1
90027c88:	d486      	bmi.n	90027b98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027c8a:	45d6      	cmp	lr, sl
90027c8c:	db84      	blt.n	90027b98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027c8e:	f110 0a01 	adds.w	sl, r0, #1
90027c92:	d481      	bmi.n	90027b98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027c94:	4553      	cmp	r3, sl
90027c96:	f6ff af7f 	blt.w	90027b98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027c9a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
90027c9c:	b21b      	sxth	r3, r3
90027c9e:	9101      	str	r1, [sp, #4]
90027ca0:	4641      	mov	r1, r8
90027ca2:	9300      	str	r3, [sp, #0]
90027ca4:	fa0f f38e 	sxth.w	r3, lr
90027ca8:	e9cd 0202 	strd	r0, r2, [sp, #8]
90027cac:	e9cd c704 	strd	ip, r7, [sp, #16]
90027cb0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90027cb2:	9811      	ldr	r0, [sp, #68]	@ 0x44
90027cb4:	f7ff fdb2 	bl	9002781c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90027cb8:	e76e      	b.n	90027b98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90027cba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027cbc:	1430      	asrs	r0, r6, #16
90027cbe:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90027cc0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90027cc4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027cc8:	1423      	asrs	r3, r4, #16
90027cca:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027cce:	fb01 3000 	mla	r0, r1, r0, r3
90027cd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027cd4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90027cd8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90027cdc:	8858      	ldrh	r0, [r3, #2]
90027cde:	f1be 0f00 	cmp.w	lr, #0
90027ce2:	d00b      	beq.n	90027cfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90027ce4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90027ce8:	3901      	subs	r1, #1
90027cea:	0049      	lsls	r1, r1, #1
90027cec:	3102      	adds	r1, #2
90027cee:	eb03 0b01 	add.w	fp, r3, r1
90027cf2:	5a5b      	ldrh	r3, [r3, r1]
90027cf4:	930e      	str	r3, [sp, #56]	@ 0x38
90027cf6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90027cfa:	930f      	str	r3, [sp, #60]	@ 0x3c
90027cfc:	ea4f 410c 	mov.w	r1, ip, lsl #16
90027d00:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90027d04:	fb12 f30e 	smulbb	r3, r2, lr
90027d08:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90027d0c:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
90027d10:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027d14:	10db      	asrs	r3, r3, #3
90027d16:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027d1a:	ea41 010c 	orr.w	r1, r1, ip
90027d1e:	f1ce 0c10 	rsb	ip, lr, #16
90027d22:	ea4b 0000 	orr.w	r0, fp, r0
90027d26:	9f08      	ldr	r7, [sp, #32]
90027d28:	ebac 0c02 	sub.w	ip, ip, r2
90027d2c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90027d30:	f108 38ff 	add.w	r8, r8, #4294967295
90027d34:	4350      	muls	r0, r2
90027d36:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90027d3a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90027d3c:	fb0c 0c01 	mla	ip, ip, r1, r0
90027d40:	980e      	ldr	r0, [sp, #56]	@ 0x38
90027d42:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90027d46:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
90027d4a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
90027d4c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027d50:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90027d54:	0412      	lsls	r2, r2, #16
90027d56:	ea4b 0101 	orr.w	r1, fp, r1
90027d5a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90027d5e:	fb03 c101 	mla	r1, r3, r1, ip
90027d62:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90027d66:	4302      	orrs	r2, r0
90027d68:	fb03 1202 	mla	r2, r3, r2, r1
90027d6c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90027d70:	0952      	lsrs	r2, r2, #5
90027d72:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90027d76:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
90027d7a:	f8b9 2000 	ldrh.w	r2, [r9]
90027d7e:	ea4b 0303 	orr.w	r3, fp, r3
90027d82:	1211      	asrs	r1, r2, #8
90027d84:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90027d88:	b29b      	uxth	r3, r3
90027d8a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027d8e:	00d2      	lsls	r2, r2, #3
90027d90:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90027d94:	fb11 f107 	smulbb	r1, r1, r7
90027d98:	1218      	asrs	r0, r3, #8
90027d9a:	fb1c fc07 	smulbb	ip, ip, r7
90027d9e:	b2d2      	uxtb	r2, r2
90027da0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027da4:	fb12 f207 	smulbb	r2, r2, r7
90027da8:	fb00 100a 	mla	r0, r0, sl, r1
90027dac:	10d9      	asrs	r1, r3, #3
90027dae:	00db      	lsls	r3, r3, #3
90027db0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027db4:	b280      	uxth	r0, r0
90027db6:	b2db      	uxtb	r3, r3
90027db8:	fb01 c10a 	mla	r1, r1, sl, ip
90027dbc:	fb03 230a 	mla	r3, r3, sl, r2
90027dc0:	1c42      	adds	r2, r0, #1
90027dc2:	b289      	uxth	r1, r1
90027dc4:	b29b      	uxth	r3, r3
90027dc6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027dca:	f101 0c01 	add.w	ip, r1, #1
90027dce:	1c5a      	adds	r2, r3, #1
90027dd0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90027dd4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90027dd8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90027ddc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027dde:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90027de2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90027de6:	441c      	add	r4, r3
90027de8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90027dec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027dee:	4310      	orrs	r0, r2
90027df0:	441e      	add	r6, r3
90027df2:	ea40 000c 	orr.w	r0, r0, ip
90027df6:	f829 0b02 	strh.w	r0, [r9], #2
90027dfa:	e6fa      	b.n	90027bf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90027dfc:	b013      	add	sp, #76	@ 0x4c
90027dfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90027e02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90027e02:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90027e06:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90027e0a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90027e0e:	fb0e 4703 	mla	r7, lr, r3, r4
90027e12:	f1be 0f00 	cmp.w	lr, #0
90027e16:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
90027e1a:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
90027e1e:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90027e22:	8808      	ldrh	r0, [r1, #0]
90027e24:	db60      	blt.n	90027ee8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90027e26:	45f1      	cmp	r9, lr
90027e28:	dd5e      	ble.n	90027ee8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90027e2a:	2c00      	cmp	r4, #0
90027e2c:	db5a      	blt.n	90027ee4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90027e2e:	42a3      	cmp	r3, r4
90027e30:	dd58      	ble.n	90027ee4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90027e32:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90027e36:	1c62      	adds	r2, r4, #1
90027e38:	d459      	bmi.n	90027eee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027e3a:	4293      	cmp	r3, r2
90027e3c:	dd57      	ble.n	90027eee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027e3e:	2d00      	cmp	r5, #0
90027e40:	d055      	beq.n	90027eee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90027e42:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90027e46:	f11e 0e01 	adds.w	lr, lr, #1
90027e4a:	d454      	bmi.n	90027ef6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027e4c:	45f1      	cmp	r9, lr
90027e4e:	dd52      	ble.n	90027ef6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027e50:	2e00      	cmp	r6, #0
90027e52:	d050      	beq.n	90027ef6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90027e54:	2c00      	cmp	r4, #0
90027e56:	db4c      	blt.n	90027ef2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90027e58:	42a3      	cmp	r3, r4
90027e5a:	dd4a      	ble.n	90027ef2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90027e5c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90027e60:	3401      	adds	r4, #1
90027e62:	d405      	bmi.n	90027e70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90027e64:	42a3      	cmp	r3, r4
90027e66:	dd03      	ble.n	90027e70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90027e68:	b115      	cbz	r5, 90027e70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90027e6a:	3301      	adds	r3, #1
90027e6c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90027e70:	fb15 f406 	smulbb	r4, r5, r6
90027e74:	ea4f 430c 	mov.w	r3, ip, lsl #16
90027e78:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90027e7c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90027e80:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90027e84:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90027e88:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90027e8c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90027e90:	ea43 0c0c 	orr.w	ip, r3, ip
90027e94:	f1c6 0310 	rsb	r3, r6, #16
90027e98:	ea4e 0707 	orr.w	r7, lr, r7
90027e9c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90027ea0:	1b5b      	subs	r3, r3, r5
90027ea2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90027ea6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90027eaa:	437d      	muls	r5, r7
90027eac:	fb03 5c0c 	mla	ip, r3, ip, r5
90027eb0:	0403      	lsls	r3, r0, #16
90027eb2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027eb6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90027eba:	4318      	orrs	r0, r3
90027ebc:	0413      	lsls	r3, r2, #16
90027ebe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90027ec2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90027ec6:	fb04 c000 	mla	r0, r4, r0, ip
90027eca:	4313      	orrs	r3, r2
90027ecc:	fb06 0003 	mla	r0, r6, r3, r0
90027ed0:	0d43      	lsrs	r3, r0, #21
90027ed2:	0940      	lsrs	r0, r0, #5
90027ed4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90027ed8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90027edc:	4318      	orrs	r0, r3
90027ede:	8008      	strh	r0, [r1, #0]
90027ee0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90027ee4:	4684      	mov	ip, r0
90027ee6:	e7a6      	b.n	90027e36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90027ee8:	4607      	mov	r7, r0
90027eea:	4684      	mov	ip, r0
90027eec:	e7ab      	b.n	90027e46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90027eee:	4607      	mov	r7, r0
90027ef0:	e7a9      	b.n	90027e46 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90027ef2:	4602      	mov	r2, r0
90027ef4:	e7b4      	b.n	90027e60 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90027ef6:	4602      	mov	r2, r0
90027ef8:	e7ba      	b.n	90027e70 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90027efa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027efa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027efe:	b08f      	sub	sp, #60	@ 0x3c
90027f00:	461d      	mov	r5, r3
90027f02:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90027f04:	9107      	str	r1, [sp, #28]
90027f06:	920c      	str	r2, [sp, #48]	@ 0x30
90027f08:	6859      	ldr	r1, [r3, #4]
90027f0a:	681b      	ldr	r3, [r3, #0]
90027f0c:	900d      	str	r0, [sp, #52]	@ 0x34
90027f0e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
90027f12:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
90027f16:	fb01 2707 	mla	r7, r1, r7, r2
90027f1a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90027f1e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027f20:	f8d3 8000 	ldr.w	r8, [r3]
90027f24:	9b07      	ldr	r3, [sp, #28]
90027f26:	2b00      	cmp	r3, #0
90027f28:	dc03      	bgt.n	90027f32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90027f2a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90027f2c:	2b00      	cmp	r3, #0
90027f2e:	f340 8182 	ble.w	90028236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90027f32:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027f34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90027f38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90027f3c:	1e48      	subs	r0, r1, #1
90027f3e:	f102 3cff 	add.w	ip, r2, #4294967295
90027f42:	2d00      	cmp	r5, #0
90027f44:	f340 809b 	ble.w	9002807e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90027f48:	ea5f 4e24 	movs.w	lr, r4, asr #16
90027f4c:	ea4f 4326 	mov.w	r3, r6, asr #16
90027f50:	d406      	bmi.n	90027f60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027f52:	4586      	cmp	lr, r0
90027f54:	da04      	bge.n	90027f60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027f56:	2b00      	cmp	r3, #0
90027f58:	db02      	blt.n	90027f60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90027f5a:	4563      	cmp	r3, ip
90027f5c:	f2c0 8090 	blt.w	90028080 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90027f60:	f11e 0e01 	adds.w	lr, lr, #1
90027f64:	f100 8084 	bmi.w	90028070 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027f68:	4571      	cmp	r1, lr
90027f6a:	f2c0 8081 	blt.w	90028070 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027f6e:	3301      	adds	r3, #1
90027f70:	d47e      	bmi.n	90028070 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027f72:	429a      	cmp	r2, r3
90027f74:	db7c      	blt.n	90028070 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90027f76:	46aa      	mov	sl, r5
90027f78:	46b9      	mov	r9, r7
90027f7a:	f1ba 0f00 	cmp.w	sl, #0
90027f7e:	f340 8099 	ble.w	900280b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90027f82:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027f84:	1421      	asrs	r1, r4, #16
90027f86:	ea4f 4026 	mov.w	r0, r6, asr #16
90027f8a:	f3c4 3203 	ubfx	r2, r4, #12, #4
90027f8e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90027f92:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90027f96:	f100 80d1 	bmi.w	9002813c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027f9a:	f10e 3bff 	add.w	fp, lr, #4294967295
90027f9e:	4559      	cmp	r1, fp
90027fa0:	f280 80cc 	bge.w	9002813c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027fa4:	2800      	cmp	r0, #0
90027fa6:	f2c0 80c9 	blt.w	9002813c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027faa:	f103 3bff 	add.w	fp, r3, #4294967295
90027fae:	4558      	cmp	r0, fp
90027fb0:	f280 80c4 	bge.w	9002813c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90027fb4:	fa0f fe8e 	sxth.w	lr, lr
90027fb8:	fb00 110e 	mla	r1, r0, lr, r1
90027fbc:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90027fc0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90027fc4:	8841      	ldrh	r1, [r0, #2]
90027fc6:	f1bc 0f00 	cmp.w	ip, #0
90027fca:	d00b      	beq.n	90027fe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90027fcc:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
90027fd0:	3b01      	subs	r3, #1
90027fd2:	005b      	lsls	r3, r3, #1
90027fd4:	3302      	adds	r3, #2
90027fd6:	eb00 0e03 	add.w	lr, r0, r3
90027fda:	5ac3      	ldrh	r3, [r0, r3]
90027fdc:	9308      	str	r3, [sp, #32]
90027fde:	f8be 3002 	ldrh.w	r3, [lr, #2]
90027fe2:	9309      	str	r3, [sp, #36]	@ 0x24
90027fe4:	ea4f 400b 	mov.w	r0, fp, lsl #16
90027fe8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90027fec:	fb12 f30c 	smulbb	r3, r2, ip
90027ff0:	f1cc 0e10 	rsb	lr, ip, #16
90027ff4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90027ff8:	10db      	asrs	r3, r3, #3
90027ffa:	ebae 0e02 	sub.w	lr, lr, r2
90027ffe:	ea40 000b 	orr.w	r0, r0, fp
90028002:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90028006:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
9002800a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
9002800e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90028012:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90028016:	ea4b 0101 	orr.w	r1, fp, r1
9002801a:	4351      	muls	r1, r2
9002801c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002801e:	fb0e 1e00 	mla	lr, lr, r0, r1
90028022:	0410      	lsls	r0, r2, #16
90028024:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90028028:	9908      	ldr	r1, [sp, #32]
9002802a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002802e:	4310      	orrs	r0, r2
90028030:	9a08      	ldr	r2, [sp, #32]
90028032:	0412      	lsls	r2, r2, #16
90028034:	fb03 e000 	mla	r0, r3, r0, lr
90028038:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
9002803c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90028040:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90028044:	ea42 020e 	orr.w	r2, r2, lr
90028048:	fb03 0302 	mla	r3, r3, r2, r0
9002804c:	0d5a      	lsrs	r2, r3, #21
9002804e:	095b      	lsrs	r3, r3, #5
90028050:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028054:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90028058:	4313      	orrs	r3, r2
9002805a:	f8a9 3000 	strh.w	r3, [r9]
9002805e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90028060:	f109 0902 	add.w	r9, r9, #2
90028064:	f10a 3aff 	add.w	sl, sl, #4294967295
90028068:	441c      	add	r4, r3
9002806a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002806c:	441e      	add	r6, r3
9002806e:	e784      	b.n	90027f7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90028070:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90028072:	3d01      	subs	r5, #1
90028074:	3702      	adds	r7, #2
90028076:	441c      	add	r4, r3
90028078:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002807a:	441e      	add	r6, r3
9002807c:	e761      	b.n	90027f42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002807e:	d01d      	beq.n	900280bc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90028080:	1e6b      	subs	r3, r5, #1
90028082:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90028084:	fb00 4003 	mla	r0, r0, r3, r4
90028088:	1400      	asrs	r0, r0, #16
9002808a:	f53f af74 	bmi.w	90027f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002808e:	3901      	subs	r1, #1
90028090:	4288      	cmp	r0, r1
90028092:	f6bf af70 	bge.w	90027f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90028096:	991c      	ldr	r1, [sp, #112]	@ 0x70
90028098:	fb01 6303 	mla	r3, r1, r3, r6
9002809c:	141b      	asrs	r3, r3, #16
9002809e:	f53f af6a 	bmi.w	90027f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900280a2:	3a01      	subs	r2, #1
900280a4:	4293      	cmp	r3, r2
900280a6:	f6bf af66 	bge.w	90027f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900280aa:	46a9      	mov	r9, r5
900280ac:	46ba      	mov	sl, r7
900280ae:	f1b9 0f00 	cmp.w	r9, #0
900280b2:	dc5b      	bgt.n	9002816c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900280b4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900280b8:	eb07 0745 	add.w	r7, r7, r5, lsl #1
900280bc:	9b07      	ldr	r3, [sp, #28]
900280be:	2b00      	cmp	r3, #0
900280c0:	f340 80b9 	ble.w	90028236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900280c4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900280c8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900280ca:	ee30 0a04 	vadd.f32	s0, s0, s8
900280ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
900280d2:	eef0 6a62 	vmov.f32	s13, s5
900280d6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900280da:	ee31 1a05 	vadd.f32	s2, s2, s10
900280de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900280e2:	ee16 4a90 	vmov	r4, s13
900280e6:	eef0 6a43 	vmov.f32	s13, s6
900280ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900280ee:	ee16 6a90 	vmov	r6, s13
900280f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900280f6:	ee61 7a27 	vmul.f32	s15, s2, s15
900280fa:	ee77 2a62 	vsub.f32	s5, s14, s5
900280fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
90028102:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90028106:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002810a:	ee12 2a90 	vmov	r2, s5
9002810e:	eef0 2a47 	vmov.f32	s5, s14
90028112:	fb92 f3f3 	sdiv	r3, r2, r3
90028116:	ee13 2a10 	vmov	r2, s6
9002811a:	931b      	str	r3, [sp, #108]	@ 0x6c
9002811c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002811e:	eeb0 3a67 	vmov.f32	s6, s15
90028122:	fb92 f3f3 	sdiv	r3, r2, r3
90028126:	931c      	str	r3, [sp, #112]	@ 0x70
90028128:	9b07      	ldr	r3, [sp, #28]
9002812a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002812c:	3b01      	subs	r3, #1
9002812e:	9307      	str	r3, [sp, #28]
90028130:	bf08      	it	eq
90028132:	4615      	moveq	r5, r2
90028134:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028136:	bf18      	it	ne
90028138:	461d      	movne	r5, r3
9002813a:	e6f3      	b.n	90027f24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9002813c:	f111 0b01 	adds.w	fp, r1, #1
90028140:	d48d      	bmi.n	9002805e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90028142:	45de      	cmp	lr, fp
90028144:	db8b      	blt.n	9002805e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90028146:	f110 0b01 	adds.w	fp, r0, #1
9002814a:	d488      	bmi.n	9002805e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002814c:	455b      	cmp	r3, fp
9002814e:	db86      	blt.n	9002805e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90028150:	b21b      	sxth	r3, r3
90028152:	e9cd 1001 	strd	r1, r0, [sp, #4]
90028156:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002815a:	9300      	str	r3, [sp, #0]
9002815c:	4642      	mov	r2, r8
9002815e:	fa0f f38e 	sxth.w	r3, lr
90028162:	4649      	mov	r1, r9
90028164:	980d      	ldr	r0, [sp, #52]	@ 0x34
90028166:	f7ff fe4c 	bl	90027e02 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002816a:	e778      	b.n	9002805e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002816c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002816e:	1420      	asrs	r0, r4, #16
90028170:	1431      	asrs	r1, r6, #16
90028172:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90028176:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002817a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002817e:	fb03 0101 	mla	r1, r3, r1, r0
90028182:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90028186:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002818a:	8841      	ldrh	r1, [r0, #2]
9002818c:	f1be 0f00 	cmp.w	lr, #0
90028190:	d00b      	beq.n	900281aa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90028192:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90028196:	3b01      	subs	r3, #1
90028198:	005b      	lsls	r3, r3, #1
9002819a:	3302      	adds	r3, #2
9002819c:	eb00 0b03 	add.w	fp, r0, r3
900281a0:	5ac3      	ldrh	r3, [r0, r3]
900281a2:	930a      	str	r3, [sp, #40]	@ 0x28
900281a4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900281a8:	930b      	str	r3, [sp, #44]	@ 0x2c
900281aa:	ea4f 400c 	mov.w	r0, ip, lsl #16
900281ae:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900281b2:	fb12 f30e 	smulbb	r3, r2, lr
900281b6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900281ba:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900281be:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900281c2:	10db      	asrs	r3, r3, #3
900281c4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900281c8:	ea40 000c 	orr.w	r0, r0, ip
900281cc:	f1ce 0c10 	rsb	ip, lr, #16
900281d0:	ea4b 0101 	orr.w	r1, fp, r1
900281d4:	f109 39ff 	add.w	r9, r9, #4294967295
900281d8:	ebac 0c02 	sub.w	ip, ip, r2
900281dc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900281e0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900281e4:	4351      	muls	r1, r2
900281e6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900281e8:	fb0c 1c00 	mla	ip, ip, r0, r1
900281ec:	990a      	ldr	r1, [sp, #40]	@ 0x28
900281ee:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900281f2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
900281f6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900281f8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900281fc:	0412      	lsls	r2, r2, #16
900281fe:	ea4b 0000 	orr.w	r0, fp, r0
90028202:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
90028206:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002820a:	fb03 c000 	mla	r0, r3, r0, ip
9002820e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90028212:	ea42 0b0b 	orr.w	fp, r2, fp
90028216:	fb03 000b 	mla	r0, r3, fp, r0
9002821a:	0d43      	lsrs	r3, r0, #21
9002821c:	0940      	lsrs	r0, r0, #5
9002821e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90028222:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90028226:	4318      	orrs	r0, r3
90028228:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002822a:	441c      	add	r4, r3
9002822c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002822e:	f82a 0b02 	strh.w	r0, [sl], #2
90028232:	441e      	add	r6, r3
90028234:	e73b      	b.n	900280ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90028236:	b00f      	add	sp, #60	@ 0x3c
90028238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002823c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
9002823c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028240:	b085      	sub	sp, #20
90028242:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90028246:	9102      	str	r1, [sp, #8]
90028248:	2c00      	cmp	r4, #0
9002824a:	fb04 7103 	mla	r1, r4, r3, r7
9002824e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90028252:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90028256:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002825a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
9002825e:	f2c0 811b 	blt.w	90028498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90028262:	45a6      	cmp	lr, r4
90028264:	f340 8118 	ble.w	90028498 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90028268:	2f00      	cmp	r7, #0
9002826a:	f2c0 8113 	blt.w	90028494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
9002826e:	42bb      	cmp	r3, r7
90028270:	f340 8110 	ble.w	90028494 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90028274:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90028278:	1c7a      	adds	r2, r7, #1
9002827a:	f100 8110 	bmi.w	9002849e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
9002827e:	4293      	cmp	r3, r2
90028280:	f340 810d 	ble.w	9002849e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90028284:	2e00      	cmp	r6, #0
90028286:	f000 810c 	beq.w	900284a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
9002828a:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002828e:	3401      	adds	r4, #1
90028290:	f100 810b 	bmi.w	900284aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90028294:	45a6      	cmp	lr, r4
90028296:	f340 8108 	ble.w	900284aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
9002829a:	2800      	cmp	r0, #0
9002829c:	f000 8108 	beq.w	900284b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
900282a0:	2f00      	cmp	r7, #0
900282a2:	f2c0 8100 	blt.w	900284a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900282a6:	42bb      	cmp	r3, r7
900282a8:	f340 80fd 	ble.w	900284a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
900282ac:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900282b0:	3701      	adds	r7, #1
900282b2:	f100 8100 	bmi.w	900284b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900282b6:	42bb      	cmp	r3, r7
900282b8:	f340 80fd 	ble.w	900284b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900282bc:	2e00      	cmp	r6, #0
900282be:	f000 80fc 	beq.w	900284ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
900282c2:	3301      	adds	r3, #1
900282c4:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900282c8:	b2b6      	uxth	r6, r6
900282ca:	b280      	uxth	r0, r0
900282cc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900282d0:	fb00 fe06 	mul.w	lr, r0, r6
900282d4:	0136      	lsls	r6, r6, #4
900282d6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900282da:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900282de:	eba6 070e 	sub.w	r7, r6, lr
900282e2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
900282e6:	ea4f 6914 	mov.w	r9, r4, lsr #24
900282ea:	b280      	uxth	r0, r0
900282ec:	b2bf      	uxth	r7, r7
900282ee:	1a1b      	subs	r3, r3, r0
900282f0:	ea4f 6812 	mov.w	r8, r2, lsr #24
900282f4:	fb0a f607 	mul.w	r6, sl, r7
900282f8:	b29b      	uxth	r3, r3
900282fa:	fb0b 6603 	mla	r6, fp, r3, r6
900282fe:	fb00 6609 	mla	r6, r0, r9, r6
90028302:	fb0e 6608 	mla	r6, lr, r8, r6
90028306:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002830a:	9600      	str	r6, [sp, #0]
9002830c:	2e00      	cmp	r6, #0
9002830e:	f000 80be 	beq.w	9002848e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90028312:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028316:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
9002831a:	9e02      	ldr	r6, [sp, #8]
9002831c:	fb0b fc0c 	mul.w	ip, fp, ip
90028320:	fb0b f505 	mul.w	r5, fp, r5
90028324:	8836      	ldrh	r6, [r6, #0]
90028326:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002832a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002832e:	9501      	str	r5, [sp, #4]
90028330:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90028334:	44dc      	add	ip, fp
90028336:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002833a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002833e:	9503      	str	r5, [sp, #12]
90028340:	9d01      	ldr	r5, [sp, #4]
90028342:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90028346:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002834a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002834e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90028352:	fb0a fc0c 	mul.w	ip, sl, ip
90028356:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002835a:	fb0a fa01 	mul.w	sl, sl, r1
9002835e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90028362:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028366:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
9002836a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002836e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90028372:	4465      	add	r5, ip
90028374:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90028378:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
9002837c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028380:	fb09 fc0c 	mul.w	ip, r9, ip
90028384:	0a2d      	lsrs	r5, r5, #8
90028386:	fb09 f904 	mul.w	r9, r9, r4
9002838a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002838e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90028392:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90028396:	f509 7480 	add.w	r4, r9, #256	@ 0x100
9002839a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002839e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900283a2:	437d      	muls	r5, r7
900283a4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900283a8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
900283ac:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900283b0:	4461      	add	r1, ip
900283b2:	fb08 f404 	mul.w	r4, r8, r4
900283b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900283ba:	fb08 f802 	mul.w	r8, r8, r2
900283be:	0a09      	lsrs	r1, r1, #8
900283c0:	0a22      	lsrs	r2, r4, #8
900283c2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900283c6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900283ca:	fb07 f70a 	mul.w	r7, r7, sl
900283ce:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900283d2:	4414      	add	r4, r2
900283d4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900283d8:	0a24      	lsrs	r4, r4, #8
900283da:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900283de:	9a03      	ldr	r2, [sp, #12]
900283e0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900283e4:	fb02 5503 	mla	r5, r2, r3, r5
900283e8:	ea4f 2818 	mov.w	r8, r8, lsr #8
900283ec:	9a00      	ldr	r2, [sp, #0]
900283ee:	fb04 540e 	mla	r4, r4, lr, r5
900283f2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900283f6:	1235      	asrs	r5, r6, #8
900283f8:	fb01 4100 	mla	r1, r1, r0, r4
900283fc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90028400:	0a09      	lsrs	r1, r1, #8
90028402:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90028406:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
9002840a:	fb03 7101 	mla	r1, r3, r1, r7
9002840e:	fb0e 1e08 	mla	lr, lr, r8, r1
90028412:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90028416:	fb00 e101 	mla	r1, r0, r1, lr
9002841a:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
9002841e:	b287      	uxth	r7, r0
90028420:	0a09      	lsrs	r1, r1, #8
90028422:	437a      	muls	r2, r7
90028424:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90028428:	1c53      	adds	r3, r2, #1
9002842a:	4321      	orrs	r1, r4
9002842c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028430:	0c0a      	lsrs	r2, r1, #16
90028432:	f3c1 2407 	ubfx	r4, r1, #8, #8
90028436:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9002843a:	b2c8      	uxtb	r0, r1
9002843c:	fb12 f207 	smulbb	r2, r2, r7
90028440:	fb14 f407 	smulbb	r4, r4, r7
90028444:	b2db      	uxtb	r3, r3
90028446:	fb10 f007 	smulbb	r0, r0, r7
9002844a:	fb05 2503 	mla	r5, r5, r3, r2
9002844e:	10f2      	asrs	r2, r6, #3
90028450:	00f6      	lsls	r6, r6, #3
90028452:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90028456:	b2ad      	uxth	r5, r5
90028458:	b2f6      	uxtb	r6, r6
9002845a:	fb02 4203 	mla	r2, r2, r3, r4
9002845e:	fb06 0303 	mla	r3, r6, r3, r0
90028462:	b294      	uxth	r4, r2
90028464:	b299      	uxth	r1, r3
90028466:	1c6b      	adds	r3, r5, #1
90028468:	1c62      	adds	r2, r4, #1
9002846a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002846e:	1c4b      	adds	r3, r1, #1
90028470:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90028474:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90028478:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002847c:	0952      	lsrs	r2, r2, #5
9002847e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90028482:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028486:	432b      	orrs	r3, r5
90028488:	4313      	orrs	r3, r2
9002848a:	9a02      	ldr	r2, [sp, #8]
9002848c:	8013      	strh	r3, [r2, #0]
9002848e:	b005      	add	sp, #20
90028490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028494:	2500      	movs	r5, #0
90028496:	e6ef      	b.n	90028278 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90028498:	2100      	movs	r1, #0
9002849a:	460d      	mov	r5, r1
9002849c:	e6f7      	b.n	9002828e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002849e:	2100      	movs	r1, #0
900284a0:	e6f5      	b.n	9002828e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900284a2:	4631      	mov	r1, r6
900284a4:	e6f3      	b.n	9002828e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
900284a6:	2400      	movs	r4, #0
900284a8:	e702      	b.n	900282b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
900284aa:	2200      	movs	r2, #0
900284ac:	4614      	mov	r4, r2
900284ae:	e70b      	b.n	900282c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900284b0:	4602      	mov	r2, r0
900284b2:	4604      	mov	r4, r0
900284b4:	e708      	b.n	900282c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900284b6:	2200      	movs	r2, #0
900284b8:	e706      	b.n	900282c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
900284ba:	4632      	mov	r2, r6
900284bc:	e704      	b.n	900282c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

900284be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900284be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900284c2:	b09d      	sub	sp, #116	@ 0x74
900284c4:	9219      	str	r2, [sp, #100]	@ 0x64
900284c6:	9307      	str	r3, [sp, #28]
900284c8:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
900284ca:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
900284ce:	901b      	str	r0, [sp, #108]	@ 0x6c
900284d0:	931a      	str	r3, [sp, #104]	@ 0x68
900284d2:	6850      	ldr	r0, [r2, #4]
900284d4:	9117      	str	r1, [sp, #92]	@ 0x5c
900284d6:	6812      	ldr	r2, [r2, #0]
900284d8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
900284dc:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
900284e0:	fb00 1303 	mla	r3, r0, r3, r1
900284e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900284e8:	930a      	str	r3, [sp, #40]	@ 0x28
900284ea:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
900284ec:	681b      	ldr	r3, [r3, #0]
900284ee:	9310      	str	r3, [sp, #64]	@ 0x40
900284f0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
900284f4:	930b      	str	r3, [sp, #44]	@ 0x2c
900284f6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900284f8:	2b00      	cmp	r3, #0
900284fa:	dc03      	bgt.n	90028504 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900284fc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900284fe:	2b00      	cmp	r3, #0
90028500:	f340 8375 	ble.w	90028bee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90028504:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90028506:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002850a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002850e:	1e48      	subs	r0, r1, #1
90028510:	1e57      	subs	r7, r2, #1
90028512:	9b07      	ldr	r3, [sp, #28]
90028514:	2b00      	cmp	r3, #0
90028516:	f340 818e 	ble.w	90028836 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9002851a:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002851e:	ea4f 4326 	mov.w	r3, r6, asr #16
90028522:	d406      	bmi.n	90028532 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90028524:	4584      	cmp	ip, r0
90028526:	da04      	bge.n	90028532 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90028528:	2b00      	cmp	r3, #0
9002852a:	db02      	blt.n	90028532 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002852c:	42bb      	cmp	r3, r7
9002852e:	f2c0 8183 	blt.w	90028838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90028532:	f11c 0c01 	adds.w	ip, ip, #1
90028536:	f100 8173 	bmi.w	90028820 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002853a:	4561      	cmp	r1, ip
9002853c:	f2c0 8170 	blt.w	90028820 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90028540:	3301      	adds	r3, #1
90028542:	f100 816d 	bmi.w	90028820 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90028546:	429a      	cmp	r2, r3
90028548:	f2c0 816a 	blt.w	90028820 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002854c:	9b07      	ldr	r3, [sp, #28]
9002854e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90028550:	9318      	str	r3, [sp, #96]	@ 0x60
90028552:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028554:	2b00      	cmp	r3, #0
90028556:	f340 818c 	ble.w	90028872 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
9002855a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
9002855c:	ea4f 4c26 	mov.w	ip, r6, asr #16
90028560:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90028562:	f3c4 3003 	ubfx	r0, r4, #12, #4
90028566:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002856a:	1422      	asrs	r2, r4, #16
9002856c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90028570:	689b      	ldr	r3, [r3, #8]
90028572:	f100 81cd 	bmi.w	90028910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90028576:	f103 38ff 	add.w	r8, r3, #4294967295
9002857a:	4542      	cmp	r2, r8
9002857c:	f280 81c8 	bge.w	90028910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90028580:	f1bc 0f00 	cmp.w	ip, #0
90028584:	f2c0 81c4 	blt.w	90028910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90028588:	f10e 38ff 	add.w	r8, lr, #4294967295
9002858c:	45c4      	cmp	ip, r8
9002858e:	f280 81bf 	bge.w	90028910 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90028592:	b21b      	sxth	r3, r3
90028594:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028596:	fb0c 2203 	mla	r2, ip, r3, r2
9002859a:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9002859e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900285a2:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900285a6:	2800      	cmp	r0, #0
900285a8:	f000 81a9 	beq.w	900288fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
900285ac:	f8d8 5004 	ldr.w	r5, [r8, #4]
900285b0:	950c      	str	r5, [sp, #48]	@ 0x30
900285b2:	0e2d      	lsrs	r5, r5, #24
900285b4:	9513      	str	r5, [sp, #76]	@ 0x4c
900285b6:	b181      	cbz	r1, 900285da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900285b8:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
900285bc:	3b01      	subs	r3, #1
900285be:	009b      	lsls	r3, r3, #2
900285c0:	3304      	adds	r3, #4
900285c2:	eb08 0c03 	add.w	ip, r8, r3
900285c6:	f858 3003 	ldr.w	r3, [r8, r3]
900285ca:	9308      	str	r3, [sp, #32]
900285cc:	0e1b      	lsrs	r3, r3, #24
900285ce:	9311      	str	r3, [sp, #68]	@ 0x44
900285d0:	f8dc 3004 	ldr.w	r3, [ip, #4]
900285d4:	930d      	str	r3, [sp, #52]	@ 0x34
900285d6:	0e1b      	lsrs	r3, r3, #24
900285d8:	9314      	str	r3, [sp, #80]	@ 0x50
900285da:	b280      	uxth	r0, r0
900285dc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900285de:	b289      	uxth	r1, r1
900285e0:	fb00 f901 	mul.w	r9, r0, r1
900285e4:	0100      	lsls	r0, r0, #4
900285e6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900285ea:	eba0 0809 	sub.w	r8, r0, r9
900285ee:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900285f2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
900285f4:	b289      	uxth	r1, r1
900285f6:	fa1f f888 	uxth.w	r8, r8
900285fa:	1a5b      	subs	r3, r3, r1
900285fc:	fb08 f000 	mul.w	r0, r8, r0
90028600:	b29b      	uxth	r3, r3
90028602:	fb03 000e 	mla	r0, r3, lr, r0
90028606:	fb01 0005 	mla	r0, r1, r5, r0
9002860a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9002860c:	fb09 0005 	mla	r0, r9, r5, r0
90028610:	f3c0 2007 	ubfx	r0, r0, #8, #8
90028614:	2800      	cmp	r0, #0
90028616:	f000 80fa 	beq.w	9002880e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002861a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002861e:	d01b      	beq.n	90028658 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90028620:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90028624:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028628:	fb0e fa0a 	mul.w	sl, lr, sl
9002862c:	fb0e fe02 	mul.w	lr, lr, r2
90028630:	ea4f 221a 	mov.w	r2, sl, lsr #8
90028634:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90028638:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
9002863c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028640:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90028644:	4452      	add	r2, sl
90028646:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002864a:	0a12      	lsrs	r2, r2, #8
9002864c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028650:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028654:	ea42 020c 	orr.w	r2, r2, ip
90028658:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002865a:	2dff      	cmp	r5, #255	@ 0xff
9002865c:	d021      	beq.n	900286a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
9002865e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028660:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028664:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028666:	fb05 fb0b 	mul.w	fp, r5, fp
9002866a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002866c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028670:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028672:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90028676:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002867a:	fb05 fa0a 	mul.w	sl, r5, sl
9002867e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028682:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90028686:	44de      	add	lr, fp
90028688:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002868c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028690:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028694:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028698:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002869c:	ea4e 050a 	orr.w	r5, lr, sl
900286a0:	950c      	str	r5, [sp, #48]	@ 0x30
900286a2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900286a4:	2dff      	cmp	r5, #255	@ 0xff
900286a6:	d021      	beq.n	900286ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
900286a8:	9d08      	ldr	r5, [sp, #32]
900286aa:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900286ae:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900286b0:	fb05 fb0b 	mul.w	fp, r5, fp
900286b4:	9d08      	ldr	r5, [sp, #32]
900286b6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900286ba:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900286bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900286c0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900286c4:	fb05 fa0a 	mul.w	sl, r5, sl
900286c8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900286cc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900286d0:	44de      	add	lr, fp
900286d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900286d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900286da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900286de:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900286e2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900286e6:	ea4e 050a 	orr.w	r5, lr, sl
900286ea:	9508      	str	r5, [sp, #32]
900286ec:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900286ee:	2dff      	cmp	r5, #255	@ 0xff
900286f0:	d021      	beq.n	90028736 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
900286f2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900286f4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900286f8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900286fa:	fb05 fb0b 	mul.w	fp, r5, fp
900286fe:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028700:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028704:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90028706:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002870a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002870e:	fb05 fa0a 	mul.w	sl, r5, sl
90028712:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90028716:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002871a:	44de      	add	lr, fp
9002871c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90028720:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90028724:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028728:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002872c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028730:	ea4e 050a 	orr.w	r5, lr, sl
90028734:	950d      	str	r5, [sp, #52]	@ 0x34
90028736:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90028738:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
9002873c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028740:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028744:	9d08      	ldr	r5, [sp, #32]
90028746:	fb08 fc0c 	mul.w	ip, r8, ip
9002874a:	fb03 cc0e 	mla	ip, r3, lr, ip
9002874e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90028752:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90028754:	fb01 cc0e 	mla	ip, r1, lr, ip
90028758:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
9002875c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002875e:	fb09 cc0e 	mla	ip, r9, lr, ip
90028762:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90028766:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028768:	fb08 f80e 	mul.w	r8, r8, lr
9002876c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028770:	fb03 8202 	mla	r2, r3, r2, r8
90028774:	9b08      	ldr	r3, [sp, #32]
90028776:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002877a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
9002877e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90028780:	fb01 220a 	mla	r2, r1, sl, r2
90028784:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90028788:	883b      	ldrh	r3, [r7, #0]
9002878a:	fb09 2901 	mla	r9, r9, r1, r2
9002878e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90028790:	1219      	asrs	r1, r3, #8
90028792:	4342      	muls	r2, r0
90028794:	ea4f 2919 	mov.w	r9, r9, lsr #8
90028798:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002879c:	1c50      	adds	r0, r2, #1
9002879e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
900287a2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900287a6:	ea4c 0c09 	orr.w	ip, ip, r9
900287aa:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900287ae:	ea4f 421c 	mov.w	r2, ip, lsr #16
900287b2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900287b6:	fa5f fc8c 	uxtb.w	ip, ip
900287ba:	fb12 f205 	smulbb	r2, r2, r5
900287be:	b2c0      	uxtb	r0, r0
900287c0:	fb1c fc05 	smulbb	ip, ip, r5
900287c4:	fb01 2100 	mla	r1, r1, r0, r2
900287c8:	10da      	asrs	r2, r3, #3
900287ca:	fb1e fe05 	smulbb	lr, lr, r5
900287ce:	00db      	lsls	r3, r3, #3
900287d0:	b289      	uxth	r1, r1
900287d2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
900287d6:	b2db      	uxtb	r3, r3
900287d8:	fb02 e200 	mla	r2, r2, r0, lr
900287dc:	fb03 c300 	mla	r3, r3, r0, ip
900287e0:	b292      	uxth	r2, r2
900287e2:	fa1f fc83 	uxth.w	ip, r3
900287e6:	1c4b      	adds	r3, r1, #1
900287e8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900287ec:	f10c 0301 	add.w	r3, ip, #1
900287f0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900287f4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
900287f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900287fc:	430b      	orrs	r3, r1
900287fe:	1c51      	adds	r1, r2, #1
90028800:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90028804:	0952      	lsrs	r2, r2, #5
90028806:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002880a:	4313      	orrs	r3, r2
9002880c:	803b      	strh	r3, [r7, #0]
9002880e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90028810:	3702      	adds	r7, #2
90028812:	441c      	add	r4, r3
90028814:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90028816:	441e      	add	r6, r3
90028818:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002881a:	3b01      	subs	r3, #1
9002881c:	9318      	str	r3, [sp, #96]	@ 0x60
9002881e:	e698      	b.n	90028552 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90028820:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90028822:	441c      	add	r4, r3
90028824:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90028826:	441e      	add	r6, r3
90028828:	9b07      	ldr	r3, [sp, #28]
9002882a:	3b01      	subs	r3, #1
9002882c:	9307      	str	r3, [sp, #28]
9002882e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90028830:	3302      	adds	r3, #2
90028832:	930a      	str	r3, [sp, #40]	@ 0x28
90028834:	e66d      	b.n	90028512 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90028836:	d023      	beq.n	90028880 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90028838:	9b07      	ldr	r3, [sp, #28]
9002883a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
9002883c:	3b01      	subs	r3, #1
9002883e:	fb00 4003 	mla	r0, r0, r3, r4
90028842:	1400      	asrs	r0, r0, #16
90028844:	f53f ae82 	bmi.w	9002854c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028848:	3901      	subs	r1, #1
9002884a:	4288      	cmp	r0, r1
9002884c:	f6bf ae7e 	bge.w	9002854c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028850:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90028852:	fb01 6303 	mla	r3, r1, r3, r6
90028856:	141b      	asrs	r3, r3, #16
90028858:	f53f ae78 	bmi.w	9002854c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002885c:	3a01      	subs	r2, #1
9002885e:	4293      	cmp	r3, r2
90028860:	f6bf ae74 	bge.w	9002854c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90028864:	f8dd b01c 	ldr.w	fp, [sp, #28]
90028868:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
9002886c:	f1bb 0f00 	cmp.w	fp, #0
90028870:	dc6c      	bgt.n	9002894c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90028872:	9b07      	ldr	r3, [sp, #28]
90028874:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90028878:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002887a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002887e:	930a      	str	r3, [sp, #40]	@ 0x28
90028880:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028882:	2b00      	cmp	r3, #0
90028884:	f340 81b3 	ble.w	90028bee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90028888:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002888c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002888e:	ee30 0a04 	vadd.f32	s0, s0, s8
90028892:	ee70 0aa4 	vadd.f32	s1, s1, s9
90028896:	eef0 6a62 	vmov.f32	s13, s5
9002889a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002889e:	ee31 1a05 	vadd.f32	s2, s2, s10
900288a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900288a6:	ee16 4a90 	vmov	r4, s13
900288aa:	eef0 6a43 	vmov.f32	s13, s6
900288ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900288b2:	ee16 6a90 	vmov	r6, s13
900288b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900288ba:	ee61 7a27 	vmul.f32	s15, s2, s15
900288be:	ee77 2a62 	vsub.f32	s5, s14, s5
900288c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900288c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900288ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900288ce:	ee12 2a90 	vmov	r2, s5
900288d2:	eef0 2a47 	vmov.f32	s5, s14
900288d6:	fb92 f3f3 	sdiv	r3, r2, r3
900288da:	ee13 2a10 	vmov	r2, s6
900288de:	9329      	str	r3, [sp, #164]	@ 0xa4
900288e0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900288e2:	eeb0 3a67 	vmov.f32	s6, s15
900288e6:	fb92 f3f3 	sdiv	r3, r2, r3
900288ea:	932a      	str	r3, [sp, #168]	@ 0xa8
900288ec:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900288ee:	9a19      	ldr	r2, [sp, #100]	@ 0x64
900288f0:	3b01      	subs	r3, #1
900288f2:	9317      	str	r3, [sp, #92]	@ 0x5c
900288f4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900288f6:	bf08      	it	eq
900288f8:	4613      	moveq	r3, r2
900288fa:	9307      	str	r3, [sp, #28]
900288fc:	e5fb      	b.n	900284f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900288fe:	2900      	cmp	r1, #0
90028900:	f43f ae6b 	beq.w	900285da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90028904:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90028908:	9308      	str	r3, [sp, #32]
9002890a:	0e1b      	lsrs	r3, r3, #24
9002890c:	9311      	str	r3, [sp, #68]	@ 0x44
9002890e:	e664      	b.n	900285da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90028910:	f112 0801 	adds.w	r8, r2, #1
90028914:	f53f af7b 	bmi.w	9002880e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028918:	4543      	cmp	r3, r8
9002891a:	f6ff af78 	blt.w	9002880e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002891e:	f11c 0801 	adds.w	r8, ip, #1
90028922:	f53f af74 	bmi.w	9002880e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90028926:	45c6      	cmp	lr, r8
90028928:	f6ff af71 	blt.w	9002880e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002892c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9002892e:	b21b      	sxth	r3, r3
90028930:	9201      	str	r2, [sp, #4]
90028932:	fa0f f28e 	sxth.w	r2, lr
90028936:	e9cd 1504 	strd	r1, r5, [sp, #16]
9002893a:	e9cd c002 	strd	ip, r0, [sp, #8]
9002893e:	9200      	str	r2, [sp, #0]
90028940:	4639      	mov	r1, r7
90028942:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90028944:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90028946:	f7ff fc79 	bl	9002823c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
9002894a:	e760      	b.n	9002880e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002894c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
9002894e:	1427      	asrs	r7, r4, #16
90028950:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028952:	f3c4 3203 	ubfx	r2, r4, #12, #4
90028956:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002895a:	1433      	asrs	r3, r6, #16
9002895c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90028960:	fb01 7303 	mla	r3, r1, r3, r7
90028964:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90028968:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
9002896c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90028970:	2a00      	cmp	r2, #0
90028972:	f000 8133 	beq.w	90028bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90028976:	687d      	ldr	r5, [r7, #4]
90028978:	950e      	str	r5, [sp, #56]	@ 0x38
9002897a:	0e2d      	lsrs	r5, r5, #24
9002897c:	9515      	str	r5, [sp, #84]	@ 0x54
9002897e:	b178      	cbz	r0, 900289a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90028980:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90028984:	3901      	subs	r1, #1
90028986:	0089      	lsls	r1, r1, #2
90028988:	3104      	adds	r1, #4
9002898a:	eb07 0e01 	add.w	lr, r7, r1
9002898e:	5879      	ldr	r1, [r7, r1]
90028990:	9109      	str	r1, [sp, #36]	@ 0x24
90028992:	0e09      	lsrs	r1, r1, #24
90028994:	9112      	str	r1, [sp, #72]	@ 0x48
90028996:	f8de 1004 	ldr.w	r1, [lr, #4]
9002899a:	910f      	str	r1, [sp, #60]	@ 0x3c
9002899c:	0e09      	lsrs	r1, r1, #24
9002899e:	9116      	str	r1, [sp, #88]	@ 0x58
900289a0:	b292      	uxth	r2, r2
900289a2:	9915      	ldr	r1, [sp, #84]	@ 0x54
900289a4:	b280      	uxth	r0, r0
900289a6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900289a8:	fb02 f800 	mul.w	r8, r2, r0
900289ac:	0112      	lsls	r2, r2, #4
900289ae:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900289b2:	eba2 0e08 	sub.w	lr, r2, r8
900289b6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900289ba:	b280      	uxth	r0, r0
900289bc:	fa1f fe8e 	uxth.w	lr, lr
900289c0:	1a12      	subs	r2, r2, r0
900289c2:	fb0e f101 	mul.w	r1, lr, r1
900289c6:	b292      	uxth	r2, r2
900289c8:	fb02 110c 	mla	r1, r2, ip, r1
900289cc:	fb00 1105 	mla	r1, r0, r5, r1
900289d0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900289d2:	fb08 1105 	mla	r1, r8, r5, r1
900289d6:	f3c1 2107 	ubfx	r1, r1, #8, #8
900289da:	2900      	cmp	r1, #0
900289dc:	f000 80f5 	beq.w	90028bca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
900289e0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
900289e4:	d019      	beq.n	90028a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
900289e6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900289ea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900289ee:	fb0c fa0a 	mul.w	sl, ip, sl
900289f2:	fb0c fc03 	mul.w	ip, ip, r3
900289f6:	ea4f 231a 	mov.w	r3, sl, lsr #8
900289fa:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900289fe:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90028a02:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90028a06:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90028a0a:	4453      	add	r3, sl
90028a0c:	0a3f      	lsrs	r7, r7, #8
90028a0e:	0a1b      	lsrs	r3, r3, #8
90028a10:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90028a14:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90028a18:	433b      	orrs	r3, r7
90028a1a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028a1c:	2dff      	cmp	r5, #255	@ 0xff
90028a1e:	d020      	beq.n	90028a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90028a20:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028a22:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028a26:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028a28:	436f      	muls	r7, r5
90028a2a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028a2c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028a30:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028a34:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90028a36:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028a3a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a3e:	fb05 fa0a 	mul.w	sl, r5, sl
90028a42:	44bc      	add	ip, r7
90028a44:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028a48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028a4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028a50:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028a58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028a5c:	ea4c 050a 	orr.w	r5, ip, sl
90028a60:	950e      	str	r5, [sp, #56]	@ 0x38
90028a62:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028a64:	2dff      	cmp	r5, #255	@ 0xff
90028a66:	d020      	beq.n	90028aaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90028a68:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028a6a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028a6e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028a70:	436f      	muls	r7, r5
90028a72:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028a74:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028a78:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028a7c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028a7e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028a82:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a86:	fb05 fa0a 	mul.w	sl, r5, sl
90028a8a:	44bc      	add	ip, r7
90028a8c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028a90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028a94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028a98:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028a9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028aa0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028aa4:	ea4c 050a 	orr.w	r5, ip, sl
90028aa8:	9509      	str	r5, [sp, #36]	@ 0x24
90028aaa:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90028aac:	2dff      	cmp	r5, #255	@ 0xff
90028aae:	d020      	beq.n	90028af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90028ab0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028ab2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028ab6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90028ab8:	436f      	muls	r7, r5
90028aba:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028abc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90028ac0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028ac4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90028ac6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90028aca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028ace:	fb05 fa0a 	mul.w	sl, r5, sl
90028ad2:	44bc      	add	ip, r7
90028ad4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90028ad8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028adc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90028ae0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90028ae4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028ae8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028aec:	ea4c 050a 	orr.w	r5, ip, sl
90028af0:	950f      	str	r5, [sp, #60]	@ 0x3c
90028af2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028af4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90028af8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90028afc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90028b00:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90028b02:	fb0e f707 	mul.w	r7, lr, r7
90028b06:	fb02 770c 	mla	r7, r2, ip, r7
90028b0a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028b0e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028b10:	fb00 770c 	mla	r7, r0, ip, r7
90028b14:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028b18:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90028b1a:	fb08 770c 	mla	r7, r8, ip, r7
90028b1e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90028b22:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028b24:	fb0e fe0c 	mul.w	lr, lr, ip
90028b28:	0a3f      	lsrs	r7, r7, #8
90028b2a:	fb02 e303 	mla	r3, r2, r3, lr
90028b2e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90028b30:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90028b34:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90028b38:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90028b3a:	fb00 330a 	mla	r3, r0, sl, r3
90028b3e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90028b42:	f8b9 0000 	ldrh.w	r0, [r9]
90028b46:	fb08 3c0c 	mla	ip, r8, ip, r3
90028b4a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90028b4c:	1202      	asrs	r2, r0, #8
90028b4e:	4359      	muls	r1, r3
90028b50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028b54:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90028b58:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028b5c:	1c4b      	adds	r3, r1, #1
90028b5e:	ea47 070c 	orr.w	r7, r7, ip
90028b62:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90028b66:	0c3b      	lsrs	r3, r7, #16
90028b68:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90028b6c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90028b70:	b2ff      	uxtb	r7, r7
90028b72:	fb13 f305 	smulbb	r3, r3, r5
90028b76:	b2c9      	uxtb	r1, r1
90028b78:	fb17 f705 	smulbb	r7, r7, r5
90028b7c:	fb02 3201 	mla	r2, r2, r1, r3
90028b80:	10c3      	asrs	r3, r0, #3
90028b82:	fb1c fc05 	smulbb	ip, ip, r5
90028b86:	00c0      	lsls	r0, r0, #3
90028b88:	b292      	uxth	r2, r2
90028b8a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90028b8e:	b2c0      	uxtb	r0, r0
90028b90:	fb03 c301 	mla	r3, r3, r1, ip
90028b94:	fb00 7001 	mla	r0, r0, r1, r7
90028b98:	1c51      	adds	r1, r2, #1
90028b9a:	b29b      	uxth	r3, r3
90028b9c:	b280      	uxth	r0, r0
90028b9e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90028ba2:	f100 0c01 	add.w	ip, r0, #1
90028ba6:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
90028baa:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90028bae:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90028bb2:	ea4c 0202 	orr.w	r2, ip, r2
90028bb6:	f103 0c01 	add.w	ip, r3, #1
90028bba:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90028bbe:	095b      	lsrs	r3, r3, #5
90028bc0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90028bc4:	431a      	orrs	r2, r3
90028bc6:	f8a9 2000 	strh.w	r2, [r9]
90028bca:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90028bcc:	f109 0902 	add.w	r9, r9, #2
90028bd0:	f10b 3bff 	add.w	fp, fp, #4294967295
90028bd4:	441c      	add	r4, r3
90028bd6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90028bd8:	441e      	add	r6, r3
90028bda:	e647      	b.n	9002886c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90028bdc:	2800      	cmp	r0, #0
90028bde:	f43f aedf 	beq.w	900289a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90028be2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90028be6:	9109      	str	r1, [sp, #36]	@ 0x24
90028be8:	0e09      	lsrs	r1, r1, #24
90028bea:	9112      	str	r1, [sp, #72]	@ 0x48
90028bec:	e6d8      	b.n	900289a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90028bee:	b01d      	add	sp, #116	@ 0x74
90028bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90028bf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
90028bf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028bf8:	b085      	sub	sp, #20
90028bfa:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90028bfe:	9102      	str	r1, [sp, #8]
90028c00:	2c00      	cmp	r4, #0
90028c02:	fb04 7103 	mla	r1, r4, r3, r7
90028c06:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90028c0a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90028c0e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90028c12:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90028c16:	f2c0 810c 	blt.w	90028e32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90028c1a:	45a6      	cmp	lr, r4
90028c1c:	f340 8109 	ble.w	90028e32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90028c20:	2f00      	cmp	r7, #0
90028c22:	f2c0 8104 	blt.w	90028e2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90028c26:	42bb      	cmp	r3, r7
90028c28:	f340 8101 	ble.w	90028e2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90028c2c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90028c30:	1c7a      	adds	r2, r7, #1
90028c32:	f100 8101 	bmi.w	90028e38 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90028c36:	4293      	cmp	r3, r2
90028c38:	f340 80fe 	ble.w	90028e38 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90028c3c:	2e00      	cmp	r6, #0
90028c3e:	f000 80fd 	beq.w	90028e3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90028c42:	f8dc 1004 	ldr.w	r1, [ip, #4]
90028c46:	3401      	adds	r4, #1
90028c48:	f100 80fc 	bmi.w	90028e44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90028c4c:	45a6      	cmp	lr, r4
90028c4e:	f340 80f9 	ble.w	90028e44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90028c52:	2800      	cmp	r0, #0
90028c54:	f000 80f9 	beq.w	90028e4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90028c58:	2f00      	cmp	r7, #0
90028c5a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90028c5e:	f2c0 80ef 	blt.w	90028e40 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90028c62:	42bb      	cmp	r3, r7
90028c64:	f340 80ec 	ble.w	90028e40 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90028c68:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90028c6c:	3701      	adds	r7, #1
90028c6e:	f100 80ef 	bmi.w	90028e50 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90028c72:	42bb      	cmp	r3, r7
90028c74:	f340 80ec 	ble.w	90028e50 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90028c78:	2e00      	cmp	r6, #0
90028c7a:	f000 80eb 	beq.w	90028e54 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90028c7e:	6852      	ldr	r2, [r2, #4]
90028c80:	b2b6      	uxth	r6, r6
90028c82:	b280      	uxth	r0, r0
90028c84:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90028c88:	fb00 fe06 	mul.w	lr, r0, r6
90028c8c:	0136      	lsls	r6, r6, #4
90028c8e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90028c92:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90028c96:	eba6 070e 	sub.w	r7, r6, lr
90028c9a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90028c9e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90028ca2:	b280      	uxth	r0, r0
90028ca4:	b2bf      	uxth	r7, r7
90028ca6:	1a1b      	subs	r3, r3, r0
90028ca8:	ea4f 6812 	mov.w	r8, r2, lsr #24
90028cac:	fb07 f60a 	mul.w	r6, r7, sl
90028cb0:	b29b      	uxth	r3, r3
90028cb2:	fb0b 6603 	mla	r6, fp, r3, r6
90028cb6:	fb00 6609 	mla	r6, r0, r9, r6
90028cba:	fb0e 6608 	mla	r6, lr, r8, r6
90028cbe:	f3c6 2607 	ubfx	r6, r6, #8, #8
90028cc2:	9600      	str	r6, [sp, #0]
90028cc4:	2e00      	cmp	r6, #0
90028cc6:	f000 80af 	beq.w	90028e28 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90028cca:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90028cce:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
90028cd2:	9e02      	ldr	r6, [sp, #8]
90028cd4:	fb0b fc0c 	mul.w	ip, fp, ip
90028cd8:	fb0b f505 	mul.w	r5, fp, r5
90028cdc:	8836      	ldrh	r6, [r6, #0]
90028cde:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90028ce2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028ce6:	9501      	str	r5, [sp, #4]
90028ce8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90028cec:	44dc      	add	ip, fp
90028cee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028cf2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
90028cf6:	9503      	str	r5, [sp, #12]
90028cf8:	9d01      	ldr	r5, [sp, #4]
90028cfa:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90028cfe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90028d02:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
90028d06:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90028d0a:	fb0a fc0c 	mul.w	ip, sl, ip
90028d0e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90028d12:	fb0a fa01 	mul.w	sl, sl, r1
90028d16:	ea4f 251c 	mov.w	r5, ip, lsr #8
90028d1a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028d1e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90028d22:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90028d26:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90028d2a:	4465      	add	r5, ip
90028d2c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90028d30:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90028d34:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90028d38:	fb09 fc0c 	mul.w	ip, r9, ip
90028d3c:	0a2d      	lsrs	r5, r5, #8
90028d3e:	fb09 f904 	mul.w	r9, r9, r4
90028d42:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90028d46:	ea4f 211c 	mov.w	r1, ip, lsr #8
90028d4a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90028d4e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90028d52:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90028d56:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90028d5a:	437d      	muls	r5, r7
90028d5c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90028d60:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90028d64:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028d68:	4461      	add	r1, ip
90028d6a:	fb08 f404 	mul.w	r4, r8, r4
90028d6e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90028d72:	fb08 f802 	mul.w	r8, r8, r2
90028d76:	0a09      	lsrs	r1, r1, #8
90028d78:	0a22      	lsrs	r2, r4, #8
90028d7a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90028d7e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90028d82:	fb07 f70a 	mul.w	r7, r7, sl
90028d86:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028d8a:	4414      	add	r4, r2
90028d8c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90028d90:	0a24      	lsrs	r4, r4, #8
90028d92:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90028d96:	9a03      	ldr	r2, [sp, #12]
90028d98:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
90028d9c:	fb02 5503 	mla	r5, r2, r3, r5
90028da0:	ea4f 2818 	mov.w	r8, r8, lsr #8
90028da4:	fb04 540e 	mla	r4, r4, lr, r5
90028da8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
90028dac:	fb01 4100 	mla	r1, r1, r0, r4
90028db0:	0a09      	lsrs	r1, r1, #8
90028db2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
90028db6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
90028dba:	fb03 7101 	mla	r1, r3, r1, r7
90028dbe:	9b00      	ldr	r3, [sp, #0]
90028dc0:	fb0e 1e08 	mla	lr, lr, r8, r1
90028dc4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90028dc8:	43da      	mvns	r2, r3
90028dca:	1233      	asrs	r3, r6, #8
90028dcc:	fb00 e101 	mla	r1, r0, r1, lr
90028dd0:	10f0      	asrs	r0, r6, #3
90028dd2:	b2d2      	uxtb	r2, r2
90028dd4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90028dd8:	0a09      	lsrs	r1, r1, #8
90028dda:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90028dde:	00f6      	lsls	r6, r6, #3
90028de0:	4353      	muls	r3, r2
90028de2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90028de6:	4350      	muls	r0, r2
90028de8:	b2f6      	uxtb	r6, r6
90028dea:	4321      	orrs	r1, r4
90028dec:	4356      	muls	r6, r2
90028dee:	1c5a      	adds	r2, r3, #1
90028df0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90028df4:	0c0b      	lsrs	r3, r1, #16
90028df6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90028dfa:	1c42      	adds	r2, r0, #1
90028dfc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90028e00:	0a0a      	lsrs	r2, r1, #8
90028e02:	021b      	lsls	r3, r3, #8
90028e04:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90028e08:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
90028e0c:	00d2      	lsls	r2, r2, #3
90028e0e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90028e12:	4313      	orrs	r3, r2
90028e14:	1c72      	adds	r2, r6, #1
90028e16:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90028e1a:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90028e1e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90028e22:	4319      	orrs	r1, r3
90028e24:	9b02      	ldr	r3, [sp, #8]
90028e26:	8019      	strh	r1, [r3, #0]
90028e28:	b005      	add	sp, #20
90028e2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90028e2e:	2500      	movs	r5, #0
90028e30:	e6fe      	b.n	90028c30 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90028e32:	2100      	movs	r1, #0
90028e34:	460d      	mov	r5, r1
90028e36:	e706      	b.n	90028c46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028e38:	2100      	movs	r1, #0
90028e3a:	e704      	b.n	90028c46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028e3c:	4631      	mov	r1, r6
90028e3e:	e702      	b.n	90028c46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90028e40:	2400      	movs	r4, #0
90028e42:	e713      	b.n	90028c6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90028e44:	2200      	movs	r2, #0
90028e46:	4614      	mov	r4, r2
90028e48:	e71a      	b.n	90028c80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028e4a:	4602      	mov	r2, r0
90028e4c:	4604      	mov	r4, r0
90028e4e:	e717      	b.n	90028c80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028e50:	2200      	movs	r2, #0
90028e52:	e715      	b.n	90028c80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90028e54:	4632      	mov	r2, r6
90028e56:	e713      	b.n	90028c80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90028e58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90028e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90028e5c:	b09b      	sub	sp, #108	@ 0x6c
90028e5e:	9218      	str	r2, [sp, #96]	@ 0x60
90028e60:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90028e62:	9019      	str	r0, [sp, #100]	@ 0x64
90028e64:	9116      	str	r1, [sp, #88]	@ 0x58
90028e66:	6850      	ldr	r0, [r2, #4]
90028e68:	9307      	str	r3, [sp, #28]
90028e6a:	6812      	ldr	r2, [r2, #0]
90028e6c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90028e70:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90028e74:	fb00 1303 	mla	r3, r0, r3, r1
90028e78:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90028e7c:	930a      	str	r3, [sp, #40]	@ 0x28
90028e7e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028e80:	681b      	ldr	r3, [r3, #0]
90028e82:	930f      	str	r3, [sp, #60]	@ 0x3c
90028e84:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90028e86:	2b00      	cmp	r3, #0
90028e88:	dc03      	bgt.n	90028e92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90028e8a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90028e8c:	2b00      	cmp	r3, #0
90028e8e:	f340 8387 	ble.w	900295a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90028e92:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028e94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90028e98:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90028e9c:	1e48      	subs	r0, r1, #1
90028e9e:	1e57      	subs	r7, r2, #1
90028ea0:	9b07      	ldr	r3, [sp, #28]
90028ea2:	2b00      	cmp	r3, #0
90028ea4:	f340 8166 	ble.w	90029174 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90028ea8:	ea5f 4c24 	movs.w	ip, r4, asr #16
90028eac:	ea4f 4326 	mov.w	r3, r6, asr #16
90028eb0:	d406      	bmi.n	90028ec0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90028eb2:	4584      	cmp	ip, r0
90028eb4:	da04      	bge.n	90028ec0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90028eb6:	2b00      	cmp	r3, #0
90028eb8:	db02      	blt.n	90028ec0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90028eba:	42bb      	cmp	r3, r7
90028ebc:	f2c0 815b 	blt.w	90029176 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90028ec0:	f11c 0c01 	adds.w	ip, ip, #1
90028ec4:	f100 814b 	bmi.w	9002915e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90028ec8:	4561      	cmp	r1, ip
90028eca:	f2c0 8148 	blt.w	9002915e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90028ece:	3301      	adds	r3, #1
90028ed0:	f100 8145 	bmi.w	9002915e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90028ed4:	429a      	cmp	r2, r3
90028ed6:	f2c0 8142 	blt.w	9002915e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90028eda:	9b07      	ldr	r3, [sp, #28]
90028edc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90028ede:	9317      	str	r3, [sp, #92]	@ 0x5c
90028ee0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90028ee2:	2b00      	cmp	r3, #0
90028ee4:	f340 8165 	ble.w	900291b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90028ee8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
90028eea:	ea4f 4c26 	mov.w	ip, r6, asr #16
90028eee:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90028ef0:	f3c4 3103 	ubfx	r1, r4, #12, #4
90028ef4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90028ef8:	1422      	asrs	r2, r4, #16
90028efa:	f3c6 3003 	ubfx	r0, r6, #12, #4
90028efe:	689b      	ldr	r3, [r3, #8]
90028f00:	f100 81d5 	bmi.w	900292ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028f04:	f103 38ff 	add.w	r8, r3, #4294967295
90028f08:	4542      	cmp	r2, r8
90028f0a:	f280 81d0 	bge.w	900292ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028f0e:	f1bc 0f00 	cmp.w	ip, #0
90028f12:	f2c0 81cc 	blt.w	900292ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028f16:	f10e 38ff 	add.w	r8, lr, #4294967295
90028f1a:	45c4      	cmp	ip, r8
90028f1c:	f280 81c7 	bge.w	900292ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90028f20:	b21b      	sxth	r3, r3
90028f22:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90028f24:	fb0c 2203 	mla	r2, ip, r3, r2
90028f28:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90028f2c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90028f30:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90028f34:	2900      	cmp	r1, #0
90028f36:	f000 8182 	beq.w	9002923e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90028f3a:	f8d8 5004 	ldr.w	r5, [r8, #4]
90028f3e:	950b      	str	r5, [sp, #44]	@ 0x2c
90028f40:	0e2d      	lsrs	r5, r5, #24
90028f42:	9512      	str	r5, [sp, #72]	@ 0x48
90028f44:	b180      	cbz	r0, 90028f68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90028f46:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90028f4a:	3b01      	subs	r3, #1
90028f4c:	009b      	lsls	r3, r3, #2
90028f4e:	3304      	adds	r3, #4
90028f50:	eb08 0c03 	add.w	ip, r8, r3
90028f54:	f858 3003 	ldr.w	r3, [r8, r3]
90028f58:	9308      	str	r3, [sp, #32]
90028f5a:	0e1b      	lsrs	r3, r3, #24
90028f5c:	9310      	str	r3, [sp, #64]	@ 0x40
90028f5e:	f8dc 3004 	ldr.w	r3, [ip, #4]
90028f62:	930c      	str	r3, [sp, #48]	@ 0x30
90028f64:	0e1b      	lsrs	r3, r3, #24
90028f66:	9313      	str	r3, [sp, #76]	@ 0x4c
90028f68:	b289      	uxth	r1, r1
90028f6a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90028f6c:	b280      	uxth	r0, r0
90028f6e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90028f70:	fb01 f900 	mul.w	r9, r1, r0
90028f74:	0109      	lsls	r1, r1, #4
90028f76:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90028f7a:	eba1 0809 	sub.w	r8, r1, r9
90028f7e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90028f82:	b280      	uxth	r0, r0
90028f84:	fa1f f888 	uxth.w	r8, r8
90028f88:	1a09      	subs	r1, r1, r0
90028f8a:	fb08 f303 	mul.w	r3, r8, r3
90028f8e:	b289      	uxth	r1, r1
90028f90:	fb01 330e 	mla	r3, r1, lr, r3
90028f94:	fb00 3305 	mla	r3, r0, r5, r3
90028f98:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90028f9a:	fb09 3305 	mla	r3, r9, r5, r3
90028f9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90028fa2:	2b00      	cmp	r3, #0
90028fa4:	f000 80d2 	beq.w	9002914c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90028fa8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90028fac:	d01b      	beq.n	90028fe6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90028fae:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90028fb2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90028fb6:	fb0e fa0a 	mul.w	sl, lr, sl
90028fba:	fb0e fe02 	mul.w	lr, lr, r2
90028fbe:	ea4f 221a 	mov.w	r2, sl, lsr #8
90028fc2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90028fc6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90028fca:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028fce:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90028fd2:	4452      	add	r2, sl
90028fd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90028fd8:	0a12      	lsrs	r2, r2, #8
90028fda:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90028fde:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90028fe2:	ea42 020c 	orr.w	r2, r2, ip
90028fe6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028fe8:	2dff      	cmp	r5, #255	@ 0xff
90028fea:	d021      	beq.n	90029030 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90028fec:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028fee:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90028ff2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90028ff4:	fb05 fb0b 	mul.w	fp, r5, fp
90028ff8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90028ffa:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90028ffe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029000:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90029004:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90029008:	fb05 fa0a 	mul.w	sl, r5, sl
9002900c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90029010:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90029014:	44de      	add	lr, fp
90029016:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002901a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002901e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029022:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90029026:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002902a:	ea4e 050a 	orr.w	r5, lr, sl
9002902e:	950b      	str	r5, [sp, #44]	@ 0x2c
90029030:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90029032:	2dff      	cmp	r5, #255	@ 0xff
90029034:	d021      	beq.n	9002907a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90029036:	9d08      	ldr	r5, [sp, #32]
90029038:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002903c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002903e:	fb05 fb0b 	mul.w	fp, r5, fp
90029042:	9d08      	ldr	r5, [sp, #32]
90029044:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90029048:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002904a:	fb05 fa0e 	mul.w	sl, r5, lr
9002904e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90029052:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90029056:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002905a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002905e:	44de      	add	lr, fp
90029060:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90029064:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90029068:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002906c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90029070:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029074:	ea4e 050a 	orr.w	r5, lr, sl
90029078:	9508      	str	r5, [sp, #32]
9002907a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002907c:	2dff      	cmp	r5, #255	@ 0xff
9002907e:	d021      	beq.n	900290c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90029080:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90029082:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90029086:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90029088:	fb05 fb0b 	mul.w	fp, r5, fp
9002908c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002908e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90029092:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90029094:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90029098:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002909c:	fb05 fa0a 	mul.w	sl, r5, sl
900290a0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900290a4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900290a8:	44de      	add	lr, fp
900290aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900290ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900290b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900290b6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900290ba:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900290be:	ea4e 050a 	orr.w	r5, lr, sl
900290c2:	950c      	str	r5, [sp, #48]	@ 0x30
900290c4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900290c6:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
900290ca:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900290ce:	2bff      	cmp	r3, #255	@ 0xff
900290d0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900290d4:	9d08      	ldr	r5, [sp, #32]
900290d6:	fb08 fc0c 	mul.w	ip, r8, ip
900290da:	fb01 cc0e 	mla	ip, r1, lr, ip
900290de:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900290e2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900290e4:	fb00 cc0e 	mla	ip, r0, lr, ip
900290e8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900290ec:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900290ee:	fb09 cc0e 	mla	ip, r9, lr, ip
900290f2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900290f6:	fb08 f80e 	mul.w	r8, r8, lr
900290fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900290fe:	fb01 8202 	mla	r2, r1, r2, r8
90029102:	9908      	ldr	r1, [sp, #32]
90029104:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029108:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
9002910c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9002910e:	fb00 220a 	mla	r2, r0, sl, r2
90029112:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90029116:	fb09 2900 	mla	r9, r9, r0, r2
9002911a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002911e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90029122:	ea4c 0c09 	orr.w	ip, ip, r9
90029126:	ea4f 221c 	mov.w	r2, ip, lsr #8
9002912a:	f040 8091 	bne.w	90029250 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002912e:	ea4f 135c 	mov.w	r3, ip, lsr #5
90029132:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90029136:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002913a:	f022 0207 	bic.w	r2, r2, #7
9002913e:	431a      	orrs	r2, r3
90029140:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90029144:	ea4c 0c02 	orr.w	ip, ip, r2
90029148:	f8a7 c000 	strh.w	ip, [r7]
9002914c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002914e:	3702      	adds	r7, #2
90029150:	441c      	add	r4, r3
90029152:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029154:	441e      	add	r6, r3
90029156:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90029158:	3b01      	subs	r3, #1
9002915a:	9317      	str	r3, [sp, #92]	@ 0x5c
9002915c:	e6c0      	b.n	90028ee0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
9002915e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90029160:	441c      	add	r4, r3
90029162:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029164:	441e      	add	r6, r3
90029166:	9b07      	ldr	r3, [sp, #28]
90029168:	3b01      	subs	r3, #1
9002916a:	9307      	str	r3, [sp, #28]
9002916c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002916e:	3302      	adds	r3, #2
90029170:	930a      	str	r3, [sp, #40]	@ 0x28
90029172:	e695      	b.n	90028ea0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90029174:	d024      	beq.n	900291c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90029176:	9b07      	ldr	r3, [sp, #28]
90029178:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002917a:	3b01      	subs	r3, #1
9002917c:	fb00 4003 	mla	r0, r0, r3, r4
90029180:	1400      	asrs	r0, r0, #16
90029182:	f53f aeaa 	bmi.w	90028eda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90029186:	3901      	subs	r1, #1
90029188:	4288      	cmp	r0, r1
9002918a:	f6bf aea6 	bge.w	90028eda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002918e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90029190:	fb01 6303 	mla	r3, r1, r3, r6
90029194:	141b      	asrs	r3, r3, #16
90029196:	f53f aea0 	bmi.w	90028eda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002919a:	3a01      	subs	r2, #1
9002919c:	4293      	cmp	r3, r2
9002919e:	f6bf ae9c 	bge.w	90028eda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
900291a2:	f8dd b01c 	ldr.w	fp, [sp, #28]
900291a6:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
900291aa:	f1bb 0f00 	cmp.w	fp, #0
900291ae:	f300 809a 	bgt.w	900292e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900291b2:	9b07      	ldr	r3, [sp, #28]
900291b4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900291b8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900291ba:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900291be:	930a      	str	r3, [sp, #40]	@ 0x28
900291c0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900291c2:	2b00      	cmp	r3, #0
900291c4:	f340 81ec 	ble.w	900295a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900291c8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900291cc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900291ce:	ee30 0a04 	vadd.f32	s0, s0, s8
900291d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900291d6:	eef0 6a62 	vmov.f32	s13, s5
900291da:	eec7 7a00 	vdiv.f32	s15, s14, s0
900291de:	ee31 1a05 	vadd.f32	s2, s2, s10
900291e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900291e6:	ee16 4a90 	vmov	r4, s13
900291ea:	eef0 6a43 	vmov.f32	s13, s6
900291ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900291f2:	ee16 6a90 	vmov	r6, s13
900291f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900291fa:	ee61 7a27 	vmul.f32	s15, s2, s15
900291fe:	ee77 2a62 	vsub.f32	s5, s14, s5
90029202:	ee37 3ac3 	vsub.f32	s6, s15, s6
90029206:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002920a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002920e:	ee12 2a90 	vmov	r2, s5
90029212:	eef0 2a47 	vmov.f32	s5, s14
90029216:	fb92 f3f3 	sdiv	r3, r2, r3
9002921a:	ee13 2a10 	vmov	r2, s6
9002921e:	9327      	str	r3, [sp, #156]	@ 0x9c
90029220:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029222:	eeb0 3a67 	vmov.f32	s6, s15
90029226:	fb92 f3f3 	sdiv	r3, r2, r3
9002922a:	9328      	str	r3, [sp, #160]	@ 0xa0
9002922c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002922e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90029230:	3b01      	subs	r3, #1
90029232:	9316      	str	r3, [sp, #88]	@ 0x58
90029234:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029236:	bf08      	it	eq
90029238:	4613      	moveq	r3, r2
9002923a:	9307      	str	r3, [sp, #28]
9002923c:	e622      	b.n	90028e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
9002923e:	2800      	cmp	r0, #0
90029240:	f43f ae92 	beq.w	90028f68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90029244:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90029248:	9308      	str	r3, [sp, #32]
9002924a:	0e1b      	lsrs	r3, r3, #24
9002924c:	9310      	str	r3, [sp, #64]	@ 0x40
9002924e:	e68b      	b.n	90028f68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90029250:	8839      	ldrh	r1, [r7, #0]
90029252:	43db      	mvns	r3, r3
90029254:	4dd4      	ldr	r5, [pc, #848]	@ (900295a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90029256:	ea4f 2e21 	mov.w	lr, r1, asr #8
9002925a:	fa5f f883 	uxtb.w	r8, r3
9002925e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90029262:	10c8      	asrs	r0, r1, #3
90029264:	00cb      	lsls	r3, r1, #3
90029266:	fb0e fe08 	mul.w	lr, lr, r8
9002926a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002926e:	b2db      	uxtb	r3, r3
90029270:	f10e 0101 	add.w	r1, lr, #1
90029274:	fb00 f008 	mul.w	r0, r0, r8
90029278:	fb03 f308 	mul.w	r3, r3, r8
9002927c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90029280:	ea4f 411c 	mov.w	r1, ip, lsr #16
90029284:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90029288:	f100 0e01 	add.w	lr, r0, #1
9002928c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90029290:	b2c9      	uxtb	r1, r1
90029292:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90029296:	ea05 2101 	and.w	r1, r5, r1, lsl #8
9002929a:	00d2      	lsls	r2, r2, #3
9002929c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900292a0:	430a      	orrs	r2, r1
900292a2:	1c59      	adds	r1, r3, #1
900292a4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900292a8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
900292ac:	e748      	b.n	90029140 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900292ae:	f112 0801 	adds.w	r8, r2, #1
900292b2:	f53f af4b 	bmi.w	9002914c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900292b6:	4543      	cmp	r3, r8
900292b8:	f6ff af48 	blt.w	9002914c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900292bc:	f11c 0801 	adds.w	r8, ip, #1
900292c0:	f53f af44 	bmi.w	9002914c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900292c4:	45c6      	cmp	lr, r8
900292c6:	f6ff af41 	blt.w	9002914c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900292ca:	b21b      	sxth	r3, r3
900292cc:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900292d0:	fa0f f28e 	sxth.w	r2, lr
900292d4:	e9cd 1003 	strd	r1, r0, [sp, #12]
900292d8:	9200      	str	r2, [sp, #0]
900292da:	4639      	mov	r1, r7
900292dc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900292de:	9819      	ldr	r0, [sp, #100]	@ 0x64
900292e0:	f7ff fc88 	bl	90028bf4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900292e4:	e732      	b.n	9002914c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900292e6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900292e8:	1421      	asrs	r1, r4, #16
900292ea:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900292ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
900292f0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
900292f4:	1433      	asrs	r3, r6, #16
900292f6:	f3c6 3003 	ubfx	r0, r6, #12, #4
900292fa:	fb07 1303 	mla	r3, r7, r3, r1
900292fe:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90029300:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90029304:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90029308:	ea4f 6c13 	mov.w	ip, r3, lsr #24
9002930c:	2a00      	cmp	r2, #0
9002930e:	f000 8108 	beq.w	90029522 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90029312:	684d      	ldr	r5, [r1, #4]
90029314:	950d      	str	r5, [sp, #52]	@ 0x34
90029316:	0e2d      	lsrs	r5, r5, #24
90029318:	9514      	str	r5, [sp, #80]	@ 0x50
9002931a:	b178      	cbz	r0, 9002933c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002931c:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90029320:	3f01      	subs	r7, #1
90029322:	00bf      	lsls	r7, r7, #2
90029324:	3704      	adds	r7, #4
90029326:	eb01 0e07 	add.w	lr, r1, r7
9002932a:	59c9      	ldr	r1, [r1, r7]
9002932c:	9109      	str	r1, [sp, #36]	@ 0x24
9002932e:	0e09      	lsrs	r1, r1, #24
90029330:	9111      	str	r1, [sp, #68]	@ 0x44
90029332:	f8de 1004 	ldr.w	r1, [lr, #4]
90029336:	910e      	str	r1, [sp, #56]	@ 0x38
90029338:	0e09      	lsrs	r1, r1, #24
9002933a:	9115      	str	r1, [sp, #84]	@ 0x54
9002933c:	b292      	uxth	r2, r2
9002933e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90029340:	b280      	uxth	r0, r0
90029342:	fb02 f900 	mul.w	r9, r2, r0
90029346:	0112      	lsls	r2, r2, #4
90029348:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002934c:	eba2 0e09 	sub.w	lr, r2, r9
90029350:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90029354:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90029356:	b280      	uxth	r0, r0
90029358:	fa1f fe8e 	uxth.w	lr, lr
9002935c:	1a09      	subs	r1, r1, r0
9002935e:	fb0e f202 	mul.w	r2, lr, r2
90029362:	b289      	uxth	r1, r1
90029364:	fb01 220c 	mla	r2, r1, ip, r2
90029368:	fb00 2205 	mla	r2, r0, r5, r2
9002936c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002936e:	fb09 2205 	mla	r2, r9, r5, r2
90029372:	f3c2 2207 	ubfx	r2, r2, #8, #8
90029376:	2a00      	cmp	r2, #0
90029378:	f000 80ca 	beq.w	90029510 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
9002937c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90029380:	d019      	beq.n	900293b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90029382:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90029386:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002938a:	fb0c fa0a 	mul.w	sl, ip, sl
9002938e:	fb0c fc03 	mul.w	ip, ip, r3
90029392:	ea4f 231a 	mov.w	r3, sl, lsr #8
90029396:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002939a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002939e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900293a2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900293a6:	4453      	add	r3, sl
900293a8:	0a3f      	lsrs	r7, r7, #8
900293aa:	0a1b      	lsrs	r3, r3, #8
900293ac:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900293b0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900293b4:	433b      	orrs	r3, r7
900293b6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900293b8:	2dff      	cmp	r5, #255	@ 0xff
900293ba:	d020      	beq.n	900293fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
900293bc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900293be:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900293c2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900293c4:	436f      	muls	r7, r5
900293c6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900293c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900293cc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900293d0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900293d2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900293d6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900293da:	fb05 fa0a 	mul.w	sl, r5, sl
900293de:	44bc      	add	ip, r7
900293e0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900293e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900293e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900293ec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900293f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900293f4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900293f8:	ea4c 050a 	orr.w	r5, ip, sl
900293fc:	950d      	str	r5, [sp, #52]	@ 0x34
900293fe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90029400:	2dff      	cmp	r5, #255	@ 0xff
90029402:	d020      	beq.n	90029446 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90029404:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90029406:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002940a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002940c:	436f      	muls	r7, r5
9002940e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90029410:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90029414:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90029416:	fb05 fa0c 	mul.w	sl, r5, ip
9002941a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002941e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90029422:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029426:	44bc      	add	ip, r7
90029428:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002942c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90029430:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029434:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029438:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002943c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029440:	ea4c 050a 	orr.w	r5, ip, sl
90029444:	9509      	str	r5, [sp, #36]	@ 0x24
90029446:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90029448:	2dff      	cmp	r5, #255	@ 0xff
9002944a:	d020      	beq.n	9002948e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
9002944c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002944e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90029452:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90029454:	436f      	muls	r7, r5
90029456:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90029458:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002945c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90029460:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90029462:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90029466:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002946a:	fb05 fa0a 	mul.w	sl, r5, sl
9002946e:	44bc      	add	ip, r7
90029470:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90029474:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90029478:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002947c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90029480:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90029484:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90029488:	ea4c 050a 	orr.w	r5, ip, sl
9002948c:	950e      	str	r5, [sp, #56]	@ 0x38
9002948e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90029490:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90029494:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90029498:	2aff      	cmp	r2, #255	@ 0xff
9002949a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002949e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900294a0:	fb0e f707 	mul.w	r7, lr, r7
900294a4:	fb01 770c 	mla	r7, r1, ip, r7
900294a8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900294ac:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900294ae:	fb00 770c 	mla	r7, r0, ip, r7
900294b2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900294b6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900294b8:	fb09 770c 	mla	r7, r9, ip, r7
900294bc:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
900294c0:	fb0e fe0c 	mul.w	lr, lr, ip
900294c4:	ea4f 2717 	mov.w	r7, r7, lsr #8
900294c8:	fb01 e303 	mla	r3, r1, r3, lr
900294cc:	9909      	ldr	r1, [sp, #36]	@ 0x24
900294ce:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900294d2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900294d6:	990e      	ldr	r1, [sp, #56]	@ 0x38
900294d8:	fb00 330a 	mla	r3, r0, sl, r3
900294dc:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900294e0:	fb09 3c0c 	mla	ip, r9, ip, r3
900294e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900294e8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900294ec:	ea47 070c 	orr.w	r7, r7, ip
900294f0:	ea4f 2317 	mov.w	r3, r7, lsr #8
900294f4:	d11e      	bne.n	90029534 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
900294f6:	097a      	lsrs	r2, r7, #5
900294f8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
900294fc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90029500:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90029504:	f023 0307 	bic.w	r3, r3, #7
90029508:	4313      	orrs	r3, r2
9002950a:	431f      	orrs	r7, r3
9002950c:	f8a8 7000 	strh.w	r7, [r8]
90029510:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90029512:	f108 0802 	add.w	r8, r8, #2
90029516:	f10b 3bff 	add.w	fp, fp, #4294967295
9002951a:	441c      	add	r4, r3
9002951c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002951e:	441e      	add	r6, r3
90029520:	e643      	b.n	900291aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90029522:	2800      	cmp	r0, #0
90029524:	f43f af0a 	beq.w	9002933c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90029528:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
9002952c:	9109      	str	r1, [sp, #36]	@ 0x24
9002952e:	0e09      	lsrs	r1, r1, #24
90029530:	9111      	str	r1, [sp, #68]	@ 0x44
90029532:	e703      	b.n	9002933c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90029534:	f8b8 1000 	ldrh.w	r1, [r8]
90029538:	43d2      	mvns	r2, r2
9002953a:	ea4f 2c21 	mov.w	ip, r1, asr #8
9002953e:	fa5f fe82 	uxtb.w	lr, r2
90029542:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90029546:	10c8      	asrs	r0, r1, #3
90029548:	00ca      	lsls	r2, r1, #3
9002954a:	fb0c fc0e 	mul.w	ip, ip, lr
9002954e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029552:	b2d2      	uxtb	r2, r2
90029554:	f10c 0101 	add.w	r1, ip, #1
90029558:	fb00 f00e 	mul.w	r0, r0, lr
9002955c:	fb02 f20e 	mul.w	r2, r2, lr
90029560:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90029564:	0c39      	lsrs	r1, r7, #16
90029566:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002956a:	490f      	ldr	r1, [pc, #60]	@ (900295a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
9002956c:	fa5f fc8c 	uxtb.w	ip, ip
90029570:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90029574:	1c41      	adds	r1, r0, #1
90029576:	eb01 2010 	add.w	r0, r1, r0, lsr #8
9002957a:	1c51      	adds	r1, r2, #1
9002957c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90029580:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90029584:	00c0      	lsls	r0, r0, #3
90029586:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9002958a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002958e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90029592:	ea4c 0c00 	orr.w	ip, ip, r0
90029596:	ea47 0c0c 	orr.w	ip, r7, ip
9002959a:	f8a8 c000 	strh.w	ip, [r8]
9002959e:	e7b7      	b.n	90029510 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900295a0:	b01b      	add	sp, #108	@ 0x6c
900295a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900295a6:	bf00      	nop
900295a8:	fffff800 	.word	0xfffff800

900295ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
900295ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900295b0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900295b4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900295b8:	2d00      	cmp	r5, #0
900295ba:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900295be:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900295c2:	fb05 0e03 	mla	lr, r5, r3, r0
900295c6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900295ca:	f2c0 808c 	blt.w	900296e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900295ce:	45a9      	cmp	r9, r5
900295d0:	f340 8089 	ble.w	900296e6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
900295d4:	2800      	cmp	r0, #0
900295d6:	f2c0 8084 	blt.w	900296e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900295da:	4580      	cmp	r8, r0
900295dc:	f340 8081 	ble.w	900296e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
900295e0:	ea4f 045e 	mov.w	r4, lr, lsr #1
900295e4:	f01e 0f01 	tst.w	lr, #1
900295e8:	5d16      	ldrb	r6, [r2, r4]
900295ea:	bf0c      	ite	eq
900295ec:	f006 060f 	andeq.w	r6, r6, #15
900295f0:	1136      	asrne	r6, r6, #4
900295f2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900295f6:	b2f6      	uxtb	r6, r6
900295f8:	1c44      	adds	r4, r0, #1
900295fa:	d477      	bmi.n	900296ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900295fc:	45a0      	cmp	r8, r4
900295fe:	dd75      	ble.n	900296ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90029600:	2f00      	cmp	r7, #0
90029602:	d075      	beq.n	900296f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90029604:	f10e 0a01 	add.w	sl, lr, #1
90029608:	ea4f 045a 	mov.w	r4, sl, lsr #1
9002960c:	f01a 0f01 	tst.w	sl, #1
90029610:	5d14      	ldrb	r4, [r2, r4]
90029612:	bf0c      	ite	eq
90029614:	f004 040f 	andeq.w	r4, r4, #15
90029618:	1124      	asrne	r4, r4, #4
9002961a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9002961e:	b2e4      	uxtb	r4, r4
90029620:	3501      	adds	r5, #1
90029622:	d469      	bmi.n	900296f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90029624:	45a9      	cmp	r9, r5
90029626:	dd67      	ble.n	900296f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90029628:	f1bc 0f00 	cmp.w	ip, #0
9002962c:	d067      	beq.n	900296fe <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
9002962e:	2800      	cmp	r0, #0
90029630:	db60      	blt.n	900296f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90029632:	4580      	cmp	r8, r0
90029634:	dd5e      	ble.n	900296f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90029636:	eb03 090e 	add.w	r9, r3, lr
9002963a:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002963e:	f019 0f01 	tst.w	r9, #1
90029642:	5d55      	ldrb	r5, [r2, r5]
90029644:	bf0c      	ite	eq
90029646:	f005 050f 	andeq.w	r5, r5, #15
9002964a:	112d      	asrne	r5, r5, #4
9002964c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90029650:	b2ed      	uxtb	r5, r5
90029652:	3001      	adds	r0, #1
90029654:	d456      	bmi.n	90029704 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90029656:	4580      	cmp	r8, r0
90029658:	dd54      	ble.n	90029704 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002965a:	2f00      	cmp	r7, #0
9002965c:	d054      	beq.n	90029708 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
9002965e:	3301      	adds	r3, #1
90029660:	449e      	add	lr, r3
90029662:	ea4f 035e 	mov.w	r3, lr, lsr #1
90029666:	f01e 0f01 	tst.w	lr, #1
9002966a:	5cd0      	ldrb	r0, [r2, r3]
9002966c:	bf0c      	ite	eq
9002966e:	f000 000f 	andeq.w	r0, r0, #15
90029672:	1100      	asrne	r0, r0, #4
90029674:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029678:	b2c3      	uxtb	r3, r0
9002967a:	b2ba      	uxth	r2, r7
9002967c:	fa1f fc8c 	uxth.w	ip, ip
90029680:	fb02 f00c 	mul.w	r0, r2, ip
90029684:	0112      	lsls	r2, r2, #4
90029686:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002968a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
9002968e:	1a12      	subs	r2, r2, r0
90029690:	fa1f fc8c 	uxth.w	ip, ip
90029694:	b292      	uxth	r2, r2
90029696:	eba7 070c 	sub.w	r7, r7, ip
9002969a:	4362      	muls	r2, r4
9002969c:	b2bf      	uxth	r7, r7
9002969e:	fb06 2207 	mla	r2, r6, r7, r2
900296a2:	fb0c 2505 	mla	r5, ip, r5, r2
900296a6:	fb00 5303 	mla	r3, r0, r3, r5
900296aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
900296ae:	b1b3      	cbz	r3, 900296de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900296b0:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
900296b4:	435a      	muls	r2, r3
900296b6:	1c53      	adds	r3, r2, #1
900296b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900296bc:	4a2d      	ldr	r2, [pc, #180]	@ (90029774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
900296be:	121b      	asrs	r3, r3, #8
900296c0:	6812      	ldr	r2, [r2, #0]
900296c2:	2bff      	cmp	r3, #255	@ 0xff
900296c4:	ea4f 2612 	mov.w	r6, r2, lsr #8
900296c8:	d120      	bne.n	9002970c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
900296ca:	0950      	lsrs	r0, r2, #5
900296cc:	4b2a      	ldr	r3, [pc, #168]	@ (90029778 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
900296ce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900296d2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900296d6:	4033      	ands	r3, r6
900296d8:	4318      	orrs	r0, r3
900296da:	4302      	orrs	r2, r0
900296dc:	800a      	strh	r2, [r1, #0]
900296de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900296e2:	2600      	movs	r6, #0
900296e4:	e788      	b.n	900295f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
900296e6:	2400      	movs	r4, #0
900296e8:	4626      	mov	r6, r4
900296ea:	e799      	b.n	90029620 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900296ec:	2400      	movs	r4, #0
900296ee:	e797      	b.n	90029620 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900296f0:	463c      	mov	r4, r7
900296f2:	e795      	b.n	90029620 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900296f4:	2500      	movs	r5, #0
900296f6:	e7ac      	b.n	90029652 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
900296f8:	2300      	movs	r3, #0
900296fa:	461d      	mov	r5, r3
900296fc:	e7bd      	b.n	9002967a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900296fe:	4663      	mov	r3, ip
90029700:	4665      	mov	r5, ip
90029702:	e7ba      	b.n	9002967a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90029704:	2300      	movs	r3, #0
90029706:	e7b8      	b.n	9002967a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90029708:	463b      	mov	r3, r7
9002970a:	e7b6      	b.n	9002967a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002970c:	880d      	ldrh	r5, [r1, #0]
9002970e:	b29f      	uxth	r7, r3
90029710:	f3c2 4007 	ubfx	r0, r2, #16, #8
90029714:	43db      	mvns	r3, r3
90029716:	122c      	asrs	r4, r5, #8
90029718:	fb10 f007 	smulbb	r0, r0, r7
9002971c:	b2db      	uxtb	r3, r3
9002971e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029722:	b2f6      	uxtb	r6, r6
90029724:	b2d2      	uxtb	r2, r2
90029726:	fb04 0403 	mla	r4, r4, r3, r0
9002972a:	10e8      	asrs	r0, r5, #3
9002972c:	fb12 f207 	smulbb	r2, r2, r7
90029730:	00ed      	lsls	r5, r5, #3
90029732:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029736:	b2a4      	uxth	r4, r4
90029738:	fb16 f607 	smulbb	r6, r6, r7
9002973c:	b2ed      	uxtb	r5, r5
9002973e:	fb00 6603 	mla	r6, r0, r3, r6
90029742:	fb05 2303 	mla	r3, r5, r3, r2
90029746:	b2b0      	uxth	r0, r6
90029748:	b29a      	uxth	r2, r3
9002974a:	1c63      	adds	r3, r4, #1
9002974c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90029750:	1c53      	adds	r3, r2, #1
90029752:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90029756:	1c42      	adds	r2, r0, #1
90029758:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002975c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90029760:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90029764:	0940      	lsrs	r0, r0, #5
90029766:	4323      	orrs	r3, r4
90029768:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002976c:	4303      	orrs	r3, r0
9002976e:	800b      	strh	r3, [r1, #0]
90029770:	e7b5      	b.n	900296de <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90029772:	bf00      	nop
90029774:	240245a8 	.word	0x240245a8
90029778:	00fff800 	.word	0x00fff800

9002977c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002977c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029780:	b097      	sub	sp, #92	@ 0x5c
90029782:	9214      	str	r2, [sp, #80]	@ 0x50
90029784:	9309      	str	r3, [sp, #36]	@ 0x24
90029786:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90029788:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
9002978c:	9015      	str	r0, [sp, #84]	@ 0x54
9002978e:	910d      	str	r1, [sp, #52]	@ 0x34
90029790:	6850      	ldr	r0, [r2, #4]
90029792:	930f      	str	r3, [sp, #60]	@ 0x3c
90029794:	6812      	ldr	r2, [r2, #0]
90029796:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
9002979a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
9002979e:	fb00 1303 	mla	r3, r0, r3, r1
900297a2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900297a6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900297a8:	689b      	ldr	r3, [r3, #8]
900297aa:	3301      	adds	r3, #1
900297ac:	f023 0301 	bic.w	r3, r3, #1
900297b0:	930a      	str	r3, [sp, #40]	@ 0x28
900297b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900297b4:	681f      	ldr	r7, [r3, #0]
900297b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900297b8:	2b00      	cmp	r3, #0
900297ba:	dc03      	bgt.n	900297c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900297bc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
900297be:	2b00      	cmp	r3, #0
900297c0:	f340 8289 	ble.w	90029cd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900297c4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900297c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900297ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900297ce:	1e48      	subs	r0, r1, #1
900297d0:	f102 3cff 	add.w	ip, r2, #4294967295
900297d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900297d6:	2b00      	cmp	r3, #0
900297d8:	f340 80c5 	ble.w	90029966 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
900297dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
900297e0:	ea4f 4326 	mov.w	r3, r6, asr #16
900297e4:	d406      	bmi.n	900297f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900297e6:	4586      	cmp	lr, r0
900297e8:	da04      	bge.n	900297f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900297ea:	2b00      	cmp	r3, #0
900297ec:	db02      	blt.n	900297f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900297ee:	4563      	cmp	r3, ip
900297f0:	f2c0 80ba 	blt.w	90029968 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900297f4:	f11e 0e01 	adds.w	lr, lr, #1
900297f8:	f100 80ab 	bmi.w	90029952 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900297fc:	4571      	cmp	r1, lr
900297fe:	f2c0 80a8 	blt.w	90029952 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90029802:	3301      	adds	r3, #1
90029804:	f100 80a5 	bmi.w	90029952 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90029808:	429a      	cmp	r2, r3
9002980a:	f2c0 80a2 	blt.w	90029952 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002980e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029810:	46c8      	mov	r8, r9
90029812:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90029816:	930e      	str	r3, [sp, #56]	@ 0x38
90029818:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002981a:	2b00      	cmp	r3, #0
9002981c:	f340 80c4 	ble.w	900299a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90029820:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90029822:	1430      	asrs	r0, r6, #16
90029824:	f3c4 3203 	ubfx	r2, r4, #12, #4
90029828:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002982c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90029830:	1423      	asrs	r3, r4, #16
90029832:	f100 814f 	bmi.w	90029ad4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029836:	f10c 3bff 	add.w	fp, ip, #4294967295
9002983a:	455b      	cmp	r3, fp
9002983c:	f280 814a 	bge.w	90029ad4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029840:	2800      	cmp	r0, #0
90029842:	f2c0 8147 	blt.w	90029ad4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029846:	f10e 3bff 	add.w	fp, lr, #4294967295
9002984a:	4558      	cmp	r0, fp
9002984c:	f280 8142 	bge.w	90029ad4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90029850:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90029852:	fb00 3305 	mla	r3, r0, r5, r3
90029856:	0858      	lsrs	r0, r3, #1
90029858:	07dd      	lsls	r5, r3, #31
9002985a:	f817 c000 	ldrb.w	ip, [r7, r0]
9002985e:	bf54      	ite	pl
90029860:	f00c 0c0f 	andpl.w	ip, ip, #15
90029864:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029868:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002986c:	fa5f fc8c 	uxtb.w	ip, ip
90029870:	2a00      	cmp	r2, #0
90029872:	f000 80dd 	beq.w	90029a30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90029876:	1c58      	adds	r0, r3, #1
90029878:	ea4f 0e50 	mov.w	lr, r0, lsr #1
9002987c:	07c0      	lsls	r0, r0, #31
9002987e:	f817 e00e 	ldrb.w	lr, [r7, lr]
90029882:	bf54      	ite	pl
90029884:	f00e 0e0f 	andpl.w	lr, lr, #15
90029888:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
9002988c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90029890:	fa5f f08e 	uxtb.w	r0, lr
90029894:	9010      	str	r0, [sp, #64]	@ 0x40
90029896:	b1d9      	cbz	r1, 900298d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029898:	4453      	add	r3, sl
9002989a:	0858      	lsrs	r0, r3, #1
9002989c:	07dd      	lsls	r5, r3, #31
9002989e:	f103 0301 	add.w	r3, r3, #1
900298a2:	5c38      	ldrb	r0, [r7, r0]
900298a4:	bf54      	ite	pl
900298a6:	f000 000f 	andpl.w	r0, r0, #15
900298aa:	1100      	asrmi	r0, r0, #4
900298ac:	07dd      	lsls	r5, r3, #31
900298ae:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900298b2:	b2c0      	uxtb	r0, r0
900298b4:	900b      	str	r0, [sp, #44]	@ 0x2c
900298b6:	ea4f 0053 	mov.w	r0, r3, lsr #1
900298ba:	f817 e000 	ldrb.w	lr, [r7, r0]
900298be:	bf54      	ite	pl
900298c0:	f00e 030f 	andpl.w	r3, lr, #15
900298c4:	ea4f 132e 	movmi.w	r3, lr, asr #4
900298c8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900298cc:	b2db      	uxtb	r3, r3
900298ce:	9311      	str	r3, [sp, #68]	@ 0x44
900298d0:	b292      	uxth	r2, r2
900298d2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
900298d4:	b289      	uxth	r1, r1
900298d6:	fb02 f301 	mul.w	r3, r2, r1
900298da:	0112      	lsls	r2, r2, #4
900298dc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900298e0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900298e4:	1ad2      	subs	r2, r2, r3
900298e6:	b289      	uxth	r1, r1
900298e8:	b292      	uxth	r2, r2
900298ea:	1a40      	subs	r0, r0, r1
900298ec:	436a      	muls	r2, r5
900298ee:	b280      	uxth	r0, r0
900298f0:	fb0c 2c00 	mla	ip, ip, r0, r2
900298f4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900298f6:	fb01 c102 	mla	r1, r1, r2, ip
900298fa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900298fc:	fb03 1302 	mla	r3, r3, r2, r1
90029900:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029904:	b1db      	cbz	r3, 9002993e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029906:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90029908:	4353      	muls	r3, r2
9002990a:	1c5a      	adds	r2, r3, #1
9002990c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90029910:	4ac6      	ldr	r2, [pc, #792]	@ (90029c2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90029912:	121b      	asrs	r3, r3, #8
90029914:	6812      	ldr	r2, [r2, #0]
90029916:	2bff      	cmp	r3, #255	@ 0xff
90029918:	ea4f 2c12 	mov.w	ip, r2, lsr #8
9002991c:	f040 8099 	bne.w	90029a52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90029920:	0953      	lsrs	r3, r2, #5
90029922:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90029926:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002992a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002992e:	f02c 0c07 	bic.w	ip, ip, #7
90029932:	ea43 0c0c 	orr.w	ip, r3, ip
90029936:	ea4c 0202 	orr.w	r2, ip, r2
9002993a:	f8a8 2000 	strh.w	r2, [r8]
9002993e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029940:	f108 0802 	add.w	r8, r8, #2
90029944:	441c      	add	r4, r3
90029946:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029948:	441e      	add	r6, r3
9002994a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002994c:	3b01      	subs	r3, #1
9002994e:	930e      	str	r3, [sp, #56]	@ 0x38
90029950:	e762      	b.n	90029818 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90029952:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029954:	f109 0902 	add.w	r9, r9, #2
90029958:	441c      	add	r4, r3
9002995a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002995c:	441e      	add	r6, r3
9002995e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029960:	3b01      	subs	r3, #1
90029962:	9309      	str	r3, [sp, #36]	@ 0x24
90029964:	e736      	b.n	900297d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90029966:	d024      	beq.n	900299b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90029968:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002996a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
9002996c:	3b01      	subs	r3, #1
9002996e:	fb00 4003 	mla	r0, r0, r3, r4
90029972:	1400      	asrs	r0, r0, #16
90029974:	f53f af4b 	bmi.w	9002980e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029978:	3901      	subs	r1, #1
9002997a:	4288      	cmp	r0, r1
9002997c:	f6bf af47 	bge.w	9002980e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029980:	9924      	ldr	r1, [sp, #144]	@ 0x90
90029982:	fb01 6303 	mla	r3, r1, r3, r6
90029986:	141b      	asrs	r3, r3, #16
90029988:	f53f af41 	bmi.w	9002980e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002998c:	3a01      	subs	r2, #1
9002998e:	4293      	cmp	r3, r2
90029990:	f6bf af3d 	bge.w	9002980e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90029994:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90029998:	46c8      	mov	r8, r9
9002999a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
9002999e:	930e      	str	r3, [sp, #56]	@ 0x38
900299a0:	f1bb 0f00 	cmp.w	fp, #0
900299a4:	f300 80b7 	bgt.w	90029b16 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
900299a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900299aa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900299ae:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900299b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900299b4:	2b00      	cmp	r3, #0
900299b6:	f340 818e 	ble.w	90029cd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
900299ba:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900299be:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900299c0:	ee30 0a04 	vadd.f32	s0, s0, s8
900299c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
900299c8:	eef0 6a62 	vmov.f32	s13, s5
900299cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
900299d0:	ee31 1a05 	vadd.f32	s2, s2, s10
900299d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900299d8:	ee16 4a90 	vmov	r4, s13
900299dc:	eef0 6a43 	vmov.f32	s13, s6
900299e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900299e4:	ee16 6a90 	vmov	r6, s13
900299e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
900299ec:	ee61 7a27 	vmul.f32	s15, s2, s15
900299f0:	ee77 2a62 	vsub.f32	s5, s14, s5
900299f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
900299f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900299fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90029a00:	ee12 2a90 	vmov	r2, s5
90029a04:	eef0 2a47 	vmov.f32	s5, s14
90029a08:	fb92 f3f3 	sdiv	r3, r2, r3
90029a0c:	ee13 2a10 	vmov	r2, s6
90029a10:	9323      	str	r3, [sp, #140]	@ 0x8c
90029a12:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029a14:	eeb0 3a67 	vmov.f32	s6, s15
90029a18:	fb92 f3f3 	sdiv	r3, r2, r3
90029a1c:	9324      	str	r3, [sp, #144]	@ 0x90
90029a1e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90029a20:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90029a22:	3b01      	subs	r3, #1
90029a24:	930d      	str	r3, [sp, #52]	@ 0x34
90029a26:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90029a28:	bf08      	it	eq
90029a2a:	4613      	moveq	r3, r2
90029a2c:	9309      	str	r3, [sp, #36]	@ 0x24
90029a2e:	e6c2      	b.n	900297b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90029a30:	2900      	cmp	r1, #0
90029a32:	f43f af4d 	beq.w	900298d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029a36:	eb0a 0003 	add.w	r0, sl, r3
90029a3a:	0843      	lsrs	r3, r0, #1
90029a3c:	07c0      	lsls	r0, r0, #31
90029a3e:	5cfb      	ldrb	r3, [r7, r3]
90029a40:	bf54      	ite	pl
90029a42:	f003 030f 	andpl.w	r3, r3, #15
90029a46:	111b      	asrmi	r3, r3, #4
90029a48:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90029a4c:	b2db      	uxtb	r3, r3
90029a4e:	930b      	str	r3, [sp, #44]	@ 0x2c
90029a50:	e73e      	b.n	900298d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90029a52:	f8b8 e000 	ldrh.w	lr, [r8]
90029a56:	fa1f fb83 	uxth.w	fp, r3
90029a5a:	f3c2 4107 	ubfx	r1, r2, #16, #8
90029a5e:	43db      	mvns	r3, r3
90029a60:	ea4f 202e 	mov.w	r0, lr, asr #8
90029a64:	fb11 f10b 	smulbb	r1, r1, fp
90029a68:	b2db      	uxtb	r3, r3
90029a6a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90029a6e:	fa5f fc8c 	uxtb.w	ip, ip
90029a72:	b2d2      	uxtb	r2, r2
90029a74:	fb00 1003 	mla	r0, r0, r3, r1
90029a78:	ea4f 01ee 	mov.w	r1, lr, asr #3
90029a7c:	fb1c fc0b 	smulbb	ip, ip, fp
90029a80:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90029a84:	b280      	uxth	r0, r0
90029a86:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90029a8a:	fb12 fb0b 	smulbb	fp, r2, fp
90029a8e:	fa5f fe8e 	uxtb.w	lr, lr
90029a92:	fb01 cc03 	mla	ip, r1, r3, ip
90029a96:	fb0e bb03 	mla	fp, lr, r3, fp
90029a9a:	1c43      	adds	r3, r0, #1
90029a9c:	fa1f fc8c 	uxth.w	ip, ip
90029aa0:	fa1f fb8b 	uxth.w	fp, fp
90029aa4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90029aa8:	f10c 0101 	add.w	r1, ip, #1
90029aac:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
90029ab0:	f10b 0001 	add.w	r0, fp, #1
90029ab4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90029ab8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90029abc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90029ac0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90029ac4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90029ac8:	4318      	orrs	r0, r3
90029aca:	ea40 000c 	orr.w	r0, r0, ip
90029ace:	f8a8 0000 	strh.w	r0, [r8]
90029ad2:	e734      	b.n	9002993e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029ad4:	f113 0b01 	adds.w	fp, r3, #1
90029ad8:	f53f af31 	bmi.w	9002993e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029adc:	45dc      	cmp	ip, fp
90029ade:	f6ff af2e 	blt.w	9002993e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029ae2:	f110 0b01 	adds.w	fp, r0, #1
90029ae6:	f53f af2a 	bmi.w	9002993e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029aea:	45de      	cmp	lr, fp
90029aec:	f6ff af27 	blt.w	9002993e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029af0:	9302      	str	r3, [sp, #8]
90029af2:	fa0f f38e 	sxth.w	r3, lr
90029af6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90029af8:	9301      	str	r3, [sp, #4]
90029afa:	fa0f f38c 	sxth.w	r3, ip
90029afe:	e9cd 0203 	strd	r0, r2, [sp, #12]
90029b02:	e9cd 1505 	strd	r1, r5, [sp, #20]
90029b06:	9300      	str	r3, [sp, #0]
90029b08:	463a      	mov	r2, r7
90029b0a:	4653      	mov	r3, sl
90029b0c:	4641      	mov	r1, r8
90029b0e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90029b10:	f7ff fd4c 	bl	900295ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90029b14:	e713      	b.n	9002993e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90029b16:	1422      	asrs	r2, r4, #16
90029b18:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90029b1a:	1433      	asrs	r3, r6, #16
90029b1c:	f3c4 3103 	ubfx	r1, r4, #12, #4
90029b20:	f3c6 3003 	ubfx	r0, r6, #12, #4
90029b24:	fb05 2303 	mla	r3, r5, r3, r2
90029b28:	085a      	lsrs	r2, r3, #1
90029b2a:	07dd      	lsls	r5, r3, #31
90029b2c:	5cba      	ldrb	r2, [r7, r2]
90029b2e:	bf54      	ite	pl
90029b30:	f002 020f 	andpl.w	r2, r2, #15
90029b34:	1112      	asrmi	r2, r2, #4
90029b36:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90029b3a:	b2d2      	uxtb	r2, r2
90029b3c:	2900      	cmp	r1, #0
90029b3e:	d077      	beq.n	90029c30 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90029b40:	f103 0e01 	add.w	lr, r3, #1
90029b44:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90029b48:	f01e 0f01 	tst.w	lr, #1
90029b4c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029b50:	bf0c      	ite	eq
90029b52:	f00c 0c0f 	andeq.w	ip, ip, #15
90029b56:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90029b5a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029b5e:	fa5f f58c 	uxtb.w	r5, ip
90029b62:	9512      	str	r5, [sp, #72]	@ 0x48
90029b64:	b308      	cbz	r0, 90029baa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90029b66:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90029b68:	442b      	add	r3, r5
90029b6a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029b6e:	07dd      	lsls	r5, r3, #31
90029b70:	f103 0301 	add.w	r3, r3, #1
90029b74:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029b78:	bf54      	ite	pl
90029b7a:	f00c 0c0f 	andpl.w	ip, ip, #15
90029b7e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029b82:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029b86:	fa5f f58c 	uxtb.w	r5, ip
90029b8a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029b8e:	950c      	str	r5, [sp, #48]	@ 0x30
90029b90:	07dd      	lsls	r5, r3, #31
90029b92:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029b96:	bf54      	ite	pl
90029b98:	f00c 0c0f 	andpl.w	ip, ip, #15
90029b9c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029ba0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029ba4:	fa5f f38c 	uxtb.w	r3, ip
90029ba8:	9313      	str	r3, [sp, #76]	@ 0x4c
90029baa:	b289      	uxth	r1, r1
90029bac:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90029bae:	b280      	uxth	r0, r0
90029bb0:	fb01 f300 	mul.w	r3, r1, r0
90029bb4:	0109      	lsls	r1, r1, #4
90029bb6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90029bba:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
90029bbe:	1ac9      	subs	r1, r1, r3
90029bc0:	b280      	uxth	r0, r0
90029bc2:	b289      	uxth	r1, r1
90029bc4:	ebac 0c00 	sub.w	ip, ip, r0
90029bc8:	4369      	muls	r1, r5
90029bca:	fa1f fc8c 	uxth.w	ip, ip
90029bce:	fb02 120c 	mla	r2, r2, ip, r1
90029bd2:	990c      	ldr	r1, [sp, #48]	@ 0x30
90029bd4:	fb00 2001 	mla	r0, r0, r1, r2
90029bd8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90029bda:	fb03 0302 	mla	r3, r3, r2, r0
90029bde:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029be2:	b1d3      	cbz	r3, 90029c1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90029be4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90029be6:	4353      	muls	r3, r2
90029be8:	1c5a      	adds	r2, r3, #1
90029bea:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90029bee:	4a0f      	ldr	r2, [pc, #60]	@ (90029c2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90029bf0:	121b      	asrs	r3, r3, #8
90029bf2:	6812      	ldr	r2, [r2, #0]
90029bf4:	2bff      	cmp	r3, #255	@ 0xff
90029bf6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90029bfa:	d12d      	bne.n	90029c58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90029bfc:	0953      	lsrs	r3, r2, #5
90029bfe:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90029c02:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90029c06:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90029c0a:	f02c 0c07 	bic.w	ip, ip, #7
90029c0e:	ea43 0c0c 	orr.w	ip, r3, ip
90029c12:	ea4c 0202 	orr.w	r2, ip, r2
90029c16:	f8a8 2000 	strh.w	r2, [r8]
90029c1a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90029c1c:	f108 0802 	add.w	r8, r8, #2
90029c20:	f10b 3bff 	add.w	fp, fp, #4294967295
90029c24:	441c      	add	r4, r3
90029c26:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029c28:	441e      	add	r6, r3
90029c2a:	e6b9      	b.n	900299a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90029c2c:	240245a8 	.word	0x240245a8
90029c30:	2800      	cmp	r0, #0
90029c32:	d0ba      	beq.n	90029baa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90029c34:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90029c36:	442b      	add	r3, r5
90029c38:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90029c3c:	07db      	lsls	r3, r3, #31
90029c3e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90029c42:	bf54      	ite	pl
90029c44:	f00c 0c0f 	andpl.w	ip, ip, #15
90029c48:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029c4c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029c50:	fa5f f38c 	uxtb.w	r3, ip
90029c54:	930c      	str	r3, [sp, #48]	@ 0x30
90029c56:	e7a8      	b.n	90029baa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90029c58:	f8b8 e000 	ldrh.w	lr, [r8]
90029c5c:	fa1f fa83 	uxth.w	sl, r3
90029c60:	f3c2 4107 	ubfx	r1, r2, #16, #8
90029c64:	43db      	mvns	r3, r3
90029c66:	ea4f 202e 	mov.w	r0, lr, asr #8
90029c6a:	fb11 f10a 	smulbb	r1, r1, sl
90029c6e:	b2db      	uxtb	r3, r3
90029c70:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90029c74:	b2d2      	uxtb	r2, r2
90029c76:	fa5f fc8c 	uxtb.w	ip, ip
90029c7a:	fb00 1003 	mla	r0, r0, r3, r1
90029c7e:	ea4f 01ee 	mov.w	r1, lr, asr #3
90029c82:	fb12 f20a 	smulbb	r2, r2, sl
90029c86:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90029c8a:	b280      	uxth	r0, r0
90029c8c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90029c90:	fb1c fc0a 	smulbb	ip, ip, sl
90029c94:	fa5f fe8e 	uxtb.w	lr, lr
90029c98:	fb0e 2203 	mla	r2, lr, r3, r2
90029c9c:	fb01 cc03 	mla	ip, r1, r3, ip
90029ca0:	1c43      	adds	r3, r0, #1
90029ca2:	b292      	uxth	r2, r2
90029ca4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90029ca8:	1c51      	adds	r1, r2, #1
90029caa:	fa1f fc8c 	uxth.w	ip, ip
90029cae:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
90029cb2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
90029cb6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90029cba:	4308      	orrs	r0, r1
90029cbc:	f10c 0101 	add.w	r1, ip, #1
90029cc0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90029cc4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90029cc8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90029ccc:	ea40 000c 	orr.w	r0, r0, ip
90029cd0:	f8a8 0000 	strh.w	r0, [r8]
90029cd4:	e7a1      	b.n	90029c1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
90029cd6:	b017      	add	sp, #92	@ 0x5c
90029cd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90029cdc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90029cdc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90029ce0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90029ce4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90029ce8:	2d00      	cmp	r5, #0
90029cea:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90029cee:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90029cf2:	fb05 0e03 	mla	lr, r5, r3, r0
90029cf6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90029cfa:	f2c0 80b0 	blt.w	90029e5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90029cfe:	45a9      	cmp	r9, r5
90029d00:	f340 80ad 	ble.w	90029e5e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90029d04:	2800      	cmp	r0, #0
90029d06:	f2c0 80a8 	blt.w	90029e5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90029d0a:	4580      	cmp	r8, r0
90029d0c:	f340 80a5 	ble.w	90029e5a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90029d10:	ea4f 045e 	mov.w	r4, lr, lsr #1
90029d14:	f01e 0f01 	tst.w	lr, #1
90029d18:	5d16      	ldrb	r6, [r2, r4]
90029d1a:	bf0c      	ite	eq
90029d1c:	f006 060f 	andeq.w	r6, r6, #15
90029d20:	1136      	asrne	r6, r6, #4
90029d22:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90029d26:	b2f6      	uxtb	r6, r6
90029d28:	1c44      	adds	r4, r0, #1
90029d2a:	f100 809b 	bmi.w	90029e64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90029d2e:	45a0      	cmp	r8, r4
90029d30:	f340 8098 	ble.w	90029e64 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90029d34:	2f00      	cmp	r7, #0
90029d36:	f000 8097 	beq.w	90029e68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90029d3a:	f10e 0a01 	add.w	sl, lr, #1
90029d3e:	ea4f 045a 	mov.w	r4, sl, lsr #1
90029d42:	f01a 0f01 	tst.w	sl, #1
90029d46:	5d14      	ldrb	r4, [r2, r4]
90029d48:	bf0c      	ite	eq
90029d4a:	f004 040f 	andeq.w	r4, r4, #15
90029d4e:	1124      	asrne	r4, r4, #4
90029d50:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90029d54:	b2e4      	uxtb	r4, r4
90029d56:	3501      	adds	r5, #1
90029d58:	f100 808a 	bmi.w	90029e70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90029d5c:	45a9      	cmp	r9, r5
90029d5e:	f340 8087 	ble.w	90029e70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90029d62:	f1bc 0f00 	cmp.w	ip, #0
90029d66:	f000 8086 	beq.w	90029e76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90029d6a:	2800      	cmp	r0, #0
90029d6c:	db7e      	blt.n	90029e6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90029d6e:	4580      	cmp	r8, r0
90029d70:	dd7c      	ble.n	90029e6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90029d72:	eb03 090e 	add.w	r9, r3, lr
90029d76:	ea4f 0559 	mov.w	r5, r9, lsr #1
90029d7a:	f019 0f01 	tst.w	r9, #1
90029d7e:	5d55      	ldrb	r5, [r2, r5]
90029d80:	bf0c      	ite	eq
90029d82:	f005 050f 	andeq.w	r5, r5, #15
90029d86:	112d      	asrne	r5, r5, #4
90029d88:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90029d8c:	b2ed      	uxtb	r5, r5
90029d8e:	3001      	adds	r0, #1
90029d90:	d474      	bmi.n	90029e7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90029d92:	4580      	cmp	r8, r0
90029d94:	dd72      	ble.n	90029e7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90029d96:	2f00      	cmp	r7, #0
90029d98:	d072      	beq.n	90029e80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90029d9a:	3301      	adds	r3, #1
90029d9c:	449e      	add	lr, r3
90029d9e:	ea4f 035e 	mov.w	r3, lr, lsr #1
90029da2:	f01e 0f01 	tst.w	lr, #1
90029da6:	5cd0      	ldrb	r0, [r2, r3]
90029da8:	bf0c      	ite	eq
90029daa:	f000 000f 	andeq.w	r0, r0, #15
90029dae:	1100      	asrne	r0, r0, #4
90029db0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029db4:	b2c3      	uxtb	r3, r0
90029db6:	b2ba      	uxth	r2, r7
90029db8:	fa1f fc8c 	uxth.w	ip, ip
90029dbc:	fb02 f00c 	mul.w	r0, r2, ip
90029dc0:	0112      	lsls	r2, r2, #4
90029dc2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90029dc6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90029dca:	1a12      	subs	r2, r2, r0
90029dcc:	fa1f fc8c 	uxth.w	ip, ip
90029dd0:	b292      	uxth	r2, r2
90029dd2:	eba7 070c 	sub.w	r7, r7, ip
90029dd6:	4362      	muls	r2, r4
90029dd8:	b2bf      	uxth	r7, r7
90029dda:	fb06 2207 	mla	r2, r6, r7, r2
90029dde:	fb0c 2505 	mla	r5, ip, r5, r2
90029de2:	fb00 5303 	mla	r3, r0, r3, r5
90029de6:	f3c3 2307 	ubfx	r3, r3, #8, #8
90029dea:	b3a3      	cbz	r3, 90029e56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90029dec:	4a25      	ldr	r2, [pc, #148]	@ (90029e84 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90029dee:	880e      	ldrh	r6, [r1, #0]
90029df0:	6815      	ldr	r5, [r2, #0]
90029df2:	b29a      	uxth	r2, r3
90029df4:	1234      	asrs	r4, r6, #8
90029df6:	43db      	mvns	r3, r3
90029df8:	f3c5 4007 	ubfx	r0, r5, #16, #8
90029dfc:	f3c5 2707 	ubfx	r7, r5, #8, #8
90029e00:	b2db      	uxtb	r3, r3
90029e02:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90029e06:	fb10 f002 	smulbb	r0, r0, r2
90029e0a:	b2ed      	uxtb	r5, r5
90029e0c:	fb17 f702 	smulbb	r7, r7, r2
90029e10:	fb04 0403 	mla	r4, r4, r3, r0
90029e14:	10f0      	asrs	r0, r6, #3
90029e16:	fb15 f202 	smulbb	r2, r5, r2
90029e1a:	00f6      	lsls	r6, r6, #3
90029e1c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90029e20:	b2a4      	uxth	r4, r4
90029e22:	b2f6      	uxtb	r6, r6
90029e24:	fb00 7003 	mla	r0, r0, r3, r7
90029e28:	fb06 2303 	mla	r3, r6, r3, r2
90029e2c:	b280      	uxth	r0, r0
90029e2e:	b29a      	uxth	r2, r3
90029e30:	1c63      	adds	r3, r4, #1
90029e32:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90029e36:	1c53      	adds	r3, r2, #1
90029e38:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90029e3c:	1c42      	adds	r2, r0, #1
90029e3e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90029e42:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90029e46:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90029e4a:	0940      	lsrs	r0, r0, #5
90029e4c:	4323      	orrs	r3, r4
90029e4e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90029e52:	4303      	orrs	r3, r0
90029e54:	800b      	strh	r3, [r1, #0]
90029e56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90029e5a:	2600      	movs	r6, #0
90029e5c:	e764      	b.n	90029d28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90029e5e:	2400      	movs	r4, #0
90029e60:	4626      	mov	r6, r4
90029e62:	e778      	b.n	90029d56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029e64:	2400      	movs	r4, #0
90029e66:	e776      	b.n	90029d56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029e68:	463c      	mov	r4, r7
90029e6a:	e774      	b.n	90029d56 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90029e6c:	2500      	movs	r5, #0
90029e6e:	e78e      	b.n	90029d8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90029e70:	2300      	movs	r3, #0
90029e72:	461d      	mov	r5, r3
90029e74:	e79f      	b.n	90029db6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029e76:	4663      	mov	r3, ip
90029e78:	4665      	mov	r5, ip
90029e7a:	e79c      	b.n	90029db6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029e7c:	2300      	movs	r3, #0
90029e7e:	e79a      	b.n	90029db6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029e80:	463b      	mov	r3, r7
90029e82:	e798      	b.n	90029db6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90029e84:	240245a8 	.word	0x240245a8

90029e88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90029e88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029e8c:	b093      	sub	sp, #76	@ 0x4c
90029e8e:	461d      	mov	r5, r3
90029e90:	920c      	str	r2, [sp, #48]	@ 0x30
90029e92:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90029e94:	9011      	str	r0, [sp, #68]	@ 0x44
90029e96:	9107      	str	r1, [sp, #28]
90029e98:	6850      	ldr	r0, [r2, #4]
90029e9a:	6812      	ldr	r2, [r2, #0]
90029e9c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90029ea0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90029ea4:	fb00 1303 	mla	r3, r0, r3, r1
90029ea8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90029eac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029eae:	689b      	ldr	r3, [r3, #8]
90029eb0:	3301      	adds	r3, #1
90029eb2:	f023 0301 	bic.w	r3, r3, #1
90029eb6:	9306      	str	r3, [sp, #24]
90029eb8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029eba:	681f      	ldr	r7, [r3, #0]
90029ebc:	9b07      	ldr	r3, [sp, #28]
90029ebe:	2b00      	cmp	r3, #0
90029ec0:	dc03      	bgt.n	90029eca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90029ec2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90029ec4:	2b00      	cmp	r3, #0
90029ec6:	f340 8267 	ble.w	9002a398 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90029eca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029ecc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90029ed0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90029ed4:	1e48      	subs	r0, r1, #1
90029ed6:	f102 3cff 	add.w	ip, r2, #4294967295
90029eda:	2d00      	cmp	r5, #0
90029edc:	f340 80b7 	ble.w	9002a04e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90029ee0:	ea5f 4e24 	movs.w	lr, r4, asr #16
90029ee4:	ea4f 4326 	mov.w	r3, r6, asr #16
90029ee8:	d406      	bmi.n	90029ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90029eea:	4586      	cmp	lr, r0
90029eec:	da04      	bge.n	90029ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90029eee:	2b00      	cmp	r3, #0
90029ef0:	db02      	blt.n	90029ef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90029ef2:	4563      	cmp	r3, ip
90029ef4:	f2c0 80ac 	blt.w	9002a050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90029ef8:	f11e 0e01 	adds.w	lr, lr, #1
90029efc:	f100 809f 	bmi.w	9002a03e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029f00:	4571      	cmp	r1, lr
90029f02:	f2c0 809c 	blt.w	9002a03e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029f06:	3301      	adds	r3, #1
90029f08:	f100 8099 	bmi.w	9002a03e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029f0c:	429a      	cmp	r2, r3
90029f0e:	f2c0 8096 	blt.w	9002a03e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90029f12:	46c8      	mov	r8, r9
90029f14:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90029f18:	9509      	str	r5, [sp, #36]	@ 0x24
90029f1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029f1c:	2b00      	cmp	r3, #0
90029f1e:	f340 80b5 	ble.w	9002a08c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90029f22:	f3c4 3303 	ubfx	r3, r4, #12, #4
90029f26:	1430      	asrs	r0, r6, #16
90029f28:	f3c6 3103 	ubfx	r1, r6, #12, #4
90029f2c:	9308      	str	r3, [sp, #32]
90029f2e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90029f30:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90029f34:	1423      	asrs	r3, r4, #16
90029f36:	f100 813f 	bmi.w	9002a1b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029f3a:	f10c 3bff 	add.w	fp, ip, #4294967295
90029f3e:	455b      	cmp	r3, fp
90029f40:	f280 813a 	bge.w	9002a1b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029f44:	2800      	cmp	r0, #0
90029f46:	f2c0 8137 	blt.w	9002a1b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029f4a:	f10e 3bff 	add.w	fp, lr, #4294967295
90029f4e:	4558      	cmp	r0, fp
90029f50:	f280 8132 	bge.w	9002a1b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90029f54:	9a06      	ldr	r2, [sp, #24]
90029f56:	fb00 3302 	mla	r3, r0, r2, r3
90029f5a:	0858      	lsrs	r0, r3, #1
90029f5c:	07da      	lsls	r2, r3, #31
90029f5e:	9a08      	ldr	r2, [sp, #32]
90029f60:	f817 c000 	ldrb.w	ip, [r7, r0]
90029f64:	bf54      	ite	pl
90029f66:	f00c 0c0f 	andpl.w	ip, ip, #15
90029f6a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90029f6e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90029f72:	fa5f fc8c 	uxtb.w	ip, ip
90029f76:	2a00      	cmp	r2, #0
90029f78:	f000 80cc 	beq.w	9002a114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90029f7c:	1c58      	adds	r0, r3, #1
90029f7e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90029f82:	07c0      	lsls	r0, r0, #31
90029f84:	f817 e00e 	ldrb.w	lr, [r7, lr]
90029f88:	bf54      	ite	pl
90029f8a:	f00e 0e0f 	andpl.w	lr, lr, #15
90029f8e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90029f92:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90029f96:	fa5f fe8e 	uxtb.w	lr, lr
90029f9a:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
90029f9e:	b1b9      	cbz	r1, 90029fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90029fa0:	4453      	add	r3, sl
90029fa2:	0858      	lsrs	r0, r3, #1
90029fa4:	07da      	lsls	r2, r3, #31
90029fa6:	5c38      	ldrb	r0, [r7, r0]
90029fa8:	bf54      	ite	pl
90029faa:	f000 000f 	andpl.w	r0, r0, #15
90029fae:	1100      	asrmi	r0, r0, #4
90029fb0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90029fb4:	b2c0      	uxtb	r0, r0
90029fb6:	900a      	str	r0, [sp, #40]	@ 0x28
90029fb8:	1c58      	adds	r0, r3, #1
90029fba:	0843      	lsrs	r3, r0, #1
90029fbc:	07c2      	lsls	r2, r0, #31
90029fbe:	5cfb      	ldrb	r3, [r7, r3]
90029fc0:	bf54      	ite	pl
90029fc2:	f003 030f 	andpl.w	r3, r3, #15
90029fc6:	111b      	asrmi	r3, r3, #4
90029fc8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90029fcc:	b2db      	uxtb	r3, r3
90029fce:	930e      	str	r3, [sp, #56]	@ 0x38
90029fd0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90029fd4:	b289      	uxth	r1, r1
90029fd6:	fb02 f301 	mul.w	r3, r2, r1
90029fda:	0112      	lsls	r2, r2, #4
90029fdc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90029fe0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90029fe4:	1ad2      	subs	r2, r2, r3
90029fe6:	b289      	uxth	r1, r1
90029fe8:	b292      	uxth	r2, r2
90029fea:	1a40      	subs	r0, r0, r1
90029fec:	fa1f fe80 	uxth.w	lr, r0
90029ff0:	980d      	ldr	r0, [sp, #52]	@ 0x34
90029ff2:	4342      	muls	r2, r0
90029ff4:	fb0c 2c0e 	mla	ip, ip, lr, r2
90029ff8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90029ffa:	fb01 c102 	mla	r1, r1, r2, ip
90029ffe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002a000:	fb03 1302 	mla	r3, r3, r2, r1
9002a004:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002a008:	2bff      	cmp	r3, #255	@ 0xff
9002a00a:	f040 8094 	bne.w	9002a136 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
9002a00e:	4bbf      	ldr	r3, [pc, #764]	@ (9002a30c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002a010:	681a      	ldr	r2, [r3, #0]
9002a012:	4bbf      	ldr	r3, [pc, #764]	@ (9002a310 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002a014:	0951      	lsrs	r1, r2, #5
9002a016:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002a01a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002a01e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002a022:	430b      	orrs	r3, r1
9002a024:	4313      	orrs	r3, r2
9002a026:	f8a8 3000 	strh.w	r3, [r8]
9002a02a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002a02c:	f108 0802 	add.w	r8, r8, #2
9002a030:	441c      	add	r4, r3
9002a032:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002a034:	441e      	add	r6, r3
9002a036:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002a038:	3b01      	subs	r3, #1
9002a03a:	9309      	str	r3, [sp, #36]	@ 0x24
9002a03c:	e76d      	b.n	90029f1a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002a03e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002a040:	3d01      	subs	r5, #1
9002a042:	f109 0902 	add.w	r9, r9, #2
9002a046:	441c      	add	r4, r3
9002a048:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002a04a:	441e      	add	r6, r3
9002a04c:	e745      	b.n	90029eda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002a04e:	d021      	beq.n	9002a094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9002a050:	1e6b      	subs	r3, r5, #1
9002a052:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002a054:	fb00 4003 	mla	r0, r0, r3, r4
9002a058:	1400      	asrs	r0, r0, #16
9002a05a:	f53f af5a 	bmi.w	90029f12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a05e:	3901      	subs	r1, #1
9002a060:	4288      	cmp	r0, r1
9002a062:	f6bf af56 	bge.w	90029f12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a066:	9920      	ldr	r1, [sp, #128]	@ 0x80
9002a068:	fb01 6303 	mla	r3, r1, r3, r6
9002a06c:	141b      	asrs	r3, r3, #16
9002a06e:	f53f af50 	bmi.w	90029f12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a072:	3a01      	subs	r2, #1
9002a074:	4293      	cmp	r3, r2
9002a076:	f6bf af4c 	bge.w	90029f12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002a07a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9002a07e:	46a8      	mov	r8, r5
9002a080:	46ce      	mov	lr, r9
9002a082:	9308      	str	r3, [sp, #32]
9002a084:	f1b8 0f00 	cmp.w	r8, #0
9002a088:	f300 80b6 	bgt.w	9002a1f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002a08c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002a090:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002a094:	9b07      	ldr	r3, [sp, #28]
9002a096:	2b00      	cmp	r3, #0
9002a098:	f340 817e 	ble.w	9002a398 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002a09c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002a0a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002a0a2:	ee30 0a04 	vadd.f32	s0, s0, s8
9002a0a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002a0aa:	eef0 6a62 	vmov.f32	s13, s5
9002a0ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002a0b2:	ee31 1a05 	vadd.f32	s2, s2, s10
9002a0b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002a0ba:	ee16 4a90 	vmov	r4, s13
9002a0be:	eef0 6a43 	vmov.f32	s13, s6
9002a0c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002a0c6:	ee16 6a90 	vmov	r6, s13
9002a0ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002a0ce:	ee61 7a27 	vmul.f32	s15, s2, s15
9002a0d2:	ee77 2a62 	vsub.f32	s5, s14, s5
9002a0d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002a0da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002a0de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002a0e2:	ee12 2a90 	vmov	r2, s5
9002a0e6:	eef0 2a47 	vmov.f32	s5, s14
9002a0ea:	fb92 f3f3 	sdiv	r3, r2, r3
9002a0ee:	ee13 2a10 	vmov	r2, s6
9002a0f2:	931f      	str	r3, [sp, #124]	@ 0x7c
9002a0f4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002a0f6:	eeb0 3a67 	vmov.f32	s6, s15
9002a0fa:	fb92 f3f3 	sdiv	r3, r2, r3
9002a0fe:	9320      	str	r3, [sp, #128]	@ 0x80
9002a100:	9b07      	ldr	r3, [sp, #28]
9002a102:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002a104:	3b01      	subs	r3, #1
9002a106:	9307      	str	r3, [sp, #28]
9002a108:	bf08      	it	eq
9002a10a:	4615      	moveq	r5, r2
9002a10c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002a10e:	bf18      	it	ne
9002a110:	461d      	movne	r5, r3
9002a112:	e6d3      	b.n	90029ebc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002a114:	2900      	cmp	r1, #0
9002a116:	f43f af5b 	beq.w	90029fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002a11a:	eb0a 0003 	add.w	r0, sl, r3
9002a11e:	0843      	lsrs	r3, r0, #1
9002a120:	07c0      	lsls	r0, r0, #31
9002a122:	5cfb      	ldrb	r3, [r7, r3]
9002a124:	bf54      	ite	pl
9002a126:	f003 030f 	andpl.w	r3, r3, #15
9002a12a:	111b      	asrmi	r3, r3, #4
9002a12c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002a130:	b2db      	uxtb	r3, r3
9002a132:	930a      	str	r3, [sp, #40]	@ 0x28
9002a134:	e74c      	b.n	90029fd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002a136:	2b00      	cmp	r3, #0
9002a138:	f43f af77 	beq.w	9002a02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a13c:	4a73      	ldr	r2, [pc, #460]	@ (9002a30c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002a13e:	fa1f fe83 	uxth.w	lr, r3
9002a142:	f8b8 c000 	ldrh.w	ip, [r8]
9002a146:	43db      	mvns	r3, r3
9002a148:	6810      	ldr	r0, [r2, #0]
9002a14a:	ea4f 212c 	mov.w	r1, ip, asr #8
9002a14e:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002a152:	b2db      	uxtb	r3, r3
9002a154:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002a158:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002a15c:	fb12 f20e 	smulbb	r2, r2, lr
9002a160:	b2c0      	uxtb	r0, r0
9002a162:	fb1b fb0e 	smulbb	fp, fp, lr
9002a166:	fb01 2103 	mla	r1, r1, r3, r2
9002a16a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002a16e:	fb10 fe0e 	smulbb	lr, r0, lr
9002a172:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002a176:	b289      	uxth	r1, r1
9002a178:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002a17c:	fa5f fc8c 	uxtb.w	ip, ip
9002a180:	fb02 b203 	mla	r2, r2, r3, fp
9002a184:	1c48      	adds	r0, r1, #1
9002a186:	fb0c e303 	mla	r3, ip, r3, lr
9002a18a:	b292      	uxth	r2, r2
9002a18c:	b29b      	uxth	r3, r3
9002a18e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
9002a192:	f102 0b01 	add.w	fp, r2, #1
9002a196:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
9002a19a:	1c59      	adds	r1, r3, #1
9002a19c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002a1a0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002a1a4:	0952      	lsrs	r2, r2, #5
9002a1a6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002a1aa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002a1ae:	4301      	orrs	r1, r0
9002a1b0:	4311      	orrs	r1, r2
9002a1b2:	f8a8 1000 	strh.w	r1, [r8]
9002a1b6:	e738      	b.n	9002a02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a1b8:	f113 0b01 	adds.w	fp, r3, #1
9002a1bc:	f53f af35 	bmi.w	9002a02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a1c0:	45dc      	cmp	ip, fp
9002a1c2:	f6ff af32 	blt.w	9002a02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a1c6:	f110 0b01 	adds.w	fp, r0, #1
9002a1ca:	f53f af2e 	bmi.w	9002a02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a1ce:	45de      	cmp	lr, fp
9002a1d0:	f6ff af2b 	blt.w	9002a02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a1d4:	9302      	str	r3, [sp, #8]
9002a1d6:	fa0f f38e 	sxth.w	r3, lr
9002a1da:	9a08      	ldr	r2, [sp, #32]
9002a1dc:	9301      	str	r3, [sp, #4]
9002a1de:	fa0f f38c 	sxth.w	r3, ip
9002a1e2:	9105      	str	r1, [sp, #20]
9002a1e4:	4641      	mov	r1, r8
9002a1e6:	9300      	str	r3, [sp, #0]
9002a1e8:	4653      	mov	r3, sl
9002a1ea:	e9cd 0203 	strd	r0, r2, [sp, #12]
9002a1ee:	463a      	mov	r2, r7
9002a1f0:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002a1f2:	f7ff fd73 	bl	90029cdc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
9002a1f6:	e718      	b.n	9002a02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002a1f8:	1422      	asrs	r2, r4, #16
9002a1fa:	9906      	ldr	r1, [sp, #24]
9002a1fc:	1433      	asrs	r3, r6, #16
9002a1fe:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002a202:	f3c6 3c03 	ubfx	ip, r6, #12, #4
9002a206:	fb01 2303 	mla	r3, r1, r3, r2
9002a20a:	085a      	lsrs	r2, r3, #1
9002a20c:	07d9      	lsls	r1, r3, #31
9002a20e:	5cba      	ldrb	r2, [r7, r2]
9002a210:	bf54      	ite	pl
9002a212:	f002 020f 	andpl.w	r2, r2, #15
9002a216:	1112      	asrmi	r2, r2, #4
9002a218:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002a21c:	b2d2      	uxtb	r2, r2
9002a21e:	2800      	cmp	r0, #0
9002a220:	d063      	beq.n	9002a2ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
9002a222:	f103 0a01 	add.w	sl, r3, #1
9002a226:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002a22a:	f01a 0f01 	tst.w	sl, #1
9002a22e:	5c79      	ldrb	r1, [r7, r1]
9002a230:	bf0c      	ite	eq
9002a232:	f001 010f 	andeq.w	r1, r1, #15
9002a236:	1109      	asrne	r1, r1, #4
9002a238:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a23c:	b2c9      	uxtb	r1, r1
9002a23e:	910f      	str	r1, [sp, #60]	@ 0x3c
9002a240:	f1bc 0f00 	cmp.w	ip, #0
9002a244:	d01a      	beq.n	9002a27c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002a246:	9908      	ldr	r1, [sp, #32]
9002a248:	440b      	add	r3, r1
9002a24a:	0859      	lsrs	r1, r3, #1
9002a24c:	f013 0f01 	tst.w	r3, #1
9002a250:	f103 0301 	add.w	r3, r3, #1
9002a254:	5c79      	ldrb	r1, [r7, r1]
9002a256:	bf0c      	ite	eq
9002a258:	f001 010f 	andeq.w	r1, r1, #15
9002a25c:	1109      	asrne	r1, r1, #4
9002a25e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a262:	b2c9      	uxtb	r1, r1
9002a264:	910b      	str	r1, [sp, #44]	@ 0x2c
9002a266:	0859      	lsrs	r1, r3, #1
9002a268:	07db      	lsls	r3, r3, #31
9002a26a:	5c79      	ldrb	r1, [r7, r1]
9002a26c:	bf54      	ite	pl
9002a26e:	f001 010f 	andpl.w	r1, r1, #15
9002a272:	1109      	asrmi	r1, r1, #4
9002a274:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a278:	b2c9      	uxtb	r1, r1
9002a27a:	9110      	str	r1, [sp, #64]	@ 0x40
9002a27c:	b280      	uxth	r0, r0
9002a27e:	fa1f fc8c 	uxth.w	ip, ip
9002a282:	fb00 f30c 	mul.w	r3, r0, ip
9002a286:	0100      	lsls	r0, r0, #4
9002a288:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
9002a28c:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
9002a290:	1ac0      	subs	r0, r0, r3
9002a292:	fa1f fc8c 	uxth.w	ip, ip
9002a296:	b280      	uxth	r0, r0
9002a298:	eba1 010c 	sub.w	r1, r1, ip
9002a29c:	fa1f fa81 	uxth.w	sl, r1
9002a2a0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9002a2a2:	4348      	muls	r0, r1
9002a2a4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9002a2a6:	fb02 020a 	mla	r2, r2, sl, r0
9002a2aa:	fb0c 2c01 	mla	ip, ip, r1, r2
9002a2ae:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9002a2b0:	fb03 c302 	mla	r3, r3, r2, ip
9002a2b4:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002a2b8:	2bff      	cmp	r3, #255	@ 0xff
9002a2ba:	d12b      	bne.n	9002a314 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
9002a2bc:	4b13      	ldr	r3, [pc, #76]	@ (9002a30c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002a2be:	681a      	ldr	r2, [r3, #0]
9002a2c0:	4b13      	ldr	r3, [pc, #76]	@ (9002a310 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
9002a2c2:	0951      	lsrs	r1, r2, #5
9002a2c4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002a2c8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002a2cc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002a2d0:	430b      	orrs	r3, r1
9002a2d2:	4313      	orrs	r3, r2
9002a2d4:	f8ae 3000 	strh.w	r3, [lr]
9002a2d8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002a2da:	f10e 0e02 	add.w	lr, lr, #2
9002a2de:	f108 38ff 	add.w	r8, r8, #4294967295
9002a2e2:	441c      	add	r4, r3
9002a2e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002a2e6:	441e      	add	r6, r3
9002a2e8:	e6cc      	b.n	9002a084 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9002a2ea:	f1bc 0f00 	cmp.w	ip, #0
9002a2ee:	d0c5      	beq.n	9002a27c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002a2f0:	9908      	ldr	r1, [sp, #32]
9002a2f2:	440b      	add	r3, r1
9002a2f4:	0859      	lsrs	r1, r3, #1
9002a2f6:	07db      	lsls	r3, r3, #31
9002a2f8:	5c79      	ldrb	r1, [r7, r1]
9002a2fa:	bf54      	ite	pl
9002a2fc:	f001 010f 	andpl.w	r1, r1, #15
9002a300:	1109      	asrmi	r1, r1, #4
9002a302:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002a306:	b2c9      	uxtb	r1, r1
9002a308:	910b      	str	r1, [sp, #44]	@ 0x2c
9002a30a:	e7b7      	b.n	9002a27c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
9002a30c:	240245a8 	.word	0x240245a8
9002a310:	fffff800 	.word	0xfffff800
9002a314:	2b00      	cmp	r3, #0
9002a316:	d0df      	beq.n	9002a2d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002a318:	4a21      	ldr	r2, [pc, #132]	@ (9002a3a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
9002a31a:	fa1f fa83 	uxth.w	sl, r3
9002a31e:	f8be c000 	ldrh.w	ip, [lr]
9002a322:	43db      	mvns	r3, r3
9002a324:	6810      	ldr	r0, [r2, #0]
9002a326:	ea4f 212c 	mov.w	r1, ip, asr #8
9002a32a:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002a32e:	b2db      	uxtb	r3, r3
9002a330:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002a334:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002a338:	fb12 f20a 	smulbb	r2, r2, sl
9002a33c:	b2c0      	uxtb	r0, r0
9002a33e:	fb1b fb0a 	smulbb	fp, fp, sl
9002a342:	fb01 2103 	mla	r1, r1, r3, r2
9002a346:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002a34a:	fb10 f00a 	smulbb	r0, r0, sl
9002a34e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002a352:	b289      	uxth	r1, r1
9002a354:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002a358:	fa5f fc8c 	uxtb.w	ip, ip
9002a35c:	fb02 b203 	mla	r2, r2, r3, fp
9002a360:	fb0c 0003 	mla	r0, ip, r3, r0
9002a364:	1c4b      	adds	r3, r1, #1
9002a366:	b292      	uxth	r2, r2
9002a368:	b280      	uxth	r0, r0
9002a36a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002a36e:	f100 0b01 	add.w	fp, r0, #1
9002a372:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002a376:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002a37a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9002a37e:	ea4b 0101 	orr.w	r1, fp, r1
9002a382:	f102 0b01 	add.w	fp, r2, #1
9002a386:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002a38a:	0952      	lsrs	r2, r2, #5
9002a38c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002a390:	4311      	orrs	r1, r2
9002a392:	f8ae 1000 	strh.w	r1, [lr]
9002a396:	e79f      	b.n	9002a2d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
9002a398:	b013      	add	sp, #76	@ 0x4c
9002a39a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a39e:	bf00      	nop
9002a3a0:	240245a8 	.word	0x240245a8

9002a3a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
9002a3a4:	b570      	push	{r4, r5, r6, lr}
9002a3a6:	1208      	asrs	r0, r1, #8
9002a3a8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
9002a3ac:	b29e      	uxth	r6, r3
9002a3ae:	1213      	asrs	r3, r2, #8
9002a3b0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002a3b4:	10cc      	asrs	r4, r1, #3
9002a3b6:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
9002a3ba:	00c9      	lsls	r1, r1, #3
9002a3bc:	fb10 f006 	smulbb	r0, r0, r6
9002a3c0:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9002a3c4:	fb13 f305 	smulbb	r3, r3, r5
9002a3c8:	fb14 f406 	smulbb	r4, r4, r6
9002a3cc:	4418      	add	r0, r3
9002a3ce:	10d3      	asrs	r3, r2, #3
9002a3d0:	00d2      	lsls	r2, r2, #3
9002a3d2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002a3d6:	b280      	uxth	r0, r0
9002a3d8:	b2d2      	uxtb	r2, r2
9002a3da:	fb13 f305 	smulbb	r3, r3, r5
9002a3de:	fb12 f205 	smulbb	r2, r2, r5
9002a3e2:	441c      	add	r4, r3
9002a3e4:	b2cb      	uxtb	r3, r1
9002a3e6:	fb13 f306 	smulbb	r3, r3, r6
9002a3ea:	b2a4      	uxth	r4, r4
9002a3ec:	4413      	add	r3, r2
9002a3ee:	1c42      	adds	r2, r0, #1
9002a3f0:	b29b      	uxth	r3, r3
9002a3f2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002a3f6:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
9002a3fa:	1c58      	adds	r0, r3, #1
9002a3fc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002a400:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002a404:	4310      	orrs	r0, r2
9002a406:	1c62      	adds	r2, r4, #1
9002a408:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002a40c:	0964      	lsrs	r4, r4, #5
9002a40e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002a412:	4320      	orrs	r0, r4
9002a414:	bd70      	pop	{r4, r5, r6, pc}
	...

9002a418 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9002a418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a41c:	b08f      	sub	sp, #60	@ 0x3c
9002a41e:	461c      	mov	r4, r3
9002a420:	460d      	mov	r5, r1
9002a422:	4616      	mov	r6, r2
9002a424:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
9002a428:	9004      	str	r0, [sp, #16]
9002a42a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002a42c:	2f00      	cmp	r7, #0
9002a42e:	f000 80f6 	beq.w	9002a61e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9002a432:	6820      	ldr	r0, [r4, #0]
9002a434:	aa0a      	add	r2, sp, #40	@ 0x28
9002a436:	6861      	ldr	r1, [r4, #4]
9002a438:	f04f 0802 	mov.w	r8, #2
9002a43c:	3604      	adds	r6, #4
9002a43e:	c203      	stmia	r2!, {r0, r1}
9002a440:	6818      	ldr	r0, [r3, #0]
9002a442:	aa0c      	add	r2, sp, #48	@ 0x30
9002a444:	6859      	ldr	r1, [r3, #4]
9002a446:	c203      	stmia	r2!, {r0, r1}
9002a448:	a80a      	add	r0, sp, #40	@ 0x28
9002a44a:	f7ee ffc7 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002a44e:	4621      	mov	r1, r4
9002a450:	a80c      	add	r0, sp, #48	@ 0x30
9002a452:	f7ee ffeb 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002a456:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002a45a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002a45e:	f002 0301 	and.w	r3, r2, #1
9002a462:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9002a466:	9306      	str	r3, [sp, #24]
9002a468:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002a46c:	f003 0101 	and.w	r1, r3, #1
9002a470:	9105      	str	r1, [sp, #20]
9002a472:	9805      	ldr	r0, [sp, #20]
9002a474:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9002a478:	4403      	add	r3, r0
9002a47a:	fb01 2303 	mla	r3, r1, r3, r2
9002a47e:	fb93 f3f8 	sdiv	r3, r3, r8
9002a482:	441d      	add	r5, r3
9002a484:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9002a488:	441a      	add	r2, r3
9002a48a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002a48e:	4419      	add	r1, r3
9002a490:	4b64      	ldr	r3, [pc, #400]	@ (9002a624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002a492:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002a496:	6818      	ldr	r0, [r3, #0]
9002a498:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
9002a49c:	6803      	ldr	r3, [r0, #0]
9002a49e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002a4a0:	4798      	blx	r3
9002a4a2:	4a61      	ldr	r2, [pc, #388]	@ (9002a628 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
9002a4a4:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002a4a8:	2fff      	cmp	r7, #255	@ 0xff
9002a4aa:	8813      	ldrh	r3, [r2, #0]
9002a4ac:	4611      	mov	r1, r2
9002a4ae:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
9002a4b2:	fb03 fb0b 	mul.w	fp, r3, fp
9002a4b6:	fb03 a404 	mla	r4, r3, r4, sl
9002a4ba:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002a4be:	d06b      	beq.n	9002a598 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
9002a4c0:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
9002a4c4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
9002a4c8:	9303      	str	r3, [sp, #12]
9002a4ca:	eb04 034b 	add.w	r3, r4, fp, lsl #1
9002a4ce:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002a4d2:	9b07      	ldr	r3, [sp, #28]
9002a4d4:	42a3      	cmp	r3, r4
9002a4d6:	f240 809d 	bls.w	9002a614 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002a4da:	9b06      	ldr	r3, [sp, #24]
9002a4dc:	2b00      	cmp	r3, #0
9002a4de:	d039      	beq.n	9002a554 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
9002a4e0:	782b      	ldrb	r3, [r5, #0]
9002a4e2:	f105 0801 	add.w	r8, r5, #1
9002a4e6:	f109 3bff 	add.w	fp, r9, #4294967295
9002a4ea:	8822      	ldrh	r2, [r4, #0]
9002a4ec:	f003 030f 	and.w	r3, r3, #15
9002a4f0:	9804      	ldr	r0, [sp, #16]
9002a4f2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002a4f6:	9b03      	ldr	r3, [sp, #12]
9002a4f8:	9300      	str	r3, [sp, #0]
9002a4fa:	463b      	mov	r3, r7
9002a4fc:	f7ff ff52 	bl	9002a3a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002a500:	f824 0b02 	strh.w	r0, [r4], #2
9002a504:	f1bb 0f01 	cmp.w	fp, #1
9002a508:	46a2      	mov	sl, r4
9002a50a:	f104 0404 	add.w	r4, r4, #4
9002a50e:	dd24      	ble.n	9002a55a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
9002a510:	f898 3000 	ldrb.w	r3, [r8]
9002a514:	f1ab 0b02 	sub.w	fp, fp, #2
9002a518:	f834 2c04 	ldrh.w	r2, [r4, #-4]
9002a51c:	091b      	lsrs	r3, r3, #4
9002a51e:	9804      	ldr	r0, [sp, #16]
9002a520:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002a524:	9b03      	ldr	r3, [sp, #12]
9002a526:	9300      	str	r3, [sp, #0]
9002a528:	463b      	mov	r3, r7
9002a52a:	f7ff ff3b 	bl	9002a3a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002a52e:	f824 0c04 	strh.w	r0, [r4, #-4]
9002a532:	f818 3b01 	ldrb.w	r3, [r8], #1
9002a536:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002a53a:	f003 030f 	and.w	r3, r3, #15
9002a53e:	9804      	ldr	r0, [sp, #16]
9002a540:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002a544:	9b03      	ldr	r3, [sp, #12]
9002a546:	9300      	str	r3, [sp, #0]
9002a548:	463b      	mov	r3, r7
9002a54a:	f7ff ff2b 	bl	9002a3a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002a54e:	f824 0c02 	strh.w	r0, [r4, #-2]
9002a552:	e7d7      	b.n	9002a504 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002a554:	46a8      	mov	r8, r5
9002a556:	46cb      	mov	fp, r9
9002a558:	e7d4      	b.n	9002a504 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002a55a:	d10e      	bne.n	9002a57a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
9002a55c:	f898 3000 	ldrb.w	r3, [r8]
9002a560:	f8ba 2000 	ldrh.w	r2, [sl]
9002a564:	091b      	lsrs	r3, r3, #4
9002a566:	9804      	ldr	r0, [sp, #16]
9002a568:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002a56c:	9b03      	ldr	r3, [sp, #12]
9002a56e:	9300      	str	r3, [sp, #0]
9002a570:	463b      	mov	r3, r7
9002a572:	f7ff ff17 	bl	9002a3a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002a576:	f82a 0b02 	strh.w	r0, [sl], #2
9002a57a:	9b08      	ldr	r3, [sp, #32]
9002a57c:	9a05      	ldr	r2, [sp, #20]
9002a57e:	881c      	ldrh	r4, [r3, #0]
9002a580:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002a584:	eba4 0409 	sub.w	r4, r4, r9
9002a588:	4413      	add	r3, r2
9002a58a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002a58c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
9002a590:	fb93 f3f2 	sdiv	r3, r3, r2
9002a594:	441d      	add	r5, r3
9002a596:	e79c      	b.n	9002a4d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
9002a598:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
9002a59c:	45a3      	cmp	fp, r4
9002a59e:	d939      	bls.n	9002a614 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
9002a5a0:	9b06      	ldr	r3, [sp, #24]
9002a5a2:	b1fb      	cbz	r3, 9002a5e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
9002a5a4:	782b      	ldrb	r3, [r5, #0]
9002a5a6:	1c6a      	adds	r2, r5, #1
9002a5a8:	f109 30ff 	add.w	r0, r9, #4294967295
9002a5ac:	3402      	adds	r4, #2
9002a5ae:	f003 030f 	and.w	r3, r3, #15
9002a5b2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002a5b6:	f824 3c02 	strh.w	r3, [r4, #-2]
9002a5ba:	2801      	cmp	r0, #1
9002a5bc:	4623      	mov	r3, r4
9002a5be:	f104 0404 	add.w	r4, r4, #4
9002a5c2:	dd12      	ble.n	9002a5ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
9002a5c4:	7813      	ldrb	r3, [r2, #0]
9002a5c6:	3802      	subs	r0, #2
9002a5c8:	091b      	lsrs	r3, r3, #4
9002a5ca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002a5ce:	f824 3c04 	strh.w	r3, [r4, #-4]
9002a5d2:	f812 3b01 	ldrb.w	r3, [r2], #1
9002a5d6:	f003 030f 	and.w	r3, r3, #15
9002a5da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002a5de:	f824 3c02 	strh.w	r3, [r4, #-2]
9002a5e2:	e7ea      	b.n	9002a5ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002a5e4:	462a      	mov	r2, r5
9002a5e6:	4648      	mov	r0, r9
9002a5e8:	e7e7      	b.n	9002a5ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002a5ea:	d106      	bne.n	9002a5fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
9002a5ec:	7812      	ldrb	r2, [r2, #0]
9002a5ee:	3302      	adds	r3, #2
9002a5f0:	0912      	lsrs	r2, r2, #4
9002a5f2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002a5f6:	f823 2c02 	strh.w	r2, [r3, #-2]
9002a5fa:	880c      	ldrh	r4, [r1, #0]
9002a5fc:	9a05      	ldr	r2, [sp, #20]
9002a5fe:	eba4 0409 	sub.w	r4, r4, r9
9002a602:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002a606:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002a60a:	4413      	add	r3, r2
9002a60c:	fb93 f3f8 	sdiv	r3, r3, r8
9002a610:	441d      	add	r5, r3
9002a612:	e7c3      	b.n	9002a59c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
9002a614:	4b03      	ldr	r3, [pc, #12]	@ (9002a624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002a616:	6818      	ldr	r0, [r3, #0]
9002a618:	6803      	ldr	r3, [r0, #0]
9002a61a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002a61c:	4798      	blx	r3
9002a61e:	b00f      	add	sp, #60	@ 0x3c
9002a620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a624:	24024598 	.word	0x24024598
9002a628:	24024590 	.word	0x24024590

9002a62c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
9002a62c:	b5f0      	push	{r4, r5, r6, r7, lr}
9002a62e:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002a632:	0a0f      	lsrs	r7, r1, #8
9002a634:	2dff      	cmp	r5, #255	@ 0xff
9002a636:	d10c      	bne.n	9002a652 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
9002a638:	2bff      	cmp	r3, #255	@ 0xff
9002a63a:	d10a      	bne.n	9002a652 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
9002a63c:	0948      	lsrs	r0, r1, #5
9002a63e:	4b25      	ldr	r3, [pc, #148]	@ (9002a6d4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
9002a640:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002a644:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002a648:	403b      	ands	r3, r7
9002a64a:	4318      	orrs	r0, r3
9002a64c:	4308      	orrs	r0, r1
9002a64e:	b280      	uxth	r0, r0
9002a650:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002a652:	fb15 f503 	smulbb	r5, r5, r3
9002a656:	1214      	asrs	r4, r2, #8
9002a658:	10d6      	asrs	r6, r2, #3
9002a65a:	b2ab      	uxth	r3, r5
9002a65c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002a660:	00d0      	lsls	r0, r2, #3
9002a662:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002a666:	1c5d      	adds	r5, r3, #1
9002a668:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002a66c:	b2c0      	uxtb	r0, r0
9002a66e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9002a672:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002a676:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9002a67a:	f3c5 2507 	ubfx	r5, r5, #8, #8
9002a67e:	fa1f fc85 	uxth.w	ip, r5
9002a682:	43ed      	mvns	r5, r5
9002a684:	fb12 f20c 	smulbb	r2, r2, ip
9002a688:	b2eb      	uxtb	r3, r5
9002a68a:	b2fd      	uxtb	r5, r7
9002a68c:	fb04 2403 	mla	r4, r4, r3, r2
9002a690:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
9002a694:	fb15 f50c 	smulbb	r5, r5, ip
9002a698:	b2c8      	uxtb	r0, r1
9002a69a:	b2a4      	uxth	r4, r4
9002a69c:	fb10 f00c 	smulbb	r0, r0, ip
9002a6a0:	fb06 5503 	mla	r5, r6, r3, r5
9002a6a4:	fb02 0003 	mla	r0, r2, r3, r0
9002a6a8:	b2ad      	uxth	r5, r5
9002a6aa:	b283      	uxth	r3, r0
9002a6ac:	1c60      	adds	r0, r4, #1
9002a6ae:	eb00 2414 	add.w	r4, r0, r4, lsr #8
9002a6b2:	1c58      	adds	r0, r3, #1
9002a6b4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002a6b8:	1c6b      	adds	r3, r5, #1
9002a6ba:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9002a6be:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002a6c2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002a6c6:	096d      	lsrs	r5, r5, #5
9002a6c8:	4320      	orrs	r0, r4
9002a6ca:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002a6ce:	4328      	orrs	r0, r5
9002a6d0:	e7be      	b.n	9002a650 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
9002a6d2:	bf00      	nop
9002a6d4:	00fff800 	.word	0x00fff800

9002a6d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9002a6d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a6dc:	461c      	mov	r4, r3
9002a6de:	b08d      	sub	sp, #52	@ 0x34
9002a6e0:	460d      	mov	r5, r1
9002a6e2:	4616      	mov	r6, r2
9002a6e4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002a6e6:	4680      	mov	r8, r0
9002a6e8:	6861      	ldr	r1, [r4, #4]
9002a6ea:	aa08      	add	r2, sp, #32
9002a6ec:	6820      	ldr	r0, [r4, #0]
9002a6ee:	f04f 0a02 	mov.w	sl, #2
9002a6f2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
9002a6f6:	3604      	adds	r6, #4
9002a6f8:	c203      	stmia	r2!, {r0, r1}
9002a6fa:	6818      	ldr	r0, [r3, #0]
9002a6fc:	aa0a      	add	r2, sp, #40	@ 0x28
9002a6fe:	6859      	ldr	r1, [r3, #4]
9002a700:	c203      	stmia	r2!, {r0, r1}
9002a702:	a808      	add	r0, sp, #32
9002a704:	f7ee fe6a 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002a708:	4621      	mov	r1, r4
9002a70a:	a80a      	add	r0, sp, #40	@ 0x28
9002a70c:	f7ee fe8e 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002a710:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9002a714:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
9002a718:	f002 0301 	and.w	r3, r2, #1
9002a71c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
9002a720:	9303      	str	r3, [sp, #12]
9002a722:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
9002a726:	f003 0101 	and.w	r1, r3, #1
9002a72a:	9102      	str	r1, [sp, #8]
9002a72c:	9802      	ldr	r0, [sp, #8]
9002a72e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
9002a732:	4403      	add	r3, r0
9002a734:	fb01 2303 	mla	r3, r1, r3, r2
9002a738:	fb93 f3fa 	sdiv	r3, r3, sl
9002a73c:	441d      	add	r5, r3
9002a73e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9002a742:	441a      	add	r2, r3
9002a744:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9002a748:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9002a74c:	4419      	add	r1, r3
9002a74e:	4a3e      	ldr	r2, [pc, #248]	@ (9002a848 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
9002a750:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
9002a754:	6810      	ldr	r0, [r2, #0]
9002a756:	9205      	str	r2, [sp, #20]
9002a758:	6803      	ldr	r3, [r0, #0]
9002a75a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002a75c:	4798      	blx	r3
9002a75e:	4b3b      	ldr	r3, [pc, #236]	@ (9002a84c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
9002a760:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
9002a764:	8819      	ldrh	r1, [r3, #0]
9002a766:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
9002a76a:	434f      	muls	r7, r1
9002a76c:	fb01 c404 	mla	r4, r1, r4, ip
9002a770:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002a774:	eb04 0247 	add.w	r2, r4, r7, lsl #1
9002a778:	e9cd 3a06 	strd	r3, sl, [sp, #24]
9002a77c:	9204      	str	r2, [sp, #16]
9002a77e:	9b04      	ldr	r3, [sp, #16]
9002a780:	429c      	cmp	r4, r3
9002a782:	d258      	bcs.n	9002a836 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
9002a784:	9b03      	ldr	r3, [sp, #12]
9002a786:	2b00      	cmp	r3, #0
9002a788:	d034      	beq.n	9002a7f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
9002a78a:	782b      	ldrb	r3, [r5, #0]
9002a78c:	1c6f      	adds	r7, r5, #1
9002a78e:	f003 030f 	and.w	r3, r3, #15
9002a792:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002a796:	0e0b      	lsrs	r3, r1, #24
9002a798:	d006      	beq.n	9002a7a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
9002a79a:	8822      	ldrh	r2, [r4, #0]
9002a79c:	4640      	mov	r0, r8
9002a79e:	9300      	str	r3, [sp, #0]
9002a7a0:	464b      	mov	r3, r9
9002a7a2:	f7ff ff43 	bl	9002a62c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002a7a6:	8020      	strh	r0, [r4, #0]
9002a7a8:	3402      	adds	r4, #2
9002a7aa:	f10b 3aff 	add.w	sl, fp, #4294967295
9002a7ae:	f1ba 0f01 	cmp.w	sl, #1
9002a7b2:	dd22      	ble.n	9002a7fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9002a7b4:	783b      	ldrb	r3, [r7, #0]
9002a7b6:	091b      	lsrs	r3, r3, #4
9002a7b8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002a7bc:	0e0b      	lsrs	r3, r1, #24
9002a7be:	d006      	beq.n	9002a7ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
9002a7c0:	8822      	ldrh	r2, [r4, #0]
9002a7c2:	4640      	mov	r0, r8
9002a7c4:	9300      	str	r3, [sp, #0]
9002a7c6:	464b      	mov	r3, r9
9002a7c8:	f7ff ff30 	bl	9002a62c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002a7cc:	8020      	strh	r0, [r4, #0]
9002a7ce:	f817 3b01 	ldrb.w	r3, [r7], #1
9002a7d2:	f003 030f 	and.w	r3, r3, #15
9002a7d6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002a7da:	0e0b      	lsrs	r3, r1, #24
9002a7dc:	d006      	beq.n	9002a7ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
9002a7de:	8862      	ldrh	r2, [r4, #2]
9002a7e0:	4640      	mov	r0, r8
9002a7e2:	9300      	str	r3, [sp, #0]
9002a7e4:	464b      	mov	r3, r9
9002a7e6:	f7ff ff21 	bl	9002a62c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002a7ea:	8060      	strh	r0, [r4, #2]
9002a7ec:	3404      	adds	r4, #4
9002a7ee:	f1aa 0a02 	sub.w	sl, sl, #2
9002a7f2:	e7dc      	b.n	9002a7ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002a7f4:	462f      	mov	r7, r5
9002a7f6:	46da      	mov	sl, fp
9002a7f8:	e7d9      	b.n	9002a7ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002a7fa:	d10d      	bne.n	9002a818 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
9002a7fc:	783b      	ldrb	r3, [r7, #0]
9002a7fe:	091b      	lsrs	r3, r3, #4
9002a800:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002a804:	0e0b      	lsrs	r3, r1, #24
9002a806:	d006      	beq.n	9002a816 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
9002a808:	8822      	ldrh	r2, [r4, #0]
9002a80a:	4640      	mov	r0, r8
9002a80c:	9300      	str	r3, [sp, #0]
9002a80e:	464b      	mov	r3, r9
9002a810:	f7ff ff0c 	bl	9002a62c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002a814:	8020      	strh	r0, [r4, #0]
9002a816:	3402      	adds	r4, #2
9002a818:	9b06      	ldr	r3, [sp, #24]
9002a81a:	9a02      	ldr	r2, [sp, #8]
9002a81c:	881b      	ldrh	r3, [r3, #0]
9002a81e:	eba3 030b 	sub.w	r3, r3, fp
9002a822:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002a826:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
9002a82a:	4413      	add	r3, r2
9002a82c:	9a07      	ldr	r2, [sp, #28]
9002a82e:	fb93 f3f2 	sdiv	r3, r3, r2
9002a832:	441d      	add	r5, r3
9002a834:	e7a3      	b.n	9002a77e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002a836:	9b05      	ldr	r3, [sp, #20]
9002a838:	6818      	ldr	r0, [r3, #0]
9002a83a:	6803      	ldr	r3, [r0, #0]
9002a83c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002a83e:	4798      	blx	r3
9002a840:	b00d      	add	sp, #52	@ 0x34
9002a842:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002a846:	bf00      	nop
9002a848:	24024598 	.word	0x24024598
9002a84c:	24024590 	.word	0x24024590

9002a850 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
9002a850:	b570      	push	{r4, r5, r6, lr}
9002a852:	1214      	asrs	r4, r2, #8
9002a854:	788d      	ldrb	r5, [r1, #2]
9002a856:	f89d 6010 	ldrb.w	r6, [sp, #16]
9002a85a:	10d0      	asrs	r0, r2, #3
9002a85c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9002a860:	00d2      	lsls	r2, r2, #3
9002a862:	fb15 f503 	smulbb	r5, r5, r3
9002a866:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002a86a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002a86e:	b2d2      	uxtb	r2, r2
9002a870:	fb04 5506 	mla	r5, r4, r6, r5
9002a874:	784c      	ldrb	r4, [r1, #1]
9002a876:	7809      	ldrb	r1, [r1, #0]
9002a878:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
9002a87c:	fb14 f403 	smulbb	r4, r4, r3
9002a880:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9002a884:	fb11 f303 	smulbb	r3, r1, r3
9002a888:	b2ad      	uxth	r5, r5
9002a88a:	fb00 4406 	mla	r4, r0, r6, r4
9002a88e:	fb02 3306 	mla	r3, r2, r6, r3
9002a892:	1c68      	adds	r0, r5, #1
9002a894:	b2a4      	uxth	r4, r4
9002a896:	b29b      	uxth	r3, r3
9002a898:	eb00 2515 	add.w	r5, r0, r5, lsr #8
9002a89c:	1c62      	adds	r2, r4, #1
9002a89e:	1c58      	adds	r0, r3, #1
9002a8a0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002a8a4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9002a8a8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002a8ac:	0964      	lsrs	r4, r4, #5
9002a8ae:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002a8b2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002a8b6:	4328      	orrs	r0, r5
9002a8b8:	4320      	orrs	r0, r4
9002a8ba:	bd70      	pop	{r4, r5, r6, pc}

9002a8bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9002a8bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002a8c0:	b08f      	sub	sp, #60	@ 0x3c
9002a8c2:	461c      	mov	r4, r3
9002a8c4:	4682      	mov	sl, r0
9002a8c6:	460e      	mov	r6, r1
9002a8c8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
9002a8cc:	4615      	mov	r5, r2
9002a8ce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002a8d0:	2f00      	cmp	r7, #0
9002a8d2:	f000 8141 	beq.w	9002ab58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002a8d6:	6820      	ldr	r0, [r4, #0]
9002a8d8:	aa0a      	add	r2, sp, #40	@ 0x28
9002a8da:	6861      	ldr	r1, [r4, #4]
9002a8dc:	f04f 0802 	mov.w	r8, #2
9002a8e0:	3504      	adds	r5, #4
9002a8e2:	c203      	stmia	r2!, {r0, r1}
9002a8e4:	6818      	ldr	r0, [r3, #0]
9002a8e6:	aa0c      	add	r2, sp, #48	@ 0x30
9002a8e8:	6859      	ldr	r1, [r3, #4]
9002a8ea:	c203      	stmia	r2!, {r0, r1}
9002a8ec:	a80a      	add	r0, sp, #40	@ 0x28
9002a8ee:	f7ee fd75 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002a8f2:	4621      	mov	r1, r4
9002a8f4:	a80c      	add	r0, sp, #48	@ 0x30
9002a8f6:	f7ee fd99 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002a8fa:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9002a8fe:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
9002a902:	f002 0301 	and.w	r3, r2, #1
9002a906:	9306      	str	r3, [sp, #24]
9002a908:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002a90c:	f003 0101 	and.w	r1, r3, #1
9002a910:	9105      	str	r1, [sp, #20]
9002a912:	9805      	ldr	r0, [sp, #20]
9002a914:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9002a918:	4403      	add	r3, r0
9002a91a:	fb01 2303 	mla	r3, r1, r3, r2
9002a91e:	fb93 f3f8 	sdiv	r3, r3, r8
9002a922:	441e      	add	r6, r3
9002a924:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9002a928:	441a      	add	r2, r3
9002a92a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9002a92e:	4419      	add	r1, r3
9002a930:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9002a934:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9002a938:	9303      	str	r3, [sp, #12]
9002a93a:	4b89      	ldr	r3, [pc, #548]	@ (9002ab60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
9002a93c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
9002a940:	6818      	ldr	r0, [r3, #0]
9002a942:	6803      	ldr	r3, [r0, #0]
9002a944:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9002a946:	4798      	blx	r3
9002a948:	4a86      	ldr	r2, [pc, #536]	@ (9002ab64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
9002a94a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
9002a94e:	2fff      	cmp	r7, #255	@ 0xff
9002a950:	8813      	ldrh	r3, [r2, #0]
9002a952:	4694      	mov	ip, r2
9002a954:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
9002a958:	fb03 9404 	mla	r4, r3, r4, r9
9002a95c:	fb03 f30b 	mul.w	r3, r3, fp
9002a960:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002a964:	d071      	beq.n	9002aa4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002a966:	43f9      	mvns	r1, r7
9002a968:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002a96c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
9002a970:	b2c9      	uxtb	r1, r1
9002a972:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002a976:	9104      	str	r1, [sp, #16]
9002a978:	9b07      	ldr	r3, [sp, #28]
9002a97a:	42a3      	cmp	r3, r4
9002a97c:	f240 80e7 	bls.w	9002ab4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002a980:	9b06      	ldr	r3, [sp, #24]
9002a982:	2b00      	cmp	r3, #0
9002a984:	d03d      	beq.n	9002aa02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002a986:	7831      	ldrb	r1, [r6, #0]
9002a988:	4650      	mov	r0, sl
9002a98a:	9b04      	ldr	r3, [sp, #16]
9002a98c:	f106 0801 	add.w	r8, r6, #1
9002a990:	f001 010f 	and.w	r1, r1, #15
9002a994:	8822      	ldrh	r2, [r4, #0]
9002a996:	9300      	str	r3, [sp, #0]
9002a998:	463b      	mov	r3, r7
9002a99a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002a99e:	4429      	add	r1, r5
9002a9a0:	f7ff ff56 	bl	9002a850 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002a9a4:	9b03      	ldr	r3, [sp, #12]
9002a9a6:	f824 0b02 	strh.w	r0, [r4], #2
9002a9aa:	f103 3bff 	add.w	fp, r3, #4294967295
9002a9ae:	f1bb 0f01 	cmp.w	fp, #1
9002a9b2:	46a1      	mov	r9, r4
9002a9b4:	f104 0404 	add.w	r4, r4, #4
9002a9b8:	dd27      	ble.n	9002aa0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
9002a9ba:	f898 1000 	ldrb.w	r1, [r8]
9002a9be:	4650      	mov	r0, sl
9002a9c0:	9b04      	ldr	r3, [sp, #16]
9002a9c2:	f1ab 0b02 	sub.w	fp, fp, #2
9002a9c6:	0909      	lsrs	r1, r1, #4
9002a9c8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
9002a9cc:	9300      	str	r3, [sp, #0]
9002a9ce:	463b      	mov	r3, r7
9002a9d0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002a9d4:	4429      	add	r1, r5
9002a9d6:	f7ff ff3b 	bl	9002a850 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002a9da:	f824 0c04 	strh.w	r0, [r4, #-4]
9002a9de:	f818 1b01 	ldrb.w	r1, [r8], #1
9002a9e2:	4650      	mov	r0, sl
9002a9e4:	9b04      	ldr	r3, [sp, #16]
9002a9e6:	f001 010f 	and.w	r1, r1, #15
9002a9ea:	f834 2c02 	ldrh.w	r2, [r4, #-2]
9002a9ee:	9300      	str	r3, [sp, #0]
9002a9f0:	463b      	mov	r3, r7
9002a9f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002a9f6:	4429      	add	r1, r5
9002a9f8:	f7ff ff2a 	bl	9002a850 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002a9fc:	f824 0c02 	strh.w	r0, [r4, #-2]
9002aa00:	e7d5      	b.n	9002a9ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002aa02:	46b0      	mov	r8, r6
9002aa04:	f8dd b00c 	ldr.w	fp, [sp, #12]
9002aa08:	e7d1      	b.n	9002a9ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002aa0a:	d10f      	bne.n	9002aa2c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
9002aa0c:	f898 1000 	ldrb.w	r1, [r8]
9002aa10:	4650      	mov	r0, sl
9002aa12:	9b04      	ldr	r3, [sp, #16]
9002aa14:	0909      	lsrs	r1, r1, #4
9002aa16:	f8b9 2000 	ldrh.w	r2, [r9]
9002aa1a:	9300      	str	r3, [sp, #0]
9002aa1c:	463b      	mov	r3, r7
9002aa1e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002aa22:	4429      	add	r1, r5
9002aa24:	f7ff ff14 	bl	9002a850 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002aa28:	f829 0b02 	strh.w	r0, [r9], #2
9002aa2c:	9b08      	ldr	r3, [sp, #32]
9002aa2e:	9a05      	ldr	r2, [sp, #20]
9002aa30:	881c      	ldrh	r4, [r3, #0]
9002aa32:	9b03      	ldr	r3, [sp, #12]
9002aa34:	1ae4      	subs	r4, r4, r3
9002aa36:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002aa3a:	4413      	add	r3, r2
9002aa3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002aa3e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002aa42:	fb93 f3f2 	sdiv	r3, r3, r2
9002aa46:	441e      	add	r6, r3
9002aa48:	e796      	b.n	9002a978 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002aa4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002aa4e:	4f46      	ldr	r7, [pc, #280]	@ (9002ab68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
9002aa50:	42a3      	cmp	r3, r4
9002aa52:	d97c      	bls.n	9002ab4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002aa54:	9a06      	ldr	r2, [sp, #24]
9002aa56:	2a00      	cmp	r2, #0
9002aa58:	d054      	beq.n	9002ab04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002aa5a:	7830      	ldrb	r0, [r6, #0]
9002aa5c:	1c71      	adds	r1, r6, #1
9002aa5e:	f000 000f 	and.w	r0, r0, #15
9002aa62:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002aa66:	eb05 0e00 	add.w	lr, r5, r0
9002aa6a:	5c28      	ldrb	r0, [r5, r0]
9002aa6c:	f89e 2002 	ldrb.w	r2, [lr, #2]
9002aa70:	f89e e001 	ldrb.w	lr, [lr, #1]
9002aa74:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002aa78:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002aa7c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
9002aa80:	ea42 020e 	orr.w	r2, r2, lr
9002aa84:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
9002aa88:	f824 2b02 	strh.w	r2, [r4], #2
9002aa8c:	9a03      	ldr	r2, [sp, #12]
9002aa8e:	f102 3eff 	add.w	lr, r2, #4294967295
9002aa92:	f1be 0f01 	cmp.w	lr, #1
9002aa96:	4620      	mov	r0, r4
9002aa98:	f104 0404 	add.w	r4, r4, #4
9002aa9c:	dd36      	ble.n	9002ab0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
9002aa9e:	7808      	ldrb	r0, [r1, #0]
9002aaa0:	f1ae 0e02 	sub.w	lr, lr, #2
9002aaa4:	0900      	lsrs	r0, r0, #4
9002aaa6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002aaaa:	eb05 0a00 	add.w	sl, r5, r0
9002aaae:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002aab2:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002aab6:	00d2      	lsls	r2, r2, #3
9002aab8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002aabc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002aac0:	ea49 0202 	orr.w	r2, r9, r2
9002aac4:	f815 9000 	ldrb.w	r9, [r5, r0]
9002aac8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002aacc:	f824 2c04 	strh.w	r2, [r4, #-4]
9002aad0:	f811 0b01 	ldrb.w	r0, [r1], #1
9002aad4:	f000 000f 	and.w	r0, r0, #15
9002aad8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002aadc:	eb05 0a00 	add.w	sl, r5, r0
9002aae0:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002aae4:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002aae8:	00d2      	lsls	r2, r2, #3
9002aaea:	ea07 2909 	and.w	r9, r7, r9, lsl #8
9002aaee:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002aaf2:	ea49 0202 	orr.w	r2, r9, r2
9002aaf6:	f815 9000 	ldrb.w	r9, [r5, r0]
9002aafa:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9002aafe:	f824 2c02 	strh.w	r2, [r4, #-2]
9002ab02:	e7c6      	b.n	9002aa92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002ab04:	4631      	mov	r1, r6
9002ab06:	f8dd e00c 	ldr.w	lr, [sp, #12]
9002ab0a:	e7c2      	b.n	9002aa92 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002ab0c:	d111      	bne.n	9002ab32 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9002ab0e:	7809      	ldrb	r1, [r1, #0]
9002ab10:	0909      	lsrs	r1, r1, #4
9002ab12:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002ab16:	186c      	adds	r4, r5, r1
9002ab18:	5c69      	ldrb	r1, [r5, r1]
9002ab1a:	78a2      	ldrb	r2, [r4, #2]
9002ab1c:	7864      	ldrb	r4, [r4, #1]
9002ab1e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002ab22:	00e4      	lsls	r4, r4, #3
9002ab24:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9002ab28:	4322      	orrs	r2, r4
9002ab2a:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
9002ab2e:	f820 2b02 	strh.w	r2, [r0], #2
9002ab32:	9a03      	ldr	r2, [sp, #12]
9002ab34:	f8bc 4000 	ldrh.w	r4, [ip]
9002ab38:	9905      	ldr	r1, [sp, #20]
9002ab3a:	1aa4      	subs	r4, r4, r2
9002ab3c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9002ab40:	440a      	add	r2, r1
9002ab42:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002ab46:	fb92 f2f8 	sdiv	r2, r2, r8
9002ab4a:	4416      	add	r6, r2
9002ab4c:	e780      	b.n	9002aa50 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
9002ab4e:	4b04      	ldr	r3, [pc, #16]	@ (9002ab60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
9002ab50:	6818      	ldr	r0, [r3, #0]
9002ab52:	6803      	ldr	r3, [r0, #0]
9002ab54:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002ab56:	4798      	blx	r3
9002ab58:	b00f      	add	sp, #60	@ 0x3c
9002ab5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002ab5e:	bf00      	nop
9002ab60:	24024598 	.word	0x24024598
9002ab64:	24024590 	.word	0x24024590
9002ab68:	fffff800 	.word	0xfffff800

9002ab6c <CRC_Lock>:
9002ab6c:	4a2d      	ldr	r2, [pc, #180]	@ (9002ac24 <CRC_Lock+0xb8>)
9002ab6e:	b530      	push	{r4, r5, lr}
9002ab70:	6813      	ldr	r3, [r2, #0]
9002ab72:	f24c 2540 	movw	r5, #49728	@ 0xc240
9002ab76:	f023 0301 	bic.w	r3, r3, #1
9002ab7a:	6013      	str	r3, [r2, #0]
9002ab7c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
9002ab80:	4b29      	ldr	r3, [pc, #164]	@ (9002ac28 <CRC_Lock+0xbc>)
9002ab82:	681c      	ldr	r4, [r3, #0]
9002ab84:	4014      	ands	r4, r2
9002ab86:	42ac      	cmp	r4, r5
9002ab88:	d005      	beq.n	9002ab96 <CRC_Lock+0x2a>
9002ab8a:	681c      	ldr	r4, [r3, #0]
9002ab8c:	f24c 2570 	movw	r5, #49776	@ 0xc270
9002ab90:	4014      	ands	r4, r2
9002ab92:	42ac      	cmp	r4, r5
9002ab94:	d125      	bne.n	9002abe2 <CRC_Lock+0x76>
9002ab96:	4b25      	ldr	r3, [pc, #148]	@ (9002ac2c <CRC_Lock+0xc0>)
9002ab98:	681b      	ldr	r3, [r3, #0]
9002ab9a:	2b00      	cmp	r3, #0
9002ab9c:	d139      	bne.n	9002ac12 <CRC_Lock+0xa6>
9002ab9e:	4b24      	ldr	r3, [pc, #144]	@ (9002ac30 <CRC_Lock+0xc4>)
9002aba0:	681a      	ldr	r2, [r3, #0]
9002aba2:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002aba6:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
9002abaa:	d00d      	beq.n	9002abc8 <CRC_Lock+0x5c>
9002abac:	681a      	ldr	r2, [r3, #0]
9002abae:	f240 4483 	movw	r4, #1155	@ 0x483
9002abb2:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002abb6:	42a2      	cmp	r2, r4
9002abb8:	d006      	beq.n	9002abc8 <CRC_Lock+0x5c>
9002abba:	681b      	ldr	r3, [r3, #0]
9002abbc:	f240 4285 	movw	r2, #1157	@ 0x485
9002abc0:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002abc4:	4293      	cmp	r3, r2
9002abc6:	d124      	bne.n	9002ac12 <CRC_Lock+0xa6>
9002abc8:	4b1a      	ldr	r3, [pc, #104]	@ (9002ac34 <CRC_Lock+0xc8>)
9002abca:	2201      	movs	r2, #1
9002abcc:	601a      	str	r2, [r3, #0]
9002abce:	681a      	ldr	r2, [r3, #0]
9002abd0:	2a00      	cmp	r2, #0
9002abd2:	d1fc      	bne.n	9002abce <CRC_Lock+0x62>
9002abd4:	4b18      	ldr	r3, [pc, #96]	@ (9002ac38 <CRC_Lock+0xcc>)
9002abd6:	6018      	str	r0, [r3, #0]
9002abd8:	6818      	ldr	r0, [r3, #0]
9002abda:	1a43      	subs	r3, r0, r1
9002abdc:	4258      	negs	r0, r3
9002abde:	4158      	adcs	r0, r3
9002abe0:	e00e      	b.n	9002ac00 <CRC_Lock+0x94>
9002abe2:	681b      	ldr	r3, [r3, #0]
9002abe4:	4013      	ands	r3, r2
9002abe6:	f24d 2220 	movw	r2, #53792	@ 0xd220
9002abea:	4293      	cmp	r3, r2
9002abec:	d111      	bne.n	9002ac12 <CRC_Lock+0xa6>
9002abee:	4b13      	ldr	r3, [pc, #76]	@ (9002ac3c <CRC_Lock+0xd0>)
9002abf0:	f240 4286 	movw	r2, #1158	@ 0x486
9002abf4:	681b      	ldr	r3, [r3, #0]
9002abf6:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002abfa:	4293      	cmp	r3, r2
9002abfc:	d001      	beq.n	9002ac02 <CRC_Lock+0x96>
9002abfe:	2000      	movs	r0, #0
9002ac00:	bd30      	pop	{r4, r5, pc}
9002ac02:	4b0f      	ldr	r3, [pc, #60]	@ (9002ac40 <CRC_Lock+0xd4>)
9002ac04:	2201      	movs	r2, #1
9002ac06:	601a      	str	r2, [r3, #0]
9002ac08:	681a      	ldr	r2, [r3, #0]
9002ac0a:	2a00      	cmp	r2, #0
9002ac0c:	d1fc      	bne.n	9002ac08 <CRC_Lock+0x9c>
9002ac0e:	4b0d      	ldr	r3, [pc, #52]	@ (9002ac44 <CRC_Lock+0xd8>)
9002ac10:	e7e1      	b.n	9002abd6 <CRC_Lock+0x6a>
9002ac12:	4b0d      	ldr	r3, [pc, #52]	@ (9002ac48 <CRC_Lock+0xdc>)
9002ac14:	2201      	movs	r2, #1
9002ac16:	601a      	str	r2, [r3, #0]
9002ac18:	681a      	ldr	r2, [r3, #0]
9002ac1a:	2a00      	cmp	r2, #0
9002ac1c:	d1fc      	bne.n	9002ac18 <CRC_Lock+0xac>
9002ac1e:	4b0b      	ldr	r3, [pc, #44]	@ (9002ac4c <CRC_Lock+0xe0>)
9002ac20:	e7d9      	b.n	9002abd6 <CRC_Lock+0x6a>
9002ac22:	bf00      	nop
9002ac24:	e0002000 	.word	0xe0002000
9002ac28:	e000ed00 	.word	0xe000ed00
9002ac2c:	e0042000 	.word	0xe0042000
9002ac30:	5c001000 	.word	0x5c001000
9002ac34:	58024c08 	.word	0x58024c08
9002ac38:	58024c00 	.word	0x58024c00
9002ac3c:	46008ff0 	.word	0x46008ff0
9002ac40:	46024c08 	.word	0x46024c08
9002ac44:	46024c00 	.word	0x46024c00
9002ac48:	40023008 	.word	0x40023008
9002ac4c:	40023000 	.word	0x40023000

9002ac50 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
9002ac50:	6101      	str	r1, [r0, #16]
9002ac52:	4770      	bx	lr

9002ac54 <_ZN8touchgfx8Gestures4tickEv>:
9002ac54:	7b83      	ldrb	r3, [r0, #14]
9002ac56:	b14b      	cbz	r3, 9002ac6c <_ZN8touchgfx8Gestures4tickEv+0x18>
9002ac58:	8903      	ldrh	r3, [r0, #8]
9002ac5a:	3301      	adds	r3, #1
9002ac5c:	b29b      	uxth	r3, r3
9002ac5e:	2b07      	cmp	r3, #7
9002ac60:	8103      	strh	r3, [r0, #8]
9002ac62:	bf81      	itttt	hi
9002ac64:	2300      	movhi	r3, #0
9002ac66:	8143      	strhhi	r3, [r0, #10]
9002ac68:	8183      	strhhi	r3, [r0, #12]
9002ac6a:	7383      	strbhi	r3, [r0, #14]
9002ac6c:	4770      	bx	lr
	...

9002ac70 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
9002ac70:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9002ac74:	4698      	mov	r8, r3
9002ac76:	8883      	ldrh	r3, [r0, #4]
9002ac78:	4604      	mov	r4, r0
9002ac7a:	4617      	mov	r7, r2
9002ac7c:	f8ad 3006 	strh.w	r3, [sp, #6]
9002ac80:	eba8 0303 	sub.w	r3, r8, r3
9002ac84:	4a19      	ldr	r2, [pc, #100]	@ (9002acec <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002ac86:	460e      	mov	r6, r1
9002ac88:	b21b      	sxth	r3, r3
9002ac8a:	88c1      	ldrh	r1, [r0, #6]
9002ac8c:	9200      	str	r2, [sp, #0]
9002ac8e:	2000      	movs	r0, #0
9002ac90:	2b00      	cmp	r3, #0
9002ac92:	8aa2      	ldrh	r2, [r4, #20]
9002ac94:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
9002ac98:	bfb8      	it	lt
9002ac9a:	425b      	neglt	r3, r3
9002ac9c:	f88d 0004 	strb.w	r0, [sp, #4]
9002aca0:	f8ad 1008 	strh.w	r1, [sp, #8]
9002aca4:	b21b      	sxth	r3, r3
9002aca6:	f8ad 800a 	strh.w	r8, [sp, #10]
9002acaa:	f8ad 500c 	strh.w	r5, [sp, #12]
9002acae:	4293      	cmp	r3, r2
9002acb0:	dc07      	bgt.n	9002acc2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
9002acb2:	1a69      	subs	r1, r5, r1
9002acb4:	b209      	sxth	r1, r1
9002acb6:	2900      	cmp	r1, #0
9002acb8:	bfb8      	it	lt
9002acba:	4249      	neglt	r1, r1
9002acbc:	b209      	sxth	r1, r1
9002acbe:	428a      	cmp	r2, r1
9002acc0:	da10      	bge.n	9002ace4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
9002acc2:	6920      	ldr	r0, [r4, #16]
9002acc4:	4669      	mov	r1, sp
9002acc6:	eba8 0606 	sub.w	r6, r8, r6
9002acca:	1bef      	subs	r7, r5, r7
9002accc:	6803      	ldr	r3, [r0, #0]
9002acce:	685b      	ldr	r3, [r3, #4]
9002acd0:	4798      	blx	r3
9002acd2:	2300      	movs	r3, #0
9002acd4:	2001      	movs	r0, #1
9002acd6:	8166      	strh	r6, [r4, #10]
9002acd8:	8123      	strh	r3, [r4, #8]
9002acda:	81a7      	strh	r7, [r4, #12]
9002acdc:	f8a4 8004 	strh.w	r8, [r4, #4]
9002ace0:	80e5      	strh	r5, [r4, #6]
9002ace2:	73a0      	strb	r0, [r4, #14]
9002ace4:	b004      	add	sp, #16
9002ace6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002acea:	bf00      	nop
9002acec:	90030604 	.word	0x90030604

9002acf0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
9002acf0:	b5f0      	push	{r4, r5, r6, r7, lr}
9002acf2:	461e      	mov	r6, r3
9002acf4:	1e4b      	subs	r3, r1, #1
9002acf6:	b085      	sub	sp, #20
9002acf8:	4604      	mov	r4, r0
9002acfa:	2b01      	cmp	r3, #1
9002acfc:	460d      	mov	r5, r1
9002acfe:	4617      	mov	r7, r2
9002ad00:	d84b      	bhi.n	9002ad9a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
9002ad02:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9002ad06:	1cd3      	adds	r3, r2, #3
9002ad08:	b29b      	uxth	r3, r3
9002ad0a:	2b06      	cmp	r3, #6
9002ad0c:	d916      	bls.n	9002ad3c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
9002ad0e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 9002adb0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002ad12:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002ad16:	f8cd c004 	str.w	ip, [sp, #4]
9002ad1a:	f04f 0c00 	mov.w	ip, #0
9002ad1e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002ad22:	6900      	ldr	r0, [r0, #16]
9002ad24:	f8ad 100c 	strh.w	r1, [sp, #12]
9002ad28:	a901      	add	r1, sp, #4
9002ad2a:	f88d c008 	strb.w	ip, [sp, #8]
9002ad2e:	f8ad 200a 	strh.w	r2, [sp, #10]
9002ad32:	f8ad 300e 	strh.w	r3, [sp, #14]
9002ad36:	6803      	ldr	r3, [r0, #0]
9002ad38:	689b      	ldr	r3, [r3, #8]
9002ad3a:	4798      	blx	r3
9002ad3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002ad40:	1cd3      	adds	r3, r2, #3
9002ad42:	b29b      	uxth	r3, r3
9002ad44:	2b06      	cmp	r3, #6
9002ad46:	d916      	bls.n	9002ad76 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002ad48:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9002adb0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002ad4c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002ad50:	f8cd c004 	str.w	ip, [sp, #4]
9002ad54:	f04f 0c01 	mov.w	ip, #1
9002ad58:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002ad5c:	6920      	ldr	r0, [r4, #16]
9002ad5e:	f8ad 100c 	strh.w	r1, [sp, #12]
9002ad62:	a901      	add	r1, sp, #4
9002ad64:	f88d c008 	strb.w	ip, [sp, #8]
9002ad68:	f8ad 200a 	strh.w	r2, [sp, #10]
9002ad6c:	f8ad 300e 	strh.w	r3, [sp, #14]
9002ad70:	6803      	ldr	r3, [r0, #0]
9002ad72:	689b      	ldr	r3, [r3, #8]
9002ad74:	4798      	blx	r3
9002ad76:	4b0d      	ldr	r3, [pc, #52]	@ (9002adac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
9002ad78:	a901      	add	r1, sp, #4
9002ad7a:	6920      	ldr	r0, [r4, #16]
9002ad7c:	9301      	str	r3, [sp, #4]
9002ad7e:	2300      	movs	r3, #0
9002ad80:	f88d 5008 	strb.w	r5, [sp, #8]
9002ad84:	f8ad 700a 	strh.w	r7, [sp, #10]
9002ad88:	f8ad 600c 	strh.w	r6, [sp, #12]
9002ad8c:	f8ad 300e 	strh.w	r3, [sp, #14]
9002ad90:	6803      	ldr	r3, [r0, #0]
9002ad92:	681b      	ldr	r3, [r3, #0]
9002ad94:	4798      	blx	r3
9002ad96:	b005      	add	sp, #20
9002ad98:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002ad9a:	2900      	cmp	r1, #0
9002ad9c:	d1eb      	bne.n	9002ad76 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002ad9e:	80a2      	strh	r2, [r4, #4]
9002ada0:	80c6      	strh	r6, [r0, #6]
9002ada2:	60a1      	str	r1, [r4, #8]
9002ada4:	81a1      	strh	r1, [r4, #12]
9002ada6:	73a1      	strb	r1, [r4, #14]
9002ada8:	e7e5      	b.n	9002ad76 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002adaa:	bf00      	nop
9002adac:	90030388 	.word	0x90030388
9002adb0:	90030618 	.word	0x90030618

9002adb4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
9002adb4:	10c9      	asrs	r1, r1, #3
9002adb6:	2900      	cmp	r1, #0
9002adb8:	bfb8      	it	lt
9002adba:	4249      	neglt	r1, r1
9002adbc:	2801      	cmp	r0, #1
9002adbe:	d108      	bne.n	9002add2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002adc0:	f3c1 0008 	ubfx	r0, r1, #0, #9
9002adc4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9002adc8:	4601      	mov	r1, r0
9002adca:	dd02      	ble.n	9002add2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
9002adcc:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
9002add0:	4770      	bx	lr
9002add2:	29ff      	cmp	r1, #255	@ 0xff
9002add4:	bfa8      	it	ge
9002add6:	21ff      	movge	r1, #255	@ 0xff
9002add8:	4608      	mov	r0, r1
9002adda:	4770      	bx	lr

9002addc <_ZN8touchgfx10Rasterizer6lineToEii>:
9002addc:	b410      	push	{r4}
9002adde:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
9002ade2:	429c      	cmp	r4, r3
9002ade4:	d803      	bhi.n	9002adee <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
9002ade6:	f85d 4b04 	ldr.w	r4, [sp], #4
9002adea:	f7ec bded 	b.w	900179c8 <_ZN8touchgfx7Outline6lineToEii>
9002adee:	f85d 4b04 	ldr.w	r4, [sp], #4
9002adf2:	4770      	bx	lr

9002adf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
9002adf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002adf8:	b08b      	sub	sp, #44	@ 0x2c
9002adfa:	4606      	mov	r6, r0
9002adfc:	468a      	mov	sl, r1
9002adfe:	e9cd 2306 	strd	r2, r3, [sp, #24]
9002ae02:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
9002ae06:	9308      	str	r3, [sp, #32]
9002ae08:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9002ae0c:	9309      	str	r3, [sp, #36]	@ 0x24
9002ae0e:	f7ec ff46 	bl	90017c9e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
9002ae12:	68b5      	ldr	r5, [r6, #8]
9002ae14:	4604      	mov	r4, r0
9002ae16:	2d00      	cmp	r5, #0
9002ae18:	d044      	beq.n	9002aea4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002ae1a:	6873      	ldr	r3, [r6, #4]
9002ae1c:	42ab      	cmp	r3, r5
9002ae1e:	d33d      	bcc.n	9002ae9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
9002ae20:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9002ae24:	f04f 0800 	mov.w	r8, #0
9002ae28:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
9002ae2c:	eb02 0b03 	add.w	fp, r2, r3
9002ae30:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
9002ae34:	fb02 1203 	mla	r2, r2, r3, r1
9002ae38:	9205      	str	r2, [sp, #20]
9002ae3a:	1e6a      	subs	r2, r5, #1
9002ae3c:	9204      	str	r2, [sp, #16]
9002ae3e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
9002ae42:	f9b4 7000 	ldrsh.w	r7, [r4]
9002ae46:	454b      	cmp	r3, r9
9002ae48:	463a      	mov	r2, r7
9002ae4a:	d008      	beq.n	9002ae5e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
9002ae4c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
9002ae50:	eb03 0b09 	add.w	fp, r3, r9
9002ae54:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
9002ae58:	fb03 1309 	mla	r3, r3, r9, r1
9002ae5c:	9305      	str	r3, [sp, #20]
9002ae5e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9002ae62:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002ae66:	4498      	add	r8, r3
9002ae68:	9b04      	ldr	r3, [sp, #16]
9002ae6a:	3b01      	subs	r3, #1
9002ae6c:	9304      	str	r3, [sp, #16]
9002ae6e:	9b04      	ldr	r3, [sp, #16]
9002ae70:	3301      	adds	r3, #1
9002ae72:	d015      	beq.n	9002aea0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
9002ae74:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
9002ae78:	42bb      	cmp	r3, r7
9002ae7a:	d117      	bne.n	9002aeac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
9002ae7c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
9002ae80:	9b04      	ldr	r3, [sp, #16]
9002ae82:	4548      	cmp	r0, r9
9002ae84:	f103 33ff 	add.w	r3, r3, #4294967295
9002ae88:	d17d      	bne.n	9002af86 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002ae8a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002ae8e:	4401      	add	r1, r0
9002ae90:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002ae94:	4480      	add	r8, r0
9002ae96:	e7e9      	b.n	9002ae6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
9002ae98:	461f      	mov	r7, r3
9002ae9a:	e042      	b.n	9002af22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
9002ae9c:	2000      	movs	r0, #0
9002ae9e:	e002      	b.n	9002aea6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
9002aea0:	2900      	cmp	r1, #0
9002aea2:	d16d      	bne.n	9002af80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
9002aea4:	2001      	movs	r0, #1
9002aea6:	b00b      	add	sp, #44	@ 0x2c
9002aea8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002aeac:	b379      	cbz	r1, 9002af0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
9002aeae:	2f00      	cmp	r7, #0
9002aeb0:	db29      	blt.n	9002af06 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002aeb2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002aeb6:	42bb      	cmp	r3, r7
9002aeb8:	dd25      	ble.n	9002af06 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002aeba:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
9002aebe:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002aec2:	f7ff ff77 	bl	9002adb4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002aec6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002aec8:	fb10 f003 	smulbb	r0, r0, r3
9002aecc:	b280      	uxth	r0, r0
9002aece:	1c41      	adds	r1, r0, #1
9002aed0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002aed4:	1209      	asrs	r1, r1, #8
9002aed6:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002aeda:	d014      	beq.n	9002af06 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
9002aedc:	b2c9      	uxtb	r1, r1
9002aede:	9808      	ldr	r0, [sp, #32]
9002aee0:	b2ba      	uxth	r2, r7
9002aee2:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002aee4:	9102      	str	r1, [sp, #8]
9002aee6:	2101      	movs	r1, #1
9002aee8:	4413      	add	r3, r2
9002aeea:	4402      	add	r2, r0
9002aeec:	9101      	str	r1, [sp, #4]
9002aeee:	fa0f f18b 	sxth.w	r1, fp
9002aef2:	f8da 0000 	ldr.w	r0, [sl]
9002aef6:	b21b      	sxth	r3, r3
9002aef8:	9100      	str	r1, [sp, #0]
9002aefa:	b212      	sxth	r2, r2
9002aefc:	6941      	ldr	r1, [r0, #20]
9002aefe:	4650      	mov	r0, sl
9002af00:	460d      	mov	r5, r1
9002af02:	9905      	ldr	r1, [sp, #20]
9002af04:	47a8      	blx	r5
9002af06:	9b04      	ldr	r3, [sp, #16]
9002af08:	1c7a      	adds	r2, r7, #1
9002af0a:	3301      	adds	r3, #1
9002af0c:	d0ca      	beq.n	9002aea4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002af0e:	f9b4 7000 	ldrsh.w	r7, [r4]
9002af12:	1abb      	subs	r3, r7, r2
9002af14:	2b00      	cmp	r3, #0
9002af16:	dd31      	ble.n	9002af7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002af18:	2a00      	cmp	r2, #0
9002af1a:	dabd      	bge.n	9002ae98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
9002af1c:	2f00      	cmp	r7, #0
9002af1e:	dd2d      	ble.n	9002af7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002af20:	2200      	movs	r2, #0
9002af22:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
9002af26:	19d1      	adds	r1, r2, r7
9002af28:	4299      	cmp	r1, r3
9002af2a:	db02      	blt.n	9002af32 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
9002af2c:	1a9f      	subs	r7, r3, r2
9002af2e:	2f00      	cmp	r7, #0
9002af30:	dd24      	ble.n	9002af7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002af32:	ea4f 1188 	mov.w	r1, r8, lsl #6
9002af36:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002af3a:	f7ff ff3b 	bl	9002adb4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002af3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002af40:	fb10 f003 	smulbb	r0, r0, r3
9002af44:	b280      	uxth	r0, r0
9002af46:	1c41      	adds	r1, r0, #1
9002af48:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002af4c:	1209      	asrs	r1, r1, #8
9002af4e:	f011 0fff 	tst.w	r1, #255	@ 0xff
9002af52:	d013      	beq.n	9002af7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002af54:	b292      	uxth	r2, r2
9002af56:	9808      	ldr	r0, [sp, #32]
9002af58:	b2c9      	uxtb	r1, r1
9002af5a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002af5c:	b23f      	sxth	r7, r7
9002af5e:	4413      	add	r3, r2
9002af60:	9102      	str	r1, [sp, #8]
9002af62:	4402      	add	r2, r0
9002af64:	fa0f f18b 	sxth.w	r1, fp
9002af68:	f8da 0000 	ldr.w	r0, [sl]
9002af6c:	b21b      	sxth	r3, r3
9002af6e:	9100      	str	r1, [sp, #0]
9002af70:	b212      	sxth	r2, r2
9002af72:	9701      	str	r7, [sp, #4]
9002af74:	9905      	ldr	r1, [sp, #20]
9002af76:	6947      	ldr	r7, [r0, #20]
9002af78:	4650      	mov	r0, sl
9002af7a:	47b8      	blx	r7
9002af7c:	464b      	mov	r3, r9
9002af7e:	e75e      	b.n	9002ae3e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
9002af80:	2f00      	cmp	r7, #0
9002af82:	da96      	bge.n	9002aeb2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
9002af84:	e78e      	b.n	9002aea4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002af86:	2900      	cmp	r1, #0
9002af88:	d0f8      	beq.n	9002af7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002af8a:	e790      	b.n	9002aeae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

9002af8c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
9002af8c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002af90:	461e      	mov	r6, r3
9002af92:	4b36      	ldr	r3, [pc, #216]	@ (9002b06c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
9002af94:	2500      	movs	r5, #0
9002af96:	f100 0814 	add.w	r8, r0, #20
9002af9a:	4604      	mov	r4, r0
9002af9c:	4617      	mov	r7, r2
9002af9e:	e9c0 3100 	strd	r3, r1, [r0]
9002afa2:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
9002afa6:	8185      	strh	r5, [r0, #12]
9002afa8:	8103      	strh	r3, [r0, #8]
9002afaa:	f89d 3020 	ldrb.w	r3, [sp, #32]
9002afae:	81c5      	strh	r5, [r0, #14]
9002afb0:	7283      	strb	r3, [r0, #10]
9002afb2:	8205      	strh	r5, [r0, #16]
9002afb4:	8245      	strh	r5, [r0, #18]
9002afb6:	4640      	mov	r0, r8
9002afb8:	f7ec f84c 	bl	90017054 <_ZN8touchgfx7OutlineC1Ev>
9002afbc:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
9002afc0:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
9002afc4:	466b      	mov	r3, sp
9002afc6:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
9002afca:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
9002afce:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
9002afd2:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
9002afd6:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
9002afda:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
9002afde:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
9002afe2:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
9002afe6:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
9002afea:	6830      	ldr	r0, [r6, #0]
9002afec:	6871      	ldr	r1, [r6, #4]
9002afee:	8872      	ldrh	r2, [r6, #2]
9002aff0:	8835      	ldrh	r5, [r6, #0]
9002aff2:	c303      	stmia	r3!, {r0, r1}
9002aff4:	887b      	ldrh	r3, [r7, #2]
9002aff6:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
9002affa:	4413      	add	r3, r2
9002affc:	883a      	ldrh	r2, [r7, #0]
9002affe:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
9002b002:	442a      	add	r2, r5
9002b004:	81e3      	strh	r3, [r4, #14]
9002b006:	8220      	strh	r0, [r4, #16]
9002b008:	4668      	mov	r0, sp
9002b00a:	81a2      	strh	r2, [r4, #12]
9002b00c:	8261      	strh	r1, [r4, #18]
9002b00e:	4639      	mov	r1, r7
9002b010:	f7ee fa0c 	bl	9001942c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002b014:	f104 000c 	add.w	r0, r4, #12
9002b018:	f7ee f9e0 	bl	900193dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002b01c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002b020:	f8bd 2000 	ldrh.w	r2, [sp]
9002b024:	4640      	mov	r0, r8
9002b026:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
9002b02a:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
9002b02e:	f7eb fff6 	bl	9001701e <_ZN8touchgfx7Outline5resetEv>
9002b032:	f9bd 3000 	ldrsh.w	r3, [sp]
9002b036:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
9002b03a:	4620      	mov	r0, r4
9002b03c:	015b      	lsls	r3, r3, #5
9002b03e:	64e3      	str	r3, [r4, #76]	@ 0x4c
9002b040:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9002b044:	015b      	lsls	r3, r3, #5
9002b046:	6523      	str	r3, [r4, #80]	@ 0x50
9002b048:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002b04c:	015b      	lsls	r3, r3, #5
9002b04e:	6563      	str	r3, [r4, #84]	@ 0x54
9002b050:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9002b054:	015b      	lsls	r3, r3, #5
9002b056:	65a3      	str	r3, [r4, #88]	@ 0x58
9002b058:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
9002b05c:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
9002b060:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
9002b064:	b002      	add	sp, #8
9002b066:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b06a:	bf00      	nop
9002b06c:	90030954 	.word	0x90030954

9002b070 <_ZN8touchgfx6Canvas5closeEv>:
9002b070:	b538      	push	{r3, r4, r5, lr}
9002b072:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002b076:	4604      	mov	r4, r0
9002b078:	b193      	cbz	r3, 9002b0a0 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002b07a:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
9002b07e:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
9002b082:	4213      	tst	r3, r2
9002b084:	d10c      	bne.n	9002b0a0 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002b086:	f100 0514 	add.w	r5, r0, #20
9002b08a:	b123      	cbz	r3, 9002b096 <_ZN8touchgfx6Canvas5closeEv+0x26>
9002b08c:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
9002b090:	4628      	mov	r0, r5
9002b092:	f7ff fea3 	bl	9002addc <_ZN8touchgfx10Rasterizer6lineToEii>
9002b096:	4628      	mov	r0, r5
9002b098:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
9002b09c:	f7ff fe9e 	bl	9002addc <_ZN8touchgfx10Rasterizer6lineToEii>
9002b0a0:	2300      	movs	r3, #0
9002b0a2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002b0a6:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002b0aa:	4298      	cmp	r0, r3
9002b0ac:	bf34      	ite	cc
9002b0ae:	2000      	movcc	r0, #0
9002b0b0:	2001      	movcs	r0, #1
9002b0b2:	bd38      	pop	{r3, r4, r5, pc}

9002b0b4 <_ZN8touchgfx6Canvas6renderEh>:
9002b0b4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002b0b8:	7a85      	ldrb	r5, [r0, #10]
9002b0ba:	4604      	mov	r4, r0
9002b0bc:	4369      	muls	r1, r5
9002b0be:	1c4d      	adds	r5, r1, #1
9002b0c0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
9002b0c4:	122d      	asrs	r5, r5, #8
9002b0c6:	f000 8098 	beq.w	9002b1fa <_ZN8touchgfx6Canvas6renderEh+0x146>
9002b0ca:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
9002b0ce:	2b00      	cmp	r3, #0
9002b0d0:	f000 8093 	beq.w	9002b1fa <_ZN8touchgfx6Canvas6renderEh+0x146>
9002b0d4:	f7ff ffcc 	bl	9002b070 <_ZN8touchgfx6Canvas5closeEv>
9002b0d8:	4607      	mov	r7, r0
9002b0da:	2800      	cmp	r0, #0
9002b0dc:	d045      	beq.n	9002b16a <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002b0de:	6860      	ldr	r0, [r4, #4]
9002b0e0:	4e47      	ldr	r6, [pc, #284]	@ (9002b200 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
9002b0e2:	6803      	ldr	r3, [r0, #0]
9002b0e4:	6837      	ldr	r7, [r6, #0]
9002b0e6:	689b      	ldr	r3, [r3, #8]
9002b0e8:	4798      	blx	r3
9002b0ea:	4601      	mov	r1, r0
9002b0ec:	4638      	mov	r0, r7
9002b0ee:	f7e9 f919 	bl	90014324 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
9002b0f2:	4607      	mov	r7, r0
9002b0f4:	f7e8 fcda 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
9002b0f8:	6803      	ldr	r3, [r0, #0]
9002b0fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9002b0fc:	4798      	blx	r3
9002b0fe:	4680      	mov	r8, r0
9002b100:	f7e8 fcd4 	bl	90013aac <_ZN8touchgfx3HAL3lcdEv>
9002b104:	6803      	ldr	r3, [r0, #0]
9002b106:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002b108:	4798      	blx	r3
9002b10a:	280b      	cmp	r0, #11
9002b10c:	d85a      	bhi.n	9002b1c4 <_ZN8touchgfx6Canvas6renderEh+0x110>
9002b10e:	e8df f000 	tbb	[pc, r0]
9002b112:	5b50      	.short	0x5b50
9002b114:	3059066b 	.word	0x3059066b
9002b118:	64646440 	.word	0x64646440
9002b11c:	6464      	.short	0x6464
9002b11e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002b122:	2208      	movs	r2, #8
9002b124:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b128:	fb91 f2f2 	sdiv	r2, r1, r2
9002b12c:	fb08 2303 	mla	r3, r8, r3, r2
9002b130:	441f      	add	r7, r3
9002b132:	424b      	negs	r3, r1
9002b134:	f001 0107 	and.w	r1, r1, #7
9002b138:	f003 0307 	and.w	r3, r3, #7
9002b13c:	bf58      	it	pl
9002b13e:	4259      	negpl	r1, r3
9002b140:	b2c9      	uxtb	r1, r1
9002b142:	b2ed      	uxtb	r5, r5
9002b144:	463a      	mov	r2, r7
9002b146:	fa0f f388 	sxth.w	r3, r8
9002b14a:	f104 0014 	add.w	r0, r4, #20
9002b14e:	e9cd 1500 	strd	r1, r5, [sp]
9002b152:	6861      	ldr	r1, [r4, #4]
9002b154:	f7ff fe4e 	bl	9002adf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
9002b158:	4607      	mov	r7, r0
9002b15a:	6860      	ldr	r0, [r4, #4]
9002b15c:	6803      	ldr	r3, [r0, #0]
9002b15e:	691b      	ldr	r3, [r3, #16]
9002b160:	4798      	blx	r3
9002b162:	6830      	ldr	r0, [r6, #0]
9002b164:	6803      	ldr	r3, [r0, #0]
9002b166:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9002b168:	4798      	blx	r3
9002b16a:	4638      	mov	r0, r7
9002b16c:	b002      	add	sp, #8
9002b16e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b172:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002b176:	2204      	movs	r2, #4
9002b178:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b17c:	fb91 f2f2 	sdiv	r2, r1, r2
9002b180:	fb08 2303 	mla	r3, r8, r3, r2
9002b184:	441f      	add	r7, r3
9002b186:	424b      	negs	r3, r1
9002b188:	f001 0103 	and.w	r1, r1, #3
9002b18c:	f003 0303 	and.w	r3, r3, #3
9002b190:	e7d4      	b.n	9002b13c <_ZN8touchgfx6Canvas6renderEh+0x88>
9002b192:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9002b196:	2202      	movs	r2, #2
9002b198:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b19c:	2900      	cmp	r1, #0
9002b19e:	fb91 f2f2 	sdiv	r2, r1, r2
9002b1a2:	f001 0101 	and.w	r1, r1, #1
9002b1a6:	fb08 2303 	mla	r3, r8, r3, r2
9002b1aa:	bfb8      	it	lt
9002b1ac:	4249      	neglt	r1, r1
9002b1ae:	441f      	add	r7, r3
9002b1b0:	e7c6      	b.n	9002b140 <_ZN8touchgfx6Canvas6renderEh+0x8c>
9002b1b2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b1b6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002b1ba:	fb08 f303 	mul.w	r3, r8, r3
9002b1be:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9002b1c2:	441f      	add	r7, r3
9002b1c4:	2100      	movs	r1, #0
9002b1c6:	e7bc      	b.n	9002b142 <_ZN8touchgfx6Canvas6renderEh+0x8e>
9002b1c8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b1cc:	2103      	movs	r1, #3
9002b1ce:	fb08 f203 	mul.w	r2, r8, r3
9002b1d2:	89a3      	ldrh	r3, [r4, #12]
9002b1d4:	fb13 2301 	smlabb	r3, r3, r1, r2
9002b1d8:	e7f3      	b.n	9002b1c2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002b1da:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b1de:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002b1e2:	fb08 2303 	mla	r3, r8, r3, r2
9002b1e6:	e7ec      	b.n	9002b1c2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002b1e8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002b1ec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002b1f0:	fb08 f303 	mul.w	r3, r8, r3
9002b1f4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9002b1f8:	e7e3      	b.n	9002b1c2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
9002b1fa:	2701      	movs	r7, #1
9002b1fc:	e7b5      	b.n	9002b16a <_ZN8touchgfx6Canvas6renderEh+0xb6>
9002b1fe:	bf00      	nop
9002b200:	24024598 	.word	0x24024598

9002b204 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
9002b204:	4b06      	ldr	r3, [pc, #24]	@ (9002b220 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
9002b206:	b510      	push	{r4, lr}
9002b208:	781b      	ldrb	r3, [r3, #0]
9002b20a:	2b01      	cmp	r3, #1
9002b20c:	d107      	bne.n	9002b21e <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
9002b20e:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
9002b212:	680b      	ldr	r3, [r1, #0]
9002b214:	6814      	ldr	r4, [r2, #0]
9002b216:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
9002b21a:	6013      	str	r3, [r2, #0]
9002b21c:	600c      	str	r4, [r1, #0]
9002b21e:	bd10      	pop	{r4, pc}
9002b220:	2402458e 	.word	0x2402458e

9002b224 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
9002b224:	b513      	push	{r0, r1, r4, lr}
9002b226:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002b22a:	4604      	mov	r4, r0
9002b22c:	e9cd 2100 	strd	r2, r1, [sp]
9002b230:	b9a3      	cbnz	r3, 9002b25c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
9002b232:	466a      	mov	r2, sp
9002b234:	a901      	add	r1, sp, #4
9002b236:	4620      	mov	r0, r4
9002b238:	f7ff ffe4 	bl	9002b204 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002b23c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002b23e:	9901      	ldr	r1, [sp, #4]
9002b240:	9a00      	ldr	r2, [sp, #0]
9002b242:	1ac9      	subs	r1, r1, r3
9002b244:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9002b246:	1ad2      	subs	r2, r2, r3
9002b248:	9101      	str	r1, [sp, #4]
9002b24a:	2a00      	cmp	r2, #0
9002b24c:	9200      	str	r2, [sp, #0]
9002b24e:	da0b      	bge.n	9002b268 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
9002b250:	2301      	movs	r3, #1
9002b252:	2900      	cmp	r1, #0
9002b254:	da0e      	bge.n	9002b274 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
9002b256:	f043 0304 	orr.w	r3, r3, #4
9002b25a:	e013      	b.n	9002b284 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
9002b25c:	f7ff ff08 	bl	9002b070 <_ZN8touchgfx6Canvas5closeEv>
9002b260:	2800      	cmp	r0, #0
9002b262:	d1e6      	bne.n	9002b232 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
9002b264:	b002      	add	sp, #8
9002b266:	bd10      	pop	{r4, pc}
9002b268:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002b26a:	429a      	cmp	r2, r3
9002b26c:	bfac      	ite	ge
9002b26e:	2302      	movge	r3, #2
9002b270:	2300      	movlt	r3, #0
9002b272:	e7ee      	b.n	9002b252 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
9002b274:	6d60      	ldr	r0, [r4, #84]	@ 0x54
9002b276:	4281      	cmp	r1, r0
9002b278:	bfac      	ite	ge
9002b27a:	2008      	movge	r0, #8
9002b27c:	2000      	movlt	r0, #0
9002b27e:	4318      	orrs	r0, r3
9002b280:	b2c3      	uxtb	r3, r0
9002b282:	b158      	cbz	r0, 9002b29c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
9002b284:	2200      	movs	r2, #0
9002b286:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
9002b28a:	9901      	ldr	r1, [sp, #4]
9002b28c:	9a00      	ldr	r2, [sp, #0]
9002b28e:	66e1      	str	r1, [r4, #108]	@ 0x6c
9002b290:	6722      	str	r2, [r4, #112]	@ 0x70
9002b292:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
9002b296:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
9002b29a:	e7e3      	b.n	9002b264 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002b29c:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002b2a0:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
9002b2a4:	4298      	cmp	r0, r3
9002b2a6:	d803      	bhi.n	9002b2b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
9002b2a8:	f104 0014 	add.w	r0, r4, #20
9002b2ac:	f7ec fba6 	bl	900179fc <_ZN8touchgfx7Outline6moveToEii>
9002b2b0:	2301      	movs	r3, #1
9002b2b2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002b2b6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002b2ba:	2300      	movs	r3, #0
9002b2bc:	e7e5      	b.n	9002b28a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

9002b2be <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
9002b2be:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002b2c0:	ab02      	add	r3, sp, #8
9002b2c2:	4604      	mov	r4, r0
9002b2c4:	9101      	str	r1, [sp, #4]
9002b2c6:	a901      	add	r1, sp, #4
9002b2c8:	f843 2d08 	str.w	r2, [r3, #-8]!
9002b2cc:	461a      	mov	r2, r3
9002b2ce:	f7ff ff99 	bl	9002b204 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002b2d2:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002b2d4:	9901      	ldr	r1, [sp, #4]
9002b2d6:	9a00      	ldr	r2, [sp, #0]
9002b2d8:	1ac9      	subs	r1, r1, r3
9002b2da:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9002b2dc:	1ad2      	subs	r2, r2, r3
9002b2de:	9101      	str	r1, [sp, #4]
9002b2e0:	2a00      	cmp	r2, #0
9002b2e2:	9200      	str	r2, [sp, #0]
9002b2e4:	db1c      	blt.n	9002b320 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
9002b2e6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002b2e8:	429a      	cmp	r2, r3
9002b2ea:	bfac      	ite	ge
9002b2ec:	2002      	movge	r0, #2
9002b2ee:	2000      	movlt	r0, #0
9002b2f0:	2900      	cmp	r1, #0
9002b2f2:	db17      	blt.n	9002b324 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
9002b2f4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9002b2f6:	4299      	cmp	r1, r3
9002b2f8:	bfac      	ite	ge
9002b2fa:	2308      	movge	r3, #8
9002b2fc:	2300      	movlt	r3, #0
9002b2fe:	4303      	orrs	r3, r0
9002b300:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
9002b304:	b2dd      	uxtb	r5, r3
9002b306:	b978      	cbnz	r0, 9002b328 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
9002b308:	f104 0014 	add.w	r0, r4, #20
9002b30c:	f7ff fd66 	bl	9002addc <_ZN8touchgfx10Rasterizer6lineToEii>
9002b310:	9b01      	ldr	r3, [sp, #4]
9002b312:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
9002b316:	6623      	str	r3, [r4, #96]	@ 0x60
9002b318:	9b00      	ldr	r3, [sp, #0]
9002b31a:	6663      	str	r3, [r4, #100]	@ 0x64
9002b31c:	b002      	add	sp, #8
9002b31e:	bd70      	pop	{r4, r5, r6, pc}
9002b320:	2001      	movs	r0, #1
9002b322:	e7e5      	b.n	9002b2f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
9002b324:	2304      	movs	r3, #4
9002b326:	e7ea      	b.n	9002b2fe <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
9002b328:	b113      	cbz	r3, 9002b330 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
9002b32a:	ea10 0305 	ands.w	r3, r0, r5
9002b32e:	d11c      	bne.n	9002b36a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
9002b330:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
9002b334:	f104 0614 	add.w	r6, r4, #20
9002b338:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
9002b33c:	b98b      	cbnz	r3, 9002b362 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002b33e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
9002b342:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
9002b346:	4298      	cmp	r0, r3
9002b348:	d802      	bhi.n	9002b350 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
9002b34a:	4630      	mov	r0, r6
9002b34c:	f7ec fb56 	bl	900179fc <_ZN8touchgfx7Outline6moveToEii>
9002b350:	2301      	movs	r3, #1
9002b352:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
9002b356:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002b35a:	4630      	mov	r0, r6
9002b35c:	e9dd 2100 	ldrd	r2, r1, [sp]
9002b360:	e7d4      	b.n	9002b30c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
9002b362:	4630      	mov	r0, r6
9002b364:	f7ff fd3a 	bl	9002addc <_ZN8touchgfx10Rasterizer6lineToEii>
9002b368:	e7f7      	b.n	9002b35a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
9002b36a:	461d      	mov	r5, r3
9002b36c:	e7d0      	b.n	9002b310 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

9002b370 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
9002b370:	b538      	push	{r3, r4, r5, lr}
9002b372:	ed2d 8b10 	vpush	{d8-d15}
9002b376:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
9002b37a:	4605      	mov	r5, r0
9002b37c:	eeb0 ca40 	vmov.f32	s24, s0
9002b380:	460c      	mov	r4, r1
9002b382:	eef0 ca60 	vmov.f32	s25, s1
9002b386:	ed9f ba57 	vldr	s22, [pc, #348]	@ 9002b4e4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
9002b38a:	eeb0 da41 	vmov.f32	s26, s2
9002b38e:	eef0 da61 	vmov.f32	s27, s3
9002b392:	eeb0 ea42 	vmov.f32	s28, s4
9002b396:	eef0 ea62 	vmov.f32	s29, s5
9002b39a:	eef0 aa6b 	vmov.f32	s21, s23
9002b39e:	2c08      	cmp	r4, #8
9002b3a0:	d86e      	bhi.n	9002b480 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
9002b3a2:	ee7e 6a4c 	vsub.f32	s13, s28, s24
9002b3a6:	ee7d 7aee 	vsub.f32	s15, s27, s29
9002b3aa:	ee3d 6a4e 	vsub.f32	s12, s26, s28
9002b3ae:	ee3e 7aec 	vsub.f32	s14, s29, s25
9002b3b2:	ee66 7ae7 	vnmul.f32	s15, s13, s15
9002b3b6:	ee3c fa0d 	vadd.f32	s30, s24, s26
9002b3ba:	ee7c faad 	vadd.f32	s31, s25, s27
9002b3be:	eee6 7a07 	vfma.f32	s15, s12, s14
9002b3c2:	ee7d 9a0e 	vadd.f32	s19, s26, s28
9002b3c6:	ee3d aaae 	vadd.f32	s20, s27, s29
9002b3ca:	ee2f fa2b 	vmul.f32	s30, s30, s23
9002b3ce:	ee6f faab 	vmul.f32	s31, s31, s23
9002b3d2:	ee69 9aab 	vmul.f32	s19, s19, s23
9002b3d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9002b3da:	ee2a aa2b 	vmul.f32	s20, s20, s23
9002b3de:	ee7f 8a29 	vadd.f32	s17, s30, s19
9002b3e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b3e6:	ee3f 9a8a 	vadd.f32	s18, s31, s20
9002b3ea:	ee68 8aab 	vmul.f32	s17, s17, s23
9002b3ee:	bf48      	it	mi
9002b3f0:	eef1 7a67 	vnegmi.f32	s15, s15
9002b3f4:	ee29 9a2b 	vmul.f32	s18, s18, s23
9002b3f8:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
9002b3fc:	eef4 7acb 	vcmpe.f32	s15, s22
9002b400:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b404:	dd3f      	ble.n	9002b486 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
9002b406:	ee27 7a07 	vmul.f32	s14, s14, s14
9002b40a:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002b40e:	eea6 7aa6 	vfma.f32	s14, s13, s13
9002b412:	ee27 7a06 	vmul.f32	s14, s14, s12
9002b416:	eef4 7ac7 	vcmpe.f32	s15, s14
9002b41a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b41e:	d847      	bhi.n	9002b4b0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002b420:	ee7e 0a4d 	vsub.f32	s1, s28, s26
9002b424:	ee3e 0aed 	vsub.f32	s0, s29, s27
9002b428:	f000 fbbf 	bl	9002bbaa <atan2f>
9002b42c:	eeb0 8a40 	vmov.f32	s16, s0
9002b430:	ee7d 0a4c 	vsub.f32	s1, s26, s24
9002b434:	ee3d 0aec 	vsub.f32	s0, s27, s25
9002b438:	f000 fbb7 	bl	9002bbaa <atan2f>
9002b43c:	ee38 0a40 	vsub.f32	s0, s16, s0
9002b440:	eddf 7a29 	vldr	s15, [pc, #164]	@ 9002b4e8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
9002b444:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002b448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b44c:	bf48      	it	mi
9002b44e:	eeb1 0a40 	vnegmi.f32	s0, s0
9002b452:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b45a:	bfa4      	itt	ge
9002b45c:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 9002b4ec <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
9002b460:	ee37 0ac0 	vsubge.f32	s0, s15, s0
9002b464:	eddf 7a22 	vldr	s15, [pc, #136]	@ 9002b4f0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
9002b468:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b46c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b470:	d51e      	bpl.n	9002b4b0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
9002b472:	eef0 0a49 	vmov.f32	s1, s18
9002b476:	4628      	mov	r0, r5
9002b478:	eeb0 0a68 	vmov.f32	s0, s17
9002b47c:	f7ea f8c6 	bl	9001560c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002b480:	ecbd 8b10 	vpop	{d8-d15}
9002b484:	bd38      	pop	{r3, r4, r5, pc}
9002b486:	ee7c 7a0e 	vadd.f32	s15, s24, s28
9002b48a:	eeb0 7a68 	vmov.f32	s14, s17
9002b48e:	eef0 6a49 	vmov.f32	s13, s18
9002b492:	eea7 7aea 	vfms.f32	s14, s15, s21
9002b496:	ee7c 7aae 	vadd.f32	s15, s25, s29
9002b49a:	eee7 6aea 	vfms.f32	s13, s15, s21
9002b49e:	ee66 7aa6 	vmul.f32	s15, s13, s13
9002b4a2:	eee7 7a07 	vfma.f32	s15, s14, s14
9002b4a6:	eef4 7ac6 	vcmpe.f32	s15, s12
9002b4aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b4ae:	d9e0      	bls.n	9002b472 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
9002b4b0:	3401      	adds	r4, #1
9002b4b2:	eef0 0a6c 	vmov.f32	s1, s25
9002b4b6:	eeb0 0a4c 	vmov.f32	s0, s24
9002b4ba:	4628      	mov	r0, r5
9002b4bc:	4621      	mov	r1, r4
9002b4be:	eef0 2a49 	vmov.f32	s5, s18
9002b4c2:	eeb0 2a68 	vmov.f32	s4, s17
9002b4c6:	eef0 1a6f 	vmov.f32	s3, s31
9002b4ca:	eeb0 1a4f 	vmov.f32	s2, s30
9002b4ce:	f7ff ff4f 	bl	9002b370 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
9002b4d2:	eef0 da4a 	vmov.f32	s27, s20
9002b4d6:	eeb0 da69 	vmov.f32	s26, s19
9002b4da:	eef0 ca49 	vmov.f32	s25, s18
9002b4de:	eeb0 ca68 	vmov.f32	s24, s17
9002b4e2:	e75c      	b.n	9002b39e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
9002b4e4:	2edbe6ff 	.word	0x2edbe6ff
9002b4e8:	40490fdb 	.word	0x40490fdb
9002b4ec:	40c90fdb 	.word	0x40c90fdb
9002b4f0:	3dcccccd 	.word	0x3dcccccd

9002b4f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
9002b4f4:	b530      	push	{r4, r5, lr}
9002b4f6:	ed2d 8b10 	vpush	{d8-d15}
9002b4fa:	eef0 8a40 	vmov.f32	s17, s0
9002b4fe:	b085      	sub	sp, #20
9002b500:	eef0 9a60 	vmov.f32	s19, s1
9002b504:	4604      	mov	r4, r0
9002b506:	eef0 fa41 	vmov.f32	s31, s2
9002b50a:	460d      	mov	r5, r1
9002b50c:	eeb0 fa61 	vmov.f32	s30, s3
9002b510:	eef0 ba42 	vmov.f32	s23, s4
9002b514:	eeb0 ca62 	vmov.f32	s24, s5
9002b518:	eef0 aa43 	vmov.f32	s21, s6
9002b51c:	eeb0 ba63 	vmov.f32	s22, s7
9002b520:	2d08      	cmp	r5, #8
9002b522:	f200 8113 	bhi.w	9002b74c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
9002b526:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
9002b52a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
9002b52e:	ee7f 6aab 	vadd.f32	s13, s31, s23
9002b532:	ee38 daaf 	vadd.f32	s26, s17, s31
9002b536:	ee26 6a27 	vmul.f32	s12, s12, s15
9002b53a:	ee7c ca0b 	vadd.f32	s25, s24, s22
9002b53e:	ee2d da27 	vmul.f32	s26, s26, s15
9002b542:	ed8d 6a01 	vstr	s12, [sp, #4]
9002b546:	eea6 6aa7 	vfma.f32	s12, s13, s15
9002b54a:	ee6c caa7 	vmul.f32	s25, s25, s15
9002b54e:	eeb0 ea4d 	vmov.f32	s28, s26
9002b552:	ee79 da8f 	vadd.f32	s27, s19, s30
9002b556:	ee3f 7a0c 	vadd.f32	s14, s30, s24
9002b55a:	eea6 eaa7 	vfma.f32	s28, s13, s15
9002b55e:	ee66 6a27 	vmul.f32	s13, s12, s15
9002b562:	ee6d daa7 	vmul.f32	s27, s27, s15
9002b566:	edcd 6a03 	vstr	s13, [sp, #12]
9002b56a:	eef0 6a6c 	vmov.f32	s13, s25
9002b56e:	eef0 ea6d 	vmov.f32	s29, s27
9002b572:	ee2e ea27 	vmul.f32	s28, s28, s15
9002b576:	eee7 6a27 	vfma.f32	s13, s14, s15
9002b57a:	eee7 ea27 	vfma.f32	s29, s14, s15
9002b57e:	ee26 7aa7 	vmul.f32	s14, s13, s15
9002b582:	ee6e eaa7 	vmul.f32	s29, s29, s15
9002b586:	eef0 6a67 	vmov.f32	s13, s15
9002b58a:	ed8d 7a02 	vstr	s14, [sp, #8]
9002b58e:	ed9d 7a03 	vldr	s14, [sp, #12]
9002b592:	ee3e 9a07 	vadd.f32	s18, s28, s14
9002b596:	ed9d 7a02 	vldr	s14, [sp, #8]
9002b59a:	ee3e aa87 	vadd.f32	s20, s29, s14
9002b59e:	ee29 9a27 	vmul.f32	s18, s18, s15
9002b5a2:	ee2a aa27 	vmul.f32	s20, s20, s15
9002b5a6:	2d00      	cmp	r5, #0
9002b5a8:	f000 810b 	beq.w	9002b7c2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b5ac:	ee7a 5ae8 	vsub.f32	s11, s21, s17
9002b5b0:	eddf 4a95 	vldr	s9, [pc, #596]	@ 9002b808 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
9002b5b4:	ee3f 7a4b 	vsub.f32	s14, s30, s22
9002b5b8:	ee7b 7a69 	vsub.f32	s15, s22, s19
9002b5bc:	ee3f 6aea 	vsub.f32	s12, s31, s21
9002b5c0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9002b5c4:	ee3b 5aea 	vsub.f32	s10, s23, s21
9002b5c8:	eea6 7a27 	vfma.f32	s14, s12, s15
9002b5cc:	ee3c 6a4b 	vsub.f32	s12, s24, s22
9002b5d0:	ee25 6ac6 	vnmul.f32	s12, s11, s12
9002b5d4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9002b5d8:	eea5 6a27 	vfma.f32	s12, s10, s15
9002b5dc:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
9002b5e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b5e4:	bf48      	it	mi
9002b5e6:	eeb1 7a47 	vnegmi.f32	s14, s14
9002b5ea:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
9002b5ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b5f2:	eeb4 7ae4 	vcmpe.f32	s14, s9
9002b5f6:	bf48      	it	mi
9002b5f8:	eeb1 6a46 	vnegmi.f32	s12, s12
9002b5fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b600:	f340 80a8 	ble.w	9002b754 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
9002b604:	eeb4 6ae4 	vcmpe.f32	s12, s9
9002b608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b60c:	dd5a      	ble.n	9002b6c4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
9002b60e:	ee65 5aa5 	vmul.f32	s11, s11, s11
9002b612:	ee37 7a06 	vadd.f32	s14, s14, s12
9002b616:	eee7 5aa7 	vfma.f32	s11, s15, s15
9002b61a:	ee27 7a07 	vmul.f32	s14, s14, s14
9002b61e:	ee65 7a85 	vmul.f32	s15, s11, s10
9002b622:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002b626:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b62a:	f200 80ca 	bhi.w	9002b7c2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b62e:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002b632:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002b636:	f000 fab8 	bl	9002bbaa <atan2f>
9002b63a:	eeb0 8a40 	vmov.f32	s16, s0
9002b63e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
9002b642:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002b646:	f000 fab0 	bl	9002bbaa <atan2f>
9002b64a:	ee38 fa40 	vsub.f32	s30, s16, s0
9002b64e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
9002b652:	ee3b 0a4c 	vsub.f32	s0, s22, s24
9002b656:	eeb5 fac0 	vcmpe.f32	s30, #0.0
9002b65a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b65e:	bf48      	it	mi
9002b660:	eeb1 fa4f 	vnegmi.f32	s30, s30
9002b664:	f000 faa1 	bl	9002bbaa <atan2f>
9002b668:	ee30 0a48 	vsub.f32	s0, s0, s16
9002b66c:	eddf 7a67 	vldr	s15, [pc, #412]	@ 9002b80c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002b670:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002b674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b678:	eeb4 fae7 	vcmpe.f32	s30, s15
9002b67c:	eddf 7a63 	vldr	s15, [pc, #396]	@ 9002b80c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002b680:	bf48      	it	mi
9002b682:	eeb1 0a40 	vnegmi.f32	s0, s0
9002b686:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b68a:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b68e:	eddf 7a60 	vldr	s15, [pc, #384]	@ 9002b810 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
9002b692:	bfa4      	itt	ge
9002b694:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 9002b814 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002b698:	ee37 fa4f 	vsubge.f32	s30, s14, s30
9002b69c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b6a0:	bfa4      	itt	ge
9002b6a2:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 9002b814 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002b6a6:	ee37 0a40 	vsubge.f32	s0, s14, s0
9002b6aa:	ee3f 0a00 	vadd.f32	s0, s30, s0
9002b6ae:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b6b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b6b6:	f140 8084 	bpl.w	9002b7c2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b6ba:	eef0 0a4a 	vmov.f32	s1, s20
9002b6be:	eeb0 0a49 	vmov.f32	s0, s18
9002b6c2:	e040      	b.n	9002b746 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
9002b6c4:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002b6c8:	ee27 7a07 	vmul.f32	s14, s14, s14
9002b6cc:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002b6d0:	ee67 7a85 	vmul.f32	s15, s15, s10
9002b6d4:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002b6d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b6dc:	d871      	bhi.n	9002b7c2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b6de:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002b6e2:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002b6e6:	f000 fa60 	bl	9002bbaa <atan2f>
9002b6ea:	ee7f 0ae8 	vsub.f32	s1, s31, s17
9002b6ee:	eeb0 8a40 	vmov.f32	s16, s0
9002b6f2:	ee3f 0a69 	vsub.f32	s0, s30, s19
9002b6f6:	f000 fa58 	bl	9002bbaa <atan2f>
9002b6fa:	ee38 0a40 	vsub.f32	s0, s16, s0
9002b6fe:	eddf 7a43 	vldr	s15, [pc, #268]	@ 9002b80c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
9002b702:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9002b706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b70a:	bf48      	it	mi
9002b70c:	eeb1 0a40 	vnegmi.f32	s0, s0
9002b710:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b718:	bfa4      	itt	ge
9002b71a:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 9002b814 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
9002b71e:	ee37 0ac0 	vsubge.f32	s0, s15, s0
9002b722:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9002b810 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
9002b726:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002b72a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b72e:	d548      	bpl.n	9002b7c2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b730:	eef0 0a4f 	vmov.f32	s1, s30
9002b734:	4620      	mov	r0, r4
9002b736:	eeb0 0a6f 	vmov.f32	s0, s31
9002b73a:	f7e9 ff67 	bl	9001560c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002b73e:	eef0 0a4c 	vmov.f32	s1, s24
9002b742:	eeb0 0a6b 	vmov.f32	s0, s23
9002b746:	4620      	mov	r0, r4
9002b748:	f7e9 ff60 	bl	9001560c <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9002b74c:	b005      	add	sp, #20
9002b74e:	ecbd 8b10 	vpop	{d8-d15}
9002b752:	bd30      	pop	{r4, r5, pc}
9002b754:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 9002b808 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
9002b758:	eeb4 6ac7 	vcmpe.f32	s12, s14
9002b75c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b760:	dd19      	ble.n	9002b796 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
9002b762:	ee67 7aa7 	vmul.f32	s15, s15, s15
9002b766:	ee26 7a06 	vmul.f32	s14, s12, s12
9002b76a:	eee5 7aa5 	vfma.f32	s15, s11, s11
9002b76e:	ee67 7a85 	vmul.f32	s15, s15, s10
9002b772:	eeb4 7ae7 	vcmpe.f32	s14, s15
9002b776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b77a:	d822      	bhi.n	9002b7c2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
9002b77c:	ee7a 0aeb 	vsub.f32	s1, s21, s23
9002b780:	ee3b 0a4c 	vsub.f32	s0, s22, s24
9002b784:	f000 fa11 	bl	9002bbaa <atan2f>
9002b788:	ee7b 0aef 	vsub.f32	s1, s23, s31
9002b78c:	eeb0 8a40 	vmov.f32	s16, s0
9002b790:	ee3c 0a4f 	vsub.f32	s0, s24, s30
9002b794:	e7af      	b.n	9002b6f6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
9002b796:	ee78 7aaa 	vadd.f32	s15, s17, s21
9002b79a:	eeb0 7a49 	vmov.f32	s14, s18
9002b79e:	eeb0 6a4a 	vmov.f32	s12, s20
9002b7a2:	eea7 7ae6 	vfms.f32	s14, s15, s13
9002b7a6:	ee79 7a8b 	vadd.f32	s15, s19, s22
9002b7aa:	eea7 6ae6 	vfms.f32	s12, s15, s13
9002b7ae:	ee66 7a06 	vmul.f32	s15, s12, s12
9002b7b2:	eee7 7a07 	vfma.f32	s15, s14, s14
9002b7b6:	eef4 7ac5 	vcmpe.f32	s15, s10
9002b7ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002b7be:	f67f af7c 	bls.w	9002b6ba <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
9002b7c2:	3501      	adds	r5, #1
9002b7c4:	eef0 0a69 	vmov.f32	s1, s19
9002b7c8:	eeb0 0a68 	vmov.f32	s0, s17
9002b7cc:	4620      	mov	r0, r4
9002b7ce:	4629      	mov	r1, r5
9002b7d0:	eef0 3a4a 	vmov.f32	s7, s20
9002b7d4:	eeb0 3a49 	vmov.f32	s6, s18
9002b7d8:	eef0 2a6e 	vmov.f32	s5, s29
9002b7dc:	eeb0 2a4e 	vmov.f32	s4, s28
9002b7e0:	eef0 1a6d 	vmov.f32	s3, s27
9002b7e4:	eeb0 1a4d 	vmov.f32	s2, s26
9002b7e8:	f7ff fe84 	bl	9002b4f4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
9002b7ec:	eeb0 ca6c 	vmov.f32	s24, s25
9002b7f0:	eddd ba01 	vldr	s23, [sp, #4]
9002b7f4:	eef0 9a4a 	vmov.f32	s19, s20
9002b7f8:	ed9d fa02 	vldr	s30, [sp, #8]
9002b7fc:	eef0 8a49 	vmov.f32	s17, s18
9002b800:	eddd fa03 	vldr	s31, [sp, #12]
9002b804:	e68c      	b.n	9002b520 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
9002b806:	bf00      	nop
9002b808:	2edbe6ff 	.word	0x2edbe6ff
9002b80c:	40490fdb 	.word	0x40490fdb
9002b810:	3dcccccd 	.word	0x3dcccccd
9002b814:	40c90fdb 	.word	0x40c90fdb

9002b818 <_ZN8touchgfx6CanvasD1Ev>:
9002b818:	4b04      	ldr	r3, [pc, #16]	@ (9002b82c <_ZN8touchgfx6CanvasD1Ev+0x14>)
9002b81a:	b510      	push	{r4, lr}
9002b81c:	4604      	mov	r4, r0
9002b81e:	f840 3b14 	str.w	r3, [r0], #20
9002b822:	f7eb fbf4 	bl	9001700e <_ZN8touchgfx7OutlineD1Ev>
9002b826:	4620      	mov	r0, r4
9002b828:	bd10      	pop	{r4, pc}
9002b82a:	bf00      	nop
9002b82c:	90030954 	.word	0x90030954

9002b830 <_ZN8touchgfx6CanvasD0Ev>:
9002b830:	b510      	push	{r4, lr}
9002b832:	4604      	mov	r4, r0
9002b834:	f7ff fff0 	bl	9002b818 <_ZN8touchgfx6CanvasD1Ev>
9002b838:	2174      	movs	r1, #116	@ 0x74
9002b83a:	4620      	mov	r0, r4
9002b83c:	f000 f98d 	bl	9002bb5a <_ZdlPvj>
9002b840:	4620      	mov	r0, r4
9002b842:	bd10      	pop	{r4, pc}

9002b844 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
9002b844:	4b07      	ldr	r3, [pc, #28]	@ (9002b864 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
9002b846:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9002b848:	881b      	ldrh	r3, [r3, #0]
9002b84a:	4293      	cmp	r3, r2
9002b84c:	bf81      	itttt	hi
9002b84e:	4b06      	ldrhi	r3, [pc, #24]	@ (9002b868 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
9002b850:	681b      	ldrhi	r3, [r3, #0]
9002b852:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
9002b856:	7858      	ldrbhi	r0, [r3, #1]
9002b858:	bf8c      	ite	hi
9002b85a:	f000 0003 	andhi.w	r0, r0, #3
9002b85e:	2000      	movls	r0, #0
9002b860:	4770      	bx	lr
9002b862:	bf00      	nop
9002b864:	240245f4 	.word	0x240245f4
9002b868:	240245f0 	.word	0x240245f0

9002b86c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
9002b86c:	4b11      	ldr	r3, [pc, #68]	@ (9002b8b4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
9002b86e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002b872:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
9002b874:	4604      	mov	r4, r0
9002b876:	881b      	ldrh	r3, [r3, #0]
9002b878:	428b      	cmp	r3, r1
9002b87a:	d918      	bls.n	9002b8ae <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
9002b87c:	6803      	ldr	r3, [r0, #0]
9002b87e:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
9002b880:	4b0d      	ldr	r3, [pc, #52]	@ (9002b8b8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
9002b882:	6818      	ldr	r0, [r3, #0]
9002b884:	f7d9 ff6a 	bl	9000575c <_ZNK8touchgfx5Texts7getTextEt>
9002b888:	6823      	ldr	r3, [r4, #0]
9002b88a:	4606      	mov	r6, r0
9002b88c:	4620      	mov	r0, r4
9002b88e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9002b890:	4798      	blx	r3
9002b892:	6823      	ldr	r3, [r4, #0]
9002b894:	4607      	mov	r7, r0
9002b896:	4620      	mov	r0, r4
9002b898:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9002b89c:	4798      	blx	r3
9002b89e:	463a      	mov	r2, r7
9002b8a0:	4603      	mov	r3, r0
9002b8a2:	4631      	mov	r1, r6
9002b8a4:	4620      	mov	r0, r4
9002b8a6:	46ac      	mov	ip, r5
9002b8a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002b8ac:	4760      	bx	ip
9002b8ae:	2000      	movs	r0, #0
9002b8b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002b8b4:	240245f4 	.word	0x240245f4
9002b8b8:	240245fc 	.word	0x240245fc

9002b8bc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
9002b8bc:	4b18      	ldr	r3, [pc, #96]	@ (9002b920 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
9002b8be:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
9002b8c2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
9002b8c4:	4604      	mov	r4, r0
9002b8c6:	881b      	ldrh	r3, [r3, #0]
9002b8c8:	428b      	cmp	r3, r1
9002b8ca:	d926      	bls.n	9002b91a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
9002b8cc:	4b15      	ldr	r3, [pc, #84]	@ (9002b924 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
9002b8ce:	681b      	ldr	r3, [r3, #0]
9002b8d0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
9002b8d4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
9002b8d8:	4b13      	ldr	r3, [pc, #76]	@ (9002b928 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
9002b8da:	7855      	ldrb	r5, [r2, #1]
9002b8dc:	681b      	ldr	r3, [r3, #0]
9002b8de:	f3c5 0581 	ubfx	r5, r5, #2, #2
9002b8e2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
9002b8e6:	6833      	ldr	r3, [r6, #0]
9002b8e8:	69df      	ldr	r7, [r3, #28]
9002b8ea:	4b10      	ldr	r3, [pc, #64]	@ (9002b92c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
9002b8ec:	6818      	ldr	r0, [r3, #0]
9002b8ee:	f7d9 ff35 	bl	9000575c <_ZNK8touchgfx5Texts7getTextEt>
9002b8f2:	6823      	ldr	r3, [r4, #0]
9002b8f4:	4680      	mov	r8, r0
9002b8f6:	4620      	mov	r0, r4
9002b8f8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9002b8fa:	4798      	blx	r3
9002b8fc:	6823      	ldr	r3, [r4, #0]
9002b8fe:	4681      	mov	r9, r0
9002b900:	4620      	mov	r0, r4
9002b902:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9002b906:	4798      	blx	r3
9002b908:	464b      	mov	r3, r9
9002b90a:	9000      	str	r0, [sp, #0]
9002b90c:	4642      	mov	r2, r8
9002b90e:	4629      	mov	r1, r5
9002b910:	4630      	mov	r0, r6
9002b912:	47b8      	blx	r7
9002b914:	b003      	add	sp, #12
9002b916:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9002b91a:	2000      	movs	r0, #0
9002b91c:	e7fa      	b.n	9002b914 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
9002b91e:	bf00      	nop
9002b920:	240245f4 	.word	0x240245f4
9002b924:	240245f0 	.word	0x240245f0
9002b928:	240245f8 	.word	0x240245f8
9002b92c:	240245fc 	.word	0x240245fc

9002b930 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
9002b930:	b40e      	push	{r1, r2, r3}
9002b932:	4b30      	ldr	r3, [pc, #192]	@ (9002b9f4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
9002b934:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002b938:	881a      	ldrh	r2, [r3, #0]
9002b93a:	b09d      	sub	sp, #116	@ 0x74
9002b93c:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
9002b93e:	4604      	mov	r4, r0
9002b940:	429a      	cmp	r2, r3
9002b942:	d954      	bls.n	9002b9ee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
9002b944:	aa26      	add	r2, sp, #152	@ 0x98
9002b946:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 9002b9f8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
9002b94a:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 9002b9fc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
9002b94e:	9202      	str	r2, [sp, #8]
9002b950:	f8d9 2000 	ldr.w	r2, [r9]
9002b954:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9002b958:	f8d8 3000 	ldr.w	r3, [r8]
9002b95c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9002b960:	682b      	ldr	r3, [r5, #0]
9002b962:	4628      	mov	r0, r5
9002b964:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9002b966:	4798      	blx	r3
9002b968:	4606      	mov	r6, r0
9002b96a:	b207      	sxth	r7, r0
9002b96c:	a803      	add	r0, sp, #12
9002b96e:	f7ef ff25 	bl	9001b7bc <_ZN8touchgfx12TextProviderC1Ev>
9002b972:	682b      	ldr	r3, [r5, #0]
9002b974:	4628      	mov	r0, r5
9002b976:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9002b978:	4798      	blx	r3
9002b97a:	682b      	ldr	r3, [r5, #0]
9002b97c:	4682      	mov	sl, r0
9002b97e:	4628      	mov	r0, r5
9002b980:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9002b982:	4798      	blx	r3
9002b984:	4653      	mov	r3, sl
9002b986:	9000      	str	r0, [sp, #0]
9002b988:	a803      	add	r0, sp, #12
9002b98a:	9a02      	ldr	r2, [sp, #8]
9002b98c:	9925      	ldr	r1, [sp, #148]	@ 0x94
9002b98e:	f7ef ff68 	bl	9001b862 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9002b992:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
9002b994:	f8d9 3000 	ldr.w	r3, [r9]
9002b998:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
9002b99c:	8925      	ldrh	r5, [r4, #8]
9002b99e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
9002b9a2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
9002b9a6:	eba5 050c 	sub.w	r5, r5, ip
9002b9aa:	784a      	ldrb	r2, [r1, #1]
9002b9ac:	f8d8 3000 	ldr.w	r3, [r8]
9002b9b0:	b22d      	sxth	r5, r5
9002b9b2:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
9002b9b6:	f3c2 0281 	ubfx	r2, r2, #2, #2
9002b9ba:	9500      	str	r5, [sp, #0]
9002b9bc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
9002b9c0:	a803      	add	r0, sp, #12
9002b9c2:	f7ed fa11 	bl	90018de8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
9002b9c6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
9002b9ca:	b203      	sxth	r3, r0
9002b9cc:	18b9      	adds	r1, r7, r2
9002b9ce:	2900      	cmp	r1, #0
9002b9d0:	dd0b      	ble.n	9002b9ea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
9002b9d2:	3b01      	subs	r3, #1
9002b9d4:	fb13 f302 	smulbb	r3, r3, r2
9002b9d8:	fb16 3300 	smlabb	r3, r6, r0, r3
9002b9dc:	b21f      	sxth	r7, r3
9002b9de:	4638      	mov	r0, r7
9002b9e0:	b01d      	add	sp, #116	@ 0x74
9002b9e2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002b9e6:	b003      	add	sp, #12
9002b9e8:	4770      	bx	lr
9002b9ea:	2b00      	cmp	r3, #0
9002b9ec:	dcf7      	bgt.n	9002b9de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9002b9ee:	2700      	movs	r7, #0
9002b9f0:	e7f5      	b.n	9002b9de <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
9002b9f2:	bf00      	nop
9002b9f4:	240245f4 	.word	0x240245f4
9002b9f8:	240245f0 	.word	0x240245f0
9002b9fc:	240245f8 	.word	0x240245f8

9002ba00 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
9002ba00:	b538      	push	{r3, r4, r5, lr}
9002ba02:	4b0e      	ldr	r3, [pc, #56]	@ (9002ba3c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
9002ba04:	4604      	mov	r4, r0
9002ba06:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9002ba08:	881b      	ldrh	r3, [r3, #0]
9002ba0a:	429a      	cmp	r2, r3
9002ba0c:	d214      	bcs.n	9002ba38 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
9002ba0e:	6803      	ldr	r3, [r0, #0]
9002ba10:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
9002ba12:	4798      	blx	r3
9002ba14:	6823      	ldr	r3, [r4, #0]
9002ba16:	4605      	mov	r5, r0
9002ba18:	4620      	mov	r0, r4
9002ba1a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
9002ba1c:	4798      	blx	r3
9002ba1e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
9002ba22:	b22d      	sxth	r5, r5
9002ba24:	4601      	mov	r1, r0
9002ba26:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
9002ba2a:	bf06      	itte	eq
9002ba2c:	4602      	moveq	r2, r0
9002ba2e:	4629      	moveq	r1, r5
9002ba30:	462a      	movne	r2, r5
9002ba32:	4620      	mov	r0, r4
9002ba34:	f7eb f822 	bl	90016a7c <_ZN8touchgfx8Drawable14setWidthHeightEss>
9002ba38:	bd38      	pop	{r3, r4, r5, pc}
9002ba3a:	bf00      	nop
9002ba3c:	240245f4 	.word	0x240245f4

9002ba40 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
9002ba40:	b530      	push	{r4, r5, lr}
9002ba42:	888b      	ldrh	r3, [r1, #4]
9002ba44:	b085      	sub	sp, #20
9002ba46:	4604      	mov	r4, r0
9002ba48:	8583      	strh	r3, [r0, #44]	@ 0x2c
9002ba4a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9002ba4e:	b923      	cbnz	r3, 9002ba5a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9002ba50:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9002ba54:	b90b      	cbnz	r3, 9002ba5a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
9002ba56:	f7ff ffd3 	bl	9002ba00 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9002ba5a:	6823      	ldr	r3, [r4, #0]
9002ba5c:	466d      	mov	r5, sp
9002ba5e:	4621      	mov	r1, r4
9002ba60:	343c      	adds	r4, #60	@ 0x3c
9002ba62:	4628      	mov	r0, r5
9002ba64:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
9002ba68:	4798      	blx	r3
9002ba6a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9002ba6e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
9002ba72:	b005      	add	sp, #20
9002ba74:	bd30      	pop	{r4, r5, pc}
	...

9002ba78 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
9002ba78:	4b30      	ldr	r3, [pc, #192]	@ (9002bb3c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
9002ba7a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9002ba7e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
9002ba80:	b08d      	sub	sp, #52	@ 0x34
9002ba82:	881b      	ldrh	r3, [r3, #0]
9002ba84:	4604      	mov	r4, r0
9002ba86:	460f      	mov	r7, r1
9002ba88:	4293      	cmp	r3, r2
9002ba8a:	d954      	bls.n	9002bb36 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
9002ba8c:	4b2c      	ldr	r3, [pc, #176]	@ (9002bb40 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
9002ba8e:	6819      	ldr	r1, [r3, #0]
9002ba90:	eb01 0342 	add.w	r3, r1, r2, lsl #1
9002ba94:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
9002ba98:	4a2a      	ldr	r2, [pc, #168]	@ (9002bb44 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9002ba9a:	6812      	ldr	r2, [r2, #0]
9002ba9c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
9002baa0:	2900      	cmp	r1, #0
9002baa2:	d048      	beq.n	9002bb36 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
9002baa4:	785a      	ldrb	r2, [r3, #1]
9002baa6:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
9002baaa:	f3c2 0801 	ubfx	r8, r2, #0, #2
9002baae:	f3c2 0281 	ubfx	r2, r2, #2, #2
9002bab2:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
9002bab6:	4b24      	ldr	r3, [pc, #144]	@ (9002bb48 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
9002bab8:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
9002babc:	681a      	ldr	r2, [r3, #0]
9002babe:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
9002bac2:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
9002bac6:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
9002baca:	6b26      	ldr	r6, [r4, #48]	@ 0x30
9002bacc:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
9002bad0:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
9002bad4:	9107      	str	r1, [sp, #28]
9002bad6:	f88d 8020 	strb.w	r8, [sp, #32]
9002bada:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
9002bade:	9609      	str	r6, [sp, #36]	@ 0x24
9002bae0:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
9002bae4:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
9002bae8:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
9002baec:	b10b      	cbz	r3, 9002baf2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
9002baee:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
9002baf0:	b905      	cbnz	r5, 9002baf4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
9002baf2:	6895      	ldr	r5, [r2, #8]
9002baf4:	ae05      	add	r6, sp, #20
9002baf6:	4621      	mov	r1, r4
9002baf8:	4630      	mov	r0, r6
9002bafa:	f7ee fefb 	bl	9001a8f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9002bafe:	4b13      	ldr	r3, [pc, #76]	@ (9002bb4c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
9002bb00:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
9002bb02:	6818      	ldr	r0, [r3, #0]
9002bb04:	f7d9 fe2a 	bl	9000575c <_ZNK8touchgfx5Texts7getTextEt>
9002bb08:	6823      	ldr	r3, [r4, #0]
9002bb0a:	4680      	mov	r8, r0
9002bb0c:	4620      	mov	r0, r4
9002bb0e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9002bb10:	4798      	blx	r3
9002bb12:	6823      	ldr	r3, [r4, #0]
9002bb14:	4681      	mov	r9, r0
9002bb16:	4620      	mov	r0, r4
9002bb18:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
9002bb1c:	4798      	blx	r3
9002bb1e:	ab07      	add	r3, sp, #28
9002bb20:	f8cd 8004 	str.w	r8, [sp, #4]
9002bb24:	9300      	str	r3, [sp, #0]
9002bb26:	463b      	mov	r3, r7
9002bb28:	e9cd 9002 	strd	r9, r0, [sp, #8]
9002bb2c:	4628      	mov	r0, r5
9002bb2e:	e896 0006 	ldmia.w	r6, {r1, r2}
9002bb32:	f7d9 fdc3 	bl	900056bc <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
9002bb36:	b00d      	add	sp, #52	@ 0x34
9002bb38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9002bb3c:	240245f4 	.word	0x240245f4
9002bb40:	240245f0 	.word	0x240245f0
9002bb44:	240245f8 	.word	0x240245f8
9002bb48:	24024598 	.word	0x24024598
9002bb4c:	240245fc 	.word	0x240245fc

9002bb50 <__aeabi_atexit>:
9002bb50:	460b      	mov	r3, r1
9002bb52:	4601      	mov	r1, r0
9002bb54:	4618      	mov	r0, r3
9002bb56:	f000 bc59 	b.w	9002c40c <__cxa_atexit>

9002bb5a <_ZdlPvj>:
9002bb5a:	f000 b812 	b.w	9002bb82 <_ZdlPv>

9002bb5e <__cxa_guard_acquire>:
9002bb5e:	6802      	ldr	r2, [r0, #0]
9002bb60:	07d2      	lsls	r2, r2, #31
9002bb62:	4603      	mov	r3, r0
9002bb64:	d405      	bmi.n	9002bb72 <__cxa_guard_acquire+0x14>
9002bb66:	7842      	ldrb	r2, [r0, #1]
9002bb68:	b102      	cbz	r2, 9002bb6c <__cxa_guard_acquire+0xe>
9002bb6a:	deff      	udf	#255	@ 0xff
9002bb6c:	2001      	movs	r0, #1
9002bb6e:	7058      	strb	r0, [r3, #1]
9002bb70:	4770      	bx	lr
9002bb72:	2000      	movs	r0, #0
9002bb74:	4770      	bx	lr

9002bb76 <__cxa_guard_release>:
9002bb76:	2301      	movs	r3, #1
9002bb78:	6003      	str	r3, [r0, #0]
9002bb7a:	4770      	bx	lr

9002bb7c <__cxa_pure_virtual>:
9002bb7c:	b508      	push	{r3, lr}
9002bb7e:	f000 f80f 	bl	9002bba0 <_ZSt9terminatev>

9002bb82 <_ZdlPv>:
9002bb82:	f000 bb8d 	b.w	9002c2a0 <free>

9002bb86 <_ZN10__cxxabiv111__terminateEPFvvE>:
9002bb86:	b508      	push	{r3, lr}
9002bb88:	4780      	blx	r0
9002bb8a:	f000 fb56 	bl	9002c23a <abort>
	...

9002bb90 <_ZSt13get_terminatev>:
9002bb90:	4b02      	ldr	r3, [pc, #8]	@ (9002bb9c <_ZSt13get_terminatev+0xc>)
9002bb92:	6818      	ldr	r0, [r3, #0]
9002bb94:	f3bf 8f5b 	dmb	ish
9002bb98:	4770      	bx	lr
9002bb9a:	bf00      	nop
9002bb9c:	24000324 	.word	0x24000324

9002bba0 <_ZSt9terminatev>:
9002bba0:	b508      	push	{r3, lr}
9002bba2:	f7ff fff5 	bl	9002bb90 <_ZSt13get_terminatev>
9002bba6:	f7ff ffee 	bl	9002bb86 <_ZN10__cxxabiv111__terminateEPFvvE>

9002bbaa <atan2f>:
9002bbaa:	f000 b9cd 	b.w	9002bf48 <__ieee754_atan2f>
	...

9002bbb0 <sqrtf>:
9002bbb0:	b508      	push	{r3, lr}
9002bbb2:	ed2d 8b02 	vpush	{d8}
9002bbb6:	eeb0 8a40 	vmov.f32	s16, s0
9002bbba:	f000 f9c2 	bl	9002bf42 <__ieee754_sqrtf>
9002bbbe:	eeb4 8a48 	vcmp.f32	s16, s16
9002bbc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002bbc6:	d60c      	bvs.n	9002bbe2 <sqrtf+0x32>
9002bbc8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 9002bbe8 <sqrtf+0x38>
9002bbcc:	eeb4 8ae8 	vcmpe.f32	s16, s17
9002bbd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002bbd4:	d505      	bpl.n	9002bbe2 <sqrtf+0x32>
9002bbd6:	f000 fe87 	bl	9002c8e8 <__errno>
9002bbda:	ee88 0aa8 	vdiv.f32	s0, s17, s17
9002bbde:	2321      	movs	r3, #33	@ 0x21
9002bbe0:	6003      	str	r3, [r0, #0]
9002bbe2:	ecbd 8b02 	vpop	{d8}
9002bbe6:	bd08      	pop	{r3, pc}
9002bbe8:	00000000 	.word	0x00000000

9002bbec <sinf_poly>:
9002bbec:	07cb      	lsls	r3, r1, #31
9002bbee:	d412      	bmi.n	9002bc16 <sinf_poly+0x2a>
9002bbf0:	ee21 5b00 	vmul.f64	d5, d1, d0
9002bbf4:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002bbf8:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002bbfc:	eea6 7b01 	vfma.f64	d7, d6, d1
9002bc00:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002bc04:	ee21 1b05 	vmul.f64	d1, d1, d5
9002bc08:	eea6 0b05 	vfma.f64	d0, d6, d5
9002bc0c:	eea7 0b01 	vfma.f64	d0, d7, d1
9002bc10:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002bc14:	4770      	bx	lr
9002bc16:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002bc1a:	ee21 5b01 	vmul.f64	d5, d1, d1
9002bc1e:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002bc22:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002bc26:	eea1 7b06 	vfma.f64	d7, d1, d6
9002bc2a:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002bc2e:	eea1 0b06 	vfma.f64	d0, d1, d6
9002bc32:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002bc36:	ee21 1b05 	vmul.f64	d1, d1, d5
9002bc3a:	eea5 0b06 	vfma.f64	d0, d5, d6
9002bc3e:	e7e5      	b.n	9002bc0c <sinf_poly+0x20>

9002bc40 <sinf>:
9002bc40:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002bc42:	ee10 4a10 	vmov	r4, s0
9002bc46:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002bc4a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002bc4e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002bc52:	eef0 7a40 	vmov.f32	s15, s0
9002bc56:	ea4f 5214 	mov.w	r2, r4, lsr #20
9002bc5a:	d218      	bcs.n	9002bc8e <sinf+0x4e>
9002bc5c:	ee26 1b06 	vmul.f64	d1, d6, d6
9002bc60:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002bc64:	d20a      	bcs.n	9002bc7c <sinf+0x3c>
9002bc66:	f412 6fff 	tst.w	r2, #2040	@ 0x7f8
9002bc6a:	d103      	bne.n	9002bc74 <sinf+0x34>
9002bc6c:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002bc70:	ed8d 1a01 	vstr	s2, [sp, #4]
9002bc74:	eeb0 0a67 	vmov.f32	s0, s15
9002bc78:	b003      	add	sp, #12
9002bc7a:	bd30      	pop	{r4, r5, pc}
9002bc7c:	483a      	ldr	r0, [pc, #232]	@ (9002bd68 <sinf+0x128>)
9002bc7e:	eeb0 0b46 	vmov.f64	d0, d6
9002bc82:	2100      	movs	r1, #0
9002bc84:	b003      	add	sp, #12
9002bc86:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002bc8a:	f7ff bfaf 	b.w	9002bbec <sinf_poly>
9002bc8e:	f240 422e 	movw	r2, #1070	@ 0x42e
9002bc92:	4293      	cmp	r3, r2
9002bc94:	d824      	bhi.n	9002bce0 <sinf+0xa0>
9002bc96:	4b34      	ldr	r3, [pc, #208]	@ (9002bd68 <sinf+0x128>)
9002bc98:	ed93 7b08 	vldr	d7, [r3, #32]
9002bc9c:	ee26 7b07 	vmul.f64	d7, d6, d7
9002bca0:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002bca4:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002bca8:	ee17 1a90 	vmov	r1, s15
9002bcac:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002bcb0:	1609      	asrs	r1, r1, #24
9002bcb2:	ee07 1a90 	vmov	s15, r1
9002bcb6:	f001 0203 	and.w	r2, r1, #3
9002bcba:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002bcbe:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002bcc2:	ed92 0b00 	vldr	d0, [r2]
9002bcc6:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
9002bcca:	f011 0f02 	tst.w	r1, #2
9002bcce:	eea5 6b47 	vfms.f64	d6, d5, d7
9002bcd2:	bf08      	it	eq
9002bcd4:	4618      	moveq	r0, r3
9002bcd6:	ee26 1b06 	vmul.f64	d1, d6, d6
9002bcda:	ee20 0b06 	vmul.f64	d0, d0, d6
9002bcde:	e7d1      	b.n	9002bc84 <sinf+0x44>
9002bce0:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002bce4:	d237      	bcs.n	9002bd56 <sinf+0x116>
9002bce6:	4921      	ldr	r1, [pc, #132]	@ (9002bd6c <sinf+0x12c>)
9002bce8:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002bcec:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002bcf0:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002bcf4:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002bcf8:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002bcfc:	6a10      	ldr	r0, [r2, #32]
9002bcfe:	6912      	ldr	r2, [r2, #16]
9002bd00:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002bd04:	40ab      	lsls	r3, r5
9002bd06:	fba0 5003 	umull	r5, r0, r0, r3
9002bd0a:	4359      	muls	r1, r3
9002bd0c:	fbe3 0102 	umlal	r0, r1, r3, r2
9002bd10:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002bd14:	0f9d      	lsrs	r5, r3, #30
9002bd16:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002bd1a:	1ac9      	subs	r1, r1, r3
9002bd1c:	f7d4 fcc6 	bl	900006ac <__aeabi_l2d>
9002bd20:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002bd24:	4b10      	ldr	r3, [pc, #64]	@ (9002bd68 <sinf+0x128>)
9002bd26:	f004 0203 	and.w	r2, r4, #3
9002bd2a:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002bd2e:	ed9f 6b0c 	vldr	d6, [pc, #48]	@ 9002bd60 <sinf+0x120>
9002bd32:	ed92 0b00 	vldr	d0, [r2]
9002bd36:	ec41 0b17 	vmov	d7, r0, r1
9002bd3a:	f014 0f02 	tst.w	r4, #2
9002bd3e:	ee27 7b06 	vmul.f64	d7, d7, d6
9002bd42:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002bd46:	4629      	mov	r1, r5
9002bd48:	bf08      	it	eq
9002bd4a:	4618      	moveq	r0, r3
9002bd4c:	ee27 1b07 	vmul.f64	d1, d7, d7
9002bd50:	ee20 0b07 	vmul.f64	d0, d0, d7
9002bd54:	e796      	b.n	9002bc84 <sinf+0x44>
9002bd56:	b003      	add	sp, #12
9002bd58:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002bd5c:	f000 b8e2 	b.w	9002bf24 <__math_invalidf>
9002bd60:	54442d18 	.word	0x54442d18
9002bd64:	3c1921fb 	.word	0x3c1921fb
9002bd68:	900309c0 	.word	0x900309c0
9002bd6c:	90030960 	.word	0x90030960

9002bd70 <sinf_poly>:
9002bd70:	07cb      	lsls	r3, r1, #31
9002bd72:	d412      	bmi.n	9002bd9a <sinf_poly+0x2a>
9002bd74:	ee21 5b00 	vmul.f64	d5, d1, d0
9002bd78:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002bd7c:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
9002bd80:	eea6 7b01 	vfma.f64	d7, d6, d1
9002bd84:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
9002bd88:	ee21 1b05 	vmul.f64	d1, d1, d5
9002bd8c:	eea6 0b05 	vfma.f64	d0, d6, d5
9002bd90:	eea7 0b01 	vfma.f64	d0, d7, d1
9002bd94:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002bd98:	4770      	bx	lr
9002bd9a:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
9002bd9e:	ee21 5b01 	vmul.f64	d5, d1, d1
9002bda2:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
9002bda6:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
9002bdaa:	eea1 7b06 	vfma.f64	d7, d1, d6
9002bdae:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
9002bdb2:	eea1 0b06 	vfma.f64	d0, d1, d6
9002bdb6:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
9002bdba:	ee21 1b05 	vmul.f64	d1, d1, d5
9002bdbe:	eea5 0b06 	vfma.f64	d0, d5, d6
9002bdc2:	e7e5      	b.n	9002bd90 <sinf_poly+0x20>
9002bdc4:	0000      	movs	r0, r0
	...

9002bdc8 <cosf>:
9002bdc8:	b538      	push	{r3, r4, r5, lr}
9002bdca:	ee10 4a10 	vmov	r4, s0
9002bdce:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002bdd2:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
9002bdd6:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
9002bdda:	d21f      	bcs.n	9002be1c <cosf+0x54>
9002bddc:	ee27 7b07 	vmul.f64	d7, d7, d7
9002bde0:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
9002bde4:	f0c0 8082 	bcc.w	9002beec <cosf+0x124>
9002bde8:	ee27 4b07 	vmul.f64	d4, d7, d7
9002bdec:	4b44      	ldr	r3, [pc, #272]	@ (9002bf00 <cosf+0x138>)
9002bdee:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
9002bdf2:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
9002bdf6:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
9002bdfa:	eea7 6b05 	vfma.f64	d6, d7, d5
9002bdfe:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
9002be02:	eea7 0b05 	vfma.f64	d0, d7, d5
9002be06:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002be0a:	ee27 7b04 	vmul.f64	d7, d7, d4
9002be0e:	eea4 0b05 	vfma.f64	d0, d4, d5
9002be12:	eea6 0b07 	vfma.f64	d0, d6, d7
9002be16:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002be1a:	bd38      	pop	{r3, r4, r5, pc}
9002be1c:	f240 422e 	movw	r2, #1070	@ 0x42e
9002be20:	4293      	cmp	r3, r2
9002be22:	d829      	bhi.n	9002be78 <cosf+0xb0>
9002be24:	4b36      	ldr	r3, [pc, #216]	@ (9002bf00 <cosf+0x138>)
9002be26:	ed93 6b08 	vldr	d6, [r3, #32]
9002be2a:	ee27 6b06 	vmul.f64	d6, d7, d6
9002be2e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
9002be32:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002be36:	ee16 1a90 	vmov	r1, s13
9002be3a:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002be3e:	1609      	asrs	r1, r1, #24
9002be40:	ee06 1a90 	vmov	s13, r1
9002be44:	f001 0203 	and.w	r2, r1, #3
9002be48:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002be4c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
9002be50:	ed92 0b00 	vldr	d0, [r2]
9002be54:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
9002be58:	f011 0f02 	tst.w	r1, #2
9002be5c:	f081 0101 	eor.w	r1, r1, #1
9002be60:	eea5 7b46 	vfms.f64	d7, d5, d6
9002be64:	bf08      	it	eq
9002be66:	4618      	moveq	r0, r3
9002be68:	ee27 1b07 	vmul.f64	d1, d7, d7
9002be6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002be70:	ee20 0b07 	vmul.f64	d0, d0, d7
9002be74:	f7ff bf7c 	b.w	9002bd70 <sinf_poly>
9002be78:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002be7c:	d232      	bcs.n	9002bee4 <cosf+0x11c>
9002be7e:	4921      	ldr	r1, [pc, #132]	@ (9002bf04 <cosf+0x13c>)
9002be80:	f3c4 6083 	ubfx	r0, r4, #26, #4
9002be84:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002be88:	f3c4 0316 	ubfx	r3, r4, #0, #23
9002be8c:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002be90:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
9002be94:	6a10      	ldr	r0, [r2, #32]
9002be96:	6912      	ldr	r2, [r2, #16]
9002be98:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
9002be9c:	40ab      	lsls	r3, r5
9002be9e:	fba0 5003 	umull	r5, r0, r0, r3
9002bea2:	4359      	muls	r1, r3
9002bea4:	fbe3 0102 	umlal	r0, r1, r3, r2
9002bea8:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
9002beac:	0f9d      	lsrs	r5, r3, #30
9002beae:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
9002beb2:	1ac9      	subs	r1, r1, r3
9002beb4:	f7d4 fbfa 	bl	900006ac <__aeabi_l2d>
9002beb8:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002bebc:	4b10      	ldr	r3, [pc, #64]	@ (9002bf00 <cosf+0x138>)
9002bebe:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 9002bef8 <cosf+0x130>
9002bec2:	ec41 0b17 	vmov	d7, r0, r1
9002bec6:	f004 0203 	and.w	r2, r4, #3
9002beca:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002bece:	ed92 0b00 	vldr	d0, [r2]
9002bed2:	ee27 7b06 	vmul.f64	d7, d7, d6
9002bed6:	f103 0070 	add.w	r0, r3, #112	@ 0x70
9002beda:	f014 0f02 	tst.w	r4, #2
9002bede:	f085 0101 	eor.w	r1, r5, #1
9002bee2:	e7bf      	b.n	9002be64 <cosf+0x9c>
9002bee4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002bee8:	f000 b81c 	b.w	9002bf24 <__math_invalidf>
9002beec:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
9002bef0:	e793      	b.n	9002be1a <cosf+0x52>
9002bef2:	bf00      	nop
9002bef4:	f3af 8000 	nop.w
9002bef8:	54442d18 	.word	0x54442d18
9002befc:	3c1921fb 	.word	0x3c1921fb
9002bf00:	900309c0 	.word	0x900309c0
9002bf04:	90030960 	.word	0x90030960

9002bf08 <with_errnof>:
9002bf08:	b510      	push	{r4, lr}
9002bf0a:	ed2d 8b02 	vpush	{d8}
9002bf0e:	eeb0 8a40 	vmov.f32	s16, s0
9002bf12:	4604      	mov	r4, r0
9002bf14:	f000 fce8 	bl	9002c8e8 <__errno>
9002bf18:	eeb0 0a48 	vmov.f32	s0, s16
9002bf1c:	ecbd 8b02 	vpop	{d8}
9002bf20:	6004      	str	r4, [r0, #0]
9002bf22:	bd10      	pop	{r4, pc}

9002bf24 <__math_invalidf>:
9002bf24:	eef0 7a40 	vmov.f32	s15, s0
9002bf28:	ee30 7a40 	vsub.f32	s14, s0, s0
9002bf2c:	eef4 7a67 	vcmp.f32	s15, s15
9002bf30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002bf34:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002bf38:	d602      	bvs.n	9002bf40 <__math_invalidf+0x1c>
9002bf3a:	2021      	movs	r0, #33	@ 0x21
9002bf3c:	f7ff bfe4 	b.w	9002bf08 <with_errnof>
9002bf40:	4770      	bx	lr

9002bf42 <__ieee754_sqrtf>:
9002bf42:	eeb1 0ac0 	vsqrt.f32	s0, s0
9002bf46:	4770      	bx	lr

9002bf48 <__ieee754_atan2f>:
9002bf48:	ee10 2a90 	vmov	r2, s1
9002bf4c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
9002bf50:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002bf54:	b510      	push	{r4, lr}
9002bf56:	eef0 7a40 	vmov.f32	s15, s0
9002bf5a:	d806      	bhi.n	9002bf6a <__ieee754_atan2f+0x22>
9002bf5c:	ee10 0a10 	vmov	r0, s0
9002bf60:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
9002bf64:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002bf68:	d904      	bls.n	9002bf74 <__ieee754_atan2f+0x2c>
9002bf6a:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002bf6e:	eeb0 0a67 	vmov.f32	s0, s15
9002bf72:	bd10      	pop	{r4, pc}
9002bf74:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
9002bf78:	d103      	bne.n	9002bf82 <__ieee754_atan2f+0x3a>
9002bf7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002bf7e:	f000 b881 	b.w	9002c084 <atanf>
9002bf82:	1794      	asrs	r4, r2, #30
9002bf84:	f004 0402 	and.w	r4, r4, #2
9002bf88:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
9002bf8c:	b93b      	cbnz	r3, 9002bf9e <__ieee754_atan2f+0x56>
9002bf8e:	2c02      	cmp	r4, #2
9002bf90:	d05c      	beq.n	9002c04c <__ieee754_atan2f+0x104>
9002bf92:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002c060 <__ieee754_atan2f+0x118>
9002bf96:	2c03      	cmp	r4, #3
9002bf98:	fe47 7a00 	vseleq.f32	s15, s14, s0
9002bf9c:	e7e7      	b.n	9002bf6e <__ieee754_atan2f+0x26>
9002bf9e:	b939      	cbnz	r1, 9002bfb0 <__ieee754_atan2f+0x68>
9002bfa0:	eddf 7a30 	vldr	s15, [pc, #192]	@ 9002c064 <__ieee754_atan2f+0x11c>
9002bfa4:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002c068 <__ieee754_atan2f+0x120>
9002bfa8:	2800      	cmp	r0, #0
9002bfaa:	fe67 7a87 	vselge.f32	s15, s15, s14
9002bfae:	e7de      	b.n	9002bf6e <__ieee754_atan2f+0x26>
9002bfb0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
9002bfb4:	d110      	bne.n	9002bfd8 <__ieee754_atan2f+0x90>
9002bfb6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002bfba:	f104 34ff 	add.w	r4, r4, #4294967295
9002bfbe:	d107      	bne.n	9002bfd0 <__ieee754_atan2f+0x88>
9002bfc0:	2c02      	cmp	r4, #2
9002bfc2:	d846      	bhi.n	9002c052 <__ieee754_atan2f+0x10a>
9002bfc4:	4b29      	ldr	r3, [pc, #164]	@ (9002c06c <__ieee754_atan2f+0x124>)
9002bfc6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
9002bfca:	edd3 7a00 	vldr	s15, [r3]
9002bfce:	e7ce      	b.n	9002bf6e <__ieee754_atan2f+0x26>
9002bfd0:	2c02      	cmp	r4, #2
9002bfd2:	d841      	bhi.n	9002c058 <__ieee754_atan2f+0x110>
9002bfd4:	4b26      	ldr	r3, [pc, #152]	@ (9002c070 <__ieee754_atan2f+0x128>)
9002bfd6:	e7f6      	b.n	9002bfc6 <__ieee754_atan2f+0x7e>
9002bfd8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
9002bfdc:	d0e0      	beq.n	9002bfa0 <__ieee754_atan2f+0x58>
9002bfde:	1a5b      	subs	r3, r3, r1
9002bfe0:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
9002bfe4:	ea4f 51e3 	mov.w	r1, r3, asr #23
9002bfe8:	da1a      	bge.n	9002c020 <__ieee754_atan2f+0xd8>
9002bfea:	2a00      	cmp	r2, #0
9002bfec:	da01      	bge.n	9002bff2 <__ieee754_atan2f+0xaa>
9002bfee:	313c      	adds	r1, #60	@ 0x3c
9002bff0:	db19      	blt.n	9002c026 <__ieee754_atan2f+0xde>
9002bff2:	ee87 0aa0 	vdiv.f32	s0, s15, s1
9002bff6:	f000 f919 	bl	9002c22c <fabsf>
9002bffa:	f000 f843 	bl	9002c084 <atanf>
9002bffe:	eef0 7a40 	vmov.f32	s15, s0
9002c002:	2c01      	cmp	r4, #1
9002c004:	d012      	beq.n	9002c02c <__ieee754_atan2f+0xe4>
9002c006:	2c02      	cmp	r4, #2
9002c008:	d017      	beq.n	9002c03a <__ieee754_atan2f+0xf2>
9002c00a:	2c00      	cmp	r4, #0
9002c00c:	d0af      	beq.n	9002bf6e <__ieee754_atan2f+0x26>
9002c00e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 9002c074 <__ieee754_atan2f+0x12c>
9002c012:	ee77 7a87 	vadd.f32	s15, s15, s14
9002c016:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 9002c078 <__ieee754_atan2f+0x130>
9002c01a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002c01e:	e7a6      	b.n	9002bf6e <__ieee754_atan2f+0x26>
9002c020:	eddf 7a10 	vldr	s15, [pc, #64]	@ 9002c064 <__ieee754_atan2f+0x11c>
9002c024:	e7ed      	b.n	9002c002 <__ieee754_atan2f+0xba>
9002c026:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002c07c <__ieee754_atan2f+0x134>
9002c02a:	e7ea      	b.n	9002c002 <__ieee754_atan2f+0xba>
9002c02c:	ee17 3a90 	vmov	r3, s15
9002c030:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
9002c034:	ee07 3a90 	vmov	s15, r3
9002c038:	e799      	b.n	9002bf6e <__ieee754_atan2f+0x26>
9002c03a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 9002c074 <__ieee754_atan2f+0x12c>
9002c03e:	ee77 7a87 	vadd.f32	s15, s15, s14
9002c042:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 9002c078 <__ieee754_atan2f+0x130>
9002c046:	ee77 7a67 	vsub.f32	s15, s14, s15
9002c04a:	e790      	b.n	9002bf6e <__ieee754_atan2f+0x26>
9002c04c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 9002c078 <__ieee754_atan2f+0x130>
9002c050:	e78d      	b.n	9002bf6e <__ieee754_atan2f+0x26>
9002c052:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 9002c080 <__ieee754_atan2f+0x138>
9002c056:	e78a      	b.n	9002bf6e <__ieee754_atan2f+0x26>
9002c058:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002c07c <__ieee754_atan2f+0x134>
9002c05c:	e787      	b.n	9002bf6e <__ieee754_atan2f+0x26>
9002c05e:	bf00      	nop
9002c060:	c0490fdb 	.word	0xc0490fdb
9002c064:	3fc90fdb 	.word	0x3fc90fdb
9002c068:	bfc90fdb 	.word	0xbfc90fdb
9002c06c:	90030aac 	.word	0x90030aac
9002c070:	90030aa0 	.word	0x90030aa0
9002c074:	33bbbd2e 	.word	0x33bbbd2e
9002c078:	40490fdb 	.word	0x40490fdb
9002c07c:	00000000 	.word	0x00000000
9002c080:	3f490fdb 	.word	0x3f490fdb

9002c084 <atanf>:
9002c084:	b538      	push	{r3, r4, r5, lr}
9002c086:	ee10 5a10 	vmov	r5, s0
9002c08a:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
9002c08e:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
9002c092:	eef0 7a40 	vmov.f32	s15, s0
9002c096:	d30f      	bcc.n	9002c0b8 <atanf+0x34>
9002c098:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
9002c09c:	d904      	bls.n	9002c0a8 <atanf+0x24>
9002c09e:	ee70 7a00 	vadd.f32	s15, s0, s0
9002c0a2:	eeb0 0a67 	vmov.f32	s0, s15
9002c0a6:	bd38      	pop	{r3, r4, r5, pc}
9002c0a8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 9002c1e0 <atanf+0x15c>
9002c0ac:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 9002c1e4 <atanf+0x160>
9002c0b0:	2d00      	cmp	r5, #0
9002c0b2:	fe77 7a27 	vselgt.f32	s15, s14, s15
9002c0b6:	e7f4      	b.n	9002c0a2 <atanf+0x1e>
9002c0b8:	4b4b      	ldr	r3, [pc, #300]	@ (9002c1e8 <atanf+0x164>)
9002c0ba:	429c      	cmp	r4, r3
9002c0bc:	d810      	bhi.n	9002c0e0 <atanf+0x5c>
9002c0be:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
9002c0c2:	d20a      	bcs.n	9002c0da <atanf+0x56>
9002c0c4:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002c1ec <atanf+0x168>
9002c0c8:	ee30 7a07 	vadd.f32	s14, s0, s14
9002c0cc:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002c0d0:	eeb4 7ae6 	vcmpe.f32	s14, s13
9002c0d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002c0d8:	dce3      	bgt.n	9002c0a2 <atanf+0x1e>
9002c0da:	f04f 33ff 	mov.w	r3, #4294967295
9002c0de:	e013      	b.n	9002c108 <atanf+0x84>
9002c0e0:	f000 f8a4 	bl	9002c22c <fabsf>
9002c0e4:	4b42      	ldr	r3, [pc, #264]	@ (9002c1f0 <atanf+0x16c>)
9002c0e6:	429c      	cmp	r4, r3
9002c0e8:	d84f      	bhi.n	9002c18a <atanf+0x106>
9002c0ea:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002c0ee:	429c      	cmp	r4, r3
9002c0f0:	d841      	bhi.n	9002c176 <atanf+0xf2>
9002c0f2:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
9002c0f6:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002c0fa:	eea0 7a27 	vfma.f32	s14, s0, s15
9002c0fe:	2300      	movs	r3, #0
9002c100:	ee30 0a27 	vadd.f32	s0, s0, s15
9002c104:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002c108:	1c5a      	adds	r2, r3, #1
9002c10a:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002c10e:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 9002c1f4 <atanf+0x170>
9002c112:	eddf 5a39 	vldr	s11, [pc, #228]	@ 9002c1f8 <atanf+0x174>
9002c116:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002c1fc <atanf+0x178>
9002c11a:	ee66 6a06 	vmul.f32	s13, s12, s12
9002c11e:	eee6 5a87 	vfma.f32	s11, s13, s14
9002c122:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 9002c200 <atanf+0x17c>
9002c126:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002c12a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 9002c204 <atanf+0x180>
9002c12e:	eee7 5a26 	vfma.f32	s11, s14, s13
9002c132:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 9002c208 <atanf+0x184>
9002c136:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002c13a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002c20c <atanf+0x188>
9002c13e:	eee7 5a26 	vfma.f32	s11, s14, s13
9002c142:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 9002c210 <atanf+0x18c>
9002c146:	eea6 5a87 	vfma.f32	s10, s13, s14
9002c14a:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 9002c214 <atanf+0x190>
9002c14e:	eea5 7a26 	vfma.f32	s14, s10, s13
9002c152:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 9002c218 <atanf+0x194>
9002c156:	eea7 5a26 	vfma.f32	s10, s14, s13
9002c15a:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002c21c <atanf+0x198>
9002c15e:	eea5 7a26 	vfma.f32	s14, s10, s13
9002c162:	ee27 7a26 	vmul.f32	s14, s14, s13
9002c166:	eea5 7a86 	vfma.f32	s14, s11, s12
9002c16a:	ee27 7a87 	vmul.f32	s14, s15, s14
9002c16e:	d121      	bne.n	9002c1b4 <atanf+0x130>
9002c170:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002c174:	e795      	b.n	9002c0a2 <atanf+0x1e>
9002c176:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002c17a:	ee30 7a67 	vsub.f32	s14, s0, s15
9002c17e:	ee30 0a27 	vadd.f32	s0, s0, s15
9002c182:	2301      	movs	r3, #1
9002c184:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002c188:	e7be      	b.n	9002c108 <atanf+0x84>
9002c18a:	4b25      	ldr	r3, [pc, #148]	@ (9002c220 <atanf+0x19c>)
9002c18c:	429c      	cmp	r4, r3
9002c18e:	d80b      	bhi.n	9002c1a8 <atanf+0x124>
9002c190:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
9002c194:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002c198:	eea0 7a27 	vfma.f32	s14, s0, s15
9002c19c:	2302      	movs	r3, #2
9002c19e:	ee70 6a67 	vsub.f32	s13, s0, s15
9002c1a2:	eec6 7a87 	vdiv.f32	s15, s13, s14
9002c1a6:	e7af      	b.n	9002c108 <atanf+0x84>
9002c1a8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002c1ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002c1b0:	2303      	movs	r3, #3
9002c1b2:	e7a9      	b.n	9002c108 <atanf+0x84>
9002c1b4:	4a1b      	ldr	r2, [pc, #108]	@ (9002c224 <atanf+0x1a0>)
9002c1b6:	491c      	ldr	r1, [pc, #112]	@ (9002c228 <atanf+0x1a4>)
9002c1b8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9002c1bc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9002c1c0:	edd3 6a00 	vldr	s13, [r3]
9002c1c4:	ee37 7a66 	vsub.f32	s14, s14, s13
9002c1c8:	2d00      	cmp	r5, #0
9002c1ca:	ee37 7a67 	vsub.f32	s14, s14, s15
9002c1ce:	edd2 7a00 	vldr	s15, [r2]
9002c1d2:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002c1d6:	bfb8      	it	lt
9002c1d8:	eef1 7a67 	vneglt.f32	s15, s15
9002c1dc:	e761      	b.n	9002c0a2 <atanf+0x1e>
9002c1de:	bf00      	nop
9002c1e0:	bfc90fdb 	.word	0xbfc90fdb
9002c1e4:	3fc90fdb 	.word	0x3fc90fdb
9002c1e8:	3edfffff 	.word	0x3edfffff
9002c1ec:	7149f2ca 	.word	0x7149f2ca
9002c1f0:	3f97ffff 	.word	0x3f97ffff
9002c1f4:	3c8569d7 	.word	0x3c8569d7
9002c1f8:	3d4bda59 	.word	0x3d4bda59
9002c1fc:	bd6ef16b 	.word	0xbd6ef16b
9002c200:	3d886b35 	.word	0x3d886b35
9002c204:	3dba2e6e 	.word	0x3dba2e6e
9002c208:	3e124925 	.word	0x3e124925
9002c20c:	3eaaaaab 	.word	0x3eaaaaab
9002c210:	bd15a221 	.word	0xbd15a221
9002c214:	bd9d8795 	.word	0xbd9d8795
9002c218:	bde38e38 	.word	0xbde38e38
9002c21c:	be4ccccd 	.word	0xbe4ccccd
9002c220:	401bffff 	.word	0x401bffff
9002c224:	90030ac8 	.word	0x90030ac8
9002c228:	90030ab8 	.word	0x90030ab8

9002c22c <fabsf>:
9002c22c:	ee10 3a10 	vmov	r3, s0
9002c230:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
9002c234:	ee00 3a10 	vmov	s0, r3
9002c238:	4770      	bx	lr

9002c23a <abort>:
9002c23a:	b508      	push	{r3, lr}
9002c23c:	2006      	movs	r0, #6
9002c23e:	f000 fae1 	bl	9002c804 <raise>
9002c242:	2001      	movs	r0, #1
9002c244:	f7d8 fc58 	bl	90004af8 <_exit>

9002c248 <__assert_func>:
9002c248:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002c24a:	4614      	mov	r4, r2
9002c24c:	461a      	mov	r2, r3
9002c24e:	4b09      	ldr	r3, [pc, #36]	@ (9002c274 <__assert_func+0x2c>)
9002c250:	681b      	ldr	r3, [r3, #0]
9002c252:	4605      	mov	r5, r0
9002c254:	68d8      	ldr	r0, [r3, #12]
9002c256:	b954      	cbnz	r4, 9002c26e <__assert_func+0x26>
9002c258:	4b07      	ldr	r3, [pc, #28]	@ (9002c278 <__assert_func+0x30>)
9002c25a:	461c      	mov	r4, r3
9002c25c:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002c260:	9100      	str	r1, [sp, #0]
9002c262:	462b      	mov	r3, r5
9002c264:	4905      	ldr	r1, [pc, #20]	@ (9002c27c <__assert_func+0x34>)
9002c266:	f000 f983 	bl	9002c570 <fiprintf>
9002c26a:	f7ff ffe6 	bl	9002c23a <abort>
9002c26e:	4b04      	ldr	r3, [pc, #16]	@ (9002c280 <__assert_func+0x38>)
9002c270:	e7f4      	b.n	9002c25c <__assert_func+0x14>
9002c272:	bf00      	nop
9002c274:	24000334 	.word	0x24000334
9002c278:	90030b13 	.word	0x90030b13
9002c27c:	90030ae5 	.word	0x90030ae5
9002c280:	90030ad8 	.word	0x90030ad8

9002c284 <atexit>:
9002c284:	2300      	movs	r3, #0
9002c286:	4601      	mov	r1, r0
9002c288:	461a      	mov	r2, r3
9002c28a:	4618      	mov	r0, r3
9002c28c:	f000 bb68 	b.w	9002c960 <__register_exitproc>

9002c290 <malloc>:
9002c290:	4b02      	ldr	r3, [pc, #8]	@ (9002c29c <malloc+0xc>)
9002c292:	4601      	mov	r1, r0
9002c294:	6818      	ldr	r0, [r3, #0]
9002c296:	f000 b82d 	b.w	9002c2f4 <_malloc_r>
9002c29a:	bf00      	nop
9002c29c:	24000334 	.word	0x24000334

9002c2a0 <free>:
9002c2a0:	4b02      	ldr	r3, [pc, #8]	@ (9002c2ac <free+0xc>)
9002c2a2:	4601      	mov	r1, r0
9002c2a4:	6818      	ldr	r0, [r3, #0]
9002c2a6:	f000 bbb7 	b.w	9002ca18 <_free_r>
9002c2aa:	bf00      	nop
9002c2ac:	24000334 	.word	0x24000334

9002c2b0 <sbrk_aligned>:
9002c2b0:	b570      	push	{r4, r5, r6, lr}
9002c2b2:	4e0f      	ldr	r6, [pc, #60]	@ (9002c2f0 <sbrk_aligned+0x40>)
9002c2b4:	460c      	mov	r4, r1
9002c2b6:	6831      	ldr	r1, [r6, #0]
9002c2b8:	4605      	mov	r5, r0
9002c2ba:	b911      	cbnz	r1, 9002c2c2 <sbrk_aligned+0x12>
9002c2bc:	f000 faf2 	bl	9002c8a4 <_sbrk_r>
9002c2c0:	6030      	str	r0, [r6, #0]
9002c2c2:	4621      	mov	r1, r4
9002c2c4:	4628      	mov	r0, r5
9002c2c6:	f000 faed 	bl	9002c8a4 <_sbrk_r>
9002c2ca:	1c43      	adds	r3, r0, #1
9002c2cc:	d103      	bne.n	9002c2d6 <sbrk_aligned+0x26>
9002c2ce:	f04f 34ff 	mov.w	r4, #4294967295
9002c2d2:	4620      	mov	r0, r4
9002c2d4:	bd70      	pop	{r4, r5, r6, pc}
9002c2d6:	1cc4      	adds	r4, r0, #3
9002c2d8:	f024 0403 	bic.w	r4, r4, #3
9002c2dc:	42a0      	cmp	r0, r4
9002c2de:	d0f8      	beq.n	9002c2d2 <sbrk_aligned+0x22>
9002c2e0:	1a21      	subs	r1, r4, r0
9002c2e2:	4628      	mov	r0, r5
9002c2e4:	f000 fade 	bl	9002c8a4 <_sbrk_r>
9002c2e8:	3001      	adds	r0, #1
9002c2ea:	d1f2      	bne.n	9002c2d2 <sbrk_aligned+0x22>
9002c2ec:	e7ef      	b.n	9002c2ce <sbrk_aligned+0x1e>
9002c2ee:	bf00      	nop
9002c2f0:	24024ff4 	.word	0x24024ff4

9002c2f4 <_malloc_r>:
9002c2f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002c2f8:	1ccd      	adds	r5, r1, #3
9002c2fa:	f025 0503 	bic.w	r5, r5, #3
9002c2fe:	3508      	adds	r5, #8
9002c300:	2d0c      	cmp	r5, #12
9002c302:	bf38      	it	cc
9002c304:	250c      	movcc	r5, #12
9002c306:	2d00      	cmp	r5, #0
9002c308:	4606      	mov	r6, r0
9002c30a:	db01      	blt.n	9002c310 <_malloc_r+0x1c>
9002c30c:	42a9      	cmp	r1, r5
9002c30e:	d904      	bls.n	9002c31a <_malloc_r+0x26>
9002c310:	230c      	movs	r3, #12
9002c312:	6033      	str	r3, [r6, #0]
9002c314:	2000      	movs	r0, #0
9002c316:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002c31a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 9002c3f0 <_malloc_r+0xfc>
9002c31e:	f000 f869 	bl	9002c3f4 <__malloc_lock>
9002c322:	f8d8 3000 	ldr.w	r3, [r8]
9002c326:	461c      	mov	r4, r3
9002c328:	bb44      	cbnz	r4, 9002c37c <_malloc_r+0x88>
9002c32a:	4629      	mov	r1, r5
9002c32c:	4630      	mov	r0, r6
9002c32e:	f7ff ffbf 	bl	9002c2b0 <sbrk_aligned>
9002c332:	1c43      	adds	r3, r0, #1
9002c334:	4604      	mov	r4, r0
9002c336:	d158      	bne.n	9002c3ea <_malloc_r+0xf6>
9002c338:	f8d8 4000 	ldr.w	r4, [r8]
9002c33c:	4627      	mov	r7, r4
9002c33e:	2f00      	cmp	r7, #0
9002c340:	d143      	bne.n	9002c3ca <_malloc_r+0xd6>
9002c342:	2c00      	cmp	r4, #0
9002c344:	d04b      	beq.n	9002c3de <_malloc_r+0xea>
9002c346:	6823      	ldr	r3, [r4, #0]
9002c348:	4639      	mov	r1, r7
9002c34a:	4630      	mov	r0, r6
9002c34c:	eb04 0903 	add.w	r9, r4, r3
9002c350:	f000 faa8 	bl	9002c8a4 <_sbrk_r>
9002c354:	4581      	cmp	r9, r0
9002c356:	d142      	bne.n	9002c3de <_malloc_r+0xea>
9002c358:	6821      	ldr	r1, [r4, #0]
9002c35a:	1a6d      	subs	r5, r5, r1
9002c35c:	4629      	mov	r1, r5
9002c35e:	4630      	mov	r0, r6
9002c360:	f7ff ffa6 	bl	9002c2b0 <sbrk_aligned>
9002c364:	3001      	adds	r0, #1
9002c366:	d03a      	beq.n	9002c3de <_malloc_r+0xea>
9002c368:	6823      	ldr	r3, [r4, #0]
9002c36a:	442b      	add	r3, r5
9002c36c:	6023      	str	r3, [r4, #0]
9002c36e:	f8d8 3000 	ldr.w	r3, [r8]
9002c372:	685a      	ldr	r2, [r3, #4]
9002c374:	bb62      	cbnz	r2, 9002c3d0 <_malloc_r+0xdc>
9002c376:	f8c8 7000 	str.w	r7, [r8]
9002c37a:	e00f      	b.n	9002c39c <_malloc_r+0xa8>
9002c37c:	6822      	ldr	r2, [r4, #0]
9002c37e:	1b52      	subs	r2, r2, r5
9002c380:	d420      	bmi.n	9002c3c4 <_malloc_r+0xd0>
9002c382:	2a0b      	cmp	r2, #11
9002c384:	d917      	bls.n	9002c3b6 <_malloc_r+0xc2>
9002c386:	1961      	adds	r1, r4, r5
9002c388:	42a3      	cmp	r3, r4
9002c38a:	6025      	str	r5, [r4, #0]
9002c38c:	bf18      	it	ne
9002c38e:	6059      	strne	r1, [r3, #4]
9002c390:	6863      	ldr	r3, [r4, #4]
9002c392:	bf08      	it	eq
9002c394:	f8c8 1000 	streq.w	r1, [r8]
9002c398:	5162      	str	r2, [r4, r5]
9002c39a:	604b      	str	r3, [r1, #4]
9002c39c:	4630      	mov	r0, r6
9002c39e:	f000 f82f 	bl	9002c400 <__malloc_unlock>
9002c3a2:	f104 000b 	add.w	r0, r4, #11
9002c3a6:	1d23      	adds	r3, r4, #4
9002c3a8:	f020 0007 	bic.w	r0, r0, #7
9002c3ac:	1ac2      	subs	r2, r0, r3
9002c3ae:	bf1c      	itt	ne
9002c3b0:	1a1b      	subne	r3, r3, r0
9002c3b2:	50a3      	strne	r3, [r4, r2]
9002c3b4:	e7af      	b.n	9002c316 <_malloc_r+0x22>
9002c3b6:	6862      	ldr	r2, [r4, #4]
9002c3b8:	42a3      	cmp	r3, r4
9002c3ba:	bf0c      	ite	eq
9002c3bc:	f8c8 2000 	streq.w	r2, [r8]
9002c3c0:	605a      	strne	r2, [r3, #4]
9002c3c2:	e7eb      	b.n	9002c39c <_malloc_r+0xa8>
9002c3c4:	4623      	mov	r3, r4
9002c3c6:	6864      	ldr	r4, [r4, #4]
9002c3c8:	e7ae      	b.n	9002c328 <_malloc_r+0x34>
9002c3ca:	463c      	mov	r4, r7
9002c3cc:	687f      	ldr	r7, [r7, #4]
9002c3ce:	e7b6      	b.n	9002c33e <_malloc_r+0x4a>
9002c3d0:	461a      	mov	r2, r3
9002c3d2:	685b      	ldr	r3, [r3, #4]
9002c3d4:	42a3      	cmp	r3, r4
9002c3d6:	d1fb      	bne.n	9002c3d0 <_malloc_r+0xdc>
9002c3d8:	2300      	movs	r3, #0
9002c3da:	6053      	str	r3, [r2, #4]
9002c3dc:	e7de      	b.n	9002c39c <_malloc_r+0xa8>
9002c3de:	230c      	movs	r3, #12
9002c3e0:	6033      	str	r3, [r6, #0]
9002c3e2:	4630      	mov	r0, r6
9002c3e4:	f000 f80c 	bl	9002c400 <__malloc_unlock>
9002c3e8:	e794      	b.n	9002c314 <_malloc_r+0x20>
9002c3ea:	6005      	str	r5, [r0, #0]
9002c3ec:	e7d6      	b.n	9002c39c <_malloc_r+0xa8>
9002c3ee:	bf00      	nop
9002c3f0:	24024ff8 	.word	0x24024ff8

9002c3f4 <__malloc_lock>:
9002c3f4:	4801      	ldr	r0, [pc, #4]	@ (9002c3fc <__malloc_lock+0x8>)
9002c3f6:	f000 baa2 	b.w	9002c93e <__retarget_lock_acquire_recursive>
9002c3fa:	bf00      	nop
9002c3fc:	2402513c 	.word	0x2402513c

9002c400 <__malloc_unlock>:
9002c400:	4801      	ldr	r0, [pc, #4]	@ (9002c408 <__malloc_unlock+0x8>)
9002c402:	f000 ba9d 	b.w	9002c940 <__retarget_lock_release_recursive>
9002c406:	bf00      	nop
9002c408:	2402513c 	.word	0x2402513c

9002c40c <__cxa_atexit>:
9002c40c:	b510      	push	{r4, lr}
9002c40e:	4604      	mov	r4, r0
9002c410:	4804      	ldr	r0, [pc, #16]	@ (9002c424 <__cxa_atexit+0x18>)
9002c412:	4613      	mov	r3, r2
9002c414:	b120      	cbz	r0, 9002c420 <__cxa_atexit+0x14>
9002c416:	460a      	mov	r2, r1
9002c418:	2002      	movs	r0, #2
9002c41a:	4621      	mov	r1, r4
9002c41c:	f000 faa0 	bl	9002c960 <__register_exitproc>
9002c420:	bd10      	pop	{r4, pc}
9002c422:	bf00      	nop
9002c424:	9002c961 	.word	0x9002c961

9002c428 <std>:
9002c428:	2300      	movs	r3, #0
9002c42a:	b510      	push	{r4, lr}
9002c42c:	4604      	mov	r4, r0
9002c42e:	e9c0 3300 	strd	r3, r3, [r0]
9002c432:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002c436:	6083      	str	r3, [r0, #8]
9002c438:	8181      	strh	r1, [r0, #12]
9002c43a:	6643      	str	r3, [r0, #100]	@ 0x64
9002c43c:	81c2      	strh	r2, [r0, #14]
9002c43e:	6183      	str	r3, [r0, #24]
9002c440:	4619      	mov	r1, r3
9002c442:	2208      	movs	r2, #8
9002c444:	305c      	adds	r0, #92	@ 0x5c
9002c446:	f000 f99b 	bl	9002c780 <memset>
9002c44a:	4b0d      	ldr	r3, [pc, #52]	@ (9002c480 <std+0x58>)
9002c44c:	6263      	str	r3, [r4, #36]	@ 0x24
9002c44e:	4b0d      	ldr	r3, [pc, #52]	@ (9002c484 <std+0x5c>)
9002c450:	62a3      	str	r3, [r4, #40]	@ 0x28
9002c452:	4b0d      	ldr	r3, [pc, #52]	@ (9002c488 <std+0x60>)
9002c454:	62e3      	str	r3, [r4, #44]	@ 0x2c
9002c456:	4b0d      	ldr	r3, [pc, #52]	@ (9002c48c <std+0x64>)
9002c458:	6323      	str	r3, [r4, #48]	@ 0x30
9002c45a:	4b0d      	ldr	r3, [pc, #52]	@ (9002c490 <std+0x68>)
9002c45c:	6224      	str	r4, [r4, #32]
9002c45e:	429c      	cmp	r4, r3
9002c460:	d006      	beq.n	9002c470 <std+0x48>
9002c462:	f103 0268 	add.w	r2, r3, #104	@ 0x68
9002c466:	4294      	cmp	r4, r2
9002c468:	d002      	beq.n	9002c470 <std+0x48>
9002c46a:	33d0      	adds	r3, #208	@ 0xd0
9002c46c:	429c      	cmp	r4, r3
9002c46e:	d105      	bne.n	9002c47c <std+0x54>
9002c470:	f104 0058 	add.w	r0, r4, #88	@ 0x58
9002c474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002c478:	f000 ba60 	b.w	9002c93c <__retarget_lock_init_recursive>
9002c47c:	bd10      	pop	{r4, pc}
9002c47e:	bf00      	nop
9002c480:	9002c5d1 	.word	0x9002c5d1
9002c484:	9002c5f3 	.word	0x9002c5f3
9002c488:	9002c62b 	.word	0x9002c62b
9002c48c:	9002c64f 	.word	0x9002c64f
9002c490:	24024ffc 	.word	0x24024ffc

9002c494 <stdio_exit_handler>:
9002c494:	4a02      	ldr	r2, [pc, #8]	@ (9002c4a0 <stdio_exit_handler+0xc>)
9002c496:	4903      	ldr	r1, [pc, #12]	@ (9002c4a4 <stdio_exit_handler+0x10>)
9002c498:	4803      	ldr	r0, [pc, #12]	@ (9002c4a8 <stdio_exit_handler+0x14>)
9002c49a:	f000 b87b 	b.w	9002c594 <_fwalk_sglue>
9002c49e:	bf00      	nop
9002c4a0:	24000328 	.word	0x24000328
9002c4a4:	9002d155 	.word	0x9002d155
9002c4a8:	24000338 	.word	0x24000338

9002c4ac <cleanup_stdio>:
9002c4ac:	6841      	ldr	r1, [r0, #4]
9002c4ae:	4b0c      	ldr	r3, [pc, #48]	@ (9002c4e0 <cleanup_stdio+0x34>)
9002c4b0:	4299      	cmp	r1, r3
9002c4b2:	b510      	push	{r4, lr}
9002c4b4:	4604      	mov	r4, r0
9002c4b6:	d001      	beq.n	9002c4bc <cleanup_stdio+0x10>
9002c4b8:	f000 fe4c 	bl	9002d154 <_fflush_r>
9002c4bc:	68a1      	ldr	r1, [r4, #8]
9002c4be:	4b09      	ldr	r3, [pc, #36]	@ (9002c4e4 <cleanup_stdio+0x38>)
9002c4c0:	4299      	cmp	r1, r3
9002c4c2:	d002      	beq.n	9002c4ca <cleanup_stdio+0x1e>
9002c4c4:	4620      	mov	r0, r4
9002c4c6:	f000 fe45 	bl	9002d154 <_fflush_r>
9002c4ca:	68e1      	ldr	r1, [r4, #12]
9002c4cc:	4b06      	ldr	r3, [pc, #24]	@ (9002c4e8 <cleanup_stdio+0x3c>)
9002c4ce:	4299      	cmp	r1, r3
9002c4d0:	d004      	beq.n	9002c4dc <cleanup_stdio+0x30>
9002c4d2:	4620      	mov	r0, r4
9002c4d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002c4d8:	f000 be3c 	b.w	9002d154 <_fflush_r>
9002c4dc:	bd10      	pop	{r4, pc}
9002c4de:	bf00      	nop
9002c4e0:	24024ffc 	.word	0x24024ffc
9002c4e4:	24025064 	.word	0x24025064
9002c4e8:	240250cc 	.word	0x240250cc

9002c4ec <global_stdio_init.part.0>:
9002c4ec:	b510      	push	{r4, lr}
9002c4ee:	4b0b      	ldr	r3, [pc, #44]	@ (9002c51c <global_stdio_init.part.0+0x30>)
9002c4f0:	4c0b      	ldr	r4, [pc, #44]	@ (9002c520 <global_stdio_init.part.0+0x34>)
9002c4f2:	4a0c      	ldr	r2, [pc, #48]	@ (9002c524 <global_stdio_init.part.0+0x38>)
9002c4f4:	601a      	str	r2, [r3, #0]
9002c4f6:	4620      	mov	r0, r4
9002c4f8:	2200      	movs	r2, #0
9002c4fa:	2104      	movs	r1, #4
9002c4fc:	f7ff ff94 	bl	9002c428 <std>
9002c500:	f104 0068 	add.w	r0, r4, #104	@ 0x68
9002c504:	2201      	movs	r2, #1
9002c506:	2109      	movs	r1, #9
9002c508:	f7ff ff8e 	bl	9002c428 <std>
9002c50c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
9002c510:	2202      	movs	r2, #2
9002c512:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002c516:	2112      	movs	r1, #18
9002c518:	f7ff bf86 	b.w	9002c428 <std>
9002c51c:	24025134 	.word	0x24025134
9002c520:	24024ffc 	.word	0x24024ffc
9002c524:	9002c495 	.word	0x9002c495

9002c528 <__sfp_lock_acquire>:
9002c528:	4801      	ldr	r0, [pc, #4]	@ (9002c530 <__sfp_lock_acquire+0x8>)
9002c52a:	f000 ba08 	b.w	9002c93e <__retarget_lock_acquire_recursive>
9002c52e:	bf00      	nop
9002c530:	2402513e 	.word	0x2402513e

9002c534 <__sfp_lock_release>:
9002c534:	4801      	ldr	r0, [pc, #4]	@ (9002c53c <__sfp_lock_release+0x8>)
9002c536:	f000 ba03 	b.w	9002c940 <__retarget_lock_release_recursive>
9002c53a:	bf00      	nop
9002c53c:	2402513e 	.word	0x2402513e

9002c540 <__sinit>:
9002c540:	b510      	push	{r4, lr}
9002c542:	4604      	mov	r4, r0
9002c544:	f7ff fff0 	bl	9002c528 <__sfp_lock_acquire>
9002c548:	6a23      	ldr	r3, [r4, #32]
9002c54a:	b11b      	cbz	r3, 9002c554 <__sinit+0x14>
9002c54c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002c550:	f7ff bff0 	b.w	9002c534 <__sfp_lock_release>
9002c554:	4b04      	ldr	r3, [pc, #16]	@ (9002c568 <__sinit+0x28>)
9002c556:	6223      	str	r3, [r4, #32]
9002c558:	4b04      	ldr	r3, [pc, #16]	@ (9002c56c <__sinit+0x2c>)
9002c55a:	681b      	ldr	r3, [r3, #0]
9002c55c:	2b00      	cmp	r3, #0
9002c55e:	d1f5      	bne.n	9002c54c <__sinit+0xc>
9002c560:	f7ff ffc4 	bl	9002c4ec <global_stdio_init.part.0>
9002c564:	e7f2      	b.n	9002c54c <__sinit+0xc>
9002c566:	bf00      	nop
9002c568:	9002c4ad 	.word	0x9002c4ad
9002c56c:	24025134 	.word	0x24025134

9002c570 <fiprintf>:
9002c570:	b40e      	push	{r1, r2, r3}
9002c572:	b503      	push	{r0, r1, lr}
9002c574:	4601      	mov	r1, r0
9002c576:	ab03      	add	r3, sp, #12
9002c578:	4805      	ldr	r0, [pc, #20]	@ (9002c590 <fiprintf+0x20>)
9002c57a:	f853 2b04 	ldr.w	r2, [r3], #4
9002c57e:	6800      	ldr	r0, [r0, #0]
9002c580:	9301      	str	r3, [sp, #4]
9002c582:	f000 fabd 	bl	9002cb00 <_vfiprintf_r>
9002c586:	b002      	add	sp, #8
9002c588:	f85d eb04 	ldr.w	lr, [sp], #4
9002c58c:	b003      	add	sp, #12
9002c58e:	4770      	bx	lr
9002c590:	24000334 	.word	0x24000334

9002c594 <_fwalk_sglue>:
9002c594:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002c598:	4607      	mov	r7, r0
9002c59a:	4688      	mov	r8, r1
9002c59c:	4614      	mov	r4, r2
9002c59e:	2600      	movs	r6, #0
9002c5a0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002c5a4:	f1b9 0901 	subs.w	r9, r9, #1
9002c5a8:	d505      	bpl.n	9002c5b6 <_fwalk_sglue+0x22>
9002c5aa:	6824      	ldr	r4, [r4, #0]
9002c5ac:	2c00      	cmp	r4, #0
9002c5ae:	d1f7      	bne.n	9002c5a0 <_fwalk_sglue+0xc>
9002c5b0:	4630      	mov	r0, r6
9002c5b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002c5b6:	89ab      	ldrh	r3, [r5, #12]
9002c5b8:	2b01      	cmp	r3, #1
9002c5ba:	d907      	bls.n	9002c5cc <_fwalk_sglue+0x38>
9002c5bc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002c5c0:	3301      	adds	r3, #1
9002c5c2:	d003      	beq.n	9002c5cc <_fwalk_sglue+0x38>
9002c5c4:	4629      	mov	r1, r5
9002c5c6:	4638      	mov	r0, r7
9002c5c8:	47c0      	blx	r8
9002c5ca:	4306      	orrs	r6, r0
9002c5cc:	3568      	adds	r5, #104	@ 0x68
9002c5ce:	e7e9      	b.n	9002c5a4 <_fwalk_sglue+0x10>

9002c5d0 <__sread>:
9002c5d0:	b510      	push	{r4, lr}
9002c5d2:	460c      	mov	r4, r1
9002c5d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c5d8:	f000 f93e 	bl	9002c858 <_read_r>
9002c5dc:	2800      	cmp	r0, #0
9002c5de:	bfab      	itete	ge
9002c5e0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
9002c5e2:	89a3      	ldrhlt	r3, [r4, #12]
9002c5e4:	181b      	addge	r3, r3, r0
9002c5e6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002c5ea:	bfac      	ite	ge
9002c5ec:	6563      	strge	r3, [r4, #84]	@ 0x54
9002c5ee:	81a3      	strhlt	r3, [r4, #12]
9002c5f0:	bd10      	pop	{r4, pc}

9002c5f2 <__swrite>:
9002c5f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002c5f6:	461f      	mov	r7, r3
9002c5f8:	898b      	ldrh	r3, [r1, #12]
9002c5fa:	05db      	lsls	r3, r3, #23
9002c5fc:	4605      	mov	r5, r0
9002c5fe:	460c      	mov	r4, r1
9002c600:	4616      	mov	r6, r2
9002c602:	d505      	bpl.n	9002c610 <__swrite+0x1e>
9002c604:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c608:	2302      	movs	r3, #2
9002c60a:	2200      	movs	r2, #0
9002c60c:	f000 f912 	bl	9002c834 <_lseek_r>
9002c610:	89a3      	ldrh	r3, [r4, #12]
9002c612:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002c616:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002c61a:	81a3      	strh	r3, [r4, #12]
9002c61c:	4632      	mov	r2, r6
9002c61e:	463b      	mov	r3, r7
9002c620:	4628      	mov	r0, r5
9002c622:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002c626:	f000 b94d 	b.w	9002c8c4 <_write_r>

9002c62a <__sseek>:
9002c62a:	b510      	push	{r4, lr}
9002c62c:	460c      	mov	r4, r1
9002c62e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c632:	f000 f8ff 	bl	9002c834 <_lseek_r>
9002c636:	1c43      	adds	r3, r0, #1
9002c638:	89a3      	ldrh	r3, [r4, #12]
9002c63a:	bf15      	itete	ne
9002c63c:	6560      	strne	r0, [r4, #84]	@ 0x54
9002c63e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
9002c642:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
9002c646:	81a3      	strheq	r3, [r4, #12]
9002c648:	bf18      	it	ne
9002c64a:	81a3      	strhne	r3, [r4, #12]
9002c64c:	bd10      	pop	{r4, pc}

9002c64e <__sclose>:
9002c64e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002c652:	f000 b8df 	b.w	9002c814 <_close_r>

9002c656 <__swbuf_r>:
9002c656:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002c658:	460e      	mov	r6, r1
9002c65a:	4614      	mov	r4, r2
9002c65c:	4605      	mov	r5, r0
9002c65e:	b118      	cbz	r0, 9002c668 <__swbuf_r+0x12>
9002c660:	6a03      	ldr	r3, [r0, #32]
9002c662:	b90b      	cbnz	r3, 9002c668 <__swbuf_r+0x12>
9002c664:	f7ff ff6c 	bl	9002c540 <__sinit>
9002c668:	69a3      	ldr	r3, [r4, #24]
9002c66a:	60a3      	str	r3, [r4, #8]
9002c66c:	89a3      	ldrh	r3, [r4, #12]
9002c66e:	071a      	lsls	r2, r3, #28
9002c670:	d501      	bpl.n	9002c676 <__swbuf_r+0x20>
9002c672:	6923      	ldr	r3, [r4, #16]
9002c674:	b943      	cbnz	r3, 9002c688 <__swbuf_r+0x32>
9002c676:	4621      	mov	r1, r4
9002c678:	4628      	mov	r0, r5
9002c67a:	f000 f82b 	bl	9002c6d4 <__swsetup_r>
9002c67e:	b118      	cbz	r0, 9002c688 <__swbuf_r+0x32>
9002c680:	f04f 37ff 	mov.w	r7, #4294967295
9002c684:	4638      	mov	r0, r7
9002c686:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002c688:	6823      	ldr	r3, [r4, #0]
9002c68a:	6922      	ldr	r2, [r4, #16]
9002c68c:	1a98      	subs	r0, r3, r2
9002c68e:	6963      	ldr	r3, [r4, #20]
9002c690:	b2f6      	uxtb	r6, r6
9002c692:	4283      	cmp	r3, r0
9002c694:	4637      	mov	r7, r6
9002c696:	dc05      	bgt.n	9002c6a4 <__swbuf_r+0x4e>
9002c698:	4621      	mov	r1, r4
9002c69a:	4628      	mov	r0, r5
9002c69c:	f000 fd5a 	bl	9002d154 <_fflush_r>
9002c6a0:	2800      	cmp	r0, #0
9002c6a2:	d1ed      	bne.n	9002c680 <__swbuf_r+0x2a>
9002c6a4:	68a3      	ldr	r3, [r4, #8]
9002c6a6:	3b01      	subs	r3, #1
9002c6a8:	60a3      	str	r3, [r4, #8]
9002c6aa:	6823      	ldr	r3, [r4, #0]
9002c6ac:	1c5a      	adds	r2, r3, #1
9002c6ae:	6022      	str	r2, [r4, #0]
9002c6b0:	701e      	strb	r6, [r3, #0]
9002c6b2:	6962      	ldr	r2, [r4, #20]
9002c6b4:	1c43      	adds	r3, r0, #1
9002c6b6:	429a      	cmp	r2, r3
9002c6b8:	d004      	beq.n	9002c6c4 <__swbuf_r+0x6e>
9002c6ba:	89a3      	ldrh	r3, [r4, #12]
9002c6bc:	07db      	lsls	r3, r3, #31
9002c6be:	d5e1      	bpl.n	9002c684 <__swbuf_r+0x2e>
9002c6c0:	2e0a      	cmp	r6, #10
9002c6c2:	d1df      	bne.n	9002c684 <__swbuf_r+0x2e>
9002c6c4:	4621      	mov	r1, r4
9002c6c6:	4628      	mov	r0, r5
9002c6c8:	f000 fd44 	bl	9002d154 <_fflush_r>
9002c6cc:	2800      	cmp	r0, #0
9002c6ce:	d0d9      	beq.n	9002c684 <__swbuf_r+0x2e>
9002c6d0:	e7d6      	b.n	9002c680 <__swbuf_r+0x2a>
	...

9002c6d4 <__swsetup_r>:
9002c6d4:	b538      	push	{r3, r4, r5, lr}
9002c6d6:	4b29      	ldr	r3, [pc, #164]	@ (9002c77c <__swsetup_r+0xa8>)
9002c6d8:	4605      	mov	r5, r0
9002c6da:	6818      	ldr	r0, [r3, #0]
9002c6dc:	460c      	mov	r4, r1
9002c6de:	b118      	cbz	r0, 9002c6e8 <__swsetup_r+0x14>
9002c6e0:	6a03      	ldr	r3, [r0, #32]
9002c6e2:	b90b      	cbnz	r3, 9002c6e8 <__swsetup_r+0x14>
9002c6e4:	f7ff ff2c 	bl	9002c540 <__sinit>
9002c6e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c6ec:	0719      	lsls	r1, r3, #28
9002c6ee:	d422      	bmi.n	9002c736 <__swsetup_r+0x62>
9002c6f0:	06da      	lsls	r2, r3, #27
9002c6f2:	d407      	bmi.n	9002c704 <__swsetup_r+0x30>
9002c6f4:	2209      	movs	r2, #9
9002c6f6:	602a      	str	r2, [r5, #0]
9002c6f8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002c6fc:	81a3      	strh	r3, [r4, #12]
9002c6fe:	f04f 30ff 	mov.w	r0, #4294967295
9002c702:	e033      	b.n	9002c76c <__swsetup_r+0x98>
9002c704:	0758      	lsls	r0, r3, #29
9002c706:	d512      	bpl.n	9002c72e <__swsetup_r+0x5a>
9002c708:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002c70a:	b141      	cbz	r1, 9002c71e <__swsetup_r+0x4a>
9002c70c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002c710:	4299      	cmp	r1, r3
9002c712:	d002      	beq.n	9002c71a <__swsetup_r+0x46>
9002c714:	4628      	mov	r0, r5
9002c716:	f000 f97f 	bl	9002ca18 <_free_r>
9002c71a:	2300      	movs	r3, #0
9002c71c:	6363      	str	r3, [r4, #52]	@ 0x34
9002c71e:	89a3      	ldrh	r3, [r4, #12]
9002c720:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
9002c724:	81a3      	strh	r3, [r4, #12]
9002c726:	2300      	movs	r3, #0
9002c728:	6063      	str	r3, [r4, #4]
9002c72a:	6923      	ldr	r3, [r4, #16]
9002c72c:	6023      	str	r3, [r4, #0]
9002c72e:	89a3      	ldrh	r3, [r4, #12]
9002c730:	f043 0308 	orr.w	r3, r3, #8
9002c734:	81a3      	strh	r3, [r4, #12]
9002c736:	6923      	ldr	r3, [r4, #16]
9002c738:	b94b      	cbnz	r3, 9002c74e <__swsetup_r+0x7a>
9002c73a:	89a3      	ldrh	r3, [r4, #12]
9002c73c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
9002c740:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
9002c744:	d003      	beq.n	9002c74e <__swsetup_r+0x7a>
9002c746:	4621      	mov	r1, r4
9002c748:	4628      	mov	r0, r5
9002c74a:	f000 fd51 	bl	9002d1f0 <__smakebuf_r>
9002c74e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002c752:	f013 0201 	ands.w	r2, r3, #1
9002c756:	d00a      	beq.n	9002c76e <__swsetup_r+0x9a>
9002c758:	2200      	movs	r2, #0
9002c75a:	60a2      	str	r2, [r4, #8]
9002c75c:	6962      	ldr	r2, [r4, #20]
9002c75e:	4252      	negs	r2, r2
9002c760:	61a2      	str	r2, [r4, #24]
9002c762:	6922      	ldr	r2, [r4, #16]
9002c764:	b942      	cbnz	r2, 9002c778 <__swsetup_r+0xa4>
9002c766:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
9002c76a:	d1c5      	bne.n	9002c6f8 <__swsetup_r+0x24>
9002c76c:	bd38      	pop	{r3, r4, r5, pc}
9002c76e:	0799      	lsls	r1, r3, #30
9002c770:	bf58      	it	pl
9002c772:	6962      	ldrpl	r2, [r4, #20]
9002c774:	60a2      	str	r2, [r4, #8]
9002c776:	e7f4      	b.n	9002c762 <__swsetup_r+0x8e>
9002c778:	2000      	movs	r0, #0
9002c77a:	e7f7      	b.n	9002c76c <__swsetup_r+0x98>
9002c77c:	24000334 	.word	0x24000334

9002c780 <memset>:
9002c780:	4402      	add	r2, r0
9002c782:	4603      	mov	r3, r0
9002c784:	4293      	cmp	r3, r2
9002c786:	d100      	bne.n	9002c78a <memset+0xa>
9002c788:	4770      	bx	lr
9002c78a:	f803 1b01 	strb.w	r1, [r3], #1
9002c78e:	e7f9      	b.n	9002c784 <memset+0x4>

9002c790 <strncmp>:
9002c790:	b510      	push	{r4, lr}
9002c792:	b16a      	cbz	r2, 9002c7b0 <strncmp+0x20>
9002c794:	3901      	subs	r1, #1
9002c796:	1884      	adds	r4, r0, r2
9002c798:	f810 2b01 	ldrb.w	r2, [r0], #1
9002c79c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
9002c7a0:	429a      	cmp	r2, r3
9002c7a2:	d103      	bne.n	9002c7ac <strncmp+0x1c>
9002c7a4:	42a0      	cmp	r0, r4
9002c7a6:	d001      	beq.n	9002c7ac <strncmp+0x1c>
9002c7a8:	2a00      	cmp	r2, #0
9002c7aa:	d1f5      	bne.n	9002c798 <strncmp+0x8>
9002c7ac:	1ad0      	subs	r0, r2, r3
9002c7ae:	bd10      	pop	{r4, pc}
9002c7b0:	4610      	mov	r0, r2
9002c7b2:	e7fc      	b.n	9002c7ae <strncmp+0x1e>

9002c7b4 <_raise_r>:
9002c7b4:	291f      	cmp	r1, #31
9002c7b6:	b538      	push	{r3, r4, r5, lr}
9002c7b8:	4605      	mov	r5, r0
9002c7ba:	460c      	mov	r4, r1
9002c7bc:	d904      	bls.n	9002c7c8 <_raise_r+0x14>
9002c7be:	2316      	movs	r3, #22
9002c7c0:	6003      	str	r3, [r0, #0]
9002c7c2:	f04f 30ff 	mov.w	r0, #4294967295
9002c7c6:	bd38      	pop	{r3, r4, r5, pc}
9002c7c8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
9002c7ca:	b112      	cbz	r2, 9002c7d2 <_raise_r+0x1e>
9002c7cc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002c7d0:	b94b      	cbnz	r3, 9002c7e6 <_raise_r+0x32>
9002c7d2:	4628      	mov	r0, r5
9002c7d4:	f000 f864 	bl	9002c8a0 <_getpid_r>
9002c7d8:	4622      	mov	r2, r4
9002c7da:	4601      	mov	r1, r0
9002c7dc:	4628      	mov	r0, r5
9002c7de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002c7e2:	f000 b84b 	b.w	9002c87c <_kill_r>
9002c7e6:	2b01      	cmp	r3, #1
9002c7e8:	d00a      	beq.n	9002c800 <_raise_r+0x4c>
9002c7ea:	1c59      	adds	r1, r3, #1
9002c7ec:	d103      	bne.n	9002c7f6 <_raise_r+0x42>
9002c7ee:	2316      	movs	r3, #22
9002c7f0:	6003      	str	r3, [r0, #0]
9002c7f2:	2001      	movs	r0, #1
9002c7f4:	e7e7      	b.n	9002c7c6 <_raise_r+0x12>
9002c7f6:	2100      	movs	r1, #0
9002c7f8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
9002c7fc:	4620      	mov	r0, r4
9002c7fe:	4798      	blx	r3
9002c800:	2000      	movs	r0, #0
9002c802:	e7e0      	b.n	9002c7c6 <_raise_r+0x12>

9002c804 <raise>:
9002c804:	4b02      	ldr	r3, [pc, #8]	@ (9002c810 <raise+0xc>)
9002c806:	4601      	mov	r1, r0
9002c808:	6818      	ldr	r0, [r3, #0]
9002c80a:	f7ff bfd3 	b.w	9002c7b4 <_raise_r>
9002c80e:	bf00      	nop
9002c810:	24000334 	.word	0x24000334

9002c814 <_close_r>:
9002c814:	b538      	push	{r3, r4, r5, lr}
9002c816:	4d06      	ldr	r5, [pc, #24]	@ (9002c830 <_close_r+0x1c>)
9002c818:	2300      	movs	r3, #0
9002c81a:	4604      	mov	r4, r0
9002c81c:	4608      	mov	r0, r1
9002c81e:	602b      	str	r3, [r5, #0]
9002c820:	f7d8 f98c 	bl	90004b3c <_close>
9002c824:	1c43      	adds	r3, r0, #1
9002c826:	d102      	bne.n	9002c82e <_close_r+0x1a>
9002c828:	682b      	ldr	r3, [r5, #0]
9002c82a:	b103      	cbz	r3, 9002c82e <_close_r+0x1a>
9002c82c:	6023      	str	r3, [r4, #0]
9002c82e:	bd38      	pop	{r3, r4, r5, pc}
9002c830:	24025138 	.word	0x24025138

9002c834 <_lseek_r>:
9002c834:	b538      	push	{r3, r4, r5, lr}
9002c836:	4d07      	ldr	r5, [pc, #28]	@ (9002c854 <_lseek_r+0x20>)
9002c838:	4604      	mov	r4, r0
9002c83a:	4608      	mov	r0, r1
9002c83c:	4611      	mov	r1, r2
9002c83e:	2200      	movs	r2, #0
9002c840:	602a      	str	r2, [r5, #0]
9002c842:	461a      	mov	r2, r3
9002c844:	f7d8 f986 	bl	90004b54 <_lseek>
9002c848:	1c43      	adds	r3, r0, #1
9002c84a:	d102      	bne.n	9002c852 <_lseek_r+0x1e>
9002c84c:	682b      	ldr	r3, [r5, #0]
9002c84e:	b103      	cbz	r3, 9002c852 <_lseek_r+0x1e>
9002c850:	6023      	str	r3, [r4, #0]
9002c852:	bd38      	pop	{r3, r4, r5, pc}
9002c854:	24025138 	.word	0x24025138

9002c858 <_read_r>:
9002c858:	b538      	push	{r3, r4, r5, lr}
9002c85a:	4d07      	ldr	r5, [pc, #28]	@ (9002c878 <_read_r+0x20>)
9002c85c:	4604      	mov	r4, r0
9002c85e:	4608      	mov	r0, r1
9002c860:	4611      	mov	r1, r2
9002c862:	2200      	movs	r2, #0
9002c864:	602a      	str	r2, [r5, #0]
9002c866:	461a      	mov	r2, r3
9002c868:	f7d8 f94c 	bl	90004b04 <_read>
9002c86c:	1c43      	adds	r3, r0, #1
9002c86e:	d102      	bne.n	9002c876 <_read_r+0x1e>
9002c870:	682b      	ldr	r3, [r5, #0]
9002c872:	b103      	cbz	r3, 9002c876 <_read_r+0x1e>
9002c874:	6023      	str	r3, [r4, #0]
9002c876:	bd38      	pop	{r3, r4, r5, pc}
9002c878:	24025138 	.word	0x24025138

9002c87c <_kill_r>:
9002c87c:	b538      	push	{r3, r4, r5, lr}
9002c87e:	4d07      	ldr	r5, [pc, #28]	@ (9002c89c <_kill_r+0x20>)
9002c880:	2300      	movs	r3, #0
9002c882:	4604      	mov	r4, r0
9002c884:	4608      	mov	r0, r1
9002c886:	4611      	mov	r1, r2
9002c888:	602b      	str	r3, [r5, #0]
9002c88a:	f7d8 f92b 	bl	90004ae4 <_kill>
9002c88e:	1c43      	adds	r3, r0, #1
9002c890:	d102      	bne.n	9002c898 <_kill_r+0x1c>
9002c892:	682b      	ldr	r3, [r5, #0]
9002c894:	b103      	cbz	r3, 9002c898 <_kill_r+0x1c>
9002c896:	6023      	str	r3, [r4, #0]
9002c898:	bd38      	pop	{r3, r4, r5, pc}
9002c89a:	bf00      	nop
9002c89c:	24025138 	.word	0x24025138

9002c8a0 <_getpid_r>:
9002c8a0:	f7d8 b91e 	b.w	90004ae0 <_getpid>

9002c8a4 <_sbrk_r>:
9002c8a4:	b538      	push	{r3, r4, r5, lr}
9002c8a6:	4d06      	ldr	r5, [pc, #24]	@ (9002c8c0 <_sbrk_r+0x1c>)
9002c8a8:	2300      	movs	r3, #0
9002c8aa:	4604      	mov	r4, r0
9002c8ac:	4608      	mov	r0, r1
9002c8ae:	602b      	str	r3, [r5, #0]
9002c8b0:	f7d8 f952 	bl	90004b58 <_sbrk>
9002c8b4:	1c43      	adds	r3, r0, #1
9002c8b6:	d102      	bne.n	9002c8be <_sbrk_r+0x1a>
9002c8b8:	682b      	ldr	r3, [r5, #0]
9002c8ba:	b103      	cbz	r3, 9002c8be <_sbrk_r+0x1a>
9002c8bc:	6023      	str	r3, [r4, #0]
9002c8be:	bd38      	pop	{r3, r4, r5, pc}
9002c8c0:	24025138 	.word	0x24025138

9002c8c4 <_write_r>:
9002c8c4:	b538      	push	{r3, r4, r5, lr}
9002c8c6:	4d07      	ldr	r5, [pc, #28]	@ (9002c8e4 <_write_r+0x20>)
9002c8c8:	4604      	mov	r4, r0
9002c8ca:	4608      	mov	r0, r1
9002c8cc:	4611      	mov	r1, r2
9002c8ce:	2200      	movs	r2, #0
9002c8d0:	602a      	str	r2, [r5, #0]
9002c8d2:	461a      	mov	r2, r3
9002c8d4:	f7d8 f924 	bl	90004b20 <_write>
9002c8d8:	1c43      	adds	r3, r0, #1
9002c8da:	d102      	bne.n	9002c8e2 <_write_r+0x1e>
9002c8dc:	682b      	ldr	r3, [r5, #0]
9002c8de:	b103      	cbz	r3, 9002c8e2 <_write_r+0x1e>
9002c8e0:	6023      	str	r3, [r4, #0]
9002c8e2:	bd38      	pop	{r3, r4, r5, pc}
9002c8e4:	24025138 	.word	0x24025138

9002c8e8 <__errno>:
9002c8e8:	4b01      	ldr	r3, [pc, #4]	@ (9002c8f0 <__errno+0x8>)
9002c8ea:	6818      	ldr	r0, [r3, #0]
9002c8ec:	4770      	bx	lr
9002c8ee:	bf00      	nop
9002c8f0:	24000334 	.word	0x24000334

9002c8f4 <__libc_init_array>:
9002c8f4:	b570      	push	{r4, r5, r6, lr}
9002c8f6:	4d0d      	ldr	r5, [pc, #52]	@ (9002c92c <__libc_init_array+0x38>)
9002c8f8:	4c0d      	ldr	r4, [pc, #52]	@ (9002c930 <__libc_init_array+0x3c>)
9002c8fa:	1b64      	subs	r4, r4, r5
9002c8fc:	10a4      	asrs	r4, r4, #2
9002c8fe:	2600      	movs	r6, #0
9002c900:	42a6      	cmp	r6, r4
9002c902:	d109      	bne.n	9002c918 <__libc_init_array+0x24>
9002c904:	4d0b      	ldr	r5, [pc, #44]	@ (9002c934 <__libc_init_array+0x40>)
9002c906:	4c0c      	ldr	r4, [pc, #48]	@ (9002c938 <__libc_init_array+0x44>)
9002c908:	f000 fcd0 	bl	9002d2ac <_init>
9002c90c:	1b64      	subs	r4, r4, r5
9002c90e:	10a4      	asrs	r4, r4, #2
9002c910:	2600      	movs	r6, #0
9002c912:	42a6      	cmp	r6, r4
9002c914:	d105      	bne.n	9002c922 <__libc_init_array+0x2e>
9002c916:	bd70      	pop	{r4, r5, r6, pc}
9002c918:	f855 3b04 	ldr.w	r3, [r5], #4
9002c91c:	4798      	blx	r3
9002c91e:	3601      	adds	r6, #1
9002c920:	e7ee      	b.n	9002c900 <__libc_init_array+0xc>
9002c922:	f855 3b04 	ldr.w	r3, [r5], #4
9002c926:	4798      	blx	r3
9002c928:	3601      	adds	r6, #1
9002c92a:	e7f2      	b.n	9002c912 <__libc_init_array+0x1e>
9002c92c:	90031338 	.word	0x90031338
9002c930:	90031338 	.word	0x90031338
9002c934:	90031338 	.word	0x90031338
9002c938:	90031358 	.word	0x90031358

9002c93c <__retarget_lock_init_recursive>:
9002c93c:	4770      	bx	lr

9002c93e <__retarget_lock_acquire_recursive>:
9002c93e:	4770      	bx	lr

9002c940 <__retarget_lock_release_recursive>:
9002c940:	4770      	bx	lr

9002c942 <memcpy>:
9002c942:	440a      	add	r2, r1
9002c944:	4291      	cmp	r1, r2
9002c946:	f100 33ff 	add.w	r3, r0, #4294967295
9002c94a:	d100      	bne.n	9002c94e <memcpy+0xc>
9002c94c:	4770      	bx	lr
9002c94e:	b510      	push	{r4, lr}
9002c950:	f811 4b01 	ldrb.w	r4, [r1], #1
9002c954:	f803 4f01 	strb.w	r4, [r3, #1]!
9002c958:	4291      	cmp	r1, r2
9002c95a:	d1f9      	bne.n	9002c950 <memcpy+0xe>
9002c95c:	bd10      	pop	{r4, pc}
	...

9002c960 <__register_exitproc>:
9002c960:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002c964:	4d27      	ldr	r5, [pc, #156]	@ (9002ca04 <__register_exitproc+0xa4>)
9002c966:	4607      	mov	r7, r0
9002c968:	6828      	ldr	r0, [r5, #0]
9002c96a:	4691      	mov	r9, r2
9002c96c:	460e      	mov	r6, r1
9002c96e:	4698      	mov	r8, r3
9002c970:	f7ff ffe5 	bl	9002c93e <__retarget_lock_acquire_recursive>
9002c974:	4a24      	ldr	r2, [pc, #144]	@ (9002ca08 <__register_exitproc+0xa8>)
9002c976:	6814      	ldr	r4, [r2, #0]
9002c978:	b93c      	cbnz	r4, 9002c98a <__register_exitproc+0x2a>
9002c97a:	4b24      	ldr	r3, [pc, #144]	@ (9002ca0c <__register_exitproc+0xac>)
9002c97c:	6013      	str	r3, [r2, #0]
9002c97e:	4a24      	ldr	r2, [pc, #144]	@ (9002ca10 <__register_exitproc+0xb0>)
9002c980:	b112      	cbz	r2, 9002c988 <__register_exitproc+0x28>
9002c982:	6812      	ldr	r2, [r2, #0]
9002c984:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
9002c988:	4c20      	ldr	r4, [pc, #128]	@ (9002ca0c <__register_exitproc+0xac>)
9002c98a:	6863      	ldr	r3, [r4, #4]
9002c98c:	2b1f      	cmp	r3, #31
9002c98e:	dd06      	ble.n	9002c99e <__register_exitproc+0x3e>
9002c990:	6828      	ldr	r0, [r5, #0]
9002c992:	f7ff ffd5 	bl	9002c940 <__retarget_lock_release_recursive>
9002c996:	f04f 30ff 	mov.w	r0, #4294967295
9002c99a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002c99e:	b32f      	cbz	r7, 9002c9ec <__register_exitproc+0x8c>
9002c9a0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9002c9a4:	b968      	cbnz	r0, 9002c9c2 <__register_exitproc+0x62>
9002c9a6:	4b1b      	ldr	r3, [pc, #108]	@ (9002ca14 <__register_exitproc+0xb4>)
9002c9a8:	2b00      	cmp	r3, #0
9002c9aa:	d0f1      	beq.n	9002c990 <__register_exitproc+0x30>
9002c9ac:	f44f 7084 	mov.w	r0, #264	@ 0x108
9002c9b0:	f7ff fc6e 	bl	9002c290 <malloc>
9002c9b4:	2800      	cmp	r0, #0
9002c9b6:	d0eb      	beq.n	9002c990 <__register_exitproc+0x30>
9002c9b8:	2300      	movs	r3, #0
9002c9ba:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
9002c9be:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
9002c9c2:	6863      	ldr	r3, [r4, #4]
9002c9c4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002c9c8:	2201      	movs	r2, #1
9002c9ca:	409a      	lsls	r2, r3
9002c9cc:	eb00 0183 	add.w	r1, r0, r3, lsl #2
9002c9d0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
9002c9d4:	4313      	orrs	r3, r2
9002c9d6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
9002c9da:	2f02      	cmp	r7, #2
9002c9dc:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
9002c9e0:	bf02      	ittt	eq
9002c9e2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
9002c9e6:	4313      	orreq	r3, r2
9002c9e8:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
9002c9ec:	6863      	ldr	r3, [r4, #4]
9002c9ee:	6828      	ldr	r0, [r5, #0]
9002c9f0:	1c5a      	adds	r2, r3, #1
9002c9f2:	3302      	adds	r3, #2
9002c9f4:	6062      	str	r2, [r4, #4]
9002c9f6:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
9002c9fa:	f7ff ffa1 	bl	9002c940 <__retarget_lock_release_recursive>
9002c9fe:	2000      	movs	r0, #0
9002ca00:	e7cb      	b.n	9002c99a <__register_exitproc+0x3a>
9002ca02:	bf00      	nop
9002ca04:	24000384 	.word	0x24000384
9002ca08:	240251cc 	.word	0x240251cc
9002ca0c:	24025140 	.word	0x24025140
9002ca10:	90030b14 	.word	0x90030b14
9002ca14:	9002c291 	.word	0x9002c291

9002ca18 <_free_r>:
9002ca18:	b538      	push	{r3, r4, r5, lr}
9002ca1a:	4605      	mov	r5, r0
9002ca1c:	2900      	cmp	r1, #0
9002ca1e:	d041      	beq.n	9002caa4 <_free_r+0x8c>
9002ca20:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002ca24:	1f0c      	subs	r4, r1, #4
9002ca26:	2b00      	cmp	r3, #0
9002ca28:	bfb8      	it	lt
9002ca2a:	18e4      	addlt	r4, r4, r3
9002ca2c:	f7ff fce2 	bl	9002c3f4 <__malloc_lock>
9002ca30:	4a1d      	ldr	r2, [pc, #116]	@ (9002caa8 <_free_r+0x90>)
9002ca32:	6813      	ldr	r3, [r2, #0]
9002ca34:	b933      	cbnz	r3, 9002ca44 <_free_r+0x2c>
9002ca36:	6063      	str	r3, [r4, #4]
9002ca38:	6014      	str	r4, [r2, #0]
9002ca3a:	4628      	mov	r0, r5
9002ca3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002ca40:	f7ff bcde 	b.w	9002c400 <__malloc_unlock>
9002ca44:	42a3      	cmp	r3, r4
9002ca46:	d908      	bls.n	9002ca5a <_free_r+0x42>
9002ca48:	6820      	ldr	r0, [r4, #0]
9002ca4a:	1821      	adds	r1, r4, r0
9002ca4c:	428b      	cmp	r3, r1
9002ca4e:	bf01      	itttt	eq
9002ca50:	6819      	ldreq	r1, [r3, #0]
9002ca52:	685b      	ldreq	r3, [r3, #4]
9002ca54:	1809      	addeq	r1, r1, r0
9002ca56:	6021      	streq	r1, [r4, #0]
9002ca58:	e7ed      	b.n	9002ca36 <_free_r+0x1e>
9002ca5a:	461a      	mov	r2, r3
9002ca5c:	685b      	ldr	r3, [r3, #4]
9002ca5e:	b10b      	cbz	r3, 9002ca64 <_free_r+0x4c>
9002ca60:	42a3      	cmp	r3, r4
9002ca62:	d9fa      	bls.n	9002ca5a <_free_r+0x42>
9002ca64:	6811      	ldr	r1, [r2, #0]
9002ca66:	1850      	adds	r0, r2, r1
9002ca68:	42a0      	cmp	r0, r4
9002ca6a:	d10b      	bne.n	9002ca84 <_free_r+0x6c>
9002ca6c:	6820      	ldr	r0, [r4, #0]
9002ca6e:	4401      	add	r1, r0
9002ca70:	1850      	adds	r0, r2, r1
9002ca72:	4283      	cmp	r3, r0
9002ca74:	6011      	str	r1, [r2, #0]
9002ca76:	d1e0      	bne.n	9002ca3a <_free_r+0x22>
9002ca78:	6818      	ldr	r0, [r3, #0]
9002ca7a:	685b      	ldr	r3, [r3, #4]
9002ca7c:	6053      	str	r3, [r2, #4]
9002ca7e:	4408      	add	r0, r1
9002ca80:	6010      	str	r0, [r2, #0]
9002ca82:	e7da      	b.n	9002ca3a <_free_r+0x22>
9002ca84:	d902      	bls.n	9002ca8c <_free_r+0x74>
9002ca86:	230c      	movs	r3, #12
9002ca88:	602b      	str	r3, [r5, #0]
9002ca8a:	e7d6      	b.n	9002ca3a <_free_r+0x22>
9002ca8c:	6820      	ldr	r0, [r4, #0]
9002ca8e:	1821      	adds	r1, r4, r0
9002ca90:	428b      	cmp	r3, r1
9002ca92:	bf04      	itt	eq
9002ca94:	6819      	ldreq	r1, [r3, #0]
9002ca96:	685b      	ldreq	r3, [r3, #4]
9002ca98:	6063      	str	r3, [r4, #4]
9002ca9a:	bf04      	itt	eq
9002ca9c:	1809      	addeq	r1, r1, r0
9002ca9e:	6021      	streq	r1, [r4, #0]
9002caa0:	6054      	str	r4, [r2, #4]
9002caa2:	e7ca      	b.n	9002ca3a <_free_r+0x22>
9002caa4:	bd38      	pop	{r3, r4, r5, pc}
9002caa6:	bf00      	nop
9002caa8:	24024ff8 	.word	0x24024ff8

9002caac <__sfputc_r>:
9002caac:	6893      	ldr	r3, [r2, #8]
9002caae:	3b01      	subs	r3, #1
9002cab0:	2b00      	cmp	r3, #0
9002cab2:	b410      	push	{r4}
9002cab4:	6093      	str	r3, [r2, #8]
9002cab6:	da08      	bge.n	9002caca <__sfputc_r+0x1e>
9002cab8:	6994      	ldr	r4, [r2, #24]
9002caba:	42a3      	cmp	r3, r4
9002cabc:	db01      	blt.n	9002cac2 <__sfputc_r+0x16>
9002cabe:	290a      	cmp	r1, #10
9002cac0:	d103      	bne.n	9002caca <__sfputc_r+0x1e>
9002cac2:	f85d 4b04 	ldr.w	r4, [sp], #4
9002cac6:	f7ff bdc6 	b.w	9002c656 <__swbuf_r>
9002caca:	6813      	ldr	r3, [r2, #0]
9002cacc:	1c58      	adds	r0, r3, #1
9002cace:	6010      	str	r0, [r2, #0]
9002cad0:	7019      	strb	r1, [r3, #0]
9002cad2:	4608      	mov	r0, r1
9002cad4:	f85d 4b04 	ldr.w	r4, [sp], #4
9002cad8:	4770      	bx	lr

9002cada <__sfputs_r>:
9002cada:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002cadc:	4606      	mov	r6, r0
9002cade:	460f      	mov	r7, r1
9002cae0:	4614      	mov	r4, r2
9002cae2:	18d5      	adds	r5, r2, r3
9002cae4:	42ac      	cmp	r4, r5
9002cae6:	d101      	bne.n	9002caec <__sfputs_r+0x12>
9002cae8:	2000      	movs	r0, #0
9002caea:	e007      	b.n	9002cafc <__sfputs_r+0x22>
9002caec:	f814 1b01 	ldrb.w	r1, [r4], #1
9002caf0:	463a      	mov	r2, r7
9002caf2:	4630      	mov	r0, r6
9002caf4:	f7ff ffda 	bl	9002caac <__sfputc_r>
9002caf8:	1c43      	adds	r3, r0, #1
9002cafa:	d1f3      	bne.n	9002cae4 <__sfputs_r+0xa>
9002cafc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002cb00 <_vfiprintf_r>:
9002cb00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002cb04:	460d      	mov	r5, r1
9002cb06:	b09d      	sub	sp, #116	@ 0x74
9002cb08:	4614      	mov	r4, r2
9002cb0a:	4698      	mov	r8, r3
9002cb0c:	4606      	mov	r6, r0
9002cb0e:	b118      	cbz	r0, 9002cb18 <_vfiprintf_r+0x18>
9002cb10:	6a03      	ldr	r3, [r0, #32]
9002cb12:	b90b      	cbnz	r3, 9002cb18 <_vfiprintf_r+0x18>
9002cb14:	f7ff fd14 	bl	9002c540 <__sinit>
9002cb18:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002cb1a:	07d9      	lsls	r1, r3, #31
9002cb1c:	d405      	bmi.n	9002cb2a <_vfiprintf_r+0x2a>
9002cb1e:	89ab      	ldrh	r3, [r5, #12]
9002cb20:	059a      	lsls	r2, r3, #22
9002cb22:	d402      	bmi.n	9002cb2a <_vfiprintf_r+0x2a>
9002cb24:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002cb26:	f7ff ff0a 	bl	9002c93e <__retarget_lock_acquire_recursive>
9002cb2a:	89ab      	ldrh	r3, [r5, #12]
9002cb2c:	071b      	lsls	r3, r3, #28
9002cb2e:	d501      	bpl.n	9002cb34 <_vfiprintf_r+0x34>
9002cb30:	692b      	ldr	r3, [r5, #16]
9002cb32:	b99b      	cbnz	r3, 9002cb5c <_vfiprintf_r+0x5c>
9002cb34:	4629      	mov	r1, r5
9002cb36:	4630      	mov	r0, r6
9002cb38:	f7ff fdcc 	bl	9002c6d4 <__swsetup_r>
9002cb3c:	b170      	cbz	r0, 9002cb5c <_vfiprintf_r+0x5c>
9002cb3e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002cb40:	07dc      	lsls	r4, r3, #31
9002cb42:	d504      	bpl.n	9002cb4e <_vfiprintf_r+0x4e>
9002cb44:	f04f 30ff 	mov.w	r0, #4294967295
9002cb48:	b01d      	add	sp, #116	@ 0x74
9002cb4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002cb4e:	89ab      	ldrh	r3, [r5, #12]
9002cb50:	0598      	lsls	r0, r3, #22
9002cb52:	d4f7      	bmi.n	9002cb44 <_vfiprintf_r+0x44>
9002cb54:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002cb56:	f7ff fef3 	bl	9002c940 <__retarget_lock_release_recursive>
9002cb5a:	e7f3      	b.n	9002cb44 <_vfiprintf_r+0x44>
9002cb5c:	2300      	movs	r3, #0
9002cb5e:	9309      	str	r3, [sp, #36]	@ 0x24
9002cb60:	2320      	movs	r3, #32
9002cb62:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
9002cb66:	f8cd 800c 	str.w	r8, [sp, #12]
9002cb6a:	2330      	movs	r3, #48	@ 0x30
9002cb6c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002cd1c <_vfiprintf_r+0x21c>
9002cb70:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
9002cb74:	f04f 0901 	mov.w	r9, #1
9002cb78:	4623      	mov	r3, r4
9002cb7a:	469a      	mov	sl, r3
9002cb7c:	f813 2b01 	ldrb.w	r2, [r3], #1
9002cb80:	b10a      	cbz	r2, 9002cb86 <_vfiprintf_r+0x86>
9002cb82:	2a25      	cmp	r2, #37	@ 0x25
9002cb84:	d1f9      	bne.n	9002cb7a <_vfiprintf_r+0x7a>
9002cb86:	ebba 0b04 	subs.w	fp, sl, r4
9002cb8a:	d00b      	beq.n	9002cba4 <_vfiprintf_r+0xa4>
9002cb8c:	465b      	mov	r3, fp
9002cb8e:	4622      	mov	r2, r4
9002cb90:	4629      	mov	r1, r5
9002cb92:	4630      	mov	r0, r6
9002cb94:	f7ff ffa1 	bl	9002cada <__sfputs_r>
9002cb98:	3001      	adds	r0, #1
9002cb9a:	f000 80a7 	beq.w	9002ccec <_vfiprintf_r+0x1ec>
9002cb9e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002cba0:	445a      	add	r2, fp
9002cba2:	9209      	str	r2, [sp, #36]	@ 0x24
9002cba4:	f89a 3000 	ldrb.w	r3, [sl]
9002cba8:	2b00      	cmp	r3, #0
9002cbaa:	f000 809f 	beq.w	9002ccec <_vfiprintf_r+0x1ec>
9002cbae:	2300      	movs	r3, #0
9002cbb0:	f04f 32ff 	mov.w	r2, #4294967295
9002cbb4:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002cbb8:	f10a 0a01 	add.w	sl, sl, #1
9002cbbc:	9304      	str	r3, [sp, #16]
9002cbbe:	9307      	str	r3, [sp, #28]
9002cbc0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
9002cbc4:	931a      	str	r3, [sp, #104]	@ 0x68
9002cbc6:	4654      	mov	r4, sl
9002cbc8:	2205      	movs	r2, #5
9002cbca:	f814 1b01 	ldrb.w	r1, [r4], #1
9002cbce:	4853      	ldr	r0, [pc, #332]	@ (9002cd1c <_vfiprintf_r+0x21c>)
9002cbd0:	f7d3 fb8e 	bl	900002f0 <memchr>
9002cbd4:	9a04      	ldr	r2, [sp, #16]
9002cbd6:	b9d8      	cbnz	r0, 9002cc10 <_vfiprintf_r+0x110>
9002cbd8:	06d1      	lsls	r1, r2, #27
9002cbda:	bf44      	itt	mi
9002cbdc:	2320      	movmi	r3, #32
9002cbde:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002cbe2:	0713      	lsls	r3, r2, #28
9002cbe4:	bf44      	itt	mi
9002cbe6:	232b      	movmi	r3, #43	@ 0x2b
9002cbe8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
9002cbec:	f89a 3000 	ldrb.w	r3, [sl]
9002cbf0:	2b2a      	cmp	r3, #42	@ 0x2a
9002cbf2:	d015      	beq.n	9002cc20 <_vfiprintf_r+0x120>
9002cbf4:	9a07      	ldr	r2, [sp, #28]
9002cbf6:	4654      	mov	r4, sl
9002cbf8:	2000      	movs	r0, #0
9002cbfa:	f04f 0c0a 	mov.w	ip, #10
9002cbfe:	4621      	mov	r1, r4
9002cc00:	f811 3b01 	ldrb.w	r3, [r1], #1
9002cc04:	3b30      	subs	r3, #48	@ 0x30
9002cc06:	2b09      	cmp	r3, #9
9002cc08:	d94b      	bls.n	9002cca2 <_vfiprintf_r+0x1a2>
9002cc0a:	b1b0      	cbz	r0, 9002cc3a <_vfiprintf_r+0x13a>
9002cc0c:	9207      	str	r2, [sp, #28]
9002cc0e:	e014      	b.n	9002cc3a <_vfiprintf_r+0x13a>
9002cc10:	eba0 0308 	sub.w	r3, r0, r8
9002cc14:	fa09 f303 	lsl.w	r3, r9, r3
9002cc18:	4313      	orrs	r3, r2
9002cc1a:	9304      	str	r3, [sp, #16]
9002cc1c:	46a2      	mov	sl, r4
9002cc1e:	e7d2      	b.n	9002cbc6 <_vfiprintf_r+0xc6>
9002cc20:	9b03      	ldr	r3, [sp, #12]
9002cc22:	1d19      	adds	r1, r3, #4
9002cc24:	681b      	ldr	r3, [r3, #0]
9002cc26:	9103      	str	r1, [sp, #12]
9002cc28:	2b00      	cmp	r3, #0
9002cc2a:	bfbb      	ittet	lt
9002cc2c:	425b      	neglt	r3, r3
9002cc2e:	f042 0202 	orrlt.w	r2, r2, #2
9002cc32:	9307      	strge	r3, [sp, #28]
9002cc34:	9307      	strlt	r3, [sp, #28]
9002cc36:	bfb8      	it	lt
9002cc38:	9204      	strlt	r2, [sp, #16]
9002cc3a:	7823      	ldrb	r3, [r4, #0]
9002cc3c:	2b2e      	cmp	r3, #46	@ 0x2e
9002cc3e:	d10a      	bne.n	9002cc56 <_vfiprintf_r+0x156>
9002cc40:	7863      	ldrb	r3, [r4, #1]
9002cc42:	2b2a      	cmp	r3, #42	@ 0x2a
9002cc44:	d132      	bne.n	9002ccac <_vfiprintf_r+0x1ac>
9002cc46:	9b03      	ldr	r3, [sp, #12]
9002cc48:	1d1a      	adds	r2, r3, #4
9002cc4a:	681b      	ldr	r3, [r3, #0]
9002cc4c:	9203      	str	r2, [sp, #12]
9002cc4e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
9002cc52:	3402      	adds	r4, #2
9002cc54:	9305      	str	r3, [sp, #20]
9002cc56:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002cd2c <_vfiprintf_r+0x22c>
9002cc5a:	7821      	ldrb	r1, [r4, #0]
9002cc5c:	2203      	movs	r2, #3
9002cc5e:	4650      	mov	r0, sl
9002cc60:	f7d3 fb46 	bl	900002f0 <memchr>
9002cc64:	b138      	cbz	r0, 9002cc76 <_vfiprintf_r+0x176>
9002cc66:	9b04      	ldr	r3, [sp, #16]
9002cc68:	eba0 000a 	sub.w	r0, r0, sl
9002cc6c:	2240      	movs	r2, #64	@ 0x40
9002cc6e:	4082      	lsls	r2, r0
9002cc70:	4313      	orrs	r3, r2
9002cc72:	3401      	adds	r4, #1
9002cc74:	9304      	str	r3, [sp, #16]
9002cc76:	f814 1b01 	ldrb.w	r1, [r4], #1
9002cc7a:	4829      	ldr	r0, [pc, #164]	@ (9002cd20 <_vfiprintf_r+0x220>)
9002cc7c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
9002cc80:	2206      	movs	r2, #6
9002cc82:	f7d3 fb35 	bl	900002f0 <memchr>
9002cc86:	2800      	cmp	r0, #0
9002cc88:	d03f      	beq.n	9002cd0a <_vfiprintf_r+0x20a>
9002cc8a:	4b26      	ldr	r3, [pc, #152]	@ (9002cd24 <_vfiprintf_r+0x224>)
9002cc8c:	bb1b      	cbnz	r3, 9002ccd6 <_vfiprintf_r+0x1d6>
9002cc8e:	9b03      	ldr	r3, [sp, #12]
9002cc90:	3307      	adds	r3, #7
9002cc92:	f023 0307 	bic.w	r3, r3, #7
9002cc96:	3308      	adds	r3, #8
9002cc98:	9303      	str	r3, [sp, #12]
9002cc9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002cc9c:	443b      	add	r3, r7
9002cc9e:	9309      	str	r3, [sp, #36]	@ 0x24
9002cca0:	e76a      	b.n	9002cb78 <_vfiprintf_r+0x78>
9002cca2:	fb0c 3202 	mla	r2, ip, r2, r3
9002cca6:	460c      	mov	r4, r1
9002cca8:	2001      	movs	r0, #1
9002ccaa:	e7a8      	b.n	9002cbfe <_vfiprintf_r+0xfe>
9002ccac:	2300      	movs	r3, #0
9002ccae:	3401      	adds	r4, #1
9002ccb0:	9305      	str	r3, [sp, #20]
9002ccb2:	4619      	mov	r1, r3
9002ccb4:	f04f 0c0a 	mov.w	ip, #10
9002ccb8:	4620      	mov	r0, r4
9002ccba:	f810 2b01 	ldrb.w	r2, [r0], #1
9002ccbe:	3a30      	subs	r2, #48	@ 0x30
9002ccc0:	2a09      	cmp	r2, #9
9002ccc2:	d903      	bls.n	9002cccc <_vfiprintf_r+0x1cc>
9002ccc4:	2b00      	cmp	r3, #0
9002ccc6:	d0c6      	beq.n	9002cc56 <_vfiprintf_r+0x156>
9002ccc8:	9105      	str	r1, [sp, #20]
9002ccca:	e7c4      	b.n	9002cc56 <_vfiprintf_r+0x156>
9002cccc:	fb0c 2101 	mla	r1, ip, r1, r2
9002ccd0:	4604      	mov	r4, r0
9002ccd2:	2301      	movs	r3, #1
9002ccd4:	e7f0      	b.n	9002ccb8 <_vfiprintf_r+0x1b8>
9002ccd6:	ab03      	add	r3, sp, #12
9002ccd8:	9300      	str	r3, [sp, #0]
9002ccda:	462a      	mov	r2, r5
9002ccdc:	4b12      	ldr	r3, [pc, #72]	@ (9002cd28 <_vfiprintf_r+0x228>)
9002ccde:	a904      	add	r1, sp, #16
9002cce0:	4630      	mov	r0, r6
9002cce2:	f3af 8000 	nop.w
9002cce6:	4607      	mov	r7, r0
9002cce8:	1c78      	adds	r0, r7, #1
9002ccea:	d1d6      	bne.n	9002cc9a <_vfiprintf_r+0x19a>
9002ccec:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002ccee:	07d9      	lsls	r1, r3, #31
9002ccf0:	d405      	bmi.n	9002ccfe <_vfiprintf_r+0x1fe>
9002ccf2:	89ab      	ldrh	r3, [r5, #12]
9002ccf4:	059a      	lsls	r2, r3, #22
9002ccf6:	d402      	bmi.n	9002ccfe <_vfiprintf_r+0x1fe>
9002ccf8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002ccfa:	f7ff fe21 	bl	9002c940 <__retarget_lock_release_recursive>
9002ccfe:	89ab      	ldrh	r3, [r5, #12]
9002cd00:	065b      	lsls	r3, r3, #25
9002cd02:	f53f af1f 	bmi.w	9002cb44 <_vfiprintf_r+0x44>
9002cd06:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002cd08:	e71e      	b.n	9002cb48 <_vfiprintf_r+0x48>
9002cd0a:	ab03      	add	r3, sp, #12
9002cd0c:	9300      	str	r3, [sp, #0]
9002cd0e:	462a      	mov	r2, r5
9002cd10:	4b05      	ldr	r3, [pc, #20]	@ (9002cd28 <_vfiprintf_r+0x228>)
9002cd12:	a904      	add	r1, sp, #16
9002cd14:	4630      	mov	r0, r6
9002cd16:	f000 f879 	bl	9002ce0c <_printf_i>
9002cd1a:	e7e4      	b.n	9002cce6 <_vfiprintf_r+0x1e6>
9002cd1c:	90030b18 	.word	0x90030b18
9002cd20:	90030b22 	.word	0x90030b22
9002cd24:	00000000 	.word	0x00000000
9002cd28:	9002cadb 	.word	0x9002cadb
9002cd2c:	90030b1e 	.word	0x90030b1e

9002cd30 <_printf_common>:
9002cd30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002cd34:	4616      	mov	r6, r2
9002cd36:	4698      	mov	r8, r3
9002cd38:	688a      	ldr	r2, [r1, #8]
9002cd3a:	690b      	ldr	r3, [r1, #16]
9002cd3c:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002cd40:	4293      	cmp	r3, r2
9002cd42:	bfb8      	it	lt
9002cd44:	4613      	movlt	r3, r2
9002cd46:	6033      	str	r3, [r6, #0]
9002cd48:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002cd4c:	4607      	mov	r7, r0
9002cd4e:	460c      	mov	r4, r1
9002cd50:	b10a      	cbz	r2, 9002cd56 <_printf_common+0x26>
9002cd52:	3301      	adds	r3, #1
9002cd54:	6033      	str	r3, [r6, #0]
9002cd56:	6823      	ldr	r3, [r4, #0]
9002cd58:	0699      	lsls	r1, r3, #26
9002cd5a:	bf42      	ittt	mi
9002cd5c:	6833      	ldrmi	r3, [r6, #0]
9002cd5e:	3302      	addmi	r3, #2
9002cd60:	6033      	strmi	r3, [r6, #0]
9002cd62:	6825      	ldr	r5, [r4, #0]
9002cd64:	f015 0506 	ands.w	r5, r5, #6
9002cd68:	d106      	bne.n	9002cd78 <_printf_common+0x48>
9002cd6a:	f104 0a19 	add.w	sl, r4, #25
9002cd6e:	68e3      	ldr	r3, [r4, #12]
9002cd70:	6832      	ldr	r2, [r6, #0]
9002cd72:	1a9b      	subs	r3, r3, r2
9002cd74:	42ab      	cmp	r3, r5
9002cd76:	dc26      	bgt.n	9002cdc6 <_printf_common+0x96>
9002cd78:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002cd7c:	6822      	ldr	r2, [r4, #0]
9002cd7e:	3b00      	subs	r3, #0
9002cd80:	bf18      	it	ne
9002cd82:	2301      	movne	r3, #1
9002cd84:	0692      	lsls	r2, r2, #26
9002cd86:	d42b      	bmi.n	9002cde0 <_printf_common+0xb0>
9002cd88:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002cd8c:	4641      	mov	r1, r8
9002cd8e:	4638      	mov	r0, r7
9002cd90:	47c8      	blx	r9
9002cd92:	3001      	adds	r0, #1
9002cd94:	d01e      	beq.n	9002cdd4 <_printf_common+0xa4>
9002cd96:	6823      	ldr	r3, [r4, #0]
9002cd98:	6922      	ldr	r2, [r4, #16]
9002cd9a:	f003 0306 	and.w	r3, r3, #6
9002cd9e:	2b04      	cmp	r3, #4
9002cda0:	bf02      	ittt	eq
9002cda2:	68e5      	ldreq	r5, [r4, #12]
9002cda4:	6833      	ldreq	r3, [r6, #0]
9002cda6:	1aed      	subeq	r5, r5, r3
9002cda8:	68a3      	ldr	r3, [r4, #8]
9002cdaa:	bf0c      	ite	eq
9002cdac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002cdb0:	2500      	movne	r5, #0
9002cdb2:	4293      	cmp	r3, r2
9002cdb4:	bfc4      	itt	gt
9002cdb6:	1a9b      	subgt	r3, r3, r2
9002cdb8:	18ed      	addgt	r5, r5, r3
9002cdba:	2600      	movs	r6, #0
9002cdbc:	341a      	adds	r4, #26
9002cdbe:	42b5      	cmp	r5, r6
9002cdc0:	d11a      	bne.n	9002cdf8 <_printf_common+0xc8>
9002cdc2:	2000      	movs	r0, #0
9002cdc4:	e008      	b.n	9002cdd8 <_printf_common+0xa8>
9002cdc6:	2301      	movs	r3, #1
9002cdc8:	4652      	mov	r2, sl
9002cdca:	4641      	mov	r1, r8
9002cdcc:	4638      	mov	r0, r7
9002cdce:	47c8      	blx	r9
9002cdd0:	3001      	adds	r0, #1
9002cdd2:	d103      	bne.n	9002cddc <_printf_common+0xac>
9002cdd4:	f04f 30ff 	mov.w	r0, #4294967295
9002cdd8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002cddc:	3501      	adds	r5, #1
9002cdde:	e7c6      	b.n	9002cd6e <_printf_common+0x3e>
9002cde0:	18e1      	adds	r1, r4, r3
9002cde2:	1c5a      	adds	r2, r3, #1
9002cde4:	2030      	movs	r0, #48	@ 0x30
9002cde6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002cdea:	4422      	add	r2, r4
9002cdec:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002cdf0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002cdf4:	3302      	adds	r3, #2
9002cdf6:	e7c7      	b.n	9002cd88 <_printf_common+0x58>
9002cdf8:	2301      	movs	r3, #1
9002cdfa:	4622      	mov	r2, r4
9002cdfc:	4641      	mov	r1, r8
9002cdfe:	4638      	mov	r0, r7
9002ce00:	47c8      	blx	r9
9002ce02:	3001      	adds	r0, #1
9002ce04:	d0e6      	beq.n	9002cdd4 <_printf_common+0xa4>
9002ce06:	3601      	adds	r6, #1
9002ce08:	e7d9      	b.n	9002cdbe <_printf_common+0x8e>
	...

9002ce0c <_printf_i>:
9002ce0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002ce10:	7e0f      	ldrb	r7, [r1, #24]
9002ce12:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002ce14:	2f78      	cmp	r7, #120	@ 0x78
9002ce16:	4691      	mov	r9, r2
9002ce18:	4680      	mov	r8, r0
9002ce1a:	460c      	mov	r4, r1
9002ce1c:	469a      	mov	sl, r3
9002ce1e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002ce22:	d807      	bhi.n	9002ce34 <_printf_i+0x28>
9002ce24:	2f62      	cmp	r7, #98	@ 0x62
9002ce26:	d80a      	bhi.n	9002ce3e <_printf_i+0x32>
9002ce28:	2f00      	cmp	r7, #0
9002ce2a:	f000 80d2 	beq.w	9002cfd2 <_printf_i+0x1c6>
9002ce2e:	2f58      	cmp	r7, #88	@ 0x58
9002ce30:	f000 80b9 	beq.w	9002cfa6 <_printf_i+0x19a>
9002ce34:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002ce38:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002ce3c:	e03a      	b.n	9002ceb4 <_printf_i+0xa8>
9002ce3e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002ce42:	2b15      	cmp	r3, #21
9002ce44:	d8f6      	bhi.n	9002ce34 <_printf_i+0x28>
9002ce46:	a101      	add	r1, pc, #4	@ (adr r1, 9002ce4c <_printf_i+0x40>)
9002ce48:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002ce4c:	9002cea5 	.word	0x9002cea5
9002ce50:	9002ceb9 	.word	0x9002ceb9
9002ce54:	9002ce35 	.word	0x9002ce35
9002ce58:	9002ce35 	.word	0x9002ce35
9002ce5c:	9002ce35 	.word	0x9002ce35
9002ce60:	9002ce35 	.word	0x9002ce35
9002ce64:	9002ceb9 	.word	0x9002ceb9
9002ce68:	9002ce35 	.word	0x9002ce35
9002ce6c:	9002ce35 	.word	0x9002ce35
9002ce70:	9002ce35 	.word	0x9002ce35
9002ce74:	9002ce35 	.word	0x9002ce35
9002ce78:	9002cfb9 	.word	0x9002cfb9
9002ce7c:	9002cee3 	.word	0x9002cee3
9002ce80:	9002cf73 	.word	0x9002cf73
9002ce84:	9002ce35 	.word	0x9002ce35
9002ce88:	9002ce35 	.word	0x9002ce35
9002ce8c:	9002cfdb 	.word	0x9002cfdb
9002ce90:	9002ce35 	.word	0x9002ce35
9002ce94:	9002cee3 	.word	0x9002cee3
9002ce98:	9002ce35 	.word	0x9002ce35
9002ce9c:	9002ce35 	.word	0x9002ce35
9002cea0:	9002cf7b 	.word	0x9002cf7b
9002cea4:	6833      	ldr	r3, [r6, #0]
9002cea6:	1d1a      	adds	r2, r3, #4
9002cea8:	681b      	ldr	r3, [r3, #0]
9002ceaa:	6032      	str	r2, [r6, #0]
9002ceac:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002ceb0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002ceb4:	2301      	movs	r3, #1
9002ceb6:	e09d      	b.n	9002cff4 <_printf_i+0x1e8>
9002ceb8:	6833      	ldr	r3, [r6, #0]
9002ceba:	6820      	ldr	r0, [r4, #0]
9002cebc:	1d19      	adds	r1, r3, #4
9002cebe:	6031      	str	r1, [r6, #0]
9002cec0:	0606      	lsls	r6, r0, #24
9002cec2:	d501      	bpl.n	9002cec8 <_printf_i+0xbc>
9002cec4:	681d      	ldr	r5, [r3, #0]
9002cec6:	e003      	b.n	9002ced0 <_printf_i+0xc4>
9002cec8:	0645      	lsls	r5, r0, #25
9002ceca:	d5fb      	bpl.n	9002cec4 <_printf_i+0xb8>
9002cecc:	f9b3 5000 	ldrsh.w	r5, [r3]
9002ced0:	2d00      	cmp	r5, #0
9002ced2:	da03      	bge.n	9002cedc <_printf_i+0xd0>
9002ced4:	232d      	movs	r3, #45	@ 0x2d
9002ced6:	426d      	negs	r5, r5
9002ced8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002cedc:	4859      	ldr	r0, [pc, #356]	@ (9002d044 <_printf_i+0x238>)
9002cede:	230a      	movs	r3, #10
9002cee0:	e011      	b.n	9002cf06 <_printf_i+0xfa>
9002cee2:	6821      	ldr	r1, [r4, #0]
9002cee4:	6833      	ldr	r3, [r6, #0]
9002cee6:	0608      	lsls	r0, r1, #24
9002cee8:	f853 5b04 	ldr.w	r5, [r3], #4
9002ceec:	d402      	bmi.n	9002cef4 <_printf_i+0xe8>
9002ceee:	0649      	lsls	r1, r1, #25
9002cef0:	bf48      	it	mi
9002cef2:	b2ad      	uxthmi	r5, r5
9002cef4:	2f6f      	cmp	r7, #111	@ 0x6f
9002cef6:	4853      	ldr	r0, [pc, #332]	@ (9002d044 <_printf_i+0x238>)
9002cef8:	6033      	str	r3, [r6, #0]
9002cefa:	bf14      	ite	ne
9002cefc:	230a      	movne	r3, #10
9002cefe:	2308      	moveq	r3, #8
9002cf00:	2100      	movs	r1, #0
9002cf02:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002cf06:	6866      	ldr	r6, [r4, #4]
9002cf08:	60a6      	str	r6, [r4, #8]
9002cf0a:	2e00      	cmp	r6, #0
9002cf0c:	bfa2      	ittt	ge
9002cf0e:	6821      	ldrge	r1, [r4, #0]
9002cf10:	f021 0104 	bicge.w	r1, r1, #4
9002cf14:	6021      	strge	r1, [r4, #0]
9002cf16:	b90d      	cbnz	r5, 9002cf1c <_printf_i+0x110>
9002cf18:	2e00      	cmp	r6, #0
9002cf1a:	d04b      	beq.n	9002cfb4 <_printf_i+0x1a8>
9002cf1c:	4616      	mov	r6, r2
9002cf1e:	fbb5 f1f3 	udiv	r1, r5, r3
9002cf22:	fb03 5711 	mls	r7, r3, r1, r5
9002cf26:	5dc7      	ldrb	r7, [r0, r7]
9002cf28:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002cf2c:	462f      	mov	r7, r5
9002cf2e:	42bb      	cmp	r3, r7
9002cf30:	460d      	mov	r5, r1
9002cf32:	d9f4      	bls.n	9002cf1e <_printf_i+0x112>
9002cf34:	2b08      	cmp	r3, #8
9002cf36:	d10b      	bne.n	9002cf50 <_printf_i+0x144>
9002cf38:	6823      	ldr	r3, [r4, #0]
9002cf3a:	07df      	lsls	r7, r3, #31
9002cf3c:	d508      	bpl.n	9002cf50 <_printf_i+0x144>
9002cf3e:	6923      	ldr	r3, [r4, #16]
9002cf40:	6861      	ldr	r1, [r4, #4]
9002cf42:	4299      	cmp	r1, r3
9002cf44:	bfde      	ittt	le
9002cf46:	2330      	movle	r3, #48	@ 0x30
9002cf48:	f806 3c01 	strble.w	r3, [r6, #-1]
9002cf4c:	f106 36ff 	addle.w	r6, r6, #4294967295
9002cf50:	1b92      	subs	r2, r2, r6
9002cf52:	6122      	str	r2, [r4, #16]
9002cf54:	f8cd a000 	str.w	sl, [sp]
9002cf58:	464b      	mov	r3, r9
9002cf5a:	aa03      	add	r2, sp, #12
9002cf5c:	4621      	mov	r1, r4
9002cf5e:	4640      	mov	r0, r8
9002cf60:	f7ff fee6 	bl	9002cd30 <_printf_common>
9002cf64:	3001      	adds	r0, #1
9002cf66:	d14a      	bne.n	9002cffe <_printf_i+0x1f2>
9002cf68:	f04f 30ff 	mov.w	r0, #4294967295
9002cf6c:	b004      	add	sp, #16
9002cf6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002cf72:	6823      	ldr	r3, [r4, #0]
9002cf74:	f043 0320 	orr.w	r3, r3, #32
9002cf78:	6023      	str	r3, [r4, #0]
9002cf7a:	4833      	ldr	r0, [pc, #204]	@ (9002d048 <_printf_i+0x23c>)
9002cf7c:	2778      	movs	r7, #120	@ 0x78
9002cf7e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002cf82:	6823      	ldr	r3, [r4, #0]
9002cf84:	6831      	ldr	r1, [r6, #0]
9002cf86:	061f      	lsls	r7, r3, #24
9002cf88:	f851 5b04 	ldr.w	r5, [r1], #4
9002cf8c:	d402      	bmi.n	9002cf94 <_printf_i+0x188>
9002cf8e:	065f      	lsls	r7, r3, #25
9002cf90:	bf48      	it	mi
9002cf92:	b2ad      	uxthmi	r5, r5
9002cf94:	6031      	str	r1, [r6, #0]
9002cf96:	07d9      	lsls	r1, r3, #31
9002cf98:	bf44      	itt	mi
9002cf9a:	f043 0320 	orrmi.w	r3, r3, #32
9002cf9e:	6023      	strmi	r3, [r4, #0]
9002cfa0:	b11d      	cbz	r5, 9002cfaa <_printf_i+0x19e>
9002cfa2:	2310      	movs	r3, #16
9002cfa4:	e7ac      	b.n	9002cf00 <_printf_i+0xf4>
9002cfa6:	4827      	ldr	r0, [pc, #156]	@ (9002d044 <_printf_i+0x238>)
9002cfa8:	e7e9      	b.n	9002cf7e <_printf_i+0x172>
9002cfaa:	6823      	ldr	r3, [r4, #0]
9002cfac:	f023 0320 	bic.w	r3, r3, #32
9002cfb0:	6023      	str	r3, [r4, #0]
9002cfb2:	e7f6      	b.n	9002cfa2 <_printf_i+0x196>
9002cfb4:	4616      	mov	r6, r2
9002cfb6:	e7bd      	b.n	9002cf34 <_printf_i+0x128>
9002cfb8:	6833      	ldr	r3, [r6, #0]
9002cfba:	6825      	ldr	r5, [r4, #0]
9002cfbc:	6961      	ldr	r1, [r4, #20]
9002cfbe:	1d18      	adds	r0, r3, #4
9002cfc0:	6030      	str	r0, [r6, #0]
9002cfc2:	062e      	lsls	r6, r5, #24
9002cfc4:	681b      	ldr	r3, [r3, #0]
9002cfc6:	d501      	bpl.n	9002cfcc <_printf_i+0x1c0>
9002cfc8:	6019      	str	r1, [r3, #0]
9002cfca:	e002      	b.n	9002cfd2 <_printf_i+0x1c6>
9002cfcc:	0668      	lsls	r0, r5, #25
9002cfce:	d5fb      	bpl.n	9002cfc8 <_printf_i+0x1bc>
9002cfd0:	8019      	strh	r1, [r3, #0]
9002cfd2:	2300      	movs	r3, #0
9002cfd4:	6123      	str	r3, [r4, #16]
9002cfd6:	4616      	mov	r6, r2
9002cfd8:	e7bc      	b.n	9002cf54 <_printf_i+0x148>
9002cfda:	6833      	ldr	r3, [r6, #0]
9002cfdc:	1d1a      	adds	r2, r3, #4
9002cfde:	6032      	str	r2, [r6, #0]
9002cfe0:	681e      	ldr	r6, [r3, #0]
9002cfe2:	6862      	ldr	r2, [r4, #4]
9002cfe4:	2100      	movs	r1, #0
9002cfe6:	4630      	mov	r0, r6
9002cfe8:	f7d3 f982 	bl	900002f0 <memchr>
9002cfec:	b108      	cbz	r0, 9002cff2 <_printf_i+0x1e6>
9002cfee:	1b80      	subs	r0, r0, r6
9002cff0:	6060      	str	r0, [r4, #4]
9002cff2:	6863      	ldr	r3, [r4, #4]
9002cff4:	6123      	str	r3, [r4, #16]
9002cff6:	2300      	movs	r3, #0
9002cff8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002cffc:	e7aa      	b.n	9002cf54 <_printf_i+0x148>
9002cffe:	6923      	ldr	r3, [r4, #16]
9002d000:	4632      	mov	r2, r6
9002d002:	4649      	mov	r1, r9
9002d004:	4640      	mov	r0, r8
9002d006:	47d0      	blx	sl
9002d008:	3001      	adds	r0, #1
9002d00a:	d0ad      	beq.n	9002cf68 <_printf_i+0x15c>
9002d00c:	6823      	ldr	r3, [r4, #0]
9002d00e:	079b      	lsls	r3, r3, #30
9002d010:	d413      	bmi.n	9002d03a <_printf_i+0x22e>
9002d012:	68e0      	ldr	r0, [r4, #12]
9002d014:	9b03      	ldr	r3, [sp, #12]
9002d016:	4298      	cmp	r0, r3
9002d018:	bfb8      	it	lt
9002d01a:	4618      	movlt	r0, r3
9002d01c:	e7a6      	b.n	9002cf6c <_printf_i+0x160>
9002d01e:	2301      	movs	r3, #1
9002d020:	4632      	mov	r2, r6
9002d022:	4649      	mov	r1, r9
9002d024:	4640      	mov	r0, r8
9002d026:	47d0      	blx	sl
9002d028:	3001      	adds	r0, #1
9002d02a:	d09d      	beq.n	9002cf68 <_printf_i+0x15c>
9002d02c:	3501      	adds	r5, #1
9002d02e:	68e3      	ldr	r3, [r4, #12]
9002d030:	9903      	ldr	r1, [sp, #12]
9002d032:	1a5b      	subs	r3, r3, r1
9002d034:	42ab      	cmp	r3, r5
9002d036:	dcf2      	bgt.n	9002d01e <_printf_i+0x212>
9002d038:	e7eb      	b.n	9002d012 <_printf_i+0x206>
9002d03a:	2500      	movs	r5, #0
9002d03c:	f104 0619 	add.w	r6, r4, #25
9002d040:	e7f5      	b.n	9002d02e <_printf_i+0x222>
9002d042:	bf00      	nop
9002d044:	90030b29 	.word	0x90030b29
9002d048:	90030b3a 	.word	0x90030b3a

9002d04c <__sflush_r>:
9002d04c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002d050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002d054:	0716      	lsls	r6, r2, #28
9002d056:	4605      	mov	r5, r0
9002d058:	460c      	mov	r4, r1
9002d05a:	d454      	bmi.n	9002d106 <__sflush_r+0xba>
9002d05c:	684b      	ldr	r3, [r1, #4]
9002d05e:	2b00      	cmp	r3, #0
9002d060:	dc02      	bgt.n	9002d068 <__sflush_r+0x1c>
9002d062:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002d064:	2b00      	cmp	r3, #0
9002d066:	dd48      	ble.n	9002d0fa <__sflush_r+0xae>
9002d068:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002d06a:	2e00      	cmp	r6, #0
9002d06c:	d045      	beq.n	9002d0fa <__sflush_r+0xae>
9002d06e:	2300      	movs	r3, #0
9002d070:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002d074:	682f      	ldr	r7, [r5, #0]
9002d076:	6a21      	ldr	r1, [r4, #32]
9002d078:	602b      	str	r3, [r5, #0]
9002d07a:	d030      	beq.n	9002d0de <__sflush_r+0x92>
9002d07c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002d07e:	89a3      	ldrh	r3, [r4, #12]
9002d080:	0759      	lsls	r1, r3, #29
9002d082:	d505      	bpl.n	9002d090 <__sflush_r+0x44>
9002d084:	6863      	ldr	r3, [r4, #4]
9002d086:	1ad2      	subs	r2, r2, r3
9002d088:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002d08a:	b10b      	cbz	r3, 9002d090 <__sflush_r+0x44>
9002d08c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002d08e:	1ad2      	subs	r2, r2, r3
9002d090:	2300      	movs	r3, #0
9002d092:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002d094:	6a21      	ldr	r1, [r4, #32]
9002d096:	4628      	mov	r0, r5
9002d098:	47b0      	blx	r6
9002d09a:	1c43      	adds	r3, r0, #1
9002d09c:	89a3      	ldrh	r3, [r4, #12]
9002d09e:	d106      	bne.n	9002d0ae <__sflush_r+0x62>
9002d0a0:	6829      	ldr	r1, [r5, #0]
9002d0a2:	291d      	cmp	r1, #29
9002d0a4:	d82b      	bhi.n	9002d0fe <__sflush_r+0xb2>
9002d0a6:	4a2a      	ldr	r2, [pc, #168]	@ (9002d150 <__sflush_r+0x104>)
9002d0a8:	410a      	asrs	r2, r1
9002d0aa:	07d6      	lsls	r6, r2, #31
9002d0ac:	d427      	bmi.n	9002d0fe <__sflush_r+0xb2>
9002d0ae:	2200      	movs	r2, #0
9002d0b0:	6062      	str	r2, [r4, #4]
9002d0b2:	04d9      	lsls	r1, r3, #19
9002d0b4:	6922      	ldr	r2, [r4, #16]
9002d0b6:	6022      	str	r2, [r4, #0]
9002d0b8:	d504      	bpl.n	9002d0c4 <__sflush_r+0x78>
9002d0ba:	1c42      	adds	r2, r0, #1
9002d0bc:	d101      	bne.n	9002d0c2 <__sflush_r+0x76>
9002d0be:	682b      	ldr	r3, [r5, #0]
9002d0c0:	b903      	cbnz	r3, 9002d0c4 <__sflush_r+0x78>
9002d0c2:	6560      	str	r0, [r4, #84]	@ 0x54
9002d0c4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002d0c6:	602f      	str	r7, [r5, #0]
9002d0c8:	b1b9      	cbz	r1, 9002d0fa <__sflush_r+0xae>
9002d0ca:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002d0ce:	4299      	cmp	r1, r3
9002d0d0:	d002      	beq.n	9002d0d8 <__sflush_r+0x8c>
9002d0d2:	4628      	mov	r0, r5
9002d0d4:	f7ff fca0 	bl	9002ca18 <_free_r>
9002d0d8:	2300      	movs	r3, #0
9002d0da:	6363      	str	r3, [r4, #52]	@ 0x34
9002d0dc:	e00d      	b.n	9002d0fa <__sflush_r+0xae>
9002d0de:	2301      	movs	r3, #1
9002d0e0:	4628      	mov	r0, r5
9002d0e2:	47b0      	blx	r6
9002d0e4:	4602      	mov	r2, r0
9002d0e6:	1c50      	adds	r0, r2, #1
9002d0e8:	d1c9      	bne.n	9002d07e <__sflush_r+0x32>
9002d0ea:	682b      	ldr	r3, [r5, #0]
9002d0ec:	2b00      	cmp	r3, #0
9002d0ee:	d0c6      	beq.n	9002d07e <__sflush_r+0x32>
9002d0f0:	2b1d      	cmp	r3, #29
9002d0f2:	d001      	beq.n	9002d0f8 <__sflush_r+0xac>
9002d0f4:	2b16      	cmp	r3, #22
9002d0f6:	d11e      	bne.n	9002d136 <__sflush_r+0xea>
9002d0f8:	602f      	str	r7, [r5, #0]
9002d0fa:	2000      	movs	r0, #0
9002d0fc:	e022      	b.n	9002d144 <__sflush_r+0xf8>
9002d0fe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002d102:	b21b      	sxth	r3, r3
9002d104:	e01b      	b.n	9002d13e <__sflush_r+0xf2>
9002d106:	690f      	ldr	r7, [r1, #16]
9002d108:	2f00      	cmp	r7, #0
9002d10a:	d0f6      	beq.n	9002d0fa <__sflush_r+0xae>
9002d10c:	0793      	lsls	r3, r2, #30
9002d10e:	680e      	ldr	r6, [r1, #0]
9002d110:	bf08      	it	eq
9002d112:	694b      	ldreq	r3, [r1, #20]
9002d114:	600f      	str	r7, [r1, #0]
9002d116:	bf18      	it	ne
9002d118:	2300      	movne	r3, #0
9002d11a:	eba6 0807 	sub.w	r8, r6, r7
9002d11e:	608b      	str	r3, [r1, #8]
9002d120:	f1b8 0f00 	cmp.w	r8, #0
9002d124:	dde9      	ble.n	9002d0fa <__sflush_r+0xae>
9002d126:	6a21      	ldr	r1, [r4, #32]
9002d128:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002d12a:	4643      	mov	r3, r8
9002d12c:	463a      	mov	r2, r7
9002d12e:	4628      	mov	r0, r5
9002d130:	47b0      	blx	r6
9002d132:	2800      	cmp	r0, #0
9002d134:	dc08      	bgt.n	9002d148 <__sflush_r+0xfc>
9002d136:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002d13a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002d13e:	81a3      	strh	r3, [r4, #12]
9002d140:	f04f 30ff 	mov.w	r0, #4294967295
9002d144:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002d148:	4407      	add	r7, r0
9002d14a:	eba8 0800 	sub.w	r8, r8, r0
9002d14e:	e7e7      	b.n	9002d120 <__sflush_r+0xd4>
9002d150:	dfbffffe 	.word	0xdfbffffe

9002d154 <_fflush_r>:
9002d154:	b538      	push	{r3, r4, r5, lr}
9002d156:	690b      	ldr	r3, [r1, #16]
9002d158:	4605      	mov	r5, r0
9002d15a:	460c      	mov	r4, r1
9002d15c:	b913      	cbnz	r3, 9002d164 <_fflush_r+0x10>
9002d15e:	2500      	movs	r5, #0
9002d160:	4628      	mov	r0, r5
9002d162:	bd38      	pop	{r3, r4, r5, pc}
9002d164:	b118      	cbz	r0, 9002d16e <_fflush_r+0x1a>
9002d166:	6a03      	ldr	r3, [r0, #32]
9002d168:	b90b      	cbnz	r3, 9002d16e <_fflush_r+0x1a>
9002d16a:	f7ff f9e9 	bl	9002c540 <__sinit>
9002d16e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002d172:	2b00      	cmp	r3, #0
9002d174:	d0f3      	beq.n	9002d15e <_fflush_r+0xa>
9002d176:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002d178:	07d0      	lsls	r0, r2, #31
9002d17a:	d404      	bmi.n	9002d186 <_fflush_r+0x32>
9002d17c:	0599      	lsls	r1, r3, #22
9002d17e:	d402      	bmi.n	9002d186 <_fflush_r+0x32>
9002d180:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002d182:	f7ff fbdc 	bl	9002c93e <__retarget_lock_acquire_recursive>
9002d186:	4628      	mov	r0, r5
9002d188:	4621      	mov	r1, r4
9002d18a:	f7ff ff5f 	bl	9002d04c <__sflush_r>
9002d18e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002d190:	07da      	lsls	r2, r3, #31
9002d192:	4605      	mov	r5, r0
9002d194:	d4e4      	bmi.n	9002d160 <_fflush_r+0xc>
9002d196:	89a3      	ldrh	r3, [r4, #12]
9002d198:	059b      	lsls	r3, r3, #22
9002d19a:	d4e1      	bmi.n	9002d160 <_fflush_r+0xc>
9002d19c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002d19e:	f7ff fbcf 	bl	9002c940 <__retarget_lock_release_recursive>
9002d1a2:	e7dd      	b.n	9002d160 <_fflush_r+0xc>

9002d1a4 <__swhatbuf_r>:
9002d1a4:	b570      	push	{r4, r5, r6, lr}
9002d1a6:	460c      	mov	r4, r1
9002d1a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002d1ac:	2900      	cmp	r1, #0
9002d1ae:	b096      	sub	sp, #88	@ 0x58
9002d1b0:	4615      	mov	r5, r2
9002d1b2:	461e      	mov	r6, r3
9002d1b4:	da0d      	bge.n	9002d1d2 <__swhatbuf_r+0x2e>
9002d1b6:	89a3      	ldrh	r3, [r4, #12]
9002d1b8:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002d1bc:	f04f 0100 	mov.w	r1, #0
9002d1c0:	bf14      	ite	ne
9002d1c2:	2340      	movne	r3, #64	@ 0x40
9002d1c4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002d1c8:	2000      	movs	r0, #0
9002d1ca:	6031      	str	r1, [r6, #0]
9002d1cc:	602b      	str	r3, [r5, #0]
9002d1ce:	b016      	add	sp, #88	@ 0x58
9002d1d0:	bd70      	pop	{r4, r5, r6, pc}
9002d1d2:	466a      	mov	r2, sp
9002d1d4:	f000 f848 	bl	9002d268 <_fstat_r>
9002d1d8:	2800      	cmp	r0, #0
9002d1da:	dbec      	blt.n	9002d1b6 <__swhatbuf_r+0x12>
9002d1dc:	9901      	ldr	r1, [sp, #4]
9002d1de:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002d1e2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002d1e6:	4259      	negs	r1, r3
9002d1e8:	4159      	adcs	r1, r3
9002d1ea:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002d1ee:	e7eb      	b.n	9002d1c8 <__swhatbuf_r+0x24>

9002d1f0 <__smakebuf_r>:
9002d1f0:	898b      	ldrh	r3, [r1, #12]
9002d1f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002d1f4:	079d      	lsls	r5, r3, #30
9002d1f6:	4606      	mov	r6, r0
9002d1f8:	460c      	mov	r4, r1
9002d1fa:	d507      	bpl.n	9002d20c <__smakebuf_r+0x1c>
9002d1fc:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002d200:	6023      	str	r3, [r4, #0]
9002d202:	6123      	str	r3, [r4, #16]
9002d204:	2301      	movs	r3, #1
9002d206:	6163      	str	r3, [r4, #20]
9002d208:	b003      	add	sp, #12
9002d20a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002d20c:	ab01      	add	r3, sp, #4
9002d20e:	466a      	mov	r2, sp
9002d210:	f7ff ffc8 	bl	9002d1a4 <__swhatbuf_r>
9002d214:	9f00      	ldr	r7, [sp, #0]
9002d216:	4605      	mov	r5, r0
9002d218:	4639      	mov	r1, r7
9002d21a:	4630      	mov	r0, r6
9002d21c:	f7ff f86a 	bl	9002c2f4 <_malloc_r>
9002d220:	b948      	cbnz	r0, 9002d236 <__smakebuf_r+0x46>
9002d222:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002d226:	059a      	lsls	r2, r3, #22
9002d228:	d4ee      	bmi.n	9002d208 <__smakebuf_r+0x18>
9002d22a:	f023 0303 	bic.w	r3, r3, #3
9002d22e:	f043 0302 	orr.w	r3, r3, #2
9002d232:	81a3      	strh	r3, [r4, #12]
9002d234:	e7e2      	b.n	9002d1fc <__smakebuf_r+0xc>
9002d236:	89a3      	ldrh	r3, [r4, #12]
9002d238:	6020      	str	r0, [r4, #0]
9002d23a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002d23e:	81a3      	strh	r3, [r4, #12]
9002d240:	9b01      	ldr	r3, [sp, #4]
9002d242:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002d246:	b15b      	cbz	r3, 9002d260 <__smakebuf_r+0x70>
9002d248:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002d24c:	4630      	mov	r0, r6
9002d24e:	f000 f81d 	bl	9002d28c <_isatty_r>
9002d252:	b128      	cbz	r0, 9002d260 <__smakebuf_r+0x70>
9002d254:	89a3      	ldrh	r3, [r4, #12]
9002d256:	f023 0303 	bic.w	r3, r3, #3
9002d25a:	f043 0301 	orr.w	r3, r3, #1
9002d25e:	81a3      	strh	r3, [r4, #12]
9002d260:	89a3      	ldrh	r3, [r4, #12]
9002d262:	431d      	orrs	r5, r3
9002d264:	81a5      	strh	r5, [r4, #12]
9002d266:	e7cf      	b.n	9002d208 <__smakebuf_r+0x18>

9002d268 <_fstat_r>:
9002d268:	b538      	push	{r3, r4, r5, lr}
9002d26a:	4d07      	ldr	r5, [pc, #28]	@ (9002d288 <_fstat_r+0x20>)
9002d26c:	2300      	movs	r3, #0
9002d26e:	4604      	mov	r4, r0
9002d270:	4608      	mov	r0, r1
9002d272:	4611      	mov	r1, r2
9002d274:	602b      	str	r3, [r5, #0]
9002d276:	f7d7 fc65 	bl	90004b44 <_fstat>
9002d27a:	1c43      	adds	r3, r0, #1
9002d27c:	d102      	bne.n	9002d284 <_fstat_r+0x1c>
9002d27e:	682b      	ldr	r3, [r5, #0]
9002d280:	b103      	cbz	r3, 9002d284 <_fstat_r+0x1c>
9002d282:	6023      	str	r3, [r4, #0]
9002d284:	bd38      	pop	{r3, r4, r5, pc}
9002d286:	bf00      	nop
9002d288:	24025138 	.word	0x24025138

9002d28c <_isatty_r>:
9002d28c:	b538      	push	{r3, r4, r5, lr}
9002d28e:	4d06      	ldr	r5, [pc, #24]	@ (9002d2a8 <_isatty_r+0x1c>)
9002d290:	2300      	movs	r3, #0
9002d292:	4604      	mov	r4, r0
9002d294:	4608      	mov	r0, r1
9002d296:	602b      	str	r3, [r5, #0]
9002d298:	f7d7 fc5a 	bl	90004b50 <_isatty>
9002d29c:	1c43      	adds	r3, r0, #1
9002d29e:	d102      	bne.n	9002d2a6 <_isatty_r+0x1a>
9002d2a0:	682b      	ldr	r3, [r5, #0]
9002d2a2:	b103      	cbz	r3, 9002d2a6 <_isatty_r+0x1a>
9002d2a4:	6023      	str	r3, [r4, #0]
9002d2a6:	bd38      	pop	{r3, r4, r5, pc}
9002d2a8:	24025138 	.word	0x24025138

9002d2ac <_init>:
9002d2ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002d2ae:	bf00      	nop
9002d2b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002d2b2:	bc08      	pop	{r3}
9002d2b4:	469e      	mov	lr, r3
9002d2b6:	4770      	bx	lr

9002d2b8 <_fini>:
9002d2b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002d2ba:	bf00      	nop
9002d2bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002d2be:	bc08      	pop	{r3}
9002d2c0:	469e      	mov	lr, r3
9002d2c2:	4770      	bx	lr
